{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern /*\\s* sourceMappingURL=(.*).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23382\">https://nvd.nist.gov/vuln/detail/CVE-2021-23382</a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956\">https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1255641\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1255641</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-POSTCSS-1255640\">https://snyk.io/vuln/SNYK-JS-POSTCSS-1255640</a></li>\n<li><a href=\"https://github.com/postcss/postcss/releases/tag/7.0.36\">https://github.com/postcss/postcss/releases/tag/7.0.36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-566m-qj78-rww5\">https://github.com/advisories/GHSA-566m-qj78-rww5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-566m-qj78-rww5",
            "title": "[postcss] Regular Expression Denial of Service in postcss",
            "date_modified": "2022-02-23T20:31:17.000Z",
            "date_published": "2022-01-07T00:21:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-566m-qj78-rww5"
            }
        },
        {
            "content_html": "<p>The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern /*\\s* sourceMappingURL=(.*).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23382\">https://nvd.nist.gov/vuln/detail/CVE-2021-23382</a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956\">https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1255641\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1255641</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-POSTCSS-1255640\">https://snyk.io/vuln/SNYK-JS-POSTCSS-1255640</a></li>\n<li><a href=\"https://github.com/postcss/postcss/releases/tag/7.0.36\">https://github.com/postcss/postcss/releases/tag/7.0.36</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-566m-qj78-rww5\">https://github.com/advisories/GHSA-566m-qj78-rww5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-566m-qj78-rww5",
            "title": "[postcss] Regular Expression Denial of Service in postcss",
            "date_modified": "2022-02-23T20:31:17.000Z",
            "date_published": "2022-01-07T00:21:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-566m-qj78-rww5"
            }
        },
        {
            "content_html": "<p>Next.js is a React framework. Starting with version 10.0.0 and prior to version 12.1.0, Next.js is vulnerable to User Interface (UI) Misrepresentation of Critical Information. In order to be affected, the <code>next.config.js</code> file must have an <code>images.domains</code> array assigned and the image host assigned in <code>images.domains</code> must allow user-provided SVG. If the <code>next.config.js</code> file has <code>images.loader</code> assigned to something other than default, the instance is not affected. Version 12.1.0 contains a patch for this issue. As a workaround, change <code>next.config.js</code> to use a different <code>loader configuration</code> other than the default.</p>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li><strong>Affected</strong>: All of the following must be true to be affected<ul>\n<li>Next.js between version 10.0.0 and 12.0.10</li>\n<li>The <code>next.config.js</code> file has <a href=\"https://nextjs.org/docs/api-reference/next/image#domains\">images.domains</a> array assigned</li>\n<li>The image host assigned in <a href=\"https://nextjs.org/docs/api-reference/next/image#domains\">images.domains</a> allows user-provided SVG</li>\n</ul>\n</li>\n<li><strong>Not affected</strong>: The <code>next.config.js</code> file has <a href=\"https://nextjs.org/docs/api-reference/next/image#loader-configuration\">images.loader</a> assigned to something other than default</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p><a href=\"https://github.com/vercel/next.js/releases/tag/v12.1.0\">Next.js 12.1.0</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Change <code>next.config.js</code> to use a different <a href=\"https://nextjs.org/docs/api-reference/next/image#loader-configuration\">loader configuration</a> other than the default, for example:</p>\n<pre><code class=\"language-js\">module.exports = {\n  images: {\n    loader: 'imgix',\n    path: 'https://example.com/myaccount/',\n  },\n}\n</code></pre>\n<p>Or if you want to use the <a href=\"https://nextjs.org/docs/api-reference/next/image#loader\"><code>loader</code></a> prop on the component, you can use <code>custom</code>:</p>\n<pre><code class=\"language-js\">module.exports = {\n  images: {\n    loader: 'custom',\n  },\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/security/advisories/GHSA-fmvm-x8mv-47mj\">https://github.com/vercel/next.js/security/advisories/GHSA-fmvm-x8mv-47mj</a></li>\n<li><a href=\"https://github.com/vercel/next.js/releases/tag/v12.1.0\">https://github.com/vercel/next.js/releases/tag/v12.1.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23646\">https://nvd.nist.gov/vuln/detail/CVE-2022-23646</a></li>\n<li><a href=\"https://github.com/vercel/next.js/pull/34075\">https://github.com/vercel/next.js/pull/34075</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmvm-x8mv-47mj\">https://github.com/advisories/GHSA-fmvm-x8mv-47mj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmvm-x8mv-47mj",
            "title": "[next] Improper CSP in Image Optimization API for Next.js versions between 10.0.0 and 12.1.0",
            "date_modified": "2022-02-23T15:26:34.000Z",
            "date_published": "2022-02-17T17:19:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmvm-x8mv-47mj"
            }
        },
        {
            "content_html": "<p>Authorization Bypass Through User-Controlled Key in NPM url-parse prior to 1.5.6.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0512\">https://nvd.nist.gov/vuln/detail/CVE-2022-0512</a></li>\n<li><a href=\"https://github.com/unshiftio/url-parse/commit/9be7ee88afd2bb04e4d5a1a8da9a389ac13f8c40\">https://github.com/unshiftio/url-parse/commit/9be7ee88afd2bb04e4d5a1a8da9a389ac13f8c40</a></li>\n<li><a href=\"https://huntr.dev/bounties/6d1bc51f-1876-4f5b-a2c2-734e09e8e05b\">https://huntr.dev/bounties/6d1bc51f-1876-4f5b-a2c2-734e09e8e05b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rqff-837h-mm52\">https://github.com/advisories/GHSA-rqff-837h-mm52</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rqff-837h-mm52",
            "title": "[url-parse] Authorization bypass in url-parse",
            "date_modified": "2022-02-24T14:01:29.000Z",
            "date_published": "2022-02-15T00:02:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rqff-837h-mm52"
            }
        },
        {
            "content_html": "<p>The package vm2 before 3.9.6 are vulnerable to Sandbox Bypass via direct access to host error objects generated by node internals during generation of a stacktraces, which can lead to execution of arbitrary code on the host machine.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23555\">https://nvd.nist.gov/vuln/detail/CVE-2021-23555</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/commit/532120d5cdec7da8225fc6242e154ebabc63fe4d\">https://github.com/patriksimek/vm2/commit/532120d5cdec7da8225fc6242e154ebabc63fe4d</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-VM2-2309905\">https://snyk.io/vuln/SNYK-JS-VM2-2309905</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pw2-5hjv-9pf7\">https://github.com/advisories/GHSA-6pw2-5hjv-9pf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pw2-5hjv-9pf7",
            "title": "[vm2] Sandbox bypass in vm2",
            "date_modified": "2022-02-24T13:46:57.000Z",
            "date_published": "2022-02-12T00:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pw2-5hjv-9pf7"
            }
        },
        {
            "content_html": "<p>Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0536\">https://nvd.nist.gov/vuln/detail/CVE-2022-0536</a></li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/62e546a99c07c3ee5e4e0718c84a6ca127c5c445\">https://github.com/follow-redirects/follow-redirects/commit/62e546a99c07c3ee5e4e0718c84a6ca127c5c445</a></li>\n<li><a href=\"https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db\">https://huntr.dev/bounties/7cf2bf90-52da-4d59-8028-a73b132de0db</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw2r-vq6v-hr8c\">https://github.com/advisories/GHSA-pw2r-vq6v-hr8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw2r-vq6v-hr8c",
            "title": "[follow-redirects] Exposure of Sensitive Information to an Unauthorized Actor in follow-redirects",
            "date_modified": "2022-02-14T22:27:57.000Z",
            "date_published": "2022-02-10T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw2r-vq6v-hr8c"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This is a bypass of CVE-2020-8136 (<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8136\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8136</a>).\nBy providing a <code>name=constructor</code> property it is still possible to crash the application.\nThe original fix only checks for the key <code>__proto__</code> (<a href=\"https://github.com/fastify/fastify-multipart/pull/116\">https://github.com/fastify/fastify-multipart/pull/116</a>).</p>\n<p>All users are recommended to upgrade</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v5.3.1 includes a patch</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds are possible.</p>\n<h3 id=\"references\">References</h3>\n<p>Read up <a href=\"https://www.fastify.io/docs/latest/Guides/Prototype-Poisoning/\">https://www.fastify.io/docs/latest/Guides/Prototype-Poisoning/</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/fastify/fastify-multipart\">https://github.com/fastify/fastify-multipart</a></li>\n<li>Email us at <a href=\"mailto:hello@matteocollina.com\">hello@matteocollina.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-multipart/security/advisories/GHSA-qh73-qc3p-rjv2\">https://github.com/fastify/fastify-multipart/security/advisories/GHSA-qh73-qc3p-rjv2</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/pull/116\">https://github.com/fastify/fastify-multipart/pull/116</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/commit/a70dc7059a794589bd4fe066453141fc609e6066\">https://github.com/fastify/fastify-multipart/commit/a70dc7059a794589bd4fe066453141fc609e6066</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/releases/tag/v5.3.1\">https://github.com/fastify/fastify-multipart/releases/tag/v5.3.1</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-FASTIFYMULTIPART-2395480\">https://snyk.io/vuln/SNYK-JS-FASTIFYMULTIPART-2395480</a></li>\n<li><a href=\"https://www.fastify.io/docs/latest/Guides/Prototype-Poisoning/\">https://www.fastify.io/docs/latest/Guides/Prototype-Poisoning/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23597\">https://nvd.nist.gov/vuln/detail/CVE-2021-23597</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qh73-qc3p-rjv2\">https://github.com/advisories/GHSA-qh73-qc3p-rjv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qh73-qc3p-rjv2",
            "title": "[fastify-multipart] Uncaught Exception in fastify-multipart",
            "date_modified": "2022-02-23T22:11:17.000Z",
            "date_published": "2022-02-11T18:57:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qh73-qc3p-rjv2"
            }
        },
        {
            "content_html": "<p>In OpenZeppelin &lt;=v4.4.0, initializer functions that are invoked separate from contract creation (the most prominent example being minimal proxies) may be reentered if they make an untrusted non-view external call. Once an initializer has finished running it can never be re-executed. However, an exception put in place to support multiple inheritance made reentrancy possible, breaking the expectation that there is a single execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx\">https://github.com/OpenZeppelin/openzeppelin-contracts/security/advisories/GHSA-9c22-pwxw-p6hx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-46320\">https://nvd.nist.gov/vuln/detail/CVE-2021-46320</a></li>\n<li><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3006\">https://github.com/OpenZeppelin/openzeppelin-contracts/pull/3006</a></li>\n<li><a href=\"https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.4.1\">https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-88g8-f5mf-f5rj\">https://github.com/advisories/GHSA-88g8-f5mf-f5rj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-88g8-f5mf-f5rj",
            "title": "[@openzeppelin/contracts] Improper Initialization in OpenZeppelin",
            "date_modified": "2022-02-11T22:47:19.000Z",
            "date_published": "2022-02-05T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-88g8-f5mf-f5rj"
            }
        },
        {
            "content_html": "<p>@peertube/embed-api version 4.0.0 and prior is vulnerable to server-side request forgery.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0508\">https://nvd.nist.gov/vuln/detail/CVE-2022-0508</a></li>\n<li><a href=\"https://github.com/chocobozzz/peertube/commit/f33e515991a32885622b217bf2ed1d1b0d9d6832\">https://github.com/chocobozzz/peertube/commit/f33e515991a32885622b217bf2ed1d1b0d9d6832</a></li>\n<li><a href=\"https://huntr.dev/bounties/c3724574-b6c9-430b-849b-40dd2b20f23c\">https://huntr.dev/bounties/c3724574-b6c9-430b-849b-40dd2b20f23c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mv26-cx23-vrfg\">https://github.com/advisories/GHSA-mv26-cx23-vrfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mv26-cx23-vrfg",
            "title": "[@peertube/embed-api] Server-Side Request Forgery in @peertube/embed-api",
            "date_modified": "2022-02-11T15:05:03.000Z",
            "date_published": "2022-02-09T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mv26-cx23-vrfg"
            }
        },
        {
            "content_html": "<p>The \"gitDiff\" function in Wayfair git-parse &lt;=1.0.4 has a command injection vulnerability. Clients of the git-parse library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-26543\">https://nvd.nist.gov/vuln/detail/CVE-2021-26543</a></li>\n<li><a href=\"https://www.npmjs.com/package/git-parse\">https://www.npmjs.com/package/git-parse</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m744-2jj8-vpfv\">https://github.com/advisories/GHSA-m744-2jj8-vpfv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m744-2jj8-vpfv",
            "title": "[git-parse] Command injection in git-parse",
            "date_modified": "2022-02-10T23:51:27.000Z",
            "date_published": "2022-02-10T23:51:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m744-2jj8-vpfv"
            }
        },
        {
            "content_html": "<p>op-browser through 1.0.9 is vulnerable to Command Injection. It allows execution of arbitrary commands via the url function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7625\">https://nvd.nist.gov/vuln/detail/CVE-2020-7625</a></li>\n<li><a href=\"https://github.com/hiproxy/open-browser/blob/master/lib/index.js#L75,\">https://github.com/hiproxy/open-browser/blob/master/lib/index.js#L75,</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-OPBROWSER-564259\">https://snyk.io/vuln/SNYK-JS-OPBROWSER-564259</a></li>\n<li><a href=\"https://github.com/hiproxy/open-browser/pull/3\">https://github.com/hiproxy/open-browser/pull/3</a></li>\n<li><a href=\"https://github.com/hiproxy/open-browser/pull/4\">https://github.com/hiproxy/open-browser/pull/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3hq6-rmv7-39vh\">https://github.com/advisories/GHSA-3hq6-rmv7-39vh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3hq6-rmv7-39vh",
            "title": "[op-browser] Injection in op-browser",
            "date_modified": "2022-02-10T23:45:35.000Z",
            "date_published": "2022-02-10T23:45:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3hq6-rmv7-39vh"
            }
        },
        {
            "content_html": "<p>Express-handlebars is a Handlebars view engine for Express. Express-handlebars mixes pure template data with engine configuration options through the Express render API. More specifically, the layout parameter may trigger file disclosure vulnerabilities in downstream applications. This potential vulnerability is somewhat restricted in that only files with existing extentions (i.e. file.extension) can be included, files that lack an extension will have .handlebars appended to them. For complete details refer to the referenced GHSL-2021-018 report. Notes in documentation have been added to help users avoid this potential information exposure vulnerability.</p>\n<p>A fix is discussed in <a href=\"https://github.com/express-handlebars/express-handlebars/pull/163\">https://github.com/express-handlebars/express-handlebars/pull/163</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32820\">https://nvd.nist.gov/vuln/detail/CVE-2021-32820</a></li>\n<li><a href=\"https://github.com/express-handlebars/express-handlebars/pull/163\">https://github.com/express-handlebars/express-handlebars/pull/163</a></li>\n<li><a href=\"https://github.com/express-handlebars/express-handlebars/commit/78c47a235c4ad7bc2674bddd8ec2721567ed8c72\">https://github.com/express-handlebars/express-handlebars/commit/78c47a235c4ad7bc2674bddd8ec2721567ed8c72</a></li>\n<li><a href=\"https://github.com/express-handlebars/express-handlebars#danger-\">https://github.com/express-handlebars/express-handlebars#danger-</a></li>\n<li><a href=\"https://github.com/express-handlebars/express-handlebars/blob/78c47a235c4ad7bc2674bddd8ec2721567ed8c72/README.md#danger-\">https://github.com/express-handlebars/express-handlebars/blob/78c47a235c4ad7bc2674bddd8ec2721567ed8c72/README.md#danger-</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-018-express-handlebars/\">https://securitylab.github.com/advisories/GHSL-2021-018-express-handlebars/</a></li>\n<li><a href=\"https://www.npmjs.com/package/express-handlebars\">https://www.npmjs.com/package/express-handlebars</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr76-2wp8-fp92\">https://github.com/advisories/GHSA-fr76-2wp8-fp92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr76-2wp8-fp92",
            "title": "[express-handlebars] Insecure template handling in Express-handlebars",
            "date_modified": "2022-02-10T23:35:42.000Z",
            "date_published": "2022-02-10T23:35:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr76-2wp8-fp92"
            }
        },
        {
            "content_html": "<p>Froala Editor before 3.0.6 allows XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19935\">https://nvd.nist.gov/vuln/detail/CVE-2019-19935</a></li>\n<li><a href=\"https://blog.compass-security.com/2020/07/yet-another-froala-0-day-xss/\">https://blog.compass-security.com/2020/07/yet-another-froala-0-day-xss/</a></li>\n<li><a href=\"https://compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2020-004_DOM_XSS_in_Froala_WYSIWYG_HTML_Editor.txt\">https://compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2020-004_DOM_XSS_in_Froala_WYSIWYG_HTML_Editor.txt</a></li>\n<li><a href=\"https://github.com/froala/wysiwyg-editor/compare/v3.0.5...v3.0.6\">https://github.com/froala/wysiwyg-editor/compare/v3.0.5...v3.0.6</a></li>\n<li><a href=\"https://snyk.io/vuln/npm:froala-editor\">https://snyk.io/vuln/npm:froala-editor</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/158300/Froala-WYSIWYG-HTML-Editor-3.1.1-Cross-Site-Scripting.html\">http://packetstormsecurity.com/files/158300/Froala-WYSIWYG-HTML-Editor-3.1.1-Cross-Site-Scripting.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h236-g5gh-vq6c\">https://github.com/advisories/GHSA-h236-g5gh-vq6c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h236-g5gh-vq6c",
            "title": "[froala-editor] Cross-site scripting in Froala Editor",
            "date_modified": "2022-02-10T23:33:00.000Z",
            "date_published": "2022-02-10T23:32:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h236-g5gh-vq6c"
            }
        },
        {
            "content_html": "<p>This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn 'mixes objects into the target object, recursively mixing existing child objects as well'. In both cases, the key used to access the target object recursively is not checked, leading to a Prototype Pollution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7792\">https://nvd.nist.gov/vuln/detail/CVE-2020-7792</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MOUT-1014544\">https://snyk.io/vuln/SNYK-JS-MOUT-1014544</a></li>\n<li><a href=\"https://github.com/mout/mout/commit/3fecf1333e6d71ae72edf48c71dc665e40df7605\">https://github.com/mout/mout/commit/3fecf1333e6d71ae72edf48c71dc665e40df7605</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pc58-wgmc-hfjr\">https://github.com/advisories/GHSA-pc58-wgmc-hfjr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pc58-wgmc-hfjr",
            "title": "[mout] Prototype Pollution in mout",
            "date_modified": "2022-02-09T22:49:20.000Z",
            "date_published": "2022-02-09T22:49:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pc58-wgmc-hfjr"
            }
        },
        {
            "content_html": "<p>In the jsrsasign package through 10.1.13 for Node.js, some invalid RSA PKCS#1 v1.5 signatures are mistakenly recognized to be valid. NOTE: there is no known practical attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30246\">https://nvd.nist.gov/vuln/detail/CVE-2021-30246</a></li>\n<li><a href=\"https://github.com/kjur/jsrsasign/issues/478\">https://github.com/kjur/jsrsasign/issues/478</a></li>\n<li><a href=\"https://github.com/kjur/jsrsasign/releases/tag/10.1.13\">https://github.com/kjur/jsrsasign/releases/tag/10.1.13</a></li>\n<li><a href=\"https://kjur.github.io/jsrsasign/\">https://kjur.github.io/jsrsasign/</a></li>\n<li><a href=\"https://github.com/kjur/jsrsasign/releases/tag/10.2.0\">https://github.com/kjur/jsrsasign/releases/tag/10.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h87q-g2wp-47pj\">https://github.com/advisories/GHSA-h87q-g2wp-47pj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h87q-g2wp-47pj",
            "title": "[jsrsasign] Signatures are mistakenly recognized to be valid in jsrsasign",
            "date_modified": "2022-02-09T22:41:37.000Z",
            "date_published": "2022-02-09T22:41:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h87q-g2wp-47pj"
            }
        },
        {
            "content_html": "<p>Certificate validation in node-sass 2.0.0 to 4.14.1 is disabled when requesting binaries even if the user is not specifying an alternative download path.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-24025\">https://nvd.nist.gov/vuln/detail/CVE-2020-24025</a></li>\n<li><a href=\"https://github.com/sass/node-sass/pull/567#issuecomment-656609236\">https://github.com/sass/node-sass/pull/567#issuecomment-656609236</a></li>\n<li><a href=\"https://github.com/sass/node-sass/issues/3067\">https://github.com/sass/node-sass/issues/3067</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8f7-9pfq-mjmv\">https://github.com/advisories/GHSA-r8f7-9pfq-mjmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8f7-9pfq-mjmv",
            "title": "[node-sass] Improper Certificate Validation in node-sass",
            "date_modified": "2022-02-10T11:35:22.000Z",
            "date_published": "2022-02-09T22:22:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8f7-9pfq-mjmv"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This is critical vulnerability, as it allows to run arbitrary code on any server using superjson input, including a Blitz.js server, without prior authentication or knowledge. Attackers gain full control over the server so they could steal and manipulate data or attack further systems. The only requirement is that the server implements at least one endpoint which uses superjson during request processing. In the case of Blitz.js, it would be at least one RPC call. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in superjson 1.8.1 and Blitz.js 0.45.3. </p>\n<p>If you are unable to upgrade to Blitz.js 0.45.3 in a timely manner, you can instead upgrade only superjson to version 1.8.1 using yarn resolutions are similar. Blitz versions &lt; 0.45.3 are only affected because they used superjson versions &lt; 1.8.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/blitz-js/superjson\">https://github.com/blitz-js/superjson</a></li>\n<li>Email us at <a href=\"mailto:b@bayer.ws\">b@bayer.ws</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/blitz-js/superjson/security/advisories/GHSA-5888-ffcr-r425\">https://github.com/blitz-js/superjson/security/advisories/GHSA-5888-ffcr-r425</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23631\">https://nvd.nist.gov/vuln/detail/CVE-2022-23631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5888-ffcr-r425\">https://github.com/advisories/GHSA-5888-ffcr-r425</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5888-ffcr-r425",
            "title": "[blitz] Prototype Pollution leading to Remote Code Execution in superjson",
            "date_modified": "2022-02-16T22:21:20.000Z",
            "date_published": "2022-02-09T22:20:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5888-ffcr-r425"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This is critical vulnerability, as it allows to run arbitrary code on any server using superjson input, including a Blitz.js server, without prior authentication or knowledge. Attackers gain full control over the server so they could steal and manipulate data or attack further systems. The only requirement is that the server implements at least one endpoint which uses superjson during request processing. In the case of Blitz.js, it would be at least one RPC call. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in superjson 1.8.1 and Blitz.js 0.45.3. </p>\n<p>If you are unable to upgrade to Blitz.js 0.45.3 in a timely manner, you can instead upgrade only superjson to version 1.8.1 using yarn resolutions are similar. Blitz versions &lt; 0.45.3 are only affected because they used superjson versions &lt; 1.8.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/blitz-js/superjson\">https://github.com/blitz-js/superjson</a></li>\n<li>Email us at <a href=\"mailto:b@bayer.ws\">b@bayer.ws</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/blitz-js/superjson/security/advisories/GHSA-5888-ffcr-r425\">https://github.com/blitz-js/superjson/security/advisories/GHSA-5888-ffcr-r425</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23631\">https://nvd.nist.gov/vuln/detail/CVE-2022-23631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5888-ffcr-r425\">https://github.com/advisories/GHSA-5888-ffcr-r425</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5888-ffcr-r425",
            "title": "[superjson] Prototype Pollution leading to Remote Code Execution in superjson",
            "date_modified": "2022-02-16T22:21:20.000Z",
            "date_published": "2022-02-09T22:20:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5888-ffcr-r425"
            }
        },
        {
            "content_html": "<h2 id=\"日本語\">日本語</h2>\n<h3 id=\"影響\">影響</h3>\n<p>v0.26.0以前のfrourioを使用している、かつvalidators/を利用している場合、ネストされたバリデータがリクエストのボディーとクエリに対して正しく働かないケースがあります。また、リクエストに対してバリデーションが効かなくなる入力があります。</p>\n<h3 id=\"パッチ\">パッチ</h3>\n<p>frourioをv0.26.0かそれ以降のバージョンにアップデートをお願いします。frourio を使用したプロジェクトには <code>class-transformer</code> と <code>reflect-metadata</code> の依存への追加も必要となります。</p>\n<h3 id=\"ワークアラウンド\">ワークアラウンド</h3>\n<p>controller側で自分でclass-transformerを使用してチェックする、vaildatorを使わない、など。</p>\n<h3 id=\"さらなる情報\">さらなる情報</h3>\n<p>このセキュリティ勧告に関する質問やコメントについては、以下の方法でお問い合わせいただけます。</p>\n<ul>\n<li><a href=\"https://github.com/frouriojs/frourio\">frourio</a>にIssueを開く。</li>\n</ul>\n<h2 id=\"english\">English</h2>\n<h3 id=\"impact\">Impact</h3>\n<p>Frourio users who uses frourio version prior to v0.26.0 and integration with class-validator through <code>validators/</code> folder. Validators does not work properly for request bodies and queries in specific situations. Addtionally, some kind of input is not validated. (false positives)</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please update your frourio to v0.26.0 or later. You also need to install <code>class-transformer</code> and <code>reflect-metadata</code> to your project.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Validate objects from request with class-transformer in controllers by yourself, or prevent using validators.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/frouriojs/frourio\">frourio</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/frouriojs/frourio-express/security/advisories/GHSA-mmj4-777p-fpq9\">https://github.com/frouriojs/frourio-express/security/advisories/GHSA-mmj4-777p-fpq9</a></li>\n<li><a href=\"https://github.com/frouriojs/frourio-express/commit/73ded5c6f9f1c126c0cb2d05c0505e9e4db142d2\">https://github.com/frouriojs/frourio-express/commit/73ded5c6f9f1c126c0cb2d05c0505e9e4db142d2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23624\">https://nvd.nist.gov/vuln/detail/CVE-2022-23624</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mmj4-777p-fpq9\">https://github.com/advisories/GHSA-mmj4-777p-fpq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mmj4-777p-fpq9",
            "title": "[frourio-express] Validation bypass in frourio-express",
            "date_modified": "2022-02-14T22:32:37.000Z",
            "date_published": "2022-02-07T22:38:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mmj4-777p-fpq9"
            }
        },
        {
            "content_html": "<h2 id=\"日本語\">日本語</h2>\n<h3 id=\"影響\">影響</h3>\n<p>v0.26.0以前のfrourioを使用している、かつvalidators/を利用している場合、ネストされたバリデータがリクエストのボディーとクエリに対して正しく働かないケースがあります。また、リクエストに対してバリデーションが効かなくなる入力があります。</p>\n<h3 id=\"パッチ\">パッチ</h3>\n<p>frourioをv0.26.0かそれ以降のバージョンにアップデートをお願いします。frourio を使用したプロジェクトには <code>class-transformer</code> と <code>reflect-metadata</code> の依存への追加も必要となります。</p>\n<h3 id=\"ワークアラウンド\">ワークアラウンド</h3>\n<p>controller側で自分でclass-transformerを使用してチェックする、vaildatorを使わない、など。</p>\n<h3 id=\"さらなる情報\">さらなる情報</h3>\n<p>このセキュリティ勧告に関する質問やコメントについては、以下の方法でお問い合わせいただけます。</p>\n<ul>\n<li><a href=\"https://github.com/frouriojs/frourio\">frourio</a>にIssueを開く。</li>\n</ul>\n<h2 id=\"english\">English</h2>\n<h3 id=\"impact\">Impact</h3>\n<p>Frourio users who uses frourio version prior to v0.26.0 and integration with class-validator through <code>validators/</code> folder. Validators does not work properly for request bodies and queries in specific situations. Addtionally, some kind of input is not validated. (false positives)</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please update your frourio to v0.26.0 or later. You also need to install <code>class-transformer</code> and <code>reflect-metadata</code> to your project.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Validate objects from request with class-transformer in controllers by yourself, or prevent using validators.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/frouriojs/frourio\">frourio</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/frouriojs/frourio/security/advisories/GHSA-8xxm-h73r-ghfj\">https://github.com/frouriojs/frourio/security/advisories/GHSA-8xxm-h73r-ghfj</a></li>\n<li><a href=\"https://github.com/frouriojs/frourio/commit/7c19ac5363305b81b1c6b5232620228763d427af\">https://github.com/frouriojs/frourio/commit/7c19ac5363305b81b1c6b5232620228763d427af</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23623\">https://nvd.nist.gov/vuln/detail/CVE-2022-23623</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xxm-h73r-ghfj\">https://github.com/advisories/GHSA-8xxm-h73r-ghfj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xxm-h73r-ghfj",
            "title": "[frourio] Validation bypass in frourio",
            "date_modified": "2022-02-14T22:32:54.000Z",
            "date_published": "2022-02-07T22:37:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xxm-h73r-ghfj"
            }
        }
    ]
}