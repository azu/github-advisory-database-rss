{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 2.6.0 for muhammara and not at all for hummus</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources</p>\n<h3 id=\"references\">References</h3>\n<p>PR: <a href=\"https://github.com/julianhille/MuhammaraJS/pull/194\">https://github.com/julianhille/MuhammaraJS/pull/194</a>\nIssue: <a href=\"https://github.com/julianhille/MuhammaraJS/issues/191\">https://github.com/julianhille/MuhammaraJS/issues/191</a>\nIssue in hummus: <a href=\"https://github.com/galkahana/HummusJS/issues/293\">https://github.com/galkahana/HummusJS/issues/293</a></p>\n<h3 id=\"outline-differences-to-httpsnvdnistgovvulndetailcve-2022-25892\">Outline differences to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></h3>\n<p>The difference is one is in <a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b\">src/deps/PDFWriter/PDFParser.cpp</a> and the other is <a href=\"https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2\">PDFDocumentHandler.cpp</a> both is a null pointer but for different cases</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25885\">https://nvd.nist.gov/vuln/detail/CVE-2022-25885</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/439\">https://github.com/galkahana/HummusJS/issues/439</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/188\">https://github.com/julianhille/MuhammaraJS/issues/188</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c\">https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/293\">https://github.com/galkahana/HummusJS/issues/293</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/191\">https://github.com/julianhille/MuhammaraJS/issues/191</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/194\">https://github.com/julianhille/MuhammaraJS/pull/194</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-frp9-2v6r-gj97\">https://github.com/advisories/GHSA-frp9-2v6r-gj97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-frp9-2v6r-gj97",
            "title": "[muhammara] muhammara and hummus vulnerable to null pointer dereference on bad response object",
            "date_modified": "2022-11-01T21:55:27.000Z",
            "date_published": "2022-11-01T12:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-frp9-2v6r-gj97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be appended to another.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 2.6.0 for muhammara and not at all for hummus</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources</p>\n<h3 id=\"references\">References</h3>\n<p>PR: <a href=\"https://github.com/julianhille/MuhammaraJS/pull/194\">https://github.com/julianhille/MuhammaraJS/pull/194</a>\nIssue: <a href=\"https://github.com/julianhille/MuhammaraJS/issues/191\">https://github.com/julianhille/MuhammaraJS/issues/191</a>\nIssue in hummus: <a href=\"https://github.com/galkahana/HummusJS/issues/293\">https://github.com/galkahana/HummusJS/issues/293</a></p>\n<h3 id=\"outline-differences-to-httpsnvdnistgovvulndetailcve-2022-25892\">Outline differences to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></h3>\n<p>The difference is one is in <a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002#diff-09ac2c64aeab42b14b2ae7b11a5648314286986f8c8444a5b3739ba7203b1e9b\">src/deps/PDFWriter/PDFParser.cpp</a> and the other is <a href=\"https://github.com/julianhille/MuhammaraJS/pull/194/files#diff-38d338ea4c047fd7dd9a05b5ffe7c964f0fa7e79aff4c307ccee7596457b1ef2\">PDFDocumentHandler.cpp</a> both is a null pointer but for different cases</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25885\">https://nvd.nist.gov/vuln/detail/CVE-2022-25885</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/439\">https://github.com/galkahana/HummusJS/issues/439</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/188\">https://github.com/julianhille/MuhammaraJS/issues/188</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c\">https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-rcrx-fpjp-mfrw</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/293\">https://github.com/galkahana/HummusJS/issues/293</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/191\">https://github.com/julianhille/MuhammaraJS/issues/191</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/194\">https://github.com/julianhille/MuhammaraJS/pull/194</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-frp9-2v6r-gj97\">https://github.com/advisories/GHSA-frp9-2v6r-gj97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-frp9-2v6r-gj97",
            "title": "[hummus] muhammara and hummus vulnerable to null pointer dereference on bad response object",
            "date_modified": "2022-11-01T21:55:27.000Z",
            "date_published": "2022-11-01T12:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-frp9-2v6r-gj97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.1.1 and has been backported to 2.6.1\nThere is no patch for hummus</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>\n<a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cv5-4wqv-9w94\">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94",
            "title": "[muhammara] muhammara and hummus vulnerable to denial of service by NULL pointer dereference",
            "date_modified": "2022-11-01T21:54:16.000Z",
            "date_published": "2022-11-01T12:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.1.1 and has been backported to 2.6.1\nThere is no patch for hummus</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>\n<a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cv5-4wqv-9w94\">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94",
            "title": "[muhammara] muhammara and hummus vulnerable to denial of service by NULL pointer dereference",
            "date_modified": "2022-11-01T21:54:16.000Z",
            "date_published": "2022-11-01T12:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.1.1 and has been backported to 2.6.1\nThere is no patch for hummus</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a>\n<a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a>\n<a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25892\">https://nvd.nist.gov/vuln/detail/CVE-2022-25892</a></li>\n<li><a href=\"https://github.com/galkahana/HummusJS/issues/463\">https://github.com/galkahana/HummusJS/issues/463</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/issues/214\">https://github.com/julianhille/MuhammaraJS/issues/214</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002\">https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51\">https://github.com/julianhille/MuhammaraJS/commit/90b278d09f16062d93a4160ef0a54d449d739c51</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138\">https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320\">https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-f64j-4x74-p42m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cv5-4wqv-9w94\">https://github.com/advisories/GHSA-9cv5-4wqv-9w94</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94",
            "title": "[hummus] muhammara and hummus vulnerable to denial of service by NULL pointer dereference",
            "date_modified": "2022-11-01T21:54:16.000Z",
            "date_published": "2022-11-01T12:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cv5-4wqv-9w94"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>node-red-dashboard contains a cross-site scripting vulnerability. This issue affects some unknown processing of the file <code>components/ui-component/ui-component-ctrl.js</code> of the component ui_text Format Handler. The attack may be initiated remotely. The issue is patched in version 3.2.0. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3783\">https://nvd.nist.gov/vuln/detail/CVE-2022-3783</a></li>\n<li><a href=\"https://github.com/node-red/node-red-dashboard/issues/772\">https://github.com/node-red/node-red-dashboard/issues/772</a></li>\n<li><a href=\"https://github.com/node-red/node-red-dashboard/commit/9305d1a82f19b235dfad24a7d1dd4ed244db7743\">https://github.com/node-red/node-red-dashboard/commit/9305d1a82f19b235dfad24a7d1dd4ed244db7743</a></li>\n<li><a href=\"https://vuldb.com/?id.212555\">https://vuldb.com/?id.212555</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vrv9-3x3w-ffxw\">https://github.com/advisories/GHSA-vrv9-3x3w-ffxw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vrv9-3x3w-ffxw",
            "title": "[node-red-dashboard] node-red-dashboard vulnerable to Cross-site Scripting",
            "date_modified": "2022-11-01T19:00:01.000Z",
            "date_published": "2022-11-01T12:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vrv9-3x3w-ffxw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>One of the following approaches might help, depending on your use case:</p>\n<ul>\n<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>\n<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/jindw/xmldom/issues/150\">https://github.com/jindw/xmldom/issues/150</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.7.7\">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.8.4\">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crh6-fp67-6883\">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crh6-fp67-6883",
            "title": "[@xmldom/xmldom] xmldom allows multiple root nodes in a DOM",
            "date_modified": "2022-11-01T17:29:12.000Z",
            "date_published": "2022-11-01T17:29:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crh6-fp67-6883"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>One of the following approaches might help, depending on your use case:</p>\n<ul>\n<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>\n<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/jindw/xmldom/issues/150\">https://github.com/jindw/xmldom/issues/150</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.7.7\">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.8.4\">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crh6-fp67-6883\">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crh6-fp67-6883",
            "title": "[@xmldom/xmldom] xmldom allows multiple root nodes in a DOM",
            "date_modified": "2022-11-01T17:29:12.000Z",
            "date_published": "2022-11-01T17:29:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crh6-fp67-6883"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>One of the following approaches might help, depending on your use case:</p>\n<ul>\n<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>\n<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/jindw/xmldom/issues/150\">https://github.com/jindw/xmldom/issues/150</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.7.7\">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.8.4\">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crh6-fp67-6883\">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crh6-fp67-6883",
            "title": "[@xmldom/xmldom] xmldom allows multiple root nodes in a DOM",
            "date_modified": "2022-11-01T17:29:12.000Z",
            "date_published": "2022-11-01T17:29:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crh6-fp67-6883"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>xmldom parses XML that is not well-formed because it contains multiple top level elements, and adds all root nodes to the <code>childNodes</code> collection of the <code>Document</code>, without reporting any error or throwing.\nThis breaks the assumption that there is only a single root node in the tree, which led to <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a> and is a potential issue for dependents.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.7</code>, <code>@xmldom/xmldom@~0.8.4</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.4</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>One of the following approaches might help, depending on your use case:</p>\n<ul>\n<li>Instead of searching for elements in the whole DOM, only search in the <code>documentElement</code>.</li>\n<li>Reject a document with a document that has more then 1 <code>childNode</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/jindw/xmldom/issues/150\">https://github.com/jindw/xmldom/issues/150</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883\">https://github.com/xmldom/xmldom/security/advisories/GHSA-crh6-fp67-6883</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.7.7\">https://github.com/xmldom/xmldom/releases/tag/0.7.7</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.8.4\">https://github.com/xmldom/xmldom/releases/tag/0.8.4</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4\">https://github.com/xmldom/xmldom/releases/tag/0.9.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crh6-fp67-6883\">https://github.com/advisories/GHSA-crh6-fp67-6883</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crh6-fp67-6883",
            "title": "[xmldom] xmldom allows multiple root nodes in a DOM",
            "date_modified": "2022-11-01T17:29:12.000Z",
            "date_published": "2022-11-01T17:29:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crh6-fp67-6883"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Feather-Sequelize cleanQuery method uses insecure recursive logic to filter unsupported keys from the query object. This results in a Remote Code Execution (RCE) with privileges of application.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29823\">https://nvd.nist.gov/vuln/detail/CVE-2022-29823</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00020\">https://csirt.divd.nl/cases/DIVD-2022-00020</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-29823/\">https://csirt.divd.nl/cves/CVE-2022-29823/</a></li>\n<li><a href=\"https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0b7beaa773dc313fdb27edd9ee8115064d7cf114\">https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0b7beaa773dc313fdb27edd9ee8115064d7cf114</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p5m3-27vh-52j4\">https://github.com/advisories/GHSA-p5m3-27vh-52j4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p5m3-27vh-52j4",
            "title": "[feathers-sequelize] Feather-Sequelize cleanQuery method vulnerable to Prototype Pollution",
            "date_modified": "2022-10-31T19:25:03.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p5m3-27vh-52j4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>feathers-sequelize is vulnerable to improper parameter filtering in the Feathers js library, which may ultimately lead to SQL injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29822\">https://nvd.nist.gov/vuln/detail/CVE-2022-29822</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00020\">https://csirt.divd.nl/cases/DIVD-2022-00020</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-29822/\">https://csirt.divd.nl/cves/CVE-2022-29822/</a></li>\n<li><a href=\"https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc\">https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hq7-j5wq-p227\">https://github.com/advisories/GHSA-5hq7-j5wq-p227</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hq7-j5wq-p227",
            "title": "[feathers-sequelize] feathers-sequelize vulnerable to SQL injection due to improper parameter filtering",
            "date_modified": "2022-10-31T19:24:51.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hq7-j5wq-p227"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Due to improper input validation in the Feathers js library, it is possible to perform a SQL injection attack on the back-end database, in case the feathers-sequelize package is used.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2422\">https://nvd.nist.gov/vuln/detail/CVE-2022-2422</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00020\">https://csirt.divd.nl/cases/DIVD-2022-00020</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-2422\">https://csirt.divd.nl/cves/CVE-2022-2422</a></li>\n<li><a href=\"https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc\">https://github.com/feathersjs-ecosystem/feathers-sequelize/commit/0f2d85f0b2d556f2b6c70423dcebdbd29d95e3dc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpv8-4pjq-qqh7\">https://github.com/advisories/GHSA-qpv8-4pjq-qqh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpv8-4pjq-qqh7",
            "title": "[feathers-sequelize] PENDING feathers-sequelize contains improper input validation leading to SQL injection",
            "date_modified": "2022-10-31T18:43:45.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpv8-4pjq-qqh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const decoder = new Decoder();\n\ndecoder.on(\\\"decoded\\\", (packet) =&gt; {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n })\n\ndecoder.add('51-[\\\"hello\\\",{\\\"_placeholder\\\":true,\\\"num\\\":\\\"splice\\\"}]');\ndecoder.add(Buffer.from(\\\"world\\\"));\n</code></pre>\n<p>This bubbles up in the <code>socket.io</code> package:</p>\n<pre><code class=\"language-js\">io.on(\\\"connection\\\", (socket) =&gt; {\n socket.on(\\\"hello\\\", (val) =&gt; {\n // here, \\\"val\\\" could be a reference instead of what the user expected\n });\n });\n</code></pre>\n<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>\n<p>This should be fixed by:</p>\n<ul>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>\n</ul>\n<h3 id=\"dependency-analysis-for-the-socketio-package\">Dependency analysis for the <code>socket.io</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.2...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.1.3...4.5.1</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5...4.1.2</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"dependency-analysis-for-the-socketio-client-package\">Dependency analysis for the <code>socket.io-client</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io-client</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.0...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.3.0...4.4.1</code></td>\n<td><code>~4.1.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188\">ref</a>)</td>\n<td>No, but the impact is very limited</td>\n</tr>\n<tr>\n<td><code>3.1.0...4.2.0</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2421\">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00045\">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-2421\">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm95-pgcg-qqfq\">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq",
            "title": "[socket.io-parser] Insufficient validation when decoding a Socket.IO packet",
            "date_modified": "2022-10-28T20:19:04.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const decoder = new Decoder();\n\ndecoder.on(\\\"decoded\\\", (packet) =&gt; {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n })\n\ndecoder.add('51-[\\\"hello\\\",{\\\"_placeholder\\\":true,\\\"num\\\":\\\"splice\\\"}]');\ndecoder.add(Buffer.from(\\\"world\\\"));\n</code></pre>\n<p>This bubbles up in the <code>socket.io</code> package:</p>\n<pre><code class=\"language-js\">io.on(\\\"connection\\\", (socket) =&gt; {\n socket.on(\\\"hello\\\", (val) =&gt; {\n // here, \\\"val\\\" could be a reference instead of what the user expected\n });\n });\n</code></pre>\n<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>\n<p>This should be fixed by:</p>\n<ul>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>\n</ul>\n<h3 id=\"dependency-analysis-for-the-socketio-package\">Dependency analysis for the <code>socket.io</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.2...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.1.3...4.5.1</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5...4.1.2</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"dependency-analysis-for-the-socketio-client-package\">Dependency analysis for the <code>socket.io-client</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io-client</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.0...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.3.0...4.4.1</code></td>\n<td><code>~4.1.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188\">ref</a>)</td>\n<td>No, but the impact is very limited</td>\n</tr>\n<tr>\n<td><code>3.1.0...4.2.0</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2421\">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00045\">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-2421\">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm95-pgcg-qqfq\">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq",
            "title": "[socket.io-parser] Insufficient validation when decoding a Socket.IO packet",
            "date_modified": "2022-10-28T20:19:04.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This impacts users that use shescape to escape arguments:</p>\n<ul>\n<li>for the Unix shell Bash, or any not-officially-supported Unix shell;</li>\n<li>using the <code>escape</code> or <code>escapeAll</code> functions with the <code>interpolation</code> option set to <code>true</code>.</li>\n</ul>\n<p>An attacker can cause polynomial backtracking in terms of the input string length due to a Regular Expression in shescape that is vulnerable to Regular Expression Denial of Service (ReDoS). Example:</p>\n<pre><code class=\"language-javascript\">import * as shescape from \"shescape\";\n\n/* 1. Prerequisites */\nconst options = {\n  interpolation: true,\n  // and\n  shell: \"/bin/bash\",\n  // or\n  shell: \"some-not-officially-supported-shell\",\n  // or\n  shell: undefined, // Only if the system's default shell is bash or an unsupported shell.\n};\n\n/* 2. Attack */\nlet userInput = '{,'.repeat(150_000); // polynomial backtracking\n\n/* 3. Usage */\nshescape.escape(userInput, options);\n// or\nshescape.escapeAll([userInput], options);\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">v1.6.1</a> which you can upgrade to now. No further changes required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Alternatively, a maximum length can be enforced on input strings to shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Shescape commit <a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">552e8ea</a></li>\n<li>Shescape Release <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">v1.6.1</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Comment on commit <a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">552e8ea</a></li>\n<li>Open an issue at <a href=\"https://github.com/ericcornelissen/shescape/issues?q=is%3Aissue+is%3Aopen\">https://github.com/ericcornelissen/shescape/issues</a> (New issue &gt; Question &gt; Get started)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-cr84-xvw4-qx3c\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-cr84-xvw4-qx3c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25918\">https://nvd.nist.gov/vuln/detail/CVE-2022-25918</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/blob/main/src/unix.js%23L52\">https://github.com/ericcornelissen/shescape/blob/main/src/unix.js%23L52</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108\">https://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cr84-xvw4-qx3c\">https://github.com/advisories/GHSA-cr84-xvw4-qx3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cr84-xvw4-qx3c",
            "title": "[shescape] Inefficient Regular Expression Complexity in shescape ",
            "date_modified": "2022-10-31T16:02:56.000Z",
            "date_published": "2022-10-25T22:27:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cr84-xvw4-qx3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>Due to the common practice of providing vulnerability details in markdown format, the Dependency-Track frontend renders them using the JavaScript library <a href=\"https://github.com/showdownjs/showdown\">Showdown</a>. Showdown <a href=\"https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)\">does not have any XSS countermeasures built in</a>, and versions before 4.6.1 of the Dependency-Track frontend did not encode or sanitize Showdown's output. This made it possible for arbitrary JavaScript included in vulnerability details via HTML attributes to be executed in context of the frontend.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Actors with the <code>VULNERABILITY_MANAGEMENT</code> permission can exploit this weakness by creating or editing a custom vulnerability and providing XSS payloads in any of the following fields:</p>\n<ul>\n<li>Description</li>\n<li>Details</li>\n<li>Recommendation</li>\n<li>References</li>\n</ul>\n<p>The payload will be executed for users with the <code>VIEW_PORTFOLIO</code> permission when browsing to the modified vulnerability's page, for example: </p>\n<pre><code>https://dtrack.example.com/vulnerabilities/INTERNAL/INT-jd8u-e8tl-8lwu\n</code></pre>\n<p>Alternatively, malicious JavaScript could be introduced via any of the vulnerability databases mirrored by Dependency-Track (NVD, GitHub Advisories, OSV, OSS Index, VulnDB). However, this attack vector is highly unlikely, and the team is not aware of any occurrence of this happening.</p>\n<blockquote>\n<p><strong>Note</strong>\nThe <em>Vulnerability Details</em> element of the <em>Audit Vulnerabilities</em> tab in the project view is <strong>not</strong> affected.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been fixed in frontend version 4.6.1.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thanks to GitHub user <strong>Waterstraal</strong> for finding and responsibly disclosing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf\">https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39350\">https://nvd.nist.gov/vuln/detail/CVE-2022-39350</a></li>\n<li><a href=\"https://docs.dependencytrack.org/changelog/\">https://docs.dependencytrack.org/changelog/</a></li>\n<li><a href=\"https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)\">https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c33w-pm52-mqvf\">https://github.com/advisories/GHSA-c33w-pm52-mqvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c33w-pm52-mqvf",
            "title": "[@dependencytrack/frontend] @dependencytrack/frontend vulnerable to  Persistent Cross-Site-Scripting via Vulnerability Details",
            "date_modified": "2022-10-25T20:22:02.000Z",
            "date_published": "2022-10-25T20:22:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c33w-pm52-mqvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Markdownify version 1.4.1 allows an external attacker to execute arbitrary code remotely on any client attempting to view a malicious markdown file through Markdownify. This is possible because the application has the \"nodeIntegration\" option enabled. There are currently no patched versions and no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41709\">https://nvd.nist.gov/vuln/detail/CVE-2022-41709</a></li>\n<li><a href=\"https://fluidattacks.com/advisories/adams/\">https://fluidattacks.com/advisories/adams/</a></li>\n<li><a href=\"https://github.com/amitmerchant1990/electron-markdownify\">https://github.com/amitmerchant1990/electron-markdownify</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c942-mfmp-p4fh\">https://github.com/advisories/GHSA-c942-mfmp-p4fh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c942-mfmp-p4fh",
            "title": "[electron-markdownify] Markdownify subject to Remote Code Execution via malicious markdown file",
            "date_modified": "2022-10-25T19:58:53.000Z",
            "date_published": "2022-10-19T19:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c942-mfmp-p4fh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-10-23T03:06:43.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>In Hardened JavaScript, programs can <code>harden</code> objects to safely share objects with co-tenant programs without risk of these other programs tampering with their API surface. Hardening does not guarantee that objects are pure or immutable, so a hardened <code>Map</code>, for example is superficially tamper-proof, but any party holding a reference to the object can both read and write its contents. Based on this precedent, and because <code>TypedArray</code> instances cannot be frozen with <code>Object.isFrozen</code>, <code>harden</code> does not <code>freeze</code> <code>TypedArrays</code> and instead makes them non-extensible and makes all non-indexed properties non-writable and non-configurable. This is consistent with the treatment of <code>Map</code> because the indexed properties represent mutable content and non-indexed properties represent the API.</p>\n<p>Due to a defect in <code>harden</code>, properties that have names that parse as numbers but are not the same as the canonical representation of those numbers, as in <code>\"+0\"</code> and <code>\"\"</code> which are both equivalent to their canonical number <code>\"0\"</code>,  remain writable after hardening.</p>\n<p>Any program treating one of these properties as part of its API and relying on <code>harden</code> to prevent modifications would be vulnerable to an API pollution attack, affecting only instances shared by mutually suspicious parties.</p>\n<p>Unlike a <code>Map</code>, a hardened <code>TypedArray</code> can only have numbers for content. Any program that is sharing hardened <code>TypedArrays</code> between co-tentant programs and relying on harden to only allow these programs to communicate exclusively by changing numbers within the bounds of the TypedArray, may inadvertently have arranged for a mechanism for a pair of third-parties to communicate arbitrary objects on these other properties.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>SES version 0.16.0 patches this issue, causing <code>harden</code> to recognize properties with non-canonical numeric representations and ensuring that these properties are non-configurable.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Users should avoid sharing <code>TypedArrays</code> between co-tenant programs and instead create wrapper objects that produce a read-only view of the underlying data. We allow <code>harden</code> to succeed for <code>TypedArrays</code> because the treatment is in fact consistent with the behavior of collections like <code>Map</code>, but all collections shared between co-tentant programs should probably be attenuated to either read- or write-only facets and probably close over only part of the content of the collection. However, the motivation for allowing <code>TypedArrays</code> to be hardened in practice is to allow certain legacy modules to function under Hardened JavaScript with LavaMoat, since they export <code>TypedArrays</code>, even though they would ideally export read-only facets of these.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>Not at this time.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@agoric.com\">security@agoric.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc\">https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc</a></li>\n<li><a href=\"https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5\">https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-whpx-q3rq-w8jc\">https://github.com/advisories/GHSA-whpx-q3rq-w8jc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-whpx-q3rq-w8jc",
            "title": "[ses] Hardening of TypedArrays with non-canonical numeric property names in SES",
            "date_modified": "2022-10-20T18:38:36.000Z",
            "date_published": "2022-10-20T18:38:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-whpx-q3rq-w8jc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}