{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>Mind-elixir is a free, open source mind map core. Prior to version 0.18.1, mind-elixir is prone to cross-site scripting when handling untrusted menus. This issue is patched in version 0.18.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32851\">https://nvd.nist.gov/vuln/detail/CVE-2021-32851</a></li>\n<li><a href=\"https://github.com/ssshooter/mind-elixir-core/commit/073485269ac83af24371f35bd08507defa885655\">https://github.com/ssshooter/mind-elixir-core/commit/073485269ac83af24371f35bd08507defa885655</a></li>\n<li><a href=\"https://github.com/ssshooter/mind-elixir-core/blob/79942a68b14c8875ab7d270b1ad25bfff351b04c/src/plugin/contextMenu.js#L13\">https://github.com/ssshooter/mind-elixir-core/blob/79942a68b14c8875ab7d270b1ad25bfff351b04c/src/plugin/contextMenu.js#L13</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-1047_Mind-elixir/\">https://securitylab.github.com/advisories/GHSL-2021-1047_Mind-elixir/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m22q-97p5-79v2\">https://github.com/advisories/GHSA-m22q-97p5-79v2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m22q-97p5-79v2",
            "title": "[mind-elixir] Mind-elixir Cross-site Scripting vulnerability",
            "date_modified": "2023-02-22T00:11:37.000Z",
            "date_published": "2023-02-21T00:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m22q-97p5-79v2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>textAngular is a text editor for Angular.js. Version 1.5.16 and prior are vulnerable to copy-paste cross-site scripting (XSS). For this particular type of XSS, the victim needs to be fooled into copying a malicious payload into the text editor. There are no known patches.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32854\">https://nvd.nist.gov/vuln/detail/CVE-2021-32854</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-1001-textAngular/\">https://securitylab.github.com/advisories/GHSL-2021-1001-textAngular/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7h4w-6p98-r3wx\">https://github.com/advisories/GHSA-7h4w-6p98-r3wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7h4w-6p98-r3wx",
            "title": "[textangular] textAngular Cross-site Scripting vulnerability",
            "date_modified": "2023-02-22T00:11:03.000Z",
            "date_published": "2023-02-21T15:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7h4w-6p98-r3wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vditor is a browser-side Markdown editor. Versions prior to 3.8.7 are vulnerable to copy-paste cross-site scripting (XSS). For this particular type of XSS, the victim needs to be fooled into copying a malicious payload into the text editor. Version 3.8.7 contains a patch for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32855\">https://nvd.nist.gov/vuln/detail/CVE-2021-32855</a></li>\n<li><a href=\"https://github.com/Vanessa219/vditor/issues/1085\">https://github.com/Vanessa219/vditor/issues/1085</a></li>\n<li><a href=\"https://github.com/Vanessa219/vditor/commit/1b2382d7f8a4ee509d9245db4450d926a0b24146\">https://github.com/Vanessa219/vditor/commit/1b2382d7f8a4ee509d9245db4450d926a0b24146</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-1006-vditor/\">https://securitylab.github.com/advisories/GHSL-2021-1006-vditor/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfmp-9999-6wqj\">https://github.com/advisories/GHSA-vfmp-9999-6wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfmp-9999-6wqj",
            "title": "[vditor] Vditor Cross-site Scripting vulnerability",
            "date_modified": "2023-02-22T00:10:53.000Z",
            "date_published": "2023-02-21T15:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfmp-9999-6wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Baremetrics date range picker is a solution for selecting both date ranges and single dates from a single calender view. Versions 1.0.14 and prior are prone to cross-site scripting (XSS) when handling untrusted <code>placeholder</code> entries. An attacker who is able to influence the field <code>placeholder</code> when creating a <code>Calendar</code> instance is able to supply arbitrary <code>html</code> or <code>javascript</code> that will be rendered in the context of a user leading to XSS. There are no known patches for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32859\">https://nvd.nist.gov/vuln/detail/CVE-2021-32859</a></li>\n<li><a href=\"https://github.com/Baremetrics/calendar/blob/240c20134ffbf0f0f246a50feff2be1ff19cf349/public/js/Calendar.js#L724\">https://github.com/Baremetrics/calendar/blob/240c20134ffbf0f0f246a50feff2be1ff19cf349/public/js/Calendar.js#L724</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-1042_Baremetrics_Date_Range_Picker/\">https://securitylab.github.com/advisories/GHSL-2021-1042_Baremetrics_Date_Range_Picker/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-465f-mxxh-grc4\">https://github.com/advisories/GHSA-465f-mxxh-grc4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-465f-mxxh-grc4",
            "title": "[baremetrics-calendar] Baremetrics date range picker vulnerable to Cross-site Scripting",
            "date_modified": "2023-02-22T00:10:23.000Z",
            "date_published": "2023-02-21T15:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-465f-mxxh-grc4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>iziModal is a modal plugin with jQuery. Versions prior to 1.6.1 are vulnerable to cross-site scripting (XSS) when handling untrusted modal titles. An attacker who is able to influence the field <code>title</code> when creating a <code>iziModal</code> instance is able to supply arbitrary <code>html</code> or <code>javascript</code> code that will be rendered in the context of a user, potentially leading to <code>XSS</code>. Version 1.6.1 contains a patch for this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-32860\">https://nvd.nist.gov/vuln/detail/CVE-2021-32860</a></li>\n<li><a href=\"https://github.com/marcelodolza/iziModal/issues/249\">https://github.com/marcelodolza/iziModal/issues/249</a></li>\n<li><a href=\"https://github.com/marcelodolza/iziModal/commit/01728ac52bac5c1b4512087dafe0ad8b091fdc9e\">https://github.com/marcelodolza/iziModal/commit/01728ac52bac5c1b4512087dafe0ad8b091fdc9e</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2021-1044_iziModal/\">https://securitylab.github.com/advisories/GHSL-2021-1044_iziModal/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h685-83w4-3ph3\">https://github.com/advisories/GHSA-h685-83w4-3ph3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h685-83w4-3ph3",
            "title": "[izimodal] iziModal Cross-site Scripting vulnerability",
            "date_modified": "2023-02-22T00:10:04.000Z",
            "date_published": "2023-02-21T15:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h685-83w4-3ph3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, was found in generator-hottowel 0.0.11. Affected is an unknown function of the file app/templates/src/server/_app.js of the component 404 Error Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is c17092fd4103143a9ddab93c8983ace8bf174396. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-221484.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-15025\">https://nvd.nist.gov/vuln/detail/CVE-2016-15025</a></li>\n<li><a href=\"https://github.com/johnpapa/generator-hottowel/pull/174\">https://github.com/johnpapa/generator-hottowel/pull/174</a></li>\n<li><a href=\"https://github.com/johnpapa/generator-hottowel/commit/c17092fd4103143a9ddab93c8983ace8bf174396\">https://github.com/johnpapa/generator-hottowel/commit/c17092fd4103143a9ddab93c8983ace8bf174396</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.221484\">https://vuldb.com/?ctiid.221484</a></li>\n<li><a href=\"https://vuldb.com/?id.221484\">https://vuldb.com/?id.221484</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f8hv-rx9p-f9r4\">https://github.com/advisories/GHSA-f8hv-rx9p-f9r4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f8hv-rx9p-f9r4",
            "title": "[generator-hottowel] generator-hottowel Cross-site Scripting vulnerability",
            "date_modified": "2023-02-22T00:08:17.000Z",
            "date_published": "2023-02-20T12:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f8hv-rx9p-f9r4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Command Injection Vulnerability. All versions &lt;1.1.0 are affected.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please upgrade to <a href=\"mailto:versionn@1.1.0\">versionn@1.1.0</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/commenthol/versionn/security/advisories/GHSA-fj78-2vc5-f6cm\">https://github.com/commenthol/versionn/security/advisories/GHSA-fj78-2vc5-f6cm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25805\">https://nvd.nist.gov/vuln/detail/CVE-2023-25805</a></li>\n<li><a href=\"https://github.com/commenthol/versionn/commit/2ca128823efe962b37f2698f0eb530c2b124842d\">https://github.com/commenthol/versionn/commit/2ca128823efe962b37f2698f0eb530c2b124842d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fj78-2vc5-f6cm\">https://github.com/advisories/GHSA-fj78-2vc5-f6cm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fj78-2vc5-f6cm",
            "title": "[versionn] Versionn Command Injection Vulnerability",
            "date_modified": "2023-02-22T00:05:07.000Z",
            "date_published": "2023-02-22T00:05:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fj78-2vc5-f6cm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"this-advisory-is-withdawn\">This advisory is withdawn.</h2>\n<p>cacheable-request depends on http-cache-semanttics, which contains an Inefficient Regular Expression Complexity in versions prior to 4.1.1 of that package. cacheable-request has been updated to rely on the fixed version in 10.2.7. </p>\n<h3 id=\"summary-of-http-cache-semantics-vulnerability\">Summary of http-cache-semantics vulnerability</h3>\n<p>http-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.</p>\n<h3 id=\"details\">Details</h3>\n<p><a href=\"https://github.com/advisories/GHSA-rc47-6667-2j5j\">https://github.com/advisories/GHSA-rc47-6667-2j5j</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jaredwray/cacheable-request/security/advisories/GHSA-8x6c-cv3v-vp6g\">https://github.com/jaredwray/cacheable-request/security/advisories/GHSA-8x6c-cv3v-vp6g</a></li>\n<li><a href=\"https://github.com/jaredwray/cacheable-request/commit/8a47777e4eb61960469873cf4b3a2823742fc15e\">https://github.com/jaredwray/cacheable-request/commit/8a47777e4eb61960469873cf4b3a2823742fc15e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rc47-6667-2j5j\">https://github.com/advisories/GHSA-rc47-6667-2j5j</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8x6c-cv3v-vp6g\">https://github.com/advisories/GHSA-8x6c-cv3v-vp6g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8x6c-cv3v-vp6g",
            "title": "[cacheable-request] Withdrawn: cacheable-request depends on http-cache-semantics, which is vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-02-21T05:06:46.000Z",
            "date_published": "2023-02-11T00:13:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8x6c-cv3v-vp6g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The dropdown menu in jspreadsheet before v4.6.0 was discovered to be vulnerable to cross-site scripting (XSS).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-48115\">https://nvd.nist.gov/vuln/detail/CVE-2022-48115</a></li>\n<li><a href=\"https://github.com/jspreadsheet/ce/issues/1587\">https://github.com/jspreadsheet/ce/issues/1587</a></li>\n<li><a href=\"https://github.com/jspreadsheet/ce\">https://github.com/jspreadsheet/ce</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q82h-q47j-f492\">https://github.com/advisories/GHSA-q82h-q47j-f492</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q82h-q47j-f492",
            "title": "[jspreadsheet-ce] Cross-site Scripting in jspreadsheet",
            "date_modified": "2023-02-18T02:18:43.000Z",
            "date_published": "2023-02-18T00:31:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q82h-q47j-f492"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <code>Headers.set()</code> and <code>Headers.append()</code> methods are vulnerable to Regular Expression Denial of Service (ReDoS) attacks when untrusted values are passed into the functions. This is due to the inefficient regular expression used to normalize the values in the <code>headerValueNormalize()</code> utility function.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was patched in v5.19.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround. Please update to an unaffected version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://hackerone.com/bugs?report_id=1784449\">https://hackerone.com/bugs?report_id=1784449</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Carter Snook reported this vulnerability.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-r6ch-mqf9-qc9w\">https://github.com/nodejs/undici/security/advisories/GHSA-r6ch-mqf9-qc9w</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24807\">https://nvd.nist.gov/vuln/detail/CVE-2023-24807</a></li>\n<li><a href=\"https://github.com/nodejs/undici/commit/f2324e549943f0b0937b09fb1c0c16cc7c93abdf\">https://github.com/nodejs/undici/commit/f2324e549943f0b0937b09fb1c0c16cc7c93abdf</a></li>\n<li><a href=\"https://github.com/nodejs/undici/releases/tag/v5.19.1\">https://github.com/nodejs/undici/releases/tag/v5.19.1</a></li>\n<li><a href=\"https://hackerone.com/bugs?report_id=1784449\">https://hackerone.com/bugs?report_id=1784449</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6ch-mqf9-qc9w\">https://github.com/advisories/GHSA-r6ch-mqf9-qc9w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6ch-mqf9-qc9w",
            "title": "[undici] Regular Expression Denial of Service in Headers",
            "date_modified": "2023-02-16T20:46:56.000Z",
            "date_published": "2023-02-16T20:46:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6ch-mqf9-qc9w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>undici library does not protect <code>host</code> HTTP header from CRLF injection vulnerabilities.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue was patched in Undici v5.19.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Sanitize the <code>headers.host</code> string before passing to undici.</p>\n<h3 id=\"references\">References</h3>\n<p>Reported at <a href=\"https://hackerone.com/reports/1820955\">https://hackerone.com/reports/1820955</a>.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Thank you to Zhipeng Zhang (<a href=\"https://hackerone.com/timon8\">@timon8</a>) for reporting this vulnerability. </p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-5r9g-qh6m-jxff\">https://github.com/nodejs/undici/security/advisories/GHSA-5r9g-qh6m-jxff</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23936\">https://nvd.nist.gov/vuln/detail/CVE-2023-23936</a></li>\n<li><a href=\"https://github.com/nodejs/undici/commit/a2eff05401358f6595138df963837c24348f2034\">https://github.com/nodejs/undici/commit/a2eff05401358f6595138df963837c24348f2034</a></li>\n<li><a href=\"https://hackerone.com/reports/1820955\">https://hackerone.com/reports/1820955</a></li>\n<li><a href=\"https://github.com/nodejs/undici/releases/tag/v5.19.1\">https://github.com/nodejs/undici/releases/tag/v5.19.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5r9g-qh6m-jxff\">https://github.com/advisories/GHSA-5r9g-qh6m-jxff</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5r9g-qh6m-jxff",
            "title": "[undici] CRLF Injection in Nodejs ‘undici’ via host",
            "date_modified": "2023-02-16T20:46:56.000Z",
            "date_published": "2023-02-16T20:46:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5r9g-qh6m-jxff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>When using the non-default \"fallback\" crypto back-end, ECC operations in <code>node-jose</code> can trigger a Denial-of-Service (DoS) condition, due to a possible infinite loop in an internal calculation.  For some ECC operations, this condition is triggered randomly; for others, it can be triggered by malicious input.</p>\n<h4 id=\"technical-summary\">Technical summary</h4>\n<p>The JOSE logic implemented by <code>node-jose</code> usually relies on an external cryptographic library for the underlying cryptographic primitives that JOSE operations require.  When WebCrypto or the Node <code>crypto</code> module are available, they are used.  When neither of these libraries is available, <code>node-jose</code> includes its own \"fallback\" implementations of some algorithms based on <code>node-forge</code>, in particular implementations of ECDH and ECDSA. </p>\n<p>A various points, these algorithm implementations need to compute to the X coordinate of an elliptic curve point.  This is done by calling the <code>getX()</code> method of the object representing the point, which is an alias of the function <code>pointFpGetX()</code> in <code>lib/deps/ecc/math.js</code>.</p>\n<p>Computing the X coordinate from the form in which the point is stored requires computing the modular inverse of the Z coordinate, using the <code>modInverse</code> function from the <code>jsbn</code> library (e.g., <code>this.z.modInverse(this.curve.p)</code>).  The output of this function call is multiplied by another value before being reduced with the <code>barrettReduce()</code> function.</p>\n<p>The root cause of this issue is that the <code>jsbn</code> <code>modInverse</code> function sometimes returns negative results.  These results are correct in that they are equivalent mod the relevant modulus, but can be problematic for functions that expect modular operations to always return positive results (in the range <code>[0, p)</code>, where <code>p</code> is the modulus).</p>\n<p>In particular, while the Barrett reduction algorithm in general can handle negative inputs, the implementation in <code>node-jose</code> explicitly does not. Therefore, while the negative value that is returned by <code>modInverse()</code> is mathematically correct, it leads to an error in <code>barrettReduce()</code> causing an infinite loop which may result in a Denial of Service condition.</p>\n<p>For a given prime modulus, we estimate that roughly one in every <code>2^20</code> inputs produce a negative <code>modInverse()</code>.  This estimate was validated with exhaustive testing on small primes (&lt;30 bits) and randomized testing with regard to the P-256 prime.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This issue is only present in situations where the \"fallback\" cryptographic implementation is being used, i.e., situations where neither WebCrypto nor the Node <code>crypto</code> module is available.</p>\n<p>The following elliptic curve algorithms are impacted by this issue (all in <code>lib/deps/ecc/index.js</code>):</p>\n<ul>\n<li>Elliptic curve key generation (<code>exports.generateKeyPair</code>)</li>\n<li>Converting an elliptic curve private key to a public key (<code>ECPrivateKey.prototype.toPublicKey</code>)</li>\n<li>ECDSA signing (<code>ECPrivateKey.prototype.sign</code>)</li>\n<li>ECDSA verification (<code>ECPublicKey.prototype.verify</code>)</li>\n<li>ECDH key agreement (<code>ECPrivateKey.prototype.computeSecret</code>)</li>\n</ul>\n<p>In the first three cases, the points being evaluated are generated randomly, so an attack could only arise due to a bad value being randomly selected (as noted above, with probability roughly <code>2^{-20}</code>).  In the latter two cases, the points being evaluated are provided from outside the library, and thus potentially by attackers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Since this issue is only present in the \"fallback\" crypto implementation, it can be avoided by ensuring that either WebCrypto or the Node <code>crypto</code> module is available in the JS environment where <code>node-jose</code> is being run.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Barrett_reduction\">Barrett reduction on Wikipedia</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/cisco/node-jose/issues\">cisco/node-jose</a></li>\n<li>Email <a href=\"mailto:oss-security@cisco.com\">Cisco open source security</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Research and disclosure: BlackBerry</li>\n<li>Fix implementation: <a href=\"https://github.com/bifurcation\">Richard Barnes (@bifurcation)</a></li>\n<li>Release engineering: <a href=\"https://github.com/justaugustus\">Stephen Augustus (@justaugustus)</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/cisco/node-jose/security/advisories/GHSA-5h4j-qrvg-9xhw\">https://github.com/cisco/node-jose/security/advisories/GHSA-5h4j-qrvg-9xhw</a></li>\n<li><a href=\"https://github.com/cisco/node-jose/commit/901d91508a70e3b9bdfc45688ea07bb4e1b8210d\">https://github.com/cisco/node-jose/commit/901d91508a70e3b9bdfc45688ea07bb4e1b8210d</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25653\">https://nvd.nist.gov/vuln/detail/CVE-2023-25653</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5h4j-qrvg-9xhw\">https://github.com/advisories/GHSA-5h4j-qrvg-9xhw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5h4j-qrvg-9xhw",
            "title": "[node-jose] Improper calculations in ECC implementation can trigger a Denial-of-Service (DoS)",
            "date_modified": "2023-02-16T21:52:41.000Z",
            "date_published": "2023-02-16T18:44:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5h4j-qrvg-9xhw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Missing check vulnerability in the static file handler allows any client to access the files in the server's file system</p>\n<h3 id=\"details\">Details</h3>\n<p>When <code>staticFiles</code> is set in the <code>serve</code> settings in the configuration file, the following handler doesn't check if <code>absolutePath</code> is still under the directory provided as <code>staticFiles</code>;</p>\n<pre><code class=\"language-ts\">  if (staticFiles) {\n    router.get('/:relativePath+', async request =&gt; {\n      let { relativePath } = request.params;\n      if (!relativePath) {\n        relativePath = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) &amp;&amp; (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        return new Response(readStream as any, {\n          status: 200,\n        });\n      }\n      return undefined;\n    });\n</code></pre>\n<h3 id=\"example-scenario\">Example scenario</h3>\n<p>To reproduce it, set <code>staticFiles</code> to the relative path of a directory in <code>.meshrc.yml</code>;</p>\n<pre><code class=\"language-yml\">serve:\n   staticFiles: ./public\n</code></pre>\n<p>Then start the server with <code>mesh dev</code>, and browse to <code>/..%2fpackage.json</code> then you will see the content of <code>package.json</code>. You can even go deeper to see sensitive data; <code>/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd</code></p>\n<h3 id=\"impact-and-solution\">Impact and solution</h3>\n<p>If <code>staticFiles</code> is set under <code>serve</code> in the configuration file. you have two options to fix vulnerability;</p>\n<ul>\n<li>Update <code>@graphql-mesh/cli</code> to a version higher than <code>0.82.21</code>, and if you use <code>@graphql-mesh/http</code>, update it to a version higher than <code>0.3.18</code></li>\n<li>Remove <code>staticFiles</code> option from the configuration, and use other solutions to serve static files.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks <a href=\"mailto:alanwillms@gmail.com\">alanwillms@gmail.com</a> for reporting this vulnerability with details</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g\">https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g</a></li>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78\">https://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j2wh-wrv3-4x4g\">https://github.com/advisories/GHSA-j2wh-wrv3-4x4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j2wh-wrv3-4x4g",
            "title": "[@graphql-mesh/http] Unwanted access to the entire file system vulnerability due to a missing check in `staticFiles` HTTP handler",
            "date_modified": "2023-02-16T18:41:08.000Z",
            "date_published": "2023-02-16T18:41:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j2wh-wrv3-4x4g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Missing check vulnerability in the static file handler allows any client to access the files in the server's file system</p>\n<h3 id=\"details\">Details</h3>\n<p>When <code>staticFiles</code> is set in the <code>serve</code> settings in the configuration file, the following handler doesn't check if <code>absolutePath</code> is still under the directory provided as <code>staticFiles</code>;</p>\n<pre><code class=\"language-ts\">  if (staticFiles) {\n    router.get('/:relativePath+', async request =&gt; {\n      let { relativePath } = request.params;\n      if (!relativePath) {\n        relativePath = 'index.html';\n      }\n      const absolutePath = path.join(baseDir, staticFiles, relativePath);\n      if (absolutePath.includes(staticFiles) &amp;&amp; (await pathExists(absolutePath))) {\n        const readStream = fs.createReadStream(absolutePath);\n        return new Response(readStream as any, {\n          status: 200,\n        });\n      }\n      return undefined;\n    });\n</code></pre>\n<h3 id=\"example-scenario\">Example scenario</h3>\n<p>To reproduce it, set <code>staticFiles</code> to the relative path of a directory in <code>.meshrc.yml</code>;</p>\n<pre><code class=\"language-yml\">serve:\n   staticFiles: ./public\n</code></pre>\n<p>Then start the server with <code>mesh dev</code>, and browse to <code>/..%2fpackage.json</code> then you will see the content of <code>package.json</code>. You can even go deeper to see sensitive data; <code>/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd</code></p>\n<h3 id=\"impact-and-solution\">Impact and solution</h3>\n<p>If <code>staticFiles</code> is set under <code>serve</code> in the configuration file. you have two options to fix vulnerability;</p>\n<ul>\n<li>Update <code>@graphql-mesh/cli</code> to a version higher than <code>0.82.21</code>, and if you use <code>@graphql-mesh/http</code>, update it to a version higher than <code>0.3.18</code></li>\n<li>Remove <code>staticFiles</code> option from the configuration, and use other solutions to serve static files.</li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>Thanks <a href=\"mailto:alanwillms@gmail.com\">alanwillms@gmail.com</a> for reporting this vulnerability with details</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g\">https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g</a></li>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78\">https://github.com/Urigo/graphql-mesh/commit/95d93e7c140c2995b37e9d822aa3fe4e24ed2e78</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j2wh-wrv3-4x4g\">https://github.com/advisories/GHSA-j2wh-wrv3-4x4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j2wh-wrv3-4x4g",
            "title": "[@graphql-mesh/cli] Unwanted access to the entire file system vulnerability due to a missing check in `staticFiles` HTTP handler",
            "date_modified": "2023-02-16T18:41:08.000Z",
            "date_published": "2023-02-16T18:41:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j2wh-wrv3-4x4g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>The multipart body parser accepts an unlimited number of file parts.</li>\n<li>The multipart body parser accepts an unlimited number of field parts.</li>\n<li>The multipart body parser accepts an unlimited number of empty parts as field\nparts.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in v7.4.1 (for Fastify v4.x) and v6.0.1 (for Fastify v3.x).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workaround.  </p>\n<h3 id=\"references\">References</h3>\n<p>Reported at <a href=\"https://hackerone.com/reports/1816195\">https://hackerone.com/reports/1816195</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g\">https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25576\">https://nvd.nist.gov/vuln/detail/CVE-2023-25576</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297\">https://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297</a></li>\n<li><a href=\"https://hackerone.com/reports/1816195\">https://hackerone.com/reports/1816195</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/releases/tag/v6.0.1\">https://github.com/fastify/fastify-multipart/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/releases/tag/v7.4.1\">https://github.com/fastify/fastify-multipart/releases/tag/v7.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpp2-2cr5-pf6g\">https://github.com/advisories/GHSA-hpp2-2cr5-pf6g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpp2-2cr5-pf6g",
            "title": "[@fastify/multipart] Denial of service due to unlimited number of parts",
            "date_modified": "2023-02-14T21:49:56.000Z",
            "date_published": "2023-02-14T21:49:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpp2-2cr5-pf6g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>The multipart body parser accepts an unlimited number of file parts.</li>\n<li>The multipart body parser accepts an unlimited number of field parts.</li>\n<li>The multipart body parser accepts an unlimited number of empty parts as field\nparts.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in v7.4.1 (for Fastify v4.x) and v6.0.1 (for Fastify v3.x).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workaround.  </p>\n<h3 id=\"references\">References</h3>\n<p>Reported at <a href=\"https://hackerone.com/reports/1816195\">https://hackerone.com/reports/1816195</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g\">https://github.com/fastify/fastify-multipart/security/advisories/GHSA-hpp2-2cr5-pf6g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25576\">https://nvd.nist.gov/vuln/detail/CVE-2023-25576</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297\">https://github.com/fastify/fastify-multipart/commit/85be81bedf5b29cfd9fe3efc30fb5a17173c1297</a></li>\n<li><a href=\"https://hackerone.com/reports/1816195\">https://hackerone.com/reports/1816195</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/releases/tag/v6.0.1\">https://github.com/fastify/fastify-multipart/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://github.com/fastify/fastify-multipart/releases/tag/v7.4.1\">https://github.com/fastify/fastify-multipart/releases/tag/v7.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpp2-2cr5-pf6g\">https://github.com/advisories/GHSA-hpp2-2cr5-pf6g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpp2-2cr5-pf6g",
            "title": "[@fastify/multipart] Denial of service due to unlimited number of parts",
            "date_modified": "2023-02-14T21:49:56.000Z",
            "date_published": "2023-02-14T21:49:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpp2-2cr5-pf6g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in both the frontend and backend implementations. The default <code>Link</code> component from <code>@backstage/core-components</code> will now reject <code>javascript:</code> URLs, and there is a global override of <code>window.open</code> to do the same.</p>\n<p>In addition the catalog model as well as the catalog backend now has additional validation built in that prevents <code>javascript:</code> URLs in known annotations.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a></li>\n<li>Visit our chat, linked to in the <a href=\"https://github.com/backstage/backstage\">Backstage README</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25571\">https://nvd.nist.gov/vuln/detail/CVE-2023-25571</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\">https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
            "title": "[@backstage/plugin-catalog-backend] Cross site scripting Vulnerability in backstage Software Catalog",
            "date_modified": "2023-02-14T21:35:13.000Z",
            "date_published": "2023-02-14T21:35:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in both the frontend and backend implementations. The default <code>Link</code> component from <code>@backstage/core-components</code> will now reject <code>javascript:</code> URLs, and there is a global override of <code>window.open</code> to do the same.</p>\n<p>In addition the catalog model as well as the catalog backend now has additional validation built in that prevents <code>javascript:</code> URLs in known annotations.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a></li>\n<li>Visit our chat, linked to in the <a href=\"https://github.com/backstage/backstage\">Backstage README</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25571\">https://nvd.nist.gov/vuln/detail/CVE-2023-25571</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\">https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
            "title": "[@backstage/catalog-model] Cross site scripting Vulnerability in backstage Software Catalog",
            "date_modified": "2023-02-14T21:35:13.000Z",
            "date_published": "2023-02-14T21:35:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows a malicious actor with access to add or modify content in an instance of the Backstage software catalog to inject script URLs in the entities stored in the catalog. If users of the catalog then click on said URLs, that can lead to an XSS attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in both the frontend and backend implementations. The default <code>Link</code> component from <code>@backstage/core-components</code> will now reject <code>javascript:</code> URLs, and there is a global override of <code>window.open</code> to do the same.</p>\n<p>In addition the catalog model as well as the catalog backend now has additional validation built in that prevents <code>javascript:</code> URLs in known annotations.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The general practice of limiting access to modifying catalog content and requiring code reviews greatly helps mitigate this vulnerability.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a></li>\n<li>Visit our chat, linked to in the <a href=\"https://github.com/backstage/backstage\">Backstage README</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/backstage/backstage/security/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25571\">https://nvd.nist.gov/vuln/detail/CVE-2023-25571</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8\">https://github.com/backstage/backstage/commit/3d1371954512f7fa8bd0e2d357e00eada2c3e8a8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7hv8-3fr9-j2hv\">https://github.com/advisories/GHSA-7hv8-3fr9-j2hv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv",
            "title": "[@backstage/core-components] Cross site scripting Vulnerability in backstage Software Catalog",
            "date_modified": "2023-02-14T21:35:13.000Z",
            "date_published": "2023-02-14T21:35:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7hv8-3fr9-j2hv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package glance before 3.0.9 are vulnerable to Directory Traversal that allows users to read files outside the public root directory. This is related to but distinct from the vulnerability reported in <a href=\"https://security.snyk.io/vuln/npm:glance:20180129\">CVE-2018-3715</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25937\">https://nvd.nist.gov/vuln/detail/CVE-2022-25937</a></li>\n<li><a href=\"https://github.com/jarofghosts/glance/commit/8cecfe90286e0c45a5494067f1b592d0ccfeabac\">https://github.com/jarofghosts/glance/commit/8cecfe90286e0c45a5494067f1b592d0ccfeabac</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-GLANCE-3318395\">https://security.snyk.io/vuln/SNYK-JS-GLANCE-3318395</a></li>\n<li><a href=\"https://gist.github.com/lirantal/c8cfb0398c78e558b7d4ac02aae67809\">https://gist.github.com/lirantal/c8cfb0398c78e558b7d4ac02aae67809</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3hjh-5hgx-f5wh\">https://github.com/advisories/GHSA-3hjh-5hgx-f5wh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3hjh-5hgx-f5wh",
            "title": "[glance] Path traversal vulnerability in glance",
            "date_modified": "2023-02-14T16:52:36.000Z",
            "date_published": "2023-02-13T06:30:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3hjh-5hgx-f5wh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}