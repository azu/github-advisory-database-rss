{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability was found in email-existence. It has been rated as problematic. Affected by this issue is some unknown functionality of the file <code>index.js</code>. The manipulation leads to inefficient regular expression complexity. The name of the patch is 0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56. It is recommended to apply a patch to fix this issue. VDB-216854 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25049\">https://nvd.nist.gov/vuln/detail/CVE-2018-25049</a></li>\n<li><a href=\"https://github.com/nmanousos/email-existence/pull/37\">https://github.com/nmanousos/email-existence/pull/37</a></li>\n<li><a href=\"https://github.com/nmanousos/email-existence/commit/0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56\">https://github.com/nmanousos/email-existence/commit/0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216854\">https://vuldb.com/?ctiid.216854</a></li>\n<li><a href=\"https://vuldb.com/?id.216854\">https://vuldb.com/?id.216854</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p27h-4cpf-fw48\">https://github.com/advisories/GHSA-p27h-4cpf-fw48</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p27h-4cpf-fw48",
            "title": "[email-existence] email-existence Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-07T05:05:26.000Z",
            "date_published": "2022-12-27T09:30:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p27h-4cpf-fw48"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as critical was found in SimbCo httpster. This vulnerability affects the function fs.realpathSync of the file src/server.coffee. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. The name of the patch is d3055b3e30b40b65d30c5a06d6e053dffa7f35d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216748.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36629\">https://nvd.nist.gov/vuln/detail/CVE-2020-36629</a></li>\n<li><a href=\"https://github.com/SimbCo/httpster/pull/36\">https://github.com/SimbCo/httpster/pull/36</a></li>\n<li><a href=\"https://github.com/SimbCo/httpster/commit/d3055b3e30b40b65d30c5a06d6e053dffa7f35d0\">https://github.com/SimbCo/httpster/commit/d3055b3e30b40b65d30c5a06d6e053dffa7f35d0</a></li>\n<li><a href=\"https://vuldb.com/?id.216748\">https://vuldb.com/?id.216748</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p8j8-wxvp-h695\">https://github.com/advisories/GHSA-p8j8-wxvp-h695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p8j8-wxvp-h695",
            "title": "[httpster] SimbCo httpster vulnerable to Path Traversal",
            "date_modified": "2023-01-06T23:07:39.000Z",
            "date_published": "2022-12-25T12:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p8j8-wxvp-h695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>window-control is an npm package that provides tools to manage window focus. Versions before 1.4.5 are vulnerable to Command Injection via the <code>sendKeys</code> function due to improper input sanitization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25926\">https://nvd.nist.gov/vuln/detail/CVE-2022-25926</a></li>\n<li><a href=\"https://github.com/bruno-robert/window-control/commit/075c854534a749d887655a906759f5a7eee95173\">https://github.com/bruno-robert/window-control/commit/075c854534a749d887655a906759f5a7eee95173</a></li>\n<li><a href=\"https://github.com/bruno-robert/window-control/releases/tag/v1.4.5\">https://github.com/bruno-robert/window-control/releases/tag/v1.4.5</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-WINDOWCONTROL-3186345\">https://security.snyk.io/vuln/SNYK-JS-WINDOWCONTROL-3186345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mjx-wfqp-j5ph\">https://github.com/advisories/GHSA-9mjx-wfqp-j5ph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mjx-wfqp-j5ph",
            "title": "[window-control] window-control vulnerable to Command Injection due to improper input sanitization",
            "date_modified": "2023-01-06T21:39:19.000Z",
            "date_published": "2023-01-04T18:30:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mjx-wfqp-j5ph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The <em>sanitize-svg</em> package uses a deny-list-pattern to sanitize SVGs to prevent cross-site scripting (XSS). In doing so, literal <code>&lt;script&gt;</code>-tags and on-event handlers were detected:</p>\n<pre><code class=\"language-typescript\">[...]\n  const svgEl = div.firstElementChild!\n  const attributes = Array.from(svgEl.attributes).map(({ name }) =&gt; name)\n  const hasScriptAttr = !!attributes.find((attr) =&gt; attr.startsWith('on'))\n  const scripts = svgEl.getElementsByTagName('script')\n  return scripts.length === 0 &amp;&amp; !hasScriptAttr ? svg : null\n[...]\n</code></pre>\n<p>There are more ways to embed JavaScript in XML files.</p>\n<p><strong>Anchor Tag</strong> (requires user to click link):</p>\n<pre><code class=\"language-xml\">&lt;svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"&gt;\n  &lt;a href=\"javascript:alert(document.domain)\"&gt;\n    &lt;text x=\"50\" y=\"50\" text-anchor=\"middle\"&gt;Lauritz&lt;/text&gt;\n  &lt;/a&gt;\n&lt;/svg&gt;\n</code></pre>\n<p><strong>Foreign Object Tag</strong> (no user interaction required):</p>\n<pre><code class=\"language-xml\">&lt;svg width=\"500\" height=\"500\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;\n        &lt;text x=\"20\" y=\"35\"&gt;Lauritz&lt;/text&gt;\n        &lt;foreignObject width=\"500\" height=\"500\"&gt;\n                &lt;iframe xmlns=\"http://www.w3.org/1999/xhtml\" src=\"javascript:confirm(document.domain);\" width=\"400\" height=\"250\"/&gt;\n        &lt;/foreignObject&gt;\n&lt;/svg&gt;\n</code></pre>\n<p>As a result, downstream software that relies on <code>sanitize-svg</code> and expects resulting SVGs to be safe, may be vulnerable to XSS. We are aware of at least one downstream project for which this vulnerability had security implications. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was addressed in v0.4.0.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>N/A</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mattkrick/sanitize-svg/security/advisories/GHSA-h857-2g56-468g\">https://github.com/mattkrick/sanitize-svg/security/advisories/GHSA-h857-2g56-468g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22461\">https://nvd.nist.gov/vuln/detail/CVE-2023-22461</a></li>\n<li><a href=\"https://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d\">https://github.com/mattkrick/sanitize-svg/commit/b107e453ede7b58adcccae74a3e474c012eec85d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h857-2g56-468g\">https://github.com/advisories/GHSA-h857-2g56-468g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h857-2g56-468g",
            "title": "[@mattkrick/sanitize-svg] @mattkrick/sanitize-svg vulnerable to Cross-Site Scripting (XSS)",
            "date_modified": "2023-01-05T12:18:37.000Z",
            "date_published": "2023-01-05T12:18:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h857-2g56-468g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2023-01-05T05:01:39.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic was found in cronvel string-kit up to 0.12.7. This vulnerability affects the function naturalSort of the file lib/naturalSort.js. The manipulation leads to inefficient regular expression complexity. The attack can be initiated remotely. Upgrading to version 0.12.8 can address this issue. The name of the patch is 9cac4c298ee92c1695b0695951f1488884a7ca73. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217180.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4299\">https://nvd.nist.gov/vuln/detail/CVE-2021-4299</a></li>\n<li><a href=\"https://github.com/cronvel/string-kit/commit/9cac4c298ee92c1695b0695951f1488884a7ca73\">https://github.com/cronvel/string-kit/commit/9cac4c298ee92c1695b0695951f1488884a7ca73</a></li>\n<li><a href=\"https://github.com/cronvel/string-kit/releases/tag/v0.12.8\">https://github.com/cronvel/string-kit/releases/tag/v0.12.8</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217180\">https://vuldb.com/?ctiid.217180</a></li>\n<li><a href=\"https://vuldb.com/?id.217180\">https://vuldb.com/?id.217180</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfrm-4rjw-g9q5\">https://github.com/advisories/GHSA-pfrm-4rjw-g9q5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfrm-4rjw-g9q5",
            "title": "[string-kit] string-kit Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-01-04T14:27:38.000Z",
            "date_published": "2023-01-02T09:31:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfrm-4rjw-g9q5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in rgb2hex up to 0.1.5. It has been rated as problematic. This issue affects some unknown processing. The manipulation leads to inefficient regular expression complexity. The attack may be initiated remotely. Upgrading to version 0.1.6 can address this issue. The name of the patch is 9e0c38594432edfa64136fdf7bb651835e17c34f. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217151.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25061\">https://nvd.nist.gov/vuln/detail/CVE-2018-25061</a></li>\n<li><a href=\"https://github.com/christian-bromann/rgb2hex/commit/9e0c38594432edfa64136fdf7bb651835e17c34f\">https://github.com/christian-bromann/rgb2hex/commit/9e0c38594432edfa64136fdf7bb651835e17c34f</a></li>\n<li><a href=\"https://github.com/christian-bromann/rgb2hex/releases/tag/v0.1.6\">https://github.com/christian-bromann/rgb2hex/releases/tag/v0.1.6</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217151\">https://vuldb.com/?ctiid.217151</a></li>\n<li><a href=\"https://vuldb.com/?id.217151\">https://vuldb.com/?id.217151</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7599-fqgm-v84p\">https://github.com/advisories/GHSA-7599-fqgm-v84p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7599-fqgm-v84p",
            "title": "[rgb2hex] rgb2hex vulnerable to inefficient regular expression complexity",
            "date_modified": "2023-01-04T14:26:43.000Z",
            "date_published": "2022-12-31T21:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7599-fqgm-v84p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code>const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \\\"Doing dangerous thing as user.\\\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code>const props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"isAdmin\\\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden…\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\\\"isAdmin\\\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code>const props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"__proto__\\\": {\\\"isAdmin\\\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \\\"Doing dangerous thing as admin.\\\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2023-01-04T13:47:06.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code>const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \\\"Doing dangerous thing as user.\\\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code>const props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"isAdmin\\\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden…\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\\\"isAdmin\\\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code>const props = JSON5.parse('{\\\"foo\\\": \\\"bar\\\", \\\"__proto__\\\": {\\\"isAdmin\\\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \\\"Doing dangerous thing as admin.\\\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2023-01-04T13:47:06.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as critical, has been found in json-pointer. Affected by this issue is the function set of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The name of the patch is 859c9984b6c407fc2d5a0a7e47c7274daa681941. It is recommended to apply a patch to fix this issue. VDB-216794 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4742\">https://nvd.nist.gov/vuln/detail/CVE-2022-4742</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/pull/36\">https://github.com/manuelstofer/json-pointer/pull/36</a></li>\n<li><a href=\"https://github.com/manuelstofer/json-pointer/commit/859c9984b6c407fc2d5a0a7e47c7274daa681941\">https://github.com/manuelstofer/json-pointer/commit/859c9984b6c407fc2d5a0a7e47c7274daa681941</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216794\">https://vuldb.com/?ctiid.216794</a></li>\n<li><a href=\"https://vuldb.com/?id.216794\">https://vuldb.com/?id.216794</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6xrf-q977-5vgc\">https://github.com/advisories/GHSA-6xrf-q977-5vgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6xrf-q977-5vgc",
            "title": "[json-pointer] json-pointer vulnerable to Prototype Pollution",
            "date_modified": "2023-01-06T03:21:32.000Z",
            "date_published": "2022-12-26T09:30:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6xrf-q977-5vgc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability has been found in Starcounter-Jack JSON-Patch up to 3.1.0 and classified as problematic. This vulnerability affects unknown code. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.1.1 can address this issue. The name of the patch is 7ad6af41eabb2d799f698740a91284d762c955c9. It is recommended to upgrade the affected component. VDB-216778 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4279\">https://nvd.nist.gov/vuln/detail/CVE-2021-4279</a></li>\n<li><a href=\"https://github.com/Starcounter-Jack/JSON-Patch/pull/262\">https://github.com/Starcounter-Jack/JSON-Patch/pull/262</a></li>\n<li><a href=\"https://github.com/Starcounter-Jack/JSON-Patch/commit/7ad6af41eabb2d799f698740a91284d762c955c9\">https://github.com/Starcounter-Jack/JSON-Patch/commit/7ad6af41eabb2d799f698740a91284d762c955c9</a></li>\n<li><a href=\"https://github.com/Starcounter-Jack/JSON-Patch/releases/tag/3.1.1\">https://github.com/Starcounter-Jack/JSON-Patch/releases/tag/3.1.1</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216778\">https://vuldb.com/?ctiid.216778</a></li>\n<li><a href=\"https://vuldb.com/?id.216778\">https://vuldb.com/?id.216778</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gh8-hqwg-xf34\">https://github.com/advisories/GHSA-8gh8-hqwg-xf34</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gh8-hqwg-xf34",
            "title": "[fast-json-patch] Starcounter-Jack JSON-Patch Prototype Pollution vulnerability",
            "date_modified": "2023-01-07T05:05:32.000Z",
            "date_published": "2022-12-25T21:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gh8-hqwg-xf34"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>flat helps flatten/unflatten nested Javascript objects. A vulnerability, which was classified as critical, was found in hughsk flat up to 5.0.0. This affects the function unflatten of the file index.js. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). It is possible to initiate the attack remotely. Upgrading to version 5.0.1 can address this issue. The name of the patch is 20ef0ef55dfa028caddaedbcb33efbdb04d18e13. It is recommended to upgrade the affected component. The identifier VDB-216777 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36632\">https://nvd.nist.gov/vuln/detail/CVE-2020-36632</a></li>\n<li><a href=\"https://github.com/hughsk/flat/issues/105\">https://github.com/hughsk/flat/issues/105</a></li>\n<li><a href=\"https://github.com/hughsk/flat/pull/106\">https://github.com/hughsk/flat/pull/106</a></li>\n<li><a href=\"https://github.com/hughsk/flat/commit/20ef0ef55dfa028caddaedbcb33efbdb04d18e13\">https://github.com/hughsk/flat/commit/20ef0ef55dfa028caddaedbcb33efbdb04d18e13</a></li>\n<li><a href=\"https://github.com/hughsk/flat/releases/tag/5.0.1\">https://github.com/hughsk/flat/releases/tag/5.0.1</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216777\">https://vuldb.com/?ctiid.216777</a></li>\n<li><a href=\"https://vuldb.com/?id.216777\">https://vuldb.com/?id.216777</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j2x-2gpw-g8fm\">https://github.com/advisories/GHSA-2j2x-2gpw-g8fm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j2x-2gpw-g8fm",
            "title": "[flat] flat vulnerable to Prototype Pollution",
            "date_modified": "2023-01-06T03:16:40.000Z",
            "date_published": "2022-12-25T21:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j2x-2gpw-g8fm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in markdown-it up to 2.x. It has been classified as problematic. Affected is an unknown function of the file <code>lib/common/html_re.js</code>. The manipulation leads to inefficient regular expression complexity. Upgrading to version 3.0.0 is able to address this issue. The name of the patch is 89c8620157d6e38f9872811620d25138fc9d1b0d. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216852.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-10005\">https://nvd.nist.gov/vuln/detail/CVE-2015-10005</a></li>\n<li><a href=\"https://github.com/markdown-it/markdown-it/commit/89c8620157d6e38f9872811620d25138fc9d1b0d\">https://github.com/markdown-it/markdown-it/commit/89c8620157d6e38f9872811620d25138fc9d1b0d</a></li>\n<li><a href=\"https://github.com/markdown-it/markdown-it/releases/tag/3.0.0\">https://github.com/markdown-it/markdown-it/releases/tag/3.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216852\">https://vuldb.com/?ctiid.216852</a></li>\n<li><a href=\"https://vuldb.com/?id.216852\">https://vuldb.com/?id.216852</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j5p7-jf4q-742q\">https://github.com/advisories/GHSA-j5p7-jf4q-742q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j5p7-jf4q-742q",
            "title": "[markdown-it] markdown-it vulnerable to Inefficient Regular Expression Complexity",
            "date_modified": "2023-01-07T05:05:32.000Z",
            "date_published": "2022-12-27T09:30:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j5p7-jf4q-742q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jodit Editor is a WYSIWYG editor written in pure TypeScript without the use of additional libraries. Jodit Editor is vulnerable to XSS attacks when pasting specially constructed input. This issue has not been fully patched. There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23461\">https://nvd.nist.gov/vuln/detail/CVE-2022-23461</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/\">https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-42hx-vrxx-5r6v\">https://github.com/advisories/GHSA-42hx-vrxx-5r6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-42hx-vrxx-5r6v",
            "title": "[jodit] Jodit Editor vulnerable to Cross-site Scripting",
            "date_modified": "2022-12-28T21:22:16.000Z",
            "date_published": "2022-09-25T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-42hx-vrxx-5r6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Json2html is a client side javascript HTML templating library with wrappers for both jQuery and Node.js. A vulnerability was found in moappi Json2html up to 1.1.x and classified as problematic. This issue affects some unknown processing of the file json2html.js. The manipulation leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 1.2.0 can address this issue. The name of the patch is 2d3d24d971b19a8ed1fb823596300b9835d55801. The associated identifier of this vulnerability is VDB-216959.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-25053\">https://nvd.nist.gov/vuln/detail/CVE-2018-25053</a></li>\n<li><a href=\"https://github.com/moappi/json2html/commit/2d3d24d971b19a8ed1fb823596300b9835d55801\">https://github.com/moappi/json2html/commit/2d3d24d971b19a8ed1fb823596300b9835d55801</a></li>\n<li><a href=\"https://github.com/moappi/json2html/releases/tag/1.2.0\">https://github.com/moappi/json2html/releases/tag/1.2.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216959\">https://vuldb.com/?ctiid.216959</a></li>\n<li><a href=\"https://vuldb.com/?id.216959\">https://vuldb.com/?id.216959</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-79mp-cxp4-9p6r\">https://github.com/advisories/GHSA-79mp-cxp4-9p6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-79mp-cxp4-9p6r",
            "title": "[node-json2html] Json2html vulnerable to cross-site scripting",
            "date_modified": "2022-12-28T20:35:03.000Z",
            "date_published": "2022-12-28T12:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-79mp-cxp4-9p6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package liquidjs before 10.0.0 is vulnerable to Information Exposure when <code>ownPropertyOnly</code> parameter is set to <code>False</code>, which results in leaking properties of a prototype. Workaround For versions 9.34.0 and higher, an option to disable this functionality is provided.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25948\">https://nvd.nist.gov/vuln/detail/CVE-2022-25948</a></li>\n<li><a href=\"https://github.com/harttle/liquidjs/issues/454\">https://github.com/harttle/liquidjs/issues/454</a></li>\n<li><a href=\"https://github.com/harttle/liquidjs/commit/7e99efc5131e20cf3f59e1fc2c371a15aa4109db\">https://github.com/harttle/liquidjs/commit/7e99efc5131e20cf3f59e1fc2c371a15aa4109db</a></li>\n<li><a href=\"https://github.com/harttle/liquidjs/commit/7eb621601c2b05d6e379e5ce42219f2b1f556208\">https://github.com/harttle/liquidjs/commit/7eb621601c2b05d6e379e5ce42219f2b1f556208</a></li>\n<li><a href=\"https://groups.google.com/u/0/a/snyk.io/g/report/c/9ipXecWRtTM/m/IgLadevtCQAJ\">https://groups.google.com/u/0/a/snyk.io/g/report/c/9ipXecWRtTM/m/IgLadevtCQAJ</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-LIQUIDJS-2952868\">https://security.snyk.io/vuln/SNYK-JS-LIQUIDJS-2952868</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45rm-2893-5f49\">https://github.com/advisories/GHSA-45rm-2893-5f49</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45rm-2893-5f49",
            "title": "[liquidjs] liquidjs may leak properties of a prototype",
            "date_modified": "2023-01-02T21:15:49.000Z",
            "date_published": "2022-12-22T06:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45rm-2893-5f49"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in LinkedIn dustjs prior to version 3.0.0 and classified as problematic. Affected by this issue is some unknown functionality. The manipulation leads to improperly controlled modification of object prototype attributes ('prototype pollution'). The attack may be launched remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 3.0.0 can address this issue. The name of the patch is ddb6523832465d38c9d80189e9de60519ac307c3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216464.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4264\">https://nvd.nist.gov/vuln/detail/CVE-2021-4264</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs/issues/804\">https://github.com/linkedin/dustjs/issues/804</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs/pull/805\">https://github.com/linkedin/dustjs/pull/805</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs/commit/ddb6523832465d38c9d80189e9de60519ac307c3\">https://github.com/linkedin/dustjs/commit/ddb6523832465d38c9d80189e9de60519ac307c3</a></li>\n<li><a href=\"https://vuldb.com/?id.216464\">https://vuldb.com/?id.216464</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs/releases/tag/v3.0.0\">https://github.com/linkedin/dustjs/releases/tag/v3.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216464\">https://vuldb.com/?ctiid.216464</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c6rp-wrp9-qr4q\">https://github.com/advisories/GHSA-c6rp-wrp9-qr4q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c6rp-wrp9-qr4q",
            "title": "[dustjs-linkedin] dustjs-linkedin vulnerable to Prototype Pollution",
            "date_modified": "2022-12-29T01:06:39.000Z",
            "date_published": "2022-12-21T21:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c6rp-wrp9-qr4q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package vm2 before 3.9.10 is vulnerable to Arbitrary Code Execution due to the usage of prototype lookup for the WeakMap.prototype.set method. Exploiting this vulnerability leads to access to a host object and a sandbox compromise.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25893\">https://nvd.nist.gov/vuln/detail/CVE-2022-25893</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/issues/444\">https://github.com/patriksimek/vm2/issues/444</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/pull/445\">https://github.com/patriksimek/vm2/pull/445</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69\">https://github.com/patriksimek/vm2/pull/445/commits/3a9876482be487b78a90ac459675da7f83f46d69</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-VM2-2990237\">https://security.snyk.io/vuln/SNYK-JS-VM2-2990237</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4w2j-2rg4-5mjw\">https://github.com/advisories/GHSA-4w2j-2rg4-5mjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4w2j-2rg4-5mjw",
            "title": "[vm2] vm2 vulnerable to Arbitrary Code Execution",
            "date_modified": "2023-01-06T05:08:16.000Z",
            "date_published": "2022-12-21T06:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4w2j-2rg4-5mjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"overview\">Overview</h1>\n<p>Versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the <code>secretOrPublicKey</code> argument from the <a href=\"https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback\">readme link</a>) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification  than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. </p>\n<h1 id=\"am-i-affected\">Am I affected?</h1>\n<p>You will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. </p>\n<h1 id=\"how-do-i-fix-it\">How do I fix it?</h1>\n<p>Update to version 9.0.0.</p>\n<h1 id=\"will-the-fix-impact-my-users\">Will the fix impact my users?</h1>\n<p>There is no impact for end users</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959\">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959</a></li>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23541\">https://nvd.nist.gov/vuln/detail/CVE-2022-23541</a></li>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0\">https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjrf-2m68-5959\">https://github.com/advisories/GHSA-hjrf-2m68-5959</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjrf-2m68-5959",
            "title": "[jsonwebtoken] jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC",
            "date_modified": "2023-01-06T05:05:56.000Z",
            "date_published": "2022-12-22T03:33:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjrf-2m68-5959"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"overview\">Overview</h1>\n<p>In versions <code>&lt;=8.5.1</code> of <code>jsonwebtoken</code> library, lack of algorithm definition in the <code>jwt.verify()</code> function can lead to signature validation bypass due to defaulting to the <code>none</code> algorithm for signature verification. </p>\n<h1 id=\"am-i-affected\">Am I affected?</h1>\n<p>You will be affected if you do not specify algorithms in the <code>jwt.verify()</code> function</p>\n<h1 id=\"how-do-i-fix-it\">How do I fix it?</h1>\n<p>Update to version 9.0.0 which removes the default support for the none algorithm in the <code>jwt.verify()</code> method. </p>\n<h1 id=\"will-the-fix-impact-my-users\">Will the fix impact my users?</h1>\n<p>There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the <code>none</code> algorithm. If you need 'none' algorithm, you have to explicitly specify that in <code>jwt.verify()</code> options.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6\">https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6</a></li>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3\">https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23540\">https://nvd.nist.gov/vuln/detail/CVE-2022-23540</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qwph-4952-7xr6\">https://github.com/advisories/GHSA-qwph-4952-7xr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qwph-4952-7xr6",
            "title": "[jsonwebtoken] jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()",
            "date_modified": "2023-01-06T05:05:40.000Z",
            "date_published": "2022-12-22T03:32:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qwph-4952-7xr6"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}