{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[qs] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[<strong>proto</strong>]=b&amp;a[<strong>proto</strong>]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: <a href=\"mailto:qs@6.9.7\">qs@6.9.7</a>\" in its release description, is not vulnerable).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24999\">https://nvd.nist.gov/vuln/detail/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/ljharb/qs/pull/428\">https://github.com/ljharb/qs/pull/428</a></li>\n<li><a href=\"https://github.com/expressjs/express/releases/tag/4.17.3\">https://github.com/expressjs/express/releases/tag/4.17.3</a></li>\n<li><a href=\"https://github.com/n8tz/CVE-2022-24999\">https://github.com/n8tz/CVE-2022-24999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrpp-h998-j3pp\">https://github.com/advisories/GHSA-hrpp-h998-j3pp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp",
            "title": "[express] qs vulnerable to Prototype Pollution",
            "date_modified": "2022-12-06T14:32:47.000Z",
            "date_published": "2022-11-27T00:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrpp-h998-j3pp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nako3edit is the editor component of Nadeshiko 3, a programming language developed based on Japanese. Improper check or handling of exceptional conditions in Nako3edit v3.3.74 and earlier allows a remote attacker to inject an invalid value to decodeURIComponent of nako3edit, which may lead the server to crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41777\">https://nvd.nist.gov/vuln/detail/CVE-2022-41777</a></li>\n<li><a href=\"https://github.com/kujirahand/nadesiko3/issues/1325\">https://github.com/kujirahand/nadesiko3/issues/1325</a></li>\n<li><a href=\"https://github.com/kujirahand/nadesiko3/issues/1347\">https://github.com/kujirahand/nadesiko3/issues/1347</a></li>\n<li><a href=\"https://jvn.jp/en/jp/JVN56968681/index.html\">https://jvn.jp/en/jp/JVN56968681/index.html</a></li>\n<li><a href=\"https://github.com/kujirahand/nadesiko3/releases/tag/3.3.75\">https://github.com/kujirahand/nadesiko3/releases/tag/3.3.75</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x2jx-w3wm-9p3p\">https://github.com/advisories/GHSA-x2jx-w3wm-9p3p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x2jx-w3wm-9p3p",
            "title": "[nadesiko3] nadesiko3 allows remote attacker to inject invalid value to decodeURIComponent of nako3edit",
            "date_modified": "2022-12-06T18:51:46.000Z",
            "date_published": "2022-12-05T06:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x2jx-w3wm-9p3p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package linux-cmdline is a parser for Linux kernel command line arguments. Versions before 1.0.1 are vulnerable to Prototype Pollution via the constructor.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7704\">https://nvd.nist.gov/vuln/detail/CVE-2020-7704</a></li>\n<li><a href=\"https://github.com/piranna/linux-cmdline/commit/53c61a88bc47eb25d71832205056beaab95cf677\">https://github.com/piranna/linux-cmdline/commit/53c61a88bc47eb25d71832205056beaab95cf677</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LINUXCMDLINE-598674\">https://snyk.io/vuln/SNYK-JS-LINUXCMDLINE-598674</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c29-wc65-4cx9\">https://github.com/advisories/GHSA-2c29-wc65-4cx9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c29-wc65-4cx9",
            "title": "[linux-cmdline] linux-cmdline is vulnerable to Prototype Pollution via the constructor",
            "date_modified": "2022-12-05T23:17:27.000Z",
            "date_published": "2022-05-24T17:26:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c29-wc65-4cx9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to a plain object with a prototype being used in socket.io message handling a specially crafted payload can be used to impersonate other users and takeover accounts.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in 2.6.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Site maintainers can cherry-pick <a href=\"https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8\">https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8</a> into their codebase to patch the exploit.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Discuss it on <a href=\"https://github.com/NodeBB/NodeBB/security/advisories/community.nodebb.org/\">our community forum</a>\nEmail us at <a href=\"mailto:support@nodebb.org\">support@nodebb.org</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NodeBB/NodeBB/security/advisories/GHSA-rf3g-v8p5-p675\">https://github.com/NodeBB/NodeBB/security/advisories/GHSA-rf3g-v8p5-p675</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46164\">https://nvd.nist.gov/vuln/detail/CVE-2022-46164</a></li>\n<li><a href=\"https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8\">https://github.com/NodeBB/NodeBB/commit/48d143921753914da45926cca6370a92ed0c46b8</a></li>\n<li><a href=\"https://github.com/NodeBB/NodeBB/releases/tag/v2.6.1\">https://github.com/NodeBB/NodeBB/releases/tag/v2.6.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rf3g-v8p5-p675\">https://github.com/advisories/GHSA-rf3g-v8p5-p675</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rf3g-v8p5-p675",
            "title": "[nodebb] NodeBB vulnerable to account takeover via prototype vulnerability",
            "date_modified": "2022-12-05T23:06:15.000Z",
            "date_published": "2022-12-05T23:06:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rf3g-v8p5-p675"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.\nReplace hummus with muhammara</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41957\">https://nvd.nist.gov/vuln/detail/CVE-2022-41957</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/advisories/GHSA-2r7v-cmch-5x26</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26",
            "title": "[muhammara] muhammara and hummus vulnerable to Unchecked Return Value to NULL Pointer Dereference",
            "date_modified": "2022-12-05T17:37:23.000Z",
            "date_published": "2022-12-05T17:37:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.\nReplace hummus with muhammara</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41957\">https://nvd.nist.gov/vuln/detail/CVE-2022-41957</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/advisories/GHSA-2r7v-cmch-5x26</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26",
            "title": "[muhammara] muhammara and hummus vulnerable to Unchecked Return Value to NULL Pointer Dereference",
            "date_modified": "2022-12-05T17:37:23.000Z",
            "date_published": "2022-12-05T17:37:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The package muhammara before 2.6.2, from 3.0.0 and before 3.3.0; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It has been patched in 3.4.0 and has been backported to 2.6.2\nThere is no patch for hummus, currently</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do not process files from untrusted sources or update.\nReplace hummus with muhammara</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a>\n<a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/julianhille/MuhammaraJS/security/advisories/GHSA-2r7v-cmch-5x26</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41957\">https://nvd.nist.gov/vuln/detail/CVE-2022-41957</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/235\">https://github.com/julianhille/MuhammaraJS/pull/235</a></li>\n<li><a href=\"https://github.com/julianhille/MuhammaraJS/pull/238\">https://github.com/julianhille/MuhammaraJS/pull/238</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2r7v-cmch-5x26\">https://github.com/advisories/GHSA-2r7v-cmch-5x26</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26",
            "title": "[hummus] muhammara and hummus vulnerable to Unchecked Return Value to NULL Pointer Dereference",
            "date_modified": "2022-12-05T17:37:23.000Z",
            "date_published": "2022-12-05T17:37:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2r7v-cmch-5x26"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-12-03T05:00:48.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ToolJet/ToolJet placed no limit on the file size for user avatars. This could cause a denial of service if too many users upload large files. This is fixed in commit 01cd3f0464747973ec329e9fb1ea12743d3235cc in version 1.27.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4111\">https://nvd.nist.gov/vuln/detail/CVE-2022-4111</a></li>\n<li><a href=\"https://github.com/tooljet/tooljet/commit/01cd3f0464747973ec329e9fb1ea12743d3235cc\">https://github.com/tooljet/tooljet/commit/01cd3f0464747973ec329e9fb1ea12743d3235cc</a></li>\n<li><a href=\"https://huntr.dev/bounties/5596d072-66d2-4361-8cac-101c9c781c3d\">https://huntr.dev/bounties/5596d072-66d2-4361-8cac-101c9c781c3d</a></li>\n<li><a href=\"https://github.com/ToolJet/ToolJet/pull/4103\">https://github.com/ToolJet/ToolJet/pull/4103</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hgp8-w8fj-r4cm\">https://github.com/advisories/GHSA-hgp8-w8fj-r4cm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hgp8-w8fj-r4cm",
            "title": "[tooljet] ToolJet is vulnerable to Denial of Service (DoS)",
            "date_modified": "2022-12-02T22:38:24.000Z",
            "date_published": "2022-11-22T03:30:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hgp8-w8fj-r4cm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects all versions of package static-dev-server. This is because when paths from users to the root directory are joined, the assets for the path accessed are relative to that of the root directory. There is currently no known workaround or fix for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25848\">https://nvd.nist.gov/vuln/detail/CVE-2022-25848</a></li>\n<li><a href=\"https://gist.github.com/lirantal/5550bcd0bdf92c1b56fbb20e141fe5bd\">https://gist.github.com/lirantal/5550bcd0bdf92c1b56fbb20e141fe5bd</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-STATICDEVSERVER-3149917\">https://security.snyk.io/vuln/SNYK-JS-STATICDEVSERVER-3149917</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fxm-c848-89q8\">https://github.com/advisories/GHSA-7fxm-c848-89q8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fxm-c848-89q8",
            "title": "[static-dev-server] static-dev-server vulnerable to path traversal",
            "date_modified": "2022-12-02T22:21:45.000Z",
            "date_published": "2022-11-29T18:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fxm-c848-89q8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38900\">https://nvd.nist.gov/vuln/detail/CVE-2022-38900</a></li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/issues/5\">https://github.com/SamVerschueren/decode-uri-component/issues/5</a></li>\n<li><a href=\"https://github.com/sindresorhus/query-string/issues/345\">https://github.com/sindresorhus/query-string/issues/345</a></li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9\">https://github.com/SamVerschueren/decode-uri-component/commit/746ca5dcb6667c5d364e782d53c542830e4c10b9</a></li>\n<li><a href=\"https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1\">https://github.com/SamVerschueren/decode-uri-component/releases/tag/v0.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w573-4hg7-7wgq\">https://github.com/advisories/GHSA-w573-4hg7-7wgq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w573-4hg7-7wgq",
            "title": "[decode-uri-component] decode-uri-component vulnerable to Denial of Service (DoS)",
            "date_modified": "2022-12-01T21:56:00.000Z",
            "date_published": "2022-11-28T15:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w573-4hg7-7wgq"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}