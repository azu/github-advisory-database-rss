{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker cooperating with a malicious homeserver can construct messages that legitimately appear to have come from another person, without any indication such as a grey shield.</p>\n<p>Additionally, a sophisticated attacker cooperating with a malicious homeserver could employ this vulnerability to perform a targeted attack in order to send fake to-device messages appearing to originate from another user. This can allow, for example, to inject the key backup secret during a self-verification, to make a targeted device start using a malicious key backup spoofed by the homeserver.</p>\n<p>These attacks are possible due to a protocol confusion vulnerability that accepts to-device messages encrypted with Megolm instead of Olm.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>matrix-js-sdk has been modified to only accept Olm-encrypted to-device messages.</p>\n<p>Out of caution, several other checks have been audited or added:</p>\n<ul>\n<li>Cleartext <code>m.room_key</code>, <code>m.forwarded_room_key</code> and <code>m.secret.send</code> to_device messages are discarded.</li>\n<li>Secrets received from untrusted devices are discarded.</li>\n<li>Key backups are only usable if they have a valid signature from a trusted device (no more local trust, or trust-on-decrypt).</li>\n<li>The origin of a to-device message should only be determined by observing the Olm session which managed to decrypt the message, and not by using claimed sender_key, user_id, or any other fields controllable by the homeserver.</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As this attack requires coordination between a malicious home server and an attacker, if you trust your home server no particular workaround is needed. Notice that the backup spoofing attack is a particularly sophisticated targeted attack.</p>\n<p>We are not aware of this attack being used in the wild, though specifying a false positive-free way of noticing malicious key backups key is challenging.</p>\n<p>As an abundance of caution, to avoid malicious backup attacks, you should not verify your new logins using emoji/QR verifications methods until patched. Prefer verifying with your security passphrase instead.</p>\n<h3 id=\"references\">References</h3>\n<p>Blog post: <a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-r48r-j8fx-mq2c\">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-r48r-j8fx-mq2c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39251\">https://nvd.nist.gov/vuln/detail/CVE-2022-39251</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>\n<li><a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r48r-j8fx-mq2c\">https://github.com/advisories/GHSA-r48r-j8fx-mq2c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r48r-j8fx-mq2c",
            "title": "[matrix-js-sdk] matrix-js-sdk subject to user spoofing via Olm/Megolm protocol confusion",
            "date_modified": "2022-09-30T00:41:25.000Z",
            "date_published": "2022-09-30T00:41:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r48r-j8fx-mq2c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>An attacker cooperating with a malicious homeserver can construct messages appearing to have come from another person. Such messages will be marked with a grey shield on some platforms, but this may be missing in others.</p>\n<p>This attack is possible due to the matrix-js-sdk implementing a too permissive <a href=\"https://spec.matrix.org/v1.3/client-server-api/#key-requests\">key forwarding</a> strategy on the receiving end.</p>\n<p>Key forwarding is a mechanism allowing clients to recover from “unable to decrypt” messages when they missed the initial key distribution, at the time the message was originally sent. Examples include accessing message history before they joined the room but also when some network/federation errors have occurred.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>The default policy for accepting key forwards has been made more strict in the matrix-js-sdk. matrix-js-sdk will now only accept forwarded keys in response to previously issued requests and only from own, verified devices.</p>\n<p>A unique exception to this rule is with the experimental <a href=\"https://github.com/matrix-org/matrix-spec-proposals/pull/3061\">MSC3061</a>, that is forwarding room keys for past messages when invited in a room configured with the proper history visibility setting. Such key forwards are parked upon receipt and are only accepted if the SDK receives an invitation for that room from the inviter in a limited time window.</p>\n<p>The SDK now sets a <code>trusted</code> flag on the decrypted message upon decryption, based on whether the key used to decrypt the message was received from a trusted source. Clients need to ensure that messages decrypted with a key with <code>trusted = false</code> are decorated appropriately (for example, by showing a warning for such messages).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>As this attack requires coordination between a malicious homeserver and an attacker, if you trust your homeserver, no particular workaround is needed.</p>\n<h2 id=\"references\">References</h2>\n<p>Blog post: <a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6263-x97c-c4gg\">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-6263-x97c-c4gg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39249\">https://nvd.nist.gov/vuln/detail/CVE-2022-39249</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-spec-proposals/pull/3061\">https://github.com/matrix-org/matrix-spec-proposals/pull/3061</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>\n<li><a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6263-x97c-c4gg\">https://github.com/advisories/GHSA-6263-x97c-c4gg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6263-x97c-c4gg",
            "title": "[matrix-js-sdk] matrix-js-sdk subject to impersonated messages due to permissive key forwarding",
            "date_modified": "2022-09-30T00:40:37.000Z",
            "date_published": "2022-09-30T00:40:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6263-x97c-c4gg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improperly formed beacon events (from <a href=\"https://github.com/matrix-org/matrix-spec-proposals/pull/3488\">MSC3488</a>) can disrupt or impede the matrix-js-sdk from functioning properly, potentially impacting the consumer's ability to process data safely. Note that the matrix-js-sdk can appear to be operating normally but be excluding or corrupting runtime data presented to the consumer.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is patched in matrix-js-sdk v19.7.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Redacting applicable events, waiting for the sync processor to store data, and restarting the client can often fix it. Alternatively, redacting the applicable events and clearing all storage will fix the further perceived issues.</p>\n<p>Downgrading to an unaffected version, noting that such a version may be subject to other vulnerabilities, will additionally resolve the issue.</p>\n<h3 id=\"references\">References</h3>\n<p>N/A - This was a logic error in the SDK.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory please email us at <a href=\"mailto:security@matrix.org\">security at matrix.org</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-hvv8-5v86-r45x\">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-hvv8-5v86-r45x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39236\">https://nvd.nist.gov/vuln/detail/CVE-2022-39236</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-spec-proposals/pull/3488\">https://github.com/matrix-org/matrix-spec-proposals/pull/3488</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hvv8-5v86-r45x\">https://github.com/advisories/GHSA-hvv8-5v86-r45x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hvv8-5v86-r45x",
            "title": "[matrix-js-sdk] Improper beacon events in matrix-js-sdk can result in availability issues",
            "date_modified": "2022-09-29T14:36:39.000Z",
            "date_published": "2022-09-29T14:36:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hvv8-5v86-r45x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36604\">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/issues/352\">https://github.com/hapijs/hoek/issues/352</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c429-5p7v-vgjp\">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp",
            "title": "[@hapi/hoek] hoek subject to prototype pollution via the clone function.",
            "date_modified": "2022-09-29T14:13:31.000Z",
            "date_published": "2022-09-25T00:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36604\">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/issues/352\">https://github.com/hapijs/hoek/issues/352</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c429-5p7v-vgjp\">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp",
            "title": "[@hapi/hoek] hoek subject to prototype pollution via the clone function.",
            "date_modified": "2022-09-29T14:13:31.000Z",
            "date_published": "2022-09-25T00:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The d3-color module provides representations for various color spaces in the browser. Versions prior to 3.1.0 are vulnerable to a Regular expression Denial of Service. This issue has been patched in version 3.1.0. There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/d3/d3-color/pull/100\">https://github.com/d3/d3-color/pull/100</a></li>\n<li><a href=\"https://github.com/d3/d3-color/releases/tag/v3.1.0\">https://github.com/d3/d3-color/releases/tag/v3.1.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592\">https://security.snyk.io/vuln/SNYK-JS-D3COLOR-1076592</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36jr-mh4h-2g58\">https://github.com/advisories/GHSA-36jr-mh4h-2g58</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36jr-mh4h-2g58",
            "title": "[d3-color] d3-color vulnerable to ReDoS",
            "date_modified": "2022-09-29T14:12:56.000Z",
            "date_published": "2022-09-29T14:12:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36jr-mh4h-2g58"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-09-29T03:02:53.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A threat actor can bypass the sandbox protections to gain remote code execution rights on the host running the sandbox.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was patched in the release of version <code>3.9.11</code> of <code>vm2</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None. </p>\n<h3 id=\"references\">References</h3>\n<p>Github Issue - <a href=\"https://github.com/patriksimek/vm2/issues/467\">https://github.com/patriksimek/vm2/issues/467</a>\nThe file that was patched - <a href=\"https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71\">https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71</a>\nThe commit with the patch - <a href=\"https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164\">https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/patriksimek/vm2\">VM2</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq\">https://github.com/patriksimek/vm2/security/advisories/GHSA-mrgp-mrhc-5jrq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36067\">https://nvd.nist.gov/vuln/detail/CVE-2022-36067</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/issues/467\">https://github.com/patriksimek/vm2/issues/467</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164\">https://github.com/patriksimek/vm2/commit/d9a7f3cc995d3d861e1380eafb886cb3c5e2b873#diff-b1a515a627d820118e76d0e323fe2f0589ed50a1eacb490f6c3278fe3698f164</a></li>\n<li><a href=\"https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71\">https://github.com/patriksimek/vm2/blob/master/lib/setup-sandbox.js#L71</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrgp-mrhc-5jrq\">https://github.com/advisories/GHSA-mrgp-mrhc-5jrq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrgp-mrhc-5jrq",
            "title": "[vm2] vm2 vulnerable to Sandbox Escape resulting in Remote Code Execution on host",
            "date_modified": "2022-09-28T13:09:02.000Z",
            "date_published": "2022-09-28T13:09:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrgp-mrhc-5jrq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jodit Editor is a WYSIWYG editor written in pure TypeScript without the use of additional libraries. Jodit Editor is vulnerable to XSS attacks when pasting specially constructed input. This issue has not been fully patched. There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23461\">https://nvd.nist.gov/vuln/detail/CVE-2022-23461</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/\">https://securitylab.github.com/advisories/GHSL-2022-030_xdan_jodit/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-42hx-vrxx-5r6v\">https://github.com/advisories/GHSA-42hx-vrxx-5r6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-42hx-vrxx-5r6v",
            "title": "[jodit] Jodit Editor vulnerable to Cross-site Scripting",
            "date_modified": "2022-09-27T22:48:56.000Z",
            "date_published": "2022-09-25T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-42hx-vrxx-5r6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The secp256k1-js package before 1.1.0 for Node.js implements ECDSA without required r and s validation, leading to signature forgery.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41340\">https://nvd.nist.gov/vuln/detail/CVE-2022-41340</a></li>\n<li><a href=\"https://github.com/lionello/secp256k1-js/issues/11\">https://github.com/lionello/secp256k1-js/issues/11</a></li>\n<li><a href=\"https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e\">https://github.com/lionello/secp256k1-js/commit/302800f0370b42e360a33774bb808274ac729c2e</a></li>\n<li><a href=\"https://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0\">https://github.com/lionello/secp256k1-js/compare/1.0.1...1.1.0</a></li>\n<li><a href=\"https://www.npmjs.com/package/@lionello/secp256k1-js\">https://www.npmjs.com/package/@lionello/secp256k1-js</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q3f4-9h4p-vgr3\">https://github.com/advisories/GHSA-q3f4-9h4p-vgr3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q3f4-9h4p-vgr3",
            "title": "[@lionello/secp256k1-js] secp256k1-js implements ECDSA without required r and s validation, leading to signature forgery",
            "date_modified": "2022-09-27T22:35:00.000Z",
            "date_published": "2022-09-25T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q3f4-9h4p-vgr3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects the package pac-resolver before 5.0.0. This can occur when used with untrusted input, due to unsafe PAC file handling. <strong>NOTE:</strong> The fix for this vulnerability is applied in the node-degenerator library, a dependency written by the same maintainer.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23406\">https://nvd.nist.gov/vuln/detail/CVE-2021-23406</a></li>\n<li><a href=\"https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e\">https://github.com/TooTallNate/node-degenerator/commit/9d25bb67d957bc2e5425fea7bf7a58b3fc64ff9e</a></li>\n<li><a href=\"https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5\">https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5</a></li>\n<li><a href=\"https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0\">https://github.com/TooTallNate/node-pac-resolver/releases/tag/5.0.0</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1568506\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-1568506</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857\">https://snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9j49-mfvp-vmhm\">https://github.com/advisories/GHSA-9j49-mfvp-vmhm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9j49-mfvp-vmhm",
            "title": "[degenerator] Code Injection in pac-resolver",
            "date_modified": "2022-09-26T13:33:14.000Z",
            "date_published": "2021-09-02T17:10:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9j49-mfvp-vmhm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>default-deep</code> before 0.2.4 are vulnerable to prototype pollution</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 0.2.4 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-3723\">https://nvd.nist.gov/vuln/detail/CVE-2018-3723</a></li>\n<li><a href=\"https://hackerone.com/reports/310514\">https://hackerone.com/reports/310514</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqp5-m4pq-gfgp\">https://github.com/advisories/GHSA-cqp5-m4pq-gfgp</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/581\">https://www.npmjs.com/advisories/581</a></li>\n<li><a href=\"https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5\">https://github.com/jonschlinkert/defaults-deep/commit/c873f341327ad885ff4d0f23b3d3bca31b0343e5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqp5-m4pq-gfgp",
            "title": "[defaults-deep] Prototype Pollution in defaults-deep",
            "date_modified": "2022-09-26T13:31:49.000Z",
            "date_published": "2018-07-26T15:18:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqp5-m4pq-gfgp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function convertLater in npm-convert.js in stealjs steal 2.2.4 via the packageName variable in npm-convert.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37258\">https://nvd.nist.gov/vuln/detail/CVE-2022-37258</a></li>\n<li><a href=\"https://github.com/stealjs/steal/issues/1527\">https://github.com/stealjs/steal/issues/1527</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L369\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L369</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gvjw-8mmr-8f6g\">https://github.com/advisories/GHSA-gvjw-8mmr-8f6g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gvjw-8mmr-8f6g",
            "title": "[steal] steal vulnerable to Prototype Pollution",
            "date_modified": "2022-09-23T13:44:50.000Z",
            "date_published": "2022-09-17T00:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gvjw-8mmr-8f6g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An XSS issue was discovered in tooltip/tooltip.js in PrimeTek PrimeFaces 7.0.11. In a web application using PrimeFaces, an attacker can provide JavaScript code in an input field whose data is later used as a tooltip title without any input validation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-10544\">https://nvd.nist.gov/vuln/detail/CVE-2020-10544</a></li>\n<li><a href=\"https://github.com/primefaces/primefaces/issues/5642\">https://github.com/primefaces/primefaces/issues/5642</a></li>\n<li><a href=\"https://github.com/primefaces/primefaces/commit/9982c4f7a83f75e3ab06168fa283e3d6128dfd1f\">https://github.com/primefaces/primefaces/commit/9982c4f7a83f75e3ab06168fa283e3d6128dfd1f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fw5f-7c6c-3vmv\">https://github.com/advisories/GHSA-fw5f-7c6c-3vmv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fw5f-7c6c-3vmv",
            "title": "[primefaces] Cross-site Scripting in PrimeFaces",
            "date_modified": "2022-09-21T22:35:52.000Z",
            "date_published": "2021-05-07T16:16:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fw5f-7c6c-3vmv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A URL parsing issue in goog.uri of the Google Closure Library versions up to and including v20200224 allows an attacker to send malicious URLs to be parsed by the library and return the wrong authority. Mitigation -- update your library to version v20200315.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8910\">https://nvd.nist.gov/vuln/detail/CVE-2020-8910</a></li>\n<li><a href=\"https://github.com/google/closure-library/commit/294fc00b01d248419d8f8de37580adf2a0024fc9\">https://github.com/google/closure-library/commit/294fc00b01d248419d8f8de37580adf2a0024fc9</a></li>\n<li><a href=\"https://github.com/google/closure-library/releases/tag/v20200315\">https://github.com/google/closure-library/releases/tag/v20200315</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh5w-fg69-rc8m\">https://github.com/advisories/GHSA-vh5w-fg69-rc8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh5w-fg69-rc8m",
            "title": "[google-closure-library] Improper Input Validation in Google Closure Library",
            "date_modified": "2022-09-21T22:34:07.000Z",
            "date_published": "2021-05-07T16:06:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh5w-fg69-rc8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>By sending specially crafted headers an attacker can bypass the source image domain allowlist, causing the handler to load and return arbitrary images. Because the response is cached globally, this image will then be served to visitors without requiring those headers to be set. XSS can be achieved by requesting a malicious SVG with embedded scripts, which would then be served from the site domain. Note that this does not apply to images loaded in <code>&lt;img&gt;</code> tags, as scripts do not execute in this context. The image URL can be set in the header independently of the request URL, meaning any site images that have not previously been cached can have their cache poisoned.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This problem has been fixed in version 1.2.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The problem is no longer exploitable on Netlify as the CDN now sanitizes the relevant header. Cached content can be cleared by re-deploying the site.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/netlify/netlify-ipx/security/advisories/GHSA-9jjv-524m-jm98\">https://github.com/netlify/netlify-ipx/security/advisories/GHSA-9jjv-524m-jm98</a></li>\n<li><a href=\"https://github.com/netlify/netlify-ipx/pull/61\">https://github.com/netlify/netlify-ipx/pull/61</a></li>\n<li><a href=\"https://github.com/netlify/netlify-ipx/commit/dfa7505a8d47a76fd527570dc40737a61500759b\">https://github.com/netlify/netlify-ipx/commit/dfa7505a8d47a76fd527570dc40737a61500759b</a></li>\n<li><a href=\"https://github.com/netlify/netlify-ipx/releases/tag/v1.2.3\">https://github.com/netlify/netlify-ipx/releases/tag/v1.2.3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39239\">https://nvd.nist.gov/vuln/detail/CVE-2022-39239</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9jjv-524m-jm98\">https://github.com/advisories/GHSA-9jjv-524m-jm98</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9jjv-524m-jm98",
            "title": "[@netlify/ipx] @netlify/ipx vulnerable to Full Response SSRF and Stored XSS via Cache Poisoning and Improper Host Validation",
            "date_modified": "2022-09-28T03:32:54.000Z",
            "date_published": "2022-09-21T21:42:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9jjv-524m-jm98"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in stealjs steal via the alias variable in babel.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37265\">https://nvd.nist.gov/vuln/detail/CVE-2022-37265</a></li>\n<li><a href=\"https://github.com/stealjs/steal/issues/1534\">https://github.com/stealjs/steal/issues/1534</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4216\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4216</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4569\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L4569</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wc4x-qmr2-rj8h\">https://github.com/advisories/GHSA-wc4x-qmr2-rj8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wc4x-qmr2-rj8h",
            "title": "[steal] steal vulnerable to Prototype Pollution via alias variable",
            "date_modified": "2022-09-23T17:08:12.000Z",
            "date_published": "2022-09-21T00:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wc4x-qmr2-rj8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Regular Expression Denial of Service (ReDoS) flaw was found in stealjs steal 2.2.4 via the string variable in babel.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37259\">https://nvd.nist.gov/vuln/detail/CVE-2022-37259</a></li>\n<li><a href=\"https://github.com/stealjs/steal/issues/1528\">https://github.com/stealjs/steal/issues/1528</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54124\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54124</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54129\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L54129</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rgqx-226f-2xp4\">https://github.com/advisories/GHSA-rgqx-226f-2xp4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rgqx-226f-2xp4",
            "title": "[steal] steal Inefficient Regular Expression Complexity vulnerability via string variable",
            "date_modified": "2022-09-23T17:08:13.000Z",
            "date_published": "2022-09-21T00:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rgqx-226f-2xp4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function convertLater in npm-convert.js in stealjs steal via the requestedVersion variable in the npm-convert.js file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37257\">https://nvd.nist.gov/vuln/detail/CVE-2022-37257</a></li>\n<li><a href=\"https://github.com/stealjs/steal/issues/1526\">https://github.com/stealjs/steal/issues/1526</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L362</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L371\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/npm-convert.js#L371</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q5-3xpc-8vg3\">https://github.com/advisories/GHSA-93q5-3xpc-8vg3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q5-3xpc-8vg3",
            "title": "[steal] steal vulnerable to Prototype Pollution via requestedVersion variable",
            "date_modified": "2022-09-22T16:31:10.000Z",
            "date_published": "2022-09-16T00:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q5-3xpc-8vg3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in function extend in babel.js in stealjs steal via the key variable in babel.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37266\">https://nvd.nist.gov/vuln/detail/CVE-2022-37266</a></li>\n<li><a href=\"https://github.com/stealjs/steal/issues/1535\">https://github.com/stealjs/steal/issues/1535</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29165\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29165</a></li>\n<li><a href=\"https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29169\">https://github.com/stealjs/steal/blob/c9dd1eb19ed3f97aeb93cf9dcea5d68ad5d0ced9/ext/babel.js#L29169</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwhq-pm3r-fjm9\">https://github.com/advisories/GHSA-vwhq-pm3r-fjm9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwhq-pm3r-fjm9",
            "title": "[steal] steal vulnerable to Prototype Pollution via key variable in babel.js",
            "date_modified": "2022-09-21T21:08:03.000Z",
            "date_published": "2022-09-16T00:00:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwhq-pm3r-fjm9"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}