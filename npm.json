{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const decoder = new Decoder();\n\ndecoder.on(\\\"decoded\\\", (packet) =&gt; {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n })\n\ndecoder.add('51-[\\\"hello\\\",{\\\"_placeholder\\\":true,\\\"num\\\":\\\"splice\\\"}]');\ndecoder.add(Buffer.from(\\\"world\\\"));\n</code></pre>\n<p>This bubbles up in the <code>socket.io</code> package:</p>\n<pre><code class=\"language-js\">io.on(\\\"connection\\\", (socket) =&gt; {\n socket.on(\\\"hello\\\", (val) =&gt; {\n // here, \\\"val\\\" could be a reference instead of what the user expected\n });\n });\n</code></pre>\n<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>\n<p>This should be fixed by:</p>\n<ul>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>\n</ul>\n<h3 id=\"dependency-analysis-for-the-socketio-package\">Dependency analysis for the <code>socket.io</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.2...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.1.3...4.5.1</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5...4.1.2</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"dependency-analysis-for-the-socketio-client-package\">Dependency analysis for the <code>socket.io-client</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io-client</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.0...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.3.0...4.4.1</code></td>\n<td><code>~4.1.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188\">ref</a>)</td>\n<td>No, but the impact is very limited</td>\n</tr>\n<tr>\n<td><code>3.1.0...4.2.0</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2421\">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00045\">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-2421\">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm95-pgcg-qqfq\">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq",
            "title": "[socket.io-parser] Insufficient validation when decoding a Socket.IO packet",
            "date_modified": "2022-10-28T20:19:04.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Due to improper type validation in the <code>socket.io-parser</code> library (which is used by the <code>socket.io</code> and <code>socket.io-client</code> packages to encode and decode Socket.IO packets), it is possible to overwrite the _placeholder object which allows an attacker to place references to functions at arbitrary places in the resulting query object.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const decoder = new Decoder();\n\ndecoder.on(\\\"decoded\\\", (packet) =&gt; {\n console.log(packet.data); // prints [ 'hello', [Function: splice] ]\n })\n\ndecoder.add('51-[\\\"hello\\\",{\\\"_placeholder\\\":true,\\\"num\\\":\\\"splice\\\"}]');\ndecoder.add(Buffer.from(\\\"world\\\"));\n</code></pre>\n<p>This bubbles up in the <code>socket.io</code> package:</p>\n<pre><code class=\"language-js\">io.on(\\\"connection\\\", (socket) =&gt; {\n socket.on(\\\"hello\\\", (val) =&gt; {\n // here, \\\"val\\\" could be a reference instead of what the user expected\n });\n });\n</code></pre>\n<p>At first sight, the potential impact seems rather limited, but please upgrade to a safe version as soon as possible.</p>\n<p>This should be fixed by:</p>\n<ul>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a>, included in <code>socket.io-parser@4.2.1</code></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a>, included in <code>socket.io-parser@4.0.5</code></li>\n</ul>\n<h3 id=\"dependency-analysis-for-the-socketio-package\">Dependency analysis for the <code>socket.io</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.2...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io/commit/9890b036cf942f6b6ad2afeb6a8361c32cd5d528\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.1.3...4.5.1</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io/commit/7c44893d7878cd5bba1eff43150c3e664f88fb57\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5...4.1.2</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io/commit/752dfe3b1e5fecda53dae899b4a39e6fed5a1a17\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io/commit/1af3267e3f5f7884214cf2ca4d5282d620092fb0\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"dependency-analysis-for-the-socketio-client-package\">Dependency analysis for the <code>socket.io-client</code> package</h3>\n<table>\n<thead>\n<tr>\n<th><code>socket.io-client</code> version</th>\n<th><code>socket.io-parser</code> version</th>\n<th>Covered?</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>4.5.0...latest</code></td>\n<td><code>~4.2.0</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b862924b7f1720979e5db2f0154906b305d420e3\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>4.3.0...4.4.1</code></td>\n<td><code>~4.1.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/91b948b8607166fcc79f028a6428819277214188\">ref</a>)</td>\n<td>No, but the impact is very limited</td>\n</tr>\n<tr>\n<td><code>3.1.0...4.2.0</code></td>\n<td><code>~4.0.4</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/5d9b4eb42b1f5778e6f033096694acb331b132c4\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.5</code></td>\n<td><code>~4.0.3</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/cf9fc358365cc15a41260a51dc186c881bf086ca\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n<tr>\n<td><code>3.0.0...3.0.4</code></td>\n<td><code>~4.0.1</code> (<a href=\"https://github.com/socketio/socket.io-client/commit/b7e07ba633ceb9c1dc94cc894c10b9bfca536c7a\">ref</a>)</td>\n<td>Yes :heavy_check_mark:</td>\n</tr>\n</tbody></table>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2421\">https://nvd.nist.gov/vuln/detail/CVE-2022-2421</a></li>\n<li><a href=\"https://csirt.divd.nl/cases/DIVD-2022-00045\">https://csirt.divd.nl/cases/DIVD-2022-00045</a></li>\n<li><a href=\"https://csirt.divd.nl/cves/CVE-2022-2421\">https://csirt.divd.nl/cves/CVE-2022-2421</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4\">https://github.com/socketio/socket.io-parser/commit/b559f050ee02bd90bd853b9823f8de7fa94a80d4</a></li>\n<li><a href=\"https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050\">https://github.com/socketio/socket.io-parser/commit/b5d0cb7dc56a0601a09b056beaeeb0e43b160050</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm95-pgcg-qqfq\">https://github.com/advisories/GHSA-qm95-pgcg-qqfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq",
            "title": "[socket.io-parser] Insufficient validation when decoding a Socket.IO packet",
            "date_modified": "2022-10-28T20:19:04.000Z",
            "date_published": "2022-10-26T12:00:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm95-pgcg-qqfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This impacts users that use shescape to escape arguments:</p>\n<ul>\n<li>for the Unix shell Bash, or any not-officially-supported Unix shell;</li>\n<li>using the <code>escape</code> or <code>escapeAll</code> functions with the <code>interpolation</code> option set to <code>true</code>.</li>\n</ul>\n<p>An attacker can cause polynomial backtracking in terms of the input string length due to a Regular Expression in shescape that is vulnerable to Regular Expression Denial of Service (ReDoS). Example:</p>\n<pre><code class=\"language-javascript\">import * as shescape from \"shescape\";\n\n/* 1. Prerequisites */\nconst options = {\n  interpolation: true,\n  // and\n  shell: \"/bin/bash\",\n  // or\n  shell: \"some-not-officially-supported-shell\",\n  // or\n  shell: undefined, // Only if the system's default shell is bash or an unsupported shell.\n};\n\n/* 2. Attack */\nlet userInput = '{,'.repeat(150_000); // polynomial backtracking\n\n/* 3. Usage */\nshescape.escape(userInput, options);\n// or\nshescape.escapeAll([userInput], options);\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">v1.6.1</a> which you can upgrade to now. No further changes required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Alternatively, a maximum length can be enforced on input strings to shescape to reduce the impact of the vulnerability. It is not recommended to try and detect vulnerable input strings, as the logic for this may end up being vulnerable to ReDoS itself.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Shescape commit <a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">552e8ea</a></li>\n<li>Shescape Release <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">v1.6.1</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>Comment on commit <a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">552e8ea</a></li>\n<li>Open an issue at <a href=\"https://github.com/ericcornelissen/shescape/issues?q=is%3Aissue+is%3Aopen\">https://github.com/ericcornelissen/shescape/issues</a> (New issue &gt; Question &gt; Get started)</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-cr84-xvw4-qx3c\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-cr84-xvw4-qx3c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25918\">https://nvd.nist.gov/vuln/detail/CVE-2022-25918</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9\">https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/blob/main/src/unix.js%23L52\">https://github.com/ericcornelissen/shescape/blob/main/src/unix.js%23L52</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1\">https://github.com/ericcornelissen/shescape/releases/tag/v1.6.1</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108\">https://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cr84-xvw4-qx3c\">https://github.com/advisories/GHSA-cr84-xvw4-qx3c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cr84-xvw4-qx3c",
            "title": "[shescape] Inefficient Regular Expression Complexity in shescape ",
            "date_modified": "2022-10-28T03:23:39.000Z",
            "date_published": "2022-10-25T22:27:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cr84-xvw4-qx3c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>Due to the common practice of providing vulnerability details in markdown format, the Dependency-Track frontend renders them using the JavaScript library <a href=\"https://github.com/showdownjs/showdown\">Showdown</a>. Showdown <a href=\"https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)\">does not have any XSS countermeasures built in</a>, and versions before 4.6.1 of the Dependency-Track frontend did not encode or sanitize Showdown's output. This made it possible for arbitrary JavaScript included in vulnerability details via HTML attributes to be executed in context of the frontend.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Actors with the <code>VULNERABILITY_MANAGEMENT</code> permission can exploit this weakness by creating or editing a custom vulnerability and providing XSS payloads in any of the following fields:</p>\n<ul>\n<li>Description</li>\n<li>Details</li>\n<li>Recommendation</li>\n<li>References</li>\n</ul>\n<p>The payload will be executed for users with the <code>VIEW_PORTFOLIO</code> permission when browsing to the modified vulnerability's page, for example: </p>\n<pre><code>https://dtrack.example.com/vulnerabilities/INTERNAL/INT-jd8u-e8tl-8lwu\n</code></pre>\n<p>Alternatively, malicious JavaScript could be introduced via any of the vulnerability databases mirrored by Dependency-Track (NVD, GitHub Advisories, OSV, OSS Index, VulnDB). However, this attack vector is highly unlikely, and the team is not aware of any occurrence of this happening.</p>\n<blockquote>\n<p><strong>Note</strong>\nThe <em>Vulnerability Details</em> element of the <em>Audit Vulnerabilities</em> tab in the project view is <strong>not</strong> affected.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue has been fixed in frontend version 4.6.1.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>Thanks to GitHub user <strong>Waterstraal</strong> for finding and responsibly disclosing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf\">https://github.com/DependencyTrack/frontend/security/advisories/GHSA-c33w-pm52-mqvf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39350\">https://nvd.nist.gov/vuln/detail/CVE-2022-39350</a></li>\n<li><a href=\"https://docs.dependencytrack.org/changelog/\">https://docs.dependencytrack.org/changelog/</a></li>\n<li><a href=\"https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)\">https://github.com/showdownjs/showdown/wiki/Markdown's-XSS-Vulnerability-(and-how-to-mitigate-it)</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c33w-pm52-mqvf\">https://github.com/advisories/GHSA-c33w-pm52-mqvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c33w-pm52-mqvf",
            "title": "[@dependencytrack/frontend] @dependencytrack/frontend vulnerable to  Persistent Cross-Site-Scripting via Vulnerability Details",
            "date_modified": "2022-10-25T20:22:02.000Z",
            "date_published": "2022-10-25T20:22:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c33w-pm52-mqvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Markdownify version 1.4.1 allows an external attacker to execute arbitrary code remotely on any client attempting to view a malicious markdown file through Markdownify. This is possible because the application has the \"nodeIntegration\" option enabled. There are currently no patched versions and no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41709\">https://nvd.nist.gov/vuln/detail/CVE-2022-41709</a></li>\n<li><a href=\"https://fluidattacks.com/advisories/adams/\">https://fluidattacks.com/advisories/adams/</a></li>\n<li><a href=\"https://github.com/amitmerchant1990/electron-markdownify\">https://github.com/amitmerchant1990/electron-markdownify</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c942-mfmp-p4fh\">https://github.com/advisories/GHSA-c942-mfmp-p4fh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c942-mfmp-p4fh",
            "title": "[electron-markdownify] Markdownify subject to Remote Code Execution via malicious markdown file",
            "date_modified": "2022-10-25T19:58:53.000Z",
            "date_published": "2022-10-19T19:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c942-mfmp-p4fh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-10-23T03:06:43.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>In Hardened JavaScript, programs can <code>harden</code> objects to safely share objects with co-tenant programs without risk of these other programs tampering with their API surface. Hardening does not guarantee that objects are pure or immutable, so a hardened <code>Map</code>, for example is superficially tamper-proof, but any party holding a reference to the object can both read and write its contents. Based on this precedent, and because <code>TypedArray</code> instances cannot be frozen with <code>Object.isFrozen</code>, <code>harden</code> does not <code>freeze</code> <code>TypedArrays</code> and instead makes them non-extensible and makes all non-indexed properties non-writable and non-configurable. This is consistent with the treatment of <code>Map</code> because the indexed properties represent mutable content and non-indexed properties represent the API.</p>\n<p>Due to a defect in <code>harden</code>, properties that have names that parse as numbers but are not the same as the canonical representation of those numbers, as in <code>\"+0\"</code> and <code>\"\"</code> which are both equivalent to their canonical number <code>\"0\"</code>,  remain writable after hardening.</p>\n<p>Any program treating one of these properties as part of its API and relying on <code>harden</code> to prevent modifications would be vulnerable to an API pollution attack, affecting only instances shared by mutually suspicious parties.</p>\n<p>Unlike a <code>Map</code>, a hardened <code>TypedArray</code> can only have numbers for content. Any program that is sharing hardened <code>TypedArrays</code> between co-tentant programs and relying on harden to only allow these programs to communicate exclusively by changing numbers within the bounds of the TypedArray, may inadvertently have arranged for a mechanism for a pair of third-parties to communicate arbitrary objects on these other properties.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>SES version 0.16.0 patches this issue, causing <code>harden</code> to recognize properties with non-canonical numeric representations and ensuring that these properties are non-configurable.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Users should avoid sharing <code>TypedArrays</code> between co-tenant programs and instead create wrapper objects that produce a read-only view of the underlying data. We allow <code>harden</code> to succeed for <code>TypedArrays</code> because the treatment is in fact consistent with the behavior of collections like <code>Map</code>, but all collections shared between co-tentant programs should probably be attenuated to either read- or write-only facets and probably close over only part of the content of the collection. However, the motivation for allowing <code>TypedArrays</code> to be hardened in practice is to allow certain legacy modules to function under Hardened JavaScript with LavaMoat, since they export <code>TypedArrays</code>, even though they would ideally export read-only facets of these.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p>Not at this time.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@agoric.com\">security@agoric.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc\">https://github.com/endojs/endo/security/advisories/GHSA-whpx-q3rq-w8jc</a></li>\n<li><a href=\"https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5\">https://github.com/endojs/endo/commit/88cab0be4cf816dc578f2ff441fd9bcda0aa5cf5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-whpx-q3rq-w8jc\">https://github.com/advisories/GHSA-whpx-q3rq-w8jc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-whpx-q3rq-w8jc",
            "title": "[ses] Hardening of TypedArrays with non-canonical numeric property names in SES",
            "date_modified": "2022-10-20T18:38:36.000Z",
            "date_published": "2022-10-20T18:38:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-whpx-q3rq-w8jc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package react-native-reanimated before 3.0.0-rc.1 is vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24373\">https://nvd.nist.gov/vuln/detail/CVE-2022-24373</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/pull/3382\">https://github.com/software-mansion/react-native-reanimated/pull/3382</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa\">https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1\">https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507\">https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/commit/8a927904366fa2d02df7a11553f8b0aa93471279\">https://github.com/software-mansion/react-native-reanimated/commit/8a927904366fa2d02df7a11553f8b0aa93471279</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/compare/2.9.1...2.10.0\">https://github.com/software-mansion/react-native-reanimated/compare/2.9.1...2.10.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j79-8pqc-r7x6\">https://github.com/advisories/GHSA-2j79-8pqc-r7x6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j79-8pqc-r7x6",
            "title": "[react-native-reanimated] react-native-reanimated vulnerable to ReDoS",
            "date_modified": "2022-10-20T18:28:20.000Z",
            "date_published": "2022-10-01T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j79-8pqc-r7x6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3517\">https://nvd.nist.gov/vuln/detail/CVE-2022-3517</a></li>\n<li><a href=\"https://github.com/grafana/grafana-image-renderer/issues/329\">https://github.com/grafana/grafana-image-renderer/issues/329</a></li>\n<li><a href=\"https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6\">https://github.com/isaacs/minimatch/commit/a8763f4388e51956be62dc6025cec1126beeb5e6</a></li>\n<li><a href=\"https://github.com/nodejs/node/issues/42510\">https://github.com/nodejs/node/issues/42510</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f8q6-p94x-37v3\">https://github.com/advisories/GHSA-f8q6-p94x-37v3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f8q6-p94x-37v3",
            "title": "[minimatch] minimatch ReDoS vulnerability",
            "date_modified": "2022-10-20T18:21:04.000Z",
            "date_published": "2022-10-18T12:00:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f8q6-p94x-37v3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-17426\">https://nvd.nist.gov/vuln/detail/CVE-2019-17426</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c\">https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/issues/8222\">https://github.com/Automattic/mongoose/issues/8222</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/commits/4.13.21\">https://github.com/Automattic/mongoose/commits/4.13.21</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/releases/tag/4.13.21\">https://github.com/Automattic/mongoose/releases/tag/4.13.21</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8687-vv9j-hgph\">https://github.com/advisories/GHSA-8687-vv9j-hgph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8687-vv9j-hgph",
            "title": "[mongoose] Improper Input Validation in Automattic Mongoose",
            "date_modified": "2022-10-20T16:13:51.000Z",
            "date_published": "2019-10-22T20:19:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8687-vv9j-hgph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-17426\">https://nvd.nist.gov/vuln/detail/CVE-2019-17426</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c\">https://github.com/Automattic/mongoose/commit/f3eca5b94d822225c04e96cbeed9f095afb3c31c</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/issues/8222\">https://github.com/Automattic/mongoose/issues/8222</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/commits/4.13.21\">https://github.com/Automattic/mongoose/commits/4.13.21</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/releases/tag/4.13.21\">https://github.com/Automattic/mongoose/releases/tag/4.13.21</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8687-vv9j-hgph\">https://github.com/advisories/GHSA-8687-vv9j-hgph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8687-vv9j-hgph",
            "title": "[mongoose] Improper Input Validation in Automattic Mongoose",
            "date_modified": "2022-10-20T16:13:51.000Z",
            "date_published": "2019-10-22T20:19:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8687-vv9j-hgph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h4 id=\"impact\">Impact</h4>\n<p><code>@keystone-6/core@2.2.0 || 2.3.0</code> users who are using the <code>multiselect</code> field, and provided field-level access control - are vulnerable to their field-level access control not being used.</p>\n<p>List-level access control is <strong>NOT</strong> affected.</p>\n<p>Field-level access control for fields other than <code>multiselect</code> are <strong>NOT</strong> affected.</p>\n<p>Example, <strong>you are vulnerable if</strong> you are using field-level access control on a <code>multiselect</code> like the following:</p>\n<pre><code class=\"language-ts\">const yourList = list({\n  access: {\n    // this is list-level access control, this is NOT impacted\n  },\n  fields: {\n    yourFieldName: multiselect({\n      // this is field-level access control, for multiselect fields\n      //   this is vulnerable\n      access: {\n        create: ({ session }) =&gt; session?.data.isAdmin,\n        update: ({ session }) =&gt; session?.data.isAdmin,\n      },\n      options: [\n        { value: 'apples', label: 'Apples' },\n        { value: 'oranges', label: 'Oranges' },\n      ],\n      // ...\n    }),\n    // ...\n  },\n  // ...\n});\n</code></pre>\n<h4 id=\"mitigation\">Mitigation</h4>\n<p>Please upgrade to <code>@keystone-6/core &gt;= 2.3.1</code>, where this vulnerability has been closed.</p>\n<h4 id=\"workarounds\">Workarounds</h4>\n<p>If for some reason you cannot upgrade your dependencies, you should stop using the <code>multiselect</code> field.</p>\n<h4 id=\"credits\">Credits</h4>\n<p>Thanks to <a href=\"https://github.com/marekryb\">Marek R</a> for reporting and submitting the pull request to fix this problem.</p>\n<p>If you have any questions around this security advisory, please don't hesitate to contact us at <a href=\"mailto:security@keystonejs.com\">security@keystonejs.com</a>, or <a href=\"https://github.com/keystonejs/keystone/issues/new/choose\">open an issue on GitHub</a>.</p>\n<p>If you have a security flaw to report for any software in this repository, please see our <a href=\"https://github.com/keystonejs/keystone/blob/main/SECURITY.md\">SECURITY policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keystonejs/keystone/security/advisories/GHSA-6mhr-52mv-6v6f\">https://github.com/keystonejs/keystone/security/advisories/GHSA-6mhr-52mv-6v6f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39322\">https://nvd.nist.gov/vuln/detail/CVE-2022-39322</a></li>\n<li><a href=\"https://github.com/keystonejs/keystone/commit/65c6ee3deef23605fc72b80230908696a7a65e7c\">https://github.com/keystonejs/keystone/commit/65c6ee3deef23605fc72b80230908696a7a65e7c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mhr-52mv-6v6f\">https://github.com/advisories/GHSA-6mhr-52mv-6v6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mhr-52mv-6v6f",
            "title": "[@keystone-6/core] Field-level access-control bypass for multiselect field",
            "date_modified": "2022-10-31T16:00:39.000Z",
            "date_published": "2022-10-18T17:12:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mhr-52mv-6v6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Parse Server crashes when a file download request is received with an invalid byte range.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Improved parsing of the range parameter to properly handle invalid range requests.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\">GHSA-h423-w6qv-2wj3</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\">https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.17\">https://github.com/parse-community/parse-server/releases/tag/4.10.17</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39313\">https://nvd.nist.gov/vuln/detail/CVE-2022-39313</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h423-w6qv-2wj3\">https://github.com/advisories/GHSA-h423-w6qv-2wj3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h423-w6qv-2wj3",
            "title": "[parse-server] parse-server crashes when receiving file download request with invalid byte range",
            "date_modified": "2022-10-25T20:43:25.000Z",
            "date_published": "2022-10-18T16:08:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h423-w6qv-2wj3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Parse Server crashes when a file download request is received with an invalid byte range.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Improved parsing of the range parameter to properly handle invalid range requests.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\">GHSA-h423-w6qv-2wj3</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3\">https://github.com/parse-community/parse-server/security/advisories/GHSA-h423-w6qv-2wj3</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/4.10.17\">https://github.com/parse-community/parse-server/releases/tag/4.10.17</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39313\">https://nvd.nist.gov/vuln/detail/CVE-2022-39313</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h423-w6qv-2wj3\">https://github.com/advisories/GHSA-h423-w6qv-2wj3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h423-w6qv-2wj3",
            "title": "[parse-server] parse-server crashes when receiving file download request with invalid byte range",
            "date_modified": "2022-10-25T20:43:25.000Z",
            "date_published": "2022-10-18T16:08:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h423-w6qv-2wj3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"impact-1\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>\n<h3 id=\"patches-1\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds-1\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n<li>Add information to <a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37616\">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
            "title": "[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom",
            "date_modified": "2022-10-18T21:46:48.000Z",
            "date_published": "2022-10-11T20:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"impact-1\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package.</p>\n<h3 id=\"patches-1\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@~0.7.6</code>, <code>@xmldom/xmldom@~0.8.3</code> (dist-tag <code>latest</code>) or <code>@xmldom/xmldom@&gt;=0.9.0-beta.2</code> (dist-tag <code>next</code>).</p>\n<h3 id=\"workarounds-1\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n<li>Add information to <a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37616\">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076\">https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md#076</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/10/msg00023.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
            "title": "[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom",
            "date_modified": "2022-10-18T21:46:48.000Z",
            "date_published": "2022-10-11T20:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to node-saml v4.0.0-beta5 or newer. </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable SAML authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in the <a href=\"https://github.com/node-saml/node-saml/discussions\">node-saml repo</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Felix Wilhelm of Google Project Zero</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/node-saml/security/advisories/GHSA-5p8w-2mvw-38pv\">https://github.com/node-saml/node-saml/security/advisories/GHSA-5p8w-2mvw-38pv</a></li>\n<li><a href=\"https://github.com/node-saml/node-saml/commit/c1f275c289c01921e58f5c70ce0fdbc5287e5fbe\">https://github.com/node-saml/node-saml/commit/c1f275c289c01921e58f5c70ce0fdbc5287e5fbe</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39300\">https://nvd.nist.gov/vuln/detail/CVE-2022-39300</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p8w-2mvw-38pv\">https://github.com/advisories/GHSA-5p8w-2mvw-38pv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p8w-2mvw-38pv",
            "title": "[node-saml] Signature bypass via multiple root elements",
            "date_modified": "2022-10-14T19:48:07.000Z",
            "date_published": "2022-10-12T22:05:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p8w-2mvw-38pv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable SAML authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in the <a href=\"https://github.com/node-saml/node-saml/discussions\">node-saml repo</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Felix Wilhelm of Google Project Zero</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/releases/tag/v3.2.2\">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m974-647v-whv7\">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m974-647v-whv7",
            "title": "[@node-saml/passport-saml] Signature bypass via multiple root elements",
            "date_modified": "2022-10-18T03:11:23.000Z",
            "date_published": "2022-10-12T22:05:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m974-647v-whv7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable SAML authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in the <a href=\"https://github.com/node-saml/node-saml/discussions\">node-saml repo</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Felix Wilhelm of Google Project Zero</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/releases/tag/v3.2.2\">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m974-647v-whv7\">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m974-647v-whv7",
            "title": "[@node-saml/node-saml] Signature bypass via multiple root elements",
            "date_modified": "2022-10-18T03:11:23.000Z",
            "date_published": "2022-10-12T22:05:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m974-647v-whv7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A remote attacker may be able to bypass SAML authentication on a website using passport-saml. A successful attack requires that the attacker is in possession of an arbitrary IDP signed XML element. Depending on the IDP used, fully unauthenticated attacks (e.g without access to a valid user) might also be feasible if generation of a signed message can be triggered.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to passport-saml 3.2.2 or newer. The issue was also present in the beta releases of <code>node-saml</code> before v4.0.0-beta.5.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable SAML authentication.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open a discussion in the <a href=\"https://github.com/node-saml/node-saml/discussions\">node-saml repo</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Felix Wilhelm of Google Project Zero</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7\">https://github.com/node-saml/passport-saml/security/advisories/GHSA-m974-647v-whv7</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e\">https://github.com/node-saml/passport-saml/commit/8b7e3f5a91c8e5ac7e890a0c90bc7491ce33155e</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/releases/tag/v3.2.2\">https://github.com/node-saml/passport-saml/releases/tag/v3.2.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39299\">https://nvd.nist.gov/vuln/detail/CVE-2022-39299</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m974-647v-whv7\">https://github.com/advisories/GHSA-m974-647v-whv7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m974-647v-whv7",
            "title": "[node-saml] Signature bypass via multiple root elements",
            "date_modified": "2022-10-18T03:11:23.000Z",
            "date_published": "2022-10-12T22:05:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m974-647v-whv7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}