{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39338\">https://nvd.nist.gov/vuln/detail/CVE-2024-39338</a></li>\n<li><a href=\"https://github.com/axios/axios/releases\">https://github.com/axios/axios/releases</a></li>\n<li><a href=\"https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html\">https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html</a></li>\n<li><a href=\"https://github.com/axios/axios/issues/6463\">https://github.com/axios/axios/issues/6463</a></li>\n<li><a href=\"https://github.com/axios/axios/pull/6539\">https://github.com/axios/axios/pull/6539</a></li>\n<li><a href=\"https://github.com/axios/axios/pull/6543\">https://github.com/axios/axios/pull/6543</a></li>\n<li><a href=\"https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a\">https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a</a></li>\n<li><a href=\"https://github.com/axios/axios/releases/tag/v1.7.4\">https://github.com/axios/axios/releases/tag/v1.7.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8hc4-vh64-cxmj\">https://github.com/advisories/GHSA-8hc4-vh64-cxmj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8hc4-vh64-cxmj",
            "title": "[axios] Server-Side Request Forgery in axios",
            "date_modified": "2024-08-13T19:53:25.000Z",
            "date_published": "2024-08-12T15:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8hc4-vh64-cxmj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>izatop bunt v0.29.19 was discovered to contain a prototype pollution via the component /esm/qs.js. This vulnerability allows attackers to execute arbitrary code via injecting arbitrary properties.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38989\">https://nvd.nist.gov/vuln/detail/CVE-2024-38989</a></li>\n<li><a href=\"https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7\">https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7</a></li>\n<li><a href=\"https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b\">https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b</a></li>\n<li><a href=\"https://github.com/izatop/bunt/issues/27\">https://github.com/izatop/bunt/issues/27</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p734-xg27-8cfq\">https://github.com/advisories/GHSA-p734-xg27-8cfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p734-xg27-8cfq",
            "title": "[@bunt/app] Prototype pollution in izatop bunt",
            "date_modified": "2024-08-13T19:23:51.000Z",
            "date_published": "2024-08-12T15:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p734-xg27-8cfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the HTML editor of Slab Quill allows an attacker to execute arbitrary JavaScript by storing an XSS payload (a crafted <code>onloadstart</code> attribute of an IMG element) in a text field. No patch exists and no further releases are planned.</p>\n<p>This CVE is disputed. Researchers have claimed that this issue is not within the product itself, but is intended behavior in a web browser. More information can be found <a href=\"https://github.com/quilljs/quill/issues/3364\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3163\">https://nvd.nist.gov/vuln/detail/CVE-2021-3163</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3273\">https://github.com/quilljs/quill/issues/3273</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3359\">https://github.com/quilljs/quill/issues/3359</a></li>\n<li><a href=\"https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html\">https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html</a></li>\n<li><a href=\"https://quilljs.com\">https://quilljs.com</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3364\">https://github.com/quilljs/quill/issues/3364</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4943-9vgg-gr5r\">https://github.com/advisories/GHSA-4943-9vgg-gr5r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4943-9vgg-gr5r",
            "title": "[quill] Cross-site Scripting in quill",
            "date_modified": "2024-08-09T14:41:51.000Z",
            "date_published": "2021-05-10T15:38:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4943-9vgg-gr5r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>libxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the <code>namespaces()</code> function (which invokes <code>XmlNode::get_local_namespaces()</code>) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34394\">https://nvd.nist.gov/vuln/detail/CVE-2024-34394</a></li>\n<li><a href=\"https://github.com/marudor/libxmljs2/issues/205\">https://github.com/marudor/libxmljs2/issues/205</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098\">https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-78h3-pg4x-j8cv\">https://github.com/advisories/GHSA-78h3-pg4x-j8cv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-78h3-pg4x-j8cv",
            "title": "[libxmljs2] libxmljs2 vulnerable to type confusion when parsing specially crafted XML",
            "date_modified": "2024-08-07T20:35:44.000Z",
            "date_published": "2024-05-02T21:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-78h3-pg4x-j8cv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype Pollution in 75lb deep-merge 1.1.1 allows attackers to execute arbitrary code or cause a Denial of Service (DoS) and cause other impacts via merge methods of lodash to merge objects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38986\">https://nvd.nist.gov/vuln/detail/CVE-2024-38986</a></li>\n<li><a href=\"https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb\">https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb</a></li>\n<li><a href=\"https://github.com/75lb/deep-merge/issues/1\">https://github.com/75lb/deep-merge/issues/1</a></li>\n<li><a href=\"https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1\">https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28mc-g557-92m7\">https://github.com/advisories/GHSA-28mc-g557-92m7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28mc-g557-92m7",
            "title": "[@75lb/deep-merge] @75lb/deep-merge Prototype Pollution vulnerability",
            "date_modified": "2024-08-06T23:14:48.000Z",
            "date_published": "2024-07-30T21:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28mc-g557-92m7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A potential mXSS vulnerability exists in Qwik for versions up to 1.6.0.</p>\n<h3 id=\"details\">Details</h3>\n<p>Qwik improperly escapes HTML on server-side rendering. It converts strings according to the following rules:</p>\n<p><a href=\"https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208\">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></p>\n<ul>\n<li>If the string is an attribute value:<ul>\n<li><code>\"</code> -&gt; <code>&amp;quot;</code></li>\n<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>\n<li>Other characters -&gt; No conversion</li>\n</ul>\n</li>\n<li>Otherwise:<ul>\n<li><code>&lt;</code> -&gt; <code>&amp;lt;</code></li>\n<li><code>&gt;</code> -&gt; <code>&amp;gt;</code></li>\n<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>\n<li>Other characters -&gt; No conversion</li>\n</ul>\n</li>\n</ul>\n<p>It sometimes causes the situation that the final DOM tree rendered on browsers is different from what Qwik expects on server-side rendering. This may be leveraged to perform XSS attacks, and a type of the XSS is known as mXSS (mutation XSS).</p>\n<h2 id=\"poc\">PoC</h2>\n<p>A vulnerable component:</p>\n<pre><code class=\"language-javascript\">import { component$ } from \"@builder.io/qwik\";\nimport { useLocation } from \"@builder.io/qwik-city\";\n\nexport default component$(() =&gt; {\n  \n  // user input\n  const { url } = useLocation();\n  const href = url.searchParams.get(\"href\") ?? \"https://example.com\";\n\n  return (\n    &lt;div&gt;\n      &lt;noscript&gt;\n        &lt;a href={href}&gt;test&lt;/a&gt;\n      &lt;/noscript&gt;\n    &lt;/div&gt;\n  );\n});\n</code></pre>\n<p>If a user accesses the following URL,</p>\n<pre><code>http://localhost:4173/?href=&lt;/noscript&gt;&lt;script&gt;alert(123)&lt;/script&gt;\n</code></pre>\n<p>then, <code>alert(123)</code> will be executed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>XSS</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4\">https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4</a></li>\n<li><a href=\"https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e\">https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e</a></li>\n<li><a href=\"https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208\">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41677\">https://nvd.nist.gov/vuln/detail/CVE-2024-41677</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2rwj-7xq8-4gx4\">https://github.com/advisories/GHSA-2rwj-7xq8-4gx4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2rwj-7xq8-4gx4",
            "title": "[@builder.io/qwik] Qwik has a potential mXSS vulnerability due to improper HTML escaping",
            "date_modified": "2024-08-07T07:55:48.000Z",
            "date_published": "2024-08-06T18:24:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2rwj-7xq8-4gx4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious homeserver could manipulate a user's account data to cause the client to enable URL previews in end-to-end encrypted rooms, in which case any URLs in encrypted messages would be sent to the server.</p>\n<p>Even if the CVSS score would be 4.1 (<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N&amp;version=3.1\">AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N</a>) the maintainer classifies this as High severity issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This was patched in matrix-react-sdk 3.105.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Deployments that trust their homeservers, as well as closed federations of trusted servers, are not affected.</p>\n<h3 id=\"references\">References</h3>\n<p>N/A.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4\">https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42347\">https://nvd.nist.gov/vuln/detail/CVE-2024-42347</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1\">https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f83w-wqhc-cfp4\">https://github.com/advisories/GHSA-f83w-wqhc-cfp4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f83w-wqhc-cfp4",
            "title": "[matrix-react-sdk] Matrix SDK for React's URL preview setting for a room is controllable by the homeserver",
            "date_modified": "2024-08-08T16:38:01.000Z",
            "date_published": "2024-08-06T14:12:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f83w-wqhc-cfp4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/chatflows-streaming/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37145\">https://nvd.nist.gov/vuln/detail/CVE-2024-37145</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-858c-qxvx-rg9v\">https://github.com/advisories/GHSA-858c-qxvx-rg9v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-858c-qxvx-rg9v",
            "title": "[flowise] Flowise Cross-site Scripting in /api/v1/chatflows-streaming/id",
            "date_modified": "2024-08-05T21:29:30.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-858c-qxvx-rg9v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/credentials/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37146\">https://nvd.nist.gov/vuln/detail/CVE-2024-37146</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxm4-9f8p-gggv\">https://github.com/advisories/GHSA-wxm4-9f8p-gggv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxm4-9f8p-gggv",
            "title": "[flowise] Flowise Cross-site Scripting in/api/v1/credentials/id",
            "date_modified": "2024-08-05T21:29:30.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxm4-9f8p-gggv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>api/v1/chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36422\">https://nvd.nist.gov/vuln/detail/CVE-2024-36422</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2jch-qc96-9f5g\">https://github.com/advisories/GHSA-2jch-qc96-9f5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2jch-qc96-9f5g",
            "title": "[flowise] Flowise Cross-site Scripting in api/v1/chatflows/id",
            "date_modified": "2024-08-05T21:29:29.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2jch-qc96-9f5g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/public-chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36423\">https://nvd.nist.gov/vuln/detail/CVE-2024-36423</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fccx-2pwj-hrq7\">https://github.com/advisories/GHSA-fccx-2pwj-hrq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fccx-2pwj-hrq7",
            "title": "[flowise] Flowise Cross-site Scripting in /api/v1/public-chatflows/id",
            "date_modified": "2024-08-05T21:29:29.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fccx-2pwj-hrq7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, A CORS misconfiguration sets the Access-Control-Allow-Origin header to all, allowing arbitrary origins to connect to the website. In the default configuration (unauthenticated), arbitrary origins may be able to make requests to Flowise, stealing information from the user. This CORS misconfiguration may be chained with the path injection to allow an attacker attackers without access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36421\">https://nvd.nist.gov/vuln/detail/CVE-2024-36421</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L122\">https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L122</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66f2-xxgm-f6xp\">https://github.com/advisories/GHSA-66f2-xxgm-f6xp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66f2-xxgm-f6xp",
            "title": "[flowise] Flowise Cors Misconfiguration in packages/server/src/index.ts",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66f2-xxgm-f6xp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, the <code>/api/v1/openai-assistants-file</code> endpoint in <code>index.ts</code> is vulnerable to arbitrary file read due to lack of sanitization of the <code>fileName</code> body parameter. No known patches for this issue are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36420\">https://nvd.nist.gov/vuln/detail/CVE-2024-36420</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L982\">https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L982</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h997-3fxj-p5j8\">https://github.com/advisories/GHSA-h997-3fxj-p5j8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h997-3fxj-p5j8",
            "title": "[flowise] Flowise Path Injection at /api/v1/openai-assistants-file",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h997-3fxj-p5j8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NextChat, also known as ChatGPT-Next-Web, is a cross-platform chat user interface for use with ChatGPT. Versions 2.11.2 and prior are vulnerable to server-side request forgery and cross-site scripting. This vulnerability enables read access to internal HTTP endpoints but also write access using HTTP POST, PUT, and other methods. Attackers can also use this vulnerability to mask their source IP by forwarding malicious traffic intended for other Internet targets through these open proxies. As of time of publication, no patch is available, but other mitigation strategies are available. Users may avoid exposing the application to the public internet or, if exposing the application to the internet, ensure it is an isolated network with no access to any other internal resources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49785\">https://nvd.nist.gov/vuln/detail/CVE-2023-49785</a></li>\n<li><a href=\"https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web\">https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web</a></li>\n<li><a href=\"https://www.horizon3.ai/attack-research/attack-blogs/nextchat-an-ai-chatbot-that-lets-you-talk-to-anyone-you-want-to\">https://www.horizon3.ai/attack-research/attack-blogs/nextchat-an-ai-chatbot-that-lets-you-talk-to-anyone-you-want-to</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qf3q-9f3h-cjp9\">https://github.com/advisories/GHSA-qf3q-9f3h-cjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qf3q-9f3h-cjp9",
            "title": "[nextchat] NextChat has full-read SSRF and XSS vulnerability in /api/cors endpoint",
            "date_modified": "2024-08-05T21:29:25.000Z",
            "date_published": "2024-08-05T21:29:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qf3q-9f3h-cjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrypted is a home video integration and automation platform. In versions 0.55.0 and prior, a reflected cross-site scripting vulnerability exists in the plugin-http.ts file via the <code>owner' and 'pkg</code> parameters. An attacker can run arbitrary JavaScript code. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47620\">https://nvd.nist.gov/vuln/detail/CVE-2023-47620</a></li>\n<li><a href=\"https://github.com/koush/scrypted/blob/71cbe83a2a20f743342df695ca7b98482b73e60f/server/src/plugin/plugin-http.ts#L45\">https://github.com/koush/scrypted/blob/71cbe83a2a20f743342df695ca7b98482b73e60f/server/src/plugin/plugin-http.ts#L45</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted\">https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xmhh-xrcc-mx36\">https://github.com/advisories/GHSA-xmhh-xrcc-mx36</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xmhh-xrcc-mx36",
            "title": "[@scrypted/server] Scrypted Cross-site Scripting vulnerability",
            "date_modified": "2024-08-05T21:29:23.000Z",
            "date_published": "2024-08-05T21:29:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xmhh-xrcc-mx36"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrypted is a home video integration and automation platform. In versions 0.55.0 and prior (corresponding to <code>@scrypted/core</code> 0.1.142 and prior), a reflected cross-site scripting vulnerability exists in the login page via the <code>redirect_uri</code> parameter. By specifying a url with the javascript scheme (<code>javascript:</code>), an attacker can run arbitrary JavaScript code after the login. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47623\">https://nvd.nist.gov/vuln/detail/CVE-2023-47623</a></li>\n<li><a href=\"https://github.com/koush/scrypted/blob/v0.55.0/plugins/core/ui/src/Login.vue#L79\">https://github.com/koush/scrypted/blob/v0.55.0/plugins/core/ui/src/Login.vue#L79</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted\">https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ww7p-8gfg-v82r\">https://github.com/advisories/GHSA-ww7p-8gfg-v82r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ww7p-8gfg-v82r",
            "title": "[@scrypted/core] Scrypted Cross-site Scripting vulnerability",
            "date_modified": "2024-08-05T21:29:23.000Z",
            "date_published": "2024-08-05T21:29:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ww7p-8gfg-v82r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Editor.js is a block-style editor with clean JSON output. Versions prior to 2.26.0 are vulnerable to Code Injection via pasted input. The processHTML method passes pasted input into wrapper’s innerHTML. This issue is patched in version 2.26.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23474\">https://nvd.nist.gov/vuln/detail/CVE-2022-23474</a></li>\n<li><a href=\"https://github.com/codex-team/editor.js/pull/2100\">https://github.com/codex-team/editor.js/pull/2100</a></li>\n<li><a href=\"https://github.com/codex-team/editor.js/commit/f659015be6de8e6f0c322c5ff4d1a4532d2f29a2\">https://github.com/codex-team/editor.js/commit/f659015be6de8e6f0c322c5ff4d1a4532d2f29a2</a></li>\n<li><a href=\"https://securitylab.github.com/advisories\">https://securitylab.github.com/advisories</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-028_codex-team_editor_js\">https://securitylab.github.com/advisories/GHSL-2022-028_codex-team_editor_js</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mvj-2569-3mcm\">https://github.com/advisories/GHSA-6mvj-2569-3mcm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mvj-2569-3mcm",
            "title": "[@editorjs/editorjs] Editor.js vulnerable to Code Injection",
            "date_modified": "2024-08-05T21:19:01.000Z",
            "date_published": "2024-08-05T21:18:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mvj-2569-3mcm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><code>nuxt/icon</code> provides an API to allow client side icon lookup. This endpoint is at <code>/api/_nuxt_icon/[name]</code>.</p>\n<p>The proxied request path is improperly parsed, allowing an attacker to change the scheme and host of the request. This leads to SSRF, and could potentially lead to sensitive data exposure.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>new URL</code> constructor is used to parse the final path. This constructor can be passed a relative scheme or path in order to change the host the request is sent to. This constructor is also very tolerant of poorly formatted URLs.</p>\n<p>As a result we can pass a path prefixed with the string <code>http:</code>. This has the effect of changing the scheme to HTTP. We can then subsequently pass a new host, for example <code>http:127.0.0.1:8080</code>. This would allow us to send requests to a local server. </p>\n<h3 id=\"poc\">PoC</h3>\n<p>Make a request to <code>/api/_nuxt_icon/http:example.com</code>, observe the data returned has been fetched from a different resource than intended. </p>\n<p>I typically try to find an example within Nuxt infrastructure that is vulnerable to these types of bugs, but I could not identify any with this endpoint enabled.</p>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>SSRF, potential sensitive data exposure.</li>\n<li>I do not believe this can be chained into an XSS, but it may be possible.</li>\n<li>Does not have a security impact on services deployed on Cloudflare Workers.</li>\n<li>Does not impact certain builds and modes (like static builds).</li>\n<li>Can be mitigated using by disabling the <code>fallbackToApi</code> option.</li>\n</ul>\n<h3 id=\"fix\">Fix</h3>\n<ul>\n<li>Ensure the host has not been changed after the path is parsed.</li>\n<li>Alternatively, prefix the path with <code>./</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/icon/security/advisories/GHSA-cxgv-px37-4mp2\">https://github.com/nuxt/icon/security/advisories/GHSA-cxgv-px37-4mp2</a></li>\n<li><a href=\"https://github.com/nuxt/icon/commit/4564518c2b2ed8235a7715056ccdfce96ca3d0ff\">https://github.com/nuxt/icon/commit/4564518c2b2ed8235a7715056ccdfce96ca3d0ff</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42352\">https://nvd.nist.gov/vuln/detail/CVE-2024-42352</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxgv-px37-4mp2\">https://github.com/advisories/GHSA-cxgv-px37-4mp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxgv-px37-4mp2",
            "title": "[@nuxt/icon] Nuxt Icon affected by a Server-Side Request Forgery (SSRF)",
            "date_modified": "2024-08-06T14:41:55.000Z",
            "date_published": "2024-08-05T19:49:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxgv-px37-4mp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Due to the insufficient validation of the <code>path</code> parameter in the NuxtTestComponentWrapper, an attacker can execute arbitrary JavaScript on the server side, which allows them to execute arbitrary commands.</p>\n<h3 id=\"details\">Details</h3>\n<p>While running the test, a special component named <code>NuxtTestComponentWrapper</code> is available.\n<a href=\"https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/nuxt-root.vue#L42-L43\">https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/nuxt-root.vue#L42-L43</a></p>\n<p>This component loads the specified path as a component and renders it.</p>\n<p><a href=\"https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L9-L27\">https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L9-L27</a></p>\n<p>There is a validation for the <code>path</code> parameter to check whether the path traversal is performed, but this check is not sufficient.</p>\n<p><a href=\"https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L15-L19\">https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L15-L19</a></p>\n<p>Since <code>import(...)</code> uses <code>query.path</code> instead of the normalized <code>path</code>, a non-normalized URL can reach the <code>import(...)</code> function.\nFor example, passing something like <code>./components/test</code> normalizes <code>path</code> to <code>/root/directory/components/test</code>, but <code>import(...)</code> still receives <code>./components/test</code>.</p>\n<p>By using this behavior, it's possible to load arbitrary JavaScript by using the path like the following:</p>\n<pre><code>data:text/javascript;base64,Y29uc29sZS5sb2coMSk\n</code></pre>\n<p>Since <code>resolve(...)</code> resolves the filesystem path, not the URI, the above URI is treated as a relative path, but <code>import(...)</code> sees it as an absolute URI, and loads it as a JavaScript.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a nuxt project and run it in the test mode:</li>\n</ol>\n<pre><code>npx nuxi@latest init test\ncd test\nTEST=true npm run dev\n</code></pre>\n<ol start=\"2\">\n<li>Open the following URL:</li>\n</ol>\n<pre><code>http://localhost:3000/__nuxt_component_test__/?path=data%3Atext%2Fjavascript%3Bbase64%2CKGF3YWl0IGltcG9ydCgnZnMnKSkud3JpdGVGaWxlU3luYygnL3RtcC90ZXN0JywgKGF3YWl0IGltcG9ydCgnY2hpbGRfcHJvY2VzcycpKS5zcGF3blN5bmMoIndob2FtaSIpLnN0ZG91dCwgJ3V0Zi04Jyk\n</code></pre>\n<ol start=\"3\">\n<li>Confirm that the output of <code>whoami</code> is written to <code>/tmp/test</code></li>\n</ol>\n<p>Demonstration video: <a href=\"https://www.youtube.com/watch?v=FI6mN8WbcE4\">https://www.youtube.com/watch?v=FI6mN8WbcE4</a></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users who open a malicious web page in the browser while running the test locally are affected by this vulnerability, which results in the remote code execution from the malicious web page.\nSince web pages can send requests to arbitrary addresses, a malicious web page can repeatedly try to exploit this vulnerability, which then triggers the exploit when the test server starts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-v784-fjjh-f8r4\">https://github.com/nuxt/nuxt/security/advisories/GHSA-v784-fjjh-f8r4</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L15-L19\">https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L15-L19</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L9-L27\">https://github.com/nuxt/nuxt/blob/4779f5906fa4d3c784c2e2d6fe5a5c5f181faaec/packages/nuxt/src/app/components/test-component-wrapper.ts#L9-L27</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34344\">https://nvd.nist.gov/vuln/detail/CVE-2024-34344</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v784-fjjh-f8r4\">https://github.com/advisories/GHSA-v784-fjjh-f8r4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v784-fjjh-f8r4",
            "title": "[nuxt] Nuxt vulnerable to remote code execution via the browser when running the test locally",
            "date_modified": "2024-08-06T18:20:43.000Z",
            "date_published": "2024-08-05T19:49:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v784-fjjh-f8r4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The <code>navigateTo</code> function attempts to blockthe <code>javascript:</code> protocol, but does not correctly use API's provided by <code>unjs/ufo</code>. This library also contains parsing discrepancies.</p>\n<h3 id=\"details\">Details</h3>\n<p>The function first tests to see if the specified <a href=\"https://github.com/nuxt/nuxt/blob/fa9d43753d25fc2e8c3107f194b2bab6d4ebcb9a/packages/nuxt/src/app/composables/router.ts#L142\">URL has a protocol</a>. This uses the <a href=\"https://github.com/unjs/ufo\">unjs/ufo</a> package for URL parsing. This function works effectively, and returns true for a <code>javascript:</code> protocol.</p>\n<p>After this, the URL is parsed using the <a href=\"https://github.com/unjs/ufo/blob/e970686b2acae972136f478732450f6a2f1ab5e5/src/parse.ts#L47\"><code>parseURL</code></a> function. This function will refuse to parse poorly formatted URLs. Parsing <code>javascript:alert(1)</code> returns null/\"\" for all values. </p>\n<p>Next, the protocol of the URL is then checked using the <a href=\"https://github.com/unjs/ufo/blob/e970686b2acae972136f478732450f6a2f1ab5e5/src/utils.ts#L74\"><code>isScriptProtocol</code></a> function. This function simply checks the input against a list of protocols, and does not perform any parsing. </p>\n<p>The combination of refusing to parse poorly formatted URLs, and not performing additional parsing means that script checks fail as no protocol can be found. Even if a protocol was identified, whitespace is not stripped in the <code>parseURL</code> implementation, bypassing the <code>isScriptProtocol</code> checks. </p>\n<p>Certain special protocols are identified at the top of <a href=\"https://github.com/unjs/ufo/blob/e970686b2acae972136f478732450f6a2f1ab5e5/src/parse.ts#L49\"><code>parseURL</code></a>. Inserting a newline or tab into this sequence will block the special protocol check, and bypass the latter checks. </p>\n<h3 id=\"poc\">PoC</h3>\n<p>POC - <a href=\"https://stackblitz.com/edit/nuxt-xss-navigateto?file=app.vue\">https://stackblitz.com/edit/nuxt-xss-navigateto?file=app.vue</a></p>\n<p>Attempt payload X, then attempt payload Y.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>XSS, access to cookies, make requests on user's behalf. </p>\n<h3 id=\"recommendations\">Recommendations</h3>\n<p>As always with these bugs, the <code>URL</code> constructor provided by the browser is always the safest method of parsing a URL. </p>\n<p>Given the cross-platform requirements of nuxt/ufo a more appropriate solution is to make parsing consistent between functions, and to adapt parsing to be more consistent with the <a href=\"https://url.spec.whatwg.org/\">WHATWG URL specification</a>.</p>\n<h3 id=\"note\">Note</h3>\n<p>I've reported this vulnerability here as it is unclear if this is a bug in ufo or a misuse of the ufo library.</p>\n<p>This ONLY has impact after SSR has occured, the <code>javascript:</code> protocol within a location header does not trigger XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/nuxt/security/advisories/GHSA-vf6r-87q4-2vjf\">https://github.com/nuxt/nuxt/security/advisories/GHSA-vf6r-87q4-2vjf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34343\">https://nvd.nist.gov/vuln/detail/CVE-2024-34343</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vf6r-87q4-2vjf\">https://github.com/advisories/GHSA-vf6r-87q4-2vjf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vf6r-87q4-2vjf",
            "title": "[nuxt] nuxt vulnerable to Cross-site Scripting in navigateTo if used after SSR",
            "date_modified": "2024-08-06T14:38:49.000Z",
            "date_published": "2024-08-05T19:49:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vf6r-87q4-2vjf"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}