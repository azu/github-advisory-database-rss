{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h2 id=\"recommendation\">Recommendation</h2>\n<p>This package is working as intended. A <a href=\"https://github.com/westy92/html-pdf-chrome#security\">Security</a> section has been added since v0.6.1 to detail proper usage of this library. Npm has revoked their advisory altogether.</p>\n<h2 id=\"original-advisory\">Original Advisory</h2>\n<p>All versions of <code>html-pdf-chrome</code> are vulnerable to Server-Side Request Forgery (SSRF). The package executes HTTP requests if the parsed HTML contains external references to resources, such as <code>&lt;iframe src=\"http://localhost\" height=\"800px\" width=\"800px\"&gt;&lt;/iframe&gt;</code>. This allows attackers to access resources through HTTP that are accessible to the server, including private resources in the hosting environment.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/westy92/html-pdf-chrome/issues/249\">https://github.com/westy92/html-pdf-chrome/issues/249</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1339\">https://www.npmjs.com/advisories/1339</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p98-wpc9-g498\">https://github.com/advisories/GHSA-5p98-wpc9-g498</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498",
            "title": "[html-pdf-chrome] Server-Side Request Forgery in html-pdf-chrome",
            "date_modified": "2022-06-22T19:28:33.000Z",
            "date_published": "2020-09-04T15:21:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498"
            }
        },
        {
            "content_html": "<p>JSDom improperly allows the loading of local resources, which allows for local files to be manipulated by a malicious web page when script execution is enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-20066\">https://nvd.nist.gov/vuln/detail/CVE-2021-20066</a></li>\n<li><a href=\"https://www.tenable.com/security/research/tra-2021-05\">https://www.tenable.com/security/research/tra-2021-05</a></li>\n<li><a href=\"https://github.com/jsdom/jsdom/issues/3124\">https://github.com/jsdom/jsdom/issues/3124</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4c9-cqv8-9v98\">https://github.com/advisories/GHSA-f4c9-cqv8-9v98</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4c9-cqv8-9v98",
            "title": "[jsdom] Insufficient Granularity of Access Control in JSDom",
            "date_modified": "2022-06-22T18:50:50.000Z",
            "date_published": "2022-05-24T17:42:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4c9-cqv8-9v98"
            }
        },
        {
            "content_html": "<p>A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-24037\">https://nvd.nist.gov/vuln/detail/CVE-2021-24037</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/d86e185e485b6330216dee8e854455c694e3a36e\">https://github.com/facebook/hermes/commit/d86e185e485b6330216dee8e854455c694e3a36e</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/CVE-2021-24037\">https://www.facebook.com/security/advisories/CVE-2021-24037</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mph8-6787-r8hw\">https://github.com/advisories/GHSA-mph8-6787-r8hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mph8-6787-r8hw",
            "title": "[hermes-engine] Use After Free in Hermes",
            "date_modified": "2022-06-22T18:20:05.000Z",
            "date_published": "2022-05-24T19:05:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mph8-6787-r8hw"
            }
        },
        {
            "content_html": "<p>By passing invalid javascript code where await and yield were called upon non-async and non-generator getter/setter functions, Hermes would invoke generator functions and error out on invalid await/yield positions. This could result in segmentation fault as a consequence of type confusion error, with a low chance of RCE. This issue affects Hermes versions prior to v0.10.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-24044\">https://nvd.nist.gov/vuln/detail/CVE-2021-24044</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2021-24044\">https://www.facebook.com/security/advisories/cve-2021-24044</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7mhc-prgv-r3q4\">https://github.com/advisories/GHSA-7mhc-prgv-r3q4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7mhc-prgv-r3q4",
            "title": "[hermes-engine] Access of Resource Using Incompatible Type in Hermes",
            "date_modified": "2022-06-22T18:19:45.000Z",
            "date_published": "2022-01-16T00:00:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7mhc-prgv-r3q4"
            }
        },
        {
            "content_html": "<p>Azure ms-rest-nodeauth Library Elevation of Privilege Vulnerability</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28458\">https://nvd.nist.gov/vuln/detail/CVE-2021-28458</a></li>\n<li><a href=\"https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-28458\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2021-28458</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpfw-4m9x-rxx8\">https://github.com/advisories/GHSA-qpfw-4m9x-rxx8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpfw-4m9x-rxx8",
            "title": "[@azure/ms-rest-nodeauth] Improper Privilege Management in Azure ms-rest-nodeauth",
            "date_modified": "2022-06-22T18:12:14.000Z",
            "date_published": "2022-05-24T17:47:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpfw-4m9x-rxx8"
            }
        },
        {
            "content_html": "<p>The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z]. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-42740\">https://nvd.nist.gov/vuln/detail/CVE-2021-42740</a></li>\n<li><a href=\"https://github.com/substack/node-shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe\">https://github.com/substack/node-shell-quote/commit/5799416ed454aa4ec9afafc895b4e31760ea1abe</a></li>\n<li><a href=\"https://github.com/substack/node-shell-quote/blob/master/CHANGELOG.md#173\">https://github.com/substack/node-shell-quote/blob/master/CHANGELOG.md#173</a></li>\n<li><a href=\"https://www.npmjs.com/package/shell-quote\">https://www.npmjs.com/package/shell-quote</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4rg-993r-mgx7\">https://github.com/advisories/GHSA-g4rg-993r-mgx7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4rg-993r-mgx7",
            "title": "[shell-quote] Improper Neutralization of Special Elements used in a Command in Shell-quote",
            "date_modified": "2022-06-21T20:08:11.000Z",
            "date_published": "2022-05-24T19:18:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4rg-993r-mgx7"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can send a request to an app using NextAuth.js with an invalid <code>callbackUrl</code> query parameter, which internally we convert to a <code>URL</code> object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our <strong>API route handler timing out and logging in to fail</strong>. This has been remedied in the following releases:</p>\n<p>next-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">migration guide</a>)</p>\n<p>next-auth v4 users before version 4.5.0 are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We've released patches for this vulnerability in:</p>\n<ul>\n<li>v3 - <code>3.29.5</code></li>\n<li>v4 - <code>4.5.0</code></li>\n</ul>\n<p>You can do:</p>\n<pre><code class=\"language-sh\">npm i next-auth@latest\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-sh\">yarn add next-auth@latest\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-sh\">pnpm add next-auth@latest\n</code></pre>\n<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If for some reason you cannot upgrade, the workaround requires you to rely on <a href=\"https://next-auth.js.org/configuration/initialization#advanced-initialization\">Advanced Initialization</a>. Here is an example:</p>\n<p><strong>Before:</strong></p>\n<pre><code class=\"language-js\">// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(/* your config */)\n</code></pre>\n<p><strong>After:</strong></p>\n<pre><code class=\"language-js\">// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return /^https?:/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &amp;&amp;\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, /* your config */)\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>This vulnerability was discovered not long after <a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74</a> was published and is very similar in nature.</p>\n<p>Related documentation:</p>\n<ul>\n<li><a href=\"https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\">https://next-auth.js.org/getting-started/client#specifying-a-callbackurl</a></li>\n<li><a href=\"https://next-auth.js.org/configuration/callbacks#redirect-callback\">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>\n</ul>\n<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href=\"https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\">https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any concerns, we request responsible disclosure, outlined here: <a href=\"https://next-auth.js.org/security#reporting-a-vulnerability\">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>\n<h3 id=\"timeline\">Timeline</h3>\n<p>The issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5fm-jp9v-2432\">https://github.com/advisories/GHSA-g5fm-jp9v-2432</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5fm-jp9v-2432",
            "title": "[next-auth] Improper Handling of `callbackUrl` parameter in next-auth",
            "date_modified": "2022-06-22T22:24:59.000Z",
            "date_published": "2022-06-21T20:06:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5fm-jp9v-2432"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can send a request to an app using NextAuth.js with an invalid <code>callbackUrl</code> query parameter, which internally we convert to a <code>URL</code> object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our <strong>API route handler timing out and logging in to fail</strong>. This has been remedied in the following releases:</p>\n<p>next-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our <a href=\"https://next-auth.js.org/getting-started/upgrade-v4\">migration guide</a>)</p>\n<p>next-auth v4 users before version 4.5.0 are impacted.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We've released patches for this vulnerability in:</p>\n<ul>\n<li>v3 - <code>3.29.5</code></li>\n<li>v4 - <code>4.5.0</code></li>\n</ul>\n<p>You can do:</p>\n<pre><code class=\"language-sh\">npm i next-auth@latest\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-sh\">yarn add next-auth@latest\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-sh\">pnpm add next-auth@latest\n</code></pre>\n<p>(This will update to the latest v4 version, but you can change  <code>latest</code> to <code>3</code> if you want to stay on v3. This is not recommended.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If for some reason you cannot upgrade, the workaround requires you to rely on <a href=\"https://next-auth.js.org/configuration/initialization#advanced-initialization\">Advanced Initialization</a>. Here is an example:</p>\n<p><strong>Before:</strong></p>\n<pre><code class=\"language-js\">// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(/* your config */)\n</code></pre>\n<p><strong>After:</strong></p>\n<pre><code class=\"language-js\">// pages/api/auth/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return /^https?:/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &amp;&amp;\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, /* your config */)\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>This vulnerability was discovered not long after <a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-q2mx-j4x2-2h74</a> was published and is very similar in nature.</p>\n<p>Related documentation:</p>\n<ul>\n<li><a href=\"https://next-auth.js.org/getting-started/client#specifying-a-callbackurl\">https://next-auth.js.org/getting-started/client#specifying-a-callbackurl</a></li>\n<li><a href=\"https://next-auth.js.org/configuration/callbacks#redirect-callback\">https://next-auth.js.org/configuration/callbacks#redirect-callback</a></li>\n</ul>\n<p>A test case has been added so this kind of issue will be checked before publishing. See: <a href=\"https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6\">https://github.com/nextauthjs/next-auth/commit/e498483b23273d1bfc81be68339607f88d411bd6</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any concerns, we request responsible disclosure, outlined here: <a href=\"https://next-auth.js.org/security#reporting-a-vulnerability\">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>\n<h3 id=\"timeline\">Timeline</h3>\n<p>The issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-g5fm-jp9v-2432</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5fm-jp9v-2432\">https://github.com/advisories/GHSA-g5fm-jp9v-2432</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5fm-jp9v-2432",
            "title": "[next-auth] Improper Handling of `callbackUrl` parameter in next-auth",
            "date_modified": "2022-06-22T22:24:59.000Z",
            "date_published": "2022-06-21T20:06:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5fm-jp9v-2432"
            }
        },
        {
            "content_html": "<p>The got package before 12.1.0 for Node.js allows a redirect to a UNIX socket.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33987\">https://nvd.nist.gov/vuln/detail/CVE-2022-33987</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/pull/2047\">https://github.com/sindresorhus/got/pull/2047</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0\">https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc\">https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/releases/tag/v11.8.5\">https://github.com/sindresorhus/got/releases/tag/v11.8.5</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/releases/tag/v12.1.0\">https://github.com/sindresorhus/got/releases/tag/v12.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfrx-2q88-qq97\">https://github.com/advisories/GHSA-pfrx-2q88-qq97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97",
            "title": "[got] Got allows a redirect to a UNIX socket",
            "date_modified": "2022-06-21T20:05:26.000Z",
            "date_published": "2022-06-19T00:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
            }
        },
        {
            "content_html": "<p>The got package before 12.1.0 for Node.js allows a redirect to a UNIX socket.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-33987\">https://nvd.nist.gov/vuln/detail/CVE-2022-33987</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/pull/2047\">https://github.com/sindresorhus/got/pull/2047</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0\">https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc\">https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/releases/tag/v11.8.5\">https://github.com/sindresorhus/got/releases/tag/v11.8.5</a></li>\n<li><a href=\"https://github.com/sindresorhus/got/releases/tag/v12.1.0\">https://github.com/sindresorhus/got/releases/tag/v12.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfrx-2q88-qq97\">https://github.com/advisories/GHSA-pfrx-2q88-qq97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97",
            "title": "[got] Got allows a redirect to a UNIX socket",
            "date_modified": "2022-06-21T20:05:26.000Z",
            "date_published": "2022-06-19T00:00:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
            }
        },
        {
            "content_html": "<p>Strapi before 3.0.2 could allow a remote authenticated attacker to bypass security restrictions because templates are stored in a global variable without any sanitation. By sending a specially crafted request, an attacker could exploit this vulnerability to update the email template for both password reset and account confirmation emails.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-13961\">https://nvd.nist.gov/vuln/detail/CVE-2020-13961</a></li>\n<li><a href=\"https://github.com/strapi/strapi/pull/6599\">https://github.com/strapi/strapi/pull/6599</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/183045\">https://exchange.xforce.ibmcloud.com/vulnerabilities/183045</a></li>\n<li><a href=\"https://github.com/strapi/strapi/releases/tag/v3.0.2\">https://github.com/strapi/strapi/releases/tag/v3.0.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65wv-528r-m892\">https://github.com/advisories/GHSA-65wv-528r-m892</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65wv-528r-m892",
            "title": "[strapi] Improper Input Validation in strapi",
            "date_modified": "2022-06-21T20:05:09.000Z",
            "date_published": "2022-05-24T17:21:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65wv-528r-m892"
            }
        },
        {
            "content_html": "<p>All versions of package fast-string-search are vulnerable to Denial of Service (DoS) when computations are incorrect for non-string inputs. One can cause the V8 to attempt reading from non-permitted locations and cause a segmentation fault due to the violation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22138\">https://nvd.nist.gov/vuln/detail/CVE-2022-22138</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367\">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4263-q746-94mw\">https://github.com/advisories/GHSA-4263-q746-94mw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4263-q746-94mw",
            "title": "[fast-string-search] Uncontrolled Resource Consumption in fast-string-search",
            "date_modified": "2022-06-20T22:35:50.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4263-q746-94mw"
            }
        },
        {
            "content_html": "<p>This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href=\"https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544\">CVE-2020-7792</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21213\">https://nvd.nist.gov/vuln/detail/CVE-2022-21213</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepFillIn.js\">https://github.com/mout/mout/blob/master/src/object/deepFillIn.js</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepMixIn.js\">https://github.com/mout/mout/blob/master/src/object/deepMixIn.js</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MOUT-2342654\">https://snyk.io/vuln/SNYK-JS-MOUT-2342654</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvv8-xw5f-3f88\">https://github.com/advisories/GHSA-vvv8-xw5f-3f88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88",
            "title": "[mout] Prototype Pollution in mout",
            "date_modified": "2022-06-20T22:34:00.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88"
            }
        },
        {
            "content_html": "<p>All versions of package @discordjs/opus are vulnerable to Denial of Service (DoS) when trying to encode using an encoder with zero channels, or a non-initialized buffer. This leads to a hard crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25345\">https://nvd.nist.gov/vuln/detail/CVE-2022-25345</a></li>\n<li><a href=\"https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28\">https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100\">https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rvgf-69j7-xh78\">https://github.com/advisories/GHSA-rvgf-69j7-xh78</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rvgf-69j7-xh78",
            "title": "[@discordjs/opus] Uncontrolled Resource Consumption in @discordjs/opus",
            "date_modified": "2022-06-20T22:30:05.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rvgf-69j7-xh78"
            }
        },
        {
            "content_html": "<p>All versions of package fast-string-search are vulnerable to Out-of-bounds Read due to incorrect memory freeing and length calculation for any non-string input as the source. This allows the attacker to read previously allocated memory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25872\">https://nvd.nist.gov/vuln/detail/CVE-2022-25872</a></li>\n<li><a href=\"https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192\">https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368\">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmqg-p8f8-3qrw\">https://github.com/advisories/GHSA-hmqg-p8f8-3qrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmqg-p8f8-3qrw",
            "title": "[fast-string-search] Out-of-bounds Read in fast-string-search",
            "date_modified": "2022-06-20T22:28:15.000Z",
            "date_published": "2022-06-18T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmqg-p8f8-3qrw"
            }
        },
        {
            "content_html": "<p>All versions of package querymen are vulnerable to Prototype Pollution if the parameters of exported function handler(type, name, fn) can be controlled by users without any sanitization. Note: This vulnerability derives from an incomplete fix of <a href=\"https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867\">CVE-2020-7600</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25871\">https://nvd.nist.gov/vuln/detail/CVE-2022-25871</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488\">https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p23c-p8w2-ww5v\">https://github.com/advisories/GHSA-p23c-p8w2-ww5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p23c-p8w2-ww5v",
            "title": "[querymen] Prototype Pollution in querymen",
            "date_modified": "2022-06-20T22:27:39.000Z",
            "date_published": "2022-06-18T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p23c-p8w2-ww5v"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, invalid requests are now properly handled.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
            "title": "[parse-server] Invalid file request can crash server",
            "date_modified": "2022-06-20T22:25:49.000Z",
            "date_published": "2022-06-20T22:25:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, invalid requests are now properly handled.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
            "title": "[parse-server] Invalid file request can crash server",
            "date_modified": "2022-06-20T22:25:49.000Z",
            "date_published": "2022-06-20T22:25:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href=\"https://developer.apple.com/news/?id=stttq465\">current root certificate</a> as of May 27, 2022.</p>\n<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"more-information\">More information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org\">community forum</a> or <a href=\"http://chat.parseplatform.org\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31083\">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054\">https://github.com/parse-community/parse-server/pull/8054</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
            "title": "[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ",
            "date_modified": "2022-06-20T21:20:57.000Z",
            "date_published": "2022-06-17T22:09:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href=\"https://developer.apple.com/news/?id=stttq465\">current root certificate</a> as of May 27, 2022.</p>\n<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"more-information\">More information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org\">community forum</a> or <a href=\"http://chat.parseplatform.org\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31083\">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054\">https://github.com/parse-community/parse-server/pull/8054</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
            "title": "[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ",
            "date_modified": "2022-06-20T21:20:57.000Z",
            "date_published": "2022-06-17T22:09:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"
            }
        }
    ]
}