{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36604\">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/issues/352\">https://github.com/hapijs/hoek/issues/352</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a\">https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90\">https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c429-5p7v-vgjp\">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp",
            "title": "[hoek] hoek subject to prototype pollution via the clone function.",
            "date_modified": "2024-02-07T18:59:37.000Z",
            "date_published": "2022-09-25T00:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>\n<p>node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.</p>\n<p>This logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>\n<p>The v3 branch of <code>node-tar</code> has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of <code>node-tar</code>. If this is not possible, a workaround is available below.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>6.1.9 || 5.0.10 || 4.4.18</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.</p>\n<pre><code class=\"language-js\">const tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =&gt; {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n</code></pre>\n<p>Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.</p>\n<h4 id=\"fix\">Fix</h4>\n<p>The problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:</p>\n<ol>\n<li>The <code>String.normalize('NFKD')</code> method is used to first normalize all unicode to its maximally compatible and multi-code-point form.</li>\n<li>All slashes are normalized to <code>/</code> on Windows systems (on posix systems, <code>\\</code> is a valid filename character, and thus left intact).</li>\n<li>When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\">https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p</a></li>\n<li><a href=\"https://www.npmjs.com/package/tar\">https://www.npmjs.com/package/tar</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37712\">https://nvd.nist.gov/vuln/detail/CVE-2021-37712</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5008\">https://www.debian.org/security/2021/dsa-5008</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b\">https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455\">https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e\">https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a\">https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f\">https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1\">https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq89-hq3f-393p\">https://github.com/advisories/GHSA-qq89-hq3f-393p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq89-hq3f-393p",
            "title": "[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
            "date_modified": "2024-02-07T18:41:26.000Z",
            "date_published": "2021-08-31T16:05:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq89-hq3f-393p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the AJAX sample available at the <code>samples/old/ajax.html</code> file location. All integrators that use that sample in the production code can be affected.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the AJAX sample. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts where <code>samples/old/ajax.html</code> is used in a production environment.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank Rafael Pedrero and INCIBE (<a href=\"https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor\">original report</a>) for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4771\">https://nvd.nist.gov/vuln/detail/CVE-2023-4771</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor\">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wh5w-82f3-wrxh\">https://github.com/advisories/GHSA-wh5w-82f3-wrxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wh5w-82f3-wrxh",
            "title": "[ckeditor4] CKEditor cross-site scripting vulnerability in AJAX sample",
            "date_modified": "2024-02-07T18:21:06.000Z",
            "date_published": "2024-02-07T17:34:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wh5w-82f3-wrxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the samples that use the <a href=\"https://ckeditor.com/cke4/addon/preview\">preview</a> feature:</p>\n<ul>\n<li><code>samples/old/**/*.html</code></li>\n<li><code>plugins/[plugin name]/samples/**/*.html</code></li>\n</ul>\n<p>All integrators that use these samples in the production code can be affected.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the misconfigured <a href=\"https://ckeditor.com/cke4/addon/preview\">preview feature</a>. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts with affected samples used in a production environment.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank Marcin Wyczechowski &amp; Michał Majchrowicz AFINE Team for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://ckeditor.com/cke4/addon/preview\">https://ckeditor.com/cke4/addon/preview</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24816\">https://nvd.nist.gov/vuln/detail/CVE-2024-24816</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mw2c-vx6j-mg76\">https://github.com/advisories/GHSA-mw2c-vx6j-mg76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mw2c-vx6j-mg76",
            "title": "[ckeditor4] CKEditor4 Cross-site Scripting vulnerability in samples with enabled the preview feature",
            "date_modified": "2024-02-07T20:24:13.000Z",
            "date_published": "2024-02-07T17:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mw2c-vx6j-mg76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the core HTML parsing module and may affect all editor instances that:</p>\n<ul>\n<li>Enabled <a href=\"https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html\">full-page editing</a> mode,</li>\n<li>or enabled <a href=\"https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata\">CDATA</a> elements in <a href=\"https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html\">Advanced Content Filtering</a> configuration (defaults to <code>script</code> and <code>style</code> elements).</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML content bypassing Advanced Content Filtering mechanism, which could result in executing JavaScript code. An attacker could abuse faulty CDATA content detection and use it to prepare an intentional attack on the editor. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank <a href=\"https://cz.linkedin.com/in/michal-fryba\">Michal Frýba</a> from <a href=\"https://www.alefnula.com/\">ALEF NULA</a> for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata\">https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html\">https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html\">https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24815\">https://nvd.nist.gov/vuln/detail/CVE-2024-24815</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq6h-4g8v-qqvm\">https://github.com/advisories/GHSA-fq6h-4g8v-qqvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq6h-4g8v-qqvm",
            "title": "[ckeditor4] CKEditor4 Cross-site Scripting vulnerability caused by incorrect CDATA detection",
            "date_modified": "2024-02-07T20:23:51.000Z",
            "date_published": "2024-02-07T17:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq6h-4g8v-qqvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>\n<p>The following template can be used to demonstrate the vulnerability:  </p>\n<pre><code class=\"language-{{#with\">    {{#with split as |a|}}\n        {{pop (push \"alert('Vulnerable Handlebars JS');\")}}\n        {{#with (concat (lookup join (slice 0 1)))}}\n            {{#each (slice 2 3)}}\n                {{#with (apply 0 a)}}\n                    {{.}}\n                {{/with}}\n            {{/each}}\n        {{/with}}\n    {{/with}}\n{{/with}}```\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.2 or later.\n### References\n\n- &lt;https://www.npmjs.com/advisories/1316&gt;\n- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;\n</code></pre>\n",
            "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv",
            "title": "[handlebars] Arbitrary Code Execution in handlebars",
            "date_modified": "2024-02-07T05:08:28.000Z",
            "date_published": "2020-09-04T14:57:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>\n<p>The following template can be used to demonstrate the vulnerability:  </p>\n<pre><code class=\"language-{{#with\">    {{#with split as |a|}}\n        {{pop (push \"alert('Vulnerable Handlebars JS');\")}}\n        {{#with (concat (lookup join (slice 0 1)))}}\n            {{#each (slice 2 3)}}\n                {{#with (apply 0 a)}}\n                    {{.}}\n                {{/with}}\n            {{/each}}\n        {{/with}}\n    {{/with}}\n{{/with}}```\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.2 or later.\n### References\n\n- &lt;https://www.npmjs.com/advisories/1316&gt;\n- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;\n</code></pre>\n",
            "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv",
            "title": "[handlebars] Arbitrary Code Execution in handlebars",
            "date_modified": "2024-02-07T05:08:28.000Z",
            "date_published": "2020-09-04T14:57:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>DeviceFarmer stf v3.6.6 suffers from Use of a Broken or Risky Cryptographic Algorithm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51839\">https://nvd.nist.gov/vuln/detail/CVE-2023-51839</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf/issues/736\">https://github.com/DeviceFarmer/stf/issues/736</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf\">https://github.com/DeviceFarmer/stf</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35\">https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xm8-wjq7-88r5\">https://github.com/advisories/GHSA-7xm8-wjq7-88r5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xm8-wjq7-88r5",
            "title": "[@devicefarmer/stf] DeviceFarmer stf uses DES-ECB",
            "date_modified": "2024-02-06T20:29:20.000Z",
            "date_published": "2024-01-29T21:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xm8-wjq7-88r5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Directory Traversal vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.3 allows a remote attacker to execute arbitrary code via a crafted payload to the fileName parameter of the Save function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24398\">https://nvd.nist.gov/vuln/detail/CVE-2024-24398</a></li>\n<li><a href=\"https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R\">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>\n<li><a href=\"https://cves.at/posts/cve-2024-24398/writeup/\">https://cves.at/posts/cve-2024-24398/writeup/</a></li>\n<li><a href=\"http://stimulsoft.com\">http://stimulsoft.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gfqf-9w98-7jmx\">https://github.com/advisories/GHSA-gfqf-9w98-7jmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gfqf-9w98-7jmx",
            "title": "[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS directory traversal vulnerability",
            "date_modified": "2024-02-06T18:23:20.000Z",
            "date_published": "2024-02-06T00:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gfqf-9w98-7jmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.2 allows a remote attacker to execute arbitrary code via a crafted payload to the search bar component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24396\">https://nvd.nist.gov/vuln/detail/CVE-2024-24396</a></li>\n<li><a href=\"https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R\">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>\n<li><a href=\"https://cves.at/posts/cve-2024-24396/writeup/\">https://cves.at/posts/cve-2024-24396/writeup/</a></li>\n<li><a href=\"http://stimulsoft.com\">http://stimulsoft.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9m6m-c64r-w4f4\">https://github.com/advisories/GHSA-9m6m-c64r-w4f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9m6m-c64r-w4f4",
            "title": "[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS Cross Site Scripting vulnerability",
            "date_modified": "2024-02-05T22:58:57.000Z",
            "date_published": "2024-02-05T21:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9m6m-c64r-w4f4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.2 allows a remote attacker to execute arbitrary code via a crafted payload to the ReportName field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24397\">https://nvd.nist.gov/vuln/detail/CVE-2024-24397</a></li>\n<li><a href=\"https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R\">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>\n<li><a href=\"https://cves.at/posts/cve-2024-24397/writeup/\">https://cves.at/posts/cve-2024-24397/writeup/</a></li>\n<li><a href=\"http://stimulsoft.com\">http://stimulsoft.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9cgf-pxwq-2cpw\">https://github.com/advisories/GHSA-9cgf-pxwq-2cpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9cgf-pxwq-2cpw",
            "title": "[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS Cross Site Scripting vulnerability",
            "date_modified": "2024-02-05T22:33:49.000Z",
            "date_published": "2024-02-05T18:31:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9cgf-pxwq-2cpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An untrusted search path vulnerability was found in Yarn. When a victim runs certain Yarn commands in a directory with attacker-controlled content, malicious commands could be executed in unexpected ways.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4435\">https://nvd.nist.gov/vuln/detail/CVE-2021-4435</a></li>\n<li><a href=\"https://github.com/yarnpkg/yarn/commit/67fcce88935e45092ffa2674c08053f1ef5268a1\">https://github.com/yarnpkg/yarn/commit/67fcce88935e45092ffa2674c08053f1ef5268a1</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2021-4435\">https://access.redhat.com/security/cve/CVE-2021-4435</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2262284\">https://bugzilla.redhat.com/show_bug.cgi?id=2262284</a></li>\n<li><a href=\"https://github.com/yarnpkg/yarn/releases/tag/v1.22.13\">https://github.com/yarnpkg/yarn/releases/tag/v1.22.13</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mpwj-fcr6-x34c\">https://github.com/advisories/GHSA-mpwj-fcr6-x34c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mpwj-fcr6-x34c",
            "title": "[yarn] Yarn untrusted search path vulnerability",
            "date_modified": "2024-02-05T20:20:30.000Z",
            "date_published": "2024-02-04T21:30:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mpwj-fcr6-x34c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in the Red Hat Developer Hub (RHDH). The catalog-import function leaks GitLab access tokens on the frontend when the base64 encoded GitLab token includes a newline at the end of the string. The sanitized error can display on the frontend, including the raw access token. Upon gaining access to this token and depending on permissions, an attacker could push malicious code to repositories, delete resources in Git, revoke or generate new keys, and sign code illegitimately.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6944\">https://nvd.nist.gov/vuln/detail/CVE-2023-6944</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2023-6944\">https://access.redhat.com/security/cve/CVE-2023-6944</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2255204\">https://bugzilla.redhat.com/show_bug.cgi?id=2255204</a></li>\n<li><a href=\"https://github.com/backstage/backstage/issues/21503\">https://github.com/backstage/backstage/issues/21503</a></li>\n<li><a href=\"https://github.com/backstage/backstage/pull/21582\">https://github.com/backstage/backstage/pull/21582</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/0382db60f6c8e8715a702bde6408ad10a48d8e11\">https://github.com/backstage/backstage/commit/0382db60f6c8e8715a702bde6408ad10a48d8e11</a></li>\n<li><a href=\"https://github.com/backstage/backstage/blob/master/docs/releases/v1.21.0-next.2-changelog.md\">https://github.com/backstage/backstage/blob/master/docs/releases/v1.21.0-next.2-changelog.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86rg-pf4c-5grg\">https://github.com/advisories/GHSA-86rg-pf4c-5grg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86rg-pf4c-5grg",
            "title": "[@backstage/backend-app-api] @backstage/backend-app-api leaks GitLab access tokens",
            "date_modified": "2024-02-05T17:59:42.000Z",
            "date_published": "2024-01-04T12:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86rg-pf4c-5grg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A major blind SSRF has been found in <code>remark-images-download</code>, which allowed\nfor requests to be made to neighboring servers on local IP ranges.\nThe issue came from a loose filtering of URLs inside the module.</p>\n<p>Imagine a server running on a private network <code>192.168.1.0/24</code>.\nA private service serving images is running on <code>192.168.1.2</code>, and\nis not expected to be accessed by users. A machine is running\n<code>remark-images-download</code> on the neighboring <code>192.168.1.3</code> host.\nAn user enters the following Markdown:</p>\n<pre><code class=\"language-markdown\">![](http://192.168.1.2/private-img.png)\n</code></pre>\n<p>The image is downloaded by the server and included inside the resulting\ndocument. Hence, the user has access to the private image.</p>\n<p>It has been corrected by preventing images downloads from\nlocal IP ranges, both in IPv4 and IPv6.\nTo avoid malicious domain names, resolved local IPs from are also\nforbidden inside the module.\nThis vulnerability impact is moderate, as it is can allow access to\nunexposed documents on the local network, and is very easy\nto exploit.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in version 3.1.0.\nIf impacted, you should update to this version as soon as possible.</p>\n<p>Please note that a minor version has been released instead of a bugfix.\nThis is due to a new option included to prevent another vulnerability,\nupgrading to the new version will not break compatibility.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workaround is known, the package should be upgraded.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, open an issue in <a href=\"https://github.com/zestedesavoir/zmarkdown/issues\">ZMarkdown</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mf74-qq7w-6j7v\">https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mf74-qq7w-6j7v</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mf74-qq7w-6j7v\">https://github.com/advisories/GHSA-mf74-qq7w-6j7v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mf74-qq7w-6j7v",
            "title": "[zmarkdown] Zmarkdown Server-Side Request Forgery (SSRF) in remark-download-images",
            "date_modified": "2024-02-03T00:38:23.000Z",
            "date_published": "2024-02-03T00:38:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mf74-qq7w-6j7v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A minor Local File Inclusion vulnerability has been found in\n<code>zmarkdown</code>, which allowed for images with a known path on\nthe host machine to be included inside a LaTeX document.</p>\n<p>To prevent it, a new option has been created that allow to replace\ninvalid paths with a default image instead of linking the image on the\nhost directly. <code>zmarkdown</code> has been updated to make this setting the\ndefault.</p>\n<p>Every user of <code>zmarkdown</code> is likely impacted, except if\ndisabling LaTeX generation or images download. Here\nis an example of including an image from an invalid path:</p>\n<pre><code class=\"language-markdown\">![](/tmp/img.png)\n</code></pre>\n<p>Will effectively redownload and include the image\nfound at <code>/tmp/img.png</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been patched in version 10.1.3.\nIf impacted, you should update to this version as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable images downloading, or sanitize paths.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory, open an issue in <a href=\"https://github.com/zestedesavoir/zmarkdown/issues\">ZMarkdown</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mq6v-w35g-3c97\">https://github.com/zestedesavoir/zmarkdown/security/advisories/GHSA-mq6v-w35g-3c97</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mq6v-w35g-3c97\">https://github.com/advisories/GHSA-mq6v-w35g-3c97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mq6v-w35g-3c97",
            "title": "[zmarkdown] Local File Inclusion vulnerability in zmarkdown",
            "date_modified": "2024-02-03T00:37:56.000Z",
            "date_published": "2024-02-03T00:37:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mq6v-w35g-3c97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>\n<p><code>node-tar</code> aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.</p>\n<p>This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both <code>\\</code> and <code>/</code> characters as path separators, however <code>\\</code> is a valid filename character on posix systems.</p>\n<p>By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>\n<p>Additionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at <code>FOO</code>, followed by a symbolic link named <code>foo</code>, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but <em>not</em> from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the <code>FOO</code> directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. </p>\n<p>These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.</p>\n<p>The v3 branch of <code>node-tar</code> has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of <code>node-tar</code>. If this is not possible, a workaround is available below.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>4.4.16 || 5.0.8 || 6.1.7</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.</p>\n<pre><code class=\"language-js\">const tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =&gt; {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n</code></pre>\n<p>Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>The problem is addressed in the following ways:</p>\n<ol>\n<li>All paths are normalized to use <code>/</code> as a path separator, replacing <code>\\</code> with <code>/</code> on Windows systems, and leaving <code>\\</code> intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.</li>\n<li>Directory cache pruning is performed case-insensitively.  This <em>may</em> result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.</li>\n</ol>\n<h4 id=\"caveat\">Caveat</h4>\n<p>Note that this means that the <code>entry</code> objects exposed in various parts of tar's API will now always use <code>/</code> as a path separator, even on Windows systems.  This is not expected to cause problems, as <code>/</code> is a valid path separator on Windows systems, but <em>may</em> result in issues if <code>entry.path</code> is compared against a path string coming from some other API such as <code>fs.realpath()</code> or <code>path.resolve()</code>.</p>\n<p>Users are encouraged to always normalize paths using a well-tested method such as <code>path.resolve()</code> before comparing paths to one another.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\">https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc</a></li>\n<li><a href=\"https://www.npmjs.com/package/tar\">https://www.npmjs.com/package/tar</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37701\">https://nvd.nist.gov/vuln/detail/CVE-2021-37701</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5008\">https://www.debian.org/security/2021/dsa-5008</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9r2w-394v-53qc\">https://github.com/advisories/GHSA-9r2w-394v-53qc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9r2w-394v-53qc",
            "title": "[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
            "date_modified": "2024-02-02T23:30:44.000Z",
            "date_published": "2021-08-31T16:05:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9r2w-394v-53qc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ylianst MeshCentral 1.1.16 suffers from Use of a Broken or Risky Cryptographic Algorithm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51838\">https://nvd.nist.gov/vuln/detail/CVE-2023-51838</a></li>\n<li><a href=\"https://github.com/Ylianst/MeshCentral/tree/master\">https://github.com/Ylianst/MeshCentral/tree/master</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/Bug_MeshCentral.md</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51838.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51838.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v269-rrr6-cx6r\">https://github.com/advisories/GHSA-v269-rrr6-cx6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v269-rrr6-cx6r",
            "title": "[meshcentral] Ylianst MeshCentral 1.1.16 suffers from Use of a Broken or Risky Cryptographic Algorithm.",
            "date_modified": "2024-02-02T20:17:32.000Z",
            "date_published": "2024-02-02T18:30:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v269-rrr6-cx6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package dash-core-components before 2.13.0; all versions of the package dash-core-components; versions of the package dash before 2.15.0; all versions of the package dash-html-components; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.</p>\n<p><strong>Note:</strong></p>\n<p>This is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21485\">https://nvd.nist.gov/vuln/detail/CVE-2024-21485</a></li>\n<li><a href=\"https://github.com/plotly/dash/issues/2729\">https://github.com/plotly/dash/issues/2729</a></li>\n<li><a href=\"https://github.com/plotly/dash/pull/2732\">https://github.com/plotly/dash/pull/2732</a></li>\n<li><a href=\"https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c\">https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c</a></li>\n<li><a href=\"https://github.com/plotly/dash/releases/tag/v2.15.0\">https://github.com/plotly/dash/releases/tag/v2.15.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084\">https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337\">https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335\">https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-547x-748v-vp6p\">https://github.com/advisories/GHSA-547x-748v-vp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-547x-748v-vp6p",
            "title": "[dash-html-components] Dash apps vulnerable to Cross-site Scripting",
            "date_modified": "2024-02-02T18:10:52.000Z",
            "date_published": "2024-02-02T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-547x-748v-vp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package dash-core-components before 2.13.0; all versions of the package dash-core-components; versions of the package dash before 2.15.0; all versions of the package dash-html-components; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server.</p>\n<p><strong>Note:</strong></p>\n<p>This is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-21485\">https://nvd.nist.gov/vuln/detail/CVE-2024-21485</a></li>\n<li><a href=\"https://github.com/plotly/dash/issues/2729\">https://github.com/plotly/dash/issues/2729</a></li>\n<li><a href=\"https://github.com/plotly/dash/pull/2732\">https://github.com/plotly/dash/pull/2732</a></li>\n<li><a href=\"https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c\">https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c</a></li>\n<li><a href=\"https://github.com/plotly/dash/releases/tag/v2.15.0\">https://github.com/plotly/dash/releases/tag/v2.15.0</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084\">https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337\">https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335\">https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336\">https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-547x-748v-vp6p\">https://github.com/advisories/GHSA-547x-748v-vp6p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-547x-748v-vp6p",
            "title": "[dash-core-components] Dash apps vulnerable to Cross-site Scripting",
            "date_modified": "2024-02-02T18:10:52.000Z",
            "date_published": "2024-02-02T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-547x-748v-vp6p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"overview\">Overview</h3>\n<p>Prototype pollution vulnerability in 'dset' versions 1.0.0 through 2.0.1 allows attacker to cause a denial of service and may lead to remote code execution.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NPM module 'dset' can be abused by Prototype Pollution vulnerability since the function ‘export ()' did not check for the type of object before assigning value to the property. Due to this flaw an attacker could create a non-existent property or able to manipulate the property which leads to Denial of Service or potentially Remote code execution.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The export function accepts three arguments <code>obj, keys, val</code>. Due to the absence of validation, at values passed into <code>keys, val</code> arguments, an attacker can supply a malicious value by adjusting the <code>keys</code> value to include the <code>__proto__</code> property. Since there is no validation before assigning property to check whether the assigned <code>keys</code> is the Object's own property or not, the property <code>isAdmin</code> will be directly be assigned to the empty obj({}) thereby polluting the Object prototype. Later in the code, if there is a check to validate <code>isAdmin</code> the valued would be substituted as \"true\" as it had been polluted.</p>\n<pre><code class=\"language-js\">const dset = require('dset');\nvar obj = {}\nconsole.log(\"Before : \" + obj.isAdmin);\ndset(obj, '__proto__.polluted', true);\nconsole.log(\"After : \" + obj.polluted);\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28277\">https://nvd.nist.gov/vuln/detail/CVE-2020-28277</a></li>\n<li><a href=\"https://github.com/lukeed/dset/blob/50a6ead172d1466a96035eff00f8eb465ccd050a/src/index.js#L6\">https://github.com/lukeed/dset/blob/50a6ead172d1466a96035eff00f8eb465ccd050a/src/index.js#L6</a></li>\n<li><a href=\"https://github.com/lukeed/dset/issues/11\">https://github.com/lukeed/dset/issues/11</a></li>\n<li><a href=\"https://github.com/lukeed/dset/commit/2b9ec49e231107b1a83b04a1bc1a66a8d14cea1c\">https://github.com/lukeed/dset/commit/2b9ec49e231107b1a83b04a1bc1a66a8d14cea1c</a></li>\n<li><a href=\"https://web.archive.org/web/20210104204657/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28277\">https://web.archive.org/web/20210104204657/https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28277</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4xc-7cw8-cgfj\">https://github.com/advisories/GHSA-q4xc-7cw8-cgfj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4xc-7cw8-cgfj",
            "title": "[dset] dset vulnerable to prototype pollution",
            "date_modified": "2024-02-01T21:04:21.000Z",
            "date_published": "2022-05-24T17:37:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4xc-7cw8-cgfj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}