{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Undici clears Authorization headers on cross-origin redirects, but does not clear <code>Cookie</code> headers. By design, <code>cookie</code> headers are <a href=\"https://fetch.spec.whatwg.org/#forbidden-request-header\">forbidden request headers</a>, disallowing them to be set in <code>RequestInit.headers</code> in browser environments. Since Undici handles headers more liberally than the specification, there was a disconnect from the assumptions the spec made, and Undici's implementation of fetch.</p>\n<p>As such this may lead to accidental leakage of cookie to a 3rd-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the 3rd party site.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This was patched in <a href=\"https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76\">e041de359221ebeae04c469e8aff4145764e6d76</a>, which is included in version 5.26.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-q768-x9m6-m9qp\">https://github.com/nodejs/undici/security/advisories/GHSA-q768-x9m6-m9qp</a></li>\n<li><a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-wqq4-5wpv-mx2g\">https://github.com/nodejs/undici/security/advisories/GHSA-wqq4-5wpv-mx2g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45143\">https://nvd.nist.gov/vuln/detail/CVE-2023-45143</a></li>\n<li><a href=\"https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76\">https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76</a></li>\n<li><a href=\"https://hackerone.com/reports/2166948\">https://hackerone.com/reports/2166948</a></li>\n<li><a href=\"https://github.com/nodejs/undici/releases/tag/v5.26.2\">https://github.com/nodejs/undici/releases/tag/v5.26.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wqq4-5wpv-mx2g\">https://github.com/advisories/GHSA-wqq4-5wpv-mx2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wqq4-5wpv-mx2g",
            "title": "[undici] Undici's cookie header not cleared on cross-origin redirect in fetch",
            "date_modified": "2023-10-16T14:05:38.000Z",
            "date_published": "2023-10-16T14:05:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wqq4-5wpv-mx2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>\n<p>Known affected plugins are:</p>\n<ul>\n<li><code>@babel/plugin-transform-runtime</code></li>\n<li><code>@babel/preset-env</code> when using its <a href=\"https://babeljs.io/docs/babel-preset-env#usebuiltins\"><code>useBuiltIns</code></a> option</li>\n<li>Any \"polyfill provider\" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>\n</ul>\n<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>\n<p><strong>Users that only compile trusted code are not impacted.</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>\n<p>Babel 6 does not receive security fixes anymore (see <a href=\"https://github.com/babel/babel/security/policy\">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>\n<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>\n<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>\n<li><code>@babel/preset-env</code> v7.23.2</li>\n<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>\n<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>\n<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>\n<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>\n<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92\">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45133\">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>\n<li><a href=\"https://github.com/babel/babel/pull/16033\">https://github.com/babel/babel/pull/16033</a></li>\n<li><a href=\"https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82\">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>\n<li><a href=\"https://github.com/babel/babel/releases/tag/v7.23.2\">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>\n<li><a href=\"https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4\">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67hx-6x53-jw92\">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67hx-6x53-jw92",
            "title": "[@babel/traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code",
            "date_modified": "2023-10-16T13:55:37.000Z",
            "date_published": "2023-10-16T13:55:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67hx-6x53-jw92"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the <code>path.evaluate()</code>or <code>path.evaluateTruthy()</code> internal Babel methods.</p>\n<p>Known affected plugins are:</p>\n<ul>\n<li><code>@babel/plugin-transform-runtime</code></li>\n<li><code>@babel/preset-env</code> when using its <a href=\"https://babeljs.io/docs/babel-preset-env#usebuiltins\"><code>useBuiltIns</code></a> option</li>\n<li>Any \"polyfill provider\" plugin that depends on <code>@babel/helper-define-polyfill-provider</code>, such as <code>babel-plugin-polyfill-corejs3</code>, <code>babel-plugin-polyfill-corejs2</code>, <code>babel-plugin-polyfill-es-shims</code>, <code>babel-plugin-polyfill-regenerator</code></li>\n</ul>\n<p>No other plugins under the <code>@babel/</code> namespace are impacted, but third-party plugins might be.</p>\n<p><strong>Users that only compile trusted code are not impacted.</strong></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in <code>@babel/traverse@7.23.2</code>.</p>\n<p>Babel 6 does not receive security fixes anymore (see <a href=\"https://github.com/babel/babel/security/policy\">Babel's security policy</a>), hence there is no patch planned for <code>babel-traverse@6</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ul>\n<li>Upgrade <code>@babel/traverse</code> to v7.23.2 or higher. You can do this by deleting it from your package manager's lockfile and re-installing the dependencies. <code>@babel/core</code> &gt;=7.23.2 will automatically pull in a non-vulnerable version.</li>\n<li>If you cannot upgrade <code>@babel/traverse</code> and are using one of the affected packages mentioned above, upgrade them to their latest version to avoid triggering the vulnerable code path in affected <code>@babel/traverse</code> versions:<ul>\n<li><code>@babel/plugin-transform-runtime</code> v7.23.2</li>\n<li><code>@babel/preset-env</code> v7.23.2</li>\n<li><code>@babel/helper-define-polyfill-provider</code> v0.4.3</li>\n<li><code>babel-plugin-polyfill-corejs2</code> v0.4.6</li>\n<li><code>babel-plugin-polyfill-corejs3</code> v0.8.5</li>\n<li><code>babel-plugin-polyfill-es-shims</code> v0.10.0</li>\n<li><code>babel-plugin-polyfill-regenerator</code> v0.5.3</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92\">https://github.com/babel/babel/security/advisories/GHSA-67hx-6x53-jw92</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45133\">https://nvd.nist.gov/vuln/detail/CVE-2023-45133</a></li>\n<li><a href=\"https://github.com/babel/babel/pull/16033\">https://github.com/babel/babel/pull/16033</a></li>\n<li><a href=\"https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82\">https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82</a></li>\n<li><a href=\"https://github.com/babel/babel/releases/tag/v7.23.2\">https://github.com/babel/babel/releases/tag/v7.23.2</a></li>\n<li><a href=\"https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4\">https://github.com/babel/babel/releases/tag/v8.0.0-alpha.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67hx-6x53-jw92\">https://github.com/advisories/GHSA-67hx-6x53-jw92</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67hx-6x53-jw92",
            "title": "[@babel/traverse] Babel vulnerable to arbitrary code execution when compiling specifically crafted malicious code",
            "date_modified": "2023-10-16T13:55:37.000Z",
            "date_published": "2023-10-16T13:55:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67hx-6x53-jw92"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the Cisco node-jose open source library before 0.11.0 could allow an unauthenticated, remote attacker to re-sign tokens using a key that is embedded within the token. The vulnerability is due to node-jose following the JSON Web Signature (JWS) standard for JSON Web Tokens (JWTs). This standard specifies that a JSON Web Key (JWK) representing a public key can be embedded within the header of a JWS. This public key is then trusted for verification. An attacker could exploit this by forging valid JWS objects by removing the original signature, adding a new public key to the header, and then signing the object using the (attacker-owned) private key associated with the public key embedded in that JWS header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-0114\">https://nvd.nist.gov/vuln/detail/CVE-2018-0114</a></li>\n<li><a href=\"https://github.com/cisco/node-jose/blob/master/CHANGELOG.md\">https://github.com/cisco/node-jose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/zi0Black/POC-CVE-2018-0114\">https://github.com/zi0Black/POC-CVE-2018-0114</a></li>\n<li><a href=\"https://tools.cisco.com/security/center/viewAlert.x?alertId=56326\">https://tools.cisco.com/security/center/viewAlert.x?alertId=56326</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/44324/\">https://www.exploit-db.com/exploits/44324/</a></li>\n<li><a href=\"https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445\">https://web.archive.org/web/20210124130907/http://www.securityfocus.com/bid/102445</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jfxm-w8g2-4rcv\">https://github.com/advisories/GHSA-jfxm-w8g2-4rcv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jfxm-w8g2-4rcv",
            "title": "[node-jose] Cisco node-jose improper validation of JWT signature",
            "date_modified": "2023-10-14T05:03:23.000Z",
            "date_published": "2022-05-13T01:17:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jfxm-w8g2-4rcv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Server-Side Request Forgery (SSRF) in GitHub repository vriteio/vrite prior to 0.3.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-5572\">https://nvd.nist.gov/vuln/detail/CVE-2023-5572</a></li>\n<li><a href=\"https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23\">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>\n<li><a href=\"https://huntr.dev/bounties/db649f1b-8578-4ef0-8df3-d320ab33f1be\">https://huntr.dev/bounties/db649f1b-8578-4ef0-8df3-d320ab33f1be</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w35p-wxwj-rcm9\">https://github.com/advisories/GHSA-w35p-wxwj-rcm9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w35p-wxwj-rcm9",
            "title": "[@vrite/sdk] Server-Side Request Forgery (SSRF) in vriteio/vrite",
            "date_modified": "2023-10-13T23:38:24.000Z",
            "date_published": "2023-10-13T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w35p-wxwj-rcm9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Input Validation in GitHub repository vriteio/vrite prior to 0.3.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-5571\">https://nvd.nist.gov/vuln/detail/CVE-2023-5571</a></li>\n<li><a href=\"https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23\">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>\n<li><a href=\"https://huntr.dev/bounties/926ca25f-dd4a-40cf-8e6b-9d7b5938e95a\">https://huntr.dev/bounties/926ca25f-dd4a-40cf-8e6b-9d7b5938e95a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44ff-9w4f-99w6\">https://github.com/advisories/GHSA-44ff-9w4f-99w6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44ff-9w4f-99w6",
            "title": "[@vrite/sdk] Improper Input Validation in vriteio/vrite",
            "date_modified": "2023-10-13T23:38:19.000Z",
            "date_published": "2023-10-13T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44ff-9w4f-99w6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>cryptiles</code> prior to 4.1.2 are vulnerable to Insufficient Entropy. The <code>randomDigits()</code> method does not provide sufficient entropy and its generates digits that are not evenly distributed.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Upgrade to version 4.1.2. The package is deprecated and has been moved to <code>@hapi/cryptiles</code> and it is strongly recommended to use the maintained package.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000620\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000620</a></li>\n<li><a href=\"https://github.com/hapijs/cryptiles/issues/34\">https://github.com/hapijs/cryptiles/issues/34</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq8g-5pc5-wrhr\">https://github.com/advisories/GHSA-rq8g-5pc5-wrhr</a></li>\n<li><a href=\"https://github.com/nodejs/security-wg/blob/master/vuln/npm/476.json\">https://github.com/nodejs/security-wg/blob/master/vuln/npm/476.json</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/720\">https://www.npmjs.com/advisories/720</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1464\">https://www.npmjs.com/advisories/1464</a></li>\n<li><a href=\"https://github.com/hapijs/cryptiles/commit/9332d4263a32b84e76bf538d7470d01ea63fa047\">https://github.com/hapijs/cryptiles/commit/9332d4263a32b84e76bf538d7470d01ea63fa047</a></li>\n<li><a href=\"https://github.com/hapijs/cryptiles/issues/35\">https://github.com/hapijs/cryptiles/issues/35</a></li>\n<li><a href=\"https://github.com/hapijs/cryptiles/commit/6bdcd0f6ee8ade96e7b30350bad39ee0c2ef0f9b\">https://github.com/hapijs/cryptiles/commit/6bdcd0f6ee8ade96e7b30350bad39ee0c2ef0f9b</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq8g-5pc5-wrhr",
            "title": "[cryptiles] Insufficient Entropy in cryptiles",
            "date_modified": "2023-10-13T21:10:49.000Z",
            "date_published": "2018-09-11T18:22:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq8g-5pc5-wrhr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Allocation of Resources Without Limits or Throttling in GitHub repository vriteio/vrite prior to 0.3.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-5573\">https://nvd.nist.gov/vuln/detail/CVE-2023-5573</a></li>\n<li><a href=\"https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23\">https://github.com/vriteio/vrite/commit/1877683b932bb33fb20d688e476284b70bb9fe23</a></li>\n<li><a href=\"https://huntr.dev/bounties/46a2bb2c-712a-4008-a147-b862e3af7d72\">https://huntr.dev/bounties/46a2bb2c-712a-4008-a147-b862e3af7d72</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5ghm-h2wq-g3mh\">https://github.com/advisories/GHSA-5ghm-h2wq-g3mh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5ghm-h2wq-g3mh",
            "title": "[@vrite/sdk] Allocation of Resources Without Limits or Throttling in vriteio/vrite",
            "date_modified": "2023-10-13T19:24:51.000Z",
            "date_published": "2023-10-13T12:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5ghm-h2wq-g3mh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When you have transforms on the root level or single source with transforms, and the client sends the same query with different variables, the initial variables are used in all following requests until the cache evicts DocumentNode.</p>\n<p>Let's say if a token is sent via variables, the following requests will act like the same token is sent even if the following requests have different tokens.</p>\n<p>This can cause a short memory leak but it won't grow per each request but per different operation until the cache evicts DocumentNode by LRU mechanism.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886\">https://github.com/Urigo/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886</a></li>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0\">https://github.com/Urigo/graphql-mesh/commit/482d813a9f75935024aa77872125d197f5fca3d0</a></li>\n<li><a href=\"https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678\">https://github.com/Urigo/graphql-mesh/releases/tag/release-1696859949678</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rr4x-crhf-8886\">https://github.com/advisories/GHSA-rr4x-crhf-8886</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rr4x-crhf-8886",
            "title": "[@graphql-mesh/runtime] Cache variables with the operations when transforms exist on the root level even if variables change in the further requests with the same operation",
            "date_modified": "2023-10-10T21:29:51.000Z",
            "date_published": "2023-10-10T21:29:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rr4x-crhf-8886"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"summary\">Summary</h1>\n<p>Attackers with access to a users' device can gain persistent account access.\nThis is caused by missing verification of Session Tokens after password changes and/or elapsed inactivity-periods.</p>\n<h1 id=\"details\">Details</h1>\n<p><code>uptime-kuma</code> sets JWT tokens for users after successful authentication.</p>\n<p>These tokens have the following design flaws:</p>\n<ul>\n<li>After successful login, a JWT token and it is stored in <code>sessionStorage</code> or <code>localStorage</code>. \nWhich of the two is decided based on the <code>Remember Me</code> button. \nThe users' token is valid without any time limitation, even after long periods of inactivity. \nThis increases the risk of session hijacking if, for example, a user forgets to log off and leaves the PC.</li>\n<li>sessions are only deleted on the client side after a user loggs out, meaning a local attacker could reuse said token with deep system access over the browser</li>\n<li>If a user changes a password<ul>\n<li>any previously logged in clients are not logged out</li>\n<li>previously issued tokens remained valid forever</li>\n</ul>\n</li>\n</ul>\n<p>These flaws allow user cookies to remain valid even after changing passwords or being inactive, posing a high security risk.</p>\n<h1 id=\"poc\">POC</h1>\n<h3 id=\"password-resets-not-deactivating-cookies\">Password resets not deactivating cookies</h3>\n<ul>\n<li>Log in.</li>\n<li>Note the user cookie.</li>\n<li>Change your password.</li>\n<li>Attempt to log in again with the same cookie.</li>\n<li>The cookie remains valid despite the password change.</li>\n</ul>\n<h3 id=\"inactivity-not-deactivating-sessions\">Inactivity not deactivating sessions</h3>\n<p> In testing, even after a period of over a day of inactivity, the session was still valid</p>\n<h1 id=\"impact\">Impact</h1>\n<p>Another person with local access to the device could take over the session permanently, even after hours of previous inactivity or a password change.\nSuch activity would not be obvious to the user (see <a href=\"https://github.com/louislam/uptime-kuma/issues/3481\">https://github.com/louislam/uptime-kuma/issues/3481</a> if you want to help with this).</p>\n<p>With this gained account access, an attacker can cause:</p>\n<h2 id=\"confidentially-loss\">confidentially loss</h2>\n<ul>\n<li>monitors (including private ones not shared on public status pages)</li>\n<li>notification providers </li>\n<li>settings like <code>api-keys</code> (only used for accessing <code>/metrics</code>)</li>\n<li>settings like secrets like the <code>Steam API Key</code></li>\n<li>maintenance periods</li>\n</ul>\n<h2 id=\"availability-loss\">availability loss</h2>\n<ul>\n<li>by creating a lot of monitors and setting the retention policy very high leading to degraded database performance or out of storage</li>\n<li>by creating a lot of <code>HTTP(s) - Browser Engine (Chrome/Chromium) (Beta)</code> leading to RAM exhaustion</li>\n</ul>\n<h2 id=\"integrity-loss\">integrity loss</h2>\n<ul>\n<li>by the attacker deleting a monitor</li>\n<li>by the attacker deleting a monitor's history</li>\n<li>by the atacker changing the meaning of a monitor (changing where it points)</li>\n</ul>\n<h2 id=\"scope-creep\">scope creep</h2>\n<p>If operated in some restricted network, access to monitors may provide the ability to change the scope of the attack to a different piece of infrastructure, for example via SQL commands to a database server.\nWe have not classified this as <code>changed scope</code> because credentials stored in the application for accessing other systems are existing valid paths across the trust boundary, and the user should be aware of that.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g\">https://github.com/louislam/uptime-kuma/security/advisories/GHSA-g9v2-wqcj-j99g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-44400\">https://nvd.nist.gov/vuln/detail/CVE-2023-44400</a></li>\n<li><a href=\"https://github.com/louislam/uptime-kuma/issues/3481\">https://github.com/louislam/uptime-kuma/issues/3481</a></li>\n<li><a href=\"https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a\">https://github.com/louislam/uptime-kuma/commit/88afab6571ef7d4d41bb395cdb6ecd3968835a4a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g9v2-wqcj-j99g\">https://github.com/advisories/GHSA-g9v2-wqcj-j99g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g9v2-wqcj-j99g",
            "title": "[uptime-kuma] Uptime Kuma has Persistentent User Sessions",
            "date_modified": "2023-10-13T22:04:35.000Z",
            "date_published": "2023-10-10T21:29:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g9v2-wqcj-j99g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-Site Request Forgery (CSRF) in GitHub repository builderio/qwik prior to 0.104.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2307\">https://nvd.nist.gov/vuln/detail/CVE-2023-2307</a></li>\n<li><a href=\"https://huntr.dev/bounties/204ea12e-9e5c-4166-bf0e-fd49c8836917\">https://huntr.dev/bounties/204ea12e-9e5c-4166-bf0e-fd49c8836917</a></li>\n<li><a href=\"https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57\">https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57</a></li>\n<li><a href=\"https://github.com/BuilderIO/qwik/commit/f434d335277418f5bd8dd90fae5cb089e1230cb8\">https://github.com/BuilderIO/qwik/commit/f434d335277418f5bd8dd90fae5cb089e1230cb8</a></li>\n<li><a href=\"https://github.com/BuilderIO/qwik/releases/tag/v0.104.0\">https://github.com/BuilderIO/qwik/releases/tag/v0.104.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c54w-7j5f-xg98\">https://github.com/advisories/GHSA-c54w-7j5f-xg98</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c54w-7j5f-xg98",
            "title": "[@builder.io/qwik-city] @builder.io/qwik-city Cross-Site Request Forgery  vulnerability",
            "date_modified": "2023-10-10T21:26:33.000Z",
            "date_published": "2023-04-26T18:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c54w-7j5f-xg98"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Code Injection in GitHub repository builderio/qwik prior to 0.21.0. The Function deserializer can be accessed using the pureServerFunction feature. This allows any Javascript code to be run by node.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1283\">https://nvd.nist.gov/vuln/detail/CVE-2023-1283</a></li>\n<li><a href=\"https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66\">https://github.com/builderio/qwik/commit/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66</a></li>\n<li><a href=\"https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8\">https://huntr.dev/bounties/63f1ff91-48f3-4886-a179-103f1ddd8ff8</a></li>\n<li><a href=\"https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66\">https://github.com/BuilderIO/qwik/pull/3249/commits/4d9ba6e098ae6e537aa55abb6b8369bb670ffe66</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wf9-qvvp-2929\">https://github.com/advisories/GHSA-9wf9-qvvp-2929</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wf9-qvvp-2929",
            "title": "[@builder.io/qwik] builderio/qwik is vulnerable to code injection",
            "date_modified": "2023-10-10T21:23:17.000Z",
            "date_published": "2023-03-09T00:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wf9-qvvp-2929"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>swagger-ui</code> are vulnerable to cross-site scripting. This vulnerability exists because <code>swagger-ui</code> automatically executes external Javascript that is loaded in via the <code>url</code> query string parameter when a <code>Content-Type: application/javascript</code> header is included.</p>\n<p>An attacker can create a server that replies with a malicious script and the proper content-type, and then craft a <code>swagger-ui</code> URL that includes the location to their server/script in the <code>url</code> query string parameter. When viewed, such a link would execute the attacker's malicious script.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to 2.2.1 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/swagger-api/swagger-ui/issues/1863\">https://github.com/swagger-api/swagger-ui/issues/1863</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/131\">https://www.npmjs.com/advisories/131</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-1000233\">https://nvd.nist.gov/vuln/detail/CVE-2016-1000233</a></li>\n<li><a href=\"https://github.com/swagger-api/swagger-ui/commit/331d2be070d89162aa3174a8773ae4a0093f78bc\">https://github.com/swagger-api/swagger-ui/commit/331d2be070d89162aa3174a8773ae4a0093f78bc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrx7-8hxf-f853\">https://github.com/advisories/GHSA-mrx7-8hxf-f853</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrx7-8hxf-f853",
            "title": "[swagger-ui] Cross-Site Scripting in swagger-ui",
            "date_modified": "2023-10-10T21:02:42.000Z",
            "date_published": "2020-09-01T15:36:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrx7-8hxf-f853"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4231\">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>\n<li><a href=\"https://github.com/angular/angular/issues/40136\">https://github.com/angular/angular/issues/40136</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09\">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902\">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>\n<li><a href=\"https://vuldb.com/?id.181356\">https://vuldb.com/?id.181356</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36\">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea\">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c75v-2vq8-878f\">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f",
            "title": "[@angular/core] Cross site scripting in Angular",
            "date_modified": "2023-10-10T19:57:51.000Z",
            "date_published": "2022-05-27T00:01:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4231\">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>\n<li><a href=\"https://github.com/angular/angular/issues/40136\">https://github.com/angular/angular/issues/40136</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09\">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902\">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>\n<li><a href=\"https://vuldb.com/?id.181356\">https://vuldb.com/?id.181356</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36\">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea\">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c75v-2vq8-878f\">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f",
            "title": "[@angular/core] Cross site scripting in Angular",
            "date_modified": "2023-10-10T19:57:51.000Z",
            "date_published": "2022-05-27T00:01:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Angular up to 11.0.4/11.1.0-next.2. It has been classified as problematic. Affected is the handling of comments. The manipulation leads to cross site scripting. It is possible to launch the attack remotely but it might require an authentication first. Upgrading to version 10.2.5, 11.0.5 or 11.1.0-next.3 is advised to to address this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4231\">https://nvd.nist.gov/vuln/detail/CVE-2021-4231</a></li>\n<li><a href=\"https://github.com/angular/angular/issues/40136\">https://github.com/angular/angular/issues/40136</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09\">https://github.com/angular/angular/commit/ba8da742e3b243e8f43d4c63aa842b44e14f2b09</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902\">https://security.snyk.io/vuln/SNYK-JS-ANGULARCORE-1070902</a></li>\n<li><a href=\"https://vuldb.com/?id.181356\">https://vuldb.com/?id.181356</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36\">https://github.com/angular/angular/commit/0aa220bc0000fc4d1651ec388975bbf5baa1da36</a></li>\n<li><a href=\"https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea\">https://github.com/angular/angular/commit/47d9b6d72dab9d60c96bc1c3604219f6385649ea</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c75v-2vq8-878f\">https://github.com/advisories/GHSA-c75v-2vq8-878f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f",
            "title": "[@angular/core] Cross site scripting in Angular",
            "date_modified": "2023-10-10T19:57:51.000Z",
            "date_published": "2022-05-27T00:01:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c75v-2vq8-878f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>aegir publish</code> and <code>aegir build</code> may leak secrets from environmental variables in the browser bundle published to npm.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The code has been patched, users should upgrade to &gt;= 21.10.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Run <code>printenv</code> to check your environment variables and revoke any secrets.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/ipfs/aegir\">aegir</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ipfs/aegir/security/advisories/GHSA-qfcv-5whw-7pcw\">https://github.com/ipfs/aegir/security/advisories/GHSA-qfcv-5whw-7pcw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-11059\">https://nvd.nist.gov/vuln/detail/CVE-2020-11059</a></li>\n<li><a href=\"https://github.com/ipfs/aegir/commit/e36e1def57b2dc1e4b7a5beba964c5924e87f8d8\">https://github.com/ipfs/aegir/commit/e36e1def57b2dc1e4b7a5beba964c5924e87f8d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qfcv-5whw-7pcw\">https://github.com/advisories/GHSA-qfcv-5whw-7pcw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qfcv-5whw-7pcw",
            "title": "[aegir] Exposure of Sensitive Information to an Unauthorized Actor in AEgir",
            "date_modified": "2023-10-10T19:06:37.000Z",
            "date_published": "2020-05-27T21:09:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qfcv-5whw-7pcw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>papaparse</code> prior to 5.2.0 are vulnerable to Regular Expression Denial of Service (ReDos). The <code>parse</code> function contains a malformed regular expression that takes exponentially longer to process non-numerical inputs. This allows attackers to stall systems and lead to Denial of Service.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Upgrade to version 5.2.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mholt/PapaParse/issues/777\">https://github.com/mholt/PapaParse/issues/777</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PAPAPARSE-564258\">https://snyk.io/vuln/SNYK-JS-PAPAPARSE-564258</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1515\">https://www.npmjs.com/advisories/1515</a></li>\n<li><a href=\"https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621\">https://github.com/mholt/PapaParse/commit/235a12758cd77266d2e98fd715f53536b34ad621</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvjc-g5vr-mfgr\">https://github.com/advisories/GHSA-qvjc-g5vr-mfgr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvjc-g5vr-mfgr",
            "title": "[papaparse] Regular Expression Denial of Service in papaparse",
            "date_modified": "2023-10-10T19:04:33.000Z",
            "date_published": "2020-09-04T18:03:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvjc-g5vr-mfgr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"withdrawn-advisory\">Withdrawn Advisory</h2>\n<p>This advisory has been withdrawn because we cannot confirm <a href=\"https://www.npmjs.com/package/home-assistant-frontend\">home-assistant-frontend</a> is or was ever published to npm.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>In Home Assistant before 0.57, it is possible to inject JavaScript code into a persistent notification via crafted Markdown text, aka XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16782\">https://nvd.nist.gov/vuln/detail/CVE-2017-16782</a></li>\n<li><a href=\"https://github.com/home-assistant/home-assistant-polymer/pull/514\">https://github.com/home-assistant/home-assistant-polymer/pull/514</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7wfq-wmx2-3wr4\">https://github.com/advisories/GHSA-7wfq-wmx2-3wr4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7wfq-wmx2-3wr4",
            "title": "[home-assistant-frontend] Withdrawn Advisory: Home Assistant Frontend XSS Vulnerability",
            "date_modified": "2023-10-10T18:21:19.000Z",
            "date_published": "2022-05-17T00:20:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7wfq-wmx2-3wr4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>fsevents before 1.2.11 depends on the <a href=\"https://fsevents-binaries.s3-us-west-2.amazonaws.com\">https://fsevents-binaries.s3-us-west-2.amazonaws.com</a> URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45311\">https://nvd.nist.gov/vuln/detail/CVE-2023-45311</a></li>\n<li><a href=\"https://github.com/atlassian/moo/blob/56ccbdd41b493332bc2cd7a4097a5802594cdb9c/package-lock.json#L1901-L1902\">https://github.com/atlassian/moo/blob/56ccbdd41b493332bc2cd7a4097a5802594cdb9c/package-lock.json#L1901-L1902</a></li>\n<li><a href=\"https://github.com/atlassian/react-immutable-proptypes/blob/ddb9fa5194b931bf7528eb4f2c0a8c3434f70edd/package-lock.json#L153\">https://github.com/atlassian/react-immutable-proptypes/blob/ddb9fa5194b931bf7528eb4f2c0a8c3434f70edd/package-lock.json#L153</a></li>\n<li><a href=\"https://github.com/cloudflare/authr/blob/3f6129d97d06e61033a7f237d84e35e678db490f/ts/package-lock.json#L1512\">https://github.com/cloudflare/authr/blob/3f6129d97d06e61033a7f237d84e35e678db490f/ts/package-lock.json#L1512</a></li>\n<li><a href=\"https://github.com/cloudflare/hugo-cloudflare-docs/blob/e0f7cfa195af8ef1bfa51a487be7d34ba298ed06/package-lock.json#L494\">https://github.com/cloudflare/hugo-cloudflare-docs/blob/e0f7cfa195af8ef1bfa51a487be7d34ba298ed06/package-lock.json#L494</a></li>\n<li><a href=\"https://github.com/cloudflare/redux-grim/blob/b652f99f95fb16812336073951adc5c5a93e2c23/package-lock.json#L266-L267\">https://github.com/cloudflare/redux-grim/blob/b652f99f95fb16812336073951adc5c5a93e2c23/package-lock.json#L266-L267</a></li>\n<li><a href=\"https://github.com/cloudflare/serverless-cloudflare-workers/blob/e95e1e9c9770ed9a3d9480c1fa73e64391268354/package-lock.json#L737\">https://github.com/cloudflare/serverless-cloudflare-workers/blob/e95e1e9c9770ed9a3d9480c1fa73e64391268354/package-lock.json#L737</a></li>\n<li><a href=\"https://github.com/fsevents/fsevents/compare/v1.2.10...v1.2.11\">https://github.com/fsevents/fsevents/compare/v1.2.10...v1.2.11</a></li>\n<li><a href=\"https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058\">https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8r6j-v8pm-fqw3\">https://github.com/advisories/GHSA-8r6j-v8pm-fqw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8r6j-v8pm-fqw3",
            "title": "[fsevents] Code injection in fsevents",
            "date_modified": "2023-10-09T21:35:19.000Z",
            "date_published": "2023-10-06T21:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8r6j-v8pm-fqw3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}