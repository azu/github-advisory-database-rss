{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>Engine.IO before 4.0.0 and 3.6.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36048\">https://nvd.nist.gov/vuln/detail/CVE-2020-36048</a></li>\n<li><a href=\"https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b\">https://github.com/socketio/engine.io/commit/734f9d1268840722c41219e69eb58318e0b2ac6b</a></li>\n<li><a href=\"https://blog.caller.xyz/socketio-engineio-dos/\">https://blog.caller.xyz/socketio-engineio-dos/</a></li>\n<li><a href=\"https://github.com/bcaller/kill-engine-io\">https://github.com/bcaller/kill-engine-io</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j4f2-536g-r55m\">https://github.com/advisories/GHSA-j4f2-536g-r55m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j4f2-536g-r55m",
            "title": "[engine.io] Resource exhaustion in engine.io ",
            "date_modified": "2022-06-27T23:47:40.000Z",
            "date_published": "2022-02-09T22:29:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j4f2-536g-r55m"
            }
        },
        {
            "content_html": "<p>The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype.</p>\n<p>This vulnerability can occur in multiple ways:</p>\n<ol>\n<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>\n<li>by parsing/loading .proto files</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25878\">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/pull/1731\">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f\">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197\">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248\">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/pull/1735\">https://github.com/protobufjs/protobuf.js/pull/1735</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g954-5hwp-pp24\">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g954-5hwp-pp24",
            "title": "[protobufjs] Prototype Pollution in protobufjs",
            "date_modified": "2022-06-27T21:06:33.000Z",
            "date_published": "2022-05-28T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g954-5hwp-pp24"
            }
        },
        {
            "content_html": "<p>The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add/modify properties of the Object.prototype.</p>\n<p>This vulnerability can occur in multiple ways:</p>\n<ol>\n<li>by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions</li>\n<li>by parsing/loading .proto files</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25878\">https://nvd.nist.gov/vuln/detail/CVE-2022-25878</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/pull/1731\">https://github.com/protobufjs/protobuf.js/pull/1731</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f\">https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197\">https://github.com/protobufjs/protobuf.js/blob/d13d5d5688052e366aa2e9169f50dfca376b32cf/src/util.js%23L176-L197</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2841507</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248\">https://snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/pull/1735\">https://github.com/protobufjs/protobuf.js/pull/1735</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g954-5hwp-pp24\">https://github.com/advisories/GHSA-g954-5hwp-pp24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g954-5hwp-pp24",
            "title": "[protobufjs] Prototype Pollution in protobufjs",
            "date_modified": "2022-06-27T21:06:33.000Z",
            "date_published": "2022-05-28T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g954-5hwp-pp24"
            }
        },
        {
            "content_html": "<p>Codecov npm module before 3.6.2 allows remote attackers to execute arbitrary commands via the \"gcov-args\" argument.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7596\">https://nvd.nist.gov/vuln/detail/CVE-2020-7596</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-CODECOV-543183\">https://snyk.io/vuln/SNYK-JS-CODECOV-543183</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mh2h-6j8q-x246\">https://github.com/advisories/GHSA-mh2h-6j8q-x246</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mh2h-6j8q-x246",
            "title": "[codecov] Improper Neutralization of Special Elements in Output Used by a Downstream Component in Codecov",
            "date_modified": "2022-06-27T21:02:06.000Z",
            "date_published": "2022-05-24T17:07:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mh2h-6j8q-x246"
            }
        },
        {
            "content_html": "<p>A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1914\">https://nvd.nist.gov/vuln/detail/CVE-2020-1914</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc\">https://github.com/facebook/hermes/commit/b2021df620824627f5a8c96615edbd1eb7fdddfc</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2020-1914\">https://www.facebook.com/security/advisories/cve-2020-1914</a></li>\n<li><a href=\"https://github.com/facebook/hermes/issues/373\">https://github.com/facebook/hermes/issues/373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-327c-qx3v-h673\">https://github.com/advisories/GHSA-327c-qx3v-h673</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-327c-qx3v-h673",
            "title": "[hermes-engine] Always-Incorrect Control Flow Implementation in Facebook Hermes",
            "date_modified": "2022-06-27T17:05:28.000Z",
            "date_published": "2022-05-24T17:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-327c-qx3v-h673"
            }
        },
        {
            "content_html": "<p>An out-of-bounds read in the JavaScript Interpreter in Facebook Hermes prior to commit 8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0 allows attackers to cause a denial of service attack or possible further memory corruption via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1915\">https://nvd.nist.gov/vuln/detail/CVE-2020-1915</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0\">https://github.com/facebook/hermes/commit/8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2020-1915\">https://www.facebook.com/security/advisories/cve-2020-1915</a></li>\n<li><a href=\"https://github.com/facebook/hermes/issues/373\">https://github.com/facebook/hermes/issues/373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4cf-6jr3-3qvp\">https://github.com/advisories/GHSA-x4cf-6jr3-3qvp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4cf-6jr3-3qvp",
            "title": "[hermes-engine] Out-of-bounds Read in Facebook Hermes",
            "date_modified": "2022-06-27T17:02:34.000Z",
            "date_published": "2022-05-24T17:32:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4cf-6jr3-3qvp"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Jsrsasign supports JWS(JSON Web Signatures) and JWT(JSON Web Token) validation. However JWS or JWT signature with non Base64URL encoding special characters or number escaped characters may be validated as valid by mistake.</p>\n<p>For example, even if a string of non Base64URL encoding characters such as <code>!@$%</code> or <code>\\11</code> is inserted into a valid JWS or JWT signature value string, it will still be a valid JWS or JWT signature by mistake.</p>\n<p>When jsrsasign's JWS or JWT validation is used in OpenID connect or OAuth2, this vulnerability will affect to authentication or authorization.</p>\n<p>By our internal assessment, CVSS 3.1 score will be 7.5.\nCVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users validate JWS or JWT signatures should upgrade to 10.5.25.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Validate JWS or JWT signature if it has Base64URL and dot safe string before\nexecuting JWS.verify() or JWS.verifyJWT() method.</p>\n<h3 id=\"acknowledgement\">ACKNOWLEDGEMENT</h3>\n<p>Thanks to Adi Malyanker and Or David for this vulnerability report. Also thanks for <a href=\"https://snyk.io/\">Snyk security team</a> for this coordination.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/kjur/jsrsasign/releases/tag/10.5.25\">https://github.com/kjur/jsrsasign/releases/tag/10.5.25</a>\n<a href=\"https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf\">https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf</a>\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898</a>\n<a href=\"https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT\">https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verifyJWT</a>\n<a href=\"https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify\">https://kjur.github.io/jsrsasign/api/symbols/KJUR.jws.JWS.html#.verify</a>\n<a href=\"https://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot\">https://kjur.github.io/jsrsasign/api/symbols/global__.html#.isBase64URLDot</a>\n<a href=\"https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification\">https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWS-verification</a>\n<a href=\"https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification\">https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-verification</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf\">https://github.com/kjur/jsrsasign/security/advisories/GHSA-3fvg-4v2m-98jf</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25898</a></li>\n<li><a href=\"https://github.com/kjur/jsrsasign/releases/tag/10.5.25\">https://github.com/kjur/jsrsasign/releases/tag/10.5.25</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3fvg-4v2m-98jf\">https://github.com/advisories/GHSA-3fvg-4v2m-98jf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3fvg-4v2m-98jf",
            "title": "[jsrsasign] JWS and JWT signature validation vulnerability with special characters",
            "date_modified": "2022-06-25T07:19:07.000Z",
            "date_published": "2022-06-25T07:19:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3fvg-4v2m-98jf"
            }
        },
        {
            "content_html": "<p>A type confusion vulnerability when resolving properties of JavaScript objects with specially-crafted prototype chains in Facebook Hermes prior to commit fe52854cdf6725c2eaa9e125995da76e6ceb27da allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1911\">https://nvd.nist.gov/vuln/detail/CVE-2020-1911</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/fe52854cdf6725c2eaa9e125995da76e6ceb27da\">https://github.com/facebook/hermes/commit/fe52854cdf6725c2eaa9e125995da76e6ceb27da</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2020-1911\">https://www.facebook.com/security/advisories/cve-2020-1911</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5x2-xv93-4p23\">https://github.com/advisories/GHSA-f5x2-xv93-4p23</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5x2-xv93-4p23",
            "title": "[hermes-engine] Access of Resource Using Incompatible Type in Facebook Hermes",
            "date_modified": "2022-06-24T01:24:09.000Z",
            "date_published": "2022-05-24T17:27:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5x2-xv93-4p23"
            }
        },
        {
            "content_html": "<p>An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1912\">https://nvd.nist.gov/vuln/detail/CVE-2020-1912</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168\">https://github.com/facebook/hermes/commit/091835377369c8fd5917d9b87acffa721ad2a168</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2020-1912\">https://www.facebook.com/security/advisories/cve-2020-1912</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pf27-929j-9pmm\">https://github.com/advisories/GHSA-pf27-929j-9pmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pf27-929j-9pmm",
            "title": "[hermes-engine] Out-of-bounds Read and Out-of-bounds Write in Facebook Hermes",
            "date_modified": "2022-06-24T01:23:54.000Z",
            "date_published": "2022-05-24T17:27:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pf27-929j-9pmm"
            }
        },
        {
            "content_html": "<p>An Integer signedness error in the JavaScript Interpreter in Facebook Hermes prior to commit 2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6 allows attackers to cause a denial of service attack or a potential RCE via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1913\">https://nvd.nist.gov/vuln/detail/CVE-2020-1913</a></li>\n<li><a href=\"https://github.com/facebook/hermes/commit/2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6\">https://github.com/facebook/hermes/commit/2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6</a></li>\n<li><a href=\"https://www.facebook.com/security/advisories/cve-2020-1913\">https://www.facebook.com/security/advisories/cve-2020-1913</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gmpm-xp43-f7g6\">https://github.com/advisories/GHSA-gmpm-xp43-f7g6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gmpm-xp43-f7g6",
            "title": "[hermes-engine] Signed to Unsigned Conversion Error in Facebook Hermes",
            "date_modified": "2022-06-24T01:23:39.000Z",
            "date_published": "2022-05-24T17:27:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gmpm-xp43-f7g6"
            }
        },
        {
            "content_html": "<p>Strapi v3.x.x versions and earlier contain a stored cross-site scripting vulnerability in file upload function. By exploiting this vulnerability, an arbitrary script may be executed on the web browser of the user who is logging in to the product with the administrative privilege.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29894\">https://nvd.nist.gov/vuln/detail/CVE-2022-29894</a></li>\n<li><a href=\"https://github.com/strapi/strapi\">https://github.com/strapi/strapi</a></li>\n<li><a href=\"https://jvn.jp/en/jp/JVN44550983/index.html\">https://jvn.jp/en/jp/JVN44550983/index.html</a></li>\n<li><a href=\"https://strapi.io/\">https://strapi.io/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcqm-6ff4-53qx\">https://github.com/advisories/GHSA-mcqm-6ff4-53qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcqm-6ff4-53qx",
            "title": "[strapi] Cross-site Scripting in Strapi",
            "date_modified": "2022-06-24T00:53:31.000Z",
            "date_published": "2022-06-14T00:00:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcqm-6ff4-53qx"
            }
        },
        {
            "content_html": "<p>Insufficient Session Expiration in GitHub repository nocodb/nocodb prior to 0.91.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2064\">https://nvd.nist.gov/vuln/detail/CVE-2022-2064</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/commit/c9b5111b25aea2781e19395a8e9107ddbd235a2b\">https://github.com/nocodb/nocodb/commit/c9b5111b25aea2781e19395a8e9107ddbd235a2b</a></li>\n<li><a href=\"https://huntr.dev/bounties/39523d51-fc5c-48b8-a082-171da79761bb\">https://huntr.dev/bounties/39523d51-fc5c-48b8-a082-171da79761bb</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/pull/2262\">https://github.com/nocodb/nocodb/pull/2262</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/pull/2338\">https://github.com/nocodb/nocodb/pull/2338</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/releases/tag/0.91.9\">https://github.com/nocodb/nocodb/releases/tag/0.91.9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6293-2vg2-pmp5\">https://github.com/advisories/GHSA-6293-2vg2-pmp5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6293-2vg2-pmp5",
            "title": "[nocodb] Insufficient Session Expiration in NocoDB",
            "date_modified": "2022-06-24T00:53:06.000Z",
            "date_published": "2022-06-14T00:00:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6293-2vg2-pmp5"
            }
        },
        {
            "content_html": "<p>Improper Privilege Management in GitHub repository nocodb/nocodb prior to 0.91.8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2063\">https://nvd.nist.gov/vuln/detail/CVE-2022-2063</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2\">https://github.com/nocodb/nocodb/commit/269a19c2ad89a0e8a7596498e3806ff2ec1040c2</a></li>\n<li><a href=\"https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20\">https://huntr.dev/bounties/156f405b-21d6-4384-9bff-17ebfe484e20</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/pull/2262\">https://github.com/nocodb/nocodb/pull/2262</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/pull/2337\">https://github.com/nocodb/nocodb/pull/2337</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq4h-m3c8-8m2v\">https://github.com/advisories/GHSA-fq4h-m3c8-8m2v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq4h-m3c8-8m2v",
            "title": "[nocodb] Improper Privilege Management in NocoDB",
            "date_modified": "2022-06-24T00:52:56.000Z",
            "date_published": "2022-06-14T00:00:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq4h-m3c8-8m2v"
            }
        },
        {
            "content_html": "<p>A cross-site scripting (XSS) vulnerability in the Color Dialog plugin for CKEditor 4.15.0 allows remote attackers to run arbitrary web script after persuading a user to copy and paste crafted HTML code into one of editor inputs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-27193\">https://nvd.nist.gov/vuln/detail/CVE-2020-27193</a></li>\n<li><a href=\"https://ckeditor.com/blog/CKEditor-4.15.1-with-a-security-patch-released/\">https://ckeditor.com/blog/CKEditor-4.15.1-with-a-security-patch-released/</a></li>\n<li><a href=\"https://ckeditor.com/cke4/release/CKEditor-4.15.1\">https://ckeditor.com/cke4/release/CKEditor-4.15.1</a></li>\n<li><a href=\"https://ckeditor.com/ckeditor-4/download/\">https://ckeditor.com/ckeditor-4/download/</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuApr2021.html\">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m44-5j2g-xf64\">https://github.com/advisories/GHSA-4m44-5j2g-xf64</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m44-5j2g-xf64",
            "title": "[CKEditor4] Improper Neutralization of Input During Web Page Generation in CKEditor4",
            "date_modified": "2022-06-23T18:05:12.000Z",
            "date_published": "2022-05-24T17:34:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m44-5j2g-xf64"
            }
        },
        {
            "content_html": "<p>Directus versions v9.0.0-beta.2 through 9.6.0 are vulnerable to server-side request forgery (SSRF) in the media upload functionality, which allows a low privileged user to perform internal network port scans.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23080\">https://nvd.nist.gov/vuln/detail/CVE-2022-23080</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/6da3f1ed5034115b1da00440008351bf0d808d83\">https://github.com/directus/directus/commit/6da3f1ed5034115b1da00440008351bf0d808d83</a></li>\n<li><a href=\"https://www.mend.io/vulnerability-database/CVE-2022-23080\">https://www.mend.io/vulnerability-database/CVE-2022-23080</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5h75-pvq4-82c9\">https://github.com/advisories/GHSA-5h75-pvq4-82c9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5h75-pvq4-82c9",
            "title": "[directus] Server-Side Request Forgery in Directus",
            "date_modified": "2022-06-23T17:49:24.000Z",
            "date_published": "2022-06-23T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5h75-pvq4-82c9"
            }
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository nocodb/nocodb prior to 0.91.9.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2079\">https://nvd.nist.gov/vuln/detail/CVE-2022-2079</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/commit/362f8f0869989bc13bdcd66c6fc9c86ac79b9992\">https://github.com/nocodb/nocodb/commit/362f8f0869989bc13bdcd66c6fc9c86ac79b9992</a></li>\n<li><a href=\"https://huntr.dev/bounties/2615adf2-ff40-4623-97fb-2e4a3800202a\">https://huntr.dev/bounties/2615adf2-ff40-4623-97fb-2e4a3800202a</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/issues/2262\">https://github.com/nocodb/nocodb/issues/2262</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/pull/2343\">https://github.com/nocodb/nocodb/pull/2343</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/releases\">https://github.com/nocodb/nocodb/releases</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hv6q-5g4f-8897\">https://github.com/advisories/GHSA-hv6q-5g4f-8897</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hv6q-5g4f-8897",
            "title": "[nocodb] Cross-site Scripting in NocoDB",
            "date_modified": "2022-06-23T17:48:31.000Z",
            "date_published": "2022-06-15T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hv6q-5g4f-8897"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of lettersanitizer below 1.0.2 are affected by a denial of service issue when processing a CSS at-rule <code>@keyframes</code>.</p>\n<p>This package is depended on by <a href=\"https://github.com/mat-sz/react-letter\">react-letter</a>, therefore everyone using react-letter is also at risk.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in version 1.0.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround besides upgrading.</p>\n<h3 id=\"references\">References</h3>\n<p>The issue was originally reported in the react-letter repository: <a href=\"https://github.com/mat-sz/react-letter/issues/17\">https://github.com/mat-sz/react-letter/issues/17</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/mat-sz/lettersanitizer/issues\">lettersanitizer</a></li>\n<li>Email me at <a href=\"mailto:contact@matsz.dev\">contact@matsz.dev</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mat-sz/lettersanitizer/security/advisories/GHSA-7r3r-gq8p-v9jj\">https://github.com/mat-sz/lettersanitizer/security/advisories/GHSA-7r3r-gq8p-v9jj</a></li>\n<li><a href=\"https://github.com/mat-sz/react-letter/issues/17\">https://github.com/mat-sz/react-letter/issues/17</a></li>\n<li><a href=\"https://github.com/mat-sz/lettersanitizer/commit/96d3dfe2ef0465d47324ed4d13e91ba0816a173f\">https://github.com/mat-sz/lettersanitizer/commit/96d3dfe2ef0465d47324ed4d13e91ba0816a173f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r3r-gq8p-v9jj\">https://github.com/advisories/GHSA-7r3r-gq8p-v9jj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r3r-gq8p-v9jj",
            "title": "[lettersanitizer] Improper handling of CSS at-rules in lettersanitizer",
            "date_modified": "2022-06-23T17:48:21.000Z",
            "date_published": "2022-06-23T17:48:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r3r-gq8p-v9jj"
            }
        },
        {
            "content_html": "<p>The dot package v1.1.2 uses Function() to compile templates. This can be exploited by the attacker if they can control the given template or if they can control the value set on Object.prototype.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8141\">https://nvd.nist.gov/vuln/detail/CVE-2020-8141</a></li>\n<li><a href=\"https://hackerone.com/reports/390929\">https://hackerone.com/reports/390929</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-297x-8xj4-vcxv\">https://github.com/advisories/GHSA-297x-8xj4-vcxv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-297x-8xj4-vcxv",
            "title": "[dot] Improper Control of Generation of Code in doT",
            "date_modified": "2022-06-23T06:55:23.000Z",
            "date_published": "2022-05-24T17:11:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-297x-8xj4-vcxv"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Passing some special values to the <code>filter</code> and <code>filterout</code> parameters can cause an abnormally high CPU. Impact on the performance of the servers and RSSHub services.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>It is fixed in 5c4177441417b44a6e45c3c63e9eac2504abeb5b , please update to this or the later versions as soon as possible.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>@Rongronggg9 </p>\n<h3 id=\"references\">References</h3>\n<p>A full report will be disclosed after 120 hours.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/DIYgod/RSSHub/issues\">https://github.com/DIYgod/RSSHub/issues</a></li>\n<li>Email us at <a href=\"mailto:i@diygod.me\">i@diygod.me</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/DIYgod/RSSHub/security/advisories/GHSA-jvxx-v45p-v5vf\">https://github.com/DIYgod/RSSHub/security/advisories/GHSA-jvxx-v45p-v5vf</a></li>\n<li><a href=\"https://github.com/DIYgod/RSSHub/commit/4671720f4c5e1aaaad8fcc1dce684b6546baf2ff\">https://github.com/DIYgod/RSSHub/commit/4671720f4c5e1aaaad8fcc1dce684b6546baf2ff</a></li>\n<li><a href=\"https://github.com/DIYgod/RSSHub/commit/5c4177441417b44a6e45c3c63e9eac2504abeb5b\">https://github.com/DIYgod/RSSHub/commit/5c4177441417b44a6e45c3c63e9eac2504abeb5b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jvxx-v45p-v5vf\">https://github.com/advisories/GHSA-jvxx-v45p-v5vf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jvxx-v45p-v5vf",
            "title": "[rsshub] Denial of Service (DoS) vulnerability in RSSHub",
            "date_modified": "2022-06-23T06:45:04.000Z",
            "date_published": "2022-06-23T06:45:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jvxx-v45p-v5vf"
            }
        },
        {
            "content_html": "<h2 id=\"recommendation\">Recommendation</h2>\n<p>This package is working as intended. A <a href=\"https://github.com/westy92/html-pdf-chrome#security\">Security</a> section has been added since v0.6.1 to detail proper usage of this library. Npm has revoked their advisory altogether.</p>\n<h2 id=\"original-advisory\">Original Advisory</h2>\n<p>All versions of <code>html-pdf-chrome</code> are vulnerable to Server-Side Request Forgery (SSRF). The package executes HTTP requests if the parsed HTML contains external references to resources, such as <code>&lt;iframe src=\"http://localhost\" height=\"800px\" width=\"800px\"&gt;&lt;/iframe&gt;</code>. This allows attackers to access resources through HTTP that are accessible to the server, including private resources in the hosting environment.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/westy92/html-pdf-chrome/issues/249\">https://github.com/westy92/html-pdf-chrome/issues/249</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1339\">https://www.npmjs.com/advisories/1339</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5p98-wpc9-g498\">https://github.com/advisories/GHSA-5p98-wpc9-g498</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498",
            "title": "[html-pdf-chrome] Server-Side Request Forgery in html-pdf-chrome",
            "date_modified": "2022-06-22T19:28:33.000Z",
            "date_published": "2020-09-04T15:21:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5p98-wpc9-g498"
            }
        }
    ]
}