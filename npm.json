{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Vendure provides an authorization system with different levels of privileges. For example, an administrator cannot create another administrator.</p>\n<p>In the admin UI, there are a couple of places with description inputs, such as inventory/collection catalog, shipping methods, promotions, and more.</p>\n<p>While the WYSIWYG editor allows limited customization, altering the request data (not in the ui) saves and returns arbitrary HTML with no sanitization. Causing an XSS when viewing the page.</p>\n<p>The impact of this XSS is privilege escalation. A user that can write any type of description can trigger the attack. Then any other user that visits the vulnerable page is prone to arbitrary Javascript code execution, giving the attacker ability to execute actions on behalf of this user.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>in progress</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r\">https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-gm68-572p-q28r</a></li>\n<li><a href=\"https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0\">https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0</a></li>\n<li><a href=\"https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04\">https://github.com/vendure-ecommerce/vendure/blob/master/CHANGELOG.md#203-2023-07-04</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gm68-572p-q28r\">https://github.com/advisories/GHSA-gm68-572p-q28r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gm68-572p-q28r",
            "title": "[@vendure/admin-ui-plugin] @vendure/admin-ui-plugin authenticated Cross-site Scripting vulnerability",
            "date_modified": "2023-07-06T15:30:51.000Z",
            "date_published": "2023-07-06T15:30:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gm68-572p-q28r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>All versions of @fastify/oauth2 used a statically generated <code>state</code> parameter at startup time and were used across all requests for all users.\nThe purpose of the Oauth2 <code>state</code> parameter is to prevent Cross-Site-Request-Forgery attacks. As such, it should be unique per user and should be connected to the user's session in some way that will allow the server to validate it.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v7.2.0 changes the default behavior to store the <code>state</code> in a cookie with the <code>http-only</code> and <code>same-site=lax</code> attributes set. The state is now by default generated for every user.</p>\n<p>Note that this contains a breaking change in the <code>checkStateFunction</code> function, which now accepts the full <code>Request</code> object.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://auth0.com/docs/secure/attack-protection/state-parameters\">Prevent Attacks and Redirect Users with OAuth 2.0 State Parameters</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95\">https://github.com/fastify/fastify-oauth2/security/advisories/GHSA-g8x5-p9qc-cf95</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35935\">https://nvd.nist.gov/vuln/detail/CVE-2023-35935</a></li>\n<li><a href=\"https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c\">https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c</a></li>\n<li><a href=\"https://auth0.com/docs/secure/attack-protection/state-parameters\">https://auth0.com/docs/secure/attack-protection/state-parameters</a></li>\n<li><a href=\"https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0\">https://github.com/fastify/fastify-oauth2/releases/tag/v7.2.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g8x5-p9qc-cf95\">https://github.com/advisories/GHSA-g8x5-p9qc-cf95</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g8x5-p9qc-cf95",
            "title": "[@fastify/oauth2] @fastify/oauth2 vulnerable to Cross Site Request Forgery due to reused Oauth2 state",
            "date_modified": "2023-07-05T21:37:19.000Z",
            "date_published": "2023-07-05T21:36:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g8x5-p9qc-cf95"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in&nbsp; <a href=\"https://github.com/grpc/grpc/pull/32309\">https://github.com/grpc/grpc/pull/32309</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32731\">https://nvd.nist.gov/vuln/detail/CVE-2023-32731</a></li>\n<li><a href=\"https://github.com/grpc/grpc/pull/32309\">https://github.com/grpc/grpc/pull/32309</a></li>\n<li><a href=\"https://github.com/grpc/grpc/pull/33005\">https://github.com/grpc/grpc/pull/33005</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cfgp-2977-2fmm\">https://github.com/advisories/GHSA-cfgp-2977-2fmm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cfgp-2977-2fmm",
            "title": "[@grpc/grpc-js] Connection confusion in gRPC",
            "date_modified": "2023-07-05T20:26:49.000Z",
            "date_published": "2023-07-05T19:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cfgp-2977-2fmm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>\n<li>Fixed by dbythy</li>\n<li>Reviewed by mtrezza</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36475\">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8674\">https://github.com/parse-community/parse-server/issues/8674</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8675\">https://github.com/parse-community/parse-server/issues/8675</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.2\">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.1\">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6",
            "title": "[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-06-30T20:41:45.000Z",
            "date_published": "2023-06-30T20:41:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can use this prototype pollution sink to trigger a remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Prevent prototype pollution in MongoDB database adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Disable remote code execution through the MongoDB BSON parser.</p>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>Discovered by hir0ot working with Trend Micro Zero Day Initiative</li>\n<li>Fixed by dbythy</li>\n<li>Reviewed by mtrezza</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prm5-8g2m-24gg\">https://github.com/advisories/GHSA-prm5-8g2m-24gg</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/parse-community/parse-server/security/advisories/GHSA-462x-c3jw-7vr6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36475\">https://nvd.nist.gov/vuln/detail/CVE-2023-36475</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8674\">https://github.com/parse-community/parse-server/issues/8674</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/issues/8675\">https://github.com/parse-community/parse-server/issues/8675</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90\">https://github.com/parse-community/parse-server/commit/3dd99dd80e27e5e1d99b42844180546d90c7aa90</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f\">https://github.com/parse-community/parse-server/commit/5fad2928fb8ee17304abcdcf259932f827d8c81f</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.2\">https://github.com/parse-community/parse-server/releases/tag/5.5.2</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.1\">https://github.com/parse-community/parse-server/releases/tag/6.2.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-462x-c3jw-7vr6\">https://github.com/advisories/GHSA-462x-c3jw-7vr6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6",
            "title": "[parse-server] Parse Server vulnerable to remote code execution via MongoDB BSON parser through prototype pollution",
            "date_modified": "2023-06-30T20:41:45.000Z",
            "date_published": "2023-06-30T20:41:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-462x-c3jw-7vr6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In NocoDB prior to 0.91.7, the SMTP plugin doesn't have verification or validation. This allows attackers to make requests to internal servers and read the contents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2062\">https://nvd.nist.gov/vuln/detail/CVE-2022-2062</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4\">https://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4</a></li>\n<li><a href=\"https://huntr.dev/bounties/35593b4c-f127-4699-8ad3-f0b2203a8ef6\">https://huntr.dev/bounties/35593b4c-f127-4699-8ad3-f0b2203a8ef6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mx8q-jqwm-85mv\">https://github.com/advisories/GHSA-mx8q-jqwm-85mv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mx8q-jqwm-85mv",
            "title": "[nocodb] NocoDB information disclosure vulnerability",
            "date_modified": "2023-06-30T20:40:24.000Z",
            "date_published": "2022-06-14T00:00:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mx8q-jqwm-85mv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Joplin before 2.11.5 allows XSS via an AREA element of an image map.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-37299\">https://nvd.nist.gov/vuln/detail/CVE-2023-37299</a></li>\n<li><a href=\"https://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071\">https://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071</a></li>\n<li><a href=\"https://github.com/laurent22/joplin/releases/tag/v2.11.5\">https://github.com/laurent22/joplin/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://vuln.ryotak.net/advisories/68\">https://vuln.ryotak.net/advisories/68</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4jjv-p8x9-rrf7\">https://github.com/advisories/GHSA-4jjv-p8x9-rrf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jjv-p8x9-rrf7",
            "title": "[joplin] Joplin Cross-site Scripting vulnerability",
            "date_modified": "2023-06-30T20:39:44.000Z",
            "date_published": "2023-06-30T15:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jjv-p8x9-rrf7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Joplin before 2.11.5 allows XSS via a USE element in an SVG document.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-37298\">https://nvd.nist.gov/vuln/detail/CVE-2023-37298</a></li>\n<li><a href=\"https://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83\">https://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83</a></li>\n<li><a href=\"https://github.com/laurent22/joplin/releases/tag/v2.11.5\">https://github.com/laurent22/joplin/releases/tag/v2.11.5</a></li>\n<li><a href=\"https://vuln.ryotak.net/advisories/69\">https://vuln.ryotak.net/advisories/69</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7grw-xfx6-qhx6\">https://github.com/advisories/GHSA-7grw-xfx6-qhx6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7grw-xfx6-qhx6",
            "title": "[joplin] Joplin Cross-site Scripting vulnerability",
            "date_modified": "2023-06-30T20:39:29.000Z",
            "date_published": "2023-06-30T15:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7grw-xfx6-qhx6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package flatnest are vulnerable to Prototype Pollution via the <code>nest()</code> function in <code>flatnest/nest.js</code> file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26135\">https://nvd.nist.gov/vuln/detail/CVE-2023-26135</a></li>\n<li><a href=\"https://github.com/brycebaril/node-flatnest/issues/4\">https://github.com/brycebaril/node-flatnest/issues/4</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-FLATNEST-3185149\">https://security.snyk.io/vuln/SNYK-JS-FLATNEST-3185149</a></li>\n<li><a href=\"https://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js#L43\">https://github.com/brycebaril/node-flatnest/blob/b7d97ec64a04632378db87fcf3577bd51ac3ee39/nest.js#L43</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7px2-3c2p-q4v4\">https://github.com/advisories/GHSA-7px2-3c2p-q4v4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7px2-3c2p-q4v4",
            "title": "[flatnest] flatnest Prototype Pollution vulnerability",
            "date_modified": "2023-06-30T20:38:37.000Z",
            "date_published": "2023-06-30T06:30:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7px2-3c2p-q4v4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>angular-ui-notification v0.1.0, v0.2.0, and v0.3.6 was discovered to contain a cross-site scripting (XSS) vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34840\">https://nvd.nist.gov/vuln/detail/CVE-2023-34840</a></li>\n<li><a href=\"https://github.com/Xh4H/CVE-2023-34840\">https://github.com/Xh4H/CVE-2023-34840</a></li>\n<li><a href=\"https://github.com/alexcrack/angular-ui-notification\">https://github.com/alexcrack/angular-ui-notification</a></li>\n<li><a href=\"http://alexcrack.com\">http://alexcrack.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrcj-5qxr-vhp2\">https://github.com/advisories/GHSA-mrcj-5qxr-vhp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrcj-5qxr-vhp2",
            "title": "[angular-ui-notification] angular-ui-notification Cross-site Scripting vulnerability",
            "date_modified": "2023-06-30T20:35:18.000Z",
            "date_published": "2023-06-30T18:31:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrcj-5qxr-vhp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package git-commit-info before 2.0.2 are vulnerable to Command Injection such that the package-exported method gitCommitInfo() fails to sanitize its parameter commit, which later flows into a sensitive command execution API. As a result, attackers may inject malicious commands once they control the hash content.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26134\">https://nvd.nist.gov/vuln/detail/CVE-2023-26134</a></li>\n<li><a href=\"https://github.com/JPeer264/node-git-commit-info/issues/24\">https://github.com/JPeer264/node-git-commit-info/issues/24</a></li>\n<li><a href=\"https://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c\">https://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174\">https://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h42j-mrmp-9369\">https://github.com/advisories/GHSA-h42j-mrmp-9369</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h42j-mrmp-9369",
            "title": "[git-commit-info] git-commit-info vulnerable to Command Injection",
            "date_modified": "2023-06-30T20:32:34.000Z",
            "date_published": "2023-06-28T06:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h42j-mrmp-9369"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>jquery</code> are vulnerable to cross-site scripting. This occurs because the main <code>jquery</code> function uses a regular expression to differentiate between HTML and selectors, but does not properly anchor the regular expression. The result is that <code>jquery</code> may interpret HTML as selectors when given certain inputs, allowing for client side code execution.</p>\n<h2 id=\"proof-of-concept\">Proof of Concept</h2>\n<pre><code>$(\"#log\").html(\n    $(\"element[attribute='&lt;img src=\\\"x\\\" onerror=\\\"alert(1)\\\" /&gt;']\").html()\n);\n</code></pre>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 1.9.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://bugs.jquery.com/ticket/11290\">https://bugs.jquery.com/ticket/11290</a></li>\n<li><a href=\"https://bugs.jquery.com/ticket/12531\">https://bugs.jquery.com/ticket/12531</a></li>\n<li><a href=\"https://bugs.jquery.com/ticket/6429\">https://bugs.jquery.com/ticket/6429</a></li>\n<li><a href=\"https://bugs.jquery.com/ticket/9521\">https://bugs.jquery.com/ticket/9521</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16011\">https://nvd.nist.gov/vuln/detail/CVE-2017-16011</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6708\">https://nvd.nist.gov/vuln/detail/CVE-2012-6708</a></li>\n<li><a href=\"https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d\">https://github.com/jquery/jquery/commit/05531fc4080ae24070930d15ae0cea7ae056457d</a></li>\n<li><a href=\"https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0\">https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>\n<li><a href=\"https://snyk.io/vuln/npm:jquery:20120206\">https://snyk.io/vuln/npm:jquery:20120206</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html\">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00041.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html\">http://packetstormsecurity.com/files/153237/RetireJS-CORS-Issue-Script-Execution.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/161972/Linksys-EA7500-2.0.8.194281-Cross-Site-Scripting.html\">http://packetstormsecurity.com/files/161972/Linksys-EA7500-2.0.8.194281-Cross-Site-Scripting.html</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450223\">https://security.snyk.io/vuln/SNYK-DOTNET-JQUERY-450223</a></li>\n<li><a href=\"https://research.insecurelabs.org/jquery/test/\">https://research.insecurelabs.org/jquery/test/</a></li>\n<li><a href=\"https://web.archive.org/web/20200227132049/http://www.securityfocus.com/bid/102792\">https://web.archive.org/web/20200227132049/http://www.securityfocus.com/bid/102792</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L59\">https://github.com/rails/jquery-rails/blob/v2.1.4/vendor/assets/javascripts/jquery.js#L59</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/v2.2.0/vendor/assets/javascripts/jquery.js#L67\">https://github.com/rails/jquery-rails/blob/v2.2.0/vendor/assets/javascripts/jquery.js#L67</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2pqj-h3vj-pqgw\">https://github.com/advisories/GHSA-2pqj-h3vj-pqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2pqj-h3vj-pqgw",
            "title": "[jquery] Cross-Site Scripting in jquery",
            "date_modified": "2023-07-05T22:31:12.000Z",
            "date_published": "2020-09-01T16:41:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2pqj-h3vj-pqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>All versions of the package word-wrap are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26115\">https://nvd.nist.gov/vuln/detail/CVE-2023-26115</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657\">https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-4058657</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973\">https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973</a></li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39\">https://github.com/jonschlinkert/word-wrap/blob/master/index.js#L39</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j8xg-fqg3-53r7\">https://github.com/advisories/GHSA-j8xg-fqg3-53r7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j8xg-fqg3-53r7",
            "title": "[word-wrap] word-wrap vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-06-27T22:32:05.000Z",
            "date_published": "2023-06-22T06:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j8xg-fqg3-53r7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>he Nuxt dev server between versions 3.4.0 and 3.4.3 is vulnerable to code injection when it is exposed publicly.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3224\">https://nvd.nist.gov/vuln/detail/CVE-2023-3224</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff\">https://github.com/nuxt/nuxt/commit/65a8f4eb3ef1b249a95fd59e323835a96428baff</a></li>\n<li><a href=\"https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87\">https://huntr.dev/bounties/1eb74fd8-0258-4c1f-a904-83b52e373a87</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commits/v3.4.3\">https://github.com/nuxt/nuxt/commits/v3.4.3</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/issues/21694\">https://github.com/nuxt/nuxt/issues/21694</a></li>\n<li><a href=\"https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507\">https://github.com/nuxt/nuxt/commit/72ba53efbc2384f802d654fffd92eaf36a81b507</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gc34-5v43-h7v8\">https://github.com/advisories/GHSA-gc34-5v43-h7v8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gc34-5v43-h7v8",
            "title": "[nuxt] nuxt Code Injection vulnerability",
            "date_modified": "2023-06-22T20:04:02.000Z",
            "date_published": "2023-06-13T18:30:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gc34-5v43-h7v8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This impact users of Shescape:</p>\n<ol>\n<li>On Windows using the Windows Command Prompt (i.e. <code>cmd.exe</code>), and</li>\n<li>Using <code>quote</code>/<code>quoteAll</code> or <code>escape</code>/<code>escapeAll</code> with the <code>interpolation</code> option set to <code>true</code>.</li>\n</ol>\n<p>An attacker may be able to get read-only access to environment variables. Example:</p>\n<pre><code class=\"language-javascript\">import * as cp from \"node:child_process\";\nimport * as shescape from \"shescape\";\n\n// 1. Prerequisites\nconst options = {\n    shell: \"cmd.exe\",\n    // Or\n    shell: undefined, // Only if the default shell is CMD\n\n    // And\n    interpolation: true, // Only applies to `escape` and `escapeAll` usage\n}\n\n// 2. Attack (one of many)\nconst payload = \"%PATH%\";\n\n// 3. Usage\nlet escapedPayload;\n\nescapedPayload = shescape.quote(payload, options);\n// Or\nescapedPayload = shescape.quoteAll([payload], options);\n// Or\nescapedPayload = shescape.escape(payload, options);\n// Or\nescapedPayload = shescape.escapeAll([payload], options);\n\n// And (example)\nconst result = cp.execSync(`echo Hello ${escapedPayload}`, options);\n\n// 4. Impact\nconsole.log(result.toString());\n// Outputs \"Hello\" followed by the contents of the PATH environment variable\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This bug has been patched in <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1\">v1.7.1</a> which you can upgrade to now. No further changes are required.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Alternatively, users can remove all instances of <code>%</code> from user input, either before or after using Shescape.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Shescape Pull request <a href=\"https://github.com/ericcornelissen/shescape/pull/982\">#982</a></li>\n<li>Shescape commit <a href=\"https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac\"><code>d0fce70</code></a></li>\n<li>Shescape Release <a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1\">v1.7.1</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ericcornelissen/shescape/security/advisories/GHSA-3g7p-8qhx-mc8r\">https://github.com/ericcornelissen/shescape/security/advisories/GHSA-3g7p-8qhx-mc8r</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/pull/982\">https://github.com/ericcornelissen/shescape/pull/982</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac\">https://github.com/ericcornelissen/shescape/commit/d0fce70f987ac0d8331f93cb45d47e79436173ac</a></li>\n<li><a href=\"https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1\">https://github.com/ericcornelissen/shescape/releases/tag/v1.7.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35931\">https://nvd.nist.gov/vuln/detail/CVE-2023-35931</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3g7p-8qhx-mc8r\">https://github.com/advisories/GHSA-3g7p-8qhx-mc8r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3g7p-8qhx-mc8r",
            "title": "[shescape] Shescape potential environment variable exposure on Windows with CMD",
            "date_modified": "2023-06-27T23:07:50.000Z",
            "date_published": "2023-06-22T20:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3g7p-8qhx-mc8r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>This is a comment on <a href=\"https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw\">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw</a> and the patches fixing it.</p>\n<h3 id=\"details\">Details</h3>\n<p>The code which validates a name calls the validator:\n<a href=\"https://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153\">https://github.com/NaturalIntelligence/fast-xml-parser/blob/ecf6016f9b48aec1a921e673158be0773d07283e/src/xmlparser/DocTypeReader.js#L145-L153</a>\nThis checks for the presence of an invalid character.  Such an approach is always risky, as it is so easy to forget to include an invalid character in the list.  A safer approach is to validate entity names against the XML specification: <a href=\"https://www.w3.org/TR/xml11/#sec-common-syn\">https://www.w3.org/TR/xml11/#sec-common-syn</a> - an ENTITY name is a Name:</p>\n<pre><code>[4]   NameStartChar ::= \":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] |\n                        [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] |\n                        [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n[4a]  NameChar ::= NameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n[5]   Name ::= NameStartChar (NameChar)*\n</code></pre>\n<p>so the safest way to validate an entity name is to build a regex to represent this expression and check whether the name given matches the regex.  (Something along the lines of <code>/^[name start char class][name char class]*$/</code>.)  There's probably a nice way to simplify the explicit list rather than typing it out verbatim using Unicode character properties, but I don't know enough to do so.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw\">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-6w63-h3fj-q4vw</a></li>\n<li><a href=\"https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-gpv5-7x3g-ghjv\">https://github.com/NaturalIntelligence/fast-xml-parser/security/advisories/GHSA-gpv5-7x3g-ghjv</a></li>\n<li><a href=\"https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1\">https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gpv5-7x3g-ghjv\">https://github.com/advisories/GHSA-gpv5-7x3g-ghjv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gpv5-7x3g-ghjv",
            "title": "[fast-xml-parser] fast-xml-parser regex vulnerability patch could be improved from a safety perspective",
            "date_modified": "2023-06-22T18:28:10.000Z",
            "date_published": "2023-06-15T19:05:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gpv5-7x3g-ghjv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25883\">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/564\">https://github.com/npm/node-semver/pull/564</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L138\">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L160\">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
            "title": "[semver] semver vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-06-22T16:52:56.000Z",
            "date_published": "2023-06-21T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"information\">Information</h2>\n<p>Please note that this is not a new disclosure, and is previously reported in our <a href=\"https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\">SECURITY-NOTICE.md</a> which we removed in favor of github advisory. </p>\n<h1 id=\"overview\">Overview</h1>\n<p>A vulnerability was found in the validation of a SAML signature. The validation doesn't ensure that the \"Signature\" tag is at the proper location inside an \"Assertion\" tag. This leads to a signature relocation attack where the attacker can corrupt one field of data while maintaining the signature valid. This could allow an authenticated attacker to \"remove\" one group from the assertion or corrupt another field of an assertion.</p>\n<h1 id=\"am-i-affected\">Am I affected?</h1>\n<p>You are affected if you are using the passport-wsfed-saml2 library to version &lt; 3.0.10</p>\n<h1 id=\"how-do-i-fix-it\">How do I fix it?</h1>\n<p>You may fix this issue by upgrading passport-wsfed-saml2 library to version 3.0.10 or above. </p>\n<h1 id=\"will-the-fix-impact-my-users\">Will the fix impact my users?</h1>\n<p>This fix patches the library that your application runs, but will not impact your users, their current state, or any existing sessions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-5wrg-8fxp-cx9r\">https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-5wrg-8fxp-cx9r</a></li>\n<li><a href=\"https://github.com/auth0/passport-wsfed-saml2/pull/79\">https://github.com/auth0/passport-wsfed-saml2/pull/79</a></li>\n<li><a href=\"https://github.com/auth0/passport-wsfed-saml2/commit/f75211d42d2586a0d24a9da29ba8590e42363500\">https://github.com/auth0/passport-wsfed-saml2/commit/f75211d42d2586a0d24a9da29ba8590e42363500</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5wrg-8fxp-cx9r\">https://github.com/advisories/GHSA-5wrg-8fxp-cx9r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5wrg-8fxp-cx9r",
            "title": "[passport-wsfed-saml2] passport-wsfed-saml2 Signature Bypass vulnerability",
            "date_modified": "2023-06-21T22:06:24.000Z",
            "date_published": "2023-06-21T22:06:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5wrg-8fxp-cx9r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Backstage scaffolder-backend plugin uses a templating library that requires a sandbox, as it by design allows for code injection. The library used for this sandbox so far has been <code>vm2</code>, but in light of several past vulnerabilities and existing vulnerabilities  that may not have a fix, the plugin has switched to using a different sandbox library.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A malicious actor with write access to a registered scaffolder template could manipulate the template in a way that allows for remote code execution on the scaffolder-backend instance. This was only exploitable in the template YAML definition itself and not by user input data.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is vulnerability is fixed in version 1.15.0 of <code>@backstage/plugin-scaffolder-backend</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Note that the <a href=\"https://backstage.io/docs/overview/threat-model\">Backstage Threat Model</a> states that scaffolder templates are considered to be a sensitive area that with the recommendation that you control access and perform manual reviews of changes to the scaffolder templates. The exploit is of a nature where it is easily discoverable in manual review.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-wg6p-jmpc-xjmr\">https://github.com/backstage/backstage/security/advisories/GHSA-wg6p-jmpc-xjmr</a></li>\n<li><a href=\"https://github.com/backstage/backstage/commit/fb7375507d56faedcb7bb3665480070593c8949a\">https://github.com/backstage/backstage/commit/fb7375507d56faedcb7bb3665480070593c8949a</a></li>\n<li><a href=\"https://github.com/backstage/backstage/releases/tag/v1.15.0\">https://github.com/backstage/backstage/releases/tag/v1.15.0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35926\">https://nvd.nist.gov/vuln/detail/CVE-2023-35926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wg6p-jmpc-xjmr\">https://github.com/advisories/GHSA-wg6p-jmpc-xjmr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wg6p-jmpc-xjmr",
            "title": "[@backstage/plugin-scaffolder-backend] Backstage Scaffolder plugin has insecure sandbox",
            "date_modified": "2023-06-22T17:31:39.000Z",
            "date_published": "2023-06-21T22:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wg6p-jmpc-xjmr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"information\">Information</h2>\n<p>Please note that this is not a new disclosure, and is previously reported in our <a href=\"https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\">SECURITY-NOTICE.md</a> which we removed in favor of github advisory. </p>\n<h1 id=\"overview\">Overview</h1>\n<p> This vulnerability allows an attacker to impersonate another user and potentially elevate their privileges if the SAML identity provider:</p>\n<ul>\n<li><p>signs SAML response and signs assertion</p>\n</li>\n<li><p>does not sign SAML response and signs assertion</p>\n</li>\n</ul>\n<h1 id=\"am-i-affected\">Am I affected?</h1>\n<p>You may be affected if you use SAML2 protocol with passport-wsfed-saml2 versions below 3.0.5 and your SAML identity Provider: </p>\n<ol>\n<li>signs SAML response and signs assertion; or </li>\n<li>does not sign SAML response and signs assertion</li>\n</ol>\n<h1 id=\"how-do-i-fix-it\">How do I fix it?</h1>\n<p>You may fix this vulnerability by upgrading your library to version 3.0.5 or above. </p>\n<h1 id=\"will-the-fix-impact-my-users\">Will the fix impact my users?</h1>\n<p>This fix patches the library that your application runs, but will not impact your users, their current state, or any existing sessions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-77fw-rf4v-vfp9\">https://github.com/auth0/passport-wsfed-saml2/security/advisories/GHSA-77fw-rf4v-vfp9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-16897\">https://nvd.nist.gov/vuln/detail/CVE-2017-16897</a></li>\n<li><a href=\"https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70\">https://github.com/auth0/passport-wsfed-saml2/commit/520b9fc0bb4249ce83bec47e30153419f086ab70</a></li>\n<li><a href=\"https://auth0.com/docs/security/bulletins/cve-2017-16897\">https://auth0.com/docs/security/bulletins/cve-2017-16897</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77fw-rf4v-vfp9\">https://github.com/advisories/GHSA-77fw-rf4v-vfp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77fw-rf4v-vfp9",
            "title": "[passport-wsfed-saml2] passport-wsfed-saml2 vulnerable to Signature Bypass in SAML2 token",
            "date_modified": "2023-06-21T22:00:18.000Z",
            "date_published": "2023-06-21T22:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77fw-rf4v-vfp9"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}