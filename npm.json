{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, has been found in vercel ms up to 1.x. This issue affects the function parse of the file index.js. The manipulation of the argument str leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is caae2988ba2a37765d055c4eee63d383320ee662. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20162\">https://nvd.nist.gov/vuln/detail/CVE-2017-20162</a></li>\n<li><a href=\"https://github.com/vercel/ms/pull/89\">https://github.com/vercel/ms/pull/89</a></li>\n<li><a href=\"https://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662\">https://github.com/vercel/ms/commit/caae2988ba2a37765d055c4eee63d383320ee662</a></li>\n<li><a href=\"https://github.com/vercel/ms/releases/tag/2.0.0\">https://github.com/vercel/ms/releases/tag/2.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217451\">https://vuldb.com/?ctiid.217451</a></li>\n<li><a href=\"https://vuldb.com/?id.217451\">https://vuldb.com/?id.217451</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w9mr-4mfr-499f\">https://github.com/advisories/GHSA-w9mr-4mfr-499f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w9mr-4mfr-499f",
            "title": "[ms] Vercel ms Inefficient Regular Expression Complexity vulnerability",
            "date_modified": "2023-10-20T21:40:09.000Z",
            "date_published": "2023-01-05T12:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w9mr-4mfr-499f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in flitto express-param up to 0.x. It has been classified as critical. This affects an unknown part of the file <code>lib/fetchParams.js</code>. The manipulation leads to improper handling of extra parameters. It is possible to initiate the attack remotely. Upgrading to version 1.0.0 can address this issue. The name of the patch is db94f7391ad0a16dcfcba8b9be1af385b25c42db. It is recommended to upgrade the affected component. The identifier VDB-217149 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20160\">https://nvd.nist.gov/vuln/detail/CVE-2017-20160</a></li>\n<li><a href=\"https://github.com/flitto/express-param/pull/19\">https://github.com/flitto/express-param/pull/19</a></li>\n<li><a href=\"https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db\">https://github.com/flitto/express-param/commit/db94f7391ad0a16dcfcba8b9be1af385b25c42db</a></li>\n<li><a href=\"https://github.com/flitto/express-param/releases/tag/1.0.0\">https://github.com/flitto/express-param/releases/tag/1.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217149\">https://vuldb.com/?ctiid.217149</a></li>\n<li><a href=\"https://vuldb.com/?id.217149\">https://vuldb.com/?id.217149</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr54-72wr-cqvq\">https://github.com/advisories/GHSA-fr54-72wr-cqvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr54-72wr-cqvq",
            "title": "[express-param] express-param vulnerable to Improper Handling of Extra Parameters",
            "date_modified": "2023-10-20T21:39:48.000Z",
            "date_published": "2022-12-31T21:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr54-72wr-cqvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This advisory is not describing a vulnerability in the Tauri code base itself but a commonly used misconfiguration which could lead to leaking of the private key and updater key password into bundled Tauri applications using the Vite frontend in a specific configuration.</p>\n<p>The Tauri documentation used an insecure example configuration in the <a href=\"https://tauri.app/v1/guides/getting-started/setup/vite/\">Vite guide</a> to showcase how to use Tauri together with Vite. </p>\n<p>Copying the following snippet <code>envPrefix: ['VITE_', 'TAURI_'],</code> from this guide into the <code>vite.config.ts</code> of a Tauri project leads to bundling the <code>TAURI_PRIVATE_KEY</code> and <code>TAURI_KEY_PASSWORD</code> into the Vite frontend code and therefore leaking this value to the released Tauri application.</p>\n<p>Using the <code>envPrefix: ['VITE_'],</code> or any other framework than Vite means you are not impacted by this advisory.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The documentation has been patched but as the root cause is not in Tauri itself the issue is not fixed by updating Tauri.\nThe <code>vite.config.ts</code> configuration of the project needs to be adapted.</p>\n<p>We recommend rotating your updater private key if you are affected by this (requires Tauri CLI &gt;=1.5.5). After updating the envPrefix configuration, generate a new private key with <code>tauri signer generate</code>, saving the new private key and updating the updater's <code>pubkey</code> value on <code>tauri.conf.json</code> with the new public key. To update your existing application, the next application build must be signed with the older private key in order to be accepted by the existing application.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The <code>envPrefix: ['VITE_'],</code>should be used and the desired <code>TAURI</code> variables manually added.\nRespective these variables could be added <code>TAURI_PLATFORM</code>, <code>TAURI_ARCH</code>, <code>TAURI_FAMILY</code>, <code>TAURI_PLATFORM_VERSION</code>, <code>TAURI_PLATFORM_TYPE</code> and <code>TAURI_DEBUG</code> without leaking sensitive information.</p>\n<p>We urge affected users to implement the workaround as the <code>1.x</code> branch will not receive a general prevention fix as it would break systems.</p>\n<h3 id=\"references\">References</h3>\n<p>The issue was originally disclosed in our discord <a href=\"https://discord.com/channels/616186924390023171/1164260301655523409\">here</a>.\nThe affected guide is <a href=\"https://tauri.app/v1/guides/getting-started/setup/vite/\">https://tauri.app/v1/guides/getting-started/setup/vite/</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259\">https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46115\">https://nvd.nist.gov/vuln/detail/CVE-2023-46115</a></li>\n<li><a href=\"https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433\">https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433</a></li>\n<li><a href=\"https://discord.com/channels/616186924390023171/1164260301655523409\">https://discord.com/channels/616186924390023171/1164260301655523409</a></li>\n<li><a href=\"https://tauri.app/v1/guides/getting-started/setup/vite/\">https://tauri.app/v1/guides/getting-started/setup/vite/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2rcp-jvr4-r259\">https://github.com/advisories/GHSA-2rcp-jvr4-r259</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2rcp-jvr4-r259",
            "title": "[@tauri-apps/cli] Tauri's Updater Private Keys Possibly Leaked via Vite Environment Variables",
            "date_modified": "2023-10-20T15:18:52.000Z",
            "date_published": "2023-10-20T15:18:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2rcp-jvr4-r259"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>It seems that any Directus installation that has websockets enabled can be crashed if the websocket server receives an invalid frame. This could probably be posted as an issue and I might even be able to put together a pull request for a fix (if only I had some extra time...), but I decided to instead post as a vulnerability just for the maintainers, since this seemingly can be used to crash any live Directus server if websockets are enabled, so public disclosure is not a good idea until the issue is fixed.</p>\n<h3 id=\"details\">Details</h3>\n<p>The fix for this seems quite simple; the websocket server just needs to properly catch the error instead of crashing the server. See for example: <a href=\"https://github.com/websockets/ws/issues/2098\">https://github.com/websockets/ws/issues/2098</a></p>\n<h3 id=\"poc\">PoC</h3>\n<ul>\n<li>Start a fresh Directus server (using for example the compose file here: <a href=\"https://docs.directus.io/self-hosted/docker-guide.html\">https://docs.directus.io/self-hosted/docker-guide.html</a>). Enable websockets by setting <code>WEBSOCKETS_ENABLED: 'true'</code> environment variable.</li>\n<li>run a separate node app somewhere else to send an invalid frame to the server:</li>\n</ul>\n<pre><code>const WebSocket = require(\"ws\");\nconst websocket = new WebSocket(\"ws://0.0.0.0:8055/websocket\");\nwebsocket.on(\"open\", function () {\n  const chunk = Buffer.from(\"a180\", \"hex\");\n  websocket._socket.write(chunk);\n});\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>The server crashes with an error: <code>RangeError: Invalid WebSocket frame: RSV2 and RSV3 must be clear</code>. Server needs to be manually restarted to get back online (if there's no recovery mechanism in place, as there often isn't with simple node servers). This was confirmed on a local server, and additionally I was able to crash our staging server with the same code, just pointing to our staging Directus server running at fly.io. It seems to also crash servers running in the <a href=\"https://directus.cloud\">directus.cloud</a> service. I created <a href=\"https://websocket-test.directus.app/\">https://websocket-test.directus.app/</a>, pointed the above script to the websocket url of that instance and the server does crash for a while. It seems that in there there's a mechanism for bringing the server back up quite fast, but it would be quite trivial for anyone to DoS any server running in directus.cloud by just spamming these invalid frames to the server. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/directus/directus/security/advisories/GHSA-hmgw-9jrg-hf2m\">https://github.com/directus/directus/security/advisories/GHSA-hmgw-9jrg-hf2m</a></li>\n<li><a href=\"https://github.com/directus/directus/commit/243eed781b42d6b4948ddb8c3792bcf5b44f55bb\">https://github.com/directus/directus/commit/243eed781b42d6b4948ddb8c3792bcf5b44f55bb</a></li>\n<li><a href=\"https://github.com/directus/directus/releases/tag/v10.6.2\">https://github.com/directus/directus/releases/tag/v10.6.2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-45820\">https://nvd.nist.gov/vuln/detail/CVE-2023-45820</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmgw-9jrg-hf2m\">https://github.com/advisories/GHSA-hmgw-9jrg-hf2m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmgw-9jrg-hf2m",
            "title": "[directus] Directus crashes on invalid WebSocket message",
            "date_modified": "2023-10-19T21:56:13.000Z",
            "date_published": "2023-10-19T20:02:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmgw-9jrg-hf2m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file write vulnerability in Express-FileUpload v1.3.1 allows attackers to upload multiple files with the same name, causing an overwrite of files in the web application server. This vulnerability is <a href=\"https://github.com/richardgirges/express-fileupload/issues/316\">debated by the package author</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27261\">https://nvd.nist.gov/vuln/detail/CVE-2022-27261</a></li>\n<li><a href=\"https://www.npmjs.com/package/express-fileupload\">https://www.npmjs.com/package/express-fileupload</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=3ROHB3ck4tA\">https://www.youtube.com/watch?v=3ROHB3ck4tA</a></li>\n<li><a href=\"https://github.com/richardgirges/express-fileupload/issues/312\">https://github.com/richardgirges/express-fileupload/issues/312</a></li>\n<li><a href=\"https://github.com/richardgirges/express-fileupload/issues/316\">https://github.com/richardgirges/express-fileupload/issues/316</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w4m6-x6c2-j5c9\">https://github.com/advisories/GHSA-w4m6-x6c2-j5c9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w4m6-x6c2-j5c9",
            "title": "[express-fileupload] Express-FileUpload Arbitrary File Overwrite",
            "date_modified": "2023-10-19T19:26:35.000Z",
            "date_published": "2022-04-13T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w4m6-x6c2-j5c9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In <code>mxGraphViewImageReader.java</code> in mxGraph before 3.7.6, the <code>SAXParserFactory</code> instance in <code>convert()</code> is missing flags to prevent XML External Entity (XXE) attacks, as demonstrated by <code>/ServerView</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-18197\">https://nvd.nist.gov/vuln/detail/CVE-2017-18197</a></li>\n<li><a href=\"https://github.com/jgraph/mxgraph/issues/124\">https://github.com/jgraph/mxgraph/issues/124</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2018/03/msg00002.html\">https://lists.debian.org/debian-lts-announce/2018/03/msg00002.html</a></li>\n<li><a href=\"https://github.com/jgraph/mxgraph/commit/97b3718db64a6ca9afb3382de2926eb8da660052\">https://github.com/jgraph/mxgraph/commit/97b3718db64a6ca9afb3382de2926eb8da660052</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wvpv-8524-wg6x\">https://github.com/advisories/GHSA-wvpv-8524-wg6x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wvpv-8524-wg6x",
            "title": "[mxgraph] mxGraph vulnerable to XXE attacks",
            "date_modified": "2023-10-19T19:08:40.000Z",
            "date_published": "2022-05-14T03:38:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wvpv-8524-wg6x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>mxGraph v4.2.2 was discovered to contain a cross-site scripting (XSS) vulnerability via the <code>setTooltips()</code> function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40440\">https://nvd.nist.gov/vuln/detail/CVE-2022-40440</a></li>\n<li><a href=\"https://github.com/SxB64/mxgraph-xss-vul/wiki\">https://github.com/SxB64/mxgraph-xss-vul/wiki</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j4rv-pr9g-q8jv\">https://github.com/advisories/GHSA-j4rv-pr9g-q8jv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j4rv-pr9g-q8jv",
            "title": "[mxgraph] mxGraph vulnerable to cross-site scripting in setTooltips function",
            "date_modified": "2023-10-19T19:07:03.000Z",
            "date_published": "2022-10-12T12:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j4rv-pr9g-q8jv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MJML prior to 4.6.3 contains a path traversal vulnerability when processing the <code>mj-include</code> directive within an MJML document.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-12827\">https://nvd.nist.gov/vuln/detail/CVE-2020-12827</a></li>\n<li><a href=\"https://github.com/mjmlio/mjml/commit/30e29ed2cdaec8684d60a6d12ea07b611c765a12\">https://github.com/mjmlio/mjml/commit/30e29ed2cdaec8684d60a6d12ea07b611c765a12</a></li>\n<li><a href=\"https://github.com/mjmlio/mjml/releases/tag/v4.6.3\">https://github.com/mjmlio/mjml/releases/tag/v4.6.3</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/158111/MJML-4.6.2-Path-Traversal.html\">http://packetstormsecurity.com/files/158111/MJML-4.6.2-Path-Traversal.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2020/Jun/23\">http://seclists.org/fulldisclosure/2020/Jun/23</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4hch-r9xf-6vfr\">https://github.com/advisories/GHSA-4hch-r9xf-6vfr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4hch-r9xf-6vfr",
            "title": "[mjml] MJML vulnerable to path traversal",
            "date_modified": "2023-10-19T19:05:12.000Z",
            "date_published": "2022-05-24T17:20:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4hch-r9xf-6vfr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>apiconnect-cli-plugins through 6.0.1 is vulnerable to Command Injection. It allows execution of arbitrary commands via the <code>pluginUri</code> argument.</p>\n<h3 id=\"poc\">PoC</h3>\n<pre><code class=\"language-js\">var root = require(\"apiconnect-cli-plugins\");\nvar payload = \"&amp; touch Song &amp;\";\nroot.pluginLoader.installPlugin(payload, \"\");\n</code></pre>\n<p>The injection point is located in line 181 of file <code>lib/plugin-loader.js</code>, in the function <code>installPlugin(pluginUri, registryUri)</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7633\">https://nvd.nist.gov/vuln/detail/CVE-2020-7633</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-APICONNECTCLIPLUGINS-564427\">https://snyk.io/vuln/SNYK-JS-APICONNECTCLIPLUGINS-564427</a></li>\n<li><a href=\"https://web.archive.org/web/20211209115530/https://openbase.com/js/apiconnect-cli-plugins\">https://web.archive.org/web/20211209115530/https://openbase.com/js/apiconnect-cli-plugins</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c9m9-48pw-6mpv\">https://github.com/advisories/GHSA-c9m9-48pw-6mpv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c9m9-48pw-6mpv",
            "title": "[apiconnect-cli-plugins] apiconnect-cli-plugins vulnerable to OS Command Injection",
            "date_modified": "2023-10-19T18:57:47.000Z",
            "date_published": "2021-05-24T22:18:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c9m9-48pw-6mpv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PhantomJS through 2.1.1 has an arbitrary file read vulnerability, as demonstrated by an XMLHttpRequest for a <code>file://</code> URI. The vulnerability exists in the <code>page.open()</code> function of the webpage module, which loads a specified URL and calls a given callback. An attacker can supply a specially crafted HTML file, as user input, that allows reading arbitrary files on the filesystem. For example, if <code>page.render()</code> is the function callback, this generates a PDF or an image of the targeted file. <strong>NOTE</strong>: this product is no longer developed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-17221\">https://nvd.nist.gov/vuln/detail/CVE-2019-17221</a></li>\n<li><a href=\"https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/\">https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x43g-gj9x-838x\">https://github.com/advisories/GHSA-x43g-gj9x-838x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x43g-gj9x-838x",
            "title": "[phantomjs] PhantomJS Arbitrary File Read",
            "date_modified": "2023-10-19T18:55:55.000Z",
            "date_published": "2022-05-24T22:01:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x43g-gj9x-838x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>mxGraph through 4.0.0, related to the <a href=\"https://github.com/jgraph/drawio\">draw.io Diagrams</a> plugin before 8.3.14 for Confluence and other products, is vulnerable to cross-site scripting. draw.io Diagrams allows the creation and editing of draw.io-based diagrams in Confluence. Among other things, it allows to set the background color of text displayed in the diagram. The color provided by the user is notproperly sanitized, leading to HTML and JavaScript code to be displayed \"as it is\" to visitors of the page. This allows attackers to execute JavaScript code in the context of the visitor's browser and session and to e.g. run Confluence command under the visitor's user or attack the visitor's browser.</p>\n<p><strong>Proof of Concept (PoC):</strong></p>\n<ol>\n<li>Create a new draw.io Diagram, add an element and edit its background color and enter some text to the element</li>\n<li>Enter the following \"color\": <code>onMouseOver=alert(1) a=</code></li>\n<li>Save and view the resulting diagram, moving your mouse over the text</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-13127\">https://nvd.nist.gov/vuln/detail/CVE-2019-13127</a></li>\n<li><a href=\"https://github.com/jgraph/mxgraph/commit/76e8e2809b622659a9c5ffdc4f19922b7a68cfa3\">https://github.com/jgraph/mxgraph/commit/76e8e2809b622659a9c5ffdc4f19922b7a68cfa3</a></li>\n<li><a href=\"https://marketplace.atlassian.com/apps/1210933/draw-io-diagrams-for-confluence/version-history\">https://marketplace.atlassian.com/apps/1210933/draw-io-diagrams-for-confluence/version-history</a></li>\n<li><a href=\"https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2019-032.txt\">https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2019-032.txt</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xm59-jvxm-cp3v\">https://github.com/advisories/GHSA-xm59-jvxm-cp3v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xm59-jvxm-cp3v",
            "title": "[mxgraph] mxGraph vulnerable to cross-site scripting in color field",
            "date_modified": "2023-10-19T18:54:38.000Z",
            "date_published": "2022-05-24T16:49:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xm59-jvxm-cp3v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Enhanced Image (aka <a href=\"https://github.com/ckeditor/ckeditor4/tree/master/plugins/image2\">image2</a>) plugin for CKEditor in versions 4.5.10 through 4.9.1; fixed in 4.9.2, and as used in Drupal 8 before 8.4.7 and 8.5.x before 8.5.2 and other products, is vulnerable to cross-site scripting because it allows remote attackers to inject arbitrary web script through a crafted IMG element.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-9861\">https://nvd.nist.gov/vuln/detail/CVE-2018-9861</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor-dev/blob/master/CHANGES.md\">https://github.com/ckeditor/ckeditor-dev/blob/master/CHANGES.md</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2018-003\">https://www.drupal.org/sa-core-2018-003</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103924\">http://www.securityfocus.com/bid/103924</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g78h-pf65-46rv\">https://github.com/advisories/GHSA-g78h-pf65-46rv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g78h-pf65-46rv",
            "title": "[ckeditor-dev] Enhanced Image plugin for CKEditor is vulnerable to Cross-site scripting (XSS)",
            "date_modified": "2023-10-19T18:50:45.000Z",
            "date_published": "2022-05-14T00:56:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g78h-pf65-46rv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pg-native before 3.0.1 and libpq before 1.8.10 are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. <strong>Note:</strong> pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25852\">https://nvd.nist.gov/vuln/detail/CVE-2022-25852</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366\">https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365\">https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365</a></li>\n<li><a href=\"https://github.com/brianc/node-libpq/issues/84\">https://github.com/brianc/node-libpq/issues/84</a></li>\n<li><a href=\"https://github.com/brianc/node-libpq/pull/86\">https://github.com/brianc/node-libpq/pull/86</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j32j-2hxv-rqf7\">https://github.com/advisories/GHSA-j32j-2hxv-rqf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j32j-2hxv-rqf7",
            "title": "[pg-native] pg-native and libpq vulnerable to uncontrolled resource consumption",
            "date_modified": "2023-10-19T18:45:44.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j32j-2hxv-rqf7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>pg-native before 3.0.1 and libpq before 1.8.10 are vulnerable to Denial of Service (DoS) when the addons attempt to cast the second argument to an array and fail. This happens for every non-array argument passed. <strong>Note:</strong> pg-native is a mere binding to npm's libpq library, which in turn has the addons and bindings to the actual C libpq library. This means that problems found in pg-native may transitively impact npm's libpq.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25852\">https://nvd.nist.gov/vuln/detail/CVE-2022-25852</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366\">https://snyk.io/vuln/SNYK-JS-LIBPQ-2392366</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365\">https://snyk.io/vuln/SNYK-JS-PGNATIVE-2392365</a></li>\n<li><a href=\"https://github.com/brianc/node-libpq/issues/84\">https://github.com/brianc/node-libpq/issues/84</a></li>\n<li><a href=\"https://github.com/brianc/node-libpq/pull/86\">https://github.com/brianc/node-libpq/pull/86</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j32j-2hxv-rqf7\">https://github.com/advisories/GHSA-j32j-2hxv-rqf7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j32j-2hxv-rqf7",
            "title": "[libpq] pg-native and libpq vulnerable to uncontrolled resource consumption",
            "date_modified": "2023-10-19T18:45:44.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j32j-2hxv-rqf7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Code Injection exists in tree-kill on Windows which allows a remote code execution when an attacker is able to control the input into the command, which is executed without any check. The issue arises here: <a href=\"https://github.com/pkrumins/node-tree-kill/blob/master/index.js#L20\">https://github.com/pkrumins/node-tree-kill/blob/master/index.js#L20</a> . While the Linux part is sanitized, the Windows on simply uses the <code>+</code> operand to concatenate the input into <code>exec()</code></p>\n<h3 id=\"steps-to-reproduce\">Steps To Reproduce:</h3>\n<p>Create the following PoC file:</p>\n<pre><code class=\"language-js\">// poc.js\nvar kill = require('tree-kill');\nkill('3333332 &amp; echo \"HACKED\" &gt; HACKED.txt &amp; ');\n</code></pre>\n<p>Execute the following commands in another terminal:</p>\n<pre><code class=\"language-bash\">npm i tree-kill # Install affected module\ndir # Check *HACKED.txt* doesn't exist\nnode poc.js #  Run the PoC\ndir # Now *HACKED.txt* exists :)\n</code></pre>\n<p>A new file called <code>HACKED.txt</code> will be created, containing the <code>HACKED</code> string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15599\">https://nvd.nist.gov/vuln/detail/CVE-2019-15599</a></li>\n<li><a href=\"https://hackerone.com/reports/701183\">https://hackerone.com/reports/701183</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mxq6-vrrr-ppmg\">https://github.com/advisories/GHSA-mxq6-vrrr-ppmg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mxq6-vrrr-ppmg",
            "title": "[tree-kill] tree-kill vulnerable to remote code execution",
            "date_modified": "2023-10-19T18:39:49.000Z",
            "date_published": "2022-05-24T17:04:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mxq6-vrrr-ppmg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>docsify versions 4.12.1 and earlier are vulnerable to cross-site scripting (XSS) because the search component does not appropriately encode Code Blocks and mishandles the <code>\"</code> character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30074\">https://nvd.nist.gov/vuln/detail/CVE-2021-30074</a></li>\n<li><a href=\"https://github.com/docsifyjs/docsify/issues/1549\">https://github.com/docsifyjs/docsify/issues/1549</a></li>\n<li><a href=\"https://github.com/docsifyjs/docsify/pull/1551\">https://github.com/docsifyjs/docsify/pull/1551</a></li>\n<li><a href=\"https://github.com/docsifyjs/docsify/commit/c24f7f6f0b87a87f6dd3755f69eb0969ebb029c9\">https://github.com/docsifyjs/docsify/commit/c24f7f6f0b87a87f6dd3755f69eb0969ebb029c9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5h7x-68wj-jhwc\">https://github.com/advisories/GHSA-5h7x-68wj-jhwc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5h7x-68wj-jhwc",
            "title": "[docsify] Docsify vulnerable to cross-site scripting due to mishandled encoding",
            "date_modified": "2023-10-19T18:37:42.000Z",
            "date_published": "2022-05-24T17:46:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5h7x-68wj-jhwc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Electron before 1.6.8 allows remote command execution because of a <code>nodeIntegration</code> bypass vulnerability. This also affects all applications that bundle Electron code equivalent to 1.6.8 or earlier. Bypassing the Same Origin Policy (SOP) is a precondition; however, recent Electron versions do not have strict SOP enforcement. Combining an SOP bypass with a privileged URL internally used by Electron, it was possible to execute native Node.js primitives in order to run OS commands on the user's host. Specifically, a <code>chrome-devtools://devtools/bundled/inspector.html</code> window could be used to eval a Node.js <code>child_process.execFile</code> API call.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-12581\">https://nvd.nist.gov/vuln/detail/CVE-2017-12581</a></li>\n<li><a href=\"https://blog.doyensec.com/2017/08/03/electron-framework-security.html\">https://blog.doyensec.com/2017/08/03/electron-framework-security.html</a></li>\n<li><a href=\"https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf\">https://doyensec.com/resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf</a></li>\n<li><a href=\"https://github.com/electron/electron/commit/05b6d91bf4c1e0ee65eeef70cd5d1bd1df125644\">https://github.com/electron/electron/commit/05b6d91bf4c1e0ee65eeef70cd5d1bd1df125644</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7fv9-m79r-j9x8\">https://github.com/advisories/GHSA-7fv9-m79r-j9x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7fv9-m79r-j9x8",
            "title": "[electron] Electron vulnerable to remote command execution",
            "date_modified": "2023-10-19T18:37:42.000Z",
            "date_published": "2022-05-17T02:14:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7fv9-m79r-j9x8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Xen Orchestra (with xo-web through 5.80.0 and xo-server through 5.84.0) mishandles authorization, as demonstrated by modified WebSocket <code>resourceSet.getAll</code> data is which the attacker changes the permission field from none to admin. The attacker gains access to data sets such as VMs, Backups, Audit, Users, and Groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36383\">https://nvd.nist.gov/vuln/detail/CVE-2021-36383</a></li>\n<li><a href=\"https://github.com/vatesfr/xen-orchestra/issues/5712\">https://github.com/vatesfr/xen-orchestra/issues/5712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-grvm-gcqf-gh8q\">https://github.com/advisories/GHSA-grvm-gcqf-gh8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-grvm-gcqf-gh8q",
            "title": "[xo-server] Xen Orchestra Mishandles Authorization",
            "date_modified": "2023-10-19T18:34:47.000Z",
            "date_published": "2022-05-24T19:07:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-grvm-gcqf-gh8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Xen Orchestra (with xo-web through 5.80.0 and xo-server through 5.84.0) mishandles authorization, as demonstrated by modified WebSocket <code>resourceSet.getAll</code> data is which the attacker changes the permission field from none to admin. The attacker gains access to data sets such as VMs, Backups, Audit, Users, and Groups.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-36383\">https://nvd.nist.gov/vuln/detail/CVE-2021-36383</a></li>\n<li><a href=\"https://github.com/vatesfr/xen-orchestra/issues/5712\">https://github.com/vatesfr/xen-orchestra/issues/5712</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-grvm-gcqf-gh8q\">https://github.com/advisories/GHSA-grvm-gcqf-gh8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-grvm-gcqf-gh8q",
            "title": "[xo-web] Xen Orchestra Mishandles Authorization",
            "date_modified": "2023-10-19T18:34:47.000Z",
            "date_published": "2022-05-24T19:07:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-grvm-gcqf-gh8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>clamscan through 1.2.0 is vulnerable to Command Injection. It is possible to inject arbitrary commands as part of the <code>_is_clamav_binary</code> function located within <code>Index.js</code>. It should be noted that this vulnerability requires a pre-requisite that a folder should be created with the same command that will be chained to execute. This lowers the risk of this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7613\">https://nvd.nist.gov/vuln/detail/CVE-2020-7613</a></li>\n<li><a href=\"https://github.com/kylefarris/clamscan/blob/master/index.js#L34\">https://github.com/kylefarris/clamscan/blob/master/index.js#L34</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-CLAMSCAN-564113\">https://snyk.io/vuln/SNYK-JS-CLAMSCAN-564113</a></li>\n<li><a href=\"https://github.com/kylefarris/clamscan/pull/45\">https://github.com/kylefarris/clamscan/pull/45</a></li>\n<li><a href=\"https://github.com/kylefarris/clamscan/commit/5f557c970817fe8c578ec3f7ad3bcbcef4cf5538\">https://github.com/kylefarris/clamscan/commit/5f557c970817fe8c578ec3f7ad3bcbcef4cf5538</a></li>\n<li><a href=\"https://huntr.dev/bounties/1-npm-clamscan/\">https://huntr.dev/bounties/1-npm-clamscan/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5v25-xr56-phph\">https://github.com/advisories/GHSA-5v25-xr56-phph</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5v25-xr56-phph",
            "title": "[clamscan] Clamscan vulnerable to command injection",
            "date_modified": "2023-10-19T18:32:36.000Z",
            "date_published": "2022-05-24T17:13:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5v25-xr56-phph"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}