{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package before 0.8.3.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@0.8.3</code> or higher or to <code>@xmldom/xmldom@0.9.0-beta.2</code> or higher if you are on the dist-tag <code>next</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No, if you can not update to v0.8.3, please let us know, we would be able to also provide a patch update for version 0.7.x if required.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n<li>Add information to <a href=\"https://github.com/xmldom/xmldom/issue/436\">https://github.com/xmldom/xmldom/issue/436</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37616\">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
            "title": "[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom",
            "date_modified": "2022-10-11T20:42:57.000Z",
            "date_published": "2022-10-11T20:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package before 0.8.3.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@0.8.3</code> or higher or to <code>@xmldom/xmldom@0.9.0-beta.2</code> or higher if you are on the dist-tag <code>next</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No, if you can not update to v0.8.3, please let us know, we would be able to also provide a patch update for version 0.7.x if required.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n<li>Add information to <a href=\"https://github.com/xmldom/xmldom/issue/436\">https://github.com/xmldom/xmldom/issue/436</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37616\">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
            "title": "[xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom",
            "date_modified": "2022-10-11T20:42:57.000Z",
            "date_published": "2022-10-11T20:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A prototype pollution vulnerability exists in the function copy in dom.js in the xmldom (published as @xmldom/xmldom) package before 0.8.3.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to <code>@xmldom/xmldom@0.8.3</code> or higher or to <code>@xmldom/xmldom@0.9.0-beta.2</code> or higher if you are on the dist-tag <code>next</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No, if you can not update to v0.8.3, please let us know, we would be able to also provide a patch update for version 0.7.x if required.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@xmldom.org\">security@xmldom.org</a></li>\n<li>Add information to <a href=\"https://github.com/xmldom/xmldom/issue/436\">https://github.com/xmldom/xmldom/issue/436</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/xmldom/xmldom/security/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37616\">https://nvd.nist.gov/vuln/detail/CVE-2022-37616</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/issues/436\">https://github.com/xmldom/xmldom/issues/436</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/pull/437\">https://github.com/xmldom/xmldom/pull/437</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L1</a></li>\n<li><a href=\"https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3\">https://github.com/xmldom/xmldom/blob/bc36efddf9948aba15618f85dc1addfc2ac9d7b2/lib/dom.js#L3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9pgh-qqpf-7wqj\">https://github.com/advisories/GHSA-9pgh-qqpf-7wqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj",
            "title": "[@xmldom/xmldom] Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution') in @xmldom/xmldom and xmldom",
            "date_modified": "2022-10-11T20:42:57.000Z",
            "date_published": "2022-10-11T20:42:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9pgh-qqpf-7wqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker can send an invalid <code>Content-Type</code> header that can cause the application to crash, leading to a possible Denial of Service attack. Only the v4.x line is affected.</p>\n<p>(This was updated: upon a close inspection, v3.x is not affected after all).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Yes, update to <code>&gt; v4.8.0</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You can reject the malicious content types before the body parser enters in action.</p>\n<pre><code class=\"language-js\">  const badNames = Object.getOwnPropertyNames({}.__proto__)\n  fastify.addHook('onRequest', async (req, reply) =&gt; {\n    for (const badName of badNames) {\n      if (req.headers['content-type'].indexOf(badName) &gt; -1) {\n        reply.code(415)\n        throw new Error('Content type not supported')\n      }\n    }\n  })\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>See the HackerOne report <a href=\"https://hackerone.com/bugs?report_id=1715536&amp;subject=fastify\">#1715536</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p><a href=\"https://github.com/fastify/fastify/security/policy\">Fastify security policy</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fastify/fastify/security/advisories/GHSA-455w-c45v-86rg\">https://github.com/fastify/fastify/security/advisories/GHSA-455w-c45v-86rg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39288\">https://nvd.nist.gov/vuln/detail/CVE-2022-39288</a></li>\n<li><a href=\"https://github.com/fastify/fastify/commit/fbb07e8dfad74c69cd4cd2211aedab87194618e3\">https://github.com/fastify/fastify/commit/fbb07e8dfad74c69cd4cd2211aedab87194618e3</a></li>\n<li><a href=\"https://github.com/fastify/fastify/security/policy\">https://github.com/fastify/fastify/security/policy</a></li>\n<li><a href=\"https://hackerone.com/bugs?report_id=1715536&amp;subject=fastify\">https://hackerone.com/bugs?report_id=1715536&amp;subject=fastify</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-455w-c45v-86rg\">https://github.com/advisories/GHSA-455w-c45v-86rg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-455w-c45v-86rg",
            "title": "[fastify] fastify vulnerable to denial of service via malicious Content-Type",
            "date_modified": "2022-10-11T13:45:15.000Z",
            "date_published": "2022-10-11T13:45:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-455w-c45v-86rg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>The default cookie name (and documentation recommendation) was prefixed with <code>Host__</code> instead of <code>__Host-</code>. The point of this prefix is for additional security, to ensure that, when no domain option is provided in the cookie options, we can guarantee the cookie came from the correct domain.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Yes, the problem is patched from version 2.2.1, this will not be back ported, but you can use the workaround described below.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>You can work around this by providing a custom <code>cookieName</code> as part of the options, which is correctly prefixed with <code>__Host-</code>.</p>\n<h3 id=\"references\">References</h3>\n<p><em>Are there any links users can visit to find out more?</em></p>\n<p><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#cookie-with-__host-prefix\">https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#cookie-with-__host-prefix</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Reach out on the <a href=\"https://psifisolutions.com/discord\">Psifi Solutions Discord</a> in the <code>#psifi-support</code> channel</li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Psifi-Solutions/csrf-csrf/security/advisories/GHSA-jjmg-x456-w976\">https://github.com/Psifi-Solutions/csrf-csrf/security/advisories/GHSA-jjmg-x456-w976</a></li>\n<li><a href=\"https://github.com/Psifi-Solutions/csrf-csrf/commit/8f1ce8db97d945a4bb7f39f0b43c6041fa83d675\">https://github.com/Psifi-Solutions/csrf-csrf/commit/8f1ce8db97d945a4bb7f39f0b43c6041fa83d675</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jjmg-x456-w976\">https://github.com/advisories/GHSA-jjmg-x456-w976</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jjmg-x456-w976",
            "title": "[csrf-csrf] Incorrect default cookie name and recommendation",
            "date_modified": "2022-10-10T20:59:04.000Z",
            "date_published": "2022-10-10T20:59:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jjmg-x456-w976"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NocoDB prior to 0.92.0 allows actors to insert large characters into the input field <code>New Project</code> on the create field, which can cause a Denial of Service (DoS) via a crafted HTTP request. Version 0.92.0 fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-3423\">https://nvd.nist.gov/vuln/detail/CVE-2022-3423</a></li>\n<li><a href=\"https://github.com/nocodb/nocodb/commit/000ecd886738b965b5997cd905825e3244f48b95\">https://github.com/nocodb/nocodb/commit/000ecd886738b965b5997cd905825e3244f48b95</a></li>\n<li><a href=\"https://huntr.dev/bounties/94639d8e-8301-4432-ab80-e76e1346e631\">https://huntr.dev/bounties/94639d8e-8301-4432-ab80-e76e1346e631</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-grv6-m753-3w2g\">https://github.com/advisories/GHSA-grv6-m753-3w2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-grv6-m753-3w2g",
            "title": "[nocodb] NocoDB vulnerable to Denial of Service",
            "date_modified": "2022-10-10T16:52:22.000Z",
            "date_published": "2022-10-07T18:16:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-grv6-m753-3w2g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Weak encryption on CSRF so tokens can be read by malicious attackers. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Problems have been patched as of v1.1.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade to v1.1.0</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html</a> </p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Submit an issue at <a href=\"https://github.com/valexandersaulys/tiny-csrf\">the github repo</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/valexandersaulys/tiny-csrf/security/advisories/GHSA-pj2c-h76w-vv6f\">https://github.com/valexandersaulys/tiny-csrf/security/advisories/GHSA-pj2c-h76w-vv6f</a></li>\n<li><a href=\"https://github.com/valexandersaulys/tiny-csrf/commit/8eead6da3b56e290512bbe8d20c2c5df3be317ba\">https://github.com/valexandersaulys/tiny-csrf/commit/8eead6da3b56e290512bbe8d20c2c5df3be317ba</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pj2c-h76w-vv6f\">https://github.com/advisories/GHSA-pj2c-h76w-vv6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pj2c-h76w-vv6f",
            "title": "[tiny-csrf] tiny-csrf has openly visible CSRF tokens",
            "date_modified": "2022-10-07T21:23:19.000Z",
            "date_published": "2022-10-07T21:23:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pj2c-h76w-vv6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Inefficient regular expression complexity of <code>lowercase()</code> and <code>uppercase()</code> regex could lead to a denial of service attack. With a formed payload <code>'a' + 'a'.repeat(i) + 'A'</code>, only 32 characters payload could take 29443 ms time execution when testing <code>lowercase()</code>. The same issue happens with <code>uppercase()</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>v1.5.1</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609\">huntr.dev report</a>\n<a href=\"https://snyk.io/blog/redos-and-catastrophic-backtracking/\"><em>Regular Expression Denial of Service (ReDoS) and Catastrophic Backtracking</em></a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/imbrn/v8n\">v8n issues list</a></li>\n<li>Email us at <a href=\"mailto:brunodev02221@gmail.com\">brunodev02221@gmail.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/imbrn/v8n/security/advisories/GHSA-xrx9-gj26-5wx9\">https://github.com/imbrn/v8n/security/advisories/GHSA-xrx9-gj26-5wx9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35923\">https://nvd.nist.gov/vuln/detail/CVE-2022-35923</a></li>\n<li><a href=\"https://github.com/imbrn/v8n/commit/92393862156fad190c05ec3f6e2bc73308dcd2f9\">https://github.com/imbrn/v8n/commit/92393862156fad190c05ec3f6e2bc73308dcd2f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609/\">https://huntr.dev/bounties/2d92f644-593b-43b4-bfd1-c8042ac60609/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xrx9-gj26-5wx9\">https://github.com/advisories/GHSA-xrx9-gj26-5wx9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xrx9-gj26-5wx9",
            "title": "[v8n] v8n vulnerable to Inefficient Regular Expression Complexity",
            "date_modified": "2022-10-07T07:33:45.000Z",
            "date_published": "2022-10-07T07:33:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xrx9-gj26-5wx9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.\\n\\nAffected versions of this package are vulnerable to Prototype Pollution. The <code>Schema.path()</code> function is vulnerable to prototype pollution when setting the schema object. This vulnerability allows modification of the Object prototype and could be manipulated into a Denial of Service (DoS) attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2564\">https://nvd.nist.gov/vuln/detail/CVE-2022-2564</a></li>\n<li><a href=\"https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8\">https://github.com/automattic/mongoose/commit/a45cfb6b0ce0067ae9794cfa80f7917e1fb3c6f8</a></li>\n<li><a href=\"https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd\">https://huntr.dev/bounties/055be524-9296-4b2f-b68d-6d5b810d1ddd</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md\">https://github.com/Automattic/mongoose/blob/master/CHANGELOG.md</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141\">https://github.com/Automattic/mongoose/blob/51e758541763b6f14569744ced15cc23ab8b50c6/lib/schema.js#L88-L141</a></li>\n<li><a href=\"https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6\">https://github.com/Automattic/mongoose/compare/6.4.5...6.4.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f825-f98c-gj3g\">https://github.com/advisories/GHSA-f825-f98c-gj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g",
            "title": "[mongoose] automattic/mongoose vulnerable to Prototype pollution via Schema.path",
            "date_modified": "2022-10-07T03:03:07.000Z",
            "date_published": "2022-07-29T00:00:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f825-f98c-gj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>For applications using JWT or session-based authentication (not OIDC), users can input a login string which can cause a denial of service, as parsing it will be too complex.</p>\n<p>Here is an example: <a href=\"https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207\">https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207</a></p>\n<p>The vulnerable expression was never officially released. So only when you generated an application from the master branch between 6.8.0 and 6.9.0 your generated application may be vulnerable.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>If you only used official releases you don't need to patch your application.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you have created an application from the master branch, you need to adapt the <code>LOGIN_REGEX</code> in <code>Constants.java</code>. If your regex is </p>\n<pre><code>^[a-zA-Z0-9!#$&amp;'*+=?^_`{|}~.-]+@?[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\n</code></pre>\n<p>you need to change it too </p>\n<pre><code>^(?&gt;[a-zA-Z0-9!$&amp;*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?&gt;[_.@A-Za-z0-9-]+)$\n</code></pre>\n<p>If you still have <code>^[_.@A-Za-z0-9-]*$</code> there is no need to change it, except you would like to support login with <code>+</code> sign (e.g. <code>foo+bar@example.com</code>).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS\">https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS</a></li>\n<li><a href=\"https://snyk.io/blog/redos-and-catastrophic-backtracking/\">https://snyk.io/blog/redos-and-catastrophic-backtracking/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jhipster/generator-jhipster/security/advisories/GHSA-8w7w-67mw-r5p7\">https://github.com/jhipster/generator-jhipster/security/advisories/GHSA-8w7w-67mw-r5p7</a></li>\n<li><a href=\"https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207\">https://gist.github.com/atomfrede/311f8a9c6eb74c5c5226af0481155207</a></li>\n<li><a href=\"https://www.jhipster.tech/2020/05/17/jhipster-release-6.9.0.html\">https://www.jhipster.tech/2020/05/17/jhipster-release-6.9.0.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8w7w-67mw-r5p7\">https://github.com/advisories/GHSA-8w7w-67mw-r5p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8w7w-67mw-r5p7",
            "title": "[generator-jhipster] generator-jhipster vulnerable to login check Regular Expression Denial of Service",
            "date_modified": "2022-10-06T22:56:29.000Z",
            "date_published": "2022-10-06T22:56:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8w7w-67mw-r5p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Snyk CLI before 1.996.0 allows arbitrary command execution, affecting Snyk IDE plugins and the snyk npm package. Exploitation could follow from the common practice of viewing untrusted files in the Visual Studio Code editor, for example. The original demonstration was with shell metacharacters in the vendor.json ignore field, affecting snyk-go-plugin before 1.19.1. This affects, for example, the Snyk TeamCity plugin (which does not update automatically) before 20220930.142957.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40764\">https://nvd.nist.gov/vuln/detail/CVE-2022-40764</a></li>\n<li><a href=\"https://github.com/snyk/cli/releases/tag/v1.996.0\">https://github.com/snyk/cli/releases/tag/v1.996.0</a></li>\n<li><a href=\"https://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1\">https://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1</a></li>\n<li><a href=\"https://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0\">https://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0</a></li>\n<li><a href=\"https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\">https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpqj-7cj6-hfj8\">https://github.com/advisories/GHSA-hpqj-7cj6-hfj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpqj-7cj6-hfj8",
            "title": "[snyk-go-plugin] Snyk CLI affected by Command Injection vulnerability",
            "date_modified": "2022-10-06T18:20:47.000Z",
            "date_published": "2022-10-04T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpqj-7cj6-hfj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Snyk CLI before 1.996.0 allows arbitrary command execution, affecting Snyk IDE plugins and the snyk npm package. Exploitation could follow from the common practice of viewing untrusted files in the Visual Studio Code editor, for example. The original demonstration was with shell metacharacters in the vendor.json ignore field, affecting snyk-go-plugin before 1.19.1. This affects, for example, the Snyk TeamCity plugin (which does not update automatically) before 20220930.142957.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40764\">https://nvd.nist.gov/vuln/detail/CVE-2022-40764</a></li>\n<li><a href=\"https://github.com/snyk/cli/releases/tag/v1.996.0\">https://github.com/snyk/cli/releases/tag/v1.996.0</a></li>\n<li><a href=\"https://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1\">https://github.com/snyk/snyk-go-plugin/releases/tag/v1.19.1</a></li>\n<li><a href=\"https://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0\">https://support.snyk.io/hc/en-us/articles/7015908293789-CVE-2022-40764-Command-Injection-vulnerability-affecting-Snyk-CLI-versions-prior-to-1-996-0</a></li>\n<li><a href=\"https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/\">https://www.imperva.com/blog/how-scanning-your-projects-for-security-issues-can-lead-to-remote-code-execution/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hpqj-7cj6-hfj8\">https://github.com/advisories/GHSA-hpqj-7cj6-hfj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hpqj-7cj6-hfj8",
            "title": "[snyk] Snyk CLI affected by Command Injection vulnerability",
            "date_modified": "2022-10-06T18:20:47.000Z",
            "date_published": "2022-10-04T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hpqj-7cj6-hfj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>require-node</code> prior to 1.3.4 for 1.x and 2.0.4 for 2.x are vulnerable to Arbitrary Code Execution. The package fails to sanitize requests to the <code>require-node</code> endpoint, allowing attackers to execute arbitrary code in the server through the injection of OS commands in the request body.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<ul>\n<li>If you are using 1.x, upgrade to version 1.3.4 or later.</li>\n<li>If you are using 2.x, upgrade to version 2.0.4 or later.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.npmjs.com/advisories/1015\">https://www.npmjs.com/advisories/1015</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j6j-4h2c-c65p\">https://github.com/advisories/GHSA-8j6j-4h2c-c65p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j6j-4h2c-c65p",
            "title": "[require-node] Arbitrary Code Execution in require-node",
            "date_modified": "2022-10-05T14:38:15.000Z",
            "date_published": "2020-09-03T17:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j6j-4h2c-c65p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>jquery</code> use a lowercasing logic on attribute names. When given a boolean attribute with a name that contains uppercase characters, <code>jquery</code> enters into an infinite recursion loop, exceeding the call stack limit, and resulting in a denial of service condition.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 3.0.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-10707\">https://nvd.nist.gov/vuln/detail/CVE-2016-10707</a></li>\n<li><a href=\"https://github.com/jquery/jquery/issues/3133\">https://github.com/jquery/jquery/issues/3133</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mhpp-875w-9cpv\">https://github.com/advisories/GHSA-mhpp-875w-9cpv</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/330\">https://www.npmjs.com/advisories/330</a></li>\n<li><a href=\"https://github.com/jquery/jquery/pull/3134\">https://github.com/jquery/jquery/pull/3134</a></li>\n<li><a href=\"https://snyk.io/vuln/npm:jquery:20160529\">https://snyk.io/vuln/npm:jquery:20160529</a></li>\n<li><a href=\"https://github.com/jquery/jquery/issues/3133#issuecomment-358978489\">https://github.com/jquery/jquery/issues/3133#issuecomment-358978489</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mhpp-875w-9cpv",
            "title": "[jquery] Denial of Service in jquery",
            "date_modified": "2022-10-05T14:29:42.000Z",
            "date_published": "2018-01-22T13:32:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mhpp-875w-9cpv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package react-native-reanimated before 3.0.0-rc.1 is vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24373\">https://nvd.nist.gov/vuln/detail/CVE-2022-24373</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/pull/3382\">https://github.com/software-mansion/react-native-reanimated/pull/3382</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa\">https://github.com/software-mansion/react-native-reanimated/pull/3382/commits/7adf06d0c59382d884a04be86a96eede3d0432fa</a></li>\n<li><a href=\"https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1\">https://github.com/software-mansion/react-native-reanimated/releases/tag/3.0.0-rc.1</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507\">https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2j79-8pqc-r7x6\">https://github.com/advisories/GHSA-2j79-8pqc-r7x6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2j79-8pqc-r7x6",
            "title": "[react-native-reanimated] react-native-reanimated vulnerable to ReDoS",
            "date_modified": "2022-10-04T21:16:38.000Z",
            "date_published": "2022-10-01T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2j79-8pqc-r7x6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The package css-what before 2.1.3 is vulnerable to Regular Expression Denial of Service (ReDoS) due to the use of insecure regular expression in the <code>re_attr</code> variable of index.js. The exploitation of this vulnerability could be triggered via the parse function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21222\">https://nvd.nist.gov/vuln/detail/CVE-2022-21222</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-CSSWHAT-3035488\">https://security.snyk.io/vuln/SNYK-JS-CSSWHAT-3035488</a></li>\n<li><a href=\"https://github.com/fb55/css-what/commit/dc510929790da6617e7aa93a616498b22f6a6b72\">https://github.com/fb55/css-what/commit/dc510929790da6617e7aa93a616498b22f6a6b72</a></li>\n<li><a href=\"https://github.com/fb55/css-what/blob/a38effd5a8f5506d75c7f8f13cbd8c76248a3860/index.js#23L12\">https://github.com/fb55/css-what/blob/a38effd5a8f5506d75c7f8f13cbd8c76248a3860/index.js#23L12</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p28h-cc7q-c4fg\">https://github.com/advisories/GHSA-p28h-cc7q-c4fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p28h-cc7q-c4fg",
            "title": "[css-what] css-what vulnerable to ReDoS due to use of insecure regular expression",
            "date_modified": "2022-10-05T13:59:32.000Z",
            "date_published": "2022-10-01T00:00:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p28h-cc7q-c4fg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>If the untrusted v8 cached data is passed to the API through CachedDataOptions, the attackers can bypass the sandbox and run arbitrary code in the nodejs process. There are currently no known fixed versions or workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv\">https://github.com/laverdet/isolated-vm/security/advisories/GHSA-2jjq-x548-rhpv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39266\">https://nvd.nist.gov/vuln/detail/CVE-2022-39266</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2jjq-x548-rhpv\">https://github.com/advisories/GHSA-2jjq-x548-rhpv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2jjq-x548-rhpv",
            "title": "[isolated-vm] isolated-vm has vulnerable CachedDataOptions in API",
            "date_modified": "2022-10-06T19:30:31.000Z",
            "date_published": "2022-09-30T22:59:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2jjq-x548-rhpv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>An attacker cooperating with a malicious homeserver could interfere with the verification flow between two users, injecting its own cross-signing user identity in place of one of the users’ identities, leading to the other device trusting/verifying the user identity under the control of the homeserver instead of the intended one.</p>\n<p>The vulnerability is a bug in the matrix-js-sdk, caused by checking and signing user identities and devices in two separate steps, and inadequately fixing the keys to be signed between those steps.</p>\n<p>Even though the attack is partly made possible due to the design decision of treating cross-signing user identities as Matrix devices on the server side (with their device ID set to the public part of the user identity key), no other examined implementations were vulnerable.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>The matrix-js-sdk has been modified to double check that the key signed is the one that was verified instead of just referencing the key by ID. An additional check has been made to report an error when one of the device ID matches a cross-signing key.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>As this attack requires coordination between a malicious homeserver and an attacker -- if you trust your homeserver no particular workaround is needed. </p>\n<p>As a potential way of detecting compromise, it’s possible to review your device list or the device list of other users for devices with IDs in the form of a base64 cross-signing key (<code>5XaczGNlfz0bl8R1IX5qn+tBoue2tWJqLMh+SDUuvCk</code>) instead of classical device ID (<code>SEHACYDHMG</code>).</p>\n<h2 id=\"references\">References</h2>\n<p>Blog post: <a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></p>\n<h2 id=\"for-more-information\">For more information</h2>\n<p>If you have any questions or comments about this advisory, e-mail us at <a href=\"mailto:security@matrix.org\">security@matrix.org</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-5w8r-8pgj-5jmf\">https://github.com/matrix-org/matrix-js-sdk/security/advisories/GHSA-5w8r-8pgj-5jmf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39250\">https://nvd.nist.gov/vuln/detail/CVE-2022-39250</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76\">https://github.com/matrix-org/matrix-js-sdk/commit/a587d7c36026fe1fcf93dfff63588abee359be76</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0\">https://github.com/matrix-org/matrix-js-sdk/releases/tag/v19.7.0</a></li>\n<li><a href=\"https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients\">https://matrix.org/blog/2022/09/28/upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5w8r-8pgj-5jmf\">https://github.com/advisories/GHSA-5w8r-8pgj-5jmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5w8r-8pgj-5jmf",
            "title": "[matrix-js-sdk] matrix-js-sdk subject to user impersonation due to key/device identifier confusion in SAS verification",
            "date_modified": "2022-09-30T22:46:51.000Z",
            "date_published": "2022-09-30T22:46:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5w8r-8pgj-5jmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Open Chinese Convert (OpenCC) 1.0.5 allows attackers to cause a denial of service (segmentation fault) because BinaryDict::NewFromFile in BinaryDict.cpp may have out-of-bounds keyOffset and valueOffset values via a crafted .ocd file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16982\">https://nvd.nist.gov/vuln/detail/CVE-2018-16982</a></li>\n<li><a href=\"https://github.com/BYVoid/OpenCC/issues/303\">https://github.com/BYVoid/OpenCC/issues/303</a></li>\n<li><a href=\"https://github.com/BYVoid/OpenCC/pull/309\">https://github.com/BYVoid/OpenCC/pull/309</a></li>\n<li><a href=\"https://github.com/BYVoid/OpenCC/pull/560\">https://github.com/BYVoid/OpenCC/pull/560</a></li>\n<li><a href=\"https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4\">https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9qh2-6fxg-9m4g\">https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9qh2-6fxg-9m4g",
            "title": "[opencc] Open Chinese Convert subject to Denial of Service via Out-of-bounds Read",
            "date_modified": "2022-09-30T23:14:00.000Z",
            "date_published": "2022-05-14T01:55:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9qh2-6fxg-9m4g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Applications that use <code>next-auth</code> Email Provider and <code>@next-auth/upstash-redis-adapter</code> before v3.0.2 are affected.</p>\n<h3 id=\"description\">Description</h3>\n<p>The Upstash Redis adapter implementation did not check for both the identifier (email) and the token, but only checking for the identifier when verifying the token in the email callback flow. An attacker who knows about the victim's email could easily sign in as the victim, given the attacker also knows about the verification token's expired duration. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability is patched in v3.0.2.\nTo upgrade, run one of the following:</p>\n<pre><code>npm i @next-auth/upstash-redis-adapter@latest\n</code></pre>\n<pre><code>yarn add @next-auth/upstash-redis-adapter@latest\n</code></pre>\n<pre><code>pnpm add @next-auth/upstash-redis-adapter@latest\n</code></pre>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Using Advanced Initialization, developers can check the requests and compare the query's token and identifier before proceeding. Below is an example of how to do this: (Upgrading is still strongly recommended)</p>\n<pre><code class=\"language-js\">import { createHash } from \"crypto\"\nexport default async function auth(req, res) {\n  if (req.method === \"POST\" &amp;&amp; req.action === \"callback\") {\n    const token = req.query?.token\n    const identifier = req.query?.email\n    function hashToken(token: string) {\n      const provider = authOptions.providers.find((p) =&gt; p.id === \"email\")\n      const secret = authOptions.secret\n      return (\n        createHash(\"sha256\")\n          // Prefer provider specific secret, but use default secret if none specified\n          .update(`${token}${provider.secret ?? secret}`)\n          .digest(\"hex\")\n      )\n    }\n    const hashedToken = hashToken(token)\n\n    const invite = await authOptions.adapter.useVerificationToken?.({\n      identifier,\n      token: hashedToken,\n    })\n    if (invite.token !== hashedToken) {\n      res.status(400).json({ error: \"Invalid token\" })\n    }\n  }\n  return await NextAuth(req, res, authOptions)\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>EmailProvider: <a href=\"https://next-auth.js.org/providers/email\">https://next-auth.js.org/providers/email</a>\nAdvanced Initialization: <a href=\"https://next-auth.js.org/configuration/initialization#advanced-initialization\">https://next-auth.js.org/configuration/initialization#advanced-initialization</a>\nUpstash Redis Adapter: <a href=\"https://next-auth.js.org/adapters/upstash-redis\">https://next-auth.js.org/adapters/upstash-redis</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any concerns, we request responsible disclosure, outlined here: <a href=\"https://next-auth.js.org/security#reporting-a-vulnerability\">https://next-auth.js.org/security#reporting-a-vulnerability</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nextauthjs/next-auth/security/advisories/GHSA-4rxr-27mm-mxq9\">https://github.com/nextauthjs/next-auth/security/advisories/GHSA-4rxr-27mm-mxq9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-39263\">https://nvd.nist.gov/vuln/detail/CVE-2022-39263</a></li>\n<li><a href=\"https://github.com/nextauthjs/next-auth/commit/d16e04848ee703cf797724194d4ad2907fe125a9\">https://github.com/nextauthjs/next-auth/commit/d16e04848ee703cf797724194d4ad2907fe125a9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4rxr-27mm-mxq9\">https://github.com/advisories/GHSA-4rxr-27mm-mxq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4rxr-27mm-mxq9",
            "title": "[@next-auth/upstash-redis-adapter] Upstash Adapter missing token verification",
            "date_modified": "2022-09-30T05:31:33.000Z",
            "date_published": "2022-09-30T05:31:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4rxr-27mm-mxq9"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}