{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>All versions of package fast-string-search are vulnerable to Denial of Service (DoS) when computations are incorrect for non-string inputs. One can cause the V8 to attempt reading from non-permitted locations and cause a segmentation fault due to the violation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22138\">https://nvd.nist.gov/vuln/detail/CVE-2022-22138</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367\">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392367</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4263-q746-94mw\">https://github.com/advisories/GHSA-4263-q746-94mw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4263-q746-94mw",
            "title": "[fast-string-search] Uncontrolled Resource Consumption in fast-string-search",
            "date_modified": "2022-06-20T22:35:50.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4263-q746-94mw"
            }
        },
        {
            "content_html": "<p>This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability. <strong>Note:</strong> This vulnerability derives from an incomplete fix of <a href=\"https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544\">CVE-2020-7792</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21213\">https://nvd.nist.gov/vuln/detail/CVE-2022-21213</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepFillIn.js\">https://github.com/mout/mout/blob/master/src/object/deepFillIn.js</a></li>\n<li><a href=\"https://github.com/mout/mout/blob/master/src/object/deepMixIn.js\">https://github.com/mout/mout/blob/master/src/object/deepMixIn.js</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARS-2870623</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-2870622</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MOUT-2342654\">https://snyk.io/vuln/SNYK-JS-MOUT-2342654</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvv8-xw5f-3f88\">https://github.com/advisories/GHSA-vvv8-xw5f-3f88</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88",
            "title": "[mout] Prototype Pollution in mout",
            "date_modified": "2022-06-20T22:34:00.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvv8-xw5f-3f88"
            }
        },
        {
            "content_html": "<p>All versions of package @discordjs/opus are vulnerable to Denial of Service (DoS) when trying to encode using an encoder with zero channels, or a non-initialized buffer. This leads to a hard crash.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25345\">https://nvd.nist.gov/vuln/detail/CVE-2022-25345</a></li>\n<li><a href=\"https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28\">https://github.com/discordjs/opus/blob/3ca4341ffdd81cf83cec57045e59e228e6017590/src/node-opus.cc%23L28</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100\">https://snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rvgf-69j7-xh78\">https://github.com/advisories/GHSA-rvgf-69j7-xh78</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rvgf-69j7-xh78",
            "title": "[@discordjs/opus] Uncontrolled Resource Consumption in @discordjs/opus",
            "date_modified": "2022-06-20T22:30:05.000Z",
            "date_published": "2022-06-18T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rvgf-69j7-xh78"
            }
        },
        {
            "content_html": "<p>All versions of package fast-string-search are vulnerable to Out-of-bounds Read due to incorrect memory freeing and length calculation for any non-string input as the source. This allows the attacker to read previously allocated memory.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25872\">https://nvd.nist.gov/vuln/detail/CVE-2022-25872</a></li>\n<li><a href=\"https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192\">https://github.com/magiclen/node-fast-string-search/blob/c8dd9fc966abc80b327f509e63360f59e0de9fb5/src/fast-string-search.c%23L192</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368\">https://snyk.io/vuln/SNYK-JS-FASTSTRINGSEARCH-2392368</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmqg-p8f8-3qrw\">https://github.com/advisories/GHSA-hmqg-p8f8-3qrw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmqg-p8f8-3qrw",
            "title": "[fast-string-search] Out-of-bounds Read in fast-string-search",
            "date_modified": "2022-06-20T22:28:15.000Z",
            "date_published": "2022-06-18T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmqg-p8f8-3qrw"
            }
        },
        {
            "content_html": "<p>All versions of package querymen are vulnerable to Prototype Pollution if the parameters of exported function handler(type, name, fn) can be controlled by users without any sanitization. Note: This vulnerability derives from an incomplete fix of <a href=\"https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867\">CVE-2020-7600</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25871\">https://nvd.nist.gov/vuln/detail/CVE-2022-25871</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488\">https://snyk.io/vuln/SNYK-JS-QUERYMEN-2391488</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p23c-p8w2-ww5v\">https://github.com/advisories/GHSA-p23c-p8w2-ww5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p23c-p8w2-ww5v",
            "title": "[querymen] Prototype Pollution in querymen",
            "date_modified": "2022-06-20T22:27:39.000Z",
            "date_published": "2022-06-18T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p23c-p8w2-ww5v"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, invalid requests are now properly handled.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
            "title": "[parse-server] Invalid file request can crash server",
            "date_modified": "2022-06-20T22:25:49.000Z",
            "date_published": "2022-06-20T22:25:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Certain types of invalid files requests are not handled properly and can crash the server. If you are running multiple Parse Server instances in a cluster, the availability impact may be low; if you are running Parse Server as a single instance without redundancy, the availability impact may be high.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, invalid requests are now properly handled.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org/\">community forum</a> or <a href=\"http://chat.parseplatform.org/\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org/\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/parse-community/parse-server/security/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xw6g-jjvf-wwf9\">https://github.com/advisories/GHSA-xw6g-jjvf-wwf9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9",
            "title": "[parse-server] Invalid file request can crash server",
            "date_modified": "2022-06-20T22:25:49.000Z",
            "date_published": "2022-06-20T22:25:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xw6g-jjvf-wwf9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href=\"https://developer.apple.com/news/?id=stttq465\">current root certificate</a> as of May 27, 2022.</p>\n<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"more-information\">More information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org\">community forum</a> or <a href=\"http://chat.parseplatform.org\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31083\">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054\">https://github.com/parse-community/parse-server/pull/8054</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
            "title": "[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ",
            "date_modified": "2022-06-20T21:20:57.000Z",
            "date_published": "2022-06-17T22:09:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>To prevent this, a new <code>rootCertificateUrl</code> property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the <code>rootCertificateUrl</code> property defaults to the URL of the <a href=\"https://developer.apple.com/news/?id=stttq465\">current root certificate</a> as of May 27, 2022.</p>\n<p>Keep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server\">https://github.com/parse-community/parse-server</a></li>\n</ul>\n<h3 id=\"more-information\">More information</h3>\n<ul>\n<li>For questions or comments about this vulnerability visit our <a href=\"http://community.parseplatform.org\">community forum</a> or <a href=\"http://chat.parseplatform.org\">community chat</a></li>\n<li>Report other vulnerabilities at <a href=\"https://report.parseplatform.org\">report.parseplatform.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/parse-community/parse-server/security/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4\">https://github.com/parse-community/parse-server/pull/8054/commits/0cc299f82e367518f2fe7a53b99f3f801a338cf4</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9\">https://github.com/parse-community/parse-server/pull/8054/commits/2084b7c569697a5230e42511799eeac9219db5a9</a></li>\n<li><a href=\"https://developer.apple.com/news/?id=stttq465\">https://developer.apple.com/news/?id=stttq465</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31083\">https://nvd.nist.gov/vuln/detail/CVE-2022-31083</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/pull/8054\">https://github.com/parse-community/parse-server/pull/8054</a></li>\n<li><a href=\"https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1\">https://github.com/parse-community/parse-server/commit/ba2b0a9cb9a568817a114b132a4c2e0911d76df1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rh9j-f5f8-rvgc\">https://github.com/advisories/GHSA-rh9j-f5f8-rvgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc",
            "title": "[parse-server] Authentication bypass vulnerability in Apple Game Center auth adapter ",
            "date_modified": "2022-06-20T21:20:57.000Z",
            "date_published": "2022-06-17T22:09:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rh9j-f5f8-rvgc"
            }
        },
        {
            "content_html": "<p>Kity Minder v1.3.5 was discovered to contain a Server-Side Request Forgery (SSRF) via the init function at ImageCapture.class.php.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31830\">https://nvd.nist.gov/vuln/detail/CVE-2022-31830</a></li>\n<li><a href=\"https://github.com/fex-team/kityminder/issues/345\">https://github.com/fex-team/kityminder/issues/345</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q56h-x9h5-q53c\">https://github.com/advisories/GHSA-q56h-x9h5-q53c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q56h-x9h5-q53c",
            "title": "[kityminder] Server-Side Request Forgery in kityminder",
            "date_modified": "2022-06-17T21:48:56.000Z",
            "date_published": "2022-06-10T00:00:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q56h-x9h5-q53c"
            }
        },
        {
            "content_html": "<p>The nestjs-proxy library did not have a way to block sensitive cookies (e.g. session cookies) from being forwarded to backend services configured by the application developer. This could have led to sensitive cookies being inadvertently exposed to such services that should not see them.</p>\n<p>The patched version now blocks cookies from being forwarded by default. However developers can configure an allow-list of cookie names by using the <code>allowedCookies</code> config setting. Further details of this feature can be found in the library's README on <a href=\"https://github.com/Finastra/finastra-nodejs-libs/tree/develop/libs/proxy\">Github</a> or <a href=\"https://www.npmjs.com/package/@finastra/nestjs-proxy\">NPM</a>.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>\n<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Finastra/finastra-nodejs-libs/pull/232\">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>\n<li><a href=\"https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md\">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv\">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-77mv-4rg7-r8qv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31070\">https://nvd.nist.gov/vuln/detail/CVE-2022-31070</a></li>\n<li><a href=\"https://github.com/Finastra/finastra-nodejs-libs/pull/232\">https://github.com/Finastra/finastra-nodejs-libs/pull/232</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77mv-4rg7-r8qv\">https://github.com/advisories/GHSA-77mv-4rg7-r8qv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77mv-4rg7-r8qv",
            "title": "[@finastra/nestjs-proxy] Potential Sensitive Cookie Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy",
            "date_modified": "2022-06-17T21:43:46.000Z",
            "date_published": "2022-06-17T21:43:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77mv-4rg7-r8qv"
            }
        },
        {
            "content_html": "<p>The nestjs-proxy library did not have a way to control when Authorization headers should should be forwarded for specific backend services configured by the application developer. This could have resulted in sensitive information such as OAuth bearer access tokens being inadvertently exposed to such services that should not see them.</p>\n<p>A new feature has been introduced in the patched version of nestjs-proxy that allows application developers to opt out of forwarding the Authorization headers on a per service basis using the <code>forwardToken</code> config setting. Developers are advised to review the README for this library on Github or NPM for further details on how this configuration can be applied.</p>\n<h3 id=\"patches\">Patches</h3>\n<ul>\n<li>This issue has been fixed in version 0.7.0 of <code>@finastra/nestjs-proxy</code>.</li>\n<li>Users of <code>@ffdc/nestjs-proxy</code> are advised that this package has been deprecated and is no longer being maintained or receiving updates. Please update your package.json file to use <code>@finastra/nestjs-proxy</code> instead.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><p><a href=\"https://github.com/Finastra/finastra-nodejs-libs/pull/231\">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>\n</li>\n<li><p><a href=\"https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md\">https://github.com/Finastra/finastra-nodejs-libs/blob/master/libs/proxy/README.md</a></p>\n<h3 id=\"references-1\">References</h3>\n</li>\n<li><p><a href=\"https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g\">https://github.com/Finastra/finastra-nodejs-libs/security/advisories/GHSA-j562-c3cw-3p5g</a></p>\n</li>\n<li><p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31069\">https://nvd.nist.gov/vuln/detail/CVE-2022-31069</a></p>\n</li>\n<li><p><a href=\"https://github.com/Finastra/finastra-nodejs-libs/pull/231\">https://github.com/Finastra/finastra-nodejs-libs/pull/231</a></p>\n</li>\n<li><p><a href=\"https://github.com/advisories/GHSA-j562-c3cw-3p5g\">https://github.com/advisories/GHSA-j562-c3cw-3p5g</a></p>\n</li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j562-c3cw-3p5g",
            "title": "[@finastra/nestjs-proxy] Potential Authorization Header Exposure in NPM Packages @finastra/nestjs-proxy, @ffdc/nestjs-proxy",
            "date_modified": "2022-06-17T21:39:56.000Z",
            "date_published": "2022-06-17T21:39:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j562-c3cw-3p5g"
            }
        },
        {
            "content_html": "<p>Prototype pollution vulnerability in '@strikeentco/set' version 1.0.0 allows attacker to cause a denial of service and may lead to remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-28267\">https://nvd.nist.gov/vuln/detail/CVE-2020-28267</a></li>\n<li><a href=\"https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60\">https://github.com/strikeentco/set/commit/102cc6b2e1d1e0c928ced87e75df759d5541ff60</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2020-28267</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wwg2-2crq-6grr\">https://github.com/advisories/GHSA-wwg2-2crq-6grr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wwg2-2crq-6grr",
            "title": "[@strikeentco/set] Prototype pollution in @strikeentco/set",
            "date_modified": "2022-06-17T21:38:53.000Z",
            "date_published": "2022-05-24T17:34:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wwg2-2crq-6grr"
            }
        },
        {
            "content_html": "<p>s2k.js in OpenPGP.js will decrypt arbitrary messages regardless of passphrase for crafted PGP keys which allows remote attackers to bypass authentication if message decryption is used as an authentication mechanism via a crafted symmetrically encrypted PGP message.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-8013\">https://nvd.nist.gov/vuln/detail/CVE-2015-8013</a></li>\n<li><a href=\"https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29\">https://github.com/openpgpjs/openpgpjs/commit/668a9bbe7033f3f475576209305eb57a54306d29</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/10/30/5\">http://www.openwall.com/lists/oss-security/2015/10/30/5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qmvq-f3fj-m3wg\">https://github.com/advisories/GHSA-qmvq-f3fj-m3wg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qmvq-f3fj-m3wg",
            "title": "[openpgp] OpenPGP 1.2.0 and earlier decrypts arbitrary messages",
            "date_modified": "2022-06-17T21:22:32.000Z",
            "date_published": "2022-05-17T02:15:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qmvq-f3fj-m3wg"
            }
        },
        {
            "content_html": "<p>giting version prior to 0.0.8 allows execution of arbritary commands. The first argument <code>repo</code> of function <code>pull()</code> is executed by the package without any validation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10802\">https://nvd.nist.gov/vuln/detail/CVE-2019-10802</a></li>\n<li><a href=\"https://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0\">https://github.com/MangoRaft/git/commit/9be41081f547d3dcef25e7d7c957bc2a3be2dfe0</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-GITING-559008\">https://snyk.io/vuln/SNYK-JS-GITING-559008</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-53xj-v576-3ch2\">https://github.com/advisories/GHSA-53xj-v576-3ch2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-53xj-v576-3ch2",
            "title": "[giting] OS Command Injection in giting",
            "date_modified": "2022-06-17T20:44:21.000Z",
            "date_published": "2021-04-13T15:22:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-53xj-v576-3ch2"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A <a href=\"https://www.cve.org/CVERecord?id=CVE-2022-24785\">vulnerability</a> in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in 5.2.3, all 5.x sites should update as soon as possible.\nFixed in 4.48.2, all 4.x sites should update as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Patched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.</p>\n<p>As a workaround, if for any reason you cannot update your Ghost instance, you can block the <code>POST /ghost/api/admin/settings/</code> endpoint, which will also disable updating settings for your site.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@ghost.org\">security@ghost.org</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>devx00 - <a href=\"https://twitter.com/devx00\">https://twitter.com/devx00</a><h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8\">https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7v28-g2pq-ggg8\">https://github.com/advisories/GHSA-7v28-g2pq-ggg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7v28-g2pq-ggg8",
            "title": "[ghost] Remote code execution in locale setting change",
            "date_modified": "2022-06-17T01:16:12.000Z",
            "date_published": "2022-06-17T01:16:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7v28-g2pq-ggg8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A <a href=\"https://www.cve.org/CVERecord?id=CVE-2022-24785\">vulnerability</a> in an upstream library means an authenticated attacker can abuse locale input to execute arbitrary commands from a file that has previously been uploaded using the file upload functionality in the post editor.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in 5.2.3, all 5.x sites should update as soon as possible.\nFixed in 4.48.2, all 4.x sites should update as soon as possible.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Patched versions of Ghost add validation to the locale input to prevent execution of arbitrary files. Updating Ghost is the quickest complete solution.</p>\n<p>As a workaround, if for any reason you cannot update your Ghost instance, you can block the <code>POST /ghost/api/admin/settings/</code> endpoint, which will also disable updating settings for your site.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@ghost.org\">security@ghost.org</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<ul>\n<li>devx00 - <a href=\"https://twitter.com/devx00\">https://twitter.com/devx00</a><h3 id=\"references\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8\">https://github.com/TryGhost/Ghost/security/advisories/GHSA-7v28-g2pq-ggg8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7v28-g2pq-ggg8\">https://github.com/advisories/GHSA-7v28-g2pq-ggg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7v28-g2pq-ggg8",
            "title": "[ghost] Remote code execution in locale setting change",
            "date_modified": "2022-06-17T01:16:12.000Z",
            "date_published": "2022-06-17T01:16:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7v28-g2pq-ggg8"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when <code>techdocs.publisher.type</code> is set to <code>local</code>.</p>\n<p>This vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Those affected are advised to upgrade to <code>@backstage/plugin-techdocs-node</code> version <code>1.1.2</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing <code>..</code></p>\n\n\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><p>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a></p>\n</li>\n<li><p>Visit our chat, linked to in the <a href=\"https://github.com/backstage/backstage\">Backstage README</a></p>\n<h3 id=\"references\">References</h3>\n</li>\n<li><p><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9\">https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9</a></p>\n</li>\n<li><p><a href=\"https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa\">https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa</a></p>\n</li>\n<li><p><a href=\"https://github.com/advisories/GHSA-4jqc-jvh2-pxg9\">https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</a></p>\n</li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jqc-jvh2-pxg9",
            "title": "[@backstage/techdocs-common] Path traversal for local publishers in TechDocs backend",
            "date_modified": "2022-06-17T01:11:11.000Z",
            "date_published": "2022-06-17T01:11:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jqc-jvh2-pxg9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious actor with the ability to register entities in the Software Catalog is able to write files to arbitrary paths on the techdocs backend host instance when <code>techdocs.publisher.type</code> is set to <code>local</code>.</p>\n<p>This vulnerability is mitigated by the fact that the Software Catalog must be configured with non-standard field format validators and/or non-standard entity policies.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Those affected are advised to upgrade to <code>@backstage/plugin-techdocs-node</code> version <code>1.1.2</code> or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If patching or upgrading is not possible, it would be sufficient to update any custom Catalog field format validators and/or custom entity policies to disallow entity names, kinds, and namespaces containing <code>..</code></p>\n\n\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><p>Open an issue in the <a href=\"https://github.com/backstage/backstage\">Backstage repository</a></p>\n</li>\n<li><p>Visit our chat, linked to in the <a href=\"https://github.com/backstage/backstage\">Backstage README</a></p>\n<h3 id=\"references\">References</h3>\n</li>\n<li><p><a href=\"https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9\">https://github.com/backstage/backstage/security/advisories/GHSA-4jqc-jvh2-pxg9</a></p>\n</li>\n<li><p><a href=\"https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa\">https://github.com/backstage/backstage/commit/429c9f9daa5654dd1b996aa85f7264eb23a2e4fa</a></p>\n</li>\n<li><p><a href=\"https://github.com/advisories/GHSA-4jqc-jvh2-pxg9\">https://github.com/advisories/GHSA-4jqc-jvh2-pxg9</a></p>\n</li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4jqc-jvh2-pxg9",
            "title": "[@backstage/plugin-techdocs-node] Path traversal for local publishers in TechDocs backend",
            "date_modified": "2022-06-17T01:11:11.000Z",
            "date_published": "2022-06-17T01:11:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4jqc-jvh2-pxg9"
            }
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p><code>Undici.ProxyAgent</code> never verifies the remote server's certificate, and always exposes all request &amp; response data to the proxy. This unexpectedly means that proxies can MitM all HTTPS traffic, and if the proxy's URL is HTTP then it also means that nominally HTTPS requests are actually sent via plain-text HTTP between Undici and the proxy server.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This affects all use of HTTPS via HTTP proxy using <strong><code>Undici.ProxyAgent</code></strong>  with Undici or Node's global <code>fetch</code>. In this case, it removes all HTTPS security from all requests sent using Undici's <code>ProxyAgent</code>, allowing trivial MitM attacks by anybody on the network path between the client and the target server (local network users, your ISP, the proxy, the target server's ISP, etc).\nThis less seriously affects HTTPS via HTTPS proxies. When you send HTTPS via a proxy to a remote server, the proxy can freely view or modify all HTTPS traffic unexpectedly (but only the proxy). </p>\n<p>Example:</p>\n<pre><code class=\"language-js\">setGlobalDispatcher(new ProxyAgent('http://localhost:8000/')) // HTTP Proxy\n// or\nundici.request('https://example.com/', { dispatcher: new ProxyAgent('http://localhost:8000') }) // HTTP Proxy\n// or\nfetch('https://example.com/', { dispatcher: new ProxyAgent('http://localhost:8000') }) // HTTP Proxy\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue was patched in Undici v5.5.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>At the time of writing, the only workaround is to not use <code>ProxyAgent</code> as a dispatcher for TLS Connections.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/nodejs/undici/issues\">undici repository</a></li>\n<li>To make a report, follow the <a href=\"https://github.com/nodejs/node/blob/HEAD/SECURITY.md\">SECURITY</a> document</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-pgw7-wx7w-2w33\">https://github.com/nodejs/undici/security/advisories/GHSA-pgw7-wx7w-2w33</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgw7-wx7w-2w33\">https://github.com/advisories/GHSA-pgw7-wx7w-2w33</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgw7-wx7w-2w33",
            "title": "[undici] ProxyAgent vulnerable to MITM",
            "date_modified": "2022-06-17T01:02:30.000Z",
            "date_published": "2022-06-17T01:02:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgw7-wx7w-2w33"
            }
        }
    ]
}