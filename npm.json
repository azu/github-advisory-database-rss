{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3765\">https://nvd.nist.gov/vuln/detail/CVE-2021-3765</a></li>\n<li><a href=\"https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1\">https://github.com/validatorjs/validator.js/commit/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1</a></li>\n<li><a href=\"https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9\">https://huntr.dev/bounties/c37e975c-21a3-4c5f-9b57-04d63b28cfc9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qgmg-gppg-76g5\">https://github.com/advisories/GHSA-qgmg-gppg-76g5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qgmg-gppg-76g5",
            "title": "[validator] Inefficient Regular Expression Complexity in validator.js",
            "date_modified": "2023-07-07T21:50:05.000Z",
            "date_published": "2021-11-03T17:34:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qgmg-gppg-76g5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in <code>rejectPublicSuffixes=false</code> mode. This issue arises from the manner in which the objects are initialized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26136\">https://nvd.nist.gov/vuln/detail/CVE-2023-26136</a></li>\n<li><a href=\"https://github.com/salesforce/tough-cookie/issues/282\">https://github.com/salesforce/tough-cookie/issues/282</a></li>\n<li><a href=\"https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e\">https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e</a></li>\n<li><a href=\"https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3\">https://github.com/salesforce/tough-cookie/releases/tag/v4.1.3</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873\">https://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-72xf-g2v4-qvf3\">https://github.com/advisories/GHSA-72xf-g2v4-qvf3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-72xf-g2v4-qvf3",
            "title": "[tough-cookie] tough-cookie Prototype Pollution vulnerability",
            "date_modified": "2023-07-07T21:39:59.000Z",
            "date_published": "2023-07-01T06:30:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-72xf-g2v4-qvf3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Our <code>meow</code> dependency (which we use for our CLI) depended on <code>semver@5.7.1 </code>. A vulnerability in this version of <code>semver</code> was recently identified and surfaced by <code>npm audit</code>:</p>\n<p>Regular Expression Denial of Service - <a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Original post by the reporter:</p>\n<p>\"my npm audit show the report</p>\n<p>semver  &lt;7.5.2\nSeverity: moderate\nsemver vulnerable to Regular Expression Denial of Service - <a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a>\nNo fix available</p>\n<p>And my dependencies tree for semver show your package</p>\n<p>├─┬ <a href=\"mailto:stylelint@15.9.0\">stylelint@15.9.0</a>\n│   └─┬ <a href=\"mailto:meow@9.0.0\">meow@9.0.0</a>\n│        └─┬ <a href=\"mailto:read-pkg-up@7.0.1\">read-pkg-up@7.0.1</a>\n│             └─┬ <a href=\"mailto:read-pkg@5.2.0\">read-pkg@5.2.0</a>\n│                  └─┬ <a href=\"mailto:normalize-package-data@2.5.0\">normalize-package-data@2.5.0</a>\n│                       └── <a href=\"mailto:semver@5.7.1\">semver@5.7.1</a> deduped</p>\n<p>I found that <a href=\"mailto:meow@10.x.x\">meow@10.x.x</a> contains normalize-package-data@5 and I can fix this vulnerability because it uses semver@7.  But I can't update meow to the new major version because your package doesn't allow it.\"</p>\n<p>Update your package to use the 'meow' version &gt;=10\"</p>\n<h3 id=\"poc\">PoC</h3>\n<p>N/A</p>\n<h3 id=\"impact\">Impact</h3>\n<p>We anticipate the impact to be low as Stylelint is a dev tool and <code>meow</code> is only used on the CLI pathway. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stylelint/stylelint/security/advisories/GHSA-f7xj-rg7h-mc87\">https://github.com/stylelint/stylelint/security/advisories/GHSA-f7xj-rg7h-mc87</a></li>\n<li><a href=\"https://github.com/stylelint/stylelint/pull/7043\">https://github.com/stylelint/stylelint/pull/7043</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n<li><a href=\"https://github.com/stylelint/stylelint/releases/tag/15.10.1\">https://github.com/stylelint/stylelint/releases/tag/15.10.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f7xj-rg7h-mc87\">https://github.com/advisories/GHSA-f7xj-rg7h-mc87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f7xj-rg7h-mc87",
            "title": "[stylelint] Stylelint has vulnerability in semver dependency",
            "date_modified": "2023-07-07T20:32:56.000Z",
            "date_published": "2023-07-07T20:32:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f7xj-rg7h-mc87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>protobuf.js (aka protobufjs) 6.10.0 until 7.2.4 allows Prototype Pollution, a different vulnerability than CVE-2022-25878. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: (1) using the function parse to parse protobuf messages on the fly, (2) loading .proto files by using load/loadSync functions, or (3) providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty. NOTE: this CVE Record is about <code>Object.constructor.prototype.&lt;new-property&gt; = ...;</code> whereas CVE-2022-25878 was about <code>Object.__proto__.&lt;new-property&gt; = ...;</code> instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36665\">https://nvd.nist.gov/vuln/detail/CVE-2023-36665</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/pull/1899\">https://github.com/protobufjs/protobuf.js/pull/1899</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d\">https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4\">https://github.com/protobufjs/protobuf.js/compare/protobufjs-v7.2.3...protobufjs-v7.2.4</a></li>\n<li><a href=\"https://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4\">https://github.com/protobufjs/protobuf.js/releases/tag/protobufjs-v7.2.4</a></li>\n<li><a href=\"https://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665\">https://www.code-intelligence.com/blog/cve-protobufjs-prototype-pollution-cve-2023-36665</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h755-8qp9-cq85\">https://github.com/advisories/GHSA-h755-8qp9-cq85</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h755-8qp9-cq85",
            "title": "[protobufjs] protobufjs Prototype Pollution vulnerability",
            "date_modified": "2023-07-07T20:19:03.000Z",
            "date_published": "2023-07-05T15:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h755-8qp9-cq85"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25883\">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/564\">https://github.com/npm/node-semver/pull/564</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L138\">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L160\">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
            "title": "[semver] semver vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-07-07T18:57:56.000Z",
            "date_published": "2023-06-21T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash.defaultsdeep] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash.mergewith] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash.merge] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash.template] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash-amd] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash-es] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>lodash</code> before 4.17.12 are vulnerable to Prototype Pollution.  The function <code>defaultsDeep</code> allows a malicious user to modify the prototype of <code>Object</code> via <code>{constructor: {prototype: {...}}}</code> causing the addition or modification of an existing property that will exist on all objects.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 4.17.12 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/pull/4336\">https://github.com/lodash/lodash/pull/4336</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10744\">https://nvd.nist.gov/vuln/detail/CVE-2019-10744</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-LODASH-450202\">https://snyk.io/vuln/SNYK-JS-LODASH-450202</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1065\">https://www.npmjs.com/advisories/1065</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3024\">https://access.redhat.com/errata/RHSA-2019:3024</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20191004-0005/\">https://security.netapp.com/advisory/ntap-20191004-0005/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K47105354?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf85-cpcp-j695\">https://github.com/advisories/GHSA-jf85-cpcp-j695</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695",
            "title": "[lodash] Prototype Pollution in lodash",
            "date_modified": "2023-07-07T18:54:15.000Z",
            "date_published": "2019-07-10T19:45:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf85-cpcp-j695"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>minimist</code> are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of <code>Object</code>, causing the addition or modification of an existing property that will exist on all objects.<br>Parsing the argument <code>--__proto__.y=Polluted</code> adds a <code>y</code> property with value <code>Polluted</code> to all objects. The argument <code>--__proto__=Polluted</code> raises and uncaught error and crashes the application.<br>This is exploitable if attackers have control over the arguments being passed to <code>minimist</code>.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Upgrade to versions 0.2.1, 1.2.3 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7598\">https://nvd.nist.gov/vuln/detail/CVE-2020-7598</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html\">http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1179\">https://www.npmjs.com/advisories/1179</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68\">https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab\">https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95\">https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94\">https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh95-rmgr-6w4m\">https://github.com/advisories/GHSA-vh95-rmgr-6w4m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh95-rmgr-6w4m",
            "title": "[minimist] Prototype Pollution in minimist",
            "date_modified": "2023-07-07T18:36:02.000Z",
            "date_published": "2020-04-03T21:48:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh95-rmgr-6w4m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Affected versions of <code>minimist</code> are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of <code>Object</code>, causing the addition or modification of an existing property that will exist on all objects.<br>Parsing the argument <code>--__proto__.y=Polluted</code> adds a <code>y</code> property with value <code>Polluted</code> to all objects. The argument <code>--__proto__=Polluted</code> raises and uncaught error and crashes the application.<br>This is exploitable if attackers have control over the arguments being passed to <code>minimist</code>.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Upgrade to versions 0.2.1, 1.2.3 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7598\">https://nvd.nist.gov/vuln/detail/CVE-2020-7598</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\">https://snyk.io/vuln/SNYK-JS-MINIMIST-559764</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html\">http://lists.opensuse.org/opensuse-security-announce/2020-06/msg00024.html</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/1179\">https://www.npmjs.com/advisories/1179</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68\">https://github.com/minimistjs/minimist/commit/10bd4cdf49d9686d48214be9d579a9cdfda37c68</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab\">https://github.com/minimistjs/minimist/commit/38a4d1caead72ef99e824bb420a2528eec03d9ab</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95\">https://github.com/minimistjs/minimist/commit/4cf1354839cb972e38496d35e12f806eea92c11f#diff-a1e0ee62c91705696ddb71aa30ad4f95</a></li>\n<li><a href=\"https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94\">https://github.com/minimistjs/minimist/commit/63e7ed05aa4b1889ec2f3b196426db4500cbda94</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh95-rmgr-6w4m\">https://github.com/advisories/GHSA-vh95-rmgr-6w4m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh95-rmgr-6w4m",
            "title": "[minimist] Prototype Pollution in minimist",
            "date_modified": "2023-07-07T18:36:02.000Z",
            "date_published": "2020-04-03T21:48:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh95-rmgr-6w4m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43138\">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/internal/iterator.js\">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>\n<li><a href=\"https://jsfiddle.net/oz5twjd9/\">https://jsfiddle.net/oz5twjd9/</a></li>\n<li><a href=\"https://github.com/caolan/async/pull/1828\">https://github.com/caolan/async/pull/1828</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>\n<li><a href=\"https://github.com/caolan/async/compare/v2.6.3...v2.6.4\">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwr7-v2mv-hh25\">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25",
            "title": "[async] Prototype Pollution in async",
            "date_modified": "2023-07-07T18:19:47.000Z",
            "date_published": "2022-04-07T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the <code>mapValues()</code> method.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43138\">https://nvd.nist.gov/vuln/detail/CVE-2021-43138</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d\">https://github.com/caolan/async/commit/e1ecdbf79264f9ab488c7799f4c76996d5dca66d</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/internal/iterator.js\">https://github.com/caolan/async/blob/master/lib/internal/iterator.js</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js\">https://github.com/caolan/async/blob/master/lib/mapValuesLimit.js</a></li>\n<li><a href=\"https://jsfiddle.net/oz5twjd9/\">https://jsfiddle.net/oz5twjd9/</a></li>\n<li><a href=\"https://github.com/caolan/async/pull/1828\">https://github.com/caolan/async/pull/1828</a></li>\n<li><a href=\"https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2\">https://github.com/caolan/async/commit/8f7f90342a6571ba1c197d747ebed30c368096d2</a></li>\n<li><a href=\"https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264\">https://github.com/caolan/async/blob/v2.6.4/CHANGELOG.md#v264</a></li>\n<li><a href=\"https://github.com/caolan/async/compare/v2.6.3...v2.6.4\">https://github.com/caolan/async/compare/v2.6.3...v2.6.4</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MTEUUTNIEBHGKUKKLNUZSV7IEP6IP3Q3/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UM6XJ73Q3NAM5KSGCOKJ2ZIA6GUWUJLK/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fwr7-v2mv-hh25\">https://github.com/advisories/GHSA-fwr7-v2mv-hh25</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25",
            "title": "[async] Prototype Pollution in async",
            "date_modified": "2023-07-07T18:19:47.000Z",
            "date_published": "2022-04-07T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fwr7-v2mv-hh25"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code class=\"language-js\">const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\"isAdmin\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2023-07-07T18:17:19.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code class=\"language-js\">const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\"isAdmin\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2023-07-07T18:17:19.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in jQuery v.2.2.0 until v.3.5.0 allows a remote attacker to execute arbitrary code via the <code>&lt;options&gt;</code> element.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-23064\">https://nvd.nist.gov/vuln/detail/CVE-2020-23064</a></li>\n<li><a href=\"https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\">https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-JQUERY-565129\">https://snyk.io/vuln/SNYK-JS-JQUERY-565129</a></li>\n<li><a href=\"https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77\">https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410\">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#410</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440\">https://github.com/rails/jquery-rails/blob/master/CHANGELOG.md#440</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979\">https://github.com/rails/jquery-rails/blob/v4.3.5/vendor/assets/javascripts/jquery3.js#L5979</a></li>\n<li><a href=\"https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162\">https://github.com/rails/jquery-rails/blob/v4.4.0/vendor/assets/javascripts/jquery3.js#L6162</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-257q-pv89-v3xv\">https://github.com/advisories/GHSA-257q-pv89-v3xv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-257q-pv89-v3xv",
            "title": "[jquery] jQuery Cross Site Scripting vulnerability",
            "date_modified": "2023-07-07T15:08:27.000Z",
            "date_published": "2023-06-26T21:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-257q-pv89-v3xv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>is.js is a general-purpose check library. Versions 0.9.0 and prior contain one or more regular expressions that are vulnerable to Regular Expression Denial of Service (ReDoS). is.js uses a regex copy-pasted from a gist to validate URLs. Trying to validate a malicious string can cause the regex to loop \"forever.\" This vulnerability was found using a CodeQL query which identifies inefficient regular expressions. is.js has no patch for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26302\">https://nvd.nist.gov/vuln/detail/CVE-2020-26302</a></li>\n<li><a href=\"https://github.com/arasatasaygin/is.js/issues/320\">https://github.com/arasatasaygin/is.js/issues/320</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js\">https://securitylab.github.com/advisories/GHSL-2020-295-redos-is.js</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pvrw-g6fx-mcx2\">https://github.com/advisories/GHSA-pvrw-g6fx-mcx2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pvrw-g6fx-mcx2",
            "title": "[is_js] is_js vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-07-06T21:46:36.000Z",
            "date_published": "2023-07-06T19:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pvrw-g6fx-mcx2"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}