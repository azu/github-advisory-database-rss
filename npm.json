{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A Parse Pointer can be used to access internal Parse Server classes. It can also be used to circumvent the <code>beforeFind</code> query trigger which can be an additional vulnerability for deployments where the <code>beforeFind</code> trigger is used as a security layer to modify an incoming query.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was fixed by implementing a patch in the internal query pipeline to prevent a Parse Pointer to be used to access internal Parse Server classes or circumvent the <code>beforeFind</code> trigger.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no known workaround to prevent a Parse Pointer to be used to access internal Parse Server classes. A workaround if a <code>beforeFind</code> trigger is used as a security layer is to instead use the Parse Server provided <a href=\"https://docs.parseplatform.org/parse-server/guide/#security\">security layers</a> to manage access levels with Class-Level Permissions and Object-Level Access Control.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub security advisory: <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n<li>Patched in Parse Server 6.x: <a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.2\">https://github.com/parse-community/parse-server/releases/tag/6.2.2</a></li>\n<li>Patched in Parse Server 5.x (LTS): <a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.5\">https://github.com/parse-community/parse-server/releases/tag/5.5.5</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fcv6-fg5r-jm9q",
            "title": "[parse-server] Trigger `beforeFind` not invoked in internal query pipeline when fetching pointer",
            "date_modified": "2023-09-04T22:40:42.000Z",
            "date_published": "2023-09-04T22:40:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fcv6-fg5r-jm9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A Parse Pointer can be used to access internal Parse Server classes. It can also be used to circumvent the <code>beforeFind</code> query trigger which can be an additional vulnerability for deployments where the <code>beforeFind</code> trigger is used as a security layer to modify an incoming query.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was fixed by implementing a patch in the internal query pipeline to prevent a Parse Pointer to be used to access internal Parse Server classes or circumvent the <code>beforeFind</code> trigger.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no known workaround to prevent a Parse Pointer to be used to access internal Parse Server classes. A workaround if a <code>beforeFind</code> trigger is used as a security layer is to instead use the Parse Server provided <a href=\"https://docs.parseplatform.org/parse-server/guide/#security\">security layers</a> to manage access levels with Class-Level Permissions and Object-Level Access Control.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>GitHub security advisory: <a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n<li>Patched in Parse Server 6.x: <a href=\"https://github.com/parse-community/parse-server/releases/tag/6.2.2\">https://github.com/parse-community/parse-server/releases/tag/6.2.2</a></li>\n<li>Patched in Parse Server 5.x (LTS): <a href=\"https://github.com/parse-community/parse-server/releases/tag/5.5.5\">https://github.com/parse-community/parse-server/releases/tag/5.5.5</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/parse-community/parse-server/security/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fcv6-fg5r-jm9q\">https://github.com/advisories/GHSA-fcv6-fg5r-jm9q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fcv6-fg5r-jm9q",
            "title": "[parse-server] Trigger `beforeFind` not invoked in internal query pipeline when fetching pointer",
            "date_modified": "2023-09-04T22:40:42.000Z",
            "date_published": "2023-09-04T22:40:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fcv6-fg5r-jm9q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper input validation in the <code>init</code> function allows arbitrary javascript to be executed using  the <code>javascript:</code> prefix</p>\n<pre><code class=\"language-ts\">    SSO.init('javascript:alert(\"javascript successfully injected\")')\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability was patched on version <code>0.1.0</code></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>This vulnerability can be prevented if user input correctly sanitized or there is no user input pass to the <code>init</code> function</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/decentraland/single-sign-on-client/security/advisories/GHSA-vp4f-wxgw-7x8x\">https://github.com/decentraland/single-sign-on-client/security/advisories/GHSA-vp4f-wxgw-7x8x</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41049\">https://nvd.nist.gov/vuln/detail/CVE-2023-41049</a></li>\n<li><a href=\"https://github.com/decentraland/single-sign-on-client/pull/2\">https://github.com/decentraland/single-sign-on-client/pull/2</a></li>\n<li><a href=\"https://github.com/decentraland/single-sign-on-client/commit/bd20ea9533d0cda30809d929db85b1b76cef855a\">https://github.com/decentraland/single-sign-on-client/commit/bd20ea9533d0cda30809d929db85b1b76cef855a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vp4f-wxgw-7x8x\">https://github.com/advisories/GHSA-vp4f-wxgw-7x8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vp4f-wxgw-7x8x",
            "title": "[@dcl/single-sign-on-client] Improper Neutralization of Script in Attributes in @dcl/single-sign-on-client",
            "date_modified": "2023-09-04T16:36:28.000Z",
            "date_published": "2023-09-04T16:36:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vp4f-wxgw-7x8x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25883\">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/564\">https://github.com/npm/node-semver/pull/564</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L138\">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L160\">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/585\">https://github.com/npm/node-semver/pull/585</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\">https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/593\">https://github.com/npm/node-semver/pull/593</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\">https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
            "title": "[semver] semver vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-09-01T23:43:55.000Z",
            "date_published": "2023-06-21T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25883\">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/564\">https://github.com/npm/node-semver/pull/564</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L138\">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L160\">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/585\">https://github.com/npm/node-semver/pull/585</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\">https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/593\">https://github.com/npm/node-semver/pull/593</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\">https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
            "title": "[semver] semver vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-09-01T23:43:55.000Z",
            "date_published": "2023-06-21T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25883\">https://nvd.nist.gov/vuln/detail/CVE-2022-25883</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/564\">https://github.com/npm/node-semver/pull/564</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441\">https://github.com/npm/node-semver/commit/717534ee353682f3bcf33e60a8af4292626d4441</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795\">https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104\">https://github.com/npm/node-semver/blob/main/classes/range.js#L97-L104</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L138\">https://github.com/npm/node-semver/blob/main/internal/re.js#L138</a></li>\n<li><a href=\"https://github.com/npm/node-semver/blob/main/internal/re.js#L160\">https://github.com/npm/node-semver/blob/main/internal/re.js#L160</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/585\">https://github.com/npm/node-semver/pull/585</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c\">https://github.com/npm/node-semver/commit/928e56d21150da0413a3333a3148b20e741a920c</a></li>\n<li><a href=\"https://github.com/npm/node-semver/pull/593\">https://github.com/npm/node-semver/pull/593</a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\">https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c2qf-rxjj-qqgw\">https://github.com/advisories/GHSA-c2qf-rxjj-qqgw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw",
            "title": "[semver] semver vulnerable to Regular Expression Denial of Service",
            "date_modified": "2023-09-01T23:43:55.000Z",
            "date_published": "2023-06-21T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c2qf-rxjj-qqgw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The is-svg package 2.1.0 through 4.2.1 for Node.js uses a regular expression that is vulnerable to Regular Expression Denial of Service (ReDoS). If an attacker provides a malicious string, is-svg will get stuck processing the input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28092\">https://nvd.nist.gov/vuln/detail/CVE-2021-28092</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/commit/01f8a087fab8a69c3ac9085fbb16035907ab6a5b\">https://github.com/sindresorhus/is-svg/commit/01f8a087fab8a69c3ac9085fbb16035907ab6a5b</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/releases\">https://github.com/sindresorhus/is-svg/releases</a></li>\n<li><a href=\"https://github.com/sindresorhus/is-svg/releases/tag/v4.2.2\">https://github.com/sindresorhus/is-svg/releases/tag/v4.2.2</a></li>\n<li><a href=\"https://www.npmjs.com/package/is-svg\">https://www.npmjs.com/package/is-svg</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210513-0008/\">https://security.netapp.com/advisory/ntap-20210513-0008/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r28-3m3f-r2pr\">https://github.com/advisories/GHSA-7r28-3m3f-r2pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r28-3m3f-r2pr",
            "title": "[is-svg] Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T22:40:43.000Z",
            "date_published": "2021-03-19T21:25:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r28-3m3f-r2pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The issue involves a security vulnerability in Vite, where the server options can be bypassed using a double forward slash (<code>//</code>). This vulnerability poses a potential security risk as it can allow unauthorized access to sensitive directories and files. This document outlines the steps to address and mitigate this issue. Adding Extra References : ## Steps to Fix. <strong>Update Vite</strong>:Ensure that you are using the latest version of Vite. Security issues like this are often fixed in newer releases.\\n\\n2. <strong>Secure the Server Configuration</strong>:In your <code>vite.config.js</code> file, review and update the server configuration options to restrict access to unauthorized requests or directories. For example:```javascript\\n // vite.config.js\\n export default { server: {\\n fs: {\\n deny: ['private-directory'] // Restrict access to specific directories</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Only users explicitly exposing the Vite dev server to the network (using <code>--host</code> or <a href=\"https://vitejs.dev/config/server-options.html#server-host\"><code>server.host</code> config option</a>) are affected, and only files in the immediate Vite project root folder could be exposed.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in <a href=\"mailto:vite@4.3.9\">vite@4.3.9</a>, <a href=\"mailto:vite@4.2.3\">vite@4.2.3</a>, <a href=\"mailto:vite@4.1.5\">vite@4.1.5</a>, <a href=\"mailto:vite@4.0.5\">vite@4.0.5</a>\nAnd in the latest minors of the previous two majors: <a href=\"mailto:vite@3.2.7\">vite@3.2.7</a>, <a href=\"mailto:vite@2.9.16\">vite@2.9.16</a></p>\n<h3 id=\"details\">Details</h3>\n<p>Vite serve the application with under the root-path of the project while running on the dev mode. By default, vite using server options fs.deny to protected the sensitive information of the file. But, with simply double forward-slash, we can bypass this fs restriction. </p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>Create a new latest project of vite using any package manager. (here I'm using react and vue templates for tested and pnpm)</li>\n<li>Serve the application on dev mode using pnpm run dev.</li>\n<li>Directly access the file from url using double forward-slash (<code>//</code>) (e.g: <code>//.env</code>, <code>//.env.local</code>)</li>\n<li>Server Options <code>fs.deny</code> restrict successfully bypassed.</li>\n</ol>\n<p>Proof Images:\n<img alt=\"proof-1\" src=\"https://user-images.githubusercontent.com/30733517/241105344-6ecbc7f6-57b7-45c7-856a-6421a577dda1.png\">\n<img alt=\"proof-2\" src=\"https://user-images.githubusercontent.com/30733517/241105349-ab9561e7-8aff-4f29-97f9-b784e673c122.png\"></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67\">https://github.com/vitejs/vite/security/advisories/GHSA-353f-5xf4-qw67</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34092\">https://nvd.nist.gov/vuln/detail/CVE-2023-34092</a></li>\n<li><a href=\"https://github.com/vitejs/vite/pull/13348\">https://github.com/vitejs/vite/pull/13348</a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32\">https://github.com/vitejs/vite/commit/813ddd6155c3d54801e264ba832d8347f6f66b32</a></li>\n<li><a href=\"https://security.snyk.io/package/npm/vite/3.2.0-beta.4\">https://security.snyk.io/package/npm/vite/3.2.0-beta.4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-353f-5xf4-qw67\">https://github.com/advisories/GHSA-353f-5xf4-qw67</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67",
            "title": "[vite] Vite Server Options (server.fs.deny) can be bypassed using double forward-slash (//)",
            "date_modified": "2023-09-01T21:30:15.000Z",
            "date_published": "2023-06-06T02:01:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-353f-5xf4-qw67"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-37599\">https://nvd.nist.gov/vuln/detail/CVE-2022-37599</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/211\">https://github.com/webpack/loader-utils/issues/211</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L38</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83\">https://github.com/webpack/loader-utils/blob/d9f4e23cf411d8556f8bac2d3bf05a6e0103b568/lib/interpolateName.js#L83</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/issues/216\">https://github.com/webpack/loader-utils/issues/216</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa\">https://github.com/webpack/loader-utils/commit/17cbf8fa8989c1cb45bdd2997aa524729475f1fa</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb</a></li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1\">https://github.com/webpack/loader-utils/commit/d2d752d59629daee38f34b24307221349c490eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhq3-ff78-jv3g\">https://github.com/advisories/GHSA-hhq3-ff78-jv3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g",
            "title": "[loader-utils] loader-utils is vulnerable to Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:13:37.000Z",
            "date_published": "2022-10-12T12:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhq3-ff78-jv3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>npm <code>ssri</code> 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-27290\">https://nvd.nist.gov/vuln/detail/CVE-2021-27290</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2\">https://github.com/npm/ssri/commit/76e223317d971f19e4db8191865bdad5edee40d2</a></li>\n<li><a href=\"https://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf\">https://doyensec.com/resources/Doyensec_Advisory_ssri_redos.pdf</a></li>\n<li><a href=\"https://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf\">https://github.com/yetingli/SaveResults/blob/main/pdf/ssri-redos.pdf</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\">https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1</a></li>\n<li><a href=\"https://www.npmjs.com/package/ssri\">https://www.npmjs.com/package/ssri</a></li>\n<li><a href=\"https://github.com/npm/ssri/pull/20#issuecomment-842677644\">https://github.com/npm/ssri/pull/20#issuecomment-842677644</a></li>\n<li><a href=\"https://npmjs.com\">https://npmjs.com</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538\">https://github.com/npm/ssri/commit/809c84d09ea87c3857fa171d42914586899d4538</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx3p-948g-6vhq\">https://github.com/advisories/GHSA-vx3p-948g-6vhq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx3p-948g-6vhq",
            "title": "[ssri] Regular Expression Denial of Service (ReDoS)",
            "date_modified": "2023-09-01T21:10:33.000Z",
            "date_published": "2021-03-19T21:24:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx3p-948g-6vhq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3807\">https://nvd.nist.gov/vuln/detail/CVE-2021-3807</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\">https://github.com/chalk/ansi-regex/commit/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9</a></li>\n<li><a href=\"https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994\">https://huntr.dev/bounties/5b3cf33b-ede0-4398-9974-800876dfd994</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-924086311</a></li>\n<li><a href=\"https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908\">https://app.snyk.io/vuln/SNYK-JS-ANSIREGEX-1583908</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774\">https://github.com/chalk/ansi-regex/issues/38#issuecomment-925924774</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/releases/tag/v6.0.1\">https://github.com/chalk/ansi-regex/releases/tag/v6.0.1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20221014-0002/\">https://security.netapp.com/advisory/ntap-20221014-0002/</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1\">https://github.com/chalk/ansi-regex/commit/419250fa510bf31b4cc672e76537a64f9332e1f1</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a\">https://github.com/chalk/ansi-regex/commit/75a657da7af875b2e2724fd6331bf0a4b23d3c9a</a></li>\n<li><a href=\"https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8\">https://github.com/chalk/ansi-regex/commit/c3c0b3f2736b9c01feec0fef33980c43720dcde8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93q8-gq69-wqmw\">https://github.com/advisories/GHSA-93q8-gq69-wqmw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw",
            "title": "[ansi-regex] Inefficient Regular Expression Complexity in chalk/ansi-regex",
            "date_modified": "2023-09-01T20:58:05.000Z",
            "date_published": "2021-09-20T20:20:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93q8-gq69-wqmw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}