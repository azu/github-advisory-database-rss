{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for JavaScript packages hosted at npmjs.com",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Anpm",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/npm.json",
    "description": "Security Advisory for JavaScript packages hosted at npmjs.com on GitHub",
    "items": [
        {
            "content_html": "<p>An issue in all published versions of the NPM package <code>ip</code> allows an attacker to execute arbitrary code and obtain sensitive information via the <code>isPublic()</code> function. This can lead to potential Server-Side Request Forgery (SSRF) attacks. The core issue is the function's failure to accurately distinguish between public and private IP addresses.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42282\">https://nvd.nist.gov/vuln/detail/CVE-2023-42282</a></li>\n<li><a href=\"https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html\">https://cosmosofcyberspace.github.io/npm_ip_cve/npm_ip_cve.html</a></li>\n<li><a href=\"https://github.com/JoshGlazebrook/socks/issues/93#issue-2128357447\">https://github.com/JoshGlazebrook/socks/issues/93#issue-2128357447</a></li>\n<li><a href=\"https://github.com/github/advisory-database/pull/3504#issuecomment-1937179999\">https://github.com/github/advisory-database/pull/3504#issuecomment-1937179999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-78xj-cgh5-2h22\">https://github.com/advisories/GHSA-78xj-cgh5-2h22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-78xj-cgh5-2h22",
            "title": "[ip] NPM IP package vulnerable to Server-Side Request Forgery (SSRF) attacks",
            "date_modified": "2024-02-12T20:17:09.000Z",
            "date_published": "2024-02-08T18:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-78xj-cgh5-2h22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ghost through 5.76.0 allows stored XSS, and resultant privilege escalation in which a contributor can take over any account, via an SVG profile picture that contains JavaScript code to interact with the API on localhost TCP port 3001. NOTE: The discoverer reports that \"The vendor does not view this as a valid vector.\"</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23724\">https://nvd.nist.gov/vuln/detail/CVE-2024-23724</a></li>\n<li><a href=\"https://github.com/TryGhost/Ghost/pull/19646\">https://github.com/TryGhost/Ghost/pull/19646</a></li>\n<li><a href=\"https://github.com/RhinoSecurityLabs/CVEs/tree/master/CVE-2024-23724\">https://github.com/RhinoSecurityLabs/CVEs/tree/master/CVE-2024-23724</a></li>\n<li><a href=\"https://rhinosecuritylabs.com/blog\">https://rhinosecuritylabs.com/blog</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99vc-xw8j-phjm\">https://github.com/advisories/GHSA-99vc-xw8j-phjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99vc-xw8j-phjm",
            "title": "[ghost] Ghost has possible Cross-site Scripting issue",
            "date_modified": "2024-02-12T19:35:29.000Z",
            "date_published": "2024-02-11T03:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99vc-xw8j-phjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Ghost through 5.76.0 allows stored XSS, and resultant privilege escalation in which a contributor can take over any account, via an SVG profile picture that contains JavaScript code to interact with the API on localhost TCP port 3001. NOTE: The discoverer reports that \"The vendor does not view this as a valid vector.\"</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23724\">https://nvd.nist.gov/vuln/detail/CVE-2024-23724</a></li>\n<li><a href=\"https://github.com/TryGhost/Ghost/pull/19646\">https://github.com/TryGhost/Ghost/pull/19646</a></li>\n<li><a href=\"https://github.com/RhinoSecurityLabs/CVEs/tree/master/CVE-2024-23724\">https://github.com/RhinoSecurityLabs/CVEs/tree/master/CVE-2024-23724</a></li>\n<li><a href=\"https://rhinosecuritylabs.com/blog\">https://rhinosecuritylabs.com/blog</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99vc-xw8j-phjm\">https://github.com/advisories/GHSA-99vc-xw8j-phjm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99vc-xw8j-phjm",
            "title": "[ghost] Ghost has possible Cross-site Scripting issue",
            "date_modified": "2024-02-12T19:35:29.000Z",
            "date_published": "2024-02-11T03:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99vc-xw8j-phjm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ssh2 is client and server modules written in pure JavaScript for node.js. In ssh2 before version 1.4.0 there is a command injection vulnerability. The issue only exists on Windows. This issue may lead to remote code execution if a client of the library calls the vulnerable method with untrusted input. This is fixed in version 1.4.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26301\">https://nvd.nist.gov/vuln/detail/CVE-2020-26301</a></li>\n<li><a href=\"https://github.com/mscdex/ssh2/commit/f763271f41320e71d5cbee02ea5bc6a2ded3ca21\">https://github.com/mscdex/ssh2/commit/f763271f41320e71d5cbee02ea5bc6a2ded3ca21</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2020-123-mscdex-ssh2/\">https://securitylab.github.com/advisories/GHSL-2020-123-mscdex-ssh2/</a></li>\n<li><a href=\"https://www.npmjs.com/package/ssh2\">https://www.npmjs.com/package/ssh2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-652h-xwhf-q4h6\">https://github.com/advisories/GHSA-652h-xwhf-q4h6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-652h-xwhf-q4h6",
            "title": "[ssh2] OS Command Injection in ssh2",
            "date_modified": "2024-02-12T15:03:30.000Z",
            "date_published": "2021-09-21T16:50:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-652h-xwhf-q4h6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code class=\"language-js\">const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\"isAdmin\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html\">https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2024-02-10T01:09:55.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>parse</code> method of the JSON5 library before and including version <code>2.2.1</code> does not restrict parsing of keys named <code>__proto__</code>, allowing specially crafted strings to pollute the prototype of the resulting object.</p>\n<p>This vulnerability pollutes the prototype of the object returned by <code>JSON5.parse</code> and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from <code>JSON5.parse</code>. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>This vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.</p>\n<h2 id=\"details\">Details</h2>\n<p>Suppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using <code>JSON5.parse</code>, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:</p>\n<pre><code class=\"language-js\">const JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) =&gt; {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) =&gt; {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) =&gt; {\n    if (searchKeys.indexOf(key) &gt; -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<p>If the user attempts to set the <code>isAdmin</code> key, their request will be rejected:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n</code></pre>\n<p>However, users can instead set the <code>__proto__</code> key to <code>{\"isAdmin\": true}</code>. <code>JSON5</code> will parse this key and will set the <code>isAdmin</code> key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:</p>\n<pre><code class=\"language-js\">const props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/json5/json5/security/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46175\">https://nvd.nist.gov/vuln/detail/CVE-2022-46175</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/199\">https://github.com/json5/json5/issues/199</a></li>\n<li><a href=\"https://github.com/json5/json5/issues/295\">https://github.com/json5/json5/issues/295</a></li>\n<li><a href=\"https://github.com/json5/json5/pull/298\">https://github.com/json5/json5/pull/298</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972\">https://github.com/json5/json5/commit/62a65408408d40aeea14c7869ed327acead12972</a></li>\n<li><a href=\"https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\">https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html\">https://lists.debian.org/debian-lts-announce/2023/11/msg00021.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/\">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3S26TLPLVFAJTUN3VIXFDEBEXDYO22CE/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9c47-m6qq-7p4h\">https://github.com/advisories/GHSA-9c47-m6qq-7p4h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h",
            "title": "[json5] Prototype Pollution in JSON5 via Parse Method",
            "date_modified": "2024-02-10T01:09:55.000Z",
            "date_published": "2022-12-29T01:51:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9c47-m6qq-7p4h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A malicious SAML payload can require transforms that consume significant system resources to process, thereby resulting in reduced or denied service. This would be an effective way to perform a denial-of-service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been resolved in version 3.1.0. The resolution is to limit the number of allowable transforms to 2.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/node-saml/passport-saml/pull/595\">https://github.com/node-saml/passport-saml/pull/595</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/node-saml/passport-saml/security/advisories/GHSA-5379-r78w-42h2\">https://github.com/node-saml/passport-saml/security/advisories/GHSA-5379-r78w-42h2</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/pull/595\">https://github.com/node-saml/passport-saml/pull/595</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-39171\">https://nvd.nist.gov/vuln/detail/CVE-2021-39171</a></li>\n<li><a href=\"https://github.com/node-saml/passport-saml/commit/f1e00b64c21a725f545e675cd810bbaa435a3972\">https://github.com/node-saml/passport-saml/commit/f1e00b64c21a725f545e675cd810bbaa435a3972</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5379-r78w-42h2\">https://github.com/advisories/GHSA-5379-r78w-42h2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5379-r78w-42h2",
            "title": "[passport-saml] Unlimited transforms allowed for signed nodes",
            "date_modified": "2024-02-10T00:55:48.000Z",
            "date_published": "2021-08-30T16:11:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5379-r78w-42h2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions 0.3.3 and earlier of <code>marked</code> are affected by a regular expression denial of service ( ReDoS ) vulnerability when passed inputs that reach the <code>em</code> inline rule.</p>\n<h2 id=\"recommendation\">Recommendation</h2>\n<p>Update to version 0.3.4 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-8854\">https://nvd.nist.gov/vuln/detail/CVE-2015-8854</a></li>\n<li><a href=\"https://github.com/chjj/marked/issues/497\">https://github.com/chjj/marked/issues/497</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hjcp-j389-59ff\">https://github.com/advisories/GHSA-hjcp-j389-59ff</a></li>\n<li><a href=\"https://www.npmjs.com/advisories/23\">https://www.npmjs.com/advisories/23</a></li>\n<li><a href=\"https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\">https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BO2RMVVZVV6NFTU46B5RYRK7ZCXYARZS/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BO2RMVVZVV6NFTU46B5RYRK7ZCXYARZS/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M6BJG6RGDH7ZWVVAUFBFI5L32RSMQN2S/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/M6BJG6RGDH7ZWVVAUFBFI5L32RSMQN2S/</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K05052081?utm_source=f5support&amp;utm_medium=RSS\">https://support.f5.com/csp/article/K05052081?utm_source=f5support&amp;utm_medium=RSS</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/04/20/11\">http://www.openwall.com/lists/oss-security/2016/04/20/11</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hjcp-j389-59ff",
            "title": "[marked] Regular Expression Denial of Service in marked",
            "date_modified": "2024-02-09T17:50:44.000Z",
            "date_published": "2017-10-24T18:33:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hjcp-j389-59ff"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Any native code packages built by <code>pkg</code> are written to a hardcoded directory. On unix systems, this is <code>/tmp/pkg/*</code> which is a shared directory for all users on the same local system. There is no uniqueness to the package names within this directory, they are predictable.</p>\n<p>An attacker who has access to the same local system has the ability to replace the genuine executables in the shared directory with malicious executables of the same name. A user may then run the malicious executable without realising it has been modified.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This package is deprecated. Therefore, there will not be a patch provided for this vulnerability.</p>\n<h3 id=\"recommended-action\">Recommended Action:</h3>\n<p>To check if your executable build by pkg depends on native code and is vulnerable, run the executable and check if <code>/tmp/pkg/</code> was created.</p>\n<p>Users should transition to actively maintained alternatives. We would recommend investigating Node.js 21’s support for <a href=\"https://nodejs.org/api/single-executable-applications.html\">single executable applications</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Given the decision to deprecate the pkg package, there are no official workarounds or remediations provided by our team. Users should prioritize migrating to other packages that offer similar functionality with enhanced security.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/vercel/pkg/security/advisories/GHSA-22r3-9w55-cj54\">https://github.com/vercel/pkg/security/advisories/GHSA-22r3-9w55-cj54</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24828\">https://nvd.nist.gov/vuln/detail/CVE-2024-24828</a></li>\n<li><a href=\"https://nodejs.org/api/single-executable-applications.html\">https://nodejs.org/api/single-executable-applications.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-22r3-9w55-cj54\">https://github.com/advisories/GHSA-22r3-9w55-cj54</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-22r3-9w55-cj54",
            "title": "[pkg] Pkg Local Privilege Escalation",
            "date_modified": "2024-02-12T15:03:13.000Z",
            "date_published": "2024-02-09T15:20:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-22r3-9w55-cj54"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>Some regexes are vulnerable to regular expression denial of service (REDoS) due to overlapping capture groups. This allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to maliciously crafted long strings.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>Please update uap-core to &gt;= v0.11.0</p>\n<p>Downstream packages such as uap-python, uap-ruby etc which depend upon uap-core follow different version schemes.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ua-parser/uap-core/security/advisories/GHSA-p4pj-mg4r-x6v4\">https://github.com/ua-parser/uap-core/security/advisories/GHSA-p4pj-mg4r-x6v4</a></li>\n<li><a href=\"https://github.com/ua-parser/uap-core/commit/dc9925d458214cfe87b93e35346980612f6ae96c\">https://github.com/ua-parser/uap-core/commit/dc9925d458214cfe87b93e35346980612f6ae96c</a></li>\n<li><a href=\"https://www.npmjs.com/package/uap-core\">https://www.npmjs.com/package/uap-core</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21317\">https://nvd.nist.gov/vuln/detail/CVE-2021-21317</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p4pj-mg4r-x6v4\">https://github.com/advisories/GHSA-p4pj-mg4r-x6v4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p4pj-mg4r-x6v4",
            "title": "[uap-core] Denial of Service in uap-core",
            "date_modified": "2024-02-08T22:17:20.000Z",
            "date_published": "2021-02-02T15:46:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p4pj-mg4r-x6v4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the <strong>proto</strong> key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36604\">https://nvd.nist.gov/vuln/detail/CVE-2020-36604</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/issues/352\">https://github.com/hapijs/hoek/issues/352</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a\">https://github.com/hapijs/hoek/commit/4d0804bc6135ad72afdc5e1ec002b935b2f5216a</a></li>\n<li><a href=\"https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90\">https://github.com/hapijs/hoek/commit/948baf98634a5c206875b67d11368f133034fa90</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c429-5p7v-vgjp\">https://github.com/advisories/GHSA-c429-5p7v-vgjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp",
            "title": "[hoek] hoek subject to prototype pollution via the clone function.",
            "date_modified": "2024-02-07T18:59:37.000Z",
            "date_published": "2022-09-25T00:00:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c429-5p7v-vgjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Arbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution</p>\n<p>node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.</p>\n<p>This logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.</p>\n<p>The v3 branch of <code>node-tar</code> has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of <code>node-tar</code>. If this is not possible, a workaround is available below.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>6.1.9 || 5.0.10 || 4.4.18</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.</p>\n<pre><code class=\"language-js\">const tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =&gt; {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n</code></pre>\n<p>Users are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.</p>\n<h4 id=\"fix\">Fix</h4>\n<p>The problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:</p>\n<ol>\n<li>The <code>String.normalize('NFKD')</code> method is used to first normalize all unicode to its maximally compatible and multi-code-point form.</li>\n<li>All slashes are normalized to <code>/</code> on Windows systems (on posix systems, <code>\\</code> is a valid filename character, and thus left intact).</li>\n<li>When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\">https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p</a></li>\n<li><a href=\"https://www.npmjs.com/package/tar\">https://www.npmjs.com/package/tar</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37712\">https://nvd.nist.gov/vuln/detail/CVE-2021-37712</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5008\">https://www.debian.org/security/2021/dsa-5008</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00023.html</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b\">https://github.com/isaacs/node-tar/commit/1739408d3122af897caefd09662bce2ea477533b</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455\">https://github.com/isaacs/node-tar/commit/b6162c7fafe797f856564ef37f4b82747f051455</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e\">https://github.com/isaacs/node-tar/commit/bb93ba243746f705092905da1955ac3b0509ba1e</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a\">https://github.com/isaacs/node-tar/commit/2f1bca027286c23e110b8dfc7efc10756fa3db5a</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f\">https://github.com/isaacs/node-tar/commit/3aaf19b2501bbddb145d92b3322c80dcaed3c35f</a></li>\n<li><a href=\"https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1\">https://github.com/isaacs/node-tar/commit/d56f790bda9fea807dd80c5083f24771dbdd6eb1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq89-hq3f-393p\">https://github.com/advisories/GHSA-qq89-hq3f-393p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq89-hq3f-393p",
            "title": "[tar] Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links",
            "date_modified": "2024-02-07T18:41:26.000Z",
            "date_published": "2021-08-31T16:05:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq89-hq3f-393p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the AJAX sample available at the <code>samples/old/ajax.html</code> file location. All integrators that use that sample in the production code can be affected.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the AJAX sample. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts where <code>samples/old/ajax.html</code> is used in a production environment.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank Rafael Pedrero and INCIBE (<a href=\"https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor\">original report</a>) for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-wh5w-82f3-wrxh</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-4771\">https://nvd.nist.gov/vuln/detail/CVE-2023-4771</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor\">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cksource-ckeditor</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wh5w-82f3-wrxh\">https://github.com/advisories/GHSA-wh5w-82f3-wrxh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wh5w-82f3-wrxh",
            "title": "[ckeditor4] CKEditor cross-site scripting vulnerability in AJAX sample",
            "date_modified": "2024-02-07T18:21:06.000Z",
            "date_published": "2024-02-07T17:34:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wh5w-82f3-wrxh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the samples that use the <a href=\"https://ckeditor.com/cke4/addon/preview\">preview</a> feature:</p>\n<ul>\n<li><code>samples/old/**/*.html</code></li>\n<li><code>plugins/[plugin name]/samples/**/*.html</code></li>\n</ul>\n<p>All integrators that use these samples in the production code can be affected.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in one of CKEditor's 4 samples that are shipped with production code. The vulnerability allowed to execute JavaScript code by abusing the misconfigured <a href=\"https://ckeditor.com/cke4/addon/preview\">preview feature</a>. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts with affected samples used in a production environment.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank Marcin Wyczechowski &amp; Michał Majchrowicz AFINE Team for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-mw2c-vx6j-mg76</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://ckeditor.com/cke4/addon/preview\">https://ckeditor.com/cke4/addon/preview</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24816\">https://nvd.nist.gov/vuln/detail/CVE-2024-24816</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mw2c-vx6j-mg76\">https://github.com/advisories/GHSA-mw2c-vx6j-mg76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mw2c-vx6j-mg76",
            "title": "[ckeditor4] CKEditor4 Cross-site Scripting vulnerability in samples with enabled the preview feature",
            "date_modified": "2024-02-07T20:24:13.000Z",
            "date_published": "2024-02-07T17:31:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mw2c-vx6j-mg76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"affected-packages\">Affected packages</h3>\n<p>The vulnerability has been discovered in the core HTML parsing module and may affect all editor instances that:</p>\n<ul>\n<li>Enabled <a href=\"https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html\">full-page editing</a> mode,</li>\n<li>or enabled <a href=\"https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata\">CDATA</a> elements in <a href=\"https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html\">Advanced Content Filtering</a> configuration (defaults to <code>script</code> and <code>style</code> elements).</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>A potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML content bypassing Advanced Content Filtering mechanism, which could result in executing JavaScript code. An attacker could abuse faulty CDATA content detection and use it to prepare an intentional attack on the editor. It affects all users using the CKEditor 4 at version &lt; 4.24.0-lts.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been recognized and patched. The fix will be available in version 4.24.0-lts.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>Email us at <a href=\"mailto:security@cksource.com\">security@cksource.com</a> if you have any questions or comments about this advisory.</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>The CKEditor 4 team would like to thank <a href=\"https://cz.linkedin.com/in/michal-fryba\">Michal Frýba</a> from <a href=\"https://www.alefnula.com/\">ALEF NULA</a> for recognizing and reporting this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm\">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-fq6h-4g8v-qqvm</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb\">https://github.com/ckeditor/ckeditor4/commit/8ed1a3c93d0ae5f49f4ecff5738ab8a2972194cb</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata\">https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_dtd.html#property-S-cdata</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html\">https://ckeditor.com/docs/ckeditor4/latest/features/fullpage.html</a></li>\n<li><a href=\"https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html\">https://ckeditor.com/docs/ckeditor4/latest/guide/dev_advanced_content_filter.html</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24815\">https://nvd.nist.gov/vuln/detail/CVE-2024-24815</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq6h-4g8v-qqvm\">https://github.com/advisories/GHSA-fq6h-4g8v-qqvm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq6h-4g8v-qqvm",
            "title": "[ckeditor4] CKEditor4 Cross-site Scripting vulnerability caused by incorrect CDATA detection",
            "date_modified": "2024-02-07T20:23:51.000Z",
            "date_published": "2024-02-07T17:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq6h-4g8v-qqvm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>\n<p>The following template can be used to demonstrate the vulnerability:  </p>\n<pre><code class=\"language-{{#with\">    {{#with split as |a|}}\n        {{pop (push \"alert('Vulnerable Handlebars JS');\")}}\n        {{#with (concat (lookup join (slice 0 1)))}}\n            {{#each (slice 2 3)}}\n                {{#with (apply 0 a)}}\n                    {{.}}\n                {{/with}}\n            {{/each}}\n        {{/with}}\n    {{/with}}\n{{/with}}```\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.2 or later.\n### References\n\n- &lt;https://www.npmjs.com/advisories/1316&gt;\n- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;\n</code></pre>\n",
            "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv",
            "title": "[handlebars] Arbitrary Code Execution in handlebars",
            "date_modified": "2024-02-07T05:08:28.000Z",
            "date_published": "2020-09-04T14:57:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of <code>handlebars</code> prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).</p>\n<p>The following template can be used to demonstrate the vulnerability:  </p>\n<pre><code class=\"language-{{#with\">    {{#with split as |a|}}\n        {{pop (push \"alert('Vulnerable Handlebars JS');\")}}\n        {{#with (concat (lookup join (slice 0 1)))}}\n            {{#each (slice 2 3)}}\n                {{#with (apply 0 a)}}\n                    {{.}}\n                {{/with}}\n            {{/each}}\n        {{/with}}\n    {{/with}}\n{{/with}}```\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.2 or later.\n### References\n\n- &lt;https://www.npmjs.com/advisories/1316&gt;\n- &lt;https://github.com/advisories/GHSA-2cf5-4w76-r9qv&gt;\n</code></pre>\n",
            "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv",
            "title": "[handlebars] Arbitrary Code Execution in handlebars",
            "date_modified": "2024-02-07T05:08:28.000Z",
            "date_published": "2020-09-04T14:57:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2cf5-4w76-r9qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>DeviceFarmer stf v3.6.6 suffers from Use of a Broken or Risky Cryptographic Algorithm.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-51839\">https://nvd.nist.gov/vuln/detail/CVE-2023-51839</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf/issues/736\">https://github.com/DeviceFarmer/stf/issues/736</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf\">https://github.com/DeviceFarmer/stf</a></li>\n<li><a href=\"https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md\">https://github.com/tianjk99/Cryptographic-Misuses/blob/main/CVE-2023-51839.md</a></li>\n<li><a href=\"https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35\">https://github.com/DeviceFarmer/stf/blob/a6b5f18941d0de5929f9c24c3ce3e9c13317a653/lib/util/vncauth.js#L35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xm8-wjq7-88r5\">https://github.com/advisories/GHSA-7xm8-wjq7-88r5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xm8-wjq7-88r5",
            "title": "[@devicefarmer/stf] DeviceFarmer stf uses DES-ECB",
            "date_modified": "2024-02-06T20:29:20.000Z",
            "date_published": "2024-01-29T21:30:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xm8-wjq7-88r5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Directory Traversal vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.3 allows a remote attacker to execute arbitrary code via a crafted payload to the fileName parameter of the Save function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24398\">https://nvd.nist.gov/vuln/detail/CVE-2024-24398</a></li>\n<li><a href=\"https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R\">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>\n<li><a href=\"https://cves.at/posts/cve-2024-24398/writeup/\">https://cves.at/posts/cve-2024-24398/writeup/</a></li>\n<li><a href=\"http://stimulsoft.com\">http://stimulsoft.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gfqf-9w98-7jmx\">https://github.com/advisories/GHSA-gfqf-9w98-7jmx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gfqf-9w98-7jmx",
            "title": "[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS directory traversal vulnerability",
            "date_modified": "2024-02-06T18:23:20.000Z",
            "date_published": "2024-02-06T00:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gfqf-9w98-7jmx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in Stimulsoft GmbH Stimulsoft Dashboard.JS before v.2024.1.2 allows a remote attacker to execute arbitrary code via a crafted payload to the search bar component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-24396\">https://nvd.nist.gov/vuln/detail/CVE-2024-24396</a></li>\n<li><a href=\"https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R\">https://cloud-trustit.spp.at/s/Pi78FFazHamJQ5R</a></li>\n<li><a href=\"https://cves.at/posts/cve-2024-24396/writeup/\">https://cves.at/posts/cve-2024-24396/writeup/</a></li>\n<li><a href=\"http://stimulsoft.com\">http://stimulsoft.com</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9m6m-c64r-w4f4\">https://github.com/advisories/GHSA-9m6m-c64r-w4f4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9m6m-c64r-w4f4",
            "title": "[stimulsoft-dashboards-js] Stimulsoft Dashboard.JS Cross Site Scripting vulnerability",
            "date_modified": "2024-02-05T22:58:57.000Z",
            "date_published": "2024-02-05T21:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9m6m-c64r-w4f4"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}