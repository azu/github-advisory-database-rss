{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>RaspAP before 3.1.5 allows an attacker to escalate privileges: the www-data user has write access to the restapi.service file and also possesses Sudo privileges to execute several critical commands without a password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41637\">https://nvd.nist.gov/vuln/detail/CVE-2024-41637</a></li>\n<li><a href=\"https://blog.0xzon.dev/2024-07-27-CVE-2024-41637\">https://blog.0xzon.dev/2024-07-27-CVE-2024-41637</a></li>\n<li><a href=\"https://github.com/RaspAP/raspap-webgui\">https://github.com/RaspAP/raspap-webgui</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q623-2j2j-23jj\">https://github.com/advisories/GHSA-q623-2j2j-23jj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q623-2j2j-23jj",
            "title": "[billz/raspap-webgui] RaspAP allows an attacker to escalate privileges",
            "date_modified": "2024-07-29T17:01:25.000Z",
            "date_published": "2024-07-29T06:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q623-2j2j-23jj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This XSS vulnerability is about the system configs</p>\n<ul>\n<li>design/header/welcome</li>\n<li>design/header/logo_src</li>\n<li>design/header/logo_src_small</li>\n<li>design/header/logo_alt</li>\n</ul>\n<p>They are intended to enable admins to set a text in the two cases, and to define an image url for the other two cases.\nBut because of previously missing escaping allowed to input arbitrary html and as a consequence also arbitrary JavaScript.</p>\n<p>While this is in most usage scenarios not a relevant issue, some people work with more restrictive roles in the backend. Here the ability to inject JavaScript with these settings would be an unintended and unwanted privilege.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em>  </p>\n<p>The problem is patched with Version 20.10.1 or higher.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>  </p>\n<p>Possible mitigations are</p>\n<ul>\n<li>Restricting access to the System Configs </li>\n<li>checking templates where these settings are used to apply proper html filtering</li>\n</ul>\n<h3 id=\"for-users-relying-on-this-possibility\">For Users relying on this possibility</h3>\n<p>Some Users might actually rely on the ability to use html there.\nYou can restore the previous behavior by making use of the new introduced <code>-&gt;getUnescapedValue()</code> method on this escaped elements. Developers should have a look at the newly introduced <code>Mage_Core_Model_Security_HtmlEscapedString</code></p>\n<h3 id=\"credit\">Credit</h3>\n<p>Credit goes to  Aakash Adhikari @justlife4x4 for finding this issue</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenMage/magento-lts/security/advisories/GHSA-5vrp-638w-p8m2\">https://github.com/OpenMage/magento-lts/security/advisories/GHSA-5vrp-638w-p8m2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41676\">https://nvd.nist.gov/vuln/detail/CVE-2024-41676</a></li>\n<li><a href=\"https://github.com/OpenMage/magento-lts/commit/484cf8afc550e98bbf2c03fbb29a8450a32e7948\">https://github.com/OpenMage/magento-lts/commit/484cf8afc550e98bbf2c03fbb29a8450a32e7948</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5vrp-638w-p8m2\">https://github.com/advisories/GHSA-5vrp-638w-p8m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5vrp-638w-p8m2",
            "title": "[openmage/magento-lts] Magento LTS vulnerable to stored Cross-site Scripting (XSS) in admin system configs",
            "date_modified": "2024-07-29T16:38:21.000Z",
            "date_published": "2024-07-29T16:38:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5vrp-638w-p8m2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>Remote Code Execution Vulnerability has been identified in the Message module of the Admidio Application, where it is possible to upload a PHP file in the attachment. The uploaded file can be accessed publicly through the URL <code>{admidio_base_url}/adm_my_files/messages_attachments/{file_name}</code>.</p>\n<p>The vulnerability is caused due to the lack of file extension verification, allowing malicious files to be uploaded to the server and public availability of the uploaded file.</p>\n<p>An attacker can upload a PHP web shell that executes OS commands on the server, compromising the application server.</p>\n<p>Note: I am using the docker-compose.yaml file from <a href=\"https://github.com/Admidio/admidio/blob/master/README-Docker.md#docker-compose-usage\">https://github.com/Admidio/admidio/blob/master/README-Docker.md#docker-compose-usage</a> official documentation.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>An attacker can exploit this flaw to upload a PHP web shell, which can be used to execute arbitrary commands on the server. This can lead to a complete compromise of the application server, allowing the attacker to:</p>\n<ul>\n<li>Execute arbitrary code or commands.</li>\n<li>Access, modify, or delete sensitive data.</li>\n<li>Install malicious software or scripts.</li>\n<li>Gain further access to internal networks.</li>\n<li>Disrupt services and applications hosted on the server.</li>\n</ul>\n<h3 id=\"recommendation\">Recommendation:</h3>\n<ul>\n<li>Implement strict file extension verification to ensure that only allowed file types (e.g., images, documents) can be uploaded.</li>\n<li>Reject any file upload with disallowed or suspicious extensions such as .php, .phtml, .exe, etc.</li>\n</ul>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce:</h3>\n<ol>\n<li>As a member user, go to write an email message.</li>\n<li>Upload a PHP file in the Attachment, containing the following content:</li>\n</ol>\n<pre><code>&lt;?php\n$command = isset($_GET['command']) ? $_GET['command'] : '';\n$output = [];\n$return_var = 0;\nexec($command, $output, $return_var);\necho '&lt;h1&gt;Exploiting RCE&lt;/h1&gt;';\necho 'Command: '.$command;\necho '\\n&lt;pre&gt;';\necho implode(\"\\n\", $output);\necho '&lt;/pre&gt;';\n?&gt;\n</code></pre>\n<ol start=\"3\">\n<li>Send the email.</li>\n<li>In the message history go to the sent message.</li>\n<li>Download the file, to get the uploaded file name.</li>\n<li>Go to the following URL: \n<code>{admidio_base_url}/adm_my_files/messages_attachments/{file_name}?command=cat+/etc/passwd</code></li>\n<li>The server's passwd file would be returned in the response.</li>\n</ol>\n<h3 id=\"proof-of-concept\">Proof Of Concept:</h3>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/51b524de-ec51-4875-80e9-e2037da9c573\"></p>\n<p><em>Figure 1: Code of messages_send.php, not having file extension verification.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/74b47e6d-e2e9-4535-82e3-d6ad2f677361\"></p>\n<p><em>Figure 2: Uploading Webshell as attachment.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/abea26eb-b36f-46db-9e3a-8a4ba82d9740\"></p>\n<p><em>Figure 3: Download the uploaded file to get the uploaded file name.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/fbb14aae-d5c6-454b-bafa-8d03d6d8a208\"></p>\n<p><em>Figure 4: Uploaded File name.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/f8436248-1768-4714-ad2d-87f157145c61\"></p>\n<p><em>Figure 5: RCE via web shell.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/edc5b992-227f-43f9-bef9-87959766a63c\"></p>\n<p><em>Figure 6: RCE via Webshell.</em></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Admidio/admidio/security/advisories/GHSA-g872-jwwr-vggm\">https://github.com/Admidio/admidio/security/advisories/GHSA-g872-jwwr-vggm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38529\">https://nvd.nist.gov/vuln/detail/CVE-2024-38529</a></li>\n<li><a href=\"https://github.com/Admidio/admidio/commit/3b1cc1cda05747edebe15f2825b79bc5a673d94c\">https://github.com/Admidio/admidio/commit/3b1cc1cda05747edebe15f2825b79bc5a673d94c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g872-jwwr-vggm\">https://github.com/advisories/GHSA-g872-jwwr-vggm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g872-jwwr-vggm",
            "title": "[admidio/admidio] Admidio Vulnerable to RCE via Arbitrary File Upload in Message Attachment",
            "date_modified": "2024-07-29T16:32:33.000Z",
            "date_published": "2024-07-29T16:32:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g872-jwwr-vggm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>An SQL Injection has been identified in the <code>/adm_program/modules/ecards/ecard_send.php</code> source file of the Admidio Application. The SQL Injection results in a compromise of the application's database. The value of <code>ecard_recipients </code>POST parameter is being directly concatenated with the SQL query in the source code causing the SQL Injection.</p>\n<p>The SQL Injection can be exploited by a member user, using blind condition-based, time-based, and Out of band interaction SQL Injection payloads. I successfully exploited SQL Injections by causing Time Delays. Advancing the payload, I was able to exfiltrate data from the database based on trial and error conditions and step-wise enumerating the characters of the database name. This was done as a POC of SQL Injection. An attacker could simply drop the database by providing a single payload, steal data, and potentially update the database according to their will. </p>\n<h3 id=\"impact\">Impact:</h3>\n<p>SQL injection (SQLi) vulnerabilities can have serious consequences for the security of a web application and its underlying database. Attackers can use SQLi to access sensitive data, and modify, delete, or add data to the database. SQLi can also be potentially used to perform RCE. </p>\n<h3 id=\"remediation\">Remediation:</h3>\n<p>Use parameterized queries or prepared statements instead of concatenating user input directly into SQL queries. Parameterized queries ensure that user input is treated as data and not executable queries. \nOR \nSanitize the input before including it in the SQL Query.</p>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce:</h3>\n<ul>\n<li>Intercept the POST request to <code>/adm_program/modules/ecards/ecard_send.php</code>, which is used to send photo as greeting card.</li>\n<li>Change the value of <code>ecard_recipients%5B%5D</code> POST parameter to <code>2%2bsleep(10)</code>.</li>\n<li>Sending the request will cause a time delay.</li>\n</ul>\n<h3 id=\"proof-of-concept\">Proof Of Concept:</h3>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/8ea87f4f-dad0-4df1-999d-212b07e02527\">\nFigure 1: Code Vulnerable to SQL Injection</p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/d803a92c-3469-45aa-a844-e8aa311b55f4\">\nFigure 2: Code Vulnerable to SQL Injection</p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/2ccdf865-2867-4dc8-abe1-f25b5e906db3\">\nFigure 3: SQLi to trigger time delay</p>\n<p><img alt=\"image\" src=\"https://github.com/Admidio/admidio/assets/59286712/eed06ce6-6591-427f-b98e-5314233b5996\">\nFigure 4: Data Exfiltration via Condition-based Time Delays</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3\">https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37906\">https://nvd.nist.gov/vuln/detail/CVE-2024-37906</a></li>\n<li><a href=\"https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248\">https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-69wx-xc6j-28v3\">https://github.com/advisories/GHSA-69wx-xc6j-28v3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-69wx-xc6j-28v3",
            "title": "[admidio/admidio] Admidio has Blind SQL Injection in ecard_send.php",
            "date_modified": "2024-07-29T16:31:47.000Z",
            "date_published": "2024-07-29T16:31:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-69wx-xc6j-28v3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"usd-2024-0009--reflected-xss-in-oveleon-cookiebar\">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>\n<h3 id=\"details\">Details</h3>\n<p><strong>Advisory ID</strong>: usd-2024-0009 \n<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href=\"https://www.usd.de/\">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>\n<h3 id=\"affected-component\">Affected Component</h3>\n<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>\n<h3 id=\"desciption\">Desciption</h3>\n<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.\nThe <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>\n<h3 id=\"timeline\">Timeline</h3>\n<ul>\n<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>\n</li>\n<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>\n</li>\n<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq\">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d\">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php\">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-296q-rj83-g9rq\">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-296q-rj83-g9rq",
            "title": "[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar",
            "date_modified": "2024-07-26T14:28:29.000Z",
            "date_published": "2024-07-26T14:28:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-296q-rj83-g9rq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"usd-2024-0009--reflected-xss-in-oveleon-cookiebar\">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>\n<h3 id=\"details\">Details</h3>\n<p><strong>Advisory ID</strong>: usd-2024-0009 \n<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href=\"https://www.usd.de/\">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>\n<h3 id=\"affected-component\">Affected Component</h3>\n<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>\n<h3 id=\"desciption\">Desciption</h3>\n<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.\nThe <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>\n<h3 id=\"fix\">Fix</h3>\n<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>\n<h3 id=\"timeline\">Timeline</h3>\n<ul>\n<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>\n</li>\n<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>\n</li>\n<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>\n</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq\">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d\">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>\n<li><a href=\"https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php\">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-296q-rj83-g9rq\">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-296q-rj83-g9rq",
            "title": "[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar",
            "date_modified": "2024-07-26T14:28:29.000Z",
            "date_published": "2024-07-26T14:28:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-296q-rj83-g9rq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the \"administer fields\" permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41709\">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>\n<li><a href=\"https://backdropcms.org/security/backdrop-sa-core-2024-001\">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>\n<li><a href=\"https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301\">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>\n<li><a href=\"https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030\">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wmx-48g3-x66g\">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wmx-48g3-x66g",
            "title": "[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places",
            "date_modified": "2024-07-25T18:08:26.000Z",
            "date_published": "2024-07-22T06:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wmx-48g3-x66g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the \"administer fields\" permission.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41709\">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>\n<li><a href=\"https://backdropcms.org/security/backdrop-sa-core-2024-001\">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>\n<li><a href=\"https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301\">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>\n<li><a href=\"https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030\">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3wmx-48g3-x66g\">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3wmx-48g3-x66g",
            "title": "[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places",
            "date_modified": "2024-07-25T18:08:26.000Z",
            "date_published": "2024-07-22T06:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3wmx-48g3-x66g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Craft CMS 5 allows reuse of TOTP tokens multiple times within the validity period.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>An attacker is able to re-submit a valid TOTP token to establish an authenticated session. This requires that the attacker has knowledge of the victim's credentials.</p>\n<p>A TOTP token can be used multiple times to establish an authenticated session.\n<a href=\"https://www.rfc-editor.org/rfc/rfc6238\">RFC 6238</a> insists that an OTP must not be used more than once.</p>\n<blockquote>\n<p>The verifier MUST NOT accept the second attempt of the OTP after the successful validation has been issued for the first OTP, which ensures one-time only use of an OTP.</p>\n</blockquote>\n<p>The OWASP Application Security Verification Standard v4.0.3 (ASVS) <a href=\"https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x11-V2-Authentication.md#v28-one-time-verifier\">reiterates\nthis property with requirement 2.8.4</a>.</p>\n<blockquote>\n<p>Verify that time-based OTP can be used only once within the validity period.</p>\n</blockquote>\n<p>It should also be noted that the validity period of an TOTP token is 2 minutes. This makes a successful brute force attack more likely, since the four tokens are valid at the same time.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Craft 5.2.3.</p>\n<p>References:</p>\n<p><a href=\"https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV\">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV</a> 2024061701_CraftCMS_TOTP_Valid_After_Use</p>\n<p><a href=\"https://github.com/craftcms/cms/releases/tag/5.2.3\">https://github.com/craftcms/cms/releases/tag/5.2.3</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx\">https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx</a></li>\n<li><a href=\"https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38\">https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38</a></li>\n<li><a href=\"https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use\">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41800\">https://nvd.nist.gov/vuln/detail/CVE-2024-41800</a></li>\n<li><a href=\"https://github.com/craftcms/cms/releases/tag/5.2.3\">https://github.com/craftcms/cms/releases/tag/5.2.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wmx7-pw49-88jx\">https://github.com/advisories/GHSA-wmx7-pw49-88jx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wmx7-pw49-88jx",
            "title": "[craftcms/cms] Craft CMS Allows TOTP Token To Stay Valid After Use",
            "date_modified": "2024-07-26T21:40:28.000Z",
            "date_published": "2024-07-25T17:58:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wmx7-pw49-88jx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Dolibarr ERP CRM before 19.0.2 was discovered to contain a remote code execution (RCE) vulnerability via the Computed field parameter under the Users Module Setup function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40137\">https://nvd.nist.gov/vuln/detail/CVE-2024-40137</a></li>\n<li><a href=\"https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137\">https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vprp-94p9-5jp8\">https://github.com/advisories/GHSA-vprp-94p9-5jp8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vprp-94p9-5jp8",
            "title": "[dolibarr/dolibarr] Dolibarr ERP CRM vulnerable to remote code execution (RCE) ",
            "date_modified": "2024-07-25T16:44:51.000Z",
            "date_published": "2024-07-24T21:31:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vprp-94p9-5jp8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Request Forgery vulnerability in ProcessWire v.3.0.229 allows a remote attacker to execute arbitrary code via a crafted HTML file to the comments functionality.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41597\">https://nvd.nist.gov/vuln/detail/CVE-2024-41597</a></li>\n<li><a href=\"https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md\">https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r9vw-cjf9-xh4x\">https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r9vw-cjf9-xh4x",
            "title": "[processwire/processwire] ProcessWire Cross Site Request Forgery vulnerability",
            "date_modified": "2024-07-19T22:39:58.000Z",
            "date_published": "2024-07-19T21:31:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r9vw-cjf9-xh4x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file upload vulnerability in the image upload function of Automad v2.0.0 allows attackers to execute arbitrary code via a crafted file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40400\">https://nvd.nist.gov/vuln/detail/CVE-2024-40400</a></li>\n<li><a href=\"https://github.com/marcantondahmen/automad/issues/106\">https://github.com/marcantondahmen/automad/issues/106</a></li>\n<li><a href=\"https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e\">https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-47mc-qmh2-mqj4\">https://github.com/advisories/GHSA-47mc-qmh2-mqj4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-47mc-qmh2-mqj4",
            "title": "[automad/automad] Automad arbitrary file upload vulnerability",
            "date_modified": "2024-07-19T22:39:52.000Z",
            "date_published": "2024-07-19T21:31:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-47mc-qmh2-mqj4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Craft CMS up to v3.7.31 was discovered to contain a SQL injection vulnerability via the GraphQL API endpoint.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37843\">https://nvd.nist.gov/vuln/detail/CVE-2024-37843</a></li>\n<li><a href=\"https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql\">https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hq4f-mv3q-8wcv\">https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hq4f-mv3q-8wcv",
            "title": "[craftcms/cms] Craft CMS SQL injection vulnerability via the GraphQL API endpoint",
            "date_modified": "2024-07-19T21:44:48.000Z",
            "date_published": "2024-06-25T21:31:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hq4f-mv3q-8wcv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Server-Side Template Injection (SSTI) vulnerability in the edit theme function of openCart project v4.0.2.3 allows attackers to execute arbitrary code via injecting a crafted payload.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40420\">https://nvd.nist.gov/vuln/detail/CVE-2024-40420</a></li>\n<li><a href=\"https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md\">https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xrh7-2gfq-4rcq\">https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xrh7-2gfq-4rcq",
            "title": "[opencart/opencart] openCart Server-Side Template Injection (SSTI) vulnerability",
            "date_modified": "2024-07-17T23:36:51.000Z",
            "date_published": "2024-07-17T21:31:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xrh7-2gfq-4rcq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TinyMCE v6 has a configuration value <code>convert_unsafe_embeds</code> set to <code>false</code> which allows svg files containing javascript to be used in <code>&lt;object&gt;</code> or <code>&lt;embed&gt;</code> tags, which can be used as a vector for XSS attacks.</p>\n<p>Note that <code>&lt;embed&gt;</code> tags are not allowed by default.</p>\n<p>After patching the default value of <code>convert_unsafe_embeds</code> will be set to <code>true</code>. This means that <code>&lt;object&gt;</code> tags will be converted to iframes instead the next time the page is saved, which may break any pages that rely upon previously saved <code>&lt;object&gt;</code> tags. Developers can override this configuration if desired to revert to the original behaviour.</p>\n<p>We reviewed the potential impact of this vulnerability within the context of Silverstripe CMS. We concluded this is a medium impact vulnerability given how TinyMCE is used by Silverstripe CMS.</p>\n<h3 id=\"references\">References:</h3>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/ss-2024-001\">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5359-pvf2-pw78\">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5359-pvf2-pw78\">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/ss-2024-001\">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-52cw-pvq9-9m5v\">https://github.com/advisories/GHSA-52cw-pvq9-9m5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-52cw-pvq9-9m5v",
            "title": "[silverstripe/framework] Silverstripe uses TinyMCE which allows svg files linked in object tags",
            "date_modified": "2024-07-22T16:54:34.000Z",
            "date_published": "2024-07-17T16:00:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-52cw-pvq9-9m5v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A security vulnerability was discovered in the <code>/api/v2/shop/adjustments/{id}</code> endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.19, 1.13.4 and above. The <code>/api/v2/shop/adjustments/{id}</code> will always return <code>404</code> status.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Using YAML configuration:</p>\n<p>Create <code>config/api_platform/Adjustment.yaml</code> file:</p>\n<pre><code class=\"language-yaml\"># config/api_platform/Adjustment.yaml\n\n'%sylius.model.adjustment.class%':\n    itemOperations:\n        shop_get:\n            controller: ApiPlatform\\Core\\Action\\NotFoundAction\n            read: false\n            output: false\n</code></pre>\n<p>Or using XML configuration:</p>\n<p>Copy the original configuration from vendor:</p>\n<pre><code class=\"language-bash\">cp vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/Resources/config/api_resources/Adjustment.xml config/api_platform\n</code></pre>\n<p>And change the <code>shop_get</code> operation in copied <code>config/api_platform/Adjustment.xml</code> file:</p>\n<pre><code class=\"language-xml\">&lt;!-- config/api_platform/Adjustment.xml --&gt;\n\n...\n&lt;itemOperation name=\"shop_get\"&gt;\n    &lt;attribute name=\"method\"&gt;GET&lt;/attribute&gt;\n    &lt;attribute name=\"path\"&gt;/shop/adjustments/{id}&lt;/attribute&gt;\n    &lt;attribute name=\"controller\"&gt;ApiPlatform\\Core\\Action\\NotFoundAction&lt;/attribute&gt;\n    &lt;attribute name=\"read\"&gt;false&lt;/attribute&gt;\n    &lt;attribute name=\"output\"&gt;false&lt;/attribute&gt;\n&lt;/itemOperation&gt;\n...\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43\">https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464\">https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40633\">https://nvd.nist.gov/vuln/detail/CVE-2024-40633</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55rf-8q29-4g43\">https://github.com/advisories/GHSA-55rf-8q29-4g43</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55rf-8q29-4g43",
            "title": "[sylius/sylius] Sylius has a security vulnerability via adjustments API endpoint",
            "date_modified": "2024-07-17T19:13:35.000Z",
            "date_published": "2024-07-17T14:32:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55rf-8q29-4g43"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A security vulnerability was discovered in the <code>/api/v2/shop/adjustments/{id}</code> endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.19, 1.13.4 and above. The <code>/api/v2/shop/adjustments/{id}</code> will always return <code>404</code> status.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Using YAML configuration:</p>\n<p>Create <code>config/api_platform/Adjustment.yaml</code> file:</p>\n<pre><code class=\"language-yaml\"># config/api_platform/Adjustment.yaml\n\n'%sylius.model.adjustment.class%':\n    itemOperations:\n        shop_get:\n            controller: ApiPlatform\\Core\\Action\\NotFoundAction\n            read: false\n            output: false\n</code></pre>\n<p>Or using XML configuration:</p>\n<p>Copy the original configuration from vendor:</p>\n<pre><code class=\"language-bash\">cp vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/Resources/config/api_resources/Adjustment.xml config/api_platform\n</code></pre>\n<p>And change the <code>shop_get</code> operation in copied <code>config/api_platform/Adjustment.xml</code> file:</p>\n<pre><code class=\"language-xml\">&lt;!-- config/api_platform/Adjustment.xml --&gt;\n\n...\n&lt;itemOperation name=\"shop_get\"&gt;\n    &lt;attribute name=\"method\"&gt;GET&lt;/attribute&gt;\n    &lt;attribute name=\"path\"&gt;/shop/adjustments/{id}&lt;/attribute&gt;\n    &lt;attribute name=\"controller\"&gt;ApiPlatform\\Core\\Action\\NotFoundAction&lt;/attribute&gt;\n    &lt;attribute name=\"read\"&gt;false&lt;/attribute&gt;\n    &lt;attribute name=\"output\"&gt;false&lt;/attribute&gt;\n&lt;/itemOperation&gt;\n...\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43\">https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464\">https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40633\">https://nvd.nist.gov/vuln/detail/CVE-2024-40633</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-55rf-8q29-4g43\">https://github.com/advisories/GHSA-55rf-8q29-4g43</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-55rf-8q29-4g43",
            "title": "[sylius/sylius] Sylius has a security vulnerability via adjustments API endpoint",
            "date_modified": "2024-07-17T19:13:35.000Z",
            "date_published": "2024-07-17T14:32:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-55rf-8q29-4g43"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A bad actor with access to edit content in the CMS could send a specifically crafted encoded payload to the server, which could be used to inject a JavaScript payload on the front end of the site. The payload would be sanitised on the client-side, but server-side sanitisation doesn't catch it.</p>\n<p>The server-side sanitisation logic has been updated to sanitise against this type of attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-32981\">https://www.silverstripe.org/download/security-releases/cve-2024-32981</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-chx7-9x8h-r5mg\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-chx7-9x8h-r5mg</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/b8d20dc9d531550e06fd7da7a0eafa551922e2e1\">https://github.com/silverstripe/silverstripe-framework/commit/b8d20dc9d531550e06fd7da7a0eafa551922e2e1</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-32981\">https://www.silverstripe.org/download/security-releases/cve-2024-32981</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32981\">https://nvd.nist.gov/vuln/detail/CVE-2024-32981</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-32981.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-32981.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-chx7-9x8h-r5mg\">https://github.com/advisories/GHSA-chx7-9x8h-r5mg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-chx7-9x8h-r5mg",
            "title": "[silverstripe/framework] Silverstripe Framework has a Cross-site Scripting vulnerability with encoded payload",
            "date_modified": "2024-07-22T16:54:54.000Z",
            "date_published": "2024-07-17T14:27:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-chx7-9x8h-r5mg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Reports can be accessed by their direct URL by any user who has access to view the reports admin section, even if the <code>canView()</code> method for that report returns <code>false</code>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-29885\">https://www.silverstripe.org/download/security-releases/cve-2024-29885</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-reports/security/advisories/GHSA-89q6-98xx-4ffw\">https://github.com/silverstripe/silverstripe-reports/security/advisories/GHSA-89q6-98xx-4ffw</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-reports/commit/0351106c18ad4246d983b5f4e082c09c382121f4\">https://github.com/silverstripe/silverstripe-reports/commit/0351106c18ad4246d983b5f4e082c09c382121f4</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2024-29885\">https://www.silverstripe.org/download/security-releases/cve-2024-29885</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29885\">https://nvd.nist.gov/vuln/detail/CVE-2024-29885</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/reports/CVE-2024-29885.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/reports/CVE-2024-29885.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89q6-98xx-4ffw\">https://github.com/advisories/GHSA-89q6-98xx-4ffw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89q6-98xx-4ffw",
            "title": "[silverstripe/reports] Silverstripe Reports are still accessible even when `canView()` returns false",
            "date_modified": "2024-07-22T16:54:52.000Z",
            "date_published": "2024-07-17T14:26:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89q6-98xx-4ffw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In <code>torrentpier/library/includes/functions.php</code>, <code>get_tracks()</code> uses the unsafe native PHP serialization format to deserialize user-controlled cookies:</p>\n<p><a href=\"https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60\">https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60</a></p>\n<h3 id=\"poc\">PoC</h3>\n<p>One can use <a href=\"https://github.com/ambionics/phpggc/\"><code>phpggc</code></a> and the chain <code>Guzzle/FW1</code> to write PHP code to an arbitrary file, and execute commands on the system. For instance, the cookie <code>bb_t</code> will be deserialized when browsing to <code>viewforum.php</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/torrentpier/torrentpier/security/advisories/GHSA-fg86-4c2r-7wxw\">https://github.com/torrentpier/torrentpier/security/advisories/GHSA-fg86-4c2r-7wxw</a></li>\n<li><a href=\"https://github.com/torrentpier/torrentpier/commit/ed37e6e522f345f2b46147c6f53c1ab6dec1db9e\">https://github.com/torrentpier/torrentpier/commit/ed37e6e522f345f2b46147c6f53c1ab6dec1db9e</a></li>\n<li><a href=\"https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60\">https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-40624\">https://nvd.nist.gov/vuln/detail/CVE-2024-40624</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fg86-4c2r-7wxw\">https://github.com/advisories/GHSA-fg86-4c2r-7wxw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fg86-4c2r-7wxw",
            "title": "[torrentpier/torrentpier] TorrentPier Deserialization of Untrusted Data vulnerability",
            "date_modified": "2024-07-15T21:38:59.000Z",
            "date_published": "2024-07-15T17:48:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fg86-4c2r-7wxw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}