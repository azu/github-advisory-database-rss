{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>SQL Injection vulnerability in function getTableCreationQuery in CreateAddField.php in phpMyAdmin 5.x before 5.0.2 via the tbl_storage_engine or tbl_collation parameters to tbl_create.php.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-22452\">https://nvd.nist.gov/vuln/detail/CVE-2020-22452</a></li>\n<li><a href=\"https://github.com/phpmyadmin/phpmyadmin/issues/15898\">https://github.com/phpmyadmin/phpmyadmin/issues/15898</a></li>\n<li><a href=\"https://github.com/phpmyadmin/phpmyadmin/pull/16004\">https://github.com/phpmyadmin/phpmyadmin/pull/16004</a></li>\n<li><a href=\"https://github.com/phpmyadmin/phpmyadmin/commit/bc982466f08ddccad4804ba928f84ff8e25107cb\">https://github.com/phpmyadmin/phpmyadmin/commit/bc982466f08ddccad4804ba928f84ff8e25107cb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prcg-mc23-hgjh\">https://github.com/advisories/GHSA-prcg-mc23-hgjh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prcg-mc23-hgjh",
            "title": "[phpmyadmin/phpmyadmin] phpmyadmin contains SQL Injection vulnerability",
            "date_modified": "2023-02-02T22:19:26.000Z",
            "date_published": "2023-01-26T21:30:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prcg-mc23-hgjh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The annotations feature lets users add annotations on highlighted parts of an entry.</p>\n<p>The controller does not validate authorization on <code>PUT</code> and <code>DELETE</code> requests which lets a logged user modify or delete any annotation using their ID on their endpoints <code>example.org/annotations/{id}</code>.</p>\n<p>These vulnerable requests also disclose highlighted parts of the entry to the attacker.</p>\n<p>You should immediately patch your instance to version 2.5.3 or higher if you have more than one user and/or having open registration.</p>\n<h3 id=\"resolution\">Resolution</h3>\n<p>A user check is now done in the vulnerable methods before applying change on an annotation.</p>\n<p>The Annotation retrieval through a <code>ParamConverter</code> has also been replaced with a call to the <code>AnnotationRepository</code> in order to prevent any information disclosure through response discrepancy.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<h3 id=\"credits\">Credits</h3>\n<p>We would like to thank @bAuh0lz for reporting this issue through huntr.dev.</p>\n<p>Reference: <a href=\"https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926/\">https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926/</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wallabag/wallabag/security/advisories/GHSA-mrqx-mjc4-vfh3\">https://github.com/wallabag/wallabag/security/advisories/GHSA-mrqx-mjc4-vfh3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0610\">https://nvd.nist.gov/vuln/detail/CVE-2023-0610</a></li>\n<li><a href=\"https://github.com/wallabag/wallabag/commit/5ac6b6bff9e2e3a87fd88c2904ff3c6aac40722e\">https://github.com/wallabag/wallabag/commit/5ac6b6bff9e2e3a87fd88c2904ff3c6aac40722e</a></li>\n<li><a href=\"https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926\">https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mrqx-mjc4-vfh3\">https://github.com/advisories/GHSA-mrqx-mjc4-vfh3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mrqx-mjc4-vfh3",
            "title": "[wallabag/wallabag] wallabag subject to Improper Authorization via annotations",
            "date_modified": "2023-02-02T19:27:18.000Z",
            "date_published": "2023-02-02T19:26:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mrqx-mjc4-vfh3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"description\">Description</h1>\n<p>The export feature lets a user export a single entry or a set of entries in a given format (<em>e.g. PDF, MOBI, TXT</em>).</p>\n<p>For example, <code>https://yourinstance.wallabag.org/export/45.pdf</code> will export the entry with id 45 in PDF format.</p>\n<p>Since wallabag 2.0.0-alpha.1, this feature is vulnerable to an insecure direct object reference attack. A logged user can export any single entry without ownership validation.</p>\n<p>This is due to a lack of access validation in the <code>downloadEntryAction</code> method.</p>\n<p><strong>You should immediately patch your instance to version 2.5.3 or higher if you have more than one user and/or having open registration.</strong></p>\n<h1 id=\"resolution\">Resolution</h1>\n<p>A user check is now done in the vulnerable method before sending the exported entry.</p>\n<p>The <code>Entry</code> retrieval through a <code>ParamConverter</code> has also been replaced with a call to the <code>EntryRepository</code> in order to prevent any information disclosure through response discrepancy.</p>\n<h1 id=\"workaround\">Workaround</h1>\n<p>If you are unable to update to the latest version or if you want to temporarily limit risk of exploitation, you may consider blocking requests to the endpoint <code>/export/*</code>.</p>\n<p>E.g. with nginx:</p>\n<pre><code class=\"language-nginx\">    location /export {\n        deny all;\n    }\n</code></pre>\n<h1 id=\"credits\">Credits</h1>\n<p>We would like to thank @bAuh0lz for reporting this issue through huntr.dev.</p>\n<p>Reference: <a href=\"https://www.huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0/\">https://www.huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0/</a> </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/wallabag/wallabag/security/advisories/GHSA-qwx8-mxxx-mg96\">https://github.com/wallabag/wallabag/security/advisories/GHSA-qwx8-mxxx-mg96</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0609\">https://nvd.nist.gov/vuln/detail/CVE-2023-0609</a></li>\n<li><a href=\"https://github.com/wallabag/wallabag/commit/0f7460dbab9e29f4f7d2944aca20210f828b6abb\">https://github.com/wallabag/wallabag/commit/0f7460dbab9e29f4f7d2944aca20210f828b6abb</a></li>\n<li><a href=\"https://huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0\">https://huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qwx8-mxxx-mg96\">https://github.com/advisories/GHSA-qwx8-mxxx-mg96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qwx8-mxxx-mg96",
            "title": "[wallabag/wallabag] wallabag contains Improper Authorization via export feature",
            "date_modified": "2023-02-02T19:27:33.000Z",
            "date_published": "2023-02-02T19:26:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qwx8-mxxx-mg96"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of <a href=\"https://github.com/advisories/GHSA-qwx8-mxxx-mg96\">GHSA-qwx8-mxxx-mg96</a>. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>Improper Authorization in GitHub repository wallabag/wallabag prior to 2.5.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0609\">https://nvd.nist.gov/vuln/detail/CVE-2023-0609</a></li>\n<li><a href=\"https://github.com/wallabag/wallabag/commit/0f7460dbab9e29f4f7d2944aca20210f828b6abb\">https://github.com/wallabag/wallabag/commit/0f7460dbab9e29f4f7d2944aca20210f828b6abb</a></li>\n<li><a href=\"https://huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0\">https://huntr.dev/bounties/3adef66f-fc86-4e6d-a540-2ffa59342ff0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h45f-rjvw-2rv2\">https://github.com/advisories/GHSA-h45f-rjvw-2rv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h45f-rjvw-2rv2",
            "title": "[wallabag/wallabag] Withdrawn: wallabag subject to Improper Authorization",
            "date_modified": "2023-02-02T19:26:28.000Z",
            "date_published": "2023-02-01T12:32:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h45f-rjvw-2rv2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of <a href=\"https://github.com/advisories/GHSA-mrqx-mjc4-vfh3\">GHSA-mrqx-mjc4-vfh3</a>. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>Improper Authorization in GitHub repository wallabag/wallabag prior to 2.5.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0610\">https://nvd.nist.gov/vuln/detail/CVE-2023-0610</a></li>\n<li><a href=\"https://github.com/wallabag/wallabag/commit/5ac6b6bff9e2e3a87fd88c2904ff3c6aac40722e\">https://github.com/wallabag/wallabag/commit/5ac6b6bff9e2e3a87fd88c2904ff3c6aac40722e</a></li>\n<li><a href=\"https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926\">https://huntr.dev/bounties/8fdd9b31-d89b-4bbe-9557-20b960faf926</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xrw3-wqph-3fxg\">https://github.com/advisories/GHSA-xrw3-wqph-3fxg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xrw3-wqph-3fxg",
            "title": "[wallabag/wallabag] Withdrawn: wallabag subject to Improper Authorization via annotations",
            "date_modified": "2023-02-02T19:26:28.000Z",
            "date_published": "2023-02-01T12:32:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xrw3-wqph-3fxg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Impact:</p>\n<p>An attacker could execute remote code on a system running wwbn/avideo</p>\n<p>Step to Reproduce:</p>\n<ol>\n<li>Go to the <code>My Videos</code> tab</li>\n</ol>\n<p><a href=\"https://demo.avideo.com/mvideos\">https://demo.avideo.com/mvideos</a></p>\n<ol start=\"2\">\n<li>Click \"Embed a video link\"</li>\n</ol>\n<p>Append a command to the url as a query string. eg. <code>?whoami</code></p>\n<p>then click Save</p>\n<p>This issue has been resolved in commit <code>236228f15</code></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/WWBN/AVideo/security/advisories/GHSA-pgvh-p3g4-86jw\">https://github.com/WWBN/AVideo/security/advisories/GHSA-pgvh-p3g4-86jw</a></li>\n<li><a href=\"https://github.com/WWBN/AVideo/commit/236228f15a9a31be5a0e60f05dac043682e49a5e\">https://github.com/WWBN/AVideo/commit/236228f15a9a31be5a0e60f05dac043682e49a5e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pgvh-p3g4-86jw\">https://github.com/advisories/GHSA-pgvh-p3g4-86jw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pgvh-p3g4-86jw",
            "title": "[wwbn/avideo] AVideo contains Command injection when embedding a video link",
            "date_modified": "2023-02-02T22:08:45.000Z",
            "date_published": "2023-02-02T01:32:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pgvh-p3g4-86jw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A cross-site scripting (XSS) vulnerability was discovered in the URL sanitization logic of the core parser. The vulnerability allowed arbitrary JavaScript execution when inserting a specially crafted piece of content into the editor using the clipboard or APIs. This impacts all users who are using TinyMCE 5.5.1 or lower.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in TinyMCE 5.6.0 by improved URL sanitization logic.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To work around this vulnerability, either:</p>\n<ul>\n<li>Upgrade to TinyMCE 5.6.0 or higher</li>\n<li>Manually sanitize <code>iframe</code>, <code>object</code> and <code>embed</code> URL attributes using a <a href=\"https://www.tiny.cloud/docs/api/tinymce.html/tinymce.html.domparser/#addnodefilter\">TinyMCE node filter</a>.</li>\n<li>Disable <code>iframe</code>, <code>object</code>, and <code>embed</code> elements in your content using the <a href=\"https://www.tiny.cloud/docs/configure/content-filtering/#invalid_elements\">invalid_elements</a> setting.</li>\n</ul>\n<h4 id=\"example-sanitizing-using-a-node-filter\">Example: Sanitizing using a node filter</h4>\n<pre><code class=\"language-js\">editor.parser.addNodeFilter('iframe,object,embed', function(nodes) {\n  nodes.forEach(function(node) {\n    if (node.attributes) {\n      node.attributes.forEach(function(attr) {\n        var name = attr.name;\n        var value = attr.value;\n        // Sanitize the attribute value here or remove it entirely\n        var sanitizedValue = ...;\n        node.attr(name, santizedValue);\n      });\n    }\n  });\n});\n</code></pre>\n<h4 id=\"example-using-invalid_elements\">Example: Using invalid_elements</h4>\n<pre><code class=\"language-js\">invalid_elements: 'iframe,object,embed'\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>Tiny Technologies would like to thank Aaron Bishop at SecurityMetrics for discovering this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.tiny.cloud/docs/release-notes/release-notes56/#securityfixes\">https://www.tiny.cloud/docs/release-notes/release-notes56/#securityfixes</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"https://github.com/tinymce/tinymce/issues\">TinyMCE repo</a></li>\n<li>Email us at <a href=\"mailto:infosec@tiny.cloud\">infosec@tiny.cloud</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tinymce/tinymce/security/advisories/GHSA-w7jx-j77m-wp65\">https://github.com/tinymce/tinymce/security/advisories/GHSA-w7jx-j77m-wp65</a></li>\n<li><a href=\"https://www.npmjs.com/package/tinymce\">https://www.npmjs.com/package/tinymce</a></li>\n<li><a href=\"https://www.tiny.cloud/docs/release-notes/release-notes56/#securityfixes\">https://www.tiny.cloud/docs/release-notes/release-notes56/#securityfixes</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7jx-j77m-wp65\">https://github.com/advisories/GHSA-w7jx-j77m-wp65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7jx-j77m-wp65",
            "title": "[tinymce/tinymce] Cross-site scripting vulnerability in TinyMCE",
            "date_modified": "2023-02-02T17:21:25.000Z",
            "date_published": "2021-01-06T19:27:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7jx-j77m-wp65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The upload functionality for updating user profile does not properly validate the file content-type, allowing any authenticated user to bypass this security check by adding a valid signature (p.e. GIF89) and sending any invalid content-type. This could allow an authenticated attacker to upload HTML files with JS content that will be executed in the context of the domain.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Update to version 10.5.16 or apply this patch manually <a href=\"https://github.com/pimcore/pimcore/pull/14125.patch\">https://github.com/pimcore/pimcore/pull/14125.patch</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pimcore/pimcore/security/advisories/GHSA-8xv4-jj4h-qww6\">https://github.com/pimcore/pimcore/security/advisories/GHSA-8xv4-jj4h-qww6</a></li>\n<li><a href=\"https://github.com/pimcore/pimcore/pull/14125\">https://github.com/pimcore/pimcore/pull/14125</a></li>\n<li><a href=\"https://huntr.dev/bounties/aa7ee076-d729-4fcc-9bcc-48bcbb8eac38/\">https://huntr.dev/bounties/aa7ee076-d729-4fcc-9bcc-48bcbb8eac38/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xv4-jj4h-qww6\">https://github.com/advisories/GHSA-8xv4-jj4h-qww6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xv4-jj4h-qww6",
            "title": "[pimcore/pimcore] Pimcore contains Unrestricted Upload of File with Dangerous Type",
            "date_modified": "2023-02-02T17:00:20.000Z",
            "date_published": "2023-02-02T17:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xv4-jj4h-qww6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - DOM in GitHub repository microweber/microweber prior to 1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-0608\">https://nvd.nist.gov/vuln/detail/CVE-2023-0608</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/20df56615e61624f5fff149849753869e4b3b936\">https://github.com/microweber/microweber/commit/20df56615e61624f5fff149849753869e4b3b936</a></li>\n<li><a href=\"https://huntr.dev/bounties/02a86e0d-dff7-4e27-89d5-2f7dcd4b580c\">https://huntr.dev/bounties/02a86e0d-dff7-4e27-89d5-2f7dcd4b580c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pj97-r83v-vj7f\">https://github.com/advisories/GHSA-pj97-r83v-vj7f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pj97-r83v-vj7f",
            "title": "[microweber/microweber] Microweber contains Cross-site Scripting",
            "date_modified": "2023-02-02T16:58:28.000Z",
            "date_published": "2023-02-01T06:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pj97-r83v-vj7f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/symfony] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/symfony] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/symfony] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/symfony] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/symfony] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/http-kernel] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/http-kernel] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/http-kernel] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/http-kernel] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony HTTP cache system acts as a reverse proxy: it caches HTTP responses (including headers) and returns them to clients.</p>\n<p>In a recent <code>AbstractSessionListener</code> change, the response might now contain a <code>Set-Cookie</code> header. If the Symfony HTTP cache system is enabled, this header might be stored and returned to some other clients. An attacker can use this vulnerability to retrieve the victim's session.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>The <code>HttpStore</code> constructor now takes a parameter containing a list of private headers that are removed from the HTTP response headers.\nThe default value for this parameter is <code>Set-Cookie</code>, but it can be overridden or extended by the application.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/d2f6322af9444ac5cd1ef3ac6f280dbef7f9d1fb\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Soner Sayakci for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/symfony/symfony/security/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-kernel/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24894.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24894\">https://symfony.com/cve-2022-24894</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7vf-5wrv-9fhv\">https://github.com/advisories/GHSA-h7vf-5wrv-9fhv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv",
            "title": "[symfony/http-kernel] Symfony storing cookie headers in HttpCache",
            "date_modified": "2023-02-01T18:48:10.000Z",
            "date_published": "2023-02-01T18:48:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7vf-5wrv-9fhv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>When authenticating users Symfony by default regenerates the session ID upon login, but preserves the rest of session attributes. Because this does not clear CSRF tokens upon login, this might enables <a href=\"https://canitakeyoursubdomain.name/\">same-site attackers</a> to bypass the CSRF protection mechanism by performing an attack similar to a session-fixation.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony removes all CSRF tokens from the session on successful login.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/5909d74ecee359ea4982fcf4331aaf2e489a1fd4\">here</a> for branch 4.4.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Marco Squarcina for reporting the issue and Nicolas Grekas for fixing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-3gv2-29qc-v67m\">https://github.com/symfony/symfony/security/advisories/GHSA-3gv2-29qc-v67m</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security-bundle/CVE-2022-24895.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security-bundle/CVE-2022-24895.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24895.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-24895.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-24895\">https://symfony.com/cve-2022-24895</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3gv2-29qc-v67m\">https://github.com/advisories/GHSA-3gv2-29qc-v67m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3gv2-29qc-v67m",
            "title": "[symfony/symfony] Symfony vulnerable to Session Fixation of CSRF tokens",
            "date_modified": "2023-02-01T18:48:08.000Z",
            "date_published": "2023-02-01T18:48:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3gv2-29qc-v67m"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}