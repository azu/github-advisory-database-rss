{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>The Flarum forum software is affected by a vulnerability that allows an attacker to conduct a Blind SSRF attack or disclose any file on the server, even with a basic user account on any Flarum forum. By uploading a file containing a URL and spoofing the MIME type, an attacker can manipulate the application to execute unintended actions. The vulnerability is due to the behavior of the <code>intervention/image</code> package, which attempts to interpret the supplied file contents as a URL, which then fetches its contents. This allows an attacker to exploit the vulnerability to perform SSRF attacks, disclose local file contents, or conduct a blind oracle attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Flarum <strong>v1.8</strong>.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>As a temporary workaround for the SSRF aspect of the vulnerability, one can disable PHP's <code>allow_url_fopen</code> which will prevent the fetching of external files via URLs.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Adam Kues - <a href=\"https://assetnote.io/\">Assetnote</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flarum/framework/security/advisories/GHSA-67c6-q4j4-hccg\">https://github.com/flarum/framework/security/advisories/GHSA-67c6-q4j4-hccg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40033\">https://nvd.nist.gov/vuln/detail/CVE-2023-40033</a></li>\n<li><a href=\"https://github.com/flarum/framework/commit/d1059c1cc79fe61f9538f3da55e8f42abbede570\">https://github.com/flarum/framework/commit/d1059c1cc79fe61f9538f3da55e8f42abbede570</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67c6-q4j4-hccg\">https://github.com/advisories/GHSA-67c6-q4j4-hccg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67c6-q4j4-hccg",
            "title": "[flarum/framework] Flarum vulnerable to LFI and Blind SSRF via Avatar upload",
            "date_modified": "2023-08-16T21:41:07.000Z",
            "date_published": "2023-08-16T21:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67c6-q4j4-hccg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>The Flarum forum software is affected by a vulnerability that allows an attacker to conduct a Blind SSRF attack or disclose any file on the server, even with a basic user account on any Flarum forum. By uploading a file containing a URL and spoofing the MIME type, an attacker can manipulate the application to execute unintended actions. The vulnerability is due to the behavior of the <code>intervention/image</code> package, which attempts to interpret the supplied file contents as a URL, which then fetches its contents. This allows an attacker to exploit the vulnerability to perform SSRF attacks, disclose local file contents, or conduct a blind oracle attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in Flarum <strong>v1.8</strong>.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>As a temporary workaround for the SSRF aspect of the vulnerability, one can disable PHP's <code>allow_url_fopen</code> which will prevent the fetching of external files via URLs.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>Adam Kues - <a href=\"https://assetnote.io/\">Assetnote</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flarum/framework/security/advisories/GHSA-67c6-q4j4-hccg\">https://github.com/flarum/framework/security/advisories/GHSA-67c6-q4j4-hccg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40033\">https://nvd.nist.gov/vuln/detail/CVE-2023-40033</a></li>\n<li><a href=\"https://github.com/flarum/framework/commit/d1059c1cc79fe61f9538f3da55e8f42abbede570\">https://github.com/flarum/framework/commit/d1059c1cc79fe61f9538f3da55e8f42abbede570</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-67c6-q4j4-hccg\">https://github.com/advisories/GHSA-67c6-q4j4-hccg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-67c6-q4j4-hccg",
            "title": "[flarum/core] Flarum vulnerable to LFI and Blind SSRF via Avatar upload",
            "date_modified": "2023-08-16T21:41:07.000Z",
            "date_published": "2023-08-16T21:02:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-67c6-q4j4-hccg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When a new <code>Member</code> record was created in the cms it was possible to set a blank password. If an attacker knows the email address of the user with the blank password then they can attempt to log in using an empty password. The default member authenticator, login form and basic auth all require a non-empty password, however if a custom authentication method is used it may allow a successful login with the empty password. Starting with this release, blank passwords are no no longer allowed when members are created in the CMS. Programatically created <code>Member</code> records, such as those used in unit tests, still allow blank passwords. You may have some <code>Member</code> records in your system already which have empty passwords. To detect these, you can loop over all <code>Member</code> records with <code>Member::get()</code> and pass each record into the below method. It might be sensible to create a <a href=\"https://api.silverstripe.org/5/SilverStripe/Dev/BuildTask.html\"><code>BuildTask</code></a> for this purpose.</p>\n<pre><code class=\"language-php\">  private function memberHasBlankPassword(Member $member): bool\n  {\n      // skip default admin as this is created programatically\n      if ($member-&gt;isDefaultAdmin()) {\n          return false;\n      }\n      // return true if a blank password is valid for this member\n      $authenticator = new MemberAuthenticator();\n      return $authenticator-&gt;checkPassword($member, '')-&gt;isValid();\n  }\n</code></pre>\n<p>  Once you have identified the records with empty passwords, it's up to you how to handle this. The most sensible way to resolve this is probably to generate a new secure password for each of these members, mark it as immediately expired, and email each affected member (assuming they have a valid email address in the system).</p>\n<p>Users would need to opt-in to insecure behavior by using a configuration which allowed for empty passwords. These configurations are not expected and hence this advisory is primarily informational in nature.</p>\n<p>Reported by: <a href=\"https://www.silverstripe.com/about-us/team/?member=sabina-talipova\">Sabina Talipova</a> from Silverstripe and <a href=\"https://github.com/bimthebam\">Christian BÃ¼nte</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-36xx-7vf6-7mv3\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-36xx-7vf6-7mv3</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/7b21b38ac4532d06565dfcefad50540ebd2b50f4\">https://github.com/silverstripe/silverstripe-framework/commit/7b21b38ac4532d06565dfcefad50540ebd2b50f4</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/releases/tag/4.13.14\">https://github.com/silverstripe/silverstripe-framework/releases/tag/4.13.14</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/releases/tag/5.0.13\">https://github.com/silverstripe/silverstripe-framework/releases/tag/5.0.13</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32302\">https://nvd.nist.gov/vuln/detail/CVE-2023-32302</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36xx-7vf6-7mv3\">https://github.com/advisories/GHSA-36xx-7vf6-7mv3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36xx-7vf6-7mv3",
            "title": "[silverstripe/framework] Silverstripe Framework: Members with no password can be created and bypass custom login forms",
            "date_modified": "2023-08-16T05:02:21.000Z",
            "date_published": "2023-07-31T22:00:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36xx-7vf6-7mv3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When a new <code>Member</code> record was created in the cms it was possible to set a blank password. If an attacker knows the email address of the user with the blank password then they can attempt to log in using an empty password. The default member authenticator, login form and basic auth all require a non-empty password, however if a custom authentication method is used it may allow a successful login with the empty password. Starting with this release, blank passwords are no no longer allowed when members are created in the CMS. Programatically created <code>Member</code> records, such as those used in unit tests, still allow blank passwords. You may have some <code>Member</code> records in your system already which have empty passwords. To detect these, you can loop over all <code>Member</code> records with <code>Member::get()</code> and pass each record into the below method. It might be sensible to create a <a href=\"https://api.silverstripe.org/5/SilverStripe/Dev/BuildTask.html\"><code>BuildTask</code></a> for this purpose.</p>\n<pre><code class=\"language-php\">  private function memberHasBlankPassword(Member $member): bool\n  {\n      // skip default admin as this is created programatically\n      if ($member-&gt;isDefaultAdmin()) {\n          return false;\n      }\n      // return true if a blank password is valid for this member\n      $authenticator = new MemberAuthenticator();\n      return $authenticator-&gt;checkPassword($member, '')-&gt;isValid();\n  }\n</code></pre>\n<p>  Once you have identified the records with empty passwords, it's up to you how to handle this. The most sensible way to resolve this is probably to generate a new secure password for each of these members, mark it as immediately expired, and email each affected member (assuming they have a valid email address in the system).</p>\n<p>Users would need to opt-in to insecure behavior by using a configuration which allowed for empty passwords. These configurations are not expected and hence this advisory is primarily informational in nature.</p>\n<p>Reported by: <a href=\"https://www.silverstripe.com/about-us/team/?member=sabina-talipova\">Sabina Talipova</a> from Silverstripe and <a href=\"https://github.com/bimthebam\">Christian BÃ¼nte</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-36xx-7vf6-7mv3\">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-36xx-7vf6-7mv3</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/7b21b38ac4532d06565dfcefad50540ebd2b50f4\">https://github.com/silverstripe/silverstripe-framework/commit/7b21b38ac4532d06565dfcefad50540ebd2b50f4</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/releases/tag/4.13.14\">https://github.com/silverstripe/silverstripe-framework/releases/tag/4.13.14</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/releases/tag/5.0.13\">https://github.com/silverstripe/silverstripe-framework/releases/tag/5.0.13</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32302\">https://nvd.nist.gov/vuln/detail/CVE-2023-32302</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36xx-7vf6-7mv3\">https://github.com/advisories/GHSA-36xx-7vf6-7mv3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36xx-7vf6-7mv3",
            "title": "[silverstripe/framework] Silverstripe Framework: Members with no password can be created and bypass custom login forms",
            "date_modified": "2023-08-16T05:02:21.000Z",
            "date_published": "2023-07-31T22:00:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36xx-7vf6-7mv3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr. We recommend upgrading to version 3.15.0 or greater.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22570\">https://nvd.nist.gov/vuln/detail/CVE-2021-22570</a></li>\n<li><a href=\"https://github.com/protocolbuffers/protobuf/releases/tag/v3.15.0\">https://github.com/protocolbuffers/protobuf/releases/tag/v3.15.0</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IFX6KPNOFHYD6L4XES5PCM3QNSKZBOTQ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IFX6KPNOFHYD6L4XES5PCM3QNSKZBOTQ/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3DVUZPALAQ34TQP6KFNLM4IZS6B32XSA/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3DVUZPALAQ34TQP6KFNLM4IZS6B32XSA/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BTRGBRC5KGCA4SK5MUNLPYJRAGXMBIYY/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BTRGBRC5KGCA4SK5MUNLPYJRAGXMBIYY/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NVTWVQRB5OCCTMKEQFY5MYED3DXDVSLP/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NVTWVQRB5OCCTMKEQFY5MYED3DXDVSLP/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5PAGL5M2KGYPN3VEQCRJJE6NA7D5YG5X/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5PAGL5M2KGYPN3VEQCRJJE6NA7D5YG5X/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KQJB6ZPRLKV6WCMX2PRRRQBFAOXFBK6B/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KQJB6ZPRLKV6WCMX2PRRRQBFAOXFBK6B/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MRWRAXAFR3JR7XCFWTHC2KALSZKWACCE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MRWRAXAFR3JR7XCFWTHC2KALSZKWACCE/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220429-0005/\">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/04/msg00019.html\">https://lists.debian.org/debian-lts-announce/2023/04/msg00019.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-77rm-9x9h-xj3g\">https://github.com/advisories/GHSA-77rm-9x9h-xj3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-77rm-9x9h-xj3g",
            "title": "[google/protobuf] NULL Pointer Dereference in Protocol Buffers",
            "date_modified": "2023-08-16T05:02:15.000Z",
            "date_published": "2022-01-27T00:01:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-77rm-9x9h-xj3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Unrestricted file upload vulnerability in <code>magmi/web/magmi.php</code> in the MAGMI (aka Magento Mass Importer) plugin 0.7.17a and earlier for Magento Community Edition (CE) allows remote authenticated users to execute arbitrary code by uploading a ZIP file that contains a PHP file, then accessing the PHP file via a direct request to it in <code>magmi/plugins/</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-8770\">https://nvd.nist.gov/vuln/detail/CVE-2014-8770</a></li>\n<li><a href=\"http://www.exploit-db.com/exploits/35052\">http://www.exploit-db.com/exploits/35052</a></li>\n<li><a href=\"https://sourceforge.net/projects/magmi/files/magmi-0.7/plugins/packages/\">https://sourceforge.net/projects/magmi/files/magmi-0.7/plugins/packages/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3gh-95p8-43qv\">https://github.com/advisories/GHSA-x3gh-95p8-43qv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3gh-95p8-43qv",
            "title": "[dweeves/magmi] MAGMI plugin for Magento Unsafe File Upload",
            "date_modified": "2023-08-16T05:02:13.000Z",
            "date_published": "2022-05-14T00:56:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3gh-95p8-43qv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20 does not process URL encoded data consistently within the Routing and Security components, which allows remote attackers to bypass intended URI restrictions via a doubly encoded string.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6431\">https://nvd.nist.gov/vuln/detail/CVE-2012-6431</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-83c3-qx27-2rwr\">https://github.com/advisories/GHSA-83c3-qx27-2rwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr",
            "title": "[symfony/symfony] Symfony Allows URI Restrictions Bypass Via Double-Encoded String",
            "date_modified": "2023-08-15T23:43:26.000Z",
            "date_published": "2022-05-17T05:17:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the internal routes configuration is enabled, allows remote attackers to access arbitrary services via vectors involving a URI beginning with a <code>/_internal</code> substring.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6432\">https://nvd.nist.gov/vuln/detail/CVE-2012-6432</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89cp-fvcc-hxh7\">https://github.com/advisories/GHSA-89cp-fvcc-hxh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7",
            "title": "[symfony/symfony] Symfony Access Control Vulnerability",
            "date_modified": "2023-08-15T23:43:13.000Z",
            "date_published": "2022-05-17T05:17:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the internal routes configuration is enabled, allows remote attackers to access arbitrary services via vectors involving a URI beginning with a <code>/_internal</code> substring.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6432\">https://nvd.nist.gov/vuln/detail/CVE-2012-6432</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89cp-fvcc-hxh7\">https://github.com/advisories/GHSA-89cp-fvcc-hxh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7",
            "title": "[symfony/symfony] Symfony Access Control Vulnerability",
            "date_modified": "2023-08-15T23:43:13.000Z",
            "date_published": "2022-05-17T05:17:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the internal routes configuration is enabled, allows remote attackers to access arbitrary services via vectors involving a URI beginning with a <code>/_internal</code> substring.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6432\">https://nvd.nist.gov/vuln/detail/CVE-2012-6432</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89cp-fvcc-hxh7\">https://github.com/advisories/GHSA-89cp-fvcc-hxh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7",
            "title": "[symfony/symfony] Symfony Access Control Vulnerability",
            "date_modified": "2023-08-15T23:43:13.000Z",
            "date_published": "2022-05-17T05:17:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>phpMyAdmin 3.5.x before 3.5.3 uses JavaScript code that is obtained through an HTTP session to phpmyadmin.net without SSL, which allows man-in-the-middle attackers to conduct cross-site scripting (XSS) attacks by modifying this code.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-5368\">https://nvd.nist.gov/vuln/detail/CVE-2012-5368</a></li>\n<li><a href=\"https://github.com/phpmyadmin/phpmyadmin/commit/50edafc0884aa15d0a1aa178089ac6a1ad2eb18a\">https://github.com/phpmyadmin/phpmyadmin/commit/50edafc0884aa15d0a1aa178089ac6a1ad2eb18a</a></li>\n<li><a href=\"https://github.com/phpmyadmin/phpmyadmin/commit/a547f3d3e2cf36c6a904fa3e053fd8bddd3fbbb0\">https://github.com/phpmyadmin/phpmyadmin/commit/a547f3d3e2cf36c6a904fa3e053fd8bddd3fbbb0</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-updates/2012-11/msg00033.html\">http://lists.opensuse.org/opensuse-updates/2012-11/msg00033.html</a></li>\n<li><a href=\"http://www.phpmyadmin.net/home_page/security/PMASA-2012-7.php\">http://www.phpmyadmin.net/home_page/security/PMASA-2012-7.php</a></li>\n<li><a href=\"https://web.archive.org/web/20200228143700/http://www.securityfocus.com/bid/55939\">https://web.archive.org/web/20200228143700/http://www.securityfocus.com/bid/55939</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xpxp-v33m-5jp9\">https://github.com/advisories/GHSA-xpxp-v33m-5jp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xpxp-v33m-5jp9",
            "title": "[phpmyadmin/phpmyadmin] phpMyAdmin Unsafe Fetching of Javascript Code",
            "date_modified": "2023-08-15T23:42:54.000Z",
            "date_published": "2022-05-17T05:16:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xpxp-v33m-5jp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The default configuration in the Dynamic Content Elements (dce) extension before 0.11.5 for TYPO3 allows remote attackers to obtain sensitive installation environment information by reading the update check request.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-8328\">https://nvd.nist.gov/vuln/detail/CVE-2014-8328</a></li>\n<li><a href=\"https://exchange.xforce.ibmcloud.com/vulnerabilities/97673\">https://exchange.xforce.ibmcloud.com/vulnerabilities/97673</a></li>\n<li><a href=\"http://typo3.org/extensions/repository/view/dce\">http://typo3.org/extensions/repository/view/dce</a></li>\n<li><a href=\"http://typo3.org/teams/security/security-bulletins/typo3-extensions/typo3-ext-sa-2014-015/\">http://typo3.org/teams/security/security-bulletins/typo3-extensions/typo3-ext-sa-2014-015/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v4vm-gj2x-6qhm\">https://github.com/advisories/GHSA-v4vm-gj2x-6qhm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v4vm-gj2x-6qhm",
            "title": "[t3/dce] DCE extension for Typo3 Discloses Environment Information",
            "date_modified": "2023-08-15T22:34:07.000Z",
            "date_published": "2022-05-17T19:57:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v4vm-gj2x-6qhm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The blind-marking implementation in Moodle through 2.3.11, 2.4.x before 2.4.10, 2.5.x before 2.5.6, and 2.6.x before 2.6.3 allows remote authenticated users to de-anonymize student identities by (1) using a screen reader or (2) reading the HTML source.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-0215\">https://nvd.nist.gov/vuln/detail/CVE-2014-0215</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=260363\">https://moodle.org/mod/forum/discuss.php?d=260363</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/05/19/1\">http://openwall.com/lists/oss-security/2014/05/19/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2fmv-j5xj-4fmq\">https://github.com/advisories/GHSA-2fmv-j5xj-4fmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq",
            "title": "[moodle/moodle] Moodle Reveals Student Information Meant To Be Anonymous",
            "date_modified": "2023-08-15T22:33:29.000Z",
            "date_published": "2022-05-13T01:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The blind-marking implementation in Moodle through 2.3.11, 2.4.x before 2.4.10, 2.5.x before 2.5.6, and 2.6.x before 2.6.3 allows remote authenticated users to de-anonymize student identities by (1) using a screen reader or (2) reading the HTML source.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-0215\">https://nvd.nist.gov/vuln/detail/CVE-2014-0215</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=260363\">https://moodle.org/mod/forum/discuss.php?d=260363</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/05/19/1\">http://openwall.com/lists/oss-security/2014/05/19/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2fmv-j5xj-4fmq\">https://github.com/advisories/GHSA-2fmv-j5xj-4fmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq",
            "title": "[moodle/moodle] Moodle Reveals Student Information Meant To Be Anonymous",
            "date_modified": "2023-08-15T22:33:29.000Z",
            "date_published": "2022-05-13T01:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The blind-marking implementation in Moodle through 2.3.11, 2.4.x before 2.4.10, 2.5.x before 2.5.6, and 2.6.x before 2.6.3 allows remote authenticated users to de-anonymize student identities by (1) using a screen reader or (2) reading the HTML source.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-0215\">https://nvd.nist.gov/vuln/detail/CVE-2014-0215</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=260363\">https://moodle.org/mod/forum/discuss.php?d=260363</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/05/19/1\">http://openwall.com/lists/oss-security/2014/05/19/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2fmv-j5xj-4fmq\">https://github.com/advisories/GHSA-2fmv-j5xj-4fmq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq",
            "title": "[moodle/moodle] Moodle Reveals Student Information Meant To Be Anonymous",
            "date_modified": "2023-08-15T22:33:29.000Z",
            "date_published": "2022-05-13T01:12:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2fmv-j5xj-4fmq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The generate_password function in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 does not provide a sufficient number of possible temporary passwords, which allows remote attackers to obtain access via a brute-force attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-7845\">https://nvd.nist.gov/vuln/detail/CVE-2014-7845</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=275152\">https://moodle.org/mod/forum/discuss.php?d=275152</a></li>\n<li><a href=\"http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050\">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/11/17/11\">http://openwall.com/lists/oss-security/2014/11/17/11</a></li>\n<li><a href=\"https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215\">https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v64-447r-wch6\">https://github.com/advisories/GHSA-9v64-447r-wch6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v64-447r-wch6",
            "title": "[moodle/moodle] Moodle Temporary Passwords are Brute Force-able",
            "date_modified": "2023-08-15T22:32:56.000Z",
            "date_published": "2022-05-13T01:12:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v64-447r-wch6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The generate_password function in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 does not provide a sufficient number of possible temporary passwords, which allows remote attackers to obtain access via a brute-force attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-7845\">https://nvd.nist.gov/vuln/detail/CVE-2014-7845</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=275152\">https://moodle.org/mod/forum/discuss.php?d=275152</a></li>\n<li><a href=\"http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050\">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/11/17/11\">http://openwall.com/lists/oss-security/2014/11/17/11</a></li>\n<li><a href=\"https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215\">https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v64-447r-wch6\">https://github.com/advisories/GHSA-9v64-447r-wch6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v64-447r-wch6",
            "title": "[moodle/moodle] Moodle Temporary Passwords are Brute Force-able",
            "date_modified": "2023-08-15T22:32:56.000Z",
            "date_published": "2022-05-13T01:12:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v64-447r-wch6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The generate_password function in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 does not provide a sufficient number of possible temporary passwords, which allows remote attackers to obtain access via a brute-force attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-7845\">https://nvd.nist.gov/vuln/detail/CVE-2014-7845</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=275152\">https://moodle.org/mod/forum/discuss.php?d=275152</a></li>\n<li><a href=\"http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050\">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-47050</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/11/17/11\">http://openwall.com/lists/oss-security/2014/11/17/11</a></li>\n<li><a href=\"https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215\">https://web.archive.org/web/20150914064838/http://www.securitytracker.com/id/1031215</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9v64-447r-wch6\">https://github.com/advisories/GHSA-9v64-447r-wch6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9v64-447r-wch6",
            "title": "[moodle/moodle] Moodle Temporary Passwords are Brute Force-able",
            "date_modified": "2023-08-15T22:32:56.000Z",
            "date_published": "2022-05-13T01:12:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9v64-447r-wch6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Moodle through 2.3.11, 2.4.x before 2.4.11, 2.5.x before 2.5.7, 2.6.x before 2.6.4, and 2.7.x before 2.7.1 allows remote authenticated users to execute arbitrary code via a calculated question in a quiz.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-3545\">https://nvd.nist.gov/vuln/detail/CVE-2014-3545</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=264266\">https://moodle.org/mod/forum/discuss.php?d=264266</a></li>\n<li><a href=\"http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-46148\">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-46148</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/07/21/1\">http://openwall.com/lists/oss-security/2014/07/21/1</a></li>\n<li><a href=\"https://github.com/moodle/moodle/blob/1474f74687dda57c7d011b92d16f25b9870d2799/question/type/calculated/question.php#L426\">https://github.com/moodle/moodle/blob/1474f74687dda57c7d011b92d16f25b9870d2799/question/type/calculated/question.php#L426</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3m99-h3hp-w9j7\">https://github.com/advisories/GHSA-3m99-h3hp-w9j7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3m99-h3hp-w9j7",
            "title": "[moodle/moodle] Moodle remote code execution via quiz questions",
            "date_modified": "2023-08-15T22:30:29.000Z",
            "date_published": "2022-05-13T01:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3m99-h3hp-w9j7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Moodle through 2.3.11, 2.4.x before 2.4.11, 2.5.x before 2.5.7, 2.6.x before 2.6.4, and 2.7.x before 2.7.1 allows remote authenticated users to execute arbitrary code via a calculated question in a quiz.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-3545\">https://nvd.nist.gov/vuln/detail/CVE-2014-3545</a></li>\n<li><a href=\"https://moodle.org/mod/forum/discuss.php?d=264266\">https://moodle.org/mod/forum/discuss.php?d=264266</a></li>\n<li><a href=\"http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-46148\">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-46148</a></li>\n<li><a href=\"http://openwall.com/lists/oss-security/2014/07/21/1\">http://openwall.com/lists/oss-security/2014/07/21/1</a></li>\n<li><a href=\"https://github.com/moodle/moodle/blob/1474f74687dda57c7d011b92d16f25b9870d2799/question/type/calculated/question.php#L426\">https://github.com/moodle/moodle/blob/1474f74687dda57c7d011b92d16f25b9870d2799/question/type/calculated/question.php#L426</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3m99-h3hp-w9j7\">https://github.com/advisories/GHSA-3m99-h3hp-w9j7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3m99-h3hp-w9j7",
            "title": "[moodle/moodle] Moodle remote code execution via quiz questions",
            "date_modified": "2023-08-15T22:30:29.000Z",
            "date_published": "2022-05-13T01:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3m99-h3hp-w9j7"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}