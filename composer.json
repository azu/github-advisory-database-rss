{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>Passbolt provides a way for system administrators to generate a PGP key for the server during installation. The wizard requests a username, an e-mail address and an optional comment. No escaping or verification is done by Passbolt, effectively allowing a user to inject bash code.</p>\n<p>The impact is very high, but the probability is very low given that this vulnerability can only be exploited during Passbolt’s installation stage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/passbolt/passbolt_api/commit/be84671676ebac43d49e326a14f1afe259777611\">https://github.com/passbolt/passbolt_api/commit/be84671676ebac43d49e326a14f1afe259777611</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-1.yaml</a></li>\n<li><a href=\"https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities\">https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cv5c-2qv5-w2m2\">https://github.com/advisories/GHSA-cv5c-2qv5-w2m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cv5c-2qv5-w2m2",
            "title": "[passbolt/passbolt_api] Passbolt Api Remote code execution",
            "date_modified": "2024-05-20T16:51:29.000Z",
            "date_published": "2024-05-20T16:51:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cv5c-2qv5-w2m2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Passbolt uses three cookies: a session cookie, a CSRF protection cookie and a cookie to keep track of the multiple-factor authentication process.</p>\n<p>Both the session cookie and the mfa cookie are properly set HTTP-only to prevent an attacker from retrieving the content of those cookies if they managed to exploit an XSS.</p>\n<p>The /auth/verify.json endpoint returns a JSON that, among other things, contains the cookies sent in the request. (similar to the TRACE HTTP method)</p>\n<p>An attacker who manages to leverage an XSS vulnerability could retrieve the session cookies of a legitimate user, effectively granting them the ability to retrieve information (such as encrypted password list or group list) without requiring user interaction.</p>\n<p>This vulnerability has a low impact, but no immediate risk due to it requiring the exploitation of an XSS vulnerability that has yet to be found.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/passbolt/passbolt_api/commit/fbf99fed4b60db5fec97b58a2251a04bb42c1b15\">https://github.com/passbolt/passbolt_api/commit/fbf99fed4b60db5fec97b58a2251a04bb42c1b15</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-2.yaml</a></li>\n<li><a href=\"https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities\">https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5pp-pmq8-gp46\">https://github.com/advisories/GHSA-f5pp-pmq8-gp46</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5pp-pmq8-gp46",
            "title": "[passbolt/passbolt_api] Passbolt Api Retrieval of HTTP-only cookies",
            "date_modified": "2024-05-20T16:51:24.000Z",
            "date_published": "2024-05-20T16:51:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5pp-pmq8-gp46"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Passbolt sends e-mail to users to warn them about different type of events such as the creation, modification or deletion of a password. Those e-mails may contain user-specified input, such as a password’s title or description.</p>\n<p>Passbolt does not escape the user’s input properly, resulting in the user being able to inject HTML code in an e-mail.</p>\n<p>An authenticated attacker could share a password containing an img HTML tag in its description with an other user to obtain information about their mail user-agent.</p>\n<p>This vulnerability has a very low impact. Most MUA do not embed remote images to protect their users’ privacy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/passbolt/passbolt_api/commit/00f0ebe37d78815adee26d5e80cf2250fe878647\">https://github.com/passbolt/passbolt_api/commit/00f0ebe37d78815adee26d5e80cf2250fe878647</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/passbolt/passbolt_api/2019-02-11-3.yaml</a></li>\n<li><a href=\"https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities\">https://www.passbolt.com/incidents/20190211_multiple_vulnerabilities</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v86m-j5f7-ccwh\">https://github.com/advisories/GHSA-v86m-j5f7-ccwh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v86m-j5f7-ccwh",
            "title": "[passbolt/passbolt_api] Passbolt Api E-mail HTML injection",
            "date_modified": "2024-05-20T16:51:21.000Z",
            "date_published": "2024-05-20T16:51:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v86m-j5f7-ccwh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OroPlatform is prone to open redirection which could allow attackers to redirect users to external website.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/oroinc/platform/commit/baf79ad4f6b32bd2834b1766745afb20a5ef4739\">https://github.com/oroinc/platform/commit/baf79ad4f6b32bd2834b1766745afb20a5ef4739</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/oro/platform/2015-07-08.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/oro/platform/2015-07-08.yaml</a></li>\n<li><a href=\"https://oroinc.com/orocrm/blog/orocrm-security-announcement\">https://oroinc.com/orocrm/blog/orocrm-security-announcement</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3vhm-q4w3-rw8q\">https://github.com/advisories/GHSA-3vhm-q4w3-rw8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3vhm-q4w3-rw8q",
            "title": "[oro/platform] OroPlatform Forced Redirect to External Website",
            "date_modified": "2024-05-20T14:22:10.000Z",
            "date_published": "2024-05-20T14:22:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3vhm-q4w3-rw8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OroCRM is prone to open redirection which could allow attackers to redirect users to external website.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/oroinc/crm/commit/f86a959dcd77af09e7a5a5930a60cf409924a2be\">https://github.com/oroinc/crm/commit/f86a959dcd77af09e7a5a5930a60cf409924a2be</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/oro/crm/2015-07-08.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/oro/crm/2015-07-08.yaml</a></li>\n<li><a href=\"https://oroinc.com/orocrm/blog/orocrm-security-announcement\">https://oroinc.com/orocrm/blog/orocrm-security-announcement</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v8hp-239v-9367\">https://github.com/advisories/GHSA-v8hp-239v-9367</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v8hp-239v-9367",
            "title": "[oro/crm] OroCRM Forced Redirect to External Website",
            "date_modified": "2024-05-20T14:19:29.000Z",
            "date_published": "2024-05-20T14:19:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v8hp-239v-9367"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>random_compat versions prior to 2.0 are affected by a security vulnerability related to the insecure usage of Cryptographically Secure Pseudo-Random Number Generators (CSPRNG). The affected versions use openssl_random_pseudo_bytes(), which may result in insufficient entropy and compromise the security of generated random numbers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/paragonie/random_compat/issues/96\">https://github.com/paragonie/random_compat/issues/96</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/paragonie/random_compat/2016-03-16.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/paragonie/random_compat/2016-03-16.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3fmq-x9q6-wm39\">https://github.com/advisories/GHSA-3fmq-x9q6-wm39</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3fmq-x9q6-wm39",
            "title": "[paragonie/random_compat] random_compat Uses insecure CSPRNG",
            "date_modified": "2024-05-17T23:27:21.000Z",
            "date_published": "2024-05-17T23:27:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3fmq-x9q6-wm39"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Vulnerability in onelogin/php-saml versions prior to 2.10.0 allows signature Wrapping attacks which may result in a malicious user gaining unauthorized access to a system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/onelogin/php-saml/commit/9d31baa97a57b0989020f62d24307c29e325dac3\">https://github.com/onelogin/php-saml/commit/9d31baa97a57b0989020f62d24307c29e325dac3</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/CVE-2016-1000253.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/CVE-2016-1000253.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g48f-pgwh-wwxx\">https://github.com/advisories/GHSA-g48f-pgwh-wwxx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g48f-pgwh-wwxx",
            "title": "[onelogin/php-saml] onelogin/php-saml signature wrapping attacks",
            "date_modified": "2024-05-17T23:06:56.000Z",
            "date_published": "2024-05-17T23:06:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g48f-pgwh-wwxx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In order to verify Signatures on Logoutrequests and LogoutResponses we use\nthe verifySignature of the class XMLSecurityKey from the xmlseclibs library.\nThat method end up calling openssl_verify() depending on the signature algorithm used.</p>\n<p>The openssl_verify() function returns 1 when the signature was successfully verified,\n0 if it failed to verify with the given key, and -1 in case an error occurs.\nPHP allows translating numerical values to boolean implicitly, with the following correspondences:</p>\n<ul>\n<li>0 equals false.</li>\n<li>Non-zero equals true.</li>\n</ul>\n<p>This means that an implicit conversion to boolean of the values returned by openssl_verify()\nwill convert an error state, signaled by the value -1, to a successful verification of the\nsignature (represented by the boolean true).</p>\n<p>The LogoutRequest/LogoutResponse signature validator was performing an implicit conversion to boolean\nof the values returned by the verify() method, which subsequently will return the same output\nas openssl_verify() under most circumstances.\nThis means an error during signature verification is treated as a successful verification by the method.</p>\n<p>Since the signature validation of SAMLResponses were not affected, the impact of this security\nvulnerability is lower, but an update of the php-saml toolkit is recommended.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/onelogin/php-saml/commit/949359f5cad5e1d085c4e5447d9aa8f49a6e82a1\">https://github.com/onelogin/php-saml/commit/949359f5cad5e1d085c4e5447d9aa8f49a6e82a1</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/2017-02-28.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/2017-02-28.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9wrw-p9rm-r782\">https://github.com/advisories/GHSA-9wrw-p9rm-r782</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9wrw-p9rm-r782",
            "title": "[onelogin/php-saml] onelogin/php-saml Improper signature validation on LogoutRequest/LogoutResponse.",
            "date_modified": "2024-05-17T23:06:55.000Z",
            "date_published": "2024-05-17T23:06:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9wrw-p9rm-r782"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of nzo/url-encryptor-bundle prior to 5.0.1 and 4.3.2 are affected by a security vulnerability related to the lack of mandatory key and IV requirements. By default, the bundle uses the aes-256-ctr algorithm, which is susceptible to malleability attacks, potentially leading to Insecure Direct Object Reference (IDOR) vulnerabilities. Additionally, the reuse of keys enables users to decrypt and modify encrypted data if they can guess the plaintext of one ciphertext.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a\">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a</a></li>\n<li><a href=\"https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581\">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r2r8-36pq-27cm\">https://github.com/advisories/GHSA-r2r8-36pq-27cm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r2r8-36pq-27cm",
            "title": "[nzo/url-encryptor-bundle] nzo/url-encryptor-bundle Insecure default secret key and IV allowing anyone to decrypt values",
            "date_modified": "2024-05-17T23:06:54.000Z",
            "date_published": "2024-05-17T23:06:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r2r8-36pq-27cm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of nzo/url-encryptor-bundle prior to 5.0.1 and 4.3.2 are affected by a security vulnerability related to the lack of mandatory key and IV requirements. By default, the bundle uses the aes-256-ctr algorithm, which is susceptible to malleability attacks, potentially leading to Insecure Direct Object Reference (IDOR) vulnerabilities. Additionally, the reuse of keys enables users to decrypt and modify encrypted data if they can guess the plaintext of one ciphertext.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a\">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a</a></li>\n<li><a href=\"https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581\">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r2r8-36pq-27cm\">https://github.com/advisories/GHSA-r2r8-36pq-27cm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r2r8-36pq-27cm",
            "title": "[nzo/url-encryptor-bundle] nzo/url-encryptor-bundle Insecure default secret key and IV allowing anyone to decrypt values",
            "date_modified": "2024-05-17T23:06:54.000Z",
            "date_published": "2024-05-17T23:06:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r2r8-36pq-27cm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A remote code execution vulnerability has been found in the Swift Mailer library (swiftmailer/swiftmailer) recently. <a href=\"http://legalhackers.com/advisories/SwiftMailer-Exploit-Remote-Code-Exec-CVE-2016-10074-Vuln.html\">See this advisory for details</a>. If you are not using the default mail() transport, this particular problem  does not affect you. Upgrading is of course still recommended!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/swiftmailer/2017-01-06.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/swiftmailer/2017-01-06.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2017-01.html\">https://www.neos.io/blog/flow-sa-2017-01.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rq6q-hjvh-5mwh\">https://github.com/advisories/GHSA-rq6q-hjvh-5mwh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rq6q-hjvh-5mwh",
            "title": "[neos/swiftmailer] Flow Swift Mailer package Remote code execution",
            "date_modified": "2024-05-17T23:06:51.000Z",
            "date_published": "2024-05-17T23:06:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rq6q-hjvh-5mwh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>\n<h3 id=\"reflected-cross-site-scripting-sxss-with-authentication\">Reflected Cross-Site Scripting (SXSS) with authentication</h3>\n<p>A Neos backend user with permission to modify content can insert JavaScript instructions into content elements. The browser will execute the script in \"Print\" preview mode.\nA Neos backend user who can modify his profile information (\"Title\", \"First Name\", \"Last name\", \"Middle Name\", \"Other Name\") can inject JavaScript instructions in those parameters. Once set up, an administrator who wants to edit this user account will execute the code.\nBoth attack vectors require a valid Neos backend user account.</p>\n<h3 id=\"reflected-cross-site-scripting-rxss-without-authentication\">Reflected Cross-Site Scripting (RXSS) without authentication</h3>\n<p>A non-persistent XSS using parameters passed during plugin execution is possible. If invalid parameters are passed, an error message may be shown (depending on the context Neos runs in and how the parameters are handled) that contains the unescaped parameter value.</p>\n<p>Note: Through the HTML content type the inclusion of arbitrary JavaScript is still possible for users with a valid Neos backend account. If you want to prohibit that, disable the nodetype or restrict access.</p>\n<h3 id=\"potential-backdoor-upload\">Potential backdoor upload</h3>\n<p>Through an issue with the underlying Flow framework (see the related Flow advisory Flow-SA-2015-001) any editor with access to the Media Management module can upload server side script files (when using Neos 2.0.x). If those scripts are executed by the server when accessed through their public URL, anything not blocked through other means is possible (information disclosure, placement of backdoors, data removal, …).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-002.html\">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6cj3-rc4p-f38f\">https://github.com/advisories/GHSA-6cj3-rc4p-f38f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6cj3-rc4p-f38f",
            "title": "[neos/neos] Cross-site Scripting vulnerabilities in Neos",
            "date_modified": "2024-05-17T23:04:04.000Z",
            "date_published": "2024-05-17T23:04:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6cj3-rc4p-f38f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>\n<h3 id=\"reflected-cross-site-scripting-sxss-with-authentication\">Reflected Cross-Site Scripting (SXSS) with authentication</h3>\n<p>A Neos backend user with permission to modify content can insert JavaScript instructions into content elements. The browser will execute the script in \"Print\" preview mode.\nA Neos backend user who can modify his profile information (\"Title\", \"First Name\", \"Last name\", \"Middle Name\", \"Other Name\") can inject JavaScript instructions in those parameters. Once set up, an administrator who wants to edit this user account will execute the code.\nBoth attack vectors require a valid Neos backend user account.</p>\n<h3 id=\"reflected-cross-site-scripting-rxss-without-authentication\">Reflected Cross-Site Scripting (RXSS) without authentication</h3>\n<p>A non-persistent XSS using parameters passed during plugin execution is possible. If invalid parameters are passed, an error message may be shown (depending on the context Neos runs in and how the parameters are handled) that contains the unescaped parameter value.</p>\n<p>Note: Through the HTML content type the inclusion of arbitrary JavaScript is still possible for users with a valid Neos backend account. If you want to prohibit that, disable the nodetype or restrict access.</p>\n<h3 id=\"potential-backdoor-upload\">Potential backdoor upload</h3>\n<p>Through an issue with the underlying Flow framework (see the related Flow advisory Flow-SA-2015-001) any editor with access to the Media Management module can upload server side script files (when using Neos 2.0.x). If those scripts are executed by the server when accessed through their public URL, anything not blocked through other means is possible (information disclosure, placement of backdoors, data removal, …).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-002.html\">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6cj3-rc4p-f38f\">https://github.com/advisories/GHSA-6cj3-rc4p-f38f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6cj3-rc4p-f38f",
            "title": "[neos/neos] Cross-site Scripting vulnerabilities in Neos",
            "date_modified": "2024-05-17T23:04:04.000Z",
            "date_published": "2024-05-17T23:04:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6cj3-rc4p-f38f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-001.html\">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43cf-7f3h-38rg\">https://github.com/advisories/GHSA-43cf-7f3h-38rg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43cf-7f3h-38rg",
            "title": "[neos/neos] Privilege Escalation in TYPO3 Neos",
            "date_modified": "2024-05-17T23:03:48.000Z",
            "date_published": "2024-05-17T23:03:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43cf-7f3h-38rg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-001.html\">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43cf-7f3h-38rg\">https://github.com/advisories/GHSA-43cf-7f3h-38rg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43cf-7f3h-38rg",
            "title": "[neos/neos] Privilege Escalation in TYPO3 Neos",
            "date_modified": "2024-05-17T23:03:48.000Z",
            "date_published": "2024-05-17T23:03:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43cf-7f3h-38rg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pq8-67pw-j6hw\">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw",
            "title": "[neos/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-05-17T23:03:26.000Z",
            "date_published": "2024-05-17T23:03:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pq8-67pw-j6hw\">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw",
            "title": "[neos/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-05-17T23:03:26.000Z",
            "date_published": "2024-05-17T23:03:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pq8-67pw-j6hw\">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw",
            "title": "[neos/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-05-17T23:03:26.000Z",
            "date_published": "2024-05-17T23:03:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pq8-67pw-j6hw\">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw",
            "title": "[neos/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-05-17T23:03:26.000Z",
            "date_published": "2024-05-17T23:03:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pq8-67pw-j6hw\">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw",
            "title": "[neos/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-05-17T23:03:26.000Z",
            "date_published": "2024-05-17T23:03:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pq8-67pw-j6hw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}