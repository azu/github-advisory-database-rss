{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>Drupal core sanitizes filenames with dangerous extensions upon upload and strips leading and trailing dots from filenames to prevent uploading server configuration files.</p>\n<p>However, the protections for these two vulnerabilities previously did not work correctly together. As a result, if the site were configured to allow the upload of files with an htaccess extension, these files' filenames would not be properly sanitized. This could allow bypassing the protections provided by Drupal core's default .htaccess files and possible remote code execution on Apache web servers.</p>\n<p>This issue is mitigated by the fact that it requires a field administrator to explicitly configure a file field to allow htaccess as an extension (a restricted permission), or a contributed module or custom code that overrides allowed file uploads.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17\">https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a\">https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-014\">https://www.drupal.org/sa-core-2022-014</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6955-67hm-vjjq\">https://github.com/advisories/GHSA-6955-67hm-vjjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq",
            "title": "[drupal/core] Drupal core arbitrary PHP code execution",
            "date_modified": "2022-08-06T09:33:39.000Z",
            "date_published": "2022-08-06T09:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Drupal core sanitizes filenames with dangerous extensions upon upload and strips leading and trailing dots from filenames to prevent uploading server configuration files.</p>\n<p>However, the protections for these two vulnerabilities previously did not work correctly together. As a result, if the site were configured to allow the upload of files with an htaccess extension, these files' filenames would not be properly sanitized. This could allow bypassing the protections provided by Drupal core's default .htaccess files and possible remote code execution on Apache web servers.</p>\n<p>This issue is mitigated by the fact that it requires a field administrator to explicitly configure a file field to allow htaccess as an extension (a restricted permission), or a contributed module or custom code that overrides allowed file uploads.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17\">https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a\">https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-014\">https://www.drupal.org/sa-core-2022-014</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6955-67hm-vjjq\">https://github.com/advisories/GHSA-6955-67hm-vjjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq",
            "title": "[drupal/core] Drupal core arbitrary PHP code execution",
            "date_modified": "2022-08-06T09:33:39.000Z",
            "date_published": "2022-08-06T09:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A stored cross-site scripting (XSS) vulnerability in /index.php?r=site%2Fsignup of Feehi CMS v2.1.1 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the username field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34140\">https://nvd.nist.gov/vuln/detail/CVE-2022-34140</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/61\">https://github.com/liufee/cms/issues/61</a></li>\n<li><a href=\"https://github.com/liufee/cms\">https://github.com/liufee/cms</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-25q6-m425-9fqr\">https://github.com/advisories/GHSA-25q6-m425-9fqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-25q6-m425-9fqr",
            "title": "[feehi/cms] Feehi CMS Cross-site Scripting",
            "date_modified": "2022-08-06T09:24:43.000Z",
            "date_published": "2022-07-29T00:00:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-25q6-m425-9fqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file upload vulnerability in the Advertising Management module of Feehi CMS v2.1.1 allows attackers to execute arbitrary code via a crafted PHP file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34971\">https://nvd.nist.gov/vuln/detail/CVE-2022-34971</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/62\">https://github.com/liufee/cms/issues/62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jxg9-2ch7-f552\">https://github.com/advisories/GHSA-jxg9-2ch7-f552</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jxg9-2ch7-f552",
            "title": "[feehi/cms] Feehi CMS arbitrary code execution via crafted PHP file",
            "date_modified": "2022-08-06T05:31:43.000Z",
            "date_published": "2022-07-28T00:00:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jxg9-2ch7-f552"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users electing to prevent others starting private discussions with themselves.</p>\n<blockquote>\n<p>Please note that admins and others with appropriate permissions can always bypass this preference, as was the case before.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>Users of Byobu should update the extension to version 1.1.7, where this has been patched. <strong>This version is only supported on v1.2.0 and later of Flarum Core.</strong></p>\n<p>Users of Byobu with Flarum 1.0 or 1.1 should upgrade to Flarum 1.2 or later, or evaluate the impact this issue has on your forum's users and choose to disable the extension if needed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfFlarum/byobu/security/advisories/GHSA-6gjm-6wj6-4px5\">https://github.com/FriendsOfFlarum/byobu/security/advisories/GHSA-6gjm-6wj6-4px5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35921\">https://nvd.nist.gov/vuln/detail/CVE-2022-35921</a></li>\n<li><a href=\"https://github.com/FriendsOfFlarum/byobu/commit/23dcf93a30f948d30c678a96681f7fdefeba5171\">https://github.com/FriendsOfFlarum/byobu/commit/23dcf93a30f948d30c678a96681f7fdefeba5171</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6gjm-6wj6-4px5\">https://github.com/advisories/GHSA-6gjm-6wj6-4px5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6gjm-6wj6-4px5",
            "title": "[fof/byobu] Byobu user preference to prevent private discussions being started are not respected",
            "date_modified": "2022-08-06T05:20:54.000Z",
            "date_published": "2022-08-06T05:20:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6gjm-6wj6-4px5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory is a duplicate of GHSA-hrgx-p36p-89q4. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>PrestaShop 1.6.0.10 through 1.7.x before 1.7.8.2 allows remote attackers to execute arbitrary code, aka a \"previously unknown vulnerability chain\" related to SQL injection, as exploited in the wild in July 2022.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36408\">https://nvd.nist.gov/vuln/detail/CVE-2022-36408</a></li>\n<li><a href=\"https://build.prestashop.com/news/major-security-vulnerability-on-prestashop-websites/\">https://build.prestashop.com/news/major-security-vulnerability-on-prestashop-websites/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qv6h-pcf2-2w3g\">https://github.com/advisories/GHSA-qv6h-pcf2-2w3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qv6h-pcf2-2w3g",
            "title": "[prestashop/prestashop] Duplicate Advisory GHSA-hrgx-p36p-89q4",
            "date_modified": "2022-08-05T18:57:59.000Z",
            "date_published": "2022-07-23T00:00:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qv6h-pcf2-2w3g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Microwerber prior to version 1.2.20 is vulnerable to stored Cross-site Scripting (XSS).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2495\">https://nvd.nist.gov/vuln/detail/CVE-2022-2495</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/d35e691e72d358430abc8e99f5ba9eb374423b9f\">https://github.com/microweber/microweber/commit/d35e691e72d358430abc8e99f5ba9eb374423b9f</a></li>\n<li><a href=\"https://huntr.dev/bounties/00affb69-275d-4f4c-b419-437922bc7798\">https://huntr.dev/bounties/00affb69-275d-4f4c-b419-437922bc7798</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xg72-6c83-ghh4\">https://github.com/advisories/GHSA-xg72-6c83-ghh4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xg72-6c83-ghh4",
            "title": "[microweber/microweber] Microweber Stored Cross-site Scripting before v1.2.20",
            "date_modified": "2022-08-02T16:23:54.000Z",
            "date_published": "2022-07-23T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xg72-6c83-ghh4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Eval injection possible if the shop is vulnerable to an SQL injection.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is fixed in version 1.7.8.7</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Delete the MySQL Smarty cache feature by removing these lines in the file <code>config/smarty.config.inc.php</code> lines 43-46 (PrestaShop 1.7) or 40-43 (PrestaShop 1.6):</p>\n<pre><code class=\"language-php\">if (Configuration::get('PS_SMARTY_CACHING_TYPE') == 'mysql') {\n    include _PS_CLASS_DIR_.'Smarty/SmartyCacheResourceMysql.php';\n    $smarty-&gt;caching_type = 'mysql';\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-hrgx-p36p-89q4\">https://github.com/PrestaShop/PrestaShop/security/advisories/GHSA-hrgx-p36p-89q4</a></li>\n<li><a href=\"https://github.com/PrestaShop/PrestaShop/releases/tag/1.7.8.7\">https://github.com/PrestaShop/PrestaShop/releases/tag/1.7.8.7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31181\">https://nvd.nist.gov/vuln/detail/CVE-2022-31181</a></li>\n<li><a href=\"https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804\">https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrgx-p36p-89q4\">https://github.com/advisories/GHSA-hrgx-p36p-89q4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrgx-p36p-89q4",
            "title": "[prestashop/prestashop] PrestaShop eval injection possible if shop vulnerable to SQL injection",
            "date_modified": "2022-08-04T11:16:17.000Z",
            "date_published": "2022-07-29T22:27:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrgx-p36p-89q4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>mezzio-swoole applications using Diactoros for their PSR-7 implementation, and which are either not behind a proxy, or can be accessed via untrusted proxies, can potentially have the host, protocol, and/or port of a <code>Laminas\\Diactoros\\Uri</code> instance associated with the incoming server request modified to reflect values from <code>X-Forwarded-*</code> headers. Such changes can potentially lead to XSS attacks (if a fully-qualified URL is used in links) and/or URL poisoning.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>3.7.0, and 4.3.0 and later.</p>\n<p>The patches present in these versions update the <code>SwooleServerRequestFactory</code> to filter out <code>X-Forwarded-*</code> headers when creating the initial request. They then by default pass that instance through a <code>Laminas\\Diactoros\\ServerRequestFilter\\FilterUsingXForwardedHeaders</code> instance created from the <code>trustReservedSubnet()</code> constructor, ensuring that the request only honors the <code>X-Forwarded-*</code> headers for private reserved subnets.</p>\n<p>Users can define the <code>Laminas\\Diactoros\\ServerRequestFilter\\FilterServerRequestInterface</code> service if they wish to provide a different implementation, or configure the <code>FilterUsingXForwardedHeaders</code> instance differently. When defined, that instance will be used to filter the generated request instance.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Infrastructure or DevOps can place a trusted reverse proxy in front of the mezzio-swoole server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://portswigger.net/web-security/host-header\">HTTP Host Header Attacks</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/mezzio/mezzio-swoole/\">mezzio/mezzio-swoole</a></li>\n<li><a href=\"mailto:security@getlaminas.org\">Email us</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mezzio/mezzio-swoole/security/advisories/GHSA-c8rp-cgf4-937w\">https://github.com/mezzio/mezzio-swoole/security/advisories/GHSA-c8rp-cgf4-937w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c8rp-cgf4-937w\">https://github.com/advisories/GHSA-c8rp-cgf4-937w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c8rp-cgf4-937w",
            "title": "[mezzio/mezzio-swoole] mezzio-swoole Applications Using Diactoros Vulnerable to HTTP Host Header Attack",
            "date_modified": "2022-07-29T22:26:11.000Z",
            "date_published": "2022-07-29T22:26:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c8rp-cgf4-937w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>mezzio-swoole applications using Diactoros for their PSR-7 implementation, and which are either not behind a proxy, or can be accessed via untrusted proxies, can potentially have the host, protocol, and/or port of a <code>Laminas\\Diactoros\\Uri</code> instance associated with the incoming server request modified to reflect values from <code>X-Forwarded-*</code> headers. Such changes can potentially lead to XSS attacks (if a fully-qualified URL is used in links) and/or URL poisoning.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>3.7.0, and 4.3.0 and later.</p>\n<p>The patches present in these versions update the <code>SwooleServerRequestFactory</code> to filter out <code>X-Forwarded-*</code> headers when creating the initial request. They then by default pass that instance through a <code>Laminas\\Diactoros\\ServerRequestFilter\\FilterUsingXForwardedHeaders</code> instance created from the <code>trustReservedSubnet()</code> constructor, ensuring that the request only honors the <code>X-Forwarded-*</code> headers for private reserved subnets.</p>\n<p>Users can define the <code>Laminas\\Diactoros\\ServerRequestFilter\\FilterServerRequestInterface</code> service if they wish to provide a different implementation, or configure the <code>FilterUsingXForwardedHeaders</code> instance differently. When defined, that instance will be used to filter the generated request instance.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Infrastructure or DevOps can place a trusted reverse proxy in front of the mezzio-swoole server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://portswigger.net/web-security/host-header\">HTTP Host Header Attacks</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/mezzio/mezzio-swoole/\">mezzio/mezzio-swoole</a></li>\n<li><a href=\"mailto:security@getlaminas.org\">Email us</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mezzio/mezzio-swoole/security/advisories/GHSA-c8rp-cgf4-937w\">https://github.com/mezzio/mezzio-swoole/security/advisories/GHSA-c8rp-cgf4-937w</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c8rp-cgf4-937w\">https://github.com/advisories/GHSA-c8rp-cgf4-937w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c8rp-cgf4-937w",
            "title": "[mezzio/mezzio-swoole] mezzio-swoole Applications Using Diactoros Vulnerable to HTTP Host Header Attack",
            "date_modified": "2022-07-29T22:26:11.000Z",
            "date_published": "2022-07-29T22:26:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c8rp-cgf4-937w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Microweber prior to 1.2.21 is vulnerable to reflected cross-site scripting (XSS).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2470\">https://nvd.nist.gov/vuln/detail/CVE-2022-2470</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/d28655183800b833abb20ccd55e1628f16ff65e4\">https://github.com/microweber/microweber/commit/d28655183800b833abb20ccd55e1628f16ff65e4</a></li>\n<li><a href=\"https://huntr.dev/bounties/3f1f679c-c243-431c-8ed0-e61543b9921b\">https://huntr.dev/bounties/3f1f679c-c243-431c-8ed0-e61543b9921b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cfcg-2qgr-v243\">https://github.com/advisories/GHSA-cfcg-2qgr-v243</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cfcg-2qgr-v243",
            "title": "[microweber/microweber] Microweber before 1.2.21 vulnerable to reflected XSS",
            "date_modified": "2022-07-27T22:11:06.000Z",
            "date_published": "2022-07-23T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cfcg-2qgr-v243"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Persistent XSS in customer module</p>\n<h3 id=\"patches\">Patches</h3>\n<p>We recommend updating to the current version 5.7.14. You can get the update to 5.7.14 regularly via the Auto-Updater or directly via the download overview.</p>\n<p>For older versions you can use the Security Plugin:\n<a href=\"https://store.shopware.com/en/swag575294366635f/shopware-security-plugin.html\">https://store.shopware.com/en/swag575294366635f/shopware-security-plugin.html</a></p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-07-2022\">https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-07-2022</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/shopware/shopware/security/advisories/GHSA-5834-xv5q-cgfw\">https://github.com/shopware/shopware/security/advisories/GHSA-5834-xv5q-cgfw</a></li>\n<li><a href=\"https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-07-2022\">https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-07-2022</a></li>\n<li><a href=\"https://www.shopware.com/en/changelog-sw5/#5-7-14\">https://www.shopware.com/en/changelog-sw5/#5-7-14</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31148\">https://nvd.nist.gov/vuln/detail/CVE-2022-31148</a></li>\n<li><a href=\"https://github.com/shopware/shopware/commit/7875855005648fba7b39371a70816afae2e07daf\">https://github.com/shopware/shopware/commit/7875855005648fba7b39371a70816afae2e07daf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5834-xv5q-cgfw\">https://github.com/advisories/GHSA-5834-xv5q-cgfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5834-xv5q-cgfw",
            "title": "[shopware/shopware] Shopware vulnerable to persistent cross site scripting (XSS) in customer module",
            "date_modified": "2022-08-04T11:18:07.000Z",
            "date_published": "2022-07-27T22:06:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5834-xv5q-cgfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Applications that use Diactoros, and are either not behind a proxy, or can be accessed via untrusted proxies, can potentially have the host, protocol, and/or port of a <code>Laminas\\Diactoros\\Uri</code> instance associated with the incoming server request modified to reflect values from <code>X-Forwarded-*</code> headers. Such changes can potentially lead to XSS attacks (if a fully-qualified URL is used in links) and/or URL poisoning.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Any version after 2.11.0.</p>\n<p>Starting in laminas/laminas-diactoros 2.11.1, we have added <code>Laminas\\Diactoros\\ServerRequestFilter\\FilterServerRequestInterface</code>, which defines the single method <code>__invoke(Psr\\Http\\Message\\ServerRequestInterface $request): Psr\\Http\\Message\\ServerRequestInterface</code>. Filters implementing this interface allow modifying and returning a generated <code>ServerRequest</code>.</p>\n<p>The primary use case of the interface is to allow modifying the generated URI based on the presence of headers such as <code>X-Forwarded-Host</code>. When operating behind a reverse proxy, the <code>Host</code> header is often rewritten to the name of the node to which the request is being forwarded, and an <code>X-Forwarded-Host</code> header is generated with the original <code>Host</code> value to allow the server to determine the original host the request was intended for. (We have always examined the <code>X-Forwarded-Proto</code> header; as of Diactoros 2.11.1, we also examine the <code>X-Forwarded-Port</code> header.) To accommodate this use case, we created Laminas\\Diactoros\\ServerRequestFilter\\FilterUsingXForwardedHeaders.</p>\n<p>Due to potential security issues, it is generally best to only accept these headers if you trust the reverse proxy that has initiated the request.\n(This value is found in <code>$_SERVER['REMOTE_ADDR']</code>, which is present as <code>$request-&gt;getServerParams()['REMOTE_ADDR']</code> within PSR-7 implementations.) <code>FilterUsingXForwardedHeaders</code> provides named constructors to allow you to trust these headers from any source (which has been the default behavior of Diactoros since the beginning), or to specify specific IP addresses or CIDR subnets to trust, along with which headers are trusted.</p>\n<p><code>Laminas\\Diactoros\\ServerRequestFactory::fromGlobals()</code> was updated to accept a <code>FilterServerRequestInterface</code> as an additional, optional argument. Since the <code>X-Forwarded-*</code> headers do have valid use cases, particularly in clustered environments using a load balancer, to prevent backwards compatibility breaks, if no filter is provided, we generate an instance via <code>FilterUsingXForwardedHeaders::trustReservedSubnets()</code>, which generates an instance marked to trust only proxies on private subnets.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Infrastructure or DevOps can configure web servers to reject <code>X-Forwarded-*</code> headers at the web server level.</p>\n<p>Users of laminas/laminas-diactoros can make use of the <code>Laminas\\Diactoros\\RequestFilter\\RequestFilterInterface</code> functionality in order to either (a) disable usage of the <code>X-Forwarded-*</code> headers entirely, (b) opt-in to it, or (c) opt-in to the usage for configured proxy servers.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://portswigger.net/web-security/host-header\">HTTP Host Header Attacks</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/laminas/laminas-diactoros/\">laminas/laminas-diactoros</a></li>\n<li><a href=\"mailto:security@getlaminas.org\">Email us</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laminas/laminas-diactoros/security/advisories/GHSA-8274-h5jp-97vr\">https://github.com/laminas/laminas-diactoros/security/advisories/GHSA-8274-h5jp-97vr</a></li>\n<li><a href=\"https://github.com/laminas/laminas-diactoros/commit/25b11d422c2e5dad868f68619888763b30f91e2d\">https://github.com/laminas/laminas-diactoros/commit/25b11d422c2e5dad868f68619888763b30f91e2d</a></li>\n<li><a href=\"https://github.com/laminas/laminas-diactoros/releases/tag/2.11.1\">https://github.com/laminas/laminas-diactoros/releases/tag/2.11.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8274-h5jp-97vr\">https://github.com/advisories/GHSA-8274-h5jp-97vr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8274-h5jp-97vr",
            "title": "[laminas/laminas-diactoros] Diactoros before 2.11.1 vulnerable to HTTP Host Header Attack",
            "date_modified": "2022-07-27T22:05:18.000Z",
            "date_published": "2022-07-27T22:05:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8274-h5jp-97vr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability would allow any user, regardless of permissions, to upload content into a repository. This affects installations of Islandora core 2.0 or greater.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade immediately to the <a href=\"https://github.com/Islandora/islandora/releases/tag/2.4.1\">latest release</a> of Islandora.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>In lieu of an upgrade the <a href=\"https://github.com/Islandora/islandora_ghsa_route_fix\">following module</a> can be leveraged that will resolve the issue until such a time an upgrade can take place.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Islandora/islandora\">Islandora</a></li>\n<li>Contact <a href=\"mailto:community@islandora.ca\">community@islandora.ca</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Islandora/islandora/security/advisories/GHSA-m58q-qq5h-mgqq\">https://github.com/Islandora/islandora/security/advisories/GHSA-m58q-qq5h-mgqq</a></li>\n<li><a href=\"https://github.com/Islandora/islandora/commit/573d6878edf057987f1e41e5068de0074573e4c7\">https://github.com/Islandora/islandora/commit/573d6878edf057987f1e41e5068de0074573e4c7</a></li>\n<li><a href=\"https://github.com/Islandora/islandora/releases/tag/2.4.1\">https://github.com/Islandora/islandora/releases/tag/2.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m58q-qq5h-mgqq\">https://github.com/advisories/GHSA-m58q-qq5h-mgqq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m58q-qq5h-mgqq",
            "title": "[islandora/islandora] Islandora 2.0 before 2.4.1 could allow any user to upload content into a repository",
            "date_modified": "2022-07-21T22:36:21.000Z",
            "date_published": "2022-07-21T22:36:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m58q-qq5h-mgqq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2099\">https://nvd.nist.gov/vuln/detail/CVE-2022-2099</a></li>\n<li><a href=\"https://wpscan.com/vulnerability/0316e5f3-3302-40e3-8ff4-be3423a3be7b\">https://wpscan.com/vulnerability/0316e5f3-3302-40e3-8ff4-be3423a3be7b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jwvf-28fg-g4xg\">https://github.com/advisories/GHSA-jwvf-28fg-g4xg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jwvf-28fg-g4xg",
            "title": "[woocommerce/woocommerce] WooCommerce WordPress plugin before 6.6.0 vulnerable to stored HTML injection",
            "date_modified": "2022-07-21T21:40:21.000Z",
            "date_published": "2022-07-18T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jwvf-28fg-g4xg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Dompdf prior to version 2.0.0 is vulnerable to a chroot check bypass, which could cause disclosure of png and jpeg files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2400\">https://nvd.nist.gov/vuln/detail/CVE-2022-2400</a></li>\n<li><a href=\"https://github.com/dompdf/dompdf/commit/99aeec1efec9213e87098d42eb09439e7ee0bb6a\">https://github.com/dompdf/dompdf/commit/99aeec1efec9213e87098d42eb09439e7ee0bb6a</a></li>\n<li><a href=\"https://huntr.dev/bounties/a6da5e5e-86be-499a-a3c3-2950f749202a\">https://huntr.dev/bounties/a6da5e5e-86be-499a-a3c3-2950f749202a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5qj8-6xxj-hp9h\">https://github.com/advisories/GHSA-5qj8-6xxj-hp9h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5qj8-6xxj-hp9h",
            "title": "[dompdf/dompdf] Dompdf before v2.0.0 vulnerable to chroot check bypass",
            "date_modified": "2022-07-25T18:25:18.000Z",
            "date_published": "2022-07-19T00:00:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5qj8-6xxj-hp9h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file upload vulnerability in the Select User function under the People Menu component of Snipe-IT v6.0.2 allows attackers to execute arbitrary code via a crafted file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-32061\">https://nvd.nist.gov/vuln/detail/CVE-2022-32061</a></li>\n<li><a href=\"https://grimthereaperteam.medium.com/snipe-it-version-v6-0-2-file-upload-cross-site-scripting-c02e46fa72ab\">https://grimthereaperteam.medium.com/snipe-it-version-v6-0-2-file-upload-cross-site-scripting-c02e46fa72ab</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xwqx-x38c-cw95\">https://github.com/advisories/GHSA-xwqx-x38c-cw95</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xwqx-x38c-cw95",
            "title": "[snipe/snipe-it] Snipe-IT 6.0.2 vulnerable to Cross-site Scripting",
            "date_modified": "2022-07-21T21:39:07.000Z",
            "date_published": "2022-07-08T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xwqx-x38c-cw95"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}