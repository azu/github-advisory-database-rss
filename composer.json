{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>Failing to properly encode user input, login status display is vulnerable to cross-site scripting in the website frontend. A valid user account is needed in order to exploit this vulnerability - either a backend user or a frontend user having the possibility to modify their user profile.</p>\n<p>Template patterns that are affected are</p>\n<ul>\n<li>###FEUSER_[fieldName]### using system extension felogin</li>\n<li> for regular frontend rendering (pattern can be defined individually using TypoScript setting config.USERNAME_substToken)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-008\">https://typo3.org/security/advisory/typo3-core-sa-2018-008</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c25-vj2w-p72j\">https://github.com/advisories/GHSA-8c25-vj2w-p72j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Frontend User Login",
            "date_modified": "2024-05-30T14:59:36.000Z",
            "date_published": "2024-05-30T14:59:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, login status display is vulnerable to cross-site scripting in the website frontend. A valid user account is needed in order to exploit this vulnerability - either a backend user or a frontend user having the possibility to modify their user profile.</p>\n<p>Template patterns that are affected are</p>\n<ul>\n<li>###FEUSER_[fieldName]### using system extension felogin</li>\n<li> for regular frontend rendering (pattern can be defined individually using TypoScript setting config.USERNAME_substToken)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-008\">https://typo3.org/security/advisory/typo3-core-sa-2018-008</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c25-vj2w-p72j\">https://github.com/advisories/GHSA-8c25-vj2w-p72j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Frontend User Login",
            "date_modified": "2024-05-30T14:59:36.000Z",
            "date_published": "2024-05-30T14:59:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, login status display is vulnerable to cross-site scripting in the website frontend. A valid user account is needed in order to exploit this vulnerability - either a backend user or a frontend user having the possibility to modify their user profile.</p>\n<p>Template patterns that are affected are</p>\n<ul>\n<li>###FEUSER_[fieldName]### using system extension felogin</li>\n<li> for regular frontend rendering (pattern can be defined individually using TypoScript setting config.USERNAME_substToken)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-3.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-008\">https://typo3.org/security/advisory/typo3-core-sa-2018-008</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c25-vj2w-p72j\">https://github.com/advisories/GHSA-8c25-vj2w-p72j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Frontend User Login",
            "date_modified": "2024-05-30T14:59:36.000Z",
            "date_published": "2024-05-30T14:59:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c25-vj2w-p72j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, notifications shown in modal windows in the TYPO3 backend are vulnerable to cross-site scripting. A valid backend user account is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d\">https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3\">https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-007\">https://typo3.org/security/advisory/typo3-core-sa-2018-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4c9-qfvw-fmr4\">https://github.com/advisories/GHSA-g4c9-qfvw-fmr4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Backend Modal Component",
            "date_modified": "2024-05-30T14:57:51.000Z",
            "date_published": "2024-05-30T14:57:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, notifications shown in modal windows in the TYPO3 backend are vulnerable to cross-site scripting. A valid backend user account is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d\">https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3\">https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-007\">https://typo3.org/security/advisory/typo3-core-sa-2018-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4c9-qfvw-fmr4\">https://github.com/advisories/GHSA-g4c9-qfvw-fmr4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Backend Modal Component",
            "date_modified": "2024-05-30T14:57:51.000Z",
            "date_published": "2024-05-30T14:57:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, notifications shown in modal windows in the TYPO3 backend are vulnerable to cross-site scripting. A valid backend user account is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d\">https://github.com/TYPO3-CMS/core/commit/3c1deac4db61ac1ac4231799beb1f49c28eb2b4d</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3\">https://github.com/TYPO3-CMS/core/commit/983ecc4ea3a841aca7ff2bb1d2f0e0318c3646b3</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-007\">https://typo3.org/security/advisory/typo3-core-sa-2018-007</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g4c9-qfvw-fmr4\">https://github.com/advisories/GHSA-g4c9-qfvw-fmr4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Backend Modal Component",
            "date_modified": "2024-05-30T14:57:51.000Z",
            "date_published": "2024-05-30T14:57:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g4c9-qfvw-fmr4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that the Form Framework (system extension <code>form</code>) is vulnerable to Insecure Deserialization when being used with the additional PHP PECL package <code>yaml</code>, which is capable of unserializing YAML contents to PHP objects. A valid backend user account as well as having PHP setting <code>yaml.decode_php</code> enabled is needed to exploit this vulnerability (which is the default value according to PHP documentation).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-4.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-4.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-004\">https://typo3.org/security/advisory/typo3-core-sa-2018-004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-96jg-pmc4-cx39\">https://github.com/advisories/GHSA-96jg-pmc4-cx39</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-96jg-pmc4-cx39",
            "title": "[typo3/cms-core] TYPO3 CMS Insecure Deserialization",
            "date_modified": "2024-05-30T14:52:14.000Z",
            "date_published": "2024-05-30T14:52:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-96jg-pmc4-cx39"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that the Form Framework (system extension <code>form</code>) is vulnerable to Insecure Deserialization when being used with the additional PHP PECL package <code>yaml</code>, which is capable of unserializing YAML contents to PHP objects. A valid backend user account as well as having PHP setting <code>yaml.decode_php</code> enabled is needed to exploit this vulnerability (which is the default value according to PHP documentation).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-4.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-4.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-004\">https://typo3.org/security/advisory/typo3-core-sa-2018-004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-96jg-pmc4-cx39\">https://github.com/advisories/GHSA-96jg-pmc4-cx39</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-96jg-pmc4-cx39",
            "title": "[typo3/cms-core] TYPO3 CMS Insecure Deserialization",
            "date_modified": "2024-05-30T14:52:14.000Z",
            "date_published": "2024-05-30T14:52:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-96jg-pmc4-cx39"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, online media asset rendering (*.youtube and *.vimeo files) is vulnerable to cross-site scripting. A valid backend user account or write access on the server system (e.g. SFTP) is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/23800859368e2af60604ff27f3eed9971ccd9fbd\">https://github.com/TYPO3-CMS/core/commit/23800859368e2af60604ff27f3eed9971ccd9fbd</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/f9e5e255f41c248e115b2a755b797ce48d10d72a\">https://github.com/TYPO3-CMS/core/commit/f9e5e255f41c248e115b2a755b797ce48d10d72a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-006\">https://typo3.org/security/advisory/typo3-core-sa-2018-006</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wg8h-gxf4-g4gh\">https://github.com/advisories/GHSA-wg8h-gxf4-g4gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wg8h-gxf4-g4gh",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Online Media Asset Rendering",
            "date_modified": "2024-05-30T14:48:32.000Z",
            "date_published": "2024-05-30T14:48:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wg8h-gxf4-g4gh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode user input, online media asset rendering (*.youtube and *.vimeo files) is vulnerable to cross-site scripting. A valid backend user account or write access on the server system (e.g. SFTP) is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/23800859368e2af60604ff27f3eed9971ccd9fbd\">https://github.com/TYPO3-CMS/core/commit/23800859368e2af60604ff27f3eed9971ccd9fbd</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/f9e5e255f41c248e115b2a755b797ce48d10d72a\">https://github.com/TYPO3-CMS/core/commit/f9e5e255f41c248e115b2a755b797ce48d10d72a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-12-11-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-006\">https://typo3.org/security/advisory/typo3-core-sa-2018-006</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wg8h-gxf4-g4gh\">https://github.com/advisories/GHSA-wg8h-gxf4-g4gh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wg8h-gxf4-g4gh",
            "title": "[typo3/cms-core] TYPO3 Cross-Site Scripting in Online Media Asset Rendering",
            "date_modified": "2024-05-30T14:48:32.000Z",
            "date_published": "2024-05-30T14:48:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wg8h-gxf4-g4gh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly dissociate system related configuration from user generated configuration, the Form Framework (system extension \"form\") is vulnerable to SQL injection and Privilege Escalation. Basically instructions can be persisted to a form definition file that were not configured to be modified - this applies to definitions managed using the form editor module as well as direct file upload using the regular file list module. A valid backend user account as well as having system extension form activated are needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/5e3ed52854ea8192f1c0e2ef30f434e74ba6d253\">https://github.com/TYPO3-CMS/core/commit/5e3ed52854ea8192f1c0e2ef30f434e74ba6d253</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/a0a6271dc8f715b5b6859771333d57925dfb63bc\">https://github.com/TYPO3-CMS/core/commit/a0a6271dc8f715b5b6859771333d57925dfb63bc</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/e70d7c66110a0919b39bccdfdc73cbfd7f504dfc\">https://github.com/TYPO3-CMS/core/commit/e70d7c66110a0919b39bccdfdc73cbfd7f504dfc</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/eddc7635fb3447f0fb69831855f4095de8e12350\">https://github.com/TYPO3-CMS/core/commit/eddc7635fb3447f0fb69831855f4095de8e12350</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-3.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-003\">https://typo3.org/security/advisory/typo3-core-sa-2018-003</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45wj-jv2h-jwrf\">https://github.com/advisories/GHSA-45wj-jv2h-jwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45wj-jv2h-jwrf",
            "title": "[typo3/cms-core] TYPO3 CMS Privilege Escalation and SQL Injection",
            "date_modified": "2024-05-30T13:57:39.000Z",
            "date_published": "2024-05-30T13:57:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45wj-jv2h-jwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly dissociate system related configuration from user generated configuration, the Form Framework (system extension \"form\") is vulnerable to SQL injection and Privilege Escalation. Basically instructions can be persisted to a form definition file that were not configured to be modified - this applies to definitions managed using the form editor module as well as direct file upload using the regular file list module. A valid backend user account as well as having system extension form activated are needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/5e3ed52854ea8192f1c0e2ef30f434e74ba6d253\">https://github.com/TYPO3-CMS/core/commit/5e3ed52854ea8192f1c0e2ef30f434e74ba6d253</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/a0a6271dc8f715b5b6859771333d57925dfb63bc\">https://github.com/TYPO3-CMS/core/commit/a0a6271dc8f715b5b6859771333d57925dfb63bc</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/e70d7c66110a0919b39bccdfdc73cbfd7f504dfc\">https://github.com/TYPO3-CMS/core/commit/e70d7c66110a0919b39bccdfdc73cbfd7f504dfc</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/eddc7635fb3447f0fb69831855f4095de8e12350\">https://github.com/TYPO3-CMS/core/commit/eddc7635fb3447f0fb69831855f4095de8e12350</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-3.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-3.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-003\">https://typo3.org/security/advisory/typo3-core-sa-2018-003</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45wj-jv2h-jwrf\">https://github.com/advisories/GHSA-45wj-jv2h-jwrf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45wj-jv2h-jwrf",
            "title": "[typo3/cms-core] TYPO3 CMS Privilege Escalation and SQL Injection",
            "date_modified": "2024-05-30T13:57:39.000Z",
            "date_published": "2024-05-30T13:57:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45wj-jv2h-jwrf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Phar files (formerly known as \"PHP archives\") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - \"bundle.phar\" would be valid as well as \"bundle.txt\" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16\">https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45\">https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981\">https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778\">https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-002\">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cc97-g92w-jm65\">https://github.com/advisories/GHSA-cc97-g92w-jm65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65",
            "title": "[typo3/cms-core] TYPO3 CMS Insecure Deserialization & Arbitrary Code Execution",
            "date_modified": "2024-05-30T13:52:10.000Z",
            "date_published": "2024-05-30T13:52:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Phar files (formerly known as \"PHP archives\") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - \"bundle.phar\" would be valid as well as \"bundle.txt\" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16\">https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45\">https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981\">https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778\">https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-002\">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cc97-g92w-jm65\">https://github.com/advisories/GHSA-cc97-g92w-jm65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65",
            "title": "[typo3/cms-core] TYPO3 CMS Insecure Deserialization & Arbitrary Code Execution",
            "date_modified": "2024-05-30T13:52:10.000Z",
            "date_published": "2024-05-30T13:52:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Phar files (formerly known as \"PHP archives\") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - \"bundle.phar\" would be valid as well as \"bundle.txt\" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16\">https://github.com/TYPO3-CMS/core/commit/81c6e9e6e49ee4f924bd340fb007d271fa44aa16</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45\">https://github.com/TYPO3-CMS/core/commit/854d03841b42123ab744c2591199b76ce65a8e45</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981\">https://github.com/TYPO3-CMS/core/commit/aa4e270d04313fe7d8ea508a9c694db83875e981</a></li>\n<li><a href=\"https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778\">https://github.com/TYPO3-CMS/core/commit/dd0487bd8b4ec7204dbfff2b5812d797102a1778</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-2.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-002\">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cc97-g92w-jm65\">https://github.com/advisories/GHSA-cc97-g92w-jm65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65",
            "title": "[typo3/cms-core] TYPO3 CMS Insecure Deserialization & Arbitrary Code Execution",
            "date_modified": "2024-05-30T13:52:10.000Z",
            "date_published": "2024-05-30T13:52:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cc97-g92w-jm65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-001\">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4rj-f7m6-42c3\">https://github.com/advisories/GHSA-x4rj-f7m6-42c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3",
            "title": "[typo3/cms-core] TYPO3 CMS Authentication Bypass vulnerability",
            "date_modified": "2024-05-30T13:49:18.000Z",
            "date_published": "2024-05-30T13:49:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-001\">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4rj-f7m6-42c3\">https://github.com/advisories/GHSA-x4rj-f7m6-42c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3",
            "title": "[typo3/cms-core] TYPO3 CMS Authentication Bypass vulnerability",
            "date_modified": "2024-05-30T13:49:18.000Z",
            "date_published": "2024-05-30T13:49:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms-core/2018-07-12-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2018-001\">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x4rj-f7m6-42c3\">https://github.com/advisories/GHSA-x4rj-f7m6-42c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3",
            "title": "[typo3/cms-core] TYPO3 CMS Authentication Bypass vulnerability",
            "date_modified": "2024-05-30T13:49:18.000Z",
            "date_published": "2024-05-30T13:49:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x4rj-f7m6-42c3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Twig is affected by path traversal vulnerability when used with Twig_Loader_Filesystem for loading Twig templates but only if the application is using non-trusted template names (names provided by a end-user for instance).</p>\n<p>When affected, it is possible to go up one directory for the paths configured in the application's loader.</p>\n<p>For instance, if the filesystem loader is configured with /path/to/templates as a path to look for templates, an attacker can force Twig to include a file stored in /path/to by prepending the path with /../ like in {% include \"/../somefile_in_path_to\" %}</p>\n<p>Note that using anything else (like ../somefile, /../../somefile, or ../../somefile) won’t work and the application will return a proper exception.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/fabpot/Twig/commit/3d19a2eed53570776af313593aaeb5ad62cf4980.diff\">https://github.com/fabpot/Twig/commit/3d19a2eed53570776af313593aaeb5ad62cf4980.diff</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/twig/twig/2013-04-08.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/twig/twig/2013-04-08.yaml</a></li>\n<li><a href=\"https://web.archive.org/web/20130511111630/http://blog.twig.sensiolabs.org/post/47461911874/security-release-twig-1-12-3-released\">https://web.archive.org/web/20130511111630/http://blog.twig.sensiolabs.org/post/47461911874/security-release-twig-1-12-3-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7cvr-xhm5-x998\">https://github.com/advisories/GHSA-7cvr-xhm5-x998</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7cvr-xhm5-x998",
            "title": "[twig/twig] Twig Path Traversal vulnerability in the filesystem loader",
            "date_modified": "2024-05-30T13:42:52.000Z",
            "date_published": "2024-05-30T13:42:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7cvr-xhm5-x998"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>titon/framework package (which is now abandoned and no longer maintained) is vulnerable to remote code execution via Chosen-Ciphertext Attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/titon/framework/issues/93\">https://github.com/titon/framework/issues/93</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/titon/framework/2017-11-20.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/titon/framework/2017-11-20.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q3jm-v27q-jfww\">https://github.com/advisories/GHSA-q3jm-v27q-jfww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q3jm-v27q-jfww",
            "title": "[titon/framework] titon/framework vulnerable to Remote Code Execution via Chosen-Ciphertext Attack",
            "date_modified": "2024-05-30T13:41:37.000Z",
            "date_published": "2024-05-30T13:41:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q3jm-v27q-jfww"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}