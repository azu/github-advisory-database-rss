{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"introduction\">Introduction</h3>\n<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>\n<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The multiselect field allows to select tags from an autocompleted list. Unfortunately, the Panel in Kirby 3.5 used HTML rendering for the raw option value.</p>\n<p>This allowed <strong>attackers with influence on the options source</strong> (e.g. content of sibling pages or an API endpoint) to inject HTML code. If a page in the Panel that uses the manipulated multiselect options was visited by a victim and the victim opened the autocomplete dropdown, the victim's browser will then have rendered this malicious HTML code.</p>\n<p>You are <em>not</em> affected by this vulnerability if you don't use the multiselect field or only use it with options that cannot be manipulated by attackers.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been patched in <a href=\"https://github.com/getkirby/kirby/releases/tag/3.5.8.1\">Kirby 3.5.8.1</a>. Please update to this or a <a href=\"https://github.com/getkirby/kirby/releases\">later version</a> to fix the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We recommend to update to the patch release. If you cannot update immediately, you can work around the issue by disabling the multiselect field. This can be done by uncommenting this field from all your blueprints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getkirby/kirby/security/advisories/GHSA-3f89-869f-5w76\">https://github.com/getkirby/kirby/security/advisories/GHSA-3f89-869f-5w76</a></li>\n<li><a href=\"https://github.com/getkirby/kirby/commit/b5b8863885e17556abc070dde1e20aec15fbfdf5\">https://github.com/getkirby/kirby/commit/b5b8863885e17556abc070dde1e20aec15fbfdf5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3f89-869f-5w76\">https://github.com/advisories/GHSA-3f89-869f-5w76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3f89-869f-5w76",
            "title": "[getkirby/cms] Cross-site scripting from dynamic options in the multiselect field",
            "date_modified": "2022-08-29T17:34:38.000Z",
            "date_published": "2022-08-29T17:34:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3f89-869f-5w76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cockpit before version 2.2.0 is vulnerable to Insufficient Session Expiration. The application does not validate requests after password changes, allowing a user to change their account details even after an admin changes their password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2713\">https://nvd.nist.gov/vuln/detail/CVE-2022-2713</a></li>\n<li><a href=\"https://github.com/cockpit-hq/cockpit/commit/dd8d0314912fa6517ebd2cc9939d9fafbe68731b\">https://github.com/cockpit-hq/cockpit/commit/dd8d0314912fa6517ebd2cc9939d9fafbe68731b</a></li>\n<li><a href=\"https://huntr.dev/bounties/3080fc96-75d7-4868-84de-9fc8c9b90290\">https://huntr.dev/bounties/3080fc96-75d7-4868-84de-9fc8c9b90290</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vm6p-35rw-3fxc\">https://github.com/advisories/GHSA-vm6p-35rw-3fxc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vm6p-35rw-3fxc",
            "title": "[aheinze/cockpit] Cockpit before 2.2.0 vulnerable to Insufficient Session Expiration",
            "date_modified": "2022-08-26T03:02:31.000Z",
            "date_published": "2022-08-09T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vm6p-35rw-3fxc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When rendering validation error messages via the <code>formElementErrors()</code> view helper shipped with laminas-form, many messages will contain the submitted value. However, in vulnerable versions of laminas-form, the value was not being escaped for HTML contexts, which can potentially lead to a Reflected Cross-Site Scripting (XSS) attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The following versions were issued to mitigate the vulnerability:</p>\n<ul>\n<li>2.17.1</li>\n<li>3.0.2</li>\n<li>3.1.1</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>At the top of a view script where you call the <code>formElementErrors()</code> view helper, place the following code:</p>\n<pre><code class=\"language-php\">use Laminas\\Form\\ElementInterface;\nuse Laminas\\View\\PhpRenderer;\n\n$escapeMessages = function (ElementInterface $formOrElement, PhpRenderer $renderer): void {\n    $messages = $element-&gt;getMessages();\n    if (! $messages) {\n        return;\n    }\n\n    $escaped  = [];\n    array_walk_recursive(\n        $messages,\n        static function (string $item) use (&amp;$escaped, $renderer): void {\n            $escaped[] = $renderer-&gt;escapeHtml($item);\n        }\n    };\n\n    $element-&gt;setMessages($escaped);\n};\n</code></pre>\n<p>Before calling <code>formElementErrors()</code> with a form, fieldset, or element, call the above closure as follows</p>\n<pre><code class=\"language-php\">// Usage with a form\n// $this is the view renderer\n$escapeMessages($form, $this);\n\n// Usage with a fieldset\n// $this is the view renderer\n$escapeMessages($fieldset, $this);\n\n// Usage with a form element\n// $this is the view renderer\n$escapeMessages($element, $this);\n</code></pre>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li><a href=\"https://github.com/laminas/laminas-form/issues/new\">Open an issue</a></li>\n<li>Email us at <a href=\"mailto:security@getlaminas.org\">security@getlaminas.org</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/laminas/laminas-form/security/advisories/GHSA-jq4p-mq33-w375\">https://github.com/laminas/laminas-form/security/advisories/GHSA-jq4p-mq33-w375</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23598\">https://nvd.nist.gov/vuln/detail/CVE-2022-23598</a></li>\n<li><a href=\"https://github.com/laminas/laminas-form/commit/43005a3ec4c2292d4f825273768d9b884acbca37\">https://github.com/laminas/laminas-form/commit/43005a3ec4c2292d4f825273768d9b884acbca37</a></li>\n<li><a href=\"https://getlaminas.org/security/advisory/LP-2022-01\">https://getlaminas.org/security/advisory/LP-2022-01</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CFF6WJ5I7PSEBRF6I753WKE2BXFBGQXE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CFF6WJ5I7PSEBRF6I753WKE2BXFBGQXE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SLNABVK26CE4PFL57VLY242FW3QY4CPC/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SLNABVK26CE4PFL57VLY242FW3QY4CPC/</a></li>\n<li><a href=\"https://github.com/laminas/laminas-form/releases/tag/2.17.1\">https://github.com/laminas/laminas-form/releases/tag/2.17.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jq4p-mq33-w375\">https://github.com/advisories/GHSA-jq4p-mq33-w375</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jq4p-mq33-w375",
            "title": "[laminas/laminas-form] Cross-site Scripting when rendering error messages in laminas-form",
            "date_modified": "2022-08-22T16:52:23.000Z",
            "date_published": "2022-01-28T23:08:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jq4p-mq33-w375"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cockpit Content Platform through version 2.2.1 is vulnerable to a two-factor authentication (2FA) bypass. The 2FA secret is disclosed in a JWT token after user logs into their account, allowing an attacker to bypass the 2FA code. A patch is available on the <code>develop</code> branch and is expected to be part of version 2.2.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2818\">https://nvd.nist.gov/vuln/detail/CVE-2022-2818</a></li>\n<li><a href=\"https://github.com/cockpit-hq/cockpit/commit/4bee1b903ee20818f4a8ecb9d974b9536cc54cb4\">https://github.com/cockpit-hq/cockpit/commit/4bee1b903ee20818f4a8ecb9d974b9536cc54cb4</a></li>\n<li><a href=\"https://huntr.dev/bounties/ee27e5df-516b-4cf4-9f28-346d907b5491\">https://huntr.dev/bounties/ee27e5df-516b-4cf4-9f28-346d907b5491</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8wj3-cpmr-8whp\">https://github.com/advisories/GHSA-8wj3-cpmr-8whp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8wj3-cpmr-8whp",
            "title": "[aheinze/cockpit] Cockpit Content Platform vulnerable to 2FA bypass",
            "date_modified": "2022-08-18T19:19:59.000Z",
            "date_published": "2022-08-16T00:00:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8wj3-cpmr-8whp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>pocketmine\\entity\\Skin</code> doesn't correctly handle errors produced by <code>adhocore/json-comment</code>, which throws <code>RuntimeException</code> rather than returning <code>false</code> as PocketMine-MP expects.</p>\n<p>This leads to a server crash if the skin geometry data is invalid for some reason (e.g. a syntax error).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>c9626c610b8f6810c8c987559c9197b2a291f0bb</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>A plugin could handle <code>LoginPacket</code> and <code>PlayerSkinPacket</code> to verify the skin geometry data can be parsed correctly, so that the error condition in the core code is never reached.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@example.com\">security@pmmp.io</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-8cwq-4cmf-px73\">https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-8cwq-4cmf-px73</a></li>\n<li><a href=\"https://github.com/pmmp/PocketMine-MP/commit/c9626c610b8f6810c8c987559c9197b2a291f0bb\">https://github.com/pmmp/PocketMine-MP/commit/c9626c610b8f6810c8c987559c9197b2a291f0bb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8cwq-4cmf-px73\">https://github.com/advisories/GHSA-8cwq-4cmf-px73</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8cwq-4cmf-px73",
            "title": "[pocketmine/pocketmine-mp] PocketMine-MP invalid skin geometry JSON data leading to server crash",
            "date_modified": "2022-08-18T19:19:21.000Z",
            "date_published": "2022-08-18T19:19:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8cwq-4cmf-px73"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting (XSS) issue in the Fork version 5.9.3 allows remote attackers to inject JavaScript via the <code>publish_on_date</code> Parameter. This issue was patched in version 5.11.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35587\">https://nvd.nist.gov/vuln/detail/CVE-2022-35587</a></li>\n<li><a href=\"https://huntr.dev/bounties/6-other-forkcms/\">https://huntr.dev/bounties/6-other-forkcms/</a></li>\n<li><a href=\"https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296\">https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65wf-qm95-6mhm\">https://github.com/advisories/GHSA-65wf-qm95-6mhm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65wf-qm95-6mhm",
            "title": "[forkcms/forkcms] ForkCMS XSS via `publish_on_date` parameter",
            "date_modified": "2022-08-18T19:10:40.000Z",
            "date_published": "2022-08-13T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65wf-qm95-6mhm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting (XSS) issue in the Fork version 5.9.3 allows remote attackers to inject JavaScript via the <code>publish_on_time</code> Parameter. This issue was patched in version 5.11.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35589\">https://nvd.nist.gov/vuln/detail/CVE-2022-35589</a></li>\n<li><a href=\"https://huntr.dev/bounties/7-other-forkcms/\">https://huntr.dev/bounties/7-other-forkcms/</a></li>\n<li><a href=\"https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296\">https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q4qv-3x58-rxmh\">https://github.com/advisories/GHSA-q4qv-3x58-rxmh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q4qv-3x58-rxmh",
            "title": "[forkcms/forkcms] ForkCMS XSS via `publish_on_time` parameter",
            "date_modified": "2022-08-18T19:09:11.000Z",
            "date_published": "2022-08-13T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q4qv-3x58-rxmh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting (XSS) issue in the ForkCMS version 5.9.3 allows remote attackers to inject JavaScript via the <code>end_date</code> Parameter. This issue was patched in version 5.11.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35590\">https://nvd.nist.gov/vuln/detail/CVE-2022-35590</a></li>\n<li><a href=\"https://huntr.dev/bounties/4-other-forkcms/\">https://huntr.dev/bounties/4-other-forkcms/</a></li>\n<li><a href=\"https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296\">https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pw4j-r69m-rrr5\">https://github.com/advisories/GHSA-pw4j-r69m-rrr5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pw4j-r69m-rrr5",
            "title": "[forkcms/forkcms] ForkCMS XSS via `end_date` parameter",
            "date_modified": "2022-08-18T19:08:38.000Z",
            "date_published": "2022-08-13T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pw4j-r69m-rrr5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A stored cross-site scripting (XSS) issue in the ForkCMS version 5.9.3 allows remote attackers to inject JavaScript via the <code>start_date</code> Parameter. This issue was patched in version 5.11.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35585\">https://nvd.nist.gov/vuln/detail/CVE-2022-35585</a></li>\n<li><a href=\"https://huntr.dev/bounties/5-other-forkcms/\">https://huntr.dev/bounties/5-other-forkcms/</a></li>\n<li><a href=\"https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296\">https://github.com/forkcms/forkcms/commit/76bf739e01f697e10c1277b9726e39b9705be296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9hmc-87h4-w869\">https://github.com/advisories/GHSA-9hmc-87h4-w869</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9hmc-87h4-w869",
            "title": "[forkcms/forkcms] ForkCMS stored XSS via `start_date` parameter",
            "date_modified": "2022-08-18T19:08:19.000Z",
            "date_published": "2022-08-13T00:00:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9hmc-87h4-w869"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability may allow <a href=\"https://canitakeyoursubdomain.name/\">SameSite Attackers</a> to bypass the <a href=\"https://codeigniter4.github.io/userguide/libraries/security.html\">CodeIgniter4 CSRF protection</a> mechanism with CodeIgniter Shield.</p>\n<p>For this attack to succeed, the attacker must have direct (or indirect, e.g., XSS) control over a subdomain site (e.g., <code>https://a.example.com/</code>) of the target site (e.g., <code>http://example.com/</code>).</p>\n<p>This vulnerability exists whether <code>Config\\Security::$csrfProtection</code> is <code>'cookie'</code> or <code>'session'</code>.\nIt is also exploitable whether <code>Config\\Security::$regenerate</code> is <code>true</code> or <code>false</code>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to <strong>CodeIgniter v4.2.3 or later</strong> and <strong>Shield v1.0.0-beta.2 or later</strong>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Do all of the following:</p>\n<ul>\n<li>set <code>Config\\Security::$csrfProtection</code> to <code>'session'</code></li>\n<li>remove old session data right after login (immediately after ID and password match)</li>\n<li>regenerate CSRF token right after login (immediately after ID and password match)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://codeigniter4.github.io/userguide/libraries/security.html\">CodeIgniter4 CSRF Protection</a></li>\n<li><a href=\"https://canitakeyoursubdomain.name/\">SameSite Attacks</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\">SameSite Cookies</a></li>\n<li><a href=\"https://jub0bs.com/posts/2021-01-29-great-samesite-confusion/\">The great SameSite confusion</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue or discussion in <a href=\"https://github.com/codeigniter4/shield\">codeigniter4/shield</a></li>\n<li>Email us at <a href=\"mailto:security@codeigniter.com\">security@codeigniter.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codeigniter4/shield/security/advisories/GHSA-5hm8-vh6r-2cjq\">https://github.com/codeigniter4/shield/security/advisories/GHSA-5hm8-vh6r-2cjq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35943\">https://nvd.nist.gov/vuln/detail/CVE-2022-35943</a></li>\n<li><a href=\"https://github.com/codeigniter4/shield/commit/342a368536678621998c3c41d276480cd14ec6c6\">https://github.com/codeigniter4/shield/commit/342a368536678621998c3c41d276480cd14ec6c6</a></li>\n<li><a href=\"https://codeigniter4.github.io/userguide/libraries/security.htm\">https://codeigniter4.github.io/userguide/libraries/security.htm</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite</a></li>\n<li><a href=\"https://jub0bs.com/posts/2021-01-29-great-samesite-confusion\">https://jub0bs.com/posts/2021-01-29-great-samesite-confusion</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hm8-vh6r-2cjq\">https://github.com/advisories/GHSA-5hm8-vh6r-2cjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hm8-vh6r-2cjq",
            "title": "[codeigniter4/shield] CodeIgniter Shield Vulnerable to SameSite Attackers Bypassing the CSRF Protection",
            "date_modified": "2022-08-18T19:03:35.000Z",
            "date_published": "2022-08-18T19:03:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hm8-vh6r-2cjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Microweber prior to v1.3.1, the title parameter in the body of POST request when creating/editing a category is vulnerable to stored cross-site scripting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2777\">https://nvd.nist.gov/vuln/detail/CVE-2022-2777</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/60eef7494211d1c458228c321e986edeaa401a58\">https://github.com/microweber/microweber/commit/60eef7494211d1c458228c321e986edeaa401a58</a></li>\n<li><a href=\"https://huntr.dev/bounties/13dd2f4d-0c7f-483e-a771-e1ed2ff1c36f\">https://huntr.dev/bounties/13dd2f4d-0c7f-483e-a771-e1ed2ff1c36f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cf6r-q678-f2p7\">https://github.com/advisories/GHSA-cf6r-q678-f2p7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cf6r-q678-f2p7",
            "title": "[microweber/microweber] Microweber's title parameter in the body of POST request vulnerable to stored XSS",
            "date_modified": "2022-08-16T19:33:55.000Z",
            "date_published": "2022-08-12T00:01:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cf6r-q678-f2p7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Drupal core sanitizes filenames with dangerous extensions upon upload and strips leading and trailing dots from filenames to prevent uploading server configuration files.</p>\n<p>However, the protections for these two vulnerabilities previously did not work correctly together. As a result, if the site were configured to allow the upload of files with an htaccess extension, these files' filenames would not be properly sanitized. This could allow bypassing the protections provided by Drupal core's default .htaccess files and possible remote code execution on Apache web servers.</p>\n<p>This issue is mitigated by the fact that it requires a field administrator to explicitly configure a file field to allow htaccess as an extension (a restricted permission), or a contributed module or custom code that overrides allowed file uploads.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17\">https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a\">https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-014\">https://www.drupal.org/sa-core-2022-014</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6955-67hm-vjjq\">https://github.com/advisories/GHSA-6955-67hm-vjjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq",
            "title": "[drupal/core] Drupal core arbitrary PHP code execution",
            "date_modified": "2022-08-06T09:33:39.000Z",
            "date_published": "2022-08-06T09:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Drupal core sanitizes filenames with dangerous extensions upon upload and strips leading and trailing dots from filenames to prevent uploading server configuration files.</p>\n<p>However, the protections for these two vulnerabilities previously did not work correctly together. As a result, if the site were configured to allow the upload of files with an htaccess extension, these files' filenames would not be properly sanitized. This could allow bypassing the protections provided by Drupal core's default .htaccess files and possible remote code execution on Apache web servers.</p>\n<p>This issue is mitigated by the fact that it requires a field administrator to explicitly configure a file field to allow htaccess as an extension (a restricted permission), or a contributed module or custom code that overrides allowed file uploads.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17\">https://github.com/drupal/core/commit/1cd1830d79f221cc8490f53c2bb487dd07094f17</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a\">https://github.com/drupal/core/commit/5d464ea4407c50e40dcf6cb5ee376e7b8dd36f3a</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25277.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-014\">https://www.drupal.org/sa-core-2022-014</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6955-67hm-vjjq\">https://github.com/advisories/GHSA-6955-67hm-vjjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq",
            "title": "[drupal/core] Drupal core arbitrary PHP code execution",
            "date_modified": "2022-08-06T09:33:39.000Z",
            "date_published": "2022-08-06T09:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6955-67hm-vjjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A stored cross-site scripting (XSS) vulnerability in /index.php?r=site%2Fsignup of Feehi CMS v2.1.1 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the username field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34140\">https://nvd.nist.gov/vuln/detail/CVE-2022-34140</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/61\">https://github.com/liufee/cms/issues/61</a></li>\n<li><a href=\"https://github.com/liufee/cms\">https://github.com/liufee/cms</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/168012/Feehi-CMS-2.1.1-Cross-Site-Scripting.html\">http://packetstormsecurity.com/files/168012/Feehi-CMS-2.1.1-Cross-Site-Scripting.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-25q6-m425-9fqr\">https://github.com/advisories/GHSA-25q6-m425-9fqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-25q6-m425-9fqr",
            "title": "[feehi/cms] Feehi CMS Cross-site Scripting",
            "date_modified": "2022-08-11T20:35:44.000Z",
            "date_published": "2022-07-29T00:00:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-25q6-m425-9fqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary file upload vulnerability in the Advertising Management module of Feehi CMS v2.1.1 allows attackers to execute arbitrary code via a crafted PHP file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34971\">https://nvd.nist.gov/vuln/detail/CVE-2022-34971</a></li>\n<li><a href=\"https://github.com/liufee/cms/issues/62\">https://github.com/liufee/cms/issues/62</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jxg9-2ch7-f552\">https://github.com/advisories/GHSA-jxg9-2ch7-f552</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jxg9-2ch7-f552",
            "title": "[feehi/cms] Feehi CMS arbitrary code execution via crafted PHP file",
            "date_modified": "2022-08-06T05:31:43.000Z",
            "date_published": "2022-07-28T00:00:53.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jxg9-2ch7-f552"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system.</p>\n<p>Access to a non-public file is checked only if it is stored in the \"private\" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability.</p>\n<p>This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) <code>$config['image.settings']['allow_insecure_derivatives']</code> or (Drupal 7) <code>$conf['image_allow_insecure_derivatives']</code> to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI.</p>\n<p>Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf\">https://github.com/drupal/core/commit/2d5f47fc8a166115f56c2330a81e83abe22445cf</a></li>\n<li><a href=\"https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116\">https://github.com/drupal/core/commit/e2fbf63700819cb470a1be425798f1a3f2020116</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/core/CVE-2022-25275.yaml</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-012\">https://www.drupal.org/sa-core-2022-012</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh3v-6f9j-wxw3\">https://github.com/advisories/GHSA-xh3v-6f9j-wxw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3",
            "title": "[drupal/core] Drupal core Information Disclosure vulnerability",
            "date_modified": "2022-08-06T05:31:27.000Z",
            "date_published": "2022-08-06T05:31:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh3v-6f9j-wxw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users electing to prevent others starting private discussions with themselves.</p>\n<blockquote>\n<p>Please note that admins and others with appropriate permissions can always bypass this preference, as was the case before.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>Users of Byobu should update the extension to version 1.1.7, where this has been patched. <strong>This version is only supported on v1.2.0 and later of Flarum Core.</strong></p>\n<p>Users of Byobu with Flarum 1.0 or 1.1 should upgrade to Flarum 1.2 or later, or evaluate the impact this issue has on your forum's users and choose to disable the extension if needed.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no workarounds for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfFlarum/byobu/security/advisories/GHSA-6gjm-6wj6-4px5\">https://github.com/FriendsOfFlarum/byobu/security/advisories/GHSA-6gjm-6wj6-4px5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35921\">https://nvd.nist.gov/vuln/detail/CVE-2022-35921</a></li>\n<li><a href=\"https://github.com/FriendsOfFlarum/byobu/commit/23dcf93a30f948d30c678a96681f7fdefeba5171\">https://github.com/FriendsOfFlarum/byobu/commit/23dcf93a30f948d30c678a96681f7fdefeba5171</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6gjm-6wj6-4px5\">https://github.com/advisories/GHSA-6gjm-6wj6-4px5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6gjm-6wj6-4px5",
            "title": "[fof/byobu] Byobu user preference to prevent private discussions being started are not respected",
            "date_modified": "2022-08-06T05:20:54.000Z",
            "date_published": "2022-08-06T05:20:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6gjm-6wj6-4px5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory is a duplicate of GHSA-hrgx-p36p-89q4. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<p>PrestaShop 1.6.0.10 through 1.7.x before 1.7.8.2 allows remote attackers to execute arbitrary code, aka a \"previously unknown vulnerability chain\" related to SQL injection, as exploited in the wild in July 2022.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36408\">https://nvd.nist.gov/vuln/detail/CVE-2022-36408</a></li>\n<li><a href=\"https://build.prestashop.com/news/major-security-vulnerability-on-prestashop-websites/\">https://build.prestashop.com/news/major-security-vulnerability-on-prestashop-websites/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qv6h-pcf2-2w3g\">https://github.com/advisories/GHSA-qv6h-pcf2-2w3g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qv6h-pcf2-2w3g",
            "title": "[prestashop/prestashop] Duplicate Advisory GHSA-hrgx-p36p-89q4",
            "date_modified": "2022-08-05T18:57:59.000Z",
            "date_published": "2022-07-23T00:00:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qv6h-pcf2-2w3g"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}