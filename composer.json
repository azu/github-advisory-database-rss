{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>The GraphQL module accepts basic-auth as an authentication method by default. This can be used to bypass MFA authentication if the silverstripe/mfa module is installed, which is now a commonly installed module. A users password is still required though.</p>\n<p>Basic-auth has been removed as a default authentication method. It desired, it can be re-enabled by adding it to the authenticators key of a schema, or on SilverStripe\\Graphql\\Auth\\Handler</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26136\">https://nvd.nist.gov/vuln/detail/CVE-2020-26136</a></li>\n<li><a href=\"https://forum.silverstripe.org/c/releases\">https://forum.silverstripe.org/c/releases</a></li>\n<li><a href=\"https://www.silverstripe.org/blog/tag/release\">https://www.silverstripe.org/blog/tag/release</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/\">https://www.silverstripe.org/download/security-releases/</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2020-26136\">https://www.silverstripe.org/download/security-releases/cve-2020-26136</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mg2g-8pwj-r2j2\">https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mg2g-8pwj-r2j2",
            "title": "[silverstripe/graphql] Authentication bypass in SilverStripe GraphQL",
            "date_modified": "2022-03-09T23:56:21.000Z",
            "date_published": "2021-06-10T17:21:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mg2g-8pwj-r2j2"
            }
        },
        {
            "content_html": "<p>The GraphQL module accepts basic-auth as an authentication method by default. This can be used to bypass MFA authentication if the silverstripe/mfa module is installed, which is now a commonly installed module. A users password is still required though.</p>\n<p>Basic-auth has been removed as a default authentication method. It desired, it can be re-enabled by adding it to the authenticators key of a schema, or on SilverStripe\\Graphql\\Auth\\Handler</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-26136\">https://nvd.nist.gov/vuln/detail/CVE-2020-26136</a></li>\n<li><a href=\"https://forum.silverstripe.org/c/releases\">https://forum.silverstripe.org/c/releases</a></li>\n<li><a href=\"https://www.silverstripe.org/blog/tag/release\">https://www.silverstripe.org/blog/tag/release</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/\">https://www.silverstripe.org/download/security-releases/</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2020-26136\">https://www.silverstripe.org/download/security-releases/cve-2020-26136</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mg2g-8pwj-r2j2\">https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mg2g-8pwj-r2j2",
            "title": "[silverstripe/graphql] Authentication bypass in SilverStripe GraphQL",
            "date_modified": "2022-03-09T23:56:21.000Z",
            "date_published": "2021-06-10T17:21:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mg2g-8pwj-r2j2"
            }
        },
        {
            "content_html": "<p>When image files are uploaded, they are made accessible under a name similar to the original file name. There are two issues with this. Both require access to uploading images in order to exploit them, this limits the impact. The first issue is that certain injection attacks can be possible, since not all possible attack vectors are removed from the original file name.</p>\n<p>The second issue is that direct access to the images is not access controlled. This is by design, for performance reasons, and documented as such. But it does mean that images not meant to be publicly accessible can be accessed, provided that the image path and filename is correctly deduced and/or guessed, through dictionary attacks and similar.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25336\">https://nvd.nist.gov/vuln/detail/CVE-2022-25336</a></li>\n<li><a href=\"https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization\">https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x8xx-x82q-42q3\">https://github.com/advisories/GHSA-x8xx-x82q-42q3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x8xx-x82q-42q3",
            "title": "[ezsystems/ezplatform-kernel] Exposure of Resource to Wrong Sphere in ezsystems/ezplatform-kernel",
            "date_modified": "2022-03-08T21:24:56.000Z",
            "date_published": "2022-02-19T00:01:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x8xx-x82q-42q3"
            }
        },
        {
            "content_html": "<p>When image files are uploaded, they are made accessible under a name similar to the original file name. There are two issues with this. Both require access to uploading images in order to exploit them, this limits the impact. The first issue is that certain injection attacks can be possible, since not all possible attack vectors are removed from the original file name.</p>\n<p>The second issue is that direct access to the images is not access controlled. This is by design, for performance reasons, and documented as such. But it does mean that images not meant to be publicly accessible can be accessed, provided that the image path and filename is correctly deduced and/or guessed, through dictionary attacks and similar.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25337\">https://nvd.nist.gov/vuln/detail/CVE-2022-25337</a></li>\n<li><a href=\"https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization\">https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xwv6-v7qx-f5jc\">https://github.com/advisories/GHSA-xwv6-v7qx-f5jc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xwv6-v7qx-f5jc",
            "title": "[ezsystems/ezpublish-kernel] Code injection in ezsystems/ezpublish-kernel",
            "date_modified": "2022-03-08T21:24:54.000Z",
            "date_published": "2022-02-19T00:01:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xwv6-v7qx-f5jc"
            }
        },
        {
            "content_html": "<p>Dolibarr allows improper access control issues in the userphoto modulepart. The impact could lead to data exposure as the attached files and documents may contain sensitive information of relevant parties such as contacts, suppliers, invoices, orders, stocks, agenda, accounting and more.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0731\">https://nvd.nist.gov/vuln/detail/CVE-2022-0731</a></li>\n<li><a href=\"https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a\">https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a</a></li>\n<li><a href=\"https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8\">https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4xc7-x2jr-cr74\">https://github.com/advisories/GHSA-4xc7-x2jr-cr74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4xc7-x2jr-cr74",
            "title": "[dolibarr/dolibarr] Improper Authorization in dolibarr/dolibarr",
            "date_modified": "2022-03-04T14:46:06.000Z",
            "date_published": "2022-02-24T00:00:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4xc7-x2jr-cr74"
            }
        },
        {
            "content_html": "<p>ECTouch v2 suffers from arbitrary file deletion due to insufficient filtering of the filename parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25098\">https://nvd.nist.gov/vuln/detail/CVE-2022-25098</a></li>\n<li><a href=\"https://github.com/dota-st/Vulnerability/blob/master/ECTouchV2.md\">https://github.com/dota-st/Vulnerability/blob/master/ECTouchV2.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ph62-8768-r87v\">https://github.com/advisories/GHSA-ph62-8768-r87v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ph62-8768-r87v",
            "title": "[ectouch/ectouch] Arbitrary file delete in ectouch/ectouch",
            "date_modified": "2022-03-04T14:47:36.000Z",
            "date_published": "2022-02-25T00:01:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ph62-8768-r87v"
            }
        },
        {
            "content_html": "<p>Improper php function sanitization, lead to an ability to inject arbitrary PHP code and run arbitrary commands on file system. In the function \"dol_eval\" in file \"dolibarr/htdocs/core/lib/functions.lib.php\" dangerous PHP functions are sanitized using \"str_replace\" and can be bypassed using following code in $s parameter</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0819\">https://nvd.nist.gov/vuln/detail/CVE-2022-0819</a></li>\n<li><a href=\"https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075\">https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075</a></li>\n<li><a href=\"https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5\">https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-42qm-c3cf-9wv2\">https://github.com/advisories/GHSA-42qm-c3cf-9wv2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-42qm-c3cf-9wv2",
            "title": "[dolibarr/dolibarr] Code injection in dolibarr/dolibarr",
            "date_modified": "2022-03-10T15:55:04.000Z",
            "date_published": "2022-03-03T00:00:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-42qm-c3cf-9wv2"
            }
        },
        {
            "content_html": "<p>matyhtf framework v3.0.5 is affected by a path manipulation vulnerability in Smarty.class.php.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43676\">https://nvd.nist.gov/vuln/detail/CVE-2021-43676</a></li>\n<li><a href=\"https://github.com/matyhtf/framework/issues/206\">https://github.com/matyhtf/framework/issues/206</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mh9j-v6mq-pfch\">https://github.com/advisories/GHSA-mh9j-v6mq-pfch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mh9j-v6mq-pfch",
            "title": "[matyhtf/framework] Path manipulation in matyhtf/framework",
            "date_modified": "2022-03-08T21:25:20.000Z",
            "date_published": "2021-12-04T00:01:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mh9j-v6mq-pfch"
            }
        },
        {
            "content_html": "<p>Microweber prior to version 1.3 does not rate limit password reset emails.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0777\">https://nvd.nist.gov/vuln/detail/CVE-2022-0777</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/a3944cf9d1d8c41a48297ddc98302934e2511b0f\">https://github.com/microweber/microweber/commit/a3944cf9d1d8c41a48297ddc98302934e2511b0f</a></li>\n<li><a href=\"https://huntr.dev/bounties/b36be8cd-544f-42bd-990d-aa1a46df44d7\">https://huntr.dev/bounties/b36be8cd-544f-42bd-990d-aa1a46df44d7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r79-mrp6-8mhq\">https://github.com/advisories/GHSA-7r79-mrp6-8mhq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r79-mrp6-8mhq",
            "title": "[microweber/microweber] Rate limit missing in microweber",
            "date_modified": "2022-03-10T16:00:57.000Z",
            "date_published": "2022-03-02T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r79-mrp6-8mhq"
            }
        },
        {
            "content_html": "<p>User input is not properly sanitized leading to cross site scrpting (xss) in grav.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0743\">https://nvd.nist.gov/vuln/detail/CVE-2022-0743</a></li>\n<li><a href=\"https://github.com/getgrav/grav/commit/3dd0cabeac9835fe64dcb4b68c658b39f1f6be2f\">https://github.com/getgrav/grav/commit/3dd0cabeac9835fe64dcb4b68c658b39f1f6be2f</a></li>\n<li><a href=\"https://huntr.dev/bounties/32ea4ddb-5b41-4bf9-b5a1-ef455fe2d293\">https://huntr.dev/bounties/32ea4ddb-5b41-4bf9-b5a1-ef455fe2d293</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2p89-ppc2-mrq4\">https://github.com/advisories/GHSA-2p89-ppc2-mrq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2p89-ppc2-mrq4",
            "title": "[getgrav/grav] Cross site scripting in getgrav/grav",
            "date_modified": "2022-03-02T21:28:14.000Z",
            "date_published": "2022-03-02T00:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2p89-ppc2-mrq4"
            }
        },
        {
            "content_html": "<p>The application doesn't perform a check/filter against the value of \"importFile\" parameter at endpoint \"/admin/translation/import\". After the API is executed, PHP unlink function will proceed to delete the file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0665\">https://nvd.nist.gov/vuln/detail/CVE-2022-0665</a></li>\n<li><a href=\"https://github.com/pimcore/pimcore/commit/28945649a6234ccaa8c94c6cd83d1954603baf3e\">https://github.com/pimcore/pimcore/commit/28945649a6234ccaa8c94c6cd83d1954603baf3e</a></li>\n<li><a href=\"https://huntr.dev/bounties/423df64d-c591-4ad9-bf1c-411bcbc06ba3\">https://huntr.dev/bounties/423df64d-c591-4ad9-bf1c-411bcbc06ba3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gjq4-69wj-p6pr\">https://github.com/advisories/GHSA-gjq4-69wj-p6pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gjq4-69wj-p6pr",
            "title": "[pimcore/pimcore] Path traversal in pimcore",
            "date_modified": "2022-03-03T13:27:26.000Z",
            "date_published": "2022-02-23T00:00:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gjq4-69wj-p6pr"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>the default .htaccess file has some restrictions in the access to PHP files to only allow specific PHP files to be executed in the root of the application.</p>\n<p>This logic isn't correct, as the regex in the second FilesMatch only checks the filename, not the full path.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please upgrade to 3.3.5 or 4.2.0 </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Release post: <a href=\"https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic\">https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic</a></li>\n<li>Internally tracked under MST-32</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56\">https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mj6m-246h-9w56\">https://github.com/advisories/GHSA-mj6m-246h-9w56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mj6m-246h-9w56",
            "title": "[mautic/core] Improper regex in htaccess file",
            "date_modified": "2022-03-02T14:47:47.000Z",
            "date_published": "2022-03-01T22:05:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mj6m-246h-9w56"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>the default .htaccess file has some restrictions in the access to PHP files to only allow specific PHP files to be executed in the root of the application.</p>\n<p>This logic isn't correct, as the regex in the second FilesMatch only checks the filename, not the full path.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Please upgrade to 3.3.5 or 4.2.0 </p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Release post: <a href=\"https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic\">https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic</a></li>\n<li>Internally tracked under MST-32</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:security@mautic.org\">security@mautic.org</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56\">https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mj6m-246h-9w56\">https://github.com/advisories/GHSA-mj6m-246h-9w56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mj6m-246h-9w56",
            "title": "[mautic/core] Improper regex in htaccess file",
            "date_modified": "2022-03-02T14:47:47.000Z",
            "date_published": "2022-03-01T22:05:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mj6m-246h-9w56"
            }
        },
        {
            "content_html": "<p>LibreNMS prior to version 22.2.2 is vulnerable to cross-site scripting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0772\">https://nvd.nist.gov/vuln/detail/CVE-2022-0772</a></li>\n<li><a href=\"https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281\">https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281</a></li>\n<li><a href=\"https://huntr.dev/bounties/faae29bd-c43a-468d-8af6-2b6aa4d40f09\">https://huntr.dev/bounties/faae29bd-c43a-468d-8af6-2b6aa4d40f09</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vhm6-gw82-6f8j\">https://github.com/advisories/GHSA-vhm6-gw82-6f8j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vhm6-gw82-6f8j",
            "title": "[librenms/librenms] Cross site scripting in LibreNMS",
            "date_modified": "2022-03-08T18:06:06.000Z",
            "date_published": "2022-02-28T00:00:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vhm6-gw82-6f8j"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Releases prior to 3.0.2 are vulnerable to a Server-Side Request Forgery vulnerability that allows an attacker to send a request to an internal hostname.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>3.0.2 contains a fix for this vulnerability.\n(The 1.x and 2.x releases are not maintained anymore.)</p>\n<p>Part of the fix requires applying <a href=\"https://github.com/Rudloff/alltube/blob/148a171b240e7ceb076b9e198bef412de14ac55d/patches/youtube-dl-redirect.diff\">a patch</a> to youtube-dl to prevent it from following HTTP redirects. If you are using the version of youtube-dl bundled with 3.0.2, it is already patched.\nHowever, if you are using your own unpatched version of youtube-dl <strong>you might still be vulnerable</strong>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d\">https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d</a></li>\n<li><a href=\"https://github.com/Rudloff/alltube/commit/1b099bb9836a3ce7c427a41722a7ab5a3d1c1b2d\">https://github.com/Rudloff/alltube/commit/1b099bb9836a3ce7c427a41722a7ab5a3d1c1b2d</a></li>\n<li><a href=\"https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903/\">https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903/</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0768\">https://nvd.nist.gov/vuln/detail/CVE-2022-0768</a></li>\n<li><a href=\"https://github.com/ytdl-org/youtube-dl/issues/30691\">https://github.com/ytdl-org/youtube-dl/issues/30691</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/Rudloff/alltube/security/advisories/GHSA-r5hc-wm3g-hjw6\">https://github.com/Rudloff/alltube/security/advisories/GHSA-r5hc-wm3g-hjw6</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0768\">https://nvd.nist.gov/vuln/detail/CVE-2022-0768</a></li>\n<li><a href=\"https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d\">https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d</a></li>\n<li><a href=\"https://github.com/rudloff/alltube/commit/148a171b240e7ceb076b9e198bef412de14ac55d\">https://github.com/rudloff/alltube/commit/148a171b240e7ceb076b9e198bef412de14ac55d</a></li>\n<li><a href=\"https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903\">https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5hc-wm3g-hjw6\">https://github.com/advisories/GHSA-r5hc-wm3g-hjw6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5hc-wm3g-hjw6",
            "title": "[rudloff/alltube] Server-Side Request Forgery (SSRF) in rudloff/alltube",
            "date_modified": "2022-03-09T20:18:07.000Z",
            "date_published": "2022-03-01T22:01:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5hc-wm3g-hjw6"
            }
        },
        {
            "content_html": "<p>Microweber Cross-site Scripting (XSS) - Stored XSS vulnerability on admin page up to version 1.3.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0763\">https://nvd.nist.gov/vuln/detail/CVE-2022-0763</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/c897d0dc159849763a813184d9b75b966c6360bf\">https://github.com/microweber/microweber/commit/c897d0dc159849763a813184d9b75b966c6360bf</a></li>\n<li><a href=\"https://huntr.dev/bounties/6de9c621-740d-4d7a-9d77-d90c6c87f3b6\">https://huntr.dev/bounties/6de9c621-740d-4d7a-9d77-d90c6c87f3b6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6m26-25q2-cq46\">https://github.com/advisories/GHSA-6m26-25q2-cq46</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6m26-25q2-cq46",
            "title": "[microweber/microweber] Cross-site Scripting in microweber",
            "date_modified": "2022-03-09T20:36:47.000Z",
            "date_published": "2022-02-27T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6m26-25q2-cq46"
            }
        },
        {
            "content_html": "<p>Microweber prior to 1.2.11 is vulnerable to reflected cross-site scripting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0723\">https://nvd.nist.gov/vuln/detail/CVE-2022-0723</a></li>\n<li><a href=\"https://github.com/microweber/microweber/commit/15e519a86e4b24526abaf9e6dc81cb1af86843a5\">https://github.com/microweber/microweber/commit/15e519a86e4b24526abaf9e6dc81cb1af86843a5</a></li>\n<li><a href=\"https://huntr.dev/bounties/16b0547b-1bb3-493c-8a00-5b6a11fca1c5\">https://huntr.dev/bounties/16b0547b-1bb3-493c-8a00-5b6a11fca1c5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4p92-fv6v-fhfj\">https://github.com/advisories/GHSA-4p92-fv6v-fhfj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4p92-fv6v-fhfj",
            "title": "[microweber/microweber] Cross-site Scripting in microweber",
            "date_modified": "2022-03-09T20:43:45.000Z",
            "date_published": "2022-02-27T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4p92-fv6v-fhfj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability might allow remote attackers to bypass the CodeIgniter4 CSRF protection mechanism. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to v4.1.9 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>These are workarounds for this vulnerability, but <strong>you will still need to code as these after upgrading to v4.1.9</strong>.\nOtherwise, the CSRF protection may be bypassed.</p>\n<h4 id=\"when-auto-routing-is-enabled\">When Auto-Routing is Enabled</h4>\n<ol>\n<li>Check the request method in the controller method before processing.</li>\n</ol>\n<p>E.g.:</p>\n<pre><code class=\"language-php\">        if (strtolower($this-&gt;request-&gt;getMethod()) !== 'post') {\n            return $this-&gt;response-&gt;setStatusCode(405)-&gt;setBody('Method Not Allowed');\n        }\n</code></pre>\n<h4 id=\"when-auto-routing-is-disabled\">When Auto-Routing is Disabled</h4>\n<p>Do one of the following:</p>\n<ol>\n<li>Do not use <code>$routes-&gt;add()</code>, and <a href=\"https://codeigniter4.github.io/userguide/incoming/routing.html#using-http-verbs-in-routes\">use HTTP verbs in routes</a>.</li>\n<li>Check the request method in the controller method before processing.</li>\n</ol>\n<p>E.g.:</p>\n<pre><code class=\"language-php\">        if (strtolower($this-&gt;request-&gt;getMethod()) !== 'post') {\n            return $this-&gt;response-&gt;setStatusCode(405)-&gt;setBody('Method Not Allowed');\n        }\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://codeigniter4.github.io/userguide/libraries/security.html#cross-site-request-forgery-csrf\">CodeIgniter4 CSRF protection</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/codeigniter4/CodeIgniter4/issues\">codeigniter4/CodeIgniter4</a></li>\n<li>Email us at <a href=\"https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md\">SECURITY.md</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-4v37-24gm-h554\">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-4v37-24gm-h554</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24712\">https://nvd.nist.gov/vuln/detail/CVE-2022-24712</a></li>\n<li><a href=\"https://github.com/codeigniter4/CodeIgniter4/blob/7dc2ece32401ebde67122f7d2460efcaee7c352e/user_guide_src/source/changelogs/v4.1.9.rst\">https://github.com/codeigniter4/CodeIgniter4/blob/7dc2ece32401ebde67122f7d2460efcaee7c352e/user_guide_src/source/changelogs/v4.1.9.rst</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v37-24gm-h554\">https://github.com/advisories/GHSA-4v37-24gm-h554</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v37-24gm-h554",
            "title": "[codeigniter4/framework] Cross-Site Request Forgery (CSRF) Protection Bypass Vulnerability in CodeIgniter4",
            "date_modified": "2022-03-01T22:50:08.000Z",
            "date_published": "2022-03-01T21:47:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v37-24gm-h554"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability allows attackers to execute CLI routes via HTTP request.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to v4.1.9 or later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/codeigniter4/CodeIgniter4/issues\">codeigniter4/CodeIgniter4</a></li>\n<li>Email us at <a href=\"https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md\">SECURITY.md</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-xjp4-6w75-qrj7\">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-xjp4-6w75-qrj7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24711\">https://nvd.nist.gov/vuln/detail/CVE-2022-24711</a></li>\n<li><a href=\"https://github.com/codeigniter4/CodeIgniter4/commit/202f41ad522ba1d414b9d9c35aba1cb0c156b781\">https://github.com/codeigniter4/CodeIgniter4/commit/202f41ad522ba1d414b9d9c35aba1cb0c156b781</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjp4-6w75-qrj7\">https://github.com/advisories/GHSA-xjp4-6w75-qrj7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjp4-6w75-qrj7",
            "title": "[codeigniter4/framework] Remote CLI Command Execution Vulnerability in CodeIgniter4",
            "date_modified": "2022-03-09T20:20:11.000Z",
            "date_published": "2022-03-01T21:44:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjp4-6w75-qrj7"
            }
        },
        {
            "content_html": "<p>The Quick Edit module does not properly check entity access in some circumstances. This could result in users with the \"access in-place editing\" permission viewing some content they are are not authorized to access. Sites are only affected if the QuickEdit module (which comes with the Standard profile) is installed.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25270\">https://nvd.nist.gov/vuln/detail/CVE-2022-25270</a></li>\n<li><a href=\"https://www.drupal.org/sa-core-2022-004\">https://www.drupal.org/sa-core-2022-004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-73q4-j324-2qcc\">https://github.com/advisories/GHSA-73q4-j324-2qcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-73q4-j324-2qcc",
            "title": "[drupal/core] Incorrect authorization in Drupal core",
            "date_modified": "2022-03-01T22:04:21.000Z",
            "date_published": "2022-02-18T00:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-73q4-j324-2qcc"
            }
        }
    ]
}