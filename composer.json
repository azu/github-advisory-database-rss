{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>Insecure deserialization is a vulnerability which occurs when untrusted data is used to abuse the logic of an application. In July 2018, the vulnerability of insecure deserialization when executing Phar archives was addressed by removing the known attack vector in the TYPO3 core. For more details read the corresponding TYPO3 advisory.</p>\n<p>In addition, a new interceptor was introduced to protect possible (but unknown) vulnerabilities in 3rd party components like TYPO3 extensions. Basically, the PharStreamWrapper intercepts direct invocations of Phar archives and allows or denies further processing based on individual rules.</p>\n<p>Recently, the PharStreamWrapper was extracted from the TYPO3 core and released as standalone package under the MIT license. It is now available for any PHP driven project.</p>\n<p>The stream wrapper overwrites the existing Phar handling of PHP, applies its own assertions and then restores the native PHP Phar handling for the corresponding commands (e.g. file_exists, include, fopen) to continue processing. After that, the native PHP Phar handling gets disabled and is overwritten by the logic of the PharStreamWrapper again. This is the only way to control invocations of Phar archives as PHP only allows a single handler for each corresponding stream.</p>\n<p>We were informed that exception and error handlers in custom applications (e.g. TYPO3 extensions) sometimes didn't return to the original operating sequence of the PharStreamWrapper. A possible consequence was that the unprotected native PHP Phar handling remained active and therefore became vulnerable for the basic issue of insecure deserialization again.</p>\n<p>Examples\nTake a look at the following examples showing how the handling is by-passed in custom application code.</p>\n<p>Scenario A: Exception thrown from code organized in a Phar archive</p>\n<pre><code>try {\n    include('phar://path-to-archive/good-archive.phar');\n} catch (\\Throwable $throwable) {\n    // not doing much here, continue execution\n}\n// the insecure value can be anything that is or was user-submitted\n// and cannot be trusted in terms of security, $_GET is just used as example\n$insecureValue = $_GET['path'];\n// the value might be 'phar://path-to-archive/malicious-archive.phar'\nfile_exists($insecureValue);\n</code></pre>\n<p>Scenario B: Errors converted to exceptions and thrown when interacting with archive contents</p>\n<pre><code>// set error handler in order to convert errors to exceptions\nset_error_handler(function($errno, $errstr, $errfile, $errline, array $errcontext) {\n   throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n});\n// interacting with Phar archive\ntry {\n   $resource = opendir('phar://path-to-archive/good-archive.phar/non-existing-path/');\n   closedir($resource);\n} catch (\\Throwable $throwable) {\n   // not doing much here, continue execution\n}\n// the insecure value can be anything that is or was user-submitted\n// and cannot be trusted in terms of security, $_GET is just used as example\n$insecureValue = $_GET['path'];\n// the value might be 'phar://path-to-archive/malicious-archive.phar'\nfile_exists($insecureValue);\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/phar-stream-wrapper/2018-10-18-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/phar-stream-wrapper/2018-10-18-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-psa-2018-001\">https://typo3.org/security/advisory/typo3-psa-2018-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v5g-8pq2-32m2\">https://github.com/advisories/GHSA-4v5g-8pq2-32m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v5g-8pq2-32m2",
            "title": "[typo3/phar-stream-wrapper] By-passing Protection of PharStreamWrapper Interceptor",
            "date_modified": "2024-06-05T17:30:02.000Z",
            "date_published": "2024-06-05T17:30:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v5g-8pq2-32m2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insecure deserialization is a vulnerability which occurs when untrusted data is used to abuse the logic of an application. In July 2018, the vulnerability of insecure deserialization when executing Phar archives was addressed by removing the known attack vector in the TYPO3 core. For more details read the corresponding TYPO3 advisory.</p>\n<p>In addition, a new interceptor was introduced to protect possible (but unknown) vulnerabilities in 3rd party components like TYPO3 extensions. Basically, the PharStreamWrapper intercepts direct invocations of Phar archives and allows or denies further processing based on individual rules.</p>\n<p>Recently, the PharStreamWrapper was extracted from the TYPO3 core and released as standalone package under the MIT license. It is now available for any PHP driven project.</p>\n<p>The stream wrapper overwrites the existing Phar handling of PHP, applies its own assertions and then restores the native PHP Phar handling for the corresponding commands (e.g. file_exists, include, fopen) to continue processing. After that, the native PHP Phar handling gets disabled and is overwritten by the logic of the PharStreamWrapper again. This is the only way to control invocations of Phar archives as PHP only allows a single handler for each corresponding stream.</p>\n<p>We were informed that exception and error handlers in custom applications (e.g. TYPO3 extensions) sometimes didn't return to the original operating sequence of the PharStreamWrapper. A possible consequence was that the unprotected native PHP Phar handling remained active and therefore became vulnerable for the basic issue of insecure deserialization again.</p>\n<p>Examples\nTake a look at the following examples showing how the handling is by-passed in custom application code.</p>\n<p>Scenario A: Exception thrown from code organized in a Phar archive</p>\n<pre><code>try {\n    include('phar://path-to-archive/good-archive.phar');\n} catch (\\Throwable $throwable) {\n    // not doing much here, continue execution\n}\n// the insecure value can be anything that is or was user-submitted\n// and cannot be trusted in terms of security, $_GET is just used as example\n$insecureValue = $_GET['path'];\n// the value might be 'phar://path-to-archive/malicious-archive.phar'\nfile_exists($insecureValue);\n</code></pre>\n<p>Scenario B: Errors converted to exceptions and thrown when interacting with archive contents</p>\n<pre><code>// set error handler in order to convert errors to exceptions\nset_error_handler(function($errno, $errstr, $errfile, $errline, array $errcontext) {\n   throw new ErrorException($errstr, 0, $errno, $errfile, $errline);\n});\n// interacting with Phar archive\ntry {\n   $resource = opendir('phar://path-to-archive/good-archive.phar/non-existing-path/');\n   closedir($resource);\n} catch (\\Throwable $throwable) {\n   // not doing much here, continue execution\n}\n// the insecure value can be anything that is or was user-submitted\n// and cannot be trusted in terms of security, $_GET is just used as example\n$insecureValue = $_GET['path'];\n// the value might be 'phar://path-to-archive/malicious-archive.phar'\nfile_exists($insecureValue);\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/phar-stream-wrapper/2018-10-18-1.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/phar-stream-wrapper/2018-10-18-1.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-psa-2018-001\">https://typo3.org/security/advisory/typo3-psa-2018-001</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4v5g-8pq2-32m2\">https://github.com/advisories/GHSA-4v5g-8pq2-32m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4v5g-8pq2-32m2",
            "title": "[typo3/phar-stream-wrapper] By-passing Protection of PharStreamWrapper Interceptor",
            "date_modified": "2024-06-05T17:30:02.000Z",
            "date_published": "2024-06-05T17:30:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4v5g-8pq2-32m2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6mm-wmhf-849m\">https://github.com/advisories/GHSA-r6mm-wmhf-849m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m",
            "title": "[typo3/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-06-05T17:28:47.000Z",
            "date_published": "2024-06-05T17:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6mm-wmhf-849m\">https://github.com/advisories/GHSA-r6mm-wmhf-849m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m",
            "title": "[typo3/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-06-05T17:28:47.000Z",
            "date_published": "2024-06-05T17:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6mm-wmhf-849m\">https://github.com/advisories/GHSA-r6mm-wmhf-849m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m",
            "title": "[typo3/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-06-05T17:28:47.000Z",
            "date_published": "2024-06-05T17:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6mm-wmhf-849m\">https://github.com/advisories/GHSA-r6mm-wmhf-849m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m",
            "title": "[typo3/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-06-05T17:28:47.000Z",
            "date_published": "2024-06-05T17:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2016-11-01.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-sa-2016-001.html\">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6mm-wmhf-849m\">https://github.com/advisories/GHSA-r6mm-wmhf-849m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m",
            "title": "[typo3/flow] Time-Based Information Disclosure Vulnerability in Flow",
            "date_modified": "2024-06-05T17:28:47.000Z",
            "date_published": "2024-06-05T17:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6mm-wmhf-849m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-03-28.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-03-28.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-001.html\">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wr3c-6c22-m9v6\">https://github.com/advisories/GHSA-wr3c-6c22-m9v6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wr3c-6c22-m9v6",
            "title": "[typo3/neos] Privilege Escalation in TYPO3 Neos",
            "date_modified": "2024-06-05T17:28:06.000Z",
            "date_published": "2024-06-05T17:28:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wr3c-6c22-m9v6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-03-28.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-03-28.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-001.html\">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wr3c-6c22-m9v6\">https://github.com/advisories/GHSA-wr3c-6c22-m9v6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wr3c-6c22-m9v6",
            "title": "[typo3/neos] Privilege Escalation in TYPO3 Neos",
            "date_modified": "2024-06-05T17:28:06.000Z",
            "date_published": "2024-06-05T17:28:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wr3c-6c22-m9v6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-11-23.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-11-23.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-002.html\">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4542-p56h-8xww\">https://github.com/advisories/GHSA-4542-p56h-8xww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4542-p56h-8xww",
            "title": "[typo3/neos] Cross-Site Scripting (XSS) vulnerabilities in Neos",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4542-p56h-8xww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If you had used entity security and wanted to secure entities not just based on the user's role, but on some property of the user (like the company he belongs to), entity security did not work properly together with the doctrine query cache. This could lead to other users re-using SQL queries from the cache which were built for other users; and thus users could see entities which were not destined for them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html\">https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6j-wv25-8qxr\">https://github.com/advisories/GHSA-vh6j-wv25-8qxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr",
            "title": "[typo3/flow] Flow Bugfix Releases for Entity Security",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-11-23.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/neos/2015-11-23.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/neos-sa-2015-002.html\">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4542-p56h-8xww\">https://github.com/advisories/GHSA-4542-p56h-8xww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4542-p56h-8xww",
            "title": "[typo3/neos] Cross-Site Scripting (XSS) vulnerabilities in Neos",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4542-p56h-8xww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If you had used entity security and wanted to secure entities not just based on the user's role, but on some property of the user (like the company he belongs to), entity security did not work properly together with the doctrine query cache. This could lead to other users re-using SQL queries from the cache which were built for other users; and thus users could see entities which were not destined for them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html\">https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6j-wv25-8qxr\">https://github.com/advisories/GHSA-vh6j-wv25-8qxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr",
            "title": "[typo3/flow] Flow Bugfix Releases for Entity Security",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If you had used entity security and wanted to secure entities not just based on the user's role, but on some property of the user (like the company he belongs to), entity security did not work properly together with the doctrine query cache. This could lead to other users re-using SQL queries from the cache which were built for other users; and thus users could see entities which were not destined for them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html\">https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6j-wv25-8qxr\">https://github.com/advisories/GHSA-vh6j-wv25-8qxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr",
            "title": "[typo3/flow] Flow Bugfix Releases for Entity Security",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If you had used entity security and wanted to secure entities not just based on the user's role, but on some property of the user (like the company he belongs to), entity security did not work properly together with the doctrine query cache. This could lead to other users re-using SQL queries from the cache which were built for other users; and thus users could see entities which were not destined for them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html\">https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6j-wv25-8qxr\">https://github.com/advisories/GHSA-vh6j-wv25-8qxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr",
            "title": "[typo3/flow] Flow Bugfix Releases for Entity Security",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>If you had used entity security and wanted to secure entities not just based on the user's role, but on some property of the user (like the company he belongs to), entity security did not work properly together with the doctrine query cache. This could lead to other users re-using SQL queries from the cache which were built for other users; and thus users could see entities which were not destined for them.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/flow/2017-04-12.yaml</a></li>\n<li><a href=\"https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html\">https://www.neos.io/blog/flow-bugfix-releases-for-entity-security.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vh6j-wv25-8qxr\">https://github.com/advisories/GHSA-vh6j-wv25-8qxr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr",
            "title": "[typo3/flow] Flow Bugfix Releases for Entity Security",
            "date_modified": "2024-06-05T17:24:57.000Z",
            "date_published": "2024-06-05T17:24:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vh6j-wv25-8qxr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Failing to properly encode information from external sources, language pack handling in the install tool is vulnerable to cross-site scripting.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-01-22-8.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-01-22-8.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2019-004\">https://typo3.org/security/advisory/typo3-core-sa-2019-004</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-259v-xm34-p7fr\">https://github.com/advisories/GHSA-259v-xm34-p7fr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-259v-xm34-p7fr",
            "title": "[typo3/cms] Typo3 Cross-Site Scripting in Language Pack Handling",
            "date_modified": "2024-06-05T17:23:20.000Z",
            "date_published": "2024-06-05T17:23:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-259v-xm34-p7fr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered that the Import/Export module is susceptible to broken access control. Regular backend users have access to import functionality which usually only is available to admin users or users having User TSconfig setting options.impexp.enableImportForNonAdminUser explicitly enabled.</p>\n<p>Database content to be imported however was correctly checked against users’ permissions and not affected. However it was possible to upload files by-passing restrictions of the file abstraction layer (FAL) - however this did not affect executable files which have been correctly secured by fileDenyPattern.</p>\n<p>Currently the only known vulnerability is to directly inject *.form.yaml files which could be used to trigger the vulnerability of TYPO3-CORE-SA-2018-003 (privilege escalation &amp; SQL injection) - which requires the Form Framework (ext:form) being available on an according website. CVSSv3 scoring is based on this scenario.</p>\n<p>A valid backend user account is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-06-25-7.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-06-25-7.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2019-017\">https://typo3.org/security/advisory/typo3-core-sa-2019-017</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5rr-9r84-wwqf\">https://github.com/advisories/GHSA-f5rr-9r84-wwqf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5rr-9r84-wwqf",
            "title": "[typo3/cms] Typo3 Broken Access Control in Import Module",
            "date_modified": "2024-06-05T17:22:53.000Z",
            "date_published": "2024-06-05T17:22:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5rr-9r84-wwqf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It has been discovered backend users not having read access to specific pages still could see them in the page tree which actually should be disallowed. A valid backend user account is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-05-07-4.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-05-07-4.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2019-009\">https://typo3.org/security/advisory/typo3-core-sa-2019-009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h934-f4m4-wc8x\">https://github.com/advisories/GHSA-h934-f4m4-wc8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h934-f4m4-wc8x",
            "title": "[typo3/cms] Typo3 Information Disclosure in Page Tree",
            "date_modified": "2024-06-05T17:21:20.000Z",
            "date_published": "2024-06-05T17:21:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h934-f4m4-wc8x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Backend API configuration using Page TSconfig is vulnerable to arbitrary code execution and cross-site scripting. TSconfig fields of page properties in backend forms can be used to inject malicious sequences. Field tsconfig_includes is vulnerable to directory traversal leading to same scenarios as having direct access to TSconfig settings.</p>\n<p>A valid backend user account having access to modify values for fields pages.TSconfig and pages.tsconfig_includes is needed in order to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-06-25-4.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2019-06-25-4.yaml</a></li>\n<li><a href=\"https://typo3.org/security/advisory/typo3-core-sa-2019-019\">https://typo3.org/security/advisory/typo3-core-sa-2019-019</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hww5-6x85-mc24\">https://github.com/advisories/GHSA-hww5-6x85-mc24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hww5-6x85-mc24",
            "title": "[typo3/cms] Typo3 Arbitrary Code Execution and Cross-Site Scripting in Backend API",
            "date_modified": "2024-06-05T17:19:27.000Z",
            "date_published": "2024-06-05T17:19:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hww5-6x85-mc24"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}