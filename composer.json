{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>A Server Side Request Forgery (SSRF) vulnerability in elFinder before 2.1.49 could allow a malicious user to access the content of internal network resources. This occurs in <code>get_remote_contents()</code> in <code>php/elFinder.class.php</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-6257\">https://nvd.nist.gov/vuln/detail/CVE-2019-6257</a></li>\n<li><a href=\"https://github.com/Studio-42/elFinder/commit/2f522db8f037a66ce9040ee0b216aa4a0359286c\">https://github.com/Studio-42/elFinder/commit/2f522db8f037a66ce9040ee0b216aa4a0359286c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-6257.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-6257.yaml</a></li>\n<li><a href=\"https://github.com/Studio-42/elFinder/blob/2.1.49/Changelog\">https://github.com/Studio-42/elFinder/blob/2.1.49/Changelog</a></li>\n<li><a href=\"https://github.com/Studio-42/elFinder/releases/tag/2.1.49\">https://github.com/Studio-42/elFinder/releases/tag/2.1.49</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3qhm-qfj3-4rrx\">https://github.com/advisories/GHSA-3qhm-qfj3-4rrx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3qhm-qfj3-4rrx",
            "title": "[studio-42/elfinder] elFinder Server Side Request Forgery (SSRF)",
            "date_modified": "2024-02-06T18:00:03.000Z",
            "date_published": "2022-05-13T01:06:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3qhm-qfj3-4rrx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SilverStripe through 4.4.x before 4.4.5 and 4.5.x before 4.5.2 allows Reflected XSS on the login form and custom forms. Silverstripe Forms allow malicious HTML or JavaScript to be inserted through non-scalar FormField attributes, which allows performing XSS (Cross-Site Scripting) on some forms built with user input (Request data). This can lead to phishing attempts to obtain a user&amp;#39;s credentials or other sensitive user input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19325\">https://nvd.nist.gov/vuln/detail/CVE-2019-19325</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89\">https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2019-19325\">https://www.silverstripe.org/download/security-releases/cve-2019-19325</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2019-19325/\">https://www.silverstripe.org/download/security-releases/cve-2019-19325/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvrv-2x7x-78x2\">https://github.com/advisories/GHSA-qvrv-2x7x-78x2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvrv-2x7x-78x2",
            "title": "[silverstripe/framework] Reflected XSS in SilverStripe",
            "date_modified": "2024-02-06T17:33:38.000Z",
            "date_published": "2020-02-24T17:33:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvrv-2x7x-78x2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SilverStripe through 4.4.x before 4.4.5 and 4.5.x before 4.5.2 allows Reflected XSS on the login form and custom forms. Silverstripe Forms allow malicious HTML or JavaScript to be inserted through non-scalar FormField attributes, which allows performing XSS (Cross-Site Scripting) on some forms built with user input (Request data). This can lead to phishing attempts to obtain a user&amp;#39;s credentials or other sensitive user input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-19325\">https://nvd.nist.gov/vuln/detail/CVE-2019-19325</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89\">https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2019-19325\">https://www.silverstripe.org/download/security-releases/cve-2019-19325</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/cve-2019-19325/\">https://www.silverstripe.org/download/security-releases/cve-2019-19325/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qvrv-2x7x-78x2\">https://github.com/advisories/GHSA-qvrv-2x7x-78x2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qvrv-2x7x-78x2",
            "title": "[silverstripe/framework] Reflected XSS in SilverStripe",
            "date_modified": "2024-02-06T17:33:38.000Z",
            "date_published": "2020-02-24T17:33:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qvrv-2x7x-78x2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Default SilverStripe GraphQL Server (aka silverstripe/graphql) 3.x through 3.4.1 permission checker not inherited by query subclass.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28661\">https://nvd.nist.gov/vuln/detail/CVE-2021-28661</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-graphql/pull/407/commits/16961459f681f7b32145296189dfdbcc7715e6ed\">https://github.com/silverstripe/silverstripe-graphql/pull/407/commits/16961459f681f7b32145296189dfdbcc7715e6ed</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-graphql/releases\">https://github.com/silverstripe/silverstripe-graphql/releases</a></li>\n<li><a href=\"https://github.com/silverstripe/silverstripe-graphql/releases/tag/3.5.2\">https://github.com/silverstripe/silverstripe-graphql/releases/tag/3.5.2</a></li>\n<li><a href=\"https://www.silverstripe.org/download/security-releases/CVE-2021-28661\">https://www.silverstripe.org/download/security-releases/CVE-2021-28661</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/graphql/CVE-2021-28661.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/graphql/CVE-2021-28661.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r7rh-g777-g5gx\">https://github.com/advisories/GHSA-r7rh-g777-g5gx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r7rh-g777-g5gx",
            "title": "[silverstripe/graphql] SilverStripe GraphQL Server permission checker not inherited by query subclass.",
            "date_modified": "2024-02-06T17:19:17.000Z",
            "date_published": "2021-10-12T18:49:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r7rh-g777-g5gx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19789\">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>\n<li><a href=\"https://seclists.org/bugtraq/2019/May/21\">https://seclists.org/bugtraq/2019/May/21</a></li>\n<li><a href=\"https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path\">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>\n<li><a href=\"https://www.debian.org/security/2019/dsa-4441\">https://www.debian.org/security/2019/dsa-4441</a></li>\n<li><a href=\"https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249\">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c\">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2018-19789\">https://symfony.com/cve-2018-19789</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x3cf-w64x-4cp2\">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2",
            "title": "[symfony/form] Symfony Path Disclosure",
            "date_modified": "2024-02-06T17:18:09.000Z",
            "date_published": "2022-05-14T01:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x3cf-w64x-4cp2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/symfony] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/symfony] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/symfony] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/framework-bundle] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/framework-bundle] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"description\">Description</h2>\n<p>The Symfony form component provides a CSRF protection mechanism by using a random token injected in the form and using the session to store and control the token submitted by the user.\nWhen using the FrameworkBundle, this protection can be enabled or disabled with the configuration. If the configuration is not specified, by default, the mechanism is enabled as long as the session is enabled.</p>\n<p>In a recent change in the way the configuration is loaded, the default behavior has been dropped and, as a result, the CSRF protection is not enabled in form when not explicitly enabled, which makes the application sensible to CSRF attacks.</p>\n<h2 id=\"resolution\">Resolution</h2>\n<p>Symfony restored the default configuration to enable the CSRF protection by default.</p>\n<p>The patch for this issue is available <a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">here</a> for branch 5.3.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>We would like to thank Catalin Dan and David Lochner for reporting the issue and Jérémy Derussé for fixing the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx\">https://github.com/symfony/symfony/security/advisories/GHSA-vvmr-8829-6whx</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50\">https://github.com/symfony/symfony/commit/f0ffb775febdf07e57117aabadac96fa37857f50</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23601\">https://nvd.nist.gov/vuln/detail/CVE-2022-23601</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2022-23601.yaml</a></li>\n<li><a href=\"https://symfony.com/cve-2022-23601\">https://symfony.com/cve-2022-23601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvmr-8829-6whx\">https://github.com/advisories/GHSA-vvmr-8829-6whx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx",
            "title": "[symfony/framework-bundle] CSRF token missing in Symfony",
            "date_modified": "2024-02-06T17:09:00.000Z",
            "date_published": "2022-02-01T00:46:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvmr-8829-6whx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the internal routes configuration is enabled, allows remote attackers to access arbitrary services via vectors involving a URI beginning with a <code>/_internal</code> substring.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6432\">https://nvd.nist.gov/vuln/detail/CVE-2012-6432</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml</a></li>\n<li><a href=\"https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89cp-fvcc-hxh7\">https://github.com/advisories/GHSA-89cp-fvcc-hxh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7",
            "title": "[symfony/symfony] Symfony Access Control Vulnerability",
            "date_modified": "2024-02-06T16:02:11.000Z",
            "date_published": "2022-05-17T05:17:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Symfony 2.0.x before 2.0.20, 2.1.x before 2.1.5, and 2.2-dev, when the internal routes configuration is enabled, allows remote attackers to access arbitrary services via vectors involving a URI beginning with a <code>/_internal</code> substring.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6432\">https://nvd.nist.gov/vuln/detail/CVE-2012-6432</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6432.yaml</a></li>\n<li><a href=\"https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-89cp-fvcc-hxh7\">https://github.com/advisories/GHSA-89cp-fvcc-hxh7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7",
            "title": "[symfony/symfony] Symfony Access Control Vulnerability",
            "date_modified": "2024-02-06T16:02:11.000Z",
            "date_published": "2022-05-17T05:17:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-89cp-fvcc-hxh7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>On the Symfony 2.0.x version, there's a security issue that allows access to routes protected by a firewall even when the user is not logged in.</p>\n<p>Both the Routing component and the Security component uses the path returned by <code>getPathInfo()</code> to match a Request. The <code>getPathInfo()</code> returns a decoded path, but the Routing component (<code>Symfony\\Component\\Routing\\Matcher\\UrlMatcher</code>) decodes the path a second time; whereas the Security component, <code>Symfony\\Component\\HttpFoundation\\RequestMatcher</code>, does not.</p>\n<p>This difference causes Symfony 2.0 to be vulnerable to double encoding attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6431\">https://nvd.nist.gov/vuln/detail/CVE-2012-6431</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/55014a6841bec50046e8329a4835c160ac31a496\">https://github.com/symfony/symfony/commit/55014a6841bec50046e8329a4835c160ac31a496</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/8b2c17f80377582287a78e0b521497e039dd6b0d\">https://github.com/symfony/symfony/commit/8b2c17f80377582287a78e0b521497e039dd6b0d</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/routing/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/routing/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-83c3-qx27-2rwr\">https://github.com/advisories/GHSA-83c3-qx27-2rwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr",
            "title": "[symfony/symfony] Symfony Allows URI Restrictions Bypass Via Double-Encoded String",
            "date_modified": "2024-02-06T16:01:44.000Z",
            "date_published": "2022-05-17T05:17:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>On the Symfony 2.0.x version, there's a security issue that allows access to routes protected by a firewall even when the user is not logged in.</p>\n<p>Both the Routing component and the Security component uses the path returned by <code>getPathInfo()</code> to match a Request. The <code>getPathInfo()</code> returns a decoded path, but the Routing component (<code>Symfony\\Component\\Routing\\Matcher\\UrlMatcher</code>) decodes the path a second time; whereas the Security component, <code>Symfony\\Component\\HttpFoundation\\RequestMatcher</code>, does not.</p>\n<p>This difference causes Symfony 2.0 to be vulnerable to double encoding attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-6431\">https://nvd.nist.gov/vuln/detail/CVE-2012-6431</a></li>\n<li><a href=\"http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">http://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/55014a6841bec50046e8329a4835c160ac31a496\">https://github.com/symfony/symfony/commit/55014a6841bec50046e8329a4835c160ac31a496</a></li>\n<li><a href=\"https://github.com/symfony/symfony/commit/8b2c17f80377582287a78e0b521497e039dd6b0d\">https://github.com/symfony/symfony/commit/8b2c17f80377582287a78e0b521497e039dd6b0d</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/http-foundation/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/routing/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/routing/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/security/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2012-6431.yaml</a></li>\n<li><a href=\"https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released\">https://symfony.com/blog/security-release-symfony-2-0-20-and-2-1-5-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-83c3-qx27-2rwr\">https://github.com/advisories/GHSA-83c3-qx27-2rwr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr",
            "title": "[symfony/security] Symfony Allows URI Restrictions Bypass Via Double-Encoded String",
            "date_modified": "2024-02-06T16:01:44.000Z",
            "date_published": "2022-05-17T05:17:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-83c3-qx27-2rwr"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}