{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>If an issue references a note that belongs to another issue that the user doesn't have access to, then it gets hyperlinked. Clicking on the link gives an access denied error as expected, yet some information remains available via the link, link label, and tooltip.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Disclosure of the following information:</p>\n<ul>\n<li>existence of the note</li>\n<li>note author name</li>\n<li>note creation timestamp</li>\n<li>issue id the note belongs to</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>See PR <a href=\"https://github.com/mantisbt/mantisbt/pull/2000\">https://github.com/mantisbt/mantisbt/pull/2000</a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://mantisbt.org/bugs/view.php?id=34434\">https://mantisbt.org/bugs/view.php?id=34434</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mantisbt/mantisbt/security/advisories/GHSA-99jc-wqmr-ff2q\">https://github.com/mantisbt/mantisbt/security/advisories/GHSA-99jc-wqmr-ff2q</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/pull/2000\">https://github.com/mantisbt/mantisbt/pull/2000</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/0a50562369d823689c9b946066d1e49d3c2df226\">https://github.com/mantisbt/mantisbt/commit/0a50562369d823689c9b946066d1e49d3c2df226</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=34434\">https://mantisbt.org/bugs/view.php?id=34434</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99jc-wqmr-ff2q\">https://github.com/advisories/GHSA-99jc-wqmr-ff2q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99jc-wqmr-ff2q",
            "title": "[mantisbt/mantisbt] MantisBT Vulnerable to Exposure of Sensitive Information to an Unauthorized Actor",
            "date_modified": "2024-05-13T14:57:37.000Z",
            "date_published": "2024-05-13T14:57:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99jc-wqmr-ff2q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Insufficient access control in the registration and password reset process allows an attacker to reset another user's password and takeover their account, if the victim has an incomplete request pending.</p>\n<p>The exploit is only possible while the verification token is valid, i.e for 5 minutes after the confirmation URL sent by e-mail has been opened, and the user did not complete the process by updating their password.</p>\n<p>A brute-force attack calling account_update.php with increasing user IDs is possible. </p>\n<h3 id=\"impact\">Impact</h3>\n<p>A successful takeover would grant the attacker full access to the compromised account, including sensitive information and functionalities associated with the account, the extent of which depends on its privileges and the data it has access to.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>92d11a01b195a1b6717a2f205218089158ea6d00</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Mitigate the risk by reducing the verification token's validity (change the value of the <code>TOKEN_EXPIRY_AUTHENTICATED</code> constant in <em>constants_inc.php</em>).</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://mantisbt.org/bugs/view.php?id=34433\">https://mantisbt.org/bugs/view.php?id=34433</a></p>\n<h3 id=\"credits\">Credits</h3>\n<p>Alexander Christian, from Vantage Point Security Indonesia</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mantisbt/mantisbt/security/advisories/GHSA-93x3-m7pw-ppqm\">https://github.com/mantisbt/mantisbt/security/advisories/GHSA-93x3-m7pw-ppqm</a></li>\n<li><a href=\"https://github.com/mantisbt/mantisbt/commit/92d11a01b195a1b6717a2f205218089158ea6d00\">https://github.com/mantisbt/mantisbt/commit/92d11a01b195a1b6717a2f205218089158ea6d00</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=34433\">https://mantisbt.org/bugs/view.php?id=34433</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93x3-m7pw-ppqm\">https://github.com/advisories/GHSA-93x3-m7pw-ppqm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93x3-m7pw-ppqm",
            "title": "[mantisbt/mantisbt] Mantis Bug Tracker (MantisBT) allows user account takeover in the signup/reset password process",
            "date_modified": "2024-05-13T14:57:15.000Z",
            "date_published": "2024-05-13T14:57:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93x3-m7pw-ppqm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>phpecc, as used in <strong>all versions</strong> of mdanter/ecc, as well as paragonie/ecc before 2.0.1, has a branch-based timing leak in Point addition. (This Composer package is also known as phpecc/phpecc on GitHub, previously known as the Matyas Danter ECC library.)</p>\n<p>Paragon Initiative Enterprises <a href=\"https://github.com/phpecc/phpecc/issues/289\">hard-forked phpecc/phpecc</a> and discovered the issue in the original code, then released v2.0.1 which fixes the vulnerability. <a href=\"https://github.com/phpecc/phpecc\">The upstream code</a> is no longer maintained and remains vulnerable for all versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33851\">https://nvd.nist.gov/vuln/detail/CVE-2024-33851</a></li>\n<li><a href=\"https://github.com/paragonie/phpecc/releases/tag/v2.0.1\">https://github.com/paragonie/phpecc/releases/tag/v2.0.1</a></li>\n<li><a href=\"https://github.com/phpecc/phpecc/issues/289\">https://github.com/phpecc/phpecc/issues/289</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/mdanter/ecc/CVE-2024-33851.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/mdanter/ecc/CVE-2024-33851.yaml</a></li>\n<li><a href=\"https://github.com/paragonie/phpecc/releases/tag/v2.0.0\">https://github.com/paragonie/phpecc/releases/tag/v2.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3494-cfwf-56hw\">https://github.com/advisories/GHSA-3494-cfwf-56hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3494-cfwf-56hw",
            "title": "[mdanter/ecc] mdanter/ecc affected by timing vulnerability in cryptographic side-channels",
            "date_modified": "2024-05-10T22:01:50.000Z",
            "date_published": "2024-04-28T00:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3494-cfwf-56hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>phpecc, as used in <strong>all versions</strong> of mdanter/ecc, as well as paragonie/ecc before 2.0.1, has a branch-based timing leak in Point addition. (This Composer package is also known as phpecc/phpecc on GitHub, previously known as the Matyas Danter ECC library.)</p>\n<p>Paragon Initiative Enterprises <a href=\"https://github.com/phpecc/phpecc/issues/289\">hard-forked phpecc/phpecc</a> and discovered the issue in the original code, then released v2.0.1 which fixes the vulnerability. <a href=\"https://github.com/phpecc/phpecc\">The upstream code</a> is no longer maintained and remains vulnerable for all versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-33851\">https://nvd.nist.gov/vuln/detail/CVE-2024-33851</a></li>\n<li><a href=\"https://github.com/paragonie/phpecc/releases/tag/v2.0.1\">https://github.com/paragonie/phpecc/releases/tag/v2.0.1</a></li>\n<li><a href=\"https://github.com/phpecc/phpecc/issues/289\">https://github.com/phpecc/phpecc/issues/289</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/mdanter/ecc/CVE-2024-33851.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/mdanter/ecc/CVE-2024-33851.yaml</a></li>\n<li><a href=\"https://github.com/paragonie/phpecc/releases/tag/v2.0.0\">https://github.com/paragonie/phpecc/releases/tag/v2.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3494-cfwf-56hw\">https://github.com/advisories/GHSA-3494-cfwf-56hw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3494-cfwf-56hw",
            "title": "[paragonie/ecc] mdanter/ecc affected by timing vulnerability in cryptographic side-channels",
            "date_modified": "2024-05-10T22:01:50.000Z",
            "date_published": "2024-04-28T00:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3494-cfwf-56hw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a possibility to save XSS code in province field in the Checkout and Address Book and then execute it on these pages. The problem occurs when you open the address step page in the checkout or edit the address in the address book. This only affects the base UI Shop provided by Sylius.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.16, 1.13.1 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Create new file <code>assets/shop/sylius-province-field.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/shop/sylius-province-field.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\nconst getProvinceInputValue = function getProvinceInputValue(valueSelector) {\n  return valueSelector == undefined ? '' : `value=\"${sanitizeInput(valueSelector)}\"`;\n};\n\n$.fn.extend({\n  provinceField() {\n    const countrySelect = $('select[name$=\"[countryCode]\"]');\n\n    countrySelect.on('change', (event) =&gt; {\n      const select = $(event.currentTarget);\n      const provinceContainer = select.parents('.field').next('div.province-container');\n\n      const provinceSelectFieldName = select.attr('name').replace('country', 'province');\n      const provinceInputFieldName = select.attr('name').replace('countryCode', 'provinceName');\n\n      const provinceSelectFieldId = select.attr('id').replace('country', 'province');\n      const provinceInputFieldId = select.attr('id').replace('countryCode', 'provinceName');\n\n      const form = select.parents('form');\n\n      if (select.val() === '' || select.val() == undefined) {\n        provinceContainer.fadeOut('slow', () =&gt; {\n          provinceContainer.html('');\n        });\n\n        return;\n      }\n\n      provinceContainer.attr('data-loading', true);\n      form.addClass('loading');\n\n      $.get(provinceContainer.attr('data-url'), { countryCode: select.val() }, (response) =&gt; {\n        if (!response.content) {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            provinceContainer.html('');\n\n            provinceContainer.removeAttr('data-loading');\n            form.removeClass('loading');\n          });\n        } else if (response.content.indexOf('select') !== -1) {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            const provinceSelectValue = getProvinceInputValue((\n              $(provinceContainer).find('select &gt; option[selected$=\"selected\"]').val()\n            ));\n\n            provinceContainer.html((\n              response.content\n                .replace('name=\"sylius_address_province\"', `name=\"${provinceSelectFieldName}\"${provinceSelectValue}`)\n                .replace('id=\"sylius_address_province\"', `id=\"${provinceSelectFieldId}\"`)\n                .replace('option value=\"\" selected=\"selected\"', 'option value=\"\"')\n                .replace(`option ${provinceSelectValue}`, `option ${provinceSelectValue}\" selected=\"selected\"`)\n            ));\n            provinceContainer.addClass('required');\n            provinceContainer.removeAttr('data-loading');\n\n            provinceContainer.fadeIn('fast', () =&gt; {\n              form.removeClass('loading');\n            });\n          });\n        } else {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            const provinceInputValue = getProvinceInputValue($(provinceContainer).find('input').val());\n\n            provinceContainer.html((\n              response.content\n                .replace('name=\"sylius_address_province\"', `name=\"${provinceInputFieldName}\"${provinceInputValue}`)\n                .replace('id=\"sylius_address_province\"', `id=\"${provinceInputFieldId}\"`)\n            ));\n\n            provinceContainer.removeAttr('data-loading');\n\n            provinceContainer.fadeIn('fast', () =&gt; {\n              form.removeClass('loading');\n            });\n          });\n        }\n      });\n    });\n\n    if (countrySelect.val() !== '') {\n      countrySelect.trigger('change');\n    }\n\n    if ($.trim($('div.province-container').text()) === '') {\n      $('select.country-select').trigger('change');\n    }\n\n    const shippingAddressCheckbox = $('input[type=\"checkbox\"][name$=\"[differentShippingAddress]\"]');\n    const shippingAddressContainer = $('#sylius-shipping-address-container');\n    const toggleShippingAddress = function toggleShippingAddress() {\n      shippingAddressContainer.toggle(shippingAddressCheckbox.prop('checked'));\n    };\n    toggleShippingAddress();\n    shippingAddressCheckbox.on('change', toggleShippingAddress);\n  },\n});\n</code></pre>\n<ol start=\"2\">\n<li>Add new import in <code>assets/shop/entry.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/shop/entry.js\n// ...\nimport './sylius-province-field';\n</code></pre>\n<ol start=\"3\">\n<li>Rebuild your assets:</li>\n</ol>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This security issue has been reported by @r2tunes, thank you!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>The original advisory: <a href=\"https://github.com/advisories/GHSA-mw82-6m2g-qh6c\">https://github.com/advisories/GHSA-mw82-6m2g-qh6c</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-7prj-9ccr-hr3q\">https://github.com/Sylius/Sylius/security/advisories/GHSA-7prj-9ccr-hr3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29376\">https://nvd.nist.gov/vuln/detail/CVE-2024-29376</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/fb0ecb275747e364f1d4744ed8605c57f9bd8a80\">https://github.com/Sylius/Sylius/commit/fb0ecb275747e364f1d4744ed8605c57f9bd8a80</a></li>\n<li><a href=\"https://github.com/r2tunes/Reports/blob/main/Sylius.md\">https://github.com/r2tunes/Reports/blob/main/Sylius.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7prj-9ccr-hr3q\">https://github.com/advisories/GHSA-7prj-9ccr-hr3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7prj-9ccr-hr3q",
            "title": "[sylius/sylius] Sylius has potential Cross Site Scripting vulnerability via the \"Province\" field in the Checkout and Address Book",
            "date_modified": "2024-05-10T15:33:23.000Z",
            "date_published": "2024-05-10T15:33:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7prj-9ccr-hr3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a possibility to save XSS code in province field in the Checkout and Address Book and then execute it on these pages. The problem occurs when you open the address step page in the checkout or edit the address in the address book. This only affects the base UI Shop provided by Sylius.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.16, 1.13.1 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Create new file <code>assets/shop/sylius-province-field.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/shop/sylius-province-field.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\nconst getProvinceInputValue = function getProvinceInputValue(valueSelector) {\n  return valueSelector == undefined ? '' : `value=\"${sanitizeInput(valueSelector)}\"`;\n};\n\n$.fn.extend({\n  provinceField() {\n    const countrySelect = $('select[name$=\"[countryCode]\"]');\n\n    countrySelect.on('change', (event) =&gt; {\n      const select = $(event.currentTarget);\n      const provinceContainer = select.parents('.field').next('div.province-container');\n\n      const provinceSelectFieldName = select.attr('name').replace('country', 'province');\n      const provinceInputFieldName = select.attr('name').replace('countryCode', 'provinceName');\n\n      const provinceSelectFieldId = select.attr('id').replace('country', 'province');\n      const provinceInputFieldId = select.attr('id').replace('countryCode', 'provinceName');\n\n      const form = select.parents('form');\n\n      if (select.val() === '' || select.val() == undefined) {\n        provinceContainer.fadeOut('slow', () =&gt; {\n          provinceContainer.html('');\n        });\n\n        return;\n      }\n\n      provinceContainer.attr('data-loading', true);\n      form.addClass('loading');\n\n      $.get(provinceContainer.attr('data-url'), { countryCode: select.val() }, (response) =&gt; {\n        if (!response.content) {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            provinceContainer.html('');\n\n            provinceContainer.removeAttr('data-loading');\n            form.removeClass('loading');\n          });\n        } else if (response.content.indexOf('select') !== -1) {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            const provinceSelectValue = getProvinceInputValue((\n              $(provinceContainer).find('select &gt; option[selected$=\"selected\"]').val()\n            ));\n\n            provinceContainer.html((\n              response.content\n                .replace('name=\"sylius_address_province\"', `name=\"${provinceSelectFieldName}\"${provinceSelectValue}`)\n                .replace('id=\"sylius_address_province\"', `id=\"${provinceSelectFieldId}\"`)\n                .replace('option value=\"\" selected=\"selected\"', 'option value=\"\"')\n                .replace(`option ${provinceSelectValue}`, `option ${provinceSelectValue}\" selected=\"selected\"`)\n            ));\n            provinceContainer.addClass('required');\n            provinceContainer.removeAttr('data-loading');\n\n            provinceContainer.fadeIn('fast', () =&gt; {\n              form.removeClass('loading');\n            });\n          });\n        } else {\n          provinceContainer.fadeOut('slow', () =&gt; {\n            const provinceInputValue = getProvinceInputValue($(provinceContainer).find('input').val());\n\n            provinceContainer.html((\n              response.content\n                .replace('name=\"sylius_address_province\"', `name=\"${provinceInputFieldName}\"${provinceInputValue}`)\n                .replace('id=\"sylius_address_province\"', `id=\"${provinceInputFieldId}\"`)\n            ));\n\n            provinceContainer.removeAttr('data-loading');\n\n            provinceContainer.fadeIn('fast', () =&gt; {\n              form.removeClass('loading');\n            });\n          });\n        }\n      });\n    });\n\n    if (countrySelect.val() !== '') {\n      countrySelect.trigger('change');\n    }\n\n    if ($.trim($('div.province-container').text()) === '') {\n      $('select.country-select').trigger('change');\n    }\n\n    const shippingAddressCheckbox = $('input[type=\"checkbox\"][name$=\"[differentShippingAddress]\"]');\n    const shippingAddressContainer = $('#sylius-shipping-address-container');\n    const toggleShippingAddress = function toggleShippingAddress() {\n      shippingAddressContainer.toggle(shippingAddressCheckbox.prop('checked'));\n    };\n    toggleShippingAddress();\n    shippingAddressCheckbox.on('change', toggleShippingAddress);\n  },\n});\n</code></pre>\n<ol start=\"2\">\n<li>Add new import in <code>assets/shop/entry.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/shop/entry.js\n// ...\nimport './sylius-province-field';\n</code></pre>\n<ol start=\"3\">\n<li>Rebuild your assets:</li>\n</ol>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This security issue has been reported by @r2tunes, thank you!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>The original advisory: <a href=\"https://github.com/advisories/GHSA-mw82-6m2g-qh6c\">https://github.com/advisories/GHSA-mw82-6m2g-qh6c</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-7prj-9ccr-hr3q\">https://github.com/Sylius/Sylius/security/advisories/GHSA-7prj-9ccr-hr3q</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29376\">https://nvd.nist.gov/vuln/detail/CVE-2024-29376</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/fb0ecb275747e364f1d4744ed8605c57f9bd8a80\">https://github.com/Sylius/Sylius/commit/fb0ecb275747e364f1d4744ed8605c57f9bd8a80</a></li>\n<li><a href=\"https://github.com/r2tunes/Reports/blob/main/Sylius.md\">https://github.com/r2tunes/Reports/blob/main/Sylius.md</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7prj-9ccr-hr3q\">https://github.com/advisories/GHSA-7prj-9ccr-hr3q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7prj-9ccr-hr3q",
            "title": "[sylius/sylius] Sylius has potential Cross Site Scripting vulnerability via the \"Province\" field in the Checkout and Address Book",
            "date_modified": "2024-05-10T15:33:23.000Z",
            "date_published": "2024-05-10T15:33:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7prj-9ccr-hr3q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a possibility to execute javascript code in the Admin panel. In order to perform an XSS attack input a script into <code>Name</code> field in which of the resources: Taxons, Products, Product Options or Product Variants. The code will be executed while using an autocomplete field with one of the listed entities in the Admin Panel. Also for the taxons in the category tree on the product form. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.16, 1.13.1 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Create new file <code>assets/admin/sylius-lazy-choice-tree.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-lazy-choice-tree.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\nconst createRootContainer = function createRootContainer() {\n  return $('&lt;div class=\"ui list\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafContainerElement = function createLeafContainerElement() {\n  return $('&lt;div class=\"list\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafIconElement = function createLeafIconElement() {\n  return $('&lt;i class=\"folder icon\"&gt;&lt;/i&gt;');\n};\n\nconst createLeafTitleElement = function createLeafTitleElement() {\n  return $('&lt;div class=\"header\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafTitleSpan = function createLeafTitleSpan(displayName) {\n  return $(`&lt;span style=\"margin-right: 5px; cursor: pointer;\"&gt;${displayName}&lt;/span&gt;`);\n};\n\nconst createLeafContentElement = function createLeafContentElement() {\n  return $('&lt;div class=\"content\"&gt;&lt;/div&gt;');\n};\n\n$.fn.extend({\n  choiceTree(type, multiple, defaultLevel) {\n    const tree = this;\n    const loader = tree.find('.dimmer');\n    const loadedLeafs = [];\n    const $input = tree.find('input[type=\"hidden\"]');\n\n    const createCheckboxElement = function createCheckboxElement(name, code, multi) {\n      const chosenNodes = $input.val().split(',');\n      let checked = '';\n      if (chosenNodes.some(chosenCode =&gt; chosenCode === code)) {\n        checked = 'checked=\"checked\"';\n      }\n      if (multi) {\n        return $(`&lt;div class=\"ui checkbox\" data-value=\"${code}\"&gt;&lt;input ${checked} type=\"checkbox\" name=\"${type}\"&gt;&lt;/div&gt;`);\n      }\n\n      return $(`&lt;div class=\"ui radio checkbox\" data-value=\"${code}\"&gt;&lt;input ${checked} type=\"radio\" name=\"${type}\"&gt;&lt;/div&gt;`);\n    };\n\n    const isLeafLoaded = function isLeafLoaded(code) {\n      return loadedLeafs.some(leafCode =&gt; leafCode === code);\n    };\n\n    let createLeafFunc;\n\n    const loadLeafAction = function loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement) {\n      icon.toggleClass('open');\n\n      if (!isLeafLoaded(parentCode)) {\n        expandButton.api({\n          on: 'now',\n          url: tree.data('tree-leafs-url') || tree.data('taxon-leafs-url'),\n          method: 'GET',\n          cache: false,\n          data: {\n            parentCode,\n          },\n          beforeSend(settings) {\n            loader.addClass('active');\n\n            return settings;\n          },\n          onSuccess(response) {\n            response.forEach((leafNode) =&gt; {\n              leafContainerElement.append((\n                createLeafFunc(sanitizeInput(leafNode.name), leafNode.code, leafNode.hasChildren, multiple, leafNode.level)\n              ));\n            });\n            content.append(leafContainerElement);\n            loader.removeClass('active');\n            loadedLeafs.push(parentCode);\n\n            leafContainerElement.toggle();\n          },\n        });\n      }\n\n      leafContainerElement.toggle();\n    };\n\n    const bindExpandLeafAction = function bindExpandLeafAction(parentCode, expandButton, content, icon, level) {\n      const leafContainerElement = createLeafContainerElement();\n      if (defaultLevel &gt; level) {\n        loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement);\n      }\n\n      expandButton.click(() =&gt; {\n        loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement);\n      });\n    };\n\n    const bindCheckboxAction = function bindCheckboxAction(checkboxElement) {\n      checkboxElement.checkbox({\n        onChecked() {\n          const { value } = checkboxElement[0].dataset;\n          const checkedValues = $input.val().split(',').filter(Boolean);\n          checkedValues.push(value);\n          $input.val(checkedValues.join());\n        },\n        onUnchecked() {\n          const { value } = checkboxElement[0].dataset;\n          const checkedValues = $input.val().split(',').filter(Boolean);\n          const i = checkedValues.indexOf(value);\n          if (i !== -1) {\n            checkedValues.splice(i, 1);\n          }\n          $input.val(checkedValues.join());\n        },\n      });\n    };\n\n    const createLeaf = function createLeaf(name, code, hasChildren, multipleChoice, level) {\n      const displayNameElement = createLeafTitleSpan(name);\n      const titleElement = createLeafTitleElement();\n      const iconElement = createLeafIconElement();\n      const checkboxElement = createCheckboxElement(name, code, multipleChoice);\n\n      bindCheckboxAction(checkboxElement);\n\n      const leafElement = $('&lt;div class=\"item\"&gt;&lt;/div&gt;');\n      const leafContentElement = createLeafContentElement();\n\n      leafElement.append(iconElement);\n      titleElement.append(displayNameElement);\n      titleElement.append(checkboxElement);\n      leafContentElement.append(titleElement);\n\n      if (!hasChildren) {\n        iconElement.addClass('outline');\n      }\n      if (hasChildren) {\n        bindExpandLeafAction(code, displayNameElement, leafContentElement, iconElement, level);\n      }\n      leafElement.append(leafContentElement);\n\n      return leafElement;\n    };\n    createLeafFunc = createLeaf;\n\n    tree.api({\n      on: 'now',\n      method: 'GET',\n      url: tree.data('tree-root-nodes-url') || tree.data('taxon-root-nodes-url'),\n      cache: false,\n      beforeSend(settings) {\n        loader.addClass('active');\n\n        return settings;\n      },\n      onSuccess(response) {\n        const rootContainer = createRootContainer();\n        response.forEach((rootNode) =&gt; {\n          rootContainer.append((\n            createLeaf(sanitizeInput(rootNode.name), rootNode.code, rootNode.hasChildren, multiple, rootNode.level)\n          ));\n        });\n        tree.append(rootContainer);\n        loader.removeClass('active');\n      },\n    });\n  },\n});\n</code></pre>\n<ol start=\"2\">\n<li>Create new file <code>assets/admin/sylius-auto-complete.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-auto-complete.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\n$.fn.extend({\n  autoComplete() {\n    this.each((idx, el) =&gt; {\n      const element = $(el);\n      const criteriaName = element.data('criteria-name');\n      const choiceName = element.data('choice-name');\n      const choiceValue = element.data('choice-value');\n      const autocompleteValue = element.find('input.autocomplete').val();\n      const loadForEditUrl = element.data('load-edit-url');\n\n      element.dropdown({\n        delay: {\n          search: 250,\n        },\n        forceSelection: false,\n        saveRemoteData: false,\n        verbose: true,\n        apiSettings: {\n          dataType: 'JSON',\n          cache: false,\n          beforeSend(settings) {\n            /* eslint-disable-next-line no-param-reassign */\n            settings.data[criteriaName] = settings.urlData.query;\n\n            return settings;\n          },\n          onResponse(response) {\n            let results = response.map(item =&gt; ({\n              name: sanitizeInput(item[choiceName]),\n              value: sanitizeInput(item[choiceValue]),\n            }));\n\n            if (!element.hasClass('multiple')) {\n              results.unshift({\n                name: '&amp;nbsp;',\n                value: '',\n              });\n            }\n\n            return {\n              success: true,\n              results: results,\n            };\n          },\n        },\n      });\n\n      if (autocompleteValue.split(',').filter(String).length &gt; 0) {\n        const menuElement = element.find('div.menu');\n\n        menuElement.api({\n          on: 'now',\n          method: 'GET',\n          url: loadForEditUrl,\n          beforeSend(settings) {\n            /* eslint-disable-next-line no-param-reassign */\n            settings.data[choiceValue] = autocompleteValue.split(',').filter(String);\n\n            return settings;\n          },\n          onSuccess(response) {\n            response.forEach((item) =&gt; {\n              menuElement.append((\n                $(`&lt;div class=\"item\" data-value=\"${item[choiceValue]}\"&gt;${item[choiceName]}&lt;/div&gt;`)\n              ));\n            });\n\n            element.dropdown('refresh');\n            element.dropdown('set selected', element.find('input.autocomplete').val().split(',').filter(String));\n          },\n        });\n      }\n    });\n  },\n});\n</code></pre>\n<ol start=\"3\">\n<li>Create new file <code>assets/admin/sylius-product-auto-complete.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-product-auto-complete.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\n$.fn.extend({\n  productAutoComplete() {\n    this.each((index, element) =&gt; {\n      const $element = $(element);\n      $element.dropdown('set selected', $element.find('input[name*=\"[associations]\"]').val().split(',').filter(String));\n    });\n\n    this.dropdown({\n      delay: {\n        search: 250,\n      },\n      forceSelection: false,\n      apiSettings: {\n        dataType: 'JSON',\n        cache: false,\n        data: {\n          criteria: { search: { type: 'contains', value: '' } },\n        },\n        beforeSend(settings) {\n          /* eslint-disable-next-line no-param-reassign */\n          settings.data.criteria.search.value = settings.urlData.query;\n\n          return settings;\n        },\n        onResponse(response) {\n          return {\n            success: true,\n            results: response._embedded.items.map(item =&gt; ({\n              name: sanitizeInput(item.name),\n              value: sanitizeInput(item.code),\n            })),\n          };\n        },\n      },\n      onAdd(addedValue, addedText, $addedChoice) {\n        const inputAssociation = $addedChoice.parents('.product-select').find('input[name*=\"[associations]\"]');\n        const associatedProductCodes = inputAssociation.val().length &gt; 0 ? inputAssociation.val().split(',').filter(String) : [];\n\n        associatedProductCodes.push(addedValue);\n        $.unique(associatedProductCodes.sort());\n\n        inputAssociation.attr('value', associatedProductCodes.join());\n      },\n      onRemove(removedValue, removedText, $removedChoice) {\n        const inputAssociation = $removedChoice.parents('.product-select').find('input[name*=\"[associations]\"]');\n        const associatedProductCodes = inputAssociation.val().length &gt; 0 ? inputAssociation.val().split(',').filter(String) : [];\n\n        associatedProductCodes.splice($.inArray(removedValue, associatedProductCodes), 1);\n\n        inputAssociation.attr('value', associatedProductCodes.join());\n      },\n    });\n  },\n});\n</code></pre>\n<ol start=\"4\">\n<li>Add new import in <code>assets/admin/entry.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/entry.js\n// ...\nimport './sylius-lazy-choice-tree';\nimport './sylius-auto-complete';\nimport './sylius-product-auto-complete';\n</code></pre>\n<ol start=\"5\">\n<li>Rebuild your assets:</li>\n</ol>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This security issue has been reported by <a href=\"https://checkmarx.com\">Checkmarx Research Group</a>, thank you!</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r\">https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12\">https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v2f9-rv6w-vw8r\">https://github.com/advisories/GHSA-v2f9-rv6w-vw8r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v2f9-rv6w-vw8r",
            "title": "[sylius/sylius] Sylius potentially vulnerable to Cross Site Scripting via \"Name\" field (Taxons, Products, Options, Variants) in Admin Panel",
            "date_modified": "2024-05-10T15:33:03.000Z",
            "date_published": "2024-05-10T15:33:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v2f9-rv6w-vw8r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>There is a possibility to execute javascript code in the Admin panel. In order to perform an XSS attack input a script into <code>Name</code> field in which of the resources: Taxons, Products, Product Options or Product Variants. The code will be executed while using an autocomplete field with one of the listed entities in the Admin Panel. Also for the taxons in the category tree on the product form. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in versions: 1.12.16, 1.13.1 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<ol>\n<li>Create new file <code>assets/admin/sylius-lazy-choice-tree.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-lazy-choice-tree.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\nconst createRootContainer = function createRootContainer() {\n  return $('&lt;div class=\"ui list\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafContainerElement = function createLeafContainerElement() {\n  return $('&lt;div class=\"list\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafIconElement = function createLeafIconElement() {\n  return $('&lt;i class=\"folder icon\"&gt;&lt;/i&gt;');\n};\n\nconst createLeafTitleElement = function createLeafTitleElement() {\n  return $('&lt;div class=\"header\"&gt;&lt;/div&gt;');\n};\n\nconst createLeafTitleSpan = function createLeafTitleSpan(displayName) {\n  return $(`&lt;span style=\"margin-right: 5px; cursor: pointer;\"&gt;${displayName}&lt;/span&gt;`);\n};\n\nconst createLeafContentElement = function createLeafContentElement() {\n  return $('&lt;div class=\"content\"&gt;&lt;/div&gt;');\n};\n\n$.fn.extend({\n  choiceTree(type, multiple, defaultLevel) {\n    const tree = this;\n    const loader = tree.find('.dimmer');\n    const loadedLeafs = [];\n    const $input = tree.find('input[type=\"hidden\"]');\n\n    const createCheckboxElement = function createCheckboxElement(name, code, multi) {\n      const chosenNodes = $input.val().split(',');\n      let checked = '';\n      if (chosenNodes.some(chosenCode =&gt; chosenCode === code)) {\n        checked = 'checked=\"checked\"';\n      }\n      if (multi) {\n        return $(`&lt;div class=\"ui checkbox\" data-value=\"${code}\"&gt;&lt;input ${checked} type=\"checkbox\" name=\"${type}\"&gt;&lt;/div&gt;`);\n      }\n\n      return $(`&lt;div class=\"ui radio checkbox\" data-value=\"${code}\"&gt;&lt;input ${checked} type=\"radio\" name=\"${type}\"&gt;&lt;/div&gt;`);\n    };\n\n    const isLeafLoaded = function isLeafLoaded(code) {\n      return loadedLeafs.some(leafCode =&gt; leafCode === code);\n    };\n\n    let createLeafFunc;\n\n    const loadLeafAction = function loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement) {\n      icon.toggleClass('open');\n\n      if (!isLeafLoaded(parentCode)) {\n        expandButton.api({\n          on: 'now',\n          url: tree.data('tree-leafs-url') || tree.data('taxon-leafs-url'),\n          method: 'GET',\n          cache: false,\n          data: {\n            parentCode,\n          },\n          beforeSend(settings) {\n            loader.addClass('active');\n\n            return settings;\n          },\n          onSuccess(response) {\n            response.forEach((leafNode) =&gt; {\n              leafContainerElement.append((\n                createLeafFunc(sanitizeInput(leafNode.name), leafNode.code, leafNode.hasChildren, multiple, leafNode.level)\n              ));\n            });\n            content.append(leafContainerElement);\n            loader.removeClass('active');\n            loadedLeafs.push(parentCode);\n\n            leafContainerElement.toggle();\n          },\n        });\n      }\n\n      leafContainerElement.toggle();\n    };\n\n    const bindExpandLeafAction = function bindExpandLeafAction(parentCode, expandButton, content, icon, level) {\n      const leafContainerElement = createLeafContainerElement();\n      if (defaultLevel &gt; level) {\n        loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement);\n      }\n\n      expandButton.click(() =&gt; {\n        loadLeafAction(parentCode, expandButton, content, icon, leafContainerElement);\n      });\n    };\n\n    const bindCheckboxAction = function bindCheckboxAction(checkboxElement) {\n      checkboxElement.checkbox({\n        onChecked() {\n          const { value } = checkboxElement[0].dataset;\n          const checkedValues = $input.val().split(',').filter(Boolean);\n          checkedValues.push(value);\n          $input.val(checkedValues.join());\n        },\n        onUnchecked() {\n          const { value } = checkboxElement[0].dataset;\n          const checkedValues = $input.val().split(',').filter(Boolean);\n          const i = checkedValues.indexOf(value);\n          if (i !== -1) {\n            checkedValues.splice(i, 1);\n          }\n          $input.val(checkedValues.join());\n        },\n      });\n    };\n\n    const createLeaf = function createLeaf(name, code, hasChildren, multipleChoice, level) {\n      const displayNameElement = createLeafTitleSpan(name);\n      const titleElement = createLeafTitleElement();\n      const iconElement = createLeafIconElement();\n      const checkboxElement = createCheckboxElement(name, code, multipleChoice);\n\n      bindCheckboxAction(checkboxElement);\n\n      const leafElement = $('&lt;div class=\"item\"&gt;&lt;/div&gt;');\n      const leafContentElement = createLeafContentElement();\n\n      leafElement.append(iconElement);\n      titleElement.append(displayNameElement);\n      titleElement.append(checkboxElement);\n      leafContentElement.append(titleElement);\n\n      if (!hasChildren) {\n        iconElement.addClass('outline');\n      }\n      if (hasChildren) {\n        bindExpandLeafAction(code, displayNameElement, leafContentElement, iconElement, level);\n      }\n      leafElement.append(leafContentElement);\n\n      return leafElement;\n    };\n    createLeafFunc = createLeaf;\n\n    tree.api({\n      on: 'now',\n      method: 'GET',\n      url: tree.data('tree-root-nodes-url') || tree.data('taxon-root-nodes-url'),\n      cache: false,\n      beforeSend(settings) {\n        loader.addClass('active');\n\n        return settings;\n      },\n      onSuccess(response) {\n        const rootContainer = createRootContainer();\n        response.forEach((rootNode) =&gt; {\n          rootContainer.append((\n            createLeaf(sanitizeInput(rootNode.name), rootNode.code, rootNode.hasChildren, multiple, rootNode.level)\n          ));\n        });\n        tree.append(rootContainer);\n        loader.removeClass('active');\n      },\n    });\n  },\n});\n</code></pre>\n<ol start=\"2\">\n<li>Create new file <code>assets/admin/sylius-auto-complete.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-auto-complete.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\n$.fn.extend({\n  autoComplete() {\n    this.each((idx, el) =&gt; {\n      const element = $(el);\n      const criteriaName = element.data('criteria-name');\n      const choiceName = element.data('choice-name');\n      const choiceValue = element.data('choice-value');\n      const autocompleteValue = element.find('input.autocomplete').val();\n      const loadForEditUrl = element.data('load-edit-url');\n\n      element.dropdown({\n        delay: {\n          search: 250,\n        },\n        forceSelection: false,\n        saveRemoteData: false,\n        verbose: true,\n        apiSettings: {\n          dataType: 'JSON',\n          cache: false,\n          beforeSend(settings) {\n            /* eslint-disable-next-line no-param-reassign */\n            settings.data[criteriaName] = settings.urlData.query;\n\n            return settings;\n          },\n          onResponse(response) {\n            let results = response.map(item =&gt; ({\n              name: sanitizeInput(item[choiceName]),\n              value: sanitizeInput(item[choiceValue]),\n            }));\n\n            if (!element.hasClass('multiple')) {\n              results.unshift({\n                name: '&amp;nbsp;',\n                value: '',\n              });\n            }\n\n            return {\n              success: true,\n              results: results,\n            };\n          },\n        },\n      });\n\n      if (autocompleteValue.split(',').filter(String).length &gt; 0) {\n        const menuElement = element.find('div.menu');\n\n        menuElement.api({\n          on: 'now',\n          method: 'GET',\n          url: loadForEditUrl,\n          beforeSend(settings) {\n            /* eslint-disable-next-line no-param-reassign */\n            settings.data[choiceValue] = autocompleteValue.split(',').filter(String);\n\n            return settings;\n          },\n          onSuccess(response) {\n            response.forEach((item) =&gt; {\n              menuElement.append((\n                $(`&lt;div class=\"item\" data-value=\"${item[choiceValue]}\"&gt;${item[choiceName]}&lt;/div&gt;`)\n              ));\n            });\n\n            element.dropdown('refresh');\n            element.dropdown('set selected', element.find('input.autocomplete').val().split(',').filter(String));\n          },\n        });\n      }\n    });\n  },\n});\n</code></pre>\n<ol start=\"3\">\n<li>Create new file <code>assets/admin/sylius-product-auto-complete.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/sylius-product-auto-complete.js\n\nfunction sanitizeInput(input) {\n  const div = document.createElement('div');\n  div.textContent = input;\n  return div.innerHTML; // Converts text content to plain HTML, stripping any scripts\n}\n\n$.fn.extend({\n  productAutoComplete() {\n    this.each((index, element) =&gt; {\n      const $element = $(element);\n      $element.dropdown('set selected', $element.find('input[name*=\"[associations]\"]').val().split(',').filter(String));\n    });\n\n    this.dropdown({\n      delay: {\n        search: 250,\n      },\n      forceSelection: false,\n      apiSettings: {\n        dataType: 'JSON',\n        cache: false,\n        data: {\n          criteria: { search: { type: 'contains', value: '' } },\n        },\n        beforeSend(settings) {\n          /* eslint-disable-next-line no-param-reassign */\n          settings.data.criteria.search.value = settings.urlData.query;\n\n          return settings;\n        },\n        onResponse(response) {\n          return {\n            success: true,\n            results: response._embedded.items.map(item =&gt; ({\n              name: sanitizeInput(item.name),\n              value: sanitizeInput(item.code),\n            })),\n          };\n        },\n      },\n      onAdd(addedValue, addedText, $addedChoice) {\n        const inputAssociation = $addedChoice.parents('.product-select').find('input[name*=\"[associations]\"]');\n        const associatedProductCodes = inputAssociation.val().length &gt; 0 ? inputAssociation.val().split(',').filter(String) : [];\n\n        associatedProductCodes.push(addedValue);\n        $.unique(associatedProductCodes.sort());\n\n        inputAssociation.attr('value', associatedProductCodes.join());\n      },\n      onRemove(removedValue, removedText, $removedChoice) {\n        const inputAssociation = $removedChoice.parents('.product-select').find('input[name*=\"[associations]\"]');\n        const associatedProductCodes = inputAssociation.val().length &gt; 0 ? inputAssociation.val().split(',').filter(String) : [];\n\n        associatedProductCodes.splice($.inArray(removedValue, associatedProductCodes), 1);\n\n        inputAssociation.attr('value', associatedProductCodes.join());\n      },\n    });\n  },\n});\n</code></pre>\n<ol start=\"4\">\n<li>Add new import in <code>assets/admin/entry.js</code>:</li>\n</ol>\n<pre><code class=\"language-js\">// assets/admin/entry.js\n// ...\nimport './sylius-lazy-choice-tree';\nimport './sylius-auto-complete';\nimport './sylius-product-auto-complete';\n</code></pre>\n<ol start=\"5\">\n<li>Rebuild your assets:</li>\n</ol>\n<pre><code class=\"language-bash\">yarn build\n</code></pre>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>This security issue has been reported by <a href=\"https://checkmarx.com\">Checkmarx Research Group</a>, thank you!</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/Sylius/Sylius/issues\">Sylius issues</a></li>\n<li>Email us at <a href=\"mailto:security@sylius.com\">security@sylius.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r\">https://github.com/Sylius/Sylius/security/advisories/GHSA-v2f9-rv6w-vw8r</a></li>\n<li><a href=\"https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12\">https://github.com/Sylius/Sylius/commit/ba4b66da5af88cdb1bba6174de8bdf42f4853e12</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v2f9-rv6w-vw8r\">https://github.com/advisories/GHSA-v2f9-rv6w-vw8r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v2f9-rv6w-vw8r",
            "title": "[sylius/sylius] Sylius potentially vulnerable to Cross Site Scripting via \"Name\" field (Taxons, Products, Options, Variants) in Admin Panel",
            "date_modified": "2024-05-10T15:33:03.000Z",
            "date_published": "2024-05-10T15:33:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v2f9-rv6w-vw8r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>A Stored Blind Cross-Site Scripting (XSS) vulnerability has been identified in the Failed Login Attempts Logging Feature of the Froxlor Application. Stored Blind XSS occurs when user input is not properly sanitized and is stored on the server, allowing an attacker to inject malicious scripts that will be executed when other users access the affected page. In this case, an unauthenticated User can inject malicious scripts in the loginname parameter on the Login attempt, which will then be executed when viewed by the Administrator in the System Logs.</p>\n<p>The application protects users against XSS attacks by utilizing an xss sanitization library. But the checks of the library were bypassed by crafting an XSS Payload using data binding and interpolation of Vue.js</p>\n<p>A working XSS payload was crafted which forces an administrator to add a new malicious attacker-controlled Administrator User. The Payload is:\n<a href=\"https://github.com/froxlor/Froxlor/files/15142616/payload.txt\">payload.txt</a></p>\n<p>By exploiting this vulnerability, an unauthenticated attacker can force the Administrator to perform actions without the administrator even noticing anything suspicious. In one scenario, I made an exploit that forced the administrator to add an attacker-controlled Administrator into the Froxlor Application, resulting in a compromise of the Froxlor Application.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>The impact of this vulnerability is severe as it allows an attacker to compromise the Froxlor Application. By exploiting this vulnerability, the attacker can perform various malicious actions such as forcing the Administrator to execute actions without their knowledge or consent. For instance, the attacker can force the Administrator to add a new administrator controlled by the attacker, thereby giving the attacker full control over the application.</p>\n<p>Attackers can steal sensitive information such as login credentials, session tokens, and personally identifiable information (PII).</p>\n<p>The vulnerability can lead to defacement of the Application.</p>\n<h3 id=\"mitigation\">Mitigation:</h3>\n<p>Implement thorough input validation and sanitization mechanisms on all user inputs. This will help prevent malicious scripts from being stored and executed. sanitize {{ and }} to prevent data binding and interpolation of Vue.js.\nSanitize malicious Javascript functions. Etc.</p>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce:</h3>\n<p><strong>Attacker Steps:</strong></p>\n<ol>\n<li>Provide an invalid username in Login.</li>\n<li>Turn on intercept in Burp Suite.</li>\n<li>In the intercepted request, add the following XSS payload as the value of loginname parameter (Copy from below file):\n<a href=\"https://github.com/froxlor/Froxlor/files/15142616/payload.txt\">payload.txt</a></li>\n<li>Turn off the intercept.</li>\n</ol>\n<p><strong>Victim Steps:</strong>\n5. Login as admin.\n6. Go to System Logs, XSS payload will be executed and a popup will appear showing that the Application has been compromised.</p>\n<p><strong>Attacker Step:</strong>\n7. Back at the Attacker's side, log in to the newly created attacker-controlled admin account having all the privileges. The credentials will be username: <code>abcd</code> &amp; Password: <code>abcd@@1234</code></p>\n<h3 id=\"evidence\">Evidence:</h3>\n<p><img alt=\"image\" src=\"https://github.com/froxlor/Froxlor/assets/59286712/31cf0cb8-b0e4-46d0-a6b8-a0e22fda64b8\">\n<em>Figure 1: Code of Logging Invalid login attempts</em></p>\n<p><img alt=\"image\" src=\"https://github.com/froxlor/Froxlor/assets/59286712/6acef52a-d5ba-477d-b502-a7fe27fd5085\">\n<em>Figure 2: Code of saving Logs.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/froxlor/Froxlor/assets/59286712/2adf8ae5-66be-4e22-938b-c9e5dcb764c0\">\n<em>Figure 3: Attacker injecting XSS payload.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/froxlor/Froxlor/assets/59286712/d3ccf6f9-2a23-40a4-97fc-e9585553ac52\">\n<em>Figure 4: XSS payload Executed.</em></p>\n<p><img alt=\"image\" src=\"https://github.com/froxlor/Froxlor/assets/59286712/3c7f24f6-4049-49d3-978b-d83800fe8a80\">\n<em>Figure 5: XSS payload Reflection.</em></p>\n<h3 id=\"video-poc\">Video POC</h3>\n<p><a href=\"https://github.com/froxlor/Froxlor/assets/59286712/7ba7d3e7-9ee9-4e64-988c-33fd4ebbca27\">https://github.com/froxlor/Froxlor/assets/59286712/7ba7d3e7-9ee9-4e64-988c-33fd4ebbca27</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/froxlor/Froxlor/security/advisories/GHSA-x525-54hf-xr53\">https://github.com/froxlor/Froxlor/security/advisories/GHSA-x525-54hf-xr53</a></li>\n<li><a href=\"https://github.com/froxlor/Froxlor/commit/a862307bce5cdfb1c208b835f3e8faddd23046e6\">https://github.com/froxlor/Froxlor/commit/a862307bce5cdfb1c208b835f3e8faddd23046e6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x525-54hf-xr53\">https://github.com/advisories/GHSA-x525-54hf-xr53</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x525-54hf-xr53",
            "title": "[froxlor/froxlor] Blind XSS Leading to Froxlor Application Compromise",
            "date_modified": "2024-05-10T15:30:00.000Z",
            "date_published": "2024-05-10T15:29:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x525-54hf-xr53"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. When processing the ASN.1 object identifier of a certificate, a sub identifier may be provided that leads to a denial of service (CPU consumption for decodeOID).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-27355\">https://nvd.nist.gov/vuln/detail/CVE-2024-27355</a></li>\n<li><a href=\"https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b\">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>\n<li><a href=\"https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129\">https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129</a></li>\n<li><a href=\"https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59\">https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2024/03/msg00002.html\">https://lists.debian.org/debian-lts-announce/2024/03/msg00002.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2024/03/msg00003.html\">https://lists.debian.org/debian-lts-announce/2024/03/msg00003.html</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/phpseclib/phpseclib/CVE-2024-27355.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/phpseclib/phpseclib/CVE-2024-27355.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jr22-8qgm-4q87\">https://github.com/advisories/GHSA-jr22-8qgm-4q87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jr22-8qgm-4q87",
            "title": "[phpseclib/phpseclib] phpseclib does not properly limit the ASN1 OID length",
            "date_modified": "2024-05-10T14:29:20.000Z",
            "date_published": "2024-03-02T00:31:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jr22-8qgm-4q87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The TineMCE Bundle uses tinymce version 6.7.3. CVEs for this version exists for &lt;6.8.1:\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29203\">https://nvd.nist.gov/vuln/detail/CVE-2024-29203</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29881\">https://nvd.nist.gov/vuln/detail/CVE-2024-29881</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The package should be updated to at least 6.8.1 to avoid XSS vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade pimcore to release 11.2.3 or 11.1.6.5.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29203\">https://nvd.nist.gov/vuln/detail/CVE-2024-29203</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29881\">https://nvd.nist.gov/vuln/detail/CVE-2024-29881</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pimcore/pimcore/security/advisories/GHSA-vjwg-28gv-pm8h\">https://github.com/pimcore/pimcore/security/advisories/GHSA-vjwg-28gv-pm8h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vjwg-28gv-pm8h\">https://github.com/advisories/GHSA-vjwg-28gv-pm8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vjwg-28gv-pm8h",
            "title": "[pimcore/pimcore] Pimcore TinyMCE Bundle - tinymce CVE-2024-29203, CVE-2024-29881",
            "date_modified": "2024-05-08T14:01:03.000Z",
            "date_published": "2024-04-24T17:02:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vjwg-28gv-pm8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The TineMCE Bundle uses tinymce version 6.7.3. CVEs for this version exists for &lt;6.8.1:\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29203\">https://nvd.nist.gov/vuln/detail/CVE-2024-29203</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29881\">https://nvd.nist.gov/vuln/detail/CVE-2024-29881</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>The package should be updated to at least 6.8.1 to avoid XSS vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade pimcore to release 11.2.3 or 11.1.6.5.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29203\">https://nvd.nist.gov/vuln/detail/CVE-2024-29203</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29881\">https://nvd.nist.gov/vuln/detail/CVE-2024-29881</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pimcore/pimcore/security/advisories/GHSA-vjwg-28gv-pm8h\">https://github.com/pimcore/pimcore/security/advisories/GHSA-vjwg-28gv-pm8h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vjwg-28gv-pm8h\">https://github.com/advisories/GHSA-vjwg-28gv-pm8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vjwg-28gv-pm8h",
            "title": "[pimcore/pimcore] Pimcore TinyMCE Bundle - tinymce CVE-2024-29203, CVE-2024-29881",
            "date_modified": "2024-05-08T14:01:03.000Z",
            "date_published": "2024-04-24T17:02:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vjwg-28gv-pm8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in Kimai up to 2.15.0 and classified as problematic. Affected by this issue is some unknown functionality of the component Session Handler. The manipulation of the argument PHPSESSIONID leads to information disclosure. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. Upgrading to version 2.16.0 is able to address this issue. It is recommended to upgrade the affected component. VDB-263318 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-4596\">https://nvd.nist.gov/vuln/detail/CVE-2024-4596</a></li>\n<li><a href=\"https://github.com/kimai/kimai/releases/tag/2.16.0\">https://github.com/kimai/kimai/releases/tag/2.16.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.263318\">https://vuldb.com/?ctiid.263318</a></li>\n<li><a href=\"https://vuldb.com/?id.263318\">https://vuldb.com/?id.263318</a></li>\n<li><a href=\"https://vuldb.com/?submit.328639\">https://vuldb.com/?submit.328639</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6f3v-2r2j-2rpr\">https://github.com/advisories/GHSA-6f3v-2r2j-2rpr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6f3v-2r2j-2rpr",
            "title": "[kimai/kimai] Kimai information disclosure vulnerability",
            "date_modified": "2024-05-07T19:59:33.000Z",
            "date_published": "2024-05-07T18:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6f3v-2r2j-2rpr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in MantisBT before 2.24.3. Improper escaping of a custom field's name allows an attacker to inject HTML and, if CSP settings permit, achieve execution of arbitrary JavaScript when attempting to update said custom field via <code>bug_actiongroup_page.php</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-25830\">https://nvd.nist.gov/vuln/detail/CVE-2020-25830</a></li>\n<li><a href=\"https://mantisbt.org/bugs/view.php?id=27304\">https://mantisbt.org/bugs/view.php?id=27304</a></li>\n<li><a href=\"http://github.com/mantisbt/mantisbt/commit/8c6f4d8859785b67fb80ac65100ac5259ed9237d\">http://github.com/mantisbt/mantisbt/commit/8c6f4d8859785b67fb80ac65100ac5259ed9237d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2pm7-q8pc-xhvq\">https://github.com/advisories/GHSA-2pm7-q8pc-xhvq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2pm7-q8pc-xhvq",
            "title": "[mantisbt/mantisbt] MantisBT HTML Injection vulnerability",
            "date_modified": "2024-05-07T16:27:01.000Z",
            "date_published": "2022-05-24T17:29:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2pm7-q8pc-xhvq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Zenario before 9.5.60437 uses Twig filters insecurely in the Twig Snippet plugin, and in the site-wide HEAD and BODY elements, enabling code execution by a designer or an administrator.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34461\">https://nvd.nist.gov/vuln/detail/CVE-2024-34461</a></li>\n<li><a href=\"https://zenar.io/zenario-9/blog/zenario-9560437-patch-released\">https://zenar.io/zenario-9/blog/zenario-9560437-patch-released</a></li>\n<li><a href=\"https://github.com/TribalSystems/Zenario/commit/72afb59da34bace812bffb195d01168a357ff664\">https://github.com/TribalSystems/Zenario/commit/72afb59da34bace812bffb195d01168a357ff664</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr2r-w6wc-25pv\">https://github.com/advisories/GHSA-hr2r-w6wc-25pv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr2r-w6wc-25pv",
            "title": "[tribalsystems/zenario] Zenario uses Twig filters insecurely in the Twig Snippet plugin",
            "date_modified": "2024-05-06T14:24:09.000Z",
            "date_published": "2024-05-04T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr2r-w6wc-25pv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Tree Explorer tool from Organizer in Zenario before 9.5.60602 is affected by XSS. (This component was removed in 9.5.60602.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34460\">https://nvd.nist.gov/vuln/detail/CVE-2024-34460</a></li>\n<li><a href=\"https://zenar.io/zenario-9/blog/zenario-9560602-patch-released\">https://zenar.io/zenario-9/blog/zenario-9560602-patch-released</a></li>\n<li><a href=\"https://github.com/TribalSystems/Zenario/commit/121ff6dc6c1c13e8281f078ecde47455b383ee78\">https://github.com/TribalSystems/Zenario/commit/121ff6dc6c1c13e8281f078ecde47455b383ee78</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7qwj-gcjf-828f\">https://github.com/advisories/GHSA-7qwj-gcjf-828f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7qwj-gcjf-828f",
            "title": "[tribalsystems/zenario] Zenario's Tree Explorer tool from Organizer affected by Cross-site Scripting",
            "date_modified": "2024-05-06T14:22:22.000Z",
            "date_published": "2024-05-04T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7qwj-gcjf-828f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The secureCompare method in lib/SimpleSAML/Utils/Crypto.php in SimpleSAMLphp 1.14.13 and earlier, when used with PHP before 5.6, allows attackers to conduct session fixation attacks or possibly bypass authentication by leveraging missing character conversions before an XOR operation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-12868\">https://nvd.nist.gov/vuln/detail/CVE-2017-12868</a></li>\n<li><a href=\"https://github.com/simplesamlphp/simplesamlphp/commit/4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e\">https://github.com/simplesamlphp/simplesamlphp/commit/4bc629658e7b7d17c9ac3fe0da7dc5df71f1b85e</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2017/12/msg00007.html\">https://lists.debian.org/debian-lts-announce/2017/12/msg00007.html</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2018/06/msg00017.html\">https://lists.debian.org/debian-lts-announce/2018/06/msg00017.html</a></li>\n<li><a href=\"https://simplesamlphp.org/security/201705-01\">https://simplesamlphp.org/security/201705-01</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12868.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/simplesamlphp/CVE-2017-12868.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j96g-47x2-46hv\">https://github.com/advisories/GHSA-j96g-47x2-46hv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j96g-47x2-46hv",
            "title": "[simplesamlphp/simplesamlphp] SimpleSAMLphp Session fixation issue and authentication bypass in the authcrypt module",
            "date_modified": "2024-05-05T05:02:21.000Z",
            "date_published": "2022-05-14T03:15:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j96g-47x2-46hv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Gleezcms Gleez Cms version 1.3.0 contains a Cross Site Scripting (XSS) vulnerability in Profile page that can result in injection of arbitrary web script or HTML via the profile page editor. The victim must navigate to the attacker's profile page to exploit this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1999021\">https://nvd.nist.gov/vuln/detail/CVE-2018-1999021</a></li>\n<li><a href=\"https://github.com/gleez/cms/issues/797\">https://github.com/gleez/cms/issues/797</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9g7-pff4-548r\">https://github.com/advisories/GHSA-q9g7-pff4-548r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9g7-pff4-548r",
            "title": "[gleez/cms] Gleez Cms Cross-site Scripting in Profile Page",
            "date_modified": "2024-05-05T05:02:12.000Z",
            "date_published": "2022-05-14T02:59:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9g7-pff4-548r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Dolibarr. A user can store an IFRAME element (containing a user/card.php CSRF request) in his Linked Files settings page. When visited by the admin, this could completely take over the admin account. (The protection mechanism for CSRF is to check the Referer header; however, because the attack is from one of the application's own settings pages, this mechanism is bypassed.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15062\">https://nvd.nist.gov/vuln/detail/CVE-2019-15062</a></li>\n<li><a href=\"https://github.com/Dolibarr/dolibarr/issues/11671\">https://github.com/Dolibarr/dolibarr/issues/11671</a></li>\n<li><a href=\"https://github.com/Dolibarr/dolibarr/commit/18eb2a83fe7c2d01bdb34cceec389a6f9541e1f6\">https://github.com/Dolibarr/dolibarr/commit/18eb2a83fe7c2d01bdb34cceec389a6f9541e1f6</a></li>\n<li><a href=\"https://github.com/Dolibarr/dolibarr/commit/d21e5571007d2052a6b5f80a67b6f4cac693584a\">https://github.com/Dolibarr/dolibarr/commit/d21e5571007d2052a6b5f80a67b6f4cac693584a</a></li>\n<li><a href=\"https://gauravnarwani.com/publications/CVE-2019-15062\">https://gauravnarwani.com/publications/CVE-2019-15062</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4qq9-qg7j-fcm9\">https://github.com/advisories/GHSA-4qq9-qg7j-fcm9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4qq9-qg7j-fcm9",
            "title": "[dolibarr/dolibarr] Dolibarr Cross-Site Request Forgery (CSRF) ",
            "date_modified": "2024-05-04T05:02:30.000Z",
            "date_published": "2022-05-24T16:53:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4qq9-qg7j-fcm9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The BackupDelete functionality in Grav CMS through 1.7.0-rc.17 allows an authenticated attacker to delete arbitrary files on the underlying server by exploiting a path-traversal technique. (This vulnerability can also be exploited by an unauthenticated attacker due to a lack of CSRF protection.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-29555\">https://nvd.nist.gov/vuln/detail/CVE-2020-29555</a></li>\n<li><a href=\"https://blog.bssi.fr/cve-2020-29553-cve-2020-29555-cve-2020-29556-multiple-vulnerabilities-within-cms-grav\">https://blog.bssi.fr/cve-2020-29553-cve-2020-29555-cve-2020-29556-multiple-vulnerabilities-within-cms-grav</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gpmf-q5jh-hjx4\">https://github.com/advisories/GHSA-gpmf-q5jh-hjx4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gpmf-q5jh-hjx4",
            "title": "[getgrav/grav] Grav CMS Arbitrary File Deletion",
            "date_modified": "2024-05-04T05:02:28.000Z",
            "date_published": "2022-05-24T17:44:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gpmf-q5jh-hjx4"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}