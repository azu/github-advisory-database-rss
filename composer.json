{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for PHP packages hosted at packagist.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/composer.json",
    "description": "Security Advisory for PHP packages hosted at packagist.org on GitHub",
    "items": [
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in the PHP League CommonMark library versions 0.15.6 through 0.18.x before 0.18.1 allows remote attackers to insert unsafe URLs into HTML (even if allow_unsafe_links is false) via a newline character (e.g., writing javascript as javascri%0apt).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-20583\">https://nvd.nist.gov/vuln/detail/CVE-2018-20583</a></li>\n<li><a href=\"https://github.com/thephpleague/commonmark/issues/337\">https://github.com/thephpleague/commonmark/issues/337</a></li>\n<li><a href=\"https://commonmark.thephpleague.com/changelog/\">https://commonmark.thephpleague.com/changelog/</a></li>\n<li><a href=\"https://github.com/thephpleague/commonmark/releases/tag/0.18.1\">https://github.com/thephpleague/commonmark/releases/tag/0.18.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qx76-c53f-5c7q\">https://github.com/advisories/GHSA-qx76-c53f-5c7q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qx76-c53f-5c7q",
            "title": "[league/commonmark] PHP League CommonMark vulnerable to Cross-Site Scripting (XSS)",
            "date_modified": "2022-09-12T15:59:44.000Z",
            "date_published": "2022-05-14T01:40:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qx76-c53f-5c7q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>admin/limits.php in Dolibarr 7.0.2 allows HTML injection, as demonstrated by the MAIN_MAX_DECIMALS_TOT parameter.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22293\">https://nvd.nist.gov/vuln/detail/CVE-2022-22293</a></li>\n<li><a href=\"https://github.com/mustgundogdu/Research/blob/main/Dolibar_7.0.2-StoredXSS/README.md\">https://github.com/mustgundogdu/Research/blob/main/Dolibar_7.0.2-StoredXSS/README.md</a></li>\n<li><a href=\"https://github.com/Dolibarr/dolibarr/issues/20237\">https://github.com/Dolibarr/dolibarr/issues/20237</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g5jm-xhwm-9xp9\">https://github.com/advisories/GHSA-g5jm-xhwm-9xp9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g5jm-xhwm-9xp9",
            "title": "[dolibarr/dolibarr] Cross site scripting in dolibarr",
            "date_modified": "2022-09-07T23:58:37.000Z",
            "date_published": "2022-01-03T00:00:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g5jm-xhwm-9xp9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>An attacker could steal an admin's cookie</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The issue is fixed in 5.0.2</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cwe.mitre.org/data/definitions/79.html\">Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/PrestaShop/productcomments/security/advisories/GHSA-prrh-qvhf-x788\">https://github.com/PrestaShop/productcomments/security/advisories/GHSA-prrh-qvhf-x788</a></li>\n<li><a href=\"https://github.com/PrestaShop/productcomments/commit/314456d739155aa71f0b235827e8e0f24b97c26b\">https://github.com/PrestaShop/productcomments/commit/314456d739155aa71f0b235827e8e0f24b97c26b</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35933\">https://nvd.nist.gov/vuln/detail/CVE-2022-35933</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-prrh-qvhf-x788\">https://github.com/advisories/GHSA-prrh-qvhf-x788</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-prrh-qvhf-x788",
            "title": "[prestashop/productcomments] Cross-site Scripting in prestashop/productcomments",
            "date_modified": "2022-09-08T14:06:56.000Z",
            "date_published": "2022-08-31T21:27:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-prrh-qvhf-x788"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Session Fixation in GitHub repository snipe/snipe-it prior to version 6.0.10. The session is not invalidated after a password change.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2997\">https://nvd.nist.gov/vuln/detail/CVE-2022-2997</a></li>\n<li><a href=\"https://github.com/snipe/snipe-it/commit/6fde72a69335c80079363b7d26aa94e7f67400e1\">https://github.com/snipe/snipe-it/commit/6fde72a69335c80079363b7d26aa94e7f67400e1</a></li>\n<li><a href=\"https://huntr.dev/bounties/c09bf21b-50d2-49f0-8c92-49f6b3c358d8\">https://huntr.dev/bounties/c09bf21b-50d2-49f0-8c92-49f6b3c358d8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cmxc-9ghj-jp87\">https://github.com/advisories/GHSA-cmxc-9ghj-jp87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cmxc-9ghj-jp87",
            "title": "[snipe/snipe-it] Insufficient Session Expiration in snipe/snipe-it ",
            "date_modified": "2022-09-08T14:09:26.000Z",
            "date_published": "2022-08-26T00:03:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cmxc-9ghj-jp87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"introduction\">Introduction</h3>\n<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>\n<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>\n<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>\n<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>\n<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>\n<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problems have been patched in <a href=\"https://github.com/getkirby/kirby/releases/tag/3.5.8.1\">Kirby 3.5.8.1</a>, <a href=\"https://github.com/getkirby/kirby/releases/tag/3.6.6.1\">Kirby 3.6.6.1</a> and <a href=\"https://github.com/getkirby/kirby/releases/tag/3.7.4\">Kirby 3.7.4</a>. Please update to one of these or a <a href=\"https://github.com/getkirby/kirby/releases\">later version</a> to fix the vulnerabilities.</p>\n<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76",
            "title": "[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields",
            "date_modified": "2022-08-30T20:53:04.000Z",
            "date_published": "2022-08-30T20:53:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"introduction\">Introduction</h3>\n<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>\n<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>\n<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>\n<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>\n<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>\n<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problems have been patched in <a href=\"https://github.com/getkirby/kirby/releases/tag/3.5.8.1\">Kirby 3.5.8.1</a>, <a href=\"https://github.com/getkirby/kirby/releases/tag/3.6.6.1\">Kirby 3.6.6.1</a> and <a href=\"https://github.com/getkirby/kirby/releases/tag/3.7.4\">Kirby 3.7.4</a>. Please update to one of these or a <a href=\"https://github.com/getkirby/kirby/releases\">later version</a> to fix the vulnerabilities.</p>\n<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76",
            "title": "[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields",
            "date_modified": "2022-08-30T20:53:04.000Z",
            "date_published": "2022-08-30T20:53:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"introduction\">Introduction</h3>\n<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>\n<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>\n<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>\n<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>\n<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>\n<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problems have been patched in <a href=\"https://github.com/getkirby/kirby/releases/tag/3.5.8.1\">Kirby 3.5.8.1</a>, <a href=\"https://github.com/getkirby/kirby/releases/tag/3.6.6.1\">Kirby 3.6.6.1</a> and <a href=\"https://github.com/getkirby/kirby/releases/tag/3.7.4\">Kirby 3.7.4</a>. Please update to one of these or a <a href=\"https://github.com/getkirby/kirby/releases\">later version</a> to fix the vulnerabilities.</p>\n<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rv3r-vqjj-8c76\">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76",
            "title": "[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields",
            "date_modified": "2022-08-30T20:53:04.000Z",
            "date_published": "2022-08-30T20:53:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rv3r-vqjj-8c76"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2885\">https://nvd.nist.gov/vuln/detail/CVE-2022-2885</a></li>\n<li><a href=\"https://github.com/yetiforcecompany/yetiforcecrm/commit/a9ad9ee089b575855b9e5e202b4990a15811e8d2\">https://github.com/yetiforcecompany/yetiforcecrm/commit/a9ad9ee089b575855b9e5e202b4990a15811e8d2</a></li>\n<li><a href=\"https://huntr.dev/bounties/edeed309-be07-4373-b15e-2d1eb415eb89\">https://huntr.dev/bounties/edeed309-be07-4373-b15e-2d1eb415eb89</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rjvc-mf7r-ch7r\">https://github.com/advisories/GHSA-rjvc-mf7r-ch7r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rjvc-mf7r-ch7r",
            "title": "[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm",
            "date_modified": "2022-08-30T20:50:33.000Z",
            "date_published": "2022-08-22T00:00:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rjvc-mf7r-ch7r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The AP officers account is authorized to Backup and Restore the Database, Due to this he/she can download the backup and see the password hash of the System Administrator account, The weak hash (MD5) of the password can be easily cracked and get the admin password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2921\">https://nvd.nist.gov/vuln/detail/CVE-2022-2921</a></li>\n<li><a href=\"https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45\">https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45</a></li>\n<li><a href=\"https://huntr.dev/bounties/51b32a1c-946b-4390-a212-b6c4b6e4115c\">https://huntr.dev/bounties/51b32a1c-946b-4390-a212-b6c4b6e4115c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-44w5-q257-8428\">https://github.com/advisories/GHSA-44w5-q257-8428</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-44w5-q257-8428",
            "title": "[notrinos/notrinos-erp] Exposure of password hashes in notrinos/notrinos-erp",
            "date_modified": "2022-08-30T20:50:33.000Z",
            "date_published": "2022-08-22T00:00:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-44w5-q257-8428"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1340\">https://nvd.nist.gov/vuln/detail/CVE-2022-1340</a></li>\n<li><a href=\"https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618\">https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618</a></li>\n<li><a href=\"https://huntr.dev/bounties/4746f149-fc55-48a1-a7ab-fd7c7412c05a\">https://huntr.dev/bounties/4746f149-fc55-48a1-a7ab-fd7c7412c05a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w83m-rghh-frxj\">https://github.com/advisories/GHSA-w83m-rghh-frxj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w83m-rghh-frxj",
            "title": "[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm",
            "date_modified": "2022-08-30T20:42:30.000Z",
            "date_published": "2022-08-23T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w83m-rghh-frxj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2890\">https://nvd.nist.gov/vuln/detail/CVE-2022-2890</a></li>\n<li><a href=\"https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618\">https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618</a></li>\n<li><a href=\"https://huntr.dev/bounties/5d228a33-eda3-4cff-91da-7bc43e6636da\">https://huntr.dev/bounties/5d228a33-eda3-4cff-91da-7bc43e6636da</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jhxh-68jj-68c7\">https://github.com/advisories/GHSA-jhxh-68jj-68c7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jhxh-68jj-68c7",
            "title": "[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm",
            "date_modified": "2022-08-30T20:42:04.000Z",
            "date_published": "2022-08-23T00:00:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jhxh-68jj-68c7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A stored cross-site scripting (XSS) vulnerability in Kirby's Starterkit v3.7.0.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Tags field.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-35174\">https://nvd.nist.gov/vuln/detail/CVE-2022-35174</a></li>\n<li><a href=\"https://owasp.org/www-community/attacks/xss/\">https://owasp.org/www-community/attacks/xss/</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=0lngc_zPTSg\">https://www.youtube.com/watch?v=0lngc_zPTSg</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m2g-668v-jwjx\">https://github.com/advisories/GHSA-4m2g-668v-jwjx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m2g-668v-jwjx",
            "title": "[getkirby/starterkit] Cross site scripting in getkirby/starterkit",
            "date_modified": "2022-08-30T20:33:36.000Z",
            "date_published": "2022-08-19T00:00:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m2g-668v-jwjx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In versions of notrinos/notrinoserp prior to 0.7 new account passwords were missing a password strength check.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2927\">https://nvd.nist.gov/vuln/detail/CVE-2022-2927</a></li>\n<li><a href=\"https://github.com/notrinos/notrinoserp/commit/e61e76b44c6a2b28a4a648a06ef34f65c376ec1e\">https://github.com/notrinos/notrinoserp/commit/e61e76b44c6a2b28a4a648a06ef34f65c376ec1e</a></li>\n<li><a href=\"https://huntr.dev/bounties/7fa956dd-f541-4dcd-987d-ba15caa6a886\">https://huntr.dev/bounties/7fa956dd-f541-4dcd-987d-ba15caa6a886</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qhm8-69qh-g76j\">https://github.com/advisories/GHSA-qhm8-69qh-g76j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qhm8-69qh-g76j",
            "title": "[notrinos/notrinos-erp] Missing password strength check in notrinos/notrinos-erp",
            "date_modified": "2022-09-07T03:02:37.000Z",
            "date_published": "2022-08-23T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qhm8-69qh-g76j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NotrinosERP version 0.7 and prior is vulnerable to stored cross-site scripting. A fix is available on the <code>master</code> branch of the repository.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2871\">https://nvd.nist.gov/vuln/detail/CVE-2022-2871</a></li>\n<li><a href=\"https://github.com/notrinos/notrinoserp/commit/0362778f4f678156c22a009094225823df8a4760\">https://github.com/notrinos/notrinoserp/commit/0362778f4f678156c22a009094225823df8a4760</a></li>\n<li><a href=\"https://huntr.dev/bounties/61126c07-22ac-4961-a198-1aa33060b373\">https://huntr.dev/bounties/61126c07-22ac-4961-a198-1aa33060b373</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrx5-cv4v-4c44\">https://github.com/advisories/GHSA-hrx5-cv4v-4c44</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrx5-cv4v-4c44",
            "title": "[notrinos/notrinos-erp] NotrinosERP Cross-site Scripting vulnerability",
            "date_modified": "2022-08-30T20:18:02.000Z",
            "date_published": "2022-08-18T00:00:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrx5-cv4v-4c44"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-30429\">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>\n<li><a href=\"https://www.neos.io/blog/xss-in-various-backend-modules.html\">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>\n<li><a href=\"http://cms.com\">http://cms.com</a></li>\n<li><a href=\"http://neos.com\">http://neos.com</a></li>\n<li><a href=\"https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/\">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>\n<li><a href=\"https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml\">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7m9h-v68w-pfw3\">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3",
            "title": "[neos/neos] Neos CMS vulnerable to XSS in various backend modules",
            "date_modified": "2022-08-30T20:13:34.000Z",
            "date_published": "2022-06-03T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7m9h-v68w-pfw3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}