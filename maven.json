{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>\n<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>\n<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34172\">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mhp7-3393-pfqr\">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mhp7-3393-pfqr",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins",
            "date_modified": "2022-12-06T00:02:20.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mhp7-3393-pfqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Since Jenkins 2.340, symbol-based icons unescape previously escaped values of <code>tooltip</code> parameters.</p>\n<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>\n<p>Jenkins 2.356, LTS 2.332.4 and LTS 2.346.1 addresses this vulnerability. Symbol-based icons no longer unescape values of <code>tooltip</code> parameters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34172\">https://nvd.nist.gov/vuln/detail/CVE-2022-34172</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mhp7-3393-pfqr\">https://github.com/advisories/GHSA-mhp7-3393-pfqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mhp7-3393-pfqr",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins",
            "date_modified": "2022-12-06T00:02:20.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mhp7-3393-pfqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Since Jenkins 2.340, the tooltip of the build button in list views supports HTML without escaping the job display name.</p>\n<p>This vulnerability is known to be exploitable by attackers with Job/Configure permission.</p>\n<p>Jenkins 2.356 addresses this vulnerability. The tooltip of the build button in list views is now escaped.</p>\n<p>No Jenkins LTS release is affected by SECURITY-2776 or SECURITY-2780, as these were not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34173\">https://nvd.nist.gov/vuln/detail/CVE-2022-34173</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2781</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6g4r-q7qg-6qx6\">https://github.com/advisories/GHSA-6g4r-q7qg-6qx6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6g4r-q7qg-6qx6",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-site Scripting vulnerability in Jenkins",
            "date_modified": "2022-12-05T23:52:00.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6g4r-q7qg-6qx6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>\n<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34174\">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9grj-j43m-mjqr\">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9grj-j43m-mjqr",
            "title": "[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins",
            "date_modified": "2022-12-05T23:37:16.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9grj-j43m-mjqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Jenkins 2.355 and earlier, LTS 2.332.3 and earlier, an observable timing discrepancy on the login form allows distinguishing between login attempts with an invalid username, and login attempts with a valid username and wrong password, when using the Jenkins user database security realm. This allows attackers to determine the validity of attacker-specified usernames.</p>\n<p>Login attempts with an invalid username now validate a synthetic password to eliminate the timing discrepancy in Jenkins 2.356, LTS 2.332.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34174\">https://nvd.nist.gov/vuln/detail/CVE-2022-34174</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2566</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9grj-j43m-mjqr\">https://github.com/advisories/GHSA-9grj-j43m-mjqr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9grj-j43m-mjqr",
            "title": "[org.jenkins-ci.main:jenkins-core] Observable timing discrepancy allows determining username validity in Jenkins",
            "date_modified": "2022-12-05T23:37:16.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9grj-j43m-mjqr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45046\">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>\n<li><a href=\"https://camel.apache.org/security/CVE-2022-45046.html\">https://camel.apache.org/security/CVE-2022-45046.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/12/05/2\">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w66j-xc7r-m2jv\">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w66j-xc7r-m2jv",
            "title": "[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option",
            "date_modified": "2022-12-05T23:33:29.000Z",
            "date_published": "2022-12-05T15:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w66j-xc7r-m2jv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The camel-ldap component allows LDAP Injection when using the filter option. Users are recommended to either move to the Camel-Spring-Ldap component (which is not affected) or upgrade to 3.14.6 or 3.18.4.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45046\">https://nvd.nist.gov/vuln/detail/CVE-2022-45046</a></li>\n<li><a href=\"https://camel.apache.org/security/CVE-2022-45046.html\">https://camel.apache.org/security/CVE-2022-45046.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/12/05/2\">http://www.openwall.com/lists/oss-security/2022/12/05/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w66j-xc7r-m2jv\">https://github.com/advisories/GHSA-w66j-xc7r-m2jv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w66j-xc7r-m2jv",
            "title": "[org.apache.camel:camel-ldap] camel-ldap component allows LDAP Injection when using the filter option",
            "date_modified": "2022-12-05T23:33:29.000Z",
            "date_published": "2022-12-05T15:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w66j-xc7r-m2jv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins uses the Stapler web framework to render its UI views. These views are frequently composed of several view fragments, enabling plugins to extend existing views with more content.</p>\n<p>Before <a href=\"https://www.jenkins.io/security/advisory/2019-07-17/#SECURITY-534\">SECURITY-534</a> was fixed in Jenkins 2.186 and LTS 2.176.2, attackers could in some cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>\n<p>In Jenkins 2.335 through 2.355 (both inclusive), the protection added for SECURITY-534 is disabled for some views. As a result, attackers could in very limited cases directly access a view fragment containing sensitive information, bypassing any permission checks in the corresponding view.</p>\n<p>As of publication, the Jenkins security team is unaware of any vulnerable view fragment across the Jenkins plugin ecosystem.</p>\n<p>Jenkins 2.356 restores the protection for affected views.</p>\n<p>No Jenkins LTS release is affected by this issue, as it was not present in Jenkins 2.332.x and fixed in the 2.346.x line before 2.346.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34175\">https://nvd.nist.gov/vuln/detail/CVE-2022-34175</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2777</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p3rc-946h-8cf5\">https://github.com/advisories/GHSA-p3rc-946h-8cf5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p3rc-946h-8cf5",
            "title": "[org.jenkins-ci.main:jenkins-core] Unauthorized view fragment access in Jenkins",
            "date_modified": "2022-12-05T23:33:28.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p3rc-946h-8cf5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pipeline: Input Step Plugin 448.v37cea_9a_10a_70 and earlier allows Pipeline authors to specify <code>file</code> parameters for Pipeline <code>input</code> steps even though they are unsupported. Although the uploaded file is not copied to the workspace, Jenkins archives the file on the controller as part of build metadata using the parameter name without sanitization as a relative path inside a build-related directory.</p>\n<p>This allows attackers able to configure Pipelines to create or replace arbitrary files on the Jenkins controller file system with attacker-specified content.</p>\n<p>Pipeline: Input Step Plugin 449.v77f0e8b_845c4 prohibits use of <code>file</code> parameters for Pipeline <code>input</code> steps. Attempts to use them will fail Pipeline execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34177\">https://nvd.nist.gov/vuln/detail/CVE-2022-34177</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2705\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2705</a></li>\n<li><a href=\"https://github.com/jenkinsci/pipeline-input-step-plugin/commit/77f0e8b845c4ad429f6c717eab21cf4e7a69168e\">https://github.com/jenkinsci/pipeline-input-step-plugin/commit/77f0e8b845c4ad429f6c717eab21cf4e7a69168e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-29q6-p2cg-4v23\">https://github.com/advisories/GHSA-29q6-p2cg-4v23</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-29q6-p2cg-4v23",
            "title": "[org.jenkins-ci.plugins:pipeline-input-step] Arbitrary file write vulnerability in Jenkins Pipeline: Input Step Plugin",
            "date_modified": "2022-12-05T23:27:46.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-29q6-p2cg-4v23"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>TERASOLUNA Global Framework 1.0.0 (Public review version) and TERASOLUNA Server Framework for Java (Rich) 2.0.0.2 to 2.0.5.1 are vulnerable to ClassLoader manipulation due to using the old version of Spring Framework which contains the vulnerability. The vulnerability is caused by an improper input validation issue in the binding mechanism of Spring MVC. By the application processing a specially crafted file, arbitrary code may be executed with the privileges of the application. </p>\n<p>When using TERASOLUNA Global Framework 1.0.0 (Public review version), update to TERASOLUNA Server Framework for Java 5.7.1.SP1 (using Spring Framework 5.3.18). This vulnerability alone can be addressed by updating to TERASOLUNA Global Framework 1.0.1 (using Spring Framework 3.2.10) or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-43484\">https://nvd.nist.gov/vuln/detail/CVE-2022-43484</a></li>\n<li><a href=\"https://jvn.jp/en/jp/JVN54728399/index.html\">https://jvn.jp/en/jp/JVN54728399/index.html</a></li>\n<li><a href=\"https://osdn.net/projects/terasoluna/wiki/cve-2022-43484\">https://osdn.net/projects/terasoluna/wiki/cve-2022-43484</a></li>\n<li><a href=\"http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html\">http://terasolunaorg.github.io/vulnerability/cve-2022-43484.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q5j9-f95w-f4pr\">https://github.com/advisories/GHSA-q5j9-f95w-f4pr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q5j9-f95w-f4pr",
            "title": "[org.terasoluna.gfw:terasoluna-gfw-common] TERASOLUNA Server Framework vulnerable to ClassLoader manipulation",
            "date_modified": "2022-12-05T23:23:08.000Z",
            "date_published": "2022-12-05T06:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q5j9-f95w-f4pr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Prior to Apache Commons Net 3.9.0, Net's FTP client trusts the host from PASV response by default. A malicious server can redirect the Commons Net code to use a different host, but the user has to connect to the malicious server in the first place. This may lead to leakage of information about services running on the private network of the client.\nThe default in version 3.9.0 is now false to ignore such hosts, as cURL does. See <a href=\"https://issues.apache.org/jira/browse/NET-711\">https://issues.apache.org/jira/browse/NET-711</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-37533\">https://nvd.nist.gov/vuln/detail/CVE-2021-37533</a></li>\n<li><a href=\"https://lists.apache.org/thread/o6yn9r9x6s94v97264hmgol1sf48mvx7\">https://lists.apache.org/thread/o6yn9r9x6s94v97264hmgol1sf48mvx7</a></li>\n<li><a href=\"https://github.com/apache/commons-net/commit/4fe1bae56e53f32756b1ca3296f3dd2c45e3e060\">https://github.com/apache/commons-net/commit/4fe1bae56e53f32756b1ca3296f3dd2c45e3e060</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/NET-711\">https://issues.apache.org/jira/browse/NET-711</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/12/03/1\">http://www.openwall.com/lists/oss-security/2022/12/03/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgp8-4m63-fhh5\">https://github.com/advisories/GHSA-cgp8-4m63-fhh5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgp8-4m63-fhh5",
            "title": "[commons-net:commons-net] Apache Commons Net vulnerable to information leakage via malicious server",
            "date_modified": "2022-12-05T23:21:10.000Z",
            "date_published": "2022-12-03T15:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgp8-4m63-fhh5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>** UNSUPPORTED WHEN ASSIGNED ** Apache Tapestry 3.x allows deserialization of untrusted data, leading to remote code execution. This issue is similar to but distinct from CVE-2020-17531, which applies the the (also unsupported) 4.x version line. </p>\n<p>NOTE: This vulnerability only affects Apache Tapestry version line 3.x, which is no longer supported by the maintainer. Users are recommended to upgrade to a supported version line of Apache Tapestry.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-46366\">https://nvd.nist.gov/vuln/detail/CVE-2022-46366</a></li>\n<li><a href=\"https://lists.apache.org/thread/bwn1vjrvz1hq0wbdzj23wz322244swhj\">https://lists.apache.org/thread/bwn1vjrvz1hq0wbdzj23wz322244swhj</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/12/02/1\">http://www.openwall.com/lists/oss-security/2022/12/02/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vc39-x7w6-6vj7\">https://github.com/advisories/GHSA-vc39-x7w6-6vj7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vc39-x7w6-6vj7",
            "title": "[org.apache.tapestry:tapestry-core] Apache Tapestry allows deserialization of untrusted data",
            "date_modified": "2022-12-05T23:15:19.000Z",
            "date_published": "2022-12-02T15:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vc39-x7w6-6vj7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>keycloak accepts an expired certificate by the direct-grant authenticator because of missing time stamp validations. The highest threat from this vulnerability is to data confidentiality and integrity.</p>\n<p>This issue was partially fixed in version <a href=\"https://github.com/keycloak/keycloak/pull/6330\">13.0.1</a> and more completely fixed in version <a href=\"https://github.com/keycloak/keycloak/pull/8067\">14.0.0</a>. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-35509\">https://nvd.nist.gov/vuln/detail/CVE-2020-35509</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2020-35509\">https://access.redhat.com/security/cve/cve-2020-35509</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/pull/6330\">https://github.com/keycloak/keycloak/pull/6330</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/pull/8067\">https://github.com/keycloak/keycloak/pull/8067</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/478319348bdfdb9b6d39122f41edf2af79f679bb\">https://github.com/keycloak/keycloak/commit/478319348bdfdb9b6d39122f41edf2af79f679bb</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1912427\">https://bugzilla.redhat.com/show_bug.cgi?id=1912427</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/blob/4f330f4a57cbfcf6202b60546518261c66e59a35/services/src/main/java/org/keycloak/authentication/authenticators/x509/ValidateX509CertificateUsername.java#L74-L76\">https://github.com/keycloak/keycloak/blob/4f330f4a57cbfcf6202b60546518261c66e59a35/services/src/main/java/org/keycloak/authentication/authenticators/x509/ValidateX509CertificateUsername.java#L74-L76</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rpj2-w6fr-79hc\">https://github.com/advisories/GHSA-rpj2-w6fr-79hc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rpj2-w6fr-79hc",
            "title": "[org.keycloak:keycloak-core] Keycloak vulnerable to Improper Certificate Validation",
            "date_modified": "2022-12-05T23:03:58.000Z",
            "date_published": "2022-08-24T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rpj2-w6fr-79hc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>xUnit Plugin 3.0.8 and earlier implements an agent-to-controller message that creates a user-specified directory if it doesn’t exist, and parsing files inside it as test results.</p>\n<p>This allows attackers able to control agent processes to create an arbitrary directory on the Jenkins controller or to obtain test results from existing files in an attacker-specified directory.</p>\n<p>xUnit Plugin 3.1.0 changes the message type from agent-to-controller to controller-to-agent, preventing execution on the controller.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34181\">https://nvd.nist.gov/vuln/detail/CVE-2022-34181</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2549\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2549</a></li>\n<li><a href=\"https://github.com/jenkinsci/xunit-plugin/commit/6976b5da114845a7936ea36d5783a65cd91f9897\">https://github.com/jenkinsci/xunit-plugin/commit/6976b5da114845a7936ea36d5783a65cd91f9897</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-298j-9q4w-6rm4\">https://github.com/advisories/GHSA-298j-9q4w-6rm4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-298j-9q4w-6rm4",
            "title": "[org.jenkins-ci.plugins:xunit] Agent-to-controller security bypass in Jenkins xUnit Plugin",
            "date_modified": "2022-12-05T22:34:26.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-298j-9q4w-6rm4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Hidden Parameter Plugin 0.0.4 and earlier does not escape the name and description of Hidden Parameter parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>\n<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the \"Build With Parameters\" and \"Parameters\" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the \"Build With Parameters\" and \"Parameters\" pages since 2.44 and LTS 2.32.2 as part of the <a href=\"https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions\">SECURITY-353 / CVE-2017-2601</a> fix. Additionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see <a href=\"https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617\">SECURITY-2617 in the 2022-04-12 security advisory for a list</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34188\">https://nvd.nist.gov/vuln/detail/CVE-2022-34188</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784</a></li>\n<li><a href=\"https://github.com/jenkinsci/hidden-parameter-plugin/commit/b1cf577b0fe6c5db1e25031a653d84dc424e6bb9#diff-4ef68932c4bd2675faf307ce8adc92598e41c5aed65cc7bf9d86cc8d41010eedR5-R6\">https://github.com/jenkinsci/hidden-parameter-plugin/commit/b1cf577b0fe6c5db1e25031a653d84dc424e6bb9#diff-4ef68932c4bd2675faf307ce8adc92598e41c5aed65cc7bf9d86cc8d41010eedR5-R6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jhfv-8936-g652\">https://github.com/advisories/GHSA-jhfv-8936-g652</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jhfv-8936-g652",
            "title": "[org.jenkins-ci.plugins:hidden-parameter] Cross-site Scripting in Jenkins Hidden Parameter Plugin",
            "date_modified": "2022-12-05T22:18:09.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jhfv-8936-g652"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins NS-ND Integration Performance Publisher Plugin 4.8.0.77 and earlier does not escape the name of NetStorm Test parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>\n<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the \"Build With Parameters\" and \"Parameters\" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the \"Build With Parameters\" and \"Parameters\" pages since 2.44 and LTS 2.32.2 as part of the <a href=\"https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions\">SECURITY-353 / CVE-2017-2601</a> fix. Additionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see <a href=\"https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617\">SECURITY-2617 in the 2022-04-12 security advisory for a list</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34191\">https://nvd.nist.gov/vuln/detail/CVE-2022-34191</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784</a></li>\n<li><a href=\"https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/5b6dc5957edc3eff1b7ef2c3b52264524161b734\">https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/5b6dc5957edc3eff1b7ef2c3b52264524161b734</a></li>\n<li><a href=\"https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/6321f09aa9518eeeaeaa2f81182e1eae079dbdf2\">https://github.com/jenkinsci/cavisson-ns-nd-integration-plugin/commit/6321f09aa9518eeeaeaa2f81182e1eae079dbdf2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pv38-mqpp-v72h\">https://github.com/advisories/GHSA-pv38-mqpp-v72h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pv38-mqpp-v72h",
            "title": "[io.jenkins.plugins:cavisson-ns-nd-integration] Cross-site Scripting in Jenkins NS-ND Integration Performance Publisher Plugin",
            "date_modified": "2022-12-05T22:14:30.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pv38-mqpp-v72h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>ff4j 1.8.1 is vulnerable to Remote Code Execution (RCE).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-44262\">https://nvd.nist.gov/vuln/detail/CVE-2022-44262</a></li>\n<li><a href=\"https://github.com/ff4j/ff4j/issues/624\">https://github.com/ff4j/ff4j/issues/624</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65hj-9ppw-77xc\">https://github.com/advisories/GHSA-65hj-9ppw-77xc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65hj-9ppw-77xc",
            "title": "[org.ff4j:ff4j-core] ff4j is vulnerable to Remote Code Execution (RCE)",
            "date_modified": "2022-12-05T22:13:56.000Z",
            "date_published": "2022-12-01T06:30:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65hj-9ppw-77xc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Sauce OnDemand Plugin 1.204 and earlier does not escape the name and description of Sauce Labs Browsers parameters on views displaying parameters, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>\n<p>Exploitation of this vulnerability requires that parameters are listed on another page, like the \"Build With Parameters\" and \"Parameters\" pages provided by Jenkins (core), and that those pages are not hardened to prevent exploitation. Jenkins (core) has prevented exploitation of vulnerabilities of this kind on the \"Build With Parameters\" and \"Parameters\" pages since 2.44 and LTS 2.32.2 as part of the <a href=\"https://www.jenkins.io/security/advisory/2017-02-01/#persisted-cross-site-scripting-vulnerability-in-parameter-names-and-descriptions\">SECURITY-353 / CVE-2017-2601</a> fix. Additionally, several plugins have previously been updated to list parameters in a way that prevents exploitation by default, see <a href=\"https://www.jenkins.io/security/advisory/2022-04-12/#SECURITY-2617\">SECURITY-2617 in the 2022-04-12 security advisory for a list</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34197\">https://nvd.nist.gov/vuln/detail/CVE-2022-34197</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784\">https://www.jenkins.io/security/advisory/2022-06-22/#SECURITY-2784</a></li>\n<li><a href=\"https://github.com/jenkinsci/sauce-ondemand-plugin/commit/cb00db7ff1fb3fd73c9a2f0c307960ae597a5932\">https://github.com/jenkinsci/sauce-ondemand-plugin/commit/cb00db7ff1fb3fd73c9a2f0c307960ae597a5932</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqhr-q835-62gm\">https://github.com/advisories/GHSA-cqhr-q835-62gm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqhr-q835-62gm",
            "title": "[org.jenkins-ci.plugins:sauce-ondemand] Cross-site Scripting in Jenkins Sauce OnDemand Plugin",
            "date_modified": "2022-12-05T21:57:50.000Z",
            "date_published": "2022-06-24T00:00:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqhr-q835-62gm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Java Serialization vulnerability was found in Apache Tapestry 4. Apache Tapestry 4 will attempt to deserialize the \"sp\" parameter even before invoking the page's validate method, leading to deserialization without authentication. Apache Tapestry 4 reached end of life in 2008 and no update to address this issue will be released. Apache Tapestry 5 versions are not vulnerable to this issue. Users of Apache Tapestry 4 should upgrade to the latest Apache Tapestry 5 version.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-17531\">https://nvd.nist.gov/vuln/detail/CVE-2020-17531</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r700a6aa234dbff0555d4187bdc8274d7e4c0afbf35b9a3457f09ee76%40%3Cusers.tapestry.apache.org%3E\">https://lists.apache.org/thread.html/r700a6aa234dbff0555d4187bdc8274d7e4c0afbf35b9a3457f09ee76%40%3Cusers.tapestry.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r700a6aa234dbff0555d4187bdc8274d7e4c0afbf35b9a3457f09ee76@%3Cusers.tapestry.apache.org%3E\">https://lists.apache.org/thread.html/r700a6aa234dbff0555d4187bdc8274d7e4c0afbf35b9a3457f09ee76@%3Cusers.tapestry.apache.org%3E</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210115-0007/\">https://security.netapp.com/advisory/ntap-20210115-0007/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/12/02/1\">http://www.openwall.com/lists/oss-security/2022/12/02/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c566-2grg-mjwg\">https://github.com/advisories/GHSA-c566-2grg-mjwg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c566-2grg-mjwg",
            "title": "[org.apache.tapestry:tapestry-project] Serialization vulnerability in Apache Tapestry",
            "date_modified": "2022-12-05T18:13:58.000Z",
            "date_published": "2022-02-09T22:50:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c566-2grg-mjwg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When using tasks to read config files, there is a risk of database password disclosure. We recommend you upgrade to version 2.0.6 or higher.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-26885\">https://nvd.nist.gov/vuln/detail/CVE-2022-26885</a></li>\n<li><a href=\"https://lists.apache.org/thread/z7084r9cs2r26cszkkgjqpb5bhnxqssp\">https://lists.apache.org/thread/z7084r9cs2r26cszkkgjqpb5bhnxqssp</a></li>\n<li><a href=\"https://github.com/apache/dolphinscheduler/releases/tag/2.0.6\">https://github.com/apache/dolphinscheduler/releases/tag/2.0.6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jvc3-wjf6-7c6c\">https://github.com/advisories/GHSA-jvc3-wjf6-7c6c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jvc3-wjf6-7c6c",
            "title": "[org.apache.dolphinscheduler:dolphinscheduler-common] Apache Dolphin Scheduler has insufficiently protected credentials ",
            "date_modified": "2022-12-02T22:37:39.000Z",
            "date_published": "2022-11-24T18:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jvc3-wjf6-7c6c"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}