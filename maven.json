{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A flaw was found where some utility classes in Drools core did not use proper safeguards when deserializing data. This flaw allows an authenticated attacker to construct malicious serialized objects (usually called gadgets) and achieve code execution on the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1415\">https://nvd.nist.gov/vuln/detail/CVE-2022-1415</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2022:6813\">https://access.redhat.com/errata/RHSA-2022:6813</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2022-1415\">https://access.redhat.com/security/cve/CVE-2022-1415</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2065505\">https://bugzilla.redhat.com/show_bug.cgi?id=2065505</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5q8-58wh-xxq4\">https://github.com/advisories/GHSA-m5q8-58wh-xxq4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5q8-58wh-xxq4",
            "title": "[org.drools:drools-core] Drools Core Deserialization of Untrusted Data vulnerability",
            "date_modified": "2023-09-12T13:53:20.000Z",
            "date_published": "2023-09-11T21:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5q8-58wh-xxq4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An remote Code exec vulnerability allows any unauthenticated user to exec code on the server.</p>\n<h3 id=\"details\">Details</h3>\n<p>Hi,Team,\ni find openrefine support to import data from database,When use mysql jdbc to connect to database,It is vulnerable to jdbc url attacks,for example,unauthenticated attacker can get rce on the server through the mysql userializable If the mysql-connector-java version used on the server side is less than 8.20.\nIn order for the server to enable deserialization we need to set the <code>autoDeserialize</code> and <code>queryInterceptors</code> parameters in the connection string,As same with <a href=\"https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-qqh2-wvmv-h72m\">https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-qqh2-wvmv-h72m</a>, since the concatenation string is a direct concatenation, it is possible to inject the required parameters after the other parameters.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262581108-e98dfe16-ee67-463f-8c49-7c318bf0d6f3.png\"></p>\n<p>And there is a commons-beanutils dependency library on the server side, which contains an RCE-capable deserialization exploit chain</p>\n<h3 id=\"poc\">PoC</h3>\n<p>env:\ncentos 7\nopenrefine 3.7.4\njdk11\nmysql-connector-java version 8.14.0\nyou can use the tool <a href=\"https://github.com/4ra1n/mysql-fake-server\">https://github.com/4ra1n/mysql-fake-server</a> to running a malicious mysql server.<br>for example use the CB 1.9 Gadget to exec command <code>touch /tmp/hacked</code>.<br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262583287-7351a00a-32bf-4cb3-8d86-65ff0a112360.png\"><br>set the <code>user</code> to <code>base64ZGVzZXJfQ0JfdG91Y2ggL3RtcC9oYWNrZWQ=</code>(<code>touch /tmp/hacked</code> base64 encode),<code>dataBaseName</code> to <code>test?autoDeserialize=true&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor#</code>.<br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262583657-9cfb9caa-02ed-4f6b-b110-650108803172.png\">\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262583815-a17d5530-bae8-4b4f-9392-4ea41b328c7d.png\"><br> command <code>touch /tmp/hacked</code> is executed.<br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262583979-823d5843-578f-4af6-b84f-a1422aa1b863.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>An remote Code exec vulnerability allows any unauthenticated user to exec code on the server.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-p3r5-x3hr-gpg5\">https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-p3r5-x3hr-gpg5</a></li>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/commit/693fde606d4b5b78b16391c29d110389eb605511\">https://github.com/OpenRefine/OpenRefine/commit/693fde606d4b5b78b16391c29d110389eb605511</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p3r5-x3hr-gpg5\">https://github.com/advisories/GHSA-p3r5-x3hr-gpg5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p3r5-x3hr-gpg5",
            "title": "[org.openrefine:database] OpenRefine Remote Code execution in project import with mysql jdbc url attack",
            "date_modified": "2023-09-12T13:53:01.000Z",
            "date_published": "2023-09-12T13:52:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p3r5-x3hr-gpg5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>An arbitrary file read vulnerability allows any unauthenticated user to read the file on the server._</p>\n<h3 id=\"details\">Details</h3>\n<p>Hi,Team,\ni find openrefine support to import data from database,When use mysql jdbc to connect to database,It is vulnerable to jdbc url attacks,for example,unauthenticated attacker can read the file on the server.\nThere are some differences in utilization depending on the version of the mysql-connector dependency on the server side.  </p>\n<ol>\n<li>mysql-connector-java version &gt; 8.14\nThe default value of <code>allowLoadLocalInfile</code> on the server side is false in this case.We need to manually set this value to true in the connection string.<br>Since the way to get the databaseurl in <code>com/google/refine/extension/database/mysql/MySQLConnectionManager.java</code> is to splice the individual configurations directly, we can set the <code>allowLoadLocalInfile</code> parameter after the other parameters(for example the <code>databaseName</code> parameter ).<br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262531956-ef8bb163-6692-4494-92f9-3b9bcffdf503.png\"><br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262531716-95e7c9a6-601d-4157-bce9-c58d17a6e3ea.png\">\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262531614-a34f891f-acd2-4354-bbbe-96447a9dcbd1.png\"></li>\n<li>mysql-connector-java version &lt;= 8.14\nThe default value of <code>allowLoadLocalInfile</code> on the server side is true in this case.so wo don't need do anything,Just connect to our malicious server.</li>\n</ol>\n<h3 id=\"poc\">PoC</h3>\n<p>env:<br>centos 7\nopenrefine 3.7.4 \njdk11 \nmysql-connector-java version 8.30.0  </p>\n<p>you can use the tool <a href=\"https://github.com/4ra1n/mysql-fake-server\">https://github.com/4ra1n/mysql-fake-server</a> to running a malicious mysql server.<br><img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262536594-a62dbc2c-62d2-4b21-a351-5be7f506f852.png\"><br>for example,to read the /etc/passwd file.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262539711-f274a396-9c0a-4ace-b3af-3b4e5309ab00.png\">\nset the <code>username</code> to <code>base64ZmlsZXJlYWRfL2V0Yy9wYXNzd2Q=</code> and <code>Database name</code> to <code>test?allowLoadLocalInfile=true#</code> (for  mysql-connector-java version &lt;= 8.14,just setting the database name normally) and test to connect your malicious mysql server.\nyou can get the file in your fake-server-files directory.\n<img alt=\"image\" src=\"https://user-images.githubusercontent.com/24366795/262542538-c9f501a4-899f-4b57-89b9-b8dd42f535fb.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>An arbitrary file read vulnerability allows any unauthenticated user to read the file on the server._</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-qqh2-wvmv-h72m\">https://github.com/OpenRefine/OpenRefine/security/advisories/GHSA-qqh2-wvmv-h72m</a></li>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/commit/2de1439f5be63d9d0e89bbacbd24fa28c8c3e29d\">https://github.com/OpenRefine/OpenRefine/commit/2de1439f5be63d9d0e89bbacbd24fa28c8c3e29d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqh2-wvmv-h72m\">https://github.com/advisories/GHSA-qqh2-wvmv-h72m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqh2-wvmv-h72m",
            "title": "[org.openrefine:database] OpenRefine vulnerable to arbitrary file read in project import with mysql jdbc url attack",
            "date_modified": "2023-09-12T13:52:05.000Z",
            "date_published": "2023-09-12T13:52:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqh2-wvmv-h72m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Control of Dynamically-Managed Code Resources vulnerability in Crafter Studio of Crafter CMS allows authenticated developers to execute OS commands via FreeMarker static methods.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-23267\">https://nvd.nist.gov/vuln/detail/CVE-2021-23267</a></li>\n<li><a href=\"https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2022051603\">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2022051603</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r6fx-55x3-f9x6\">https://github.com/advisories/GHSA-r6fx-55x3-f9x6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r6fx-55x3-f9x6",
            "title": "[org.craftercms:crafter-studio] Crafter CMS Crafter Studio vulnerable to Improper Control of Dynamically-Managed Code Resources",
            "date_modified": "2023-09-12T13:30:03.000Z",
            "date_published": "2022-05-17T00:00:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r6fx-55x3-f9x6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Karaf provides a features deployer, which allows users to \"hot deploy\" a features XML by dropping the file directly in the deploy folder. The features XML is parsed by XMLInputFactory class. Apache Karaf XMLInputFactory class doesn't contain any mitigation codes against XXE. This is a potential security risk as an user can inject external XML entities in Apache Karaf version prior to 4.1.7 or 4.2.2. It has been fixed in Apache Karaf 4.1.7 and 4.2.2 releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-11788\">https://nvd.nist.gov/vuln/detail/CVE-2018-11788</a></li>\n<li><a href=\"http://karaf.apache.org/security/cve-2018-11788.txt\">http://karaf.apache.org/security/cve-2018-11788.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/commit/0c36c50bc158739c8fc8543122a6740c54adafca\">https://github.com/apache/karaf/commit/0c36c50bc158739c8fc8543122a6740c54adafca</a></li>\n<li><a href=\"https://web.archive.org/web/20200227101219/https://www.securityfocus.com/bid/106479/\">https://web.archive.org/web/20200227101219/https://www.securityfocus.com/bid/106479/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92wj-x78c-m4fx\">https://github.com/advisories/GHSA-92wj-x78c-m4fx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92wj-x78c-m4fx",
            "title": "[org.apache.karaf.specs:org.apache.karaf.specs.java.xml] XML External Entity Reference in Apache Karaf",
            "date_modified": "2023-09-11T22:40:28.000Z",
            "date_published": "2019-01-07T19:14:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92wj-x78c-m4fx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Karaf provides a features deployer, which allows users to \"hot deploy\" a features XML by dropping the file directly in the deploy folder. The features XML is parsed by XMLInputFactory class. Apache Karaf XMLInputFactory class doesn't contain any mitigation codes against XXE. This is a potential security risk as an user can inject external XML entities in Apache Karaf version prior to 4.1.7 or 4.2.2. It has been fixed in Apache Karaf 4.1.7 and 4.2.2 releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-11788\">https://nvd.nist.gov/vuln/detail/CVE-2018-11788</a></li>\n<li><a href=\"http://karaf.apache.org/security/cve-2018-11788.txt\">http://karaf.apache.org/security/cve-2018-11788.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/commit/0c36c50bc158739c8fc8543122a6740c54adafca\">https://github.com/apache/karaf/commit/0c36c50bc158739c8fc8543122a6740c54adafca</a></li>\n<li><a href=\"https://web.archive.org/web/20200227101219/https://www.securityfocus.com/bid/106479/\">https://web.archive.org/web/20200227101219/https://www.securityfocus.com/bid/106479/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-92wj-x78c-m4fx\">https://github.com/advisories/GHSA-92wj-x78c-m4fx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-92wj-x78c-m4fx",
            "title": "[org.apache.karaf.specs:org.apache.karaf.specs.java.xml] XML External Entity Reference in Apache Karaf",
            "date_modified": "2023-09-11T22:40:28.000Z",
            "date_published": "2019-01-07T19:14:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-92wj-x78c-m4fx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Karaf allows monitoring of applications and the Java runtime by using the Java Management Extensions (JMX). JMX is a Java RMI based technology that relies on Java serialized objects for client server communication. Whereas the default JMX implementation is hardened against unauthenticated deserialization attacks, the implementation used by Apache Karaf is not protected against this kind of attack. The impact of Java deserialization vulnerabilities strongly depends on the classes that are available within the targets class path. Generally speaking, deserialization of untrusted data does always represent a high security risk and should be prevented. The risk is low as, by default, Karaf uses a limited set of classes in the JMX server class path. It depends of system scoped classes (e.g. jar in the lib folder).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41766\">https://nvd.nist.gov/vuln/detail/CVE-2021-41766</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2021-41766.txt\">https://karaf.apache.org/security/cve-2021-41766.txt</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7312\">https://issues.apache.org/jira/browse/KARAF-7312</a></li>\n<li><a href=\"https://github.com/apache/karaf/pull/1475\">https://github.com/apache/karaf/pull/1475</a></li>\n<li><a href=\"https://github.com/apache/karaf/commit/b42c82ca3b9a22bd92d249a1060a1953f4188bc2\">https://github.com/apache/karaf/commit/b42c82ca3b9a22bd92d249a1060a1953f4188bc2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh5g-9m4v-9vv9\">https://github.com/advisories/GHSA-jh5g-9m4v-9vv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9",
            "title": "[org.apache.karaf:org.apache.karaf.management] Insecure Java Deserialization in Apache Karaf",
            "date_modified": "2023-09-11T22:19:00.000Z",
            "date_published": "2022-01-28T22:24:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Control of Dynamically-Managed Code Resources vulnerability in Crafter Studio of Crafter CMS allows authenticated developers to execute OS commands via FreeMarker SSTI.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-40634\">https://nvd.nist.gov/vuln/detail/CVE-2022-40634</a></li>\n<li><a href=\"https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2022051601\">https://docs.craftercms.org/en/3.1/security/advisory.html#cv-2022051601</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2jv3-v37p-65w3\">https://github.com/advisories/GHSA-2jv3-v37p-65w3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2jv3-v37p-65w3",
            "title": "[org.craftercms:crafter-studio] CrafterCMS Crafter Studio Improperly Controls Dynamically-Managed Code Resources",
            "date_modified": "2023-09-11T22:15:24.000Z",
            "date_published": "2022-09-14T00:00:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2jv3-v37p-65w3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>While investigating ARTEMIS-2964 it was found that the creation of advisory messages in the OpenWire protocol head of Apache ActiveMQ Artemis 2.15.0 bypassed policy based access control for the entire session. Production of advisory messages was not subject to access control in error.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-26118\">https://nvd.nist.gov/vuln/detail/CVE-2021-26118</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rafd5d7cf303772a0118865262946586921a65ebd98fc24f56c812574@%3Cannounce.apache.org%3E\">https://lists.apache.org/thread.html/rafd5d7cf303772a0118865262946586921a65ebd98fc24f56c812574@%3Cannounce.apache.org%3E</a></li>\n<li><a href=\"https://mail-archives.apache.org/mod_mbox/activemq-users/202101.mbox/%3CCAH%2BvQmMUNnkiXv2-d3ucdErWOsdnLi6CgnK%2BVfixyJvTgTuYig%40mail.gmail.com%3E\">https://mail-archives.apache.org/mod_mbox/activemq-users/202101.mbox/%3CCAH%2BvQmMUNnkiXv2-d3ucdErWOsdnLi6CgnK%2BVfixyJvTgTuYig%40mail.gmail.com%3E</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210827-0002/\">https://security.netapp.com/advisory/ntap-20210827-0002/</a></li>\n<li><a href=\"https://github.com/apache/activemq-artemis/commit/e5566d52116d81611d914548adc3cbb14d7118d4\">https://github.com/apache/activemq-artemis/commit/e5566d52116d81611d914548adc3cbb14d7118d4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q7fr-vqhq-v5xr\">https://github.com/advisories/GHSA-q7fr-vqhq-v5xr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q7fr-vqhq-v5xr",
            "title": "[org.apache.activemq:artemis-openwire-protocol] Apache ActiveMQ Artemis vulnerable to Improper Access Control",
            "date_modified": "2023-09-11T20:56:04.000Z",
            "date_published": "2021-06-16T17:39:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q7fr-vqhq-v5xr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XWork is an command-pattern framework that is used to power WebWork as well as other applications. Struts support in OpenSymphony XWork before 1.2.3, and 2.x before 2.0.4, as used in WebWork and Apache Struts, recursively evaluates all input as an Object-Graph Navigation Language (OGNL) expression when altSyntax is enabled, which allows remote attackers to cause a denial of service (infinite loop) or execute arbitrary code via form input beginning with a \"%{\" sequence and ending with a \"}\" character. </p>\n<p>Note: Version 2.0.4 marks the change from <code>opensymphony:xwork</code> to <code>com.opensymphony:xwork</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2007-4556\">https://nvd.nist.gov/vuln/detail/CVE-2007-4556</a></li>\n<li><a href=\"http://struts.apache.org/2.x/docs/s2-001.html\">http://struts.apache.org/2.x/docs/s2-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7mf-qrm9-2848\">https://github.com/advisories/GHSA-h7mf-qrm9-2848</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7mf-qrm9-2848",
            "title": "[opensymphony:xwork] OpenSymphony XWork vulnerable to improper input validation",
            "date_modified": "2023-09-11T20:52:36.000Z",
            "date_published": "2022-05-01T18:24:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7mf-qrm9-2848"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XWork is an command-pattern framework that is used to power WebWork as well as other applications. Struts support in OpenSymphony XWork before 1.2.3, and 2.x before 2.0.4, as used in WebWork and Apache Struts, recursively evaluates all input as an Object-Graph Navigation Language (OGNL) expression when altSyntax is enabled, which allows remote attackers to cause a denial of service (infinite loop) or execute arbitrary code via form input beginning with a \"%{\" sequence and ending with a \"}\" character. </p>\n<p>Note: Version 2.0.4 marks the change from <code>opensymphony:xwork</code> to <code>com.opensymphony:xwork</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2007-4556\">https://nvd.nist.gov/vuln/detail/CVE-2007-4556</a></li>\n<li><a href=\"http://struts.apache.org/2.x/docs/s2-001.html\">http://struts.apache.org/2.x/docs/s2-001.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7mf-qrm9-2848\">https://github.com/advisories/GHSA-h7mf-qrm9-2848</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7mf-qrm9-2848",
            "title": "[opensymphony:xwork] OpenSymphony XWork vulnerable to improper input validation",
            "date_modified": "2023-09-11T20:52:36.000Z",
            "date_published": "2022-05-01T18:24:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7mf-qrm9-2848"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When a client request to a cluster node was replicated to other nodes in the cluster for verification, the Content-Length was forwarded. On a DELETE request, the body was ignored, but if the initial request had a Content-Length value other than 0, the receiving nodes would wait for the body and eventually timeout. Mitigation: The fix to check DELETE requests and overwrite non-zero Content-Length header values was applied on the Apache NiFi 1.8.0 release. Users running a prior 1.x release should upgrade to the appropriate release.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-17194\">https://nvd.nist.gov/vuln/detail/CVE-2018-17194</a></li>\n<li><a href=\"https://nifi.apache.org/security.html#CVE-2018-17194\">https://nifi.apache.org/security.html#CVE-2018-17194</a></li>\n<li><a href=\"https://github.com/apache/nifi/commit/1baead6f525046a613fc4fe494a0d193776ea70f,\">https://github.com/apache/nifi/commit/1baead6f525046a613fc4fe494a0d193776ea70f,</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-43fp-vwwg-qgv6\">https://github.com/advisories/GHSA-43fp-vwwg-qgv6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-43fp-vwwg-qgv6",
            "title": "[org.apache.nifi:nifi-framework-cluster] Apache NiFi Improper Input Validation vulnerability",
            "date_modified": "2023-09-11T20:45:18.000Z",
            "date_published": "2018-12-20T22:02:32.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-43fp-vwwg-qgv6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins Pipeline: Shared Groovy Libraries Plugin 2.14 and earlier allowed users with Overall/Read access to obtain limited information about the content of SCM repositories referenced by global libraries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10357\">https://nvd.nist.gov/vuln/detail/CVE-2019-10357</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:2594\">https://access.redhat.com/errata/RHSA-2019:2594</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:2651\">https://access.redhat.com/errata/RHSA-2019:2651</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:2662\">https://access.redhat.com/errata/RHSA-2019:2662</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-07-31/#SECURITY1422\">https://jenkins.io/security/advisory/2019-07-31/#SECURITY1422</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/07/31/1\">http://www.openwall.com/lists/oss-security/2019/07/31/1</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/6fce1e241d82641e8648c546bc63c22a5e07e96b\">https://github.com/jenkinsci/workflow-cps-global-lib-plugin/commit/6fce1e241d82641e8648c546bc63c22a5e07e96b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9x5v-8352-244g\">https://github.com/advisories/GHSA-9x5v-8352-244g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9x5v-8352-244g",
            "title": "[org.jenkins-ci.plugins.workflow:workflow-cps-global-lib] Missing Authorization in Jenkins Pipeline: Shared Groovy Libraries Plugin",
            "date_modified": "2023-09-11T20:44:11.000Z",
            "date_published": "2022-05-24T16:51:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9x5v-8352-244g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in XXL-CONF 1.6.0. There is a path traversal vulnerability via <code>../</code> in the keys parameter that can download any configuration file, related to <code>ConfController.java</code> and <code>PropUtil.java</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-20094\">https://nvd.nist.gov/vuln/detail/CVE-2018-20094</a></li>\n<li><a href=\"https://github.com/xuxueli/xxl-conf/issues/61\">https://github.com/xuxueli/xxl-conf/issues/61</a></li>\n<li><a href=\"https://github.com/xuxueli/xxl-conf/blob/6726dfe7979ea6d8fb983771471cde69789de632/xxl-conf-admin/src/main/java/com/xxl/conf/admin/controller/ConfController.java\">https://github.com/xuxueli/xxl-conf/blob/6726dfe7979ea6d8fb983771471cde69789de632/xxl-conf-admin/src/main/java/com/xxl/conf/admin/controller/ConfController.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j39-fgfp-vxh8\">https://github.com/advisories/GHSA-8j39-fgfp-vxh8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j39-fgfp-vxh8",
            "title": "[com.xuxueli:xxl-conf-admin] XXL-CONF Path Traversal vulnerability",
            "date_modified": "2023-09-11T20:39:34.000Z",
            "date_published": "2018-12-19T19:25:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j39-fgfp-vxh8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jooby before 1.6.4 has XSS via the default error handler.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-15477\">https://nvd.nist.gov/vuln/detail/CVE-2019-15477</a></li>\n<li><a href=\"https://github.com/jooby-project/jooby/pull/1368\">https://github.com/jooby-project/jooby/pull/1368</a></li>\n<li><a href=\"https://github.com/jooby-project/jooby/commit/34856a738829d8fedca4ed27bd6ff413af87186f\">https://github.com/jooby-project/jooby/commit/34856a738829d8fedca4ed27bd6ff413af87186f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5f4-m7qp-w6gc\">https://github.com/advisories/GHSA-f5f4-m7qp-w6gc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5f4-m7qp-w6gc",
            "title": "[org.jooby:jooby] Cross-site Scripting in Jooby",
            "date_modified": "2023-09-11T20:37:34.000Z",
            "date_published": "2019-08-27T17:40:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5f4-m7qp-w6gc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>This affects the package json before 10.0.0. It is possible to inject arbritary commands using the parseLookup function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-7712\">https://nvd.nist.gov/vuln/detail/CVE-2020-7712</a></li>\n<li><a href=\"https://github.com/trentm/json/issues/144\">https://github.com/trentm/json/issues/144</a></li>\n<li><a href=\"https://github.com/trentm/json/pull/145\">https://github.com/trentm/json/pull/145</a></li>\n<li><a href=\"https://github.com/trentm/json/commit/cc4798169f9e0f181f8aa61905b88479badcd483\">https://github.com/trentm/json/commit/cc4798169f9e0f181f8aa61905b88479badcd483</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r37c0e1807da7ff2bdd028bbe296465a6bbb99e2320dbe661d5d8b33b@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/r37c0e1807da7ff2bdd028bbe296465a6bbb99e2320dbe661d5d8b33b@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3b04f4e99a19613f88ae088aa18cd271231a3c79dfff8f5efa8cda61@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/r3b04f4e99a19613f88ae088aa18cd271231a3c79dfff8f5efa8cda61@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r5f17bfca1d6e7f4b33ae978725b2fd62a9f1b3111696eafa9add802d@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/r5f17bfca1d6e7f4b33ae978725b2fd62a9f1b3111696eafa9add802d@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r8d2e174230f6d26e16c007546e804c343f1f68956f526daaafa4aaae@%3Cdev.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/r8d2e174230f6d26e16c007546e804c343f1f68956f526daaafa4aaae@%3Cdev.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r977a907ecbedf87ae5ba47d4c77639efb120f74d4d1b3de14a4ef4da@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r977a907ecbedf87ae5ba47d4c77639efb120f74d4d1b3de14a4ef4da@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r9c6d28e5b9a9b3481b7d1f90f1c2f75cd1a5ade91038426e0fb095da@%3Cdev.flink.apache.org%3E\">https://lists.apache.org/thread.html/r9c6d28e5b9a9b3481b7d1f90f1c2f75cd1a5ade91038426e0fb095da@%3Cdev.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/ra890c24b3d90be36daf48ae76b263acb297003db24c1122f8e4aaef2@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/ra890c24b3d90be36daf48ae76b263acb297003db24c1122f8e4aaef2@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rb023d54a46da1ac0d8969097f5fecc79636b07d3b80db7b818a5c55c@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/rb023d54a46da1ac0d8969097f5fecc79636b07d3b80db7b818a5c55c@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rb2b981912446a74e14fe6076c4b7c7d8502727ea0718e6a65a9b1be5@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/rb2b981912446a74e14fe6076c4b7c7d8502727ea0718e6a65a9b1be5@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rb89bd82dffec49f83b49e9ad625b1b63a408b3c7d1a60d6f049142a0@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rb89bd82dffec49f83b49e9ad625b1b63a408b3c7d1a60d6f049142a0@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rba7ea4d75d6a8e5b935991d960d9b893fd30e576c4d3b531084ebd7d@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rba7ea4d75d6a8e5b935991d960d9b893fd30e576c4d3b531084ebd7d@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd9b9cc843f5cf5b532bdad9e87a817967efcf52b917e8c43b6df4cc7@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/rd9b9cc843f5cf5b532bdad9e87a817967efcf52b917e8c43b6df4cc7@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rec8bb4d637b04575da41cfae49118e108e95d43bfac39b7b698ee4db@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/rec8bb4d637b04575da41cfae49118e108e95d43bfac39b7b698ee4db@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/ree3abcd33c06ee95ab59faa1751198a1186d8941ddc2c2562c12966c@%3Cissues.zookeeper.apache.org%3E\">https://lists.apache.org/thread.html/ree3abcd33c06ee95ab59faa1751198a1186d8941ddc2c2562c12966c@%3Cissues.zookeeper.apache.org%3E</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-608931\">https://snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-608931</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-JS-JSON-597481\">https://snyk.io/vuln/SNYK-JS-JSON-597481</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2022.html\">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3c6g-pvg8-gqw2\">https://github.com/advisories/GHSA-3c6g-pvg8-gqw2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3c6g-pvg8-gqw2",
            "title": "[org.webjars.npm:json] trentm/json vulnerable to command injection",
            "date_modified": "2023-09-11T20:29:19.000Z",
            "date_published": "2021-05-06T18:11:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3c6g-pvg8-gqw2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Apache Thrift Node.js static web server in versions 0.9.2 through 0.11.0 have been determined to contain a security vulnerability in which a remote user has the ability to access files outside the set webservers docroot path.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-11798\">https://nvd.nist.gov/vuln/detail/CVE-2018-11798</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1545\">https://access.redhat.com/errata/RHSA-2019:1545</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:3140\">https://access.redhat.com/errata/RHSA-2019:3140</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx85-mj8c-4qm6\">https://github.com/advisories/GHSA-vx85-mj8c-4qm6</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/6e9edd282684896cedf615fb67a02bebfe6007f2d5baf03ba52e34fd@%3Cuser.thrift.apache.org%3E\">https://lists.apache.org/thread.html/6e9edd282684896cedf615fb67a02bebfe6007f2d5baf03ba52e34fd@%3Cuser.thrift.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>\n<li><a href=\"https://github.com/apache/thrift/pull/1606\">https://github.com/apache/thrift/pull/1606</a></li>\n<li><a href=\"https://github.com/apache/thrift/commit/2a2b72f6c8aef200ecee4984f011e06052288ff2\">https://github.com/apache/thrift/commit/2a2b72f6c8aef200ecee4984f011e06052288ff2</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/THRIFT-4647\">https://issues.apache.org/jira/browse/THRIFT-4647</a></li>\n<li><a href=\"https://web.archive.org/web/20200227094236/http://www.securityfocus.com/bid/106501\">https://web.archive.org/web/20200227094236/http://www.securityfocus.com/bid/106501</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx85-mj8c-4qm6",
            "title": "[org.apache.thrift:libthrift] Apache Thrift Node.js static web server sandbox escape",
            "date_modified": "2023-09-11T18:30:29.000Z",
            "date_published": "2019-01-17T13:56:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx85-mj8c-4qm6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hutool v5.8.21 was discovered to contain a buffer overflow via the component <code>JSONUtil.parse()</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42278\">https://nvd.nist.gov/vuln/detail/CVE-2023-42278</a></li>\n<li><a href=\"https://github.com/dromara/hutool/issues/3289\">https://github.com/dromara/hutool/issues/3289</a></li>\n<li><a href=\"https://github.com/dromara/hutool/commit/5c4486b9f58a83f283868135138f6ff3741b8c12\">https://github.com/dromara/hutool/commit/5c4486b9f58a83f283868135138f6ff3741b8c12</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rr66-qh5m-w6mx\">https://github.com/advisories/GHSA-rr66-qh5m-w6mx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rr66-qh5m-w6mx",
            "title": "[cn.hutool:hutool-json] hutool Buffer Overflow vulnerability",
            "date_modified": "2023-09-11T18:04:22.000Z",
            "date_published": "2023-09-09T00:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rr66-qh5m-w6mx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hutool v5.8.21 was discovered to contain a buffer overflow via the component <code>JSONUtil.parse()</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42278\">https://nvd.nist.gov/vuln/detail/CVE-2023-42278</a></li>\n<li><a href=\"https://github.com/dromara/hutool/issues/3289\">https://github.com/dromara/hutool/issues/3289</a></li>\n<li><a href=\"https://github.com/dromara/hutool/commit/5c4486b9f58a83f283868135138f6ff3741b8c12\">https://github.com/dromara/hutool/commit/5c4486b9f58a83f283868135138f6ff3741b8c12</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rr66-qh5m-w6mx\">https://github.com/advisories/GHSA-rr66-qh5m-w6mx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rr66-qh5m-w6mx",
            "title": "[cn.hutool:hutool-core] hutool Buffer Overflow vulnerability",
            "date_modified": "2023-09-11T18:04:22.000Z",
            "date_published": "2023-09-09T00:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rr66-qh5m-w6mx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>hutool v5.8.21 was discovered to contain a buffer overflow via the component <code>jsonObject.putByPath</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-42277\">https://nvd.nist.gov/vuln/detail/CVE-2023-42277</a></li>\n<li><a href=\"https://github.com/dromara/hutool/issues/3285\">https://github.com/dromara/hutool/issues/3285</a></li>\n<li><a href=\"https://github.com/dromara/hutool/commit/9ba8f9ca5dd32441f2e0f150cb22fa178bb771d3\">https://github.com/dromara/hutool/commit/9ba8f9ca5dd32441f2e0f150cb22fa178bb771d3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7p8c-crfr-q93p\">https://github.com/advisories/GHSA-7p8c-crfr-q93p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7p8c-crfr-q93p",
            "title": "[cn.hutool:hutool-json] hutool Buffer Overflow vulnerability",
            "date_modified": "2023-09-11T18:04:00.000Z",
            "date_published": "2023-09-09T00:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7p8c-crfr-q93p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}