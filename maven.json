{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>SnakeYaml's <code>Constructor</code> class, which inherits from <code>SafeConstructor</code>, allows any type be deserialized given the following line:</p>\n<p>new Yaml(new Constructor(TestDataClass.class)).load(yamlContent);</p>\n<p>Types do not have to match the types of properties in the target class. A <code>ConstructorException</code> is thrown, but only after a malicious payload is deserialized.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>High, lack of type checks during deserialization allows remote code execution.</p>\n<h3 id=\"proof-of-concept\">Proof of Concept</h3>\n<p>Execute <code>bash run.sh</code>. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\n<a href=\"http://127.0.0.1:8000\">http://127.0.0.1:8000</a>.</p>\n<p>Example output of successful run of proof of concept:</p>\n<pre><code>$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n    at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n    at org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n    at Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n    at java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n    at java.base/java.lang.reflect.Field.set(Field.java:780)\n    at org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n    ... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n</code></pre>\n<h3 id=\"further-analysis\">Further Analysis</h3>\n<p>Potential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.</p>\n<p>See <a href=\"https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479\">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479</a> for discussion on the subject.</p>\n<p>A fix was released in version 2.0. See <a href=\"https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314\">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314</a> for more information.</p>\n<h3 id=\"timeline\">Timeline</h3>\n<p><strong>Date reported</strong>: 4/11/2022\n<strong>Date fixed</strong>: \n<strong>Date disclosed</strong>: 10/13/2022</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2\">https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1471\">https://nvd.nist.gov/vuln/detail/CVE-2022-1471</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479\">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374\">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64634374</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471\">https://bitbucket.org/snakeyaml/snakeyaml/wiki/CVE-2022-1471</a></li>\n<li><a href=\"https://github.com/mbechler/marshalsec\">https://github.com/mbechler/marshalsec</a></li>\n<li><a href=\"https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/\">https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/</a></li>\n<li><a href=\"https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true\">https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/commits/5014df1a36f50aca54405bb8433bc99a8847f758\">https://bitbucket.org/snakeyaml/snakeyaml/commits/5014df1a36f50aca54405bb8433bc99a8847f758</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/commits/acc44099f5f4af26ff86b4e4e4cc1c874e2dc5c4\">https://bitbucket.org/snakeyaml/snakeyaml/commits/acc44099f5f4af26ff86b4e4e4cc1c874e2dc5c4</a></li>\n<li><a href=\"https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314\">https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64876314</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mjmj-j48q-9wg2\">https://github.com/advisories/GHSA-mjmj-j48q-9wg2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mjmj-j48q-9wg2",
            "title": "[org.yaml:snakeyaml] SnakeYaml Constructor Deserialization Remote Code Execution",
            "date_modified": "2023-03-03T13:52:51.000Z",
            "date_published": "2022-12-12T21:19:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mjmj-j48q-9wg2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Keycloak's OpenID Connect user authentication was found to incorrectly authenticate requests. An authenticated attacker who could also obtain a certain piece of info from a user request, from a victim within the same realm, could use that data to impersonate the victim and generate new session tokens.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keycloak/keycloak/security/advisories/GHSA-9g98-5mj6-f9mv\">https://github.com/keycloak/keycloak/security/advisories/GHSA-9g98-5mj6-f9mv</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/ec8109112e67208c13e13f6d1f8706a5a3ba8d4c\">https://github.com/keycloak/keycloak/commit/ec8109112e67208c13e13f6d1f8706a5a3ba8d4c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9g98-5mj6-f9mv\">https://github.com/advisories/GHSA-9g98-5mj6-f9mv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9g98-5mj6-f9mv",
            "title": "[org.keycloak:keycloak-services] Keycloak vulnerable to user impersonation via stolen UUID code",
            "date_modified": "2023-03-02T23:25:43.000Z",
            "date_published": "2023-03-02T23:25:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9g98-5mj6-f9mv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The annotation displayer does not execute the content in a restricted context. This allows executing anything with the right of the author of any document by annotating the document.</p>\n<p>To reproduce: add an annotation with the content <code>{{groovy}}print \"hello\"{{/groovy}}</code> and click the yellow scare to get a display of the annotation inline.</p>\n<p>The result is \"hello\" but it should be an error suggesting that it's not allowed to use the groovy macro.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in XWiki 13.10.11, 14.4.7 and 14.10.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no easy workaround except to upgrade.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></p>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://jira.xwiki.org/\">Jira XWiki.org</a></li>\n<li>Email us at <a href=\"mailto:security@xwiki.org\">Security Mailing List</a></li>\n</ul>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by René de Sain @renniepak.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7\">https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26475\">https://nvd.nist.gov/vuln/detail/CVE-2023-26475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr",
            "title": "[org.xwiki.platform:xwiki-platform-annotation-ui] xwiki-platform vulnerable to Remote Code Execution in Annotations",
            "date_modified": "2023-03-03T00:15:44.000Z",
            "date_published": "2023-03-02T15:16:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Beaker builder Plugin stored the Beaker password unencrypted on the Jenkins controller. This password could be viewed by users with access to the Jenkins controller file system.</p>\n<p>Beaker builder Plugin now stores these credentials encrypted.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10398\">https://nvd.nist.gov/vuln/detail/CVE-2019-10398</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1545\">https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1545</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/09/12/2\">http://www.openwall.com/lists/oss-security/2019/09/12/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9678-5f6f-wp3f\">https://github.com/advisories/GHSA-9678-5f6f-wp3f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9678-5f6f-wp3f",
            "title": "[org.jenkins-ci.plugins:beaker-builder] Jenkins Beaker Builder Plugin has Insufficiently Protected Credentials",
            "date_modified": "2023-03-02T16:42:32.000Z",
            "date_published": "2022-05-24T16:55:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9678-5f6f-wp3f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Build Environment Plugin did not escape values of environment variables shown on its views. This resulted in a cross-site scripting vulnerability exploitable by attackers able to control the values of build environment variables, typically users with Job/Configure or Job/Build permission.</p>\n<p>Jenkins applies the missing escaping by default since 2.146 and LTS 2.138.2, so newer Jenkins releases are not affected by this vulnerability.</p>\n<p>Build Environment Plugin now escapes all variables displayed in its views.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10395\">https://nvd.nist.gov/vuln/detail/CVE-2019-10395</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1476\">https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1476</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/09/12/2\">http://www.openwall.com/lists/oss-security/2019/09/12/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-88qj-3q6h-8m5q\">https://github.com/advisories/GHSA-88qj-3q6h-8m5q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-88qj-3q6h-8m5q",
            "title": "[org.jenkins-ci.plugins:build-environment] Jenkins Build Environment Plugin vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-02T16:41:38.000Z",
            "date_published": "2022-05-24T16:55:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-88qj-3q6h-8m5q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Dashboard View Plugin did not escape the build description on the Latest Builds View. This resulted in a cross-site scripting vulnerability exploitable by attackers able to control the description of builds shown on that view.</p>\n<p>Dashboard View Plugin now applies the configured markup formatter to the build description, rendering it as it appears elsewhere in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10396\">https://nvd.nist.gov/vuln/detail/CVE-2019-10396</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1489\">https://jenkins.io/security/advisory/2019-09-12/#SECURITY-1489</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/09/12/2\">http://www.openwall.com/lists/oss-security/2019/09/12/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv4q-4h24-23qr\">https://github.com/advisories/GHSA-fv4q-4h24-23qr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv4q-4h24-23qr",
            "title": "[org.jenkins-ci.plugins:dashboard-view] Jenkins Dashboard View Plugin vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-02T16:40:43.000Z",
            "date_published": "2022-05-24T16:55:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv4q-4h24-23qr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The annotation displayer does not execute the content in a restricted context. This allows executing anything with the right of the author of any document by annotating the document.</p>\n<p>To reproduce: add an annotation with the content <code>{{groovy}}print \"hello\"{{/groovy}}</code> and click the yellow scare to get a display of the annotation inline.</p>\n<p>The result is \"hello\" but it should be an error suggesting that it's not allowed to use the groovy macro.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in XWiki 13.10.11, 14.4.7 and 14.10.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no easy workaround except to upgrade.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></p>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://jira.xwiki.org/\">Jira XWiki.org</a></li>\n<li>Email us at <a href=\"mailto:security@xwiki.org\">Security Mailing List</a></li>\n</ul>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by René de Sain @renniepak.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7\">https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26475\">https://nvd.nist.gov/vuln/detail/CVE-2023-26475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr",
            "title": "[org.xwiki.platform:xwiki-platform-annotation-ui] xwiki-platform vulnerable to Remote Code Execution in Annotations",
            "date_modified": "2023-03-03T00:15:44.000Z",
            "date_published": "2023-03-02T15:16:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The annotation displayer does not execute the content in a restricted context. This allows executing anything with the right of the author of any document by annotating the document.</p>\n<p>To reproduce: add an annotation with the content <code>{{groovy}}print \"hello\"{{/groovy}}</code> and click the yellow scare to get a display of the annotation inline.</p>\n<p>The result is \"hello\" but it should be an error suggesting that it's not allowed to use the groovy macro.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in XWiki 13.10.11, 14.4.7 and 14.10.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no easy workaround except to upgrade.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></p>\n<p><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://jira.xwiki.org/\">Jira XWiki.org</a></li>\n<li>Email us at <a href=\"mailto:security@xwiki.org\">Security Mailing List</a></li>\n</ul>\n<h3 id=\"attribution\">Attribution</h3>\n<p>This vulnerability has been reported by René de Sain @renniepak.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7\">https://github.com/xwiki/xwiki-platform/commit/d87d7bfd8db18c20d3264f98c6deefeae93b99f7</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20360\">https://jira.xwiki.org/browse/XWIKI-20360</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20384\">https://jira.xwiki.org/browse/XWIKI-20384</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26475\">https://nvd.nist.gov/vuln/detail/CVE-2023-26475</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6f5-8jj5-cxhr\">https://github.com/advisories/GHSA-h6f5-8jj5-cxhr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr",
            "title": "[org.xwiki.platform:xwiki-platform-annotation-ui] xwiki-platform vulnerable to Remote Code Execution in Annotations",
            "date_modified": "2023-03-03T00:15:44.000Z",
            "date_published": "2023-03-02T15:16:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6f5-8jj5-cxhr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Google Calendar Plugin stores a calendar password unencrypted in job <code>config.xml</code> files on the Jenkins controller. This password can be viewed by users with Extended Read permission, or access to the Jenkins controller file system.</p>\n<p>As of publication of this advisory, there is no fix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10425\">https://nvd.nist.gov/vuln/detail/CVE-2019-10425</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1572\">https://jenkins.io/security/advisory/2019-09-25/#SECURITY-1572</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/09/25/3\">http://www.openwall.com/lists/oss-security/2019/09/25/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gq4-x72r-6xcr\">https://github.com/advisories/GHSA-8gq4-x72r-6xcr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gq4-x72r-6xcr",
            "title": "[org.jenkins-ci.plugins:gcal] Jenkins Google Calendar Plugin has Insufficiently Protected Credentials",
            "date_modified": "2023-03-01T22:37:56.000Z",
            "date_published": "2022-05-24T16:56:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gq4-x72r-6xcr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in java-xmlbuilder up to 1.1. It has been rated as problematic. Affected by this issue is some unknown functionality. The manipulation leads to xml external entity reference. Upgrading to version 1.2 is able to address this issue. The name of the patch is e6fddca201790abab4f2c274341c0bb8835c3e73. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-221480.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2014-125087\">https://nvd.nist.gov/vuln/detail/CVE-2014-125087</a></li>\n<li><a href=\"https://github.com/jmurty/java-xmlbuilder/issues/6\">https://github.com/jmurty/java-xmlbuilder/issues/6</a></li>\n<li><a href=\"https://github.com/jmurty/java-xmlbuilder/commit/e6fddca201790abab4f2c274341c0bb8835c3e73\">https://github.com/jmurty/java-xmlbuilder/commit/e6fddca201790abab4f2c274341c0bb8835c3e73</a></li>\n<li><a href=\"https://github.com/jmurty/java-xmlbuilder/releases/tag/v1.2\">https://github.com/jmurty/java-xmlbuilder/releases/tag/v1.2</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.221480\">https://vuldb.com/?ctiid.221480</a></li>\n<li><a href=\"https://vuldb.com/?id.221480\">https://vuldb.com/?id.221480</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3vrc-rrpw-r5pw\">https://github.com/advisories/GHSA-3vrc-rrpw-r5pw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3vrc-rrpw-r5pw",
            "title": "[com.jamesmurty.utils:java-xmlbuilder] java-xmlbuilder vulnerable to XML External Entity Reference",
            "date_modified": "2023-03-01T20:46:07.000Z",
            "date_published": "2023-02-19T18:30:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3vrc-rrpw-r5pw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Thrift Java client library versions 0.5.0 prior to 0.9.3-1 and 0.10.0 prior to 0.12.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1320\">https://nvd.nist.gov/vuln/detail/CVE-2018-1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:2413\">https://access.redhat.com/errata/RHSA-2019:2413</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/07c3cd5a2953a4b253eee4437b1397b1603d0f886437e19b657d2c54@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/07c3cd5a2953a4b253eee4437b1397b1603d0f886437e19b657d2c54@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/187684ac8b94d55256253f5220cb55e8bd568afdf9a8a86e9bbb66c9@%3Cdevnull.infra.apache.org%3E\">https://lists.apache.org/thread.html/187684ac8b94d55256253f5220cb55e8bd568afdf9a8a86e9bbb66c9@%3Cdevnull.infra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/3d3b6849fcf4cd1e87703b3dde0d57aabeb9ba0193dc0cf3c97f545d@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/3d3b6849fcf4cd1e87703b3dde0d57aabeb9ba0193dc0cf3c97f545d@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/6b07f6f618155c777191b4fad8ade0f0cf4ed4c12a1a746ce903d816@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/6b07f6f618155c777191b4fad8ade0f0cf4ed4c12a1a746ce903d816@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/8be5b16c02567fff61b1284e5df433a4e38617bc7de4804402bf62be@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/8be5b16c02567fff61b1284e5df433a4e38617bc7de4804402bf62be@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3@%3Cuser.thrift.apache.org%3E\">https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3@%3Cuser.thrift.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/dbe3a39b48900318ad44494e8721f786901ba4520cd412c7698f534f@%3Cdev.storm.apache.org%3E\">https://lists.apache.org/thread.html/dbe3a39b48900318ad44494e8721f786901ba4520cd412c7698f534f@%3Cdev.storm.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/dfee89880c84874058c6a584d8128468f8d3c2ac25068ded91073adc@%3Cuser.storm.apache.org%3E\">https://lists.apache.org/thread.html/dfee89880c84874058c6a584d8128468f8d3c2ac25068ded91073adc@%3Cuser.storm.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/e825ff2f4e129c0ecdb6a19030b53c1ccdf810a8980667628d0c6a80@%3Cannounce.apache.org%3E\">https://lists.apache.org/thread.html/e825ff2f4e129c0ecdb6a19030b53c1ccdf810a8980667628d0c6a80@%3Cannounce.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r09c3dcdccf4b74ad13bda79b354e6b793255ccfe245cca1b8cee23f5@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r09c3dcdccf4b74ad13bda79b354e6b793255ccfe245cca1b8cee23f5@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r2278846f7ab06ec07a0aa31457235e0ded9191b216cba55f3f315f16@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r2278846f7ab06ec07a0aa31457235e0ded9191b216cba55f3f315f16@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r261972a3b14cf6f1dcd94b1b265e9ef644a38ccdf0d0238fa0c4d459@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r261972a3b14cf6f1dcd94b1b265e9ef644a38ccdf0d0238fa0c4d459@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3d71a6dbb063aa61ba81278fe622b20bfe7501bb3821c27695641ac3@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r3d71a6dbb063aa61ba81278fe622b20bfe7501bb3821c27695641ac3@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/02/msg00008.html\">https://lists.debian.org/debian-lts-announce/2019/02/msg00008.html</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K36361684\">https://support.f5.com/csp/article/K36361684</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2020.html\">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/07/24/3\">http://www.openwall.com/lists/oss-security/2019/07/24/3</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r1015eaadef8314daa9348aa423086a732cfeb998ceb5d42605c9b0b5@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r1015eaadef8314daa9348aa423086a732cfeb998ceb5d42605c9b0b5@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://github.com/apache/thrift/releases/tag/0.9.3.1\">https://github.com/apache/thrift/releases/tag/0.9.3.1</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/THRIFT-4506\">https://issues.apache.org/jira/browse/THRIFT-4506</a></li>\n<li><a href=\"https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106551\">https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106551</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjxj-f8rg-99wx\">https://github.com/advisories/GHSA-wjxj-f8rg-99wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjxj-f8rg-99wx",
            "title": "[org.apache.thrift:libthrift] Improper Input Validation in Apache Thrift",
            "date_modified": "2023-03-01T20:05:51.000Z",
            "date_published": "2019-01-17T13:56:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjxj-f8rg-99wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Thrift Java client library versions 0.5.0 prior to 0.9.3-1 and 0.10.0 prior to 0.12.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1320\">https://nvd.nist.gov/vuln/detail/CVE-2018-1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:2413\">https://access.redhat.com/errata/RHSA-2019:2413</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/07c3cd5a2953a4b253eee4437b1397b1603d0f886437e19b657d2c54@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/07c3cd5a2953a4b253eee4437b1397b1603d0f886437e19b657d2c54@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/187684ac8b94d55256253f5220cb55e8bd568afdf9a8a86e9bbb66c9@%3Cdevnull.infra.apache.org%3E\">https://lists.apache.org/thread.html/187684ac8b94d55256253f5220cb55e8bd568afdf9a8a86e9bbb66c9@%3Cdevnull.infra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/3d3b6849fcf4cd1e87703b3dde0d57aabeb9ba0193dc0cf3c97f545d@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/3d3b6849fcf4cd1e87703b3dde0d57aabeb9ba0193dc0cf3c97f545d@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/519eb0fd45642dcecd9ff74cb3e71c20a4753f7d82e2f07864b5108f@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/6b07f6f618155c777191b4fad8ade0f0cf4ed4c12a1a746ce903d816@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/6b07f6f618155c777191b4fad8ade0f0cf4ed4c12a1a746ce903d816@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/8be5b16c02567fff61b1284e5df433a4e38617bc7de4804402bf62be@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/8be5b16c02567fff61b1284e5df433a4e38617bc7de4804402bf62be@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E\">https://lists.apache.org/thread.html/b0656d359c7d40ec9f39c8cc61bca66802ef9a2a12ee199f5b0c1442@%3Cdev.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3@%3Cuser.thrift.apache.org%3E\">https://lists.apache.org/thread.html/da5234b5e78f1c99190407f791dfe1bf6c58de8d30d15974a9669be3@%3Cuser.thrift.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/dbe3a39b48900318ad44494e8721f786901ba4520cd412c7698f534f@%3Cdev.storm.apache.org%3E\">https://lists.apache.org/thread.html/dbe3a39b48900318ad44494e8721f786901ba4520cd412c7698f534f@%3Cdev.storm.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/dfee89880c84874058c6a584d8128468f8d3c2ac25068ded91073adc@%3Cuser.storm.apache.org%3E\">https://lists.apache.org/thread.html/dfee89880c84874058c6a584d8128468f8d3c2ac25068ded91073adc@%3Cuser.storm.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/e825ff2f4e129c0ecdb6a19030b53c1ccdf810a8980667628d0c6a80@%3Cannounce.apache.org%3E\">https://lists.apache.org/thread.html/e825ff2f4e129c0ecdb6a19030b53c1ccdf810a8980667628d0c6a80@%3Cannounce.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E\">https://lists.apache.org/thread.html/f9bc3e55f4e28d1dcd1a69aae6d53e609a758e34d2869b4d798e13cc@%3Cissues.drill.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r09c3dcdccf4b74ad13bda79b354e6b793255ccfe245cca1b8cee23f5@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r09c3dcdccf4b74ad13bda79b354e6b793255ccfe245cca1b8cee23f5@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r2278846f7ab06ec07a0aa31457235e0ded9191b216cba55f3f315f16@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r2278846f7ab06ec07a0aa31457235e0ded9191b216cba55f3f315f16@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r261972a3b14cf6f1dcd94b1b265e9ef644a38ccdf0d0238fa0c4d459@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r261972a3b14cf6f1dcd94b1b265e9ef644a38ccdf0d0238fa0c4d459@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r3d71a6dbb063aa61ba81278fe622b20bfe7501bb3821c27695641ac3@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r3d71a6dbb063aa61ba81278fe622b20bfe7501bb3821c27695641ac3@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r4d3f1d3e333d9c2b2f6e6ae8ed8750d4de03410ac294bcd12c7eefa3@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/02/msg00008.html\">https://lists.debian.org/debian-lts-announce/2019/02/msg00008.html</a></li>\n<li><a href=\"https://support.f5.com/csp/article/K36361684\">https://support.f5.com/csp/article/K36361684</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2020.html\">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html\">https://www.oracle.com/technetwork/security-advisory/cpuoct2019-5072832.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/07/24/3\">http://www.openwall.com/lists/oss-security/2019/07/24/3</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r1015eaadef8314daa9348aa423086a732cfeb998ceb5d42605c9b0b5@%3Ccommits.cassandra.apache.org%3E\">https://lists.apache.org/thread.html/r1015eaadef8314daa9348aa423086a732cfeb998ceb5d42605c9b0b5@%3Ccommits.cassandra.apache.org%3E</a></li>\n<li><a href=\"https://github.com/apache/thrift/releases/tag/0.9.3.1\">https://github.com/apache/thrift/releases/tag/0.9.3.1</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/THRIFT-4506\">https://issues.apache.org/jira/browse/THRIFT-4506</a></li>\n<li><a href=\"https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106551\">https://web.archive.org/web/20200227094237/http://www.securityfocus.com/bid/106551</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wjxj-f8rg-99wx\">https://github.com/advisories/GHSA-wjxj-f8rg-99wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wjxj-f8rg-99wx",
            "title": "[org.apache.thrift:libthrift] Improper Input Validation in Apache Thrift",
            "date_modified": "2023-03-01T20:05:51.000Z",
            "date_published": "2019-01-17T13:56:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wjxj-f8rg-99wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The <code>execute-actions-email</code> endpoint of the Keycloak Admin REST API allows a malicious actor to send emails containing phishing links to Keycloak users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keycloak/keycloak/security/advisories/GHSA-m4fv-gm5m-4725\">https://github.com/keycloak/keycloak/security/advisories/GHSA-m4fv-gm5m-4725</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/pull/16764\">https://github.com/keycloak/keycloak/pull/16764</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/fc3c61235fa30132123c17ed8702ff7b3a672fe9\">https://github.com/keycloak/keycloak/commit/fc3c61235fa30132123c17ed8702ff7b3a672fe9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m4fv-gm5m-4725\">https://github.com/advisories/GHSA-m4fv-gm5m-4725</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m4fv-gm5m-4725",
            "title": "[org.keycloak:keycloak-services] HTML Injection in Keycloak Admin REST API",
            "date_modified": "2023-03-01T17:58:02.000Z",
            "date_published": "2023-03-01T17:58:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m4fv-gm5m-4725"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A reflected cross-site scripting (XSS) vulnerability was found in the <code>oob</code> OAuth endpoint due to incorrect null-byte handling. This issue allows a malicious link to insert an arbitrary URI into a Keycloak error page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keycloak/keycloak/security/advisories/GHSA-9hhc-pj4w-w5rv\">https://github.com/keycloak/keycloak/security/advisories/GHSA-9hhc-pj4w-w5rv</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/pull/16774\">https://github.com/keycloak/keycloak/pull/16774</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/30d0e9d22dae51392e5a3748a1c68c116667359a\">https://github.com/keycloak/keycloak/commit/30d0e9d22dae51392e5a3748a1c68c116667359a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9hhc-pj4w-w5rv\">https://github.com/advisories/GHSA-9hhc-pj4w-w5rv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9hhc-pj4w-w5rv",
            "title": "[org.keycloak:keycloak-parent] Keycloak Cross-site Scripting on OpenID connect login service",
            "date_modified": "2023-03-01T17:38:57.000Z",
            "date_published": "2023-03-01T17:38:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9hhc-pj4w-w5rv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Keycloak. Under specific circumstances, HTML entities are not sanitized during user impersonation, resulting in a Cross-site scripting (XSS) vulnerability.</p>\n<h2 id=\"details\">Details</h2>\n<p>This issue is the result of code found in the exception here: <a href=\"https://github.com/keycloak/keycloak/blob/48835576daa158443f69917ac309e1a7c951bc87/services/src/main/java/org/keycloak/authentication/AuthenticationProcessor.java#L1045\">https://github.com/keycloak/keycloak/blob/48835576daa158443f69917ac309e1a7c951bc87/services/src/main/java/org/keycloak/authentication/AuthenticationProcessor.java#L1045</a></p>\n<h2 id=\"steps-to-reproduce\">Steps to reproduce</h2>\n<p>When using the legacy admin console:</p>\n<ol>\n<li>Sign in as Admin user in first tab.</li>\n<li>In that tab create new user in keycloak admin section &gt; intercept user creation request and modify it by including malicious js script there (in username field).</li>\n<li>Sign in as newly created user in second tab (same browser window but second tab).</li>\n<li>Navigate back to first tab where you are signed in as admin, navigate to admin console which lists all application users.</li>\n<li>Choose any user (except newly created malicious one) – modify anything for that user in his settings. E.g. navigate to credentials tab and set new credentials for him. Also set new password as temporary.</li>\n<li>After update for that user is made, use impersonate option on that modified user.</li>\n<li>You should see window with form which requires providing new credentials – fill it and submit request.</li>\n<li>Just after submiting request user will get notified that “You are already authenticated as different user ‘[user + payload]’ in this session. Please sign out first.”  And malicious payload will be executed instantly.</li>\n</ol>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/keycloak/keycloak/security/advisories/GHSA-w354-2f3c-qvg9\">https://github.com/keycloak/keycloak/security/advisories/GHSA-w354-2f3c-qvg9</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/cve-2022-1438\">https://access.redhat.com/security/cve/cve-2022-1438</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2031904\">https://bugzilla.redhat.com/show_bug.cgi?id=2031904</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/blob/48835576daa158443f69917ac309e1a7c951bc87/services/src/main/java/org/keycloak/authentication/AuthenticationProcessor.java#L1045\">https://github.com/keycloak/keycloak/blob/48835576daa158443f69917ac309e1a7c951bc87/services/src/main/java/org/keycloak/authentication/AuthenticationProcessor.java#L1045</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w354-2f3c-qvg9\">https://github.com/advisories/GHSA-w354-2f3c-qvg9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w354-2f3c-qvg9",
            "title": "[org.keycloak:keycloak-services] Keycloak vulnerable to Cross-site Scripting",
            "date_modified": "2023-03-01T16:18:56.000Z",
            "date_published": "2023-03-01T16:18:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w354-2f3c-qvg9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package <code>org.apache.tika:tika-parsers</code> before version 1.18 are vulnerable to Denial of Service (DoS) via a carefully crafted (or fuzzed) file that can trigger an infinite loop via the ChmParser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1339\">https://nvd.nist.gov/vuln/detail/CVE-2018-1339</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2669\">https://access.redhat.com/errata/RHSA-2018:2669</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/4d2cb5c819401bb075e2a1130e0d14f0404a136541a6f91da0225828@%3Cdev.tika.apache.org%3E\">https://lists.apache.org/thread.html/4d2cb5c819401bb075e2a1130e0d14f0404a136541a6f91da0225828@%3Cdev.tika.apache.org%3E</a></li>\n<li><a href=\"https://github.com/apache/tika/commit/1b6ca3685c196cfd89f5f95c19cc919ce10c5aff#diff-43f8cbe58aaab159ce88bd95fafc46dd\">https://github.com/apache/tika/commit/1b6ca3685c196cfd89f5f95c19cc919ce10c5aff#diff-43f8cbe58aaab159ce88bd95fafc46dd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p699-3wgc-7h72\">https://github.com/advisories/GHSA-p699-3wgc-7h72</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p699-3wgc-7h72",
            "title": "[org.apache.tika:tika-parsers] org.apache.tika:tika-parsers has an Infinite Loop vulnerability",
            "date_modified": "2023-02-28T22:57:52.000Z",
            "date_published": "2018-10-17T15:43:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p699-3wgc-7h72"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>MITM can enable Zip-Slip.</p>\n<h3 id=\"vulnerability\">Vulnerability</h3>\n<h4 id=\"vulnerability-1-scannerjava\">Vulnerability 1: <code>Scanner.java</code></h4>\n<p>There is no validation that the zip file being unpacked has entries that are not maliciously writing outside of the intended destination directory.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357</a></p>\n<p>This zip archive is downloaded over HTTP instead of HTTPS, leaving it vulnerable to compromise in-flight.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136</a></p>\n<h5 id=\"vulnerability-2-terminologycachemanagerjava\">Vulnerability 2: <code>TerminologyCacheManager.java</code></h5>\n<p><strong>Note:</strong> While these links point to only one implementation, both implementations of <code>TerminologyCacheManager.java</code> are vulnerable to this as their code seems to be duplicated.</p>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java</a></li>\n</ul>\n<p>While there is validation in this bit of logic that attempts to validate that the zip file doesn't contain malicious entries that escape the destination directory, the guard is insufficient.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113</a></p>\n<p>This is because the <code>Utilities.path(String... path)</code> method does not normalize the path, although it seems to be attempting to do so.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675</a></p>\n<p>The normalization only occurs if the path element starts with a path traversal payload. As an example, calling <code>Utilities.path(\"/base\", \"/child/../test\")</code> will return the string <code>\"/base/child/../test\"</code>.</p>\n<p>This guard logic can, thus, be easily bypassed:\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104</a></p>\n<p>Assuming an attacker can control the return value of <code>ze.getName()</code>, they can supply a value like <code>/anything/../../../../zipsip-protection-bypass.txt</code>.</p>\n<p>Similarly, an attacker can control the contents of the Zip file via a MITM attack as this logic is used with resources not downloaded over HTTPS.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Unknown</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Unknown</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22\">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22</a></li>\n<li><a href=\"https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg\">https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24057\">https://nvd.nist.gov/vuln/detail/CVE-2023-24057</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc\">https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqh6-9574-5x22\">https://github.com/advisories/GHSA-jqh6-9574-5x22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22",
            "title": "[ca.uhn.hapi.fhir:org.hl7.fhir.validation]  MITM based Zip Slip in `ca.uhn.hapi.fhir:org.hl7.fhir.core`",
            "date_modified": "2023-02-28T20:40:28.000Z",
            "date_published": "2023-01-23T22:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>MITM can enable Zip-Slip.</p>\n<h3 id=\"vulnerability\">Vulnerability</h3>\n<h4 id=\"vulnerability-1-scannerjava\">Vulnerability 1: <code>Scanner.java</code></h4>\n<p>There is no validation that the zip file being unpacked has entries that are not maliciously writing outside of the intended destination directory.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357</a></p>\n<p>This zip archive is downloaded over HTTP instead of HTTPS, leaving it vulnerable to compromise in-flight.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136</a></p>\n<h5 id=\"vulnerability-2-terminologycachemanagerjava\">Vulnerability 2: <code>TerminologyCacheManager.java</code></h5>\n<p><strong>Note:</strong> While these links point to only one implementation, both implementations of <code>TerminologyCacheManager.java</code> are vulnerable to this as their code seems to be duplicated.</p>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java</a></li>\n</ul>\n<p>While there is validation in this bit of logic that attempts to validate that the zip file doesn't contain malicious entries that escape the destination directory, the guard is insufficient.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113</a></p>\n<p>This is because the <code>Utilities.path(String... path)</code> method does not normalize the path, although it seems to be attempting to do so.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675</a></p>\n<p>The normalization only occurs if the path element starts with a path traversal payload. As an example, calling <code>Utilities.path(\"/base\", \"/child/../test\")</code> will return the string <code>\"/base/child/../test\"</code>.</p>\n<p>This guard logic can, thus, be easily bypassed:\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104</a></p>\n<p>Assuming an attacker can control the return value of <code>ze.getName()</code>, they can supply a value like <code>/anything/../../../../zipsip-protection-bypass.txt</code>.</p>\n<p>Similarly, an attacker can control the contents of the Zip file via a MITM attack as this logic is used with resources not downloaded over HTTPS.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Unknown</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Unknown</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22\">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22</a></li>\n<li><a href=\"https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg\">https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24057\">https://nvd.nist.gov/vuln/detail/CVE-2023-24057</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc\">https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqh6-9574-5x22\">https://github.com/advisories/GHSA-jqh6-9574-5x22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22",
            "title": "[ca.uhn.hapi.fhir:org.hl7.fhir.utilities]  MITM based Zip Slip in `ca.uhn.hapi.fhir:org.hl7.fhir.core`",
            "date_modified": "2023-02-28T20:40:28.000Z",
            "date_published": "2023-01-23T22:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>MITM can enable Zip-Slip.</p>\n<h3 id=\"vulnerability\">Vulnerability</h3>\n<h4 id=\"vulnerability-1-scannerjava\">Vulnerability 1: <code>Scanner.java</code></h4>\n<p>There is no validation that the zip file being unpacked has entries that are not maliciously writing outside of the intended destination directory.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357</a></p>\n<p>This zip archive is downloaded over HTTP instead of HTTPS, leaving it vulnerable to compromise in-flight.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136</a></p>\n<h5 id=\"vulnerability-2-terminologycachemanagerjava\">Vulnerability 2: <code>TerminologyCacheManager.java</code></h5>\n<p><strong>Note:</strong> While these links point to only one implementation, both implementations of <code>TerminologyCacheManager.java</code> are vulnerable to this as their code seems to be duplicated.</p>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java</a></li>\n</ul>\n<p>While there is validation in this bit of logic that attempts to validate that the zip file doesn't contain malicious entries that escape the destination directory, the guard is insufficient.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113</a></p>\n<p>This is because the <code>Utilities.path(String... path)</code> method does not normalize the path, although it seems to be attempting to do so.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675</a></p>\n<p>The normalization only occurs if the path element starts with a path traversal payload. As an example, calling <code>Utilities.path(\"/base\", \"/child/../test\")</code> will return the string <code>\"/base/child/../test\"</code>.</p>\n<p>This guard logic can, thus, be easily bypassed:\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104</a></p>\n<p>Assuming an attacker can control the return value of <code>ze.getName()</code>, they can supply a value like <code>/anything/../../../../zipsip-protection-bypass.txt</code>.</p>\n<p>Similarly, an attacker can control the contents of the Zip file via a MITM attack as this logic is used with resources not downloaded over HTTPS.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Unknown</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Unknown</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22\">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22</a></li>\n<li><a href=\"https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg\">https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24057\">https://nvd.nist.gov/vuln/detail/CVE-2023-24057</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc\">https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqh6-9574-5x22\">https://github.com/advisories/GHSA-jqh6-9574-5x22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22",
            "title": "[ca.uhn.hapi.fhir:org.hl7.fhir.r5]  MITM based Zip Slip in `ca.uhn.hapi.fhir:org.hl7.fhir.core`",
            "date_modified": "2023-02-28T20:40:28.000Z",
            "date_published": "2023-01-23T22:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>MITM can enable Zip-Slip.</p>\n<h3 id=\"vulnerability\">Vulnerability</h3>\n<h4 id=\"vulnerability-1-scannerjava\">Vulnerability 1: <code>Scanner.java</code></h4>\n<p>There is no validation that the zip file being unpacked has entries that are not maliciously writing outside of the intended destination directory.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L335-L357</a></p>\n<p>This zip archive is downloaded over HTTP instead of HTTPS, leaving it vulnerable to compromise in-flight.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136\">https://github.com/hapifhir/org.hl7.fhir.core/blob/8c43e21094af971303131efd081503e5a112db4b/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/Scanner.java#L136</a></p>\n<h5 id=\"vulnerability-2-terminologycachemanagerjava\">Vulnerability 2: <code>TerminologyCacheManager.java</code></h5>\n<p><strong>Note:</strong> While these links point to only one implementation, both implementations of <code>TerminologyCacheManager.java</code> are vulnerable to this as their code seems to be duplicated.</p>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r4b/src/main/java/org/hl7/fhir/r4b/terminologies/TerminologyCacheManager.java</a></li>\n</ul>\n<p>While there is validation in this bit of logic that attempts to validate that the zip file doesn't contain malicious entries that escape the destination directory, the guard is insufficient.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L97-L113</a></p>\n<p>This is because the <code>Utilities.path(String... path)</code> method does not normalize the path, although it seems to be attempting to do so.\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/Utilities.java#L617-L675</a></p>\n<p>The normalization only occurs if the path element starts with a path traversal payload. As an example, calling <code>Utilities.path(\"/base\", \"/child/../test\")</code> will return the string <code>\"/base/child/../test\"</code>.</p>\n<p>This guard logic can, thus, be easily bypassed:\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L100-L104</a></p>\n<p>Assuming an attacker can control the return value of <code>ze.getName()</code>, they can supply a value like <code>/anything/../../../../zipsip-protection-bypass.txt</code>.</p>\n<p>Similarly, an attacker can control the contents of the Zip file via a MITM attack as this logic is used with resources not downloaded over HTTPS.</p>\n<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73\">https://github.com/hapifhir/org.hl7.fhir.core/blob/f58b7acfb5e393cac52cc5bbb170bdb669c2880e/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/terminologies/TerminologyCacheManager.java#L66-L73</a></p>\n<h3 id=\"patches\">Patches</h3>\n<p>Unknown</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Unknown</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://snyk.io/research/zip-slip-vulnerability\">https://snyk.io/research/zip-slip-vulnerability</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22\">https://github.com/hapifhir/org.hl7.fhir.core/security/advisories/GHSA-jqh6-9574-5x22</a></li>\n<li><a href=\"https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg\">https://github.com/HL7/fhir-ig-publisher/security/advisories/GHSA-xr8x-pxm6-prjg</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24057\">https://nvd.nist.gov/vuln/detail/CVE-2023-24057</a></li>\n<li><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc\">https://github.com/hapifhir/org.hl7.fhir.core/commit/b50aec59124416b7315a49220cfc3999223414cc</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jqh6-9574-5x22\">https://github.com/advisories/GHSA-jqh6-9574-5x22</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22",
            "title": "[ca.uhn.hapi.fhir:org.hl7.fhir.r4b]  MITM based Zip Slip in `ca.uhn.hapi.fhir:org.hl7.fhir.core`",
            "date_modified": "2023-02-28T20:40:28.000Z",
            "date_published": "2023-01-23T22:05:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jqh6-9574-5x22"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}