{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Groovy Code Injection &amp; SpEL Injection which lead to Remote Code Execution. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45029\">https://nvd.nist.gov/vuln/detail/CVE-2021-45029</a></li>\n<li><a href=\"https://lists.apache.org/thread/3zzmwvg3012tg306x8o893fvdcssx639\">https://lists.apache.org/thread/3zzmwvg3012tg306x8o893fvdcssx639</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/8\">http://www.openwall.com/lists/oss-security/2022/01/25/8</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/1\">http://www.openwall.com/lists/oss-security/2022/01/26/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh38-x2wm-xmc8\">https://github.com/advisories/GHSA-gh38-x2wm-xmc8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gh38-x2wm-xmc8",
            "title": "[org.apache.shenyu:shenyu-common] Code injection in ShenYu",
            "date_modified": "2022-01-28T22:13:27.000Z",
            "date_published": "2022-01-28T22:13:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gh38-x2wm-xmc8"
            }
        },
        {
            "content_html": "<p>User can access /plugin api without authentication. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23944\">https://nvd.nist.gov/vuln/detail/CVE-2022-23944</a></li>\n<li><a href=\"https://lists.apache.org/thread/dbrjnnlrf80dr0f92k5r2ysfvf1kr67y\">https://lists.apache.org/thread/dbrjnnlrf80dr0f92k5r2ysfvf1kr67y</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/5\">http://www.openwall.com/lists/oss-security/2022/01/25/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/15\">http://www.openwall.com/lists/oss-security/2022/01/25/15</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/2\">http://www.openwall.com/lists/oss-security/2022/01/26/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6v39-p2xq-g5c3\">https://github.com/advisories/GHSA-6v39-p2xq-g5c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6v39-p2xq-g5c3",
            "title": "[org.apache.shenyu:shenyu-common] Missing authentication in ShenYu",
            "date_modified": "2022-01-28T22:13:44.000Z",
            "date_published": "2022-01-28T22:13:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6v39-p2xq-g5c3"
            }
        },
        {
            "content_html": "<p>Missing authentication on ShenYu Admin when register by HTTP. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23945\">https://nvd.nist.gov/vuln/detail/CVE-2022-23945</a></li>\n<li><a href=\"https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s\">https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/6\">http://www.openwall.com/lists/oss-security/2022/01/25/6</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/3\">http://www.openwall.com/lists/oss-security/2022/01/26/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7rjp-fgwj-47rw\">https://github.com/advisories/GHSA-7rjp-fgwj-47rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7rjp-fgwj-47rw",
            "title": "[org.apache.shenyu:shenyu-common] Missing authentication in ShenYu",
            "date_modified": "2022-01-28T22:14:11.000Z",
            "date_published": "2022-01-28T22:14:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7rjp-fgwj-47rw"
            }
        },
        {
            "content_html": "<p>Apache Karaf obr:* commands and run goal on the karaf-maven-plugin have partial path traversal which allows to break out of expected folder. The risk is low as obr:* commands are not very used and the entry is set by user. This has been fixed in revision: <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a> <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a> Mitigation: Apache Karaf users should upgrade to 4.2.15 or 4.3.6 or later as soon as possible, or use correct path. JIRA Tickets: <a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22932\">https://nvd.nist.gov/vuln/detail/CVE-2022-22932</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2022-22932.txt\">https://karaf.apache.org/security/cve-2022-22932.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/pull/1485\">https://github.com/apache/karaf/pull/1485</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-544x-2jx9-4pfg\">https://github.com/advisories/GHSA-544x-2jx9-4pfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg",
            "title": "[org.apache.karaf:apache-karaf] Path traversal in Apache Karaf",
            "date_modified": "2022-01-28T22:25:03.000Z",
            "date_published": "2022-01-28T22:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg"
            }
        },
        {
            "content_html": "<p>Apache Karaf obr:* commands and run goal on the karaf-maven-plugin have partial path traversal which allows to break out of expected folder. The risk is low as obr:* commands are not very used and the entry is set by user. This has been fixed in revision: <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a> <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a> Mitigation: Apache Karaf users should upgrade to 4.2.15 or 4.3.6 or later as soon as possible, or use correct path. JIRA Tickets: <a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22932\">https://nvd.nist.gov/vuln/detail/CVE-2022-22932</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2022-22932.txt\">https://karaf.apache.org/security/cve-2022-22932.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/pull/1485\">https://github.com/apache/karaf/pull/1485</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-544x-2jx9-4pfg\">https://github.com/advisories/GHSA-544x-2jx9-4pfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg",
            "title": "[org.apache.karaf:apache-karaf] Path traversal in Apache Karaf",
            "date_modified": "2022-01-28T22:25:03.000Z",
            "date_published": "2022-01-28T22:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg"
            }
        },
        {
            "content_html": "<p>Apache Karaf allows monitoring of applications and the Java runtime by using the Java Management Extensions (JMX). JMX is a Java RMI based technology that relies on Java serialized objects for client server communication. Whereas the default JMX implementation is hardened against unauthenticated deserialization attacks, the implementation used by Apache Karaf is not protected against this kind of attack. The impact of Java deserialization vulnerabilities strongly depends on the classes that are available within the targets class path. Generally speaking, deserialization of untrusted data does always represent a high security risk and should be prevented. The risk is low as, by default, Karaf uses a limited set of classes in the JMX server class path. It depends of system scoped classes (e.g. jar in the lib folder).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41766\">https://nvd.nist.gov/vuln/detail/CVE-2021-41766</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2021-41766.txt\">https://karaf.apache.org/security/cve-2021-41766.txt</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7312\">https://issues.apache.org/jira/browse/KARAF-7312</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh5g-9m4v-9vv9\">https://github.com/advisories/GHSA-jh5g-9m4v-9vv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9",
            "title": "[org.apache.karaf:apache-karaf] Insecure Java Deserialization in Apache Karaf",
            "date_modified": "2022-01-28T22:24:48.000Z",
            "date_published": "2022-01-28T22:24:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9"
            }
        },
        {
            "content_html": "<p>The HTTP response will disclose the user password. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23223\">https://nvd.nist.gov/vuln/detail/CVE-2022-23223</a></li>\n<li><a href=\"https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s\">https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/7\">http://www.openwall.com/lists/oss-security/2022/01/25/7</a></li>\n<li><a href=\"https://github.com/apache/incubator-shenyu/releases/tag/v2.4.2\">https://github.com/apache/incubator-shenyu/releases/tag/v2.4.2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/4\">http://www.openwall.com/lists/oss-security/2022/01/26/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7wq4-89xx-g62j\">https://github.com/advisories/GHSA-7wq4-89xx-g62j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7wq4-89xx-g62j",
            "title": "[org.apache.shenyu:shenyu-common] Password exposure in ShenYu",
            "date_modified": "2022-01-28T22:13:57.000Z",
            "date_published": "2022-01-28T22:13:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7wq4-89xx-g62j"
            }
        },
        {
            "content_html": "<p>There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23437\">https://nvd.nist.gov/vuln/detail/CVE-2022-23437</a></li>\n<li><a href=\"https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl\">https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/24/3\">http://www.openwall.com/lists/oss-security/2022/01/24/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h65f-jvqw-m9fj\">https://github.com/advisories/GHSA-h65f-jvqw-m9fj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h65f-jvqw-m9fj",
            "title": "[xerces:xercesImpl] Infinite Loop in Apache Xerces Java",
            "date_modified": "2022-01-27T16:13:07.000Z",
            "date_published": "2022-01-27T16:13:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h65f-jvqw-m9fj"
            }
        },
        {
            "content_html": "<p>Improper Restriction of XML External Entity Reference in GitHub repository skylot/jadx prior to 1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0219\">https://nvd.nist.gov/vuln/detail/CVE-2022-0219</a></li>\n<li><a href=\"https://github.com/skylot/jadx/commit/d22db30166e7cb369d72be41382bb63ac8b81c52\">https://github.com/skylot/jadx/commit/d22db30166e7cb369d72be41382bb63ac8b81c52</a></li>\n<li><a href=\"https://huntr.dev/bounties/0d093863-29e8-4dd7-a885-64f76d50bf5e\">https://huntr.dev/bounties/0d093863-29e8-4dd7-a885-64f76d50bf5e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8j4-96mx-rjcc\">https://github.com/advisories/GHSA-r8j4-96mx-rjcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8j4-96mx-rjcc",
            "title": "[io.github.skylot:jadx-core] Improper Restriction of XML External Entity Reference in Skylot jadx",
            "date_modified": "2022-01-21T18:13:42.000Z",
            "date_published": "2022-01-21T18:13:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8j4-96mx-rjcc"
            }
        },
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins 2.329 and earlier, LTS 2.319.1 and earlier allows attackers to trigger build of job without parameters when no security realm is set.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-20612\">https://nvd.nist.gov/vuln/detail/CVE-2022-20612</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2558\">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2558</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/12/6\">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>\n<li><a href=\"https://www.jenkins.io/changelog-stable/#v2.319.2\">https://www.jenkins.io/changelog-stable/#v2.319.2</a></li>\n<li><a href=\"https://www.jenkins.io/changelog/#v2.330\">https://www.jenkins.io/changelog/#v2.330</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p92q-7fhh-mq35\">https://github.com/advisories/GHSA-p92q-7fhh-mq35</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p92q-7fhh-mq35",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-Site Request Forgery in Jenkins",
            "date_modified": "2022-01-21T23:37:57.000Z",
            "date_published": "2022-01-21T23:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p92q-7fhh-mq35"
            }
        },
        {
            "content_html": "<p>H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23221\">https://nvd.nist.gov/vuln/detail/CVE-2022-23221</a></li>\n<li><a href=\"https://github.com/h2database/h2database/releases/tag/version-2.1.210\">https://github.com/h2database/h2database/releases/tag/version-2.1.210</a></li>\n<li><a href=\"https://github.com/h2database/h2database/security/advisories\">https://github.com/h2database/h2database/security/advisories</a></li>\n<li><a href=\"https://twitter.com/d0nkey_man/status/1483824727936450564\">https://twitter.com/d0nkey_man/status/1483824727936450564</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/165676/H2-Database-Console-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/165676/H2-Database-Console-Remote-Code-Execution.html</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2022/Jan/39\">http://seclists.org/fulldisclosure/2022/Jan/39</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-45hx-wfhj-473x\">https://github.com/advisories/GHSA-45hx-wfhj-473x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-45hx-wfhj-473x",
            "title": "[com.h2database:h2] Arbitrary code execution in H2 Console",
            "date_modified": "2022-01-27T18:28:15.000Z",
            "date_published": "2022-01-21T23:07:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-45hx-wfhj-473x"
            }
        },
        {
            "content_html": "<p>Jenkins Warnings Next Generation Plugin 9.10.2 and earlier does not restrict the name of a file when configuring custom ID, allowing attackers with Item/Configure permission to write and read specific files with a hard-coded suffix on the Jenkins controller file system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23107\">https://nvd.nist.gov/vuln/detail/CVE-2022-23107</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2090\">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2090</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/12/6\">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>\n<li><a href=\"https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/v9.10.3\">https://github.com/jenkinsci/warnings-ng-plugin/releases/tag/v9.10.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rvh4-g2rj-hr9c\">https://github.com/advisories/GHSA-rvh4-g2rj-hr9c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rvh4-g2rj-hr9c",
            "title": "[io.jenkins.plugins:warnings-ng] Path Traversal in Jenkins Warnings Next Generation Plugin",
            "date_modified": "2022-01-21T23:38:05.000Z",
            "date_published": "2022-01-21T23:38:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rvh4-g2rj-hr9c"
            }
        },
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins 2.329 and earlier, LTS 2.319.1 and earlier allows attackers to trigger build of job without parameters when no security realm is set.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-20612\">https://nvd.nist.gov/vuln/detail/CVE-2022-20612</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2558\">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2558</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/12/6\">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>\n<li><a href=\"https://www.jenkins.io/changelog-stable/#v2.319.2\">https://www.jenkins.io/changelog-stable/#v2.319.2</a></li>\n<li><a href=\"https://www.jenkins.io/changelog/#v2.330\">https://www.jenkins.io/changelog/#v2.330</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p92q-7fhh-mq35\">https://github.com/advisories/GHSA-p92q-7fhh-mq35</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p92q-7fhh-mq35",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-Site Request Forgery in Jenkins",
            "date_modified": "2022-01-21T23:37:57.000Z",
            "date_published": "2022-01-21T23:37:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p92q-7fhh-mq35"
            }
        },
        {
            "content_html": "<p>Jenkins Configuration as Code Plugin 1.55 and earlier used a non-constant time comparison function when validating an authentication token allowing attackers to use statistical methods to obtain a valid authentication token.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23106\">https://nvd.nist.gov/vuln/detail/CVE-2022-23106</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2141\">https://www.jenkins.io/security/advisory/2022-01-12/#SECURITY-2141</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/12/6\">http://www.openwall.com/lists/oss-security/2022/01/12/6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fpj7-9xm6-8hgr\">https://github.com/advisories/GHSA-fpj7-9xm6-8hgr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fpj7-9xm6-8hgr",
            "title": "[io.jenkins:configuration-as-code] Observable Discrepancy and Observable Timing Discrepancy in Jenkins Configuration as Code Plugin",
            "date_modified": "2022-01-21T23:38:30.000Z",
            "date_published": "2022-01-21T23:38:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fpj7-9xm6-8hgr"
            }
        },
        {
            "content_html": "<p>By design, the JDBCAppender in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from PatternLayout. The message converter, %m, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed. Note this issue only affects Log4j 1.x when specifically configured to use the JDBCAppender, which is not the default. Beginning in version 2.0-beta8, the JDBCAppender was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23305\">https://nvd.nist.gov/vuln/detail/CVE-2022-23305</a></li>\n<li><a href=\"https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y\">https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y</a></li>\n<li><a href=\"https://logging.apache.org/log4j/1.2/index.html\">https://logging.apache.org/log4j/1.2/index.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65fg-84f6-3jq3\">https://github.com/advisories/GHSA-65fg-84f6-3jq3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65fg-84f6-3jq3",
            "title": "[log4j:log4j] SQL Injection in Log4j 1.2.x",
            "date_modified": "2022-01-21T23:26:47.000Z",
            "date_published": "2022-01-21T23:26:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65fg-84f6-3jq3"
            }
        },
        {
            "content_html": "<p>JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23302\">https://nvd.nist.gov/vuln/detail/CVE-2022-23302</a></li>\n<li><a href=\"https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w\">https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w</a></li>\n<li><a href=\"https://logging.apache.org/log4j/1.2/index.html\">https://logging.apache.org/log4j/1.2/index.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w9p3-5cr8-m3jj\">https://github.com/advisories/GHSA-w9p3-5cr8-m3jj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w9p3-5cr8-m3jj",
            "title": "[log4j:log4j] Deserialization of Untrusted Data in Log4j 1.x",
            "date_modified": "2022-01-21T23:27:14.000Z",
            "date_published": "2022-01-21T23:27:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w9p3-5cr8-m3jj"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Sending an invalid Content Type header leads to memory leak in <code>DefaultArgumentConversionContext</code> as this type is erroneously used in static state.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in Micronaut 3.2.7 and above.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The default content type binder can be replaced in an existing Micronaut application to mitigate the issue:</p>\n<pre><code class=\"language-java\">package example;\n\nimport java.util.List;\nimport io.micronaut.context.annotation.Replaces;\nimport io.micronaut.core.convert.ConversionService;\nimport io.micronaut.http.MediaType;\nimport io.micronaut.http.bind.DefaultRequestBinderRegistry;\nimport io.micronaut.http.bind.binders.RequestArgumentBinder;\nimport jakarta.inject.Singleton;\n\n@Singleton\n@Replaces(DefaultRequestBinderRegistry.class)\nclass FixedRequestBinderRegistry extends DefaultRequestBinderRegistry {\n\n    public FixedRequestBinderRegistry(ConversionService conversionService,\n                                      List&lt;RequestArgumentBinder&gt; binders) {\n        super(conversionService, binders);\n    }\n\n    @Override\n    protected void registerDefaultConverters(ConversionService&lt;?&gt; conversionService) {\n        super.registerDefaultConverters(conversionService);\n        conversionService.addConverter(CharSequence.class, MediaType.class, charSequence -&gt; {\n            try {\n                return MediaType.of(charSequence);\n            } catch (IllegalArgumentException e) {\n                return null;\n            }\n        });\n    }\n}\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Commit that introduced the vulnerability <a href=\"https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3\">https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/micronaut-projects/micronaut-core/issues\">Micronaut Core</a></li>\n<li>Email us at <a href=\"mailto:info@micronaut.io\">info@micronaut.io</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-core/security/advisories/GHSA-2457-2263-mm9f\">https://github.com/micronaut-projects/micronaut-core/security/advisories/GHSA-2457-2263-mm9f</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3\">https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21700\">https://nvd.nist.gov/vuln/detail/CVE-2022-21700</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2457-2263-mm9f\">https://github.com/advisories/GHSA-2457-2263-mm9f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2457-2263-mm9f",
            "title": "[io.micronaut:micronaut-http] Memory leak in micronaut-core",
            "date_modified": "2022-01-21T23:19:36.000Z",
            "date_published": "2022-01-21T23:19:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2457-2263-mm9f"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Due to this library's use of an inefficient algorithm, it is vulnerable to a denial of service attack when a maliciously crafted input is passed to <code>DecodeFromBytes</code> or other CBOR decoding mechanisms in this library.  </p>\n<p>Affected versions <em>include</em> versions 4.0.0 through 4.5.0.</p>\n<p>This vulnerability was privately reported to me.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This issue has been fixed in version 4.5.1.  Users should use the latest version of this library.  (The latest version is not necessarily 4.5.1.  Check the README for <a href=\"https://github.com/peteroupc/CBOR-Java\">this library's repository</a> to see the latest version's version number.)</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Again, users should use the latest version of this library.</p>\n<p>In the meantime, note that the inputs affected by this issue are all CBOR maps or contain CBOR maps.  An input that decodes to a single CBOR object is not capable of containing a CBOR map if—</p>\n<ul>\n<li>it begins with a byte other than 0x80 through 0xDF, or</li>\n<li>it does not contain a byte in the range 0xa0 through 0xBF.</li>\n</ul>\n<p>Such an input is not affected by this vulnerability and an application can choose to perform this check before passing it to a CBOR decoding mechanism.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/peteroupc/CBOR-Java\">the CBOR repository</a>.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/peteroupc/CBOR-Java/security/advisories/GHSA-fj2w-wfgv-mwq6\">https://github.com/peteroupc/CBOR-Java/security/advisories/GHSA-fj2w-wfgv-mwq6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fj2w-wfgv-mwq6\">https://github.com/advisories/GHSA-fj2w-wfgv-mwq6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fj2w-wfgv-mwq6",
            "title": "[com.upokecenter:cbor] Denial of service in CBOR library",
            "date_modified": "2022-01-24T22:05:39.000Z",
            "date_published": "2022-01-21T23:21:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fj2w-wfgv-mwq6"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A highly critical 0-day exploit (CVE-2021-44228) is found in Apache log4j 2 library on December 9, 2021.</p>\n<p>This affects Apache log4j versions from 2.0-beta9 to 2.14.1 (inclusive). </p>\n<p>This vulnerability allows a remote attacker to execute code on the server if the system logs an attacker-controlled string value with the attacker's JNDI LDAP server lookup.</p>\n<p>Another vulnerability related to the same library, which was discovered on 12/14/2021 (CVE-2021-45046) and revealed another Remote Code Execution vulnerability, has been investigated by Hazelcast team as well and it is found that it does not affect Hazelcast Products under default configurations. </p>\n<p>The finding of CVE-2021-45105 on 12/14/2021, which can cause a Denial of Service attack, was investigated by Hazelcast team and it is confirmed that it does not affect Hazelcast Products under default configurations. </p>\n<p>The finding of CVE-2021-44832 on 12/28/2021, which is a medium vulnerability, is investigated by our security team as well, and not considered to be as critical. It requires attacker to be able to modify logging configuration, which means attacker can modify the filesystem and/or can already execute arbitrary code which is more of a general security breach rather than something log4j specific.</p>\n<p>Note that Hazelcast IMDG and IMDG Enterprise itself is not affected.</p>\n<p>However, given version distributions are considered to be vulnerable since related ZIP and TGZ distributions contain a vulnerable Hazelcast Management Center version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CVE-2021-44228 is fixed in log4j 2.15.0.\nCVE-2021-45046 is fixed in log4j 2.16.0.\nCVE-2021-45105 is fixed in log4j 2.17.0.\nCVE-2021-44832 is fixed in log4j 2.17.1.</p>\n<p>As of 12/21/2021, Hazelcast team has released a new version of all affected products that upgrades log4j to 2.17.0 as listed below: \nHazelcast Management Center 4.2021.12-1, Hazelcast Management Center 5.0.4.\nHazelcast IMDG and IMDG Enterprise 4.0.5, 4.1.8 and 4.2.4.\nHazelcast Jet 4.5.3.\nHazelcast Platform 5.0.2.</p>\n<p>As of 01/06/2022, Hazelcast Management Center 4.2022.01 with the updated log4j 2.17.1 is released. log4j2.17.1 will be included in Management Center 5.1 that is expected to be released in February. </p>\n<p>Hazelcast recommends upgrading to the latest versions available.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For users that an upgrade is not an option, below mitigations can be applied.</p>\n<h4 id=\"disabling-lookups-via-environment-variable\">Disabling lookups via Environment Variable</h4>\n<p>Setting the environment variable LOG4J_FORMAT_MSG_NO_LOOKUPS=true .\nThis option is the easiest to apply for containerized environments.</p>\n<h4 id=\"disabling-lookups-in-log4j2-configuration\">Disabling lookups in log4j2 configuration</h4>\n<p>Another good option since there is no need to replace JARs or no need to modify logging configuration file, users who cannot upgrade to 2.17.0 can mitigate the exposure by:</p>\n<p>Users of Log4j 2.10 or greater may add <code>-Dlog4j2.formatMsgNoLookups=true </code>as a command line option or add <code>-Dlog4j2.formatMsgNoLookups=true</code> in a <code>log4j2.component.properties</code> file on the classpath to prevent lookups in log event messages.\nUsers since Log4j 2.7 may specify <code>%m{nolookups}</code> in the PatternLayout configuration to prevent lookups in log event messages.\nAs an example; users deploying Hazelcast Management Center via helm charts can do the following to disable lookups and restart in one command:</p>\n<p><code>helm upgrade &lt;release-name&gt; hazelcast/hazelcast --set mancenter.javaOpts=\"&lt;javaOpts&gt; -Dlog4j2.formatMsgNoLookups=true\"</code></p>\n<p>Where  is the release name and  is existing java options user has added previously.</p>\n<h4 id=\"removing-the-jndilookup-from-classpath\">Removing the JndiLookup from classpath</h4>\n<p>Remove the JndiLookup and JndiManager classes from the log4j-core jar. Note that removal of the JndiManager will cause the JndiContextSelector and JMSAppender to no longer function.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44228\">https://nvd.nist.gov/vuln/detail/CVE-2021-44228</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45046\">https://nvd.nist.gov/vuln/detail/CVE-2021-45046</a>\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44832\">https://nvd.nist.gov/vuln/detail/CVE-2021-44832</a>\n<a href=\"https://logging.apache.org/log4j/2.x/index.html\">https://logging.apache.org/log4j/2.x/index.html</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/hazelcast/hazelcast\">our repo</a></li>\n<li>Slack us at <a href=\"https://slack.hazelcast.com/\">Hazelcast Community Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hazelcast/hazelcast/security/advisories/GHSA-v57x-gxfj-484q\">https://github.com/hazelcast/hazelcast/security/advisories/GHSA-v57x-gxfj-484q</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v57x-gxfj-484q\">https://github.com/advisories/GHSA-v57x-gxfj-484q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v57x-gxfj-484q",
            "title": "[com.hazelcast:hazelcast] Security Advisory for \"Log4Shell\"",
            "date_modified": "2022-01-21T23:25:04.000Z",
            "date_published": "2022-01-21T23:25:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v57x-gxfj-484q"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A highly critical 0-day exploit (CVE-2021-44228) is found in Apache log4j 2 library on December 9, 2021.</p>\n<p>This affects Apache log4j versions from 2.0-beta9 to 2.14.1 (inclusive). </p>\n<p>This vulnerability allows a remote attacker to execute code on the server if the system logs an attacker-controlled string value with the attacker's JNDI LDAP server lookup.</p>\n<p>Another vulnerability related to the same library, which was discovered on 12/14/2021 (CVE-2021-45046) and revealed another Remote Code Execution vulnerability, has been investigated by Hazelcast team as well and it is found that it does not affect Hazelcast Products under default configurations. </p>\n<p>The finding of CVE-2021-45105 on 12/14/2021, which can cause a Denial of Service attack, was investigated by Hazelcast team and it is confirmed that it does not affect Hazelcast Products under default configurations. </p>\n<p>The finding of CVE-2021-44832 on 12/28/2021, which is a medium vulnerability, is investigated by our security team as well, and not considered to be as critical. It requires attacker to be able to modify logging configuration, which means attacker can modify the filesystem and/or can already execute arbitrary code which is more of a general security breach rather than something log4j specific.</p>\n<p>Note that Hazelcast IMDG and IMDG Enterprise itself is not affected.</p>\n<p>However, given version distributions are considered to be vulnerable since related ZIP and TGZ distributions contain a vulnerable Hazelcast Management Center version.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>CVE-2021-44228 is fixed in log4j 2.15.0.\nCVE-2021-45046 is fixed in log4j 2.16.0.\nCVE-2021-45105 is fixed in log4j 2.17.0.\nCVE-2021-44832 is fixed in log4j 2.17.1.</p>\n<p>As of 12/21/2021, Hazelcast team has released a new version of all affected products that upgrades log4j to 2.17.0 as listed below: \nHazelcast Management Center 4.2021.12-1, Hazelcast Management Center 5.0.4.\nHazelcast IMDG and IMDG Enterprise 4.0.5, 4.1.8 and 4.2.4.\nHazelcast Jet 4.5.3.\nHazelcast Platform 5.0.2.</p>\n<p>As of 01/06/2022, Hazelcast Management Center 4.2022.01 with the updated log4j 2.17.1 is released. log4j2.17.1 will be included in Management Center 5.1 that is expected to be released in February. </p>\n<p>Hazelcast recommends upgrading to the latest versions available.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>For users that an upgrade is not an option, below mitigations can be applied.</p>\n<h4 id=\"disabling-lookups-via-environment-variable\">Disabling lookups via Environment Variable</h4>\n<p>Setting the environment variable LOG4J_FORMAT_MSG_NO_LOOKUPS=true .\nThis option is the easiest to apply for containerized environments.</p>\n<h4 id=\"disabling-lookups-in-log4j2-configuration\">Disabling lookups in log4j2 configuration</h4>\n<p>Another good option since there is no need to replace JARs or no need to modify logging configuration file, users who cannot upgrade to 2.17.0 can mitigate the exposure by:</p>\n<p>Users of Log4j 2.10 or greater may add <code>-Dlog4j2.formatMsgNoLookups=true </code>as a command line option or add <code>-Dlog4j2.formatMsgNoLookups=true</code> in a <code>log4j2.component.properties</code> file on the classpath to prevent lookups in log event messages.\nUsers since Log4j 2.7 may specify <code>%m{nolookups}</code> in the PatternLayout configuration to prevent lookups in log event messages.\nAs an example; users deploying Hazelcast Management Center via helm charts can do the following to disable lookups and restart in one command:</p>\n<p><code>helm upgrade &lt;release-name&gt; hazelcast/hazelcast --set mancenter.javaOpts=\"&lt;javaOpts&gt; -Dlog4j2.formatMsgNoLookups=true\"</code></p>\n<p>Where  is the release name and  is existing java options user has added previously.</p>\n<h4 id=\"removing-the-jndilookup-from-classpath\">Removing the JndiLookup from classpath</h4>\n<p>Remove the JndiLookup and JndiManager classes from the log4j-core jar. Note that removal of the JndiManager will cause the JndiContextSelector and JMSAppender to no longer function.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44228\">https://nvd.nist.gov/vuln/detail/CVE-2021-44228</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45046\">https://nvd.nist.gov/vuln/detail/CVE-2021-45046</a>\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105</a>\n<a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44832\">https://nvd.nist.gov/vuln/detail/CVE-2021-44832</a>\n<a href=\"https://logging.apache.org/log4j/2.x/index.html\">https://logging.apache.org/log4j/2.x/index.html</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/hazelcast/hazelcast\">our repo</a></li>\n<li>Slack us at <a href=\"https://slack.hazelcast.com/\">Hazelcast Community Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hazelcast/hazelcast/security/advisories/GHSA-v57x-gxfj-484q\">https://github.com/hazelcast/hazelcast/security/advisories/GHSA-v57x-gxfj-484q</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v57x-gxfj-484q\">https://github.com/advisories/GHSA-v57x-gxfj-484q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v57x-gxfj-484q",
            "title": "[com.hazelcast:hazelcast] Security Advisory for \"Log4Shell\"",
            "date_modified": "2022-01-21T23:25:04.000Z",
            "date_published": "2022-01-21T23:25:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v57x-gxfj-484q"
            }
        }
    ]
}