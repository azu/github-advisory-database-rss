{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A missing permission check in Jenkins Libvirt Slaves Plugin in form-related methods allowed users with Overall/Read access to enumerate credentials ID of credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10473\">https://nvd.nist.gov/vuln/detail/CVE-2019-10473</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-10-23/#SECURITY-1014%20(2)\">https://jenkins.io/security/advisory/2019-10-23/#SECURITY-1014%20(2)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/10/23/2\">http://www.openwall.com/lists/oss-security/2019/10/23/2</a></li>\n<li><a href=\"https://github.com/jenkinsci/libvirt-slave-plugin/releases\">https://github.com/jenkinsci/libvirt-slave-plugin/releases</a></li>\n<li><a href=\"https://github.com/jenkinsci/libvirt-slave-plugin/commit/c671d68f9498414a735913c9372ede8b4791bfee\">https://github.com/jenkinsci/libvirt-slave-plugin/commit/c671d68f9498414a735913c9372ede8b4791bfee</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8j3m-j6x6-cp5v\">https://github.com/advisories/GHSA-8j3m-j6x6-cp5v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8j3m-j6x6-cp5v",
            "title": "[org.jenkins-ci.plugins:libvirt-slave] Jenkins Libvirt Slaves Plugin vlnerable to Credential Enumeration",
            "date_modified": "2023-12-25T15:02:22.000Z",
            "date_published": "2022-05-24T16:59:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8j3m-j6x6-cp5v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An unconstrained memory consumption vulnerability was discovered in Keycloak. It can be triggered in environments which have millions of offline tokens (&gt; 500,000 users with each having at least 2 saved sessions). If an attacker creates two or more user sessions and then open the \"consents\" tab of the admin User Interface, the UI attempts to load a huge number of offline client sessions leading to excessive memory and CPU consumption which could potentially crash the entire system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6563\">https://nvd.nist.gov/vuln/detail/CVE-2023-6563</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/issues/13340\">https://github.com/keycloak/keycloak/issues/13340</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2023-6563\">https://access.redhat.com/security/cve/CVE-2023-6563</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=2253308\">https://bugzilla.redhat.com/show_bug.cgi?id=2253308</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/pull/15463\">https://github.com/keycloak/keycloak/pull/15463</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/556146f961f7c8ddf64de15e2117a58d045f72b5\">https://github.com/keycloak/keycloak/commit/556146f961f7c8ddf64de15e2117a58d045f72b5</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2023:7854\">https://access.redhat.com/errata/RHSA-2023:7854</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2023:7855\">https://access.redhat.com/errata/RHSA-2023:7855</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2023:7856\">https://access.redhat.com/errata/RHSA-2023:7856</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2023:7857\">https://access.redhat.com/errata/RHSA-2023:7857</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2023:7858\">https://access.redhat.com/errata/RHSA-2023:7858</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-54f3-c6hg-865h\">https://github.com/advisories/GHSA-54f3-c6hg-865h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-54f3-c6hg-865h",
            "title": "[org.keycloak:keycloak-model-jpa] Allocation of Resources Without Limits in Keycloak",
            "date_modified": "2023-12-24T05:05:15.000Z",
            "date_published": "2023-12-14T18:30:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-54f3-c6hg-865h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Java implementation of AMF3 deserializers used in Flamingo amf-serializer by Exadel, version 2.2.0, may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-3202\">https://nvd.nist.gov/vuln/detail/CVE-2017-3202</a></li>\n<li><a href=\"https://codewhitesec.blogspot.com/2017/04/amf.html\">https://codewhitesec.blogspot.com/2017/04/amf.html</a></li>\n<li><a href=\"http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution\">http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j88v-q3vw-p9vr\">https://github.com/advisories/GHSA-j88v-q3vw-p9vr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j88v-q3vw-p9vr",
            "title": "[com.exadel.flamingo.flex:amf-serializer] Deserialization of Untrusted Data in Flamingo amf-serializer",
            "date_modified": "2023-12-22T21:59:39.000Z",
            "date_published": "2022-05-13T01:36:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j88v-q3vw-p9vr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache CXF Fediz ships with an OpenId Connect (OIDC) service which has a Client Registration Service, which is a simple web application that allows clients to be created, deleted, etc. A CSRF (Cross Style Request Forgery) style vulnerability has been found in this web application in Apache CXF Fediz prior to 1.4.0 and 1.3.2, meaning that a malicious web application could create new clients, or reset secrets, etc, after the admin user has logged on to the client registration service and the session is still active.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7662\">https://nvd.nist.gov/vuln/detail/CVE-2017-7662</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r36e44ffc1a9b365327df62cdfaabe85b9a5637de102cea07d79b2dbf@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/r36e44ffc1a9b365327df62cdfaabe85b9a5637de102cea07d79b2dbf@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rc774278135816e7afc943dc9fc78eb0764f2c84a2b96470a0187315c@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/rc774278135816e7afc943dc9fc78eb0764f2c84a2b96470a0187315c@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd49aabd984ed540c8ff7916d4d79405f3fa311d2fdbcf9ed307839a6@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/rd49aabd984ed540c8ff7916d4d79405f3fa311d2fdbcf9ed307839a6@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rec7160382badd3ef4ad017a22f64a266c7188b9ba71394f0d321e2d4@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/rec7160382badd3ef4ad017a22f64a266c7188b9ba71394f0d321e2d4@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rfb87e0bf3995e7d560afeed750fac9329ff5f1ad49da365129b7f89e@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/rfb87e0bf3995e7d560afeed750fac9329ff5f1ad49da365129b7f89e@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E\">https://lists.apache.org/thread.html/rff42cfa5e7d75b7c1af0e37589140a8f1999e578a75738740b244bd4@%3Ccommits.cxf.apache.org%3E</a></li>\n<li><a href=\"http://cxf.apache.org/security-advisories.data/CVE-2017-7662.txt.asc\">http://cxf.apache.org/security-advisories.data/CVE-2017-7662.txt.asc</a></li>\n<li><a href=\"http://www.securitytracker.com/id/1038498\">http://www.securitytracker.com/id/1038498</a></li>\n<li><a href=\"https://github.com/apache/cxf-fediz/commit/c68e4820816c19241568f4a8fe8600bffb0243cd\">https://github.com/apache/cxf-fediz/commit/c68e4820816c19241568f4a8fe8600bffb0243cd</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f5ch-36rg-vfcc\">https://github.com/advisories/GHSA-f5ch-36rg-vfcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f5ch-36rg-vfcc",
            "title": "[org.apache.cxf.fediz:fediz-oidc] Cross-Site Request Forgery in Apache CXF Fediz",
            "date_modified": "2023-12-22T21:31:50.000Z",
            "date_published": "2022-05-13T01:09:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f5ch-36rg-vfcc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>WSO2 Registry has been identified as vulnerable due to improper output encoding, a Stored Cross Site Scripting (XSS) attack can be carried out by an attacker injecting a malicious payload into the Registry feature of the Management Console.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-6911\">https://nvd.nist.gov/vuln/detail/CVE-2023-6911</a></li>\n<li><a href=\"https://github.com/wso2/carbon-registry/commit/878fc7e53c90acc85e303d2af73440014a68b246\">https://github.com/wso2/carbon-registry/commit/878fc7e53c90acc85e303d2af73440014a68b246</a></li>\n<li><a href=\"https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2021/WSO2-2020-1225/\">https://security.docs.wso2.com/en/latest/security-announcements/security-advisories/2021/WSO2-2020-1225/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfq3-wpjh-ppvg\">https://github.com/advisories/GHSA-rfq3-wpjh-ppvg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfq3-wpjh-ppvg",
            "title": "[org.wso2.carbon.registry:carbon-registry] WSO2 Registry Stored Cross Site Scripting (XSS) vulnerability",
            "date_modified": "2023-12-22T21:31:02.000Z",
            "date_published": "2023-12-22T18:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfq3-wpjh-ppvg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A sandbox bypass vulnerability in Jenkins Script Security Plugin 1.67 and earlier related to the handling of default parameter expressions in closures allowed attackers to execute arbitrary code in sandboxed scripts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-16538\">https://nvd.nist.gov/vuln/detail/CVE-2019-16538</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-11-21/#SECURITY-1658\">https://jenkins.io/security/advisory/2019-11-21/#SECURITY-1658</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/11/21/1\">http://www.openwall.com/lists/oss-security/2019/11/21/1</a></li>\n<li><a href=\"https://github.com/jenkinsci/script-security-plugin/commit/0e7da14171ed1d03ff72f6910392e630b40a8590\">https://github.com/jenkinsci/script-security-plugin/commit/0e7da14171ed1d03ff72f6910392e630b40a8590</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-62pm-mgrh-7p69\">https://github.com/advisories/GHSA-62pm-mgrh-7p69</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-62pm-mgrh-7p69",
            "title": "[org.jenkins-ci.plugins:script-security] Incorrect Authorization in Jenkins Script Security Plugin",
            "date_modified": "2023-12-22T14:17:01.000Z",
            "date_published": "2022-05-24T17:01:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-62pm-mgrh-7p69"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>\n<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>\n<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links is possible without the <code>symlink</code> permission.</p>\n<p>We expect that most of these vulnerabilities have been present since <a href=\"https://www.jenkins.io/security/advisory/2014-10-30/\">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>\n<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>\n<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links now correctly checks the <code>symlink</code> permission.</p>\n<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href=\"https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir\">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href=\"https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules\">the documentation</a> for how to customize the configuration in case of problems.</p>\n<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href=\"https://www.jenkins.io/redirect/remoting-security-workaround/\">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21691\">https://nvd.nist.gov/vuln/detail/CVE-2021-21691</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455\">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358\">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c79-h2h5-g3fw\">https://github.com/advisories/GHSA-2c79-h2h5-g3fw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c79-h2h5-g3fw",
            "title": "[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins",
            "date_modified": "2023-12-22T14:15:25.000Z",
            "date_published": "2022-05-24T19:19:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c79-h2h5-g3fw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>\n<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>\n<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links is possible without the <code>symlink</code> permission.</p>\n<p>We expect that most of these vulnerabilities have been present since <a href=\"https://www.jenkins.io/security/advisory/2014-10-30/\">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>\n<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>\n<p>SECURITY-2531 / CVE-2021-21691: Creating symbolic links now correctly checks the <code>symlink</code> permission.</p>\n<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href=\"https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir\">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href=\"https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules\">the documentation</a> for how to customize the configuration in case of problems.</p>\n<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href=\"https://www.jenkins.io/redirect/remoting-security-workaround/\">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21691\">https://nvd.nist.gov/vuln/detail/CVE-2021-21691</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455\">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358\">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2c79-h2h5-g3fw\">https://github.com/advisories/GHSA-2c79-h2h5-g3fw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2c79-h2h5-g3fw",
            "title": "[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins",
            "date_modified": "2023-12-22T14:15:25.000Z",
            "date_published": "2022-05-24T19:19:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2c79-h2h5-g3fw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>\n<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>\n<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> does not check permission to create parent directories.</p>\n<p>We expect that most of these vulnerabilities have been present since <a href=\"https://www.jenkins.io/security/advisory/2014-10-30/\">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>\n<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>\n<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> checks permission to create parent directories.</p>\n<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href=\"https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir\">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href=\"https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules\">the documentation</a> for how to customize the configuration in case of problems.</p>\n<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href=\"https://www.jenkins.io/redirect/remoting-security-workaround/\">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21685\">https://nvd.nist.gov/vuln/detail/CVE-2021-21685</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455\">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/11/04/3\">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74\">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358\">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-58xm-mxjf-254g\">https://github.com/advisories/GHSA-58xm-mxjf-254g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-58xm-mxjf-254g",
            "title": "[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins",
            "date_modified": "2023-12-22T14:13:08.000Z",
            "date_published": "2022-05-24T19:19:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-58xm-mxjf-254g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The agent-to-controller security subsystem limits which files on the Jenkins controller can be accessed by agent processes.</p>\n<p>Multiple vulnerabilities in the file path filtering implementation of Jenkins 2.318 and earlier, LTS 2.303.2 and earlier allow agent processes to read and write arbitrary files on the Jenkins controller file system, and obtain some information about Jenkins controller file systems.</p>\n<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> does not check permission to create parent directories.</p>\n<p>We expect that most of these vulnerabilities have been present since <a href=\"https://www.jenkins.io/security/advisory/2014-10-30/\">SECURITY-144 was addressed in the 2014-10-30 security advisory</a>.</p>\n<p>Jenkins 2.319, LTS 2.303.3 addresses these security vulnerabilities.</p>\n<p>SECURITY-2427 / CVE-2021-21685: <code>FilePath#mkdirs</code> checks permission to create parent directories.</p>\n<p>As some common operations are now newly subject to access control, it is expected that plugins sending commands from agents to the controller may start failing. Additionally, the newly introduced path canonicalization means that instances using a custom builds directory (<a href=\"https://www.jenkins.io/doc/book/managing/system-properties/#jenkins-model-jenkins-buildsdir\">Java system property jenkins.model.Jenkins.buildsDir</a>) or partitioning <code>JENKINS_HOME</code> using symbolic links may fail access control checks. See <a href=\"https://www.jenkins.io/doc/book/security/controller-isolation/agent-to-controller/#file-access-rules\">the documentation</a> for how to customize the configuration in case of problems.</p>\n<p>If you are unable to immediately upgrade to Jenkins 2.319, LTS 2.303.3, you can install the <a href=\"https://www.jenkins.io/redirect/remoting-security-workaround/\">Remoting Security Workaround Plugin</a>. It will prevent all agent-to-controller file access using <code>FilePath</code> APIs. Because it is more restrictive than Jenkins 2.319, LTS 2.303.3, more plugins are incompatible with it. Make sure to read the plugin documentation before installing it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21685\">https://nvd.nist.gov/vuln/detail/CVE-2021-21685</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455\">https://www.jenkins.io/security/advisory/2021-11-04/#SECURITY-2455</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/11/04/3\">http://www.openwall.com/lists/oss-security/2021/11/04/3</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74\">https://github.com/jenkinsci/jenkins/commit/5a245e42979abe4a26d41727c839521e36cedd74</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358\">https://github.com/jenkinsci/jenkins/commit/63cde2daadc705edf086f2213b48c8c547f98358</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-58xm-mxjf-254g\">https://github.com/advisories/GHSA-58xm-mxjf-254g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-58xm-mxjf-254g",
            "title": "[org.jenkins-ci.main:jenkins-core] Multiple vulnerabilities allow bypassing path filtering of agent-to-controller access control in Jenkins",
            "date_modified": "2023-12-22T14:13:08.000Z",
            "date_published": "2022-05-24T19:19:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-58xm-mxjf-254g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Pipeline: Groovy Plugin prior to 2656.vf7a_e7b_75a_457, 2.94.1, and 2.92.1 uses the same checkout directories for distinct SCMs when reading the script file (typically Jenkinsfile) for Pipelines, allowing attackers with Item/Configure permission to invoke arbitrary OS commands on the controller through crafted SCM contents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25173\">https://nvd.nist.gov/vuln/detail/CVE-2022-25173</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463\">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/02/15/2\">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>\n<li><a href=\"https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json\">https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85\">https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m7p-55jm-3vwv\">https://github.com/advisories/GHSA-4m7p-55jm-3vwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv",
            "title": "[org.jenkins-ci.plugins.workflow:workflow-cps] Improper Neutralization of Special Elements used in an OS Command in Jenkins Pipeline: Groovy Plugin",
            "date_modified": "2023-12-22T14:08:52.000Z",
            "date_published": "2022-02-16T00:01:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Pipeline: Groovy Plugin prior to 2656.vf7a_e7b_75a_457, 2.94.1, and 2.92.1 uses the same checkout directories for distinct SCMs when reading the script file (typically Jenkinsfile) for Pipelines, allowing attackers with Item/Configure permission to invoke arbitrary OS commands on the controller through crafted SCM contents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25173\">https://nvd.nist.gov/vuln/detail/CVE-2022-25173</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463\">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/02/15/2\">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>\n<li><a href=\"https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json\">https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85\">https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m7p-55jm-3vwv\">https://github.com/advisories/GHSA-4m7p-55jm-3vwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv",
            "title": "[org.jenkins-ci.plugins.workflow:workflow-cps] Improper Neutralization of Special Elements used in an OS Command in Jenkins Pipeline: Groovy Plugin",
            "date_modified": "2023-12-22T14:08:52.000Z",
            "date_published": "2022-02-16T00:01:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Pipeline: Groovy Plugin prior to 2656.vf7a_e7b_75a_457, 2.94.1, and 2.92.1 uses the same checkout directories for distinct SCMs when reading the script file (typically Jenkinsfile) for Pipelines, allowing attackers with Item/Configure permission to invoke arbitrary OS commands on the controller through crafted SCM contents.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25173\">https://nvd.nist.gov/vuln/detail/CVE-2022-25173</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463\">https://www.jenkins.io/security/advisory/2022-02-15/#SECURITY-2463</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/02/15/2\">http://www.openwall.com/lists/oss-security/2022/02/15/2</a></li>\n<li><a href=\"https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json\">https://github.com/CVEProject/cvelist/blob/3615f493b8a36ff15735fb9d79c9dc9e0d542695/2022/25xxx/CVE-2022-25173.json</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85\">https://github.com/jenkinsci/workflow-cps-plugin/commit/f7ae7b75a457976853539bff1db52373b85fdb85</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m7p-55jm-3vwv\">https://github.com/advisories/GHSA-4m7p-55jm-3vwv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv",
            "title": "[org.jenkins-ci.plugins.workflow:workflow-cps] Improper Neutralization of Special Elements used in an OS Command in Jenkins Pipeline: Groovy Plugin",
            "date_modified": "2023-12-22T14:08:52.000Z",
            "date_published": "2022-02-16T00:01:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m7p-55jm-3vwv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A code execution vulnerability exists in the Stapler web framework used by Jenkins 2.153 and earlier, LTS 2.138.3 and earlier in stapler/core/src/main/java/org/kohsuke/stapler/MetaClass.java that allows attackers to invoke some methods on Java objects by accessing crafted URLs that were not intended to be invoked this way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000861\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000861</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0024\">https://access.redhat.com/errata/RHBA-2019:0024</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-12-05/#SECURITY-595\">https://jenkins.io/security/advisory/2018-12-05/#SECURITY-595</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/166778/Jenkins-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/166778/Jenkins-Remote-Code-Execution.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106176\">http://www.securityfocus.com/bid/106176</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/47f38d714c99e1841fb737ad1005618eb26ed852\">https://github.com/jenkinsci/jenkins/commit/47f38d714c99e1841fb737ad1005618eb26ed852</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhpm-5cp2-hg4x\">https://github.com/advisories/GHSA-hhpm-5cp2-hg4x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhpm-5cp2-hg4x",
            "title": "[org.jenkins-ci.main:jenkins-core] Deserialization of Untrusted Data in Jenkins",
            "date_modified": "2023-12-22T14:07:25.000Z",
            "date_published": "2022-05-13T01:01:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhpm-5cp2-hg4x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A code execution vulnerability exists in the Stapler web framework used by Jenkins 2.153 and earlier, LTS 2.138.3 and earlier in stapler/core/src/main/java/org/kohsuke/stapler/MetaClass.java that allows attackers to invoke some methods on Java objects by accessing crafted URLs that were not intended to be invoked this way.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000861\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000861</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0024\">https://access.redhat.com/errata/RHBA-2019:0024</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-12-05/#SECURITY-595\">https://jenkins.io/security/advisory/2018-12-05/#SECURITY-595</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/166778/Jenkins-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/166778/Jenkins-Remote-Code-Execution.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106176\">http://www.securityfocus.com/bid/106176</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/47f38d714c99e1841fb737ad1005618eb26ed852\">https://github.com/jenkinsci/jenkins/commit/47f38d714c99e1841fb737ad1005618eb26ed852</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hhpm-5cp2-hg4x\">https://github.com/advisories/GHSA-hhpm-5cp2-hg4x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hhpm-5cp2-hg4x",
            "title": "[org.jenkins-ci.main:jenkins-core] Deserialization of Untrusted Data in Jenkins",
            "date_modified": "2023-12-22T14:07:25.000Z",
            "date_published": "2022-05-13T01:01:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hhpm-5cp2-hg4x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Bitbucket OAuth Plugin prior to 0.10 stores credentials unencrypted in the global config.xml configuration file on the Jenkins master where they could be viewed by users with access to the master file system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-10460\">https://nvd.nist.gov/vuln/detail/CVE-2019-10460</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-10-23/#SECURITY-1546\">https://jenkins.io/security/advisory/2019-10-23/#SECURITY-1546</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/10/23/2\">http://www.openwall.com/lists/oss-security/2019/10/23/2</a></li>\n<li><a href=\"https://github.com/jenkinsci/bitbucket-oauth-plugin/commit/f55d222db910220ca8cd8631fb746c98b9e12870\">https://github.com/jenkinsci/bitbucket-oauth-plugin/commit/f55d222db910220ca8cd8631fb746c98b9e12870</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-84h6-jf8x-ff2j\">https://github.com/advisories/GHSA-84h6-jf8x-ff2j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-84h6-jf8x-ff2j",
            "title": "[org.jenkins-ci.plugins:bitbucket-oauth] Jenkins Bitbucket OAuth Plugin contains Insufficiently Protected Credentials",
            "date_modified": "2023-12-22T14:02:10.000Z",
            "date_published": "2022-05-24T16:59:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-84h6-jf8x-ff2j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An extension point in Jenkins allows selectively disabling cross-site request forgery (CSRF) protection for specific URLs.\\n\\nImplementations of that extension point received a different representation of the URL path than the Stapler web framework uses to dispatch requests in Jenkins 2.227 and earlier, LTS 2.204.5 and earlier. This discrepancy allowed attackers to craft URLs that would bypass the CSRF protection of any target URL.\\n\\nJenkins now uses the same representation of the URL path to decide whether CSRF protection is needed for a given URL as the Stapler web framework uses.\\n\\nIn case of problems, administrators can disable this security fix by setting the system property <code>hudson.security.csrf.CrumbFilter.UNPROCESSED_PATHINFO</code> to <code>true</code>.\\n\\nAs an additional safeguard, semicolon (<code>;</code>) characters in the path part of a URL are now banned by default. Administrators can disable this protection by setting the system property <code>jenkins.security.SuspiciousRequestFilter.allowSemicolonsInPath</code> to <code>true</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-2160\">https://nvd.nist.gov/vuln/detail/CVE-2020-2160</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1774\">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1774</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/03/25/2\">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/f7cf28355973df1ca6eb19066370bf70b10742f7\">https://github.com/jenkinsci/jenkins/commit/f7cf28355973df1ca6eb19066370bf70b10742f7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c735-g9f2-2mvp\">https://github.com/advisories/GHSA-c735-g9f2-2mvp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c735-g9f2-2mvp",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-Site Request Forgery in Jenkins",
            "date_modified": "2023-12-22T14:00:59.000Z",
            "date_published": "2022-05-24T17:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c735-g9f2-2mvp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An extension point in Jenkins allows selectively disabling cross-site request forgery (CSRF) protection for specific URLs.\\n\\nImplementations of that extension point received a different representation of the URL path than the Stapler web framework uses to dispatch requests in Jenkins 2.227 and earlier, LTS 2.204.5 and earlier. This discrepancy allowed attackers to craft URLs that would bypass the CSRF protection of any target URL.\\n\\nJenkins now uses the same representation of the URL path to decide whether CSRF protection is needed for a given URL as the Stapler web framework uses.\\n\\nIn case of problems, administrators can disable this security fix by setting the system property <code>hudson.security.csrf.CrumbFilter.UNPROCESSED_PATHINFO</code> to <code>true</code>.\\n\\nAs an additional safeguard, semicolon (<code>;</code>) characters in the path part of a URL are now banned by default. Administrators can disable this protection by setting the system property <code>jenkins.security.SuspiciousRequestFilter.allowSemicolonsInPath</code> to <code>true</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-2160\">https://nvd.nist.gov/vuln/detail/CVE-2020-2160</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1774\">https://jenkins.io/security/advisory/2020-03-25/#SECURITY-1774</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2020/03/25/2\">http://www.openwall.com/lists/oss-security/2020/03/25/2</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/f7cf28355973df1ca6eb19066370bf70b10742f7\">https://github.com/jenkinsci/jenkins/commit/f7cf28355973df1ca6eb19066370bf70b10742f7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c735-g9f2-2mvp\">https://github.com/advisories/GHSA-c735-g9f2-2mvp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c735-g9f2-2mvp",
            "title": "[org.jenkins-ci.main:jenkins-core] Cross-Site Request Forgery in Jenkins",
            "date_modified": "2023-12-22T14:00:59.000Z",
            "date_published": "2022-05-24T17:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c735-g9f2-2mvp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Amazon EC2 Plugin 1.47 and earlier does not perform permission checks in methods performing form validation. This allows users with Overall/Read access to Jenkins to connect to an attacker-specified URL within the AWS region using attacker-specified credentials IDs obtained through another method.</p>\n<p>This vulnerability might also allow attackers to capture credentials stored in Jenkins. We have not been able to confirm that this is possible.</p>\n<p>Additionally, these form validation methods do not require POST requests, resulting in a CSRF vulnerability.</p>\n<p>Amazon EC2 Plugin 1.48 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-2091\">https://nvd.nist.gov/vuln/detail/CVE-2020-2091</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1004\">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1004</a></li>\n<li><a href=\"https://github.com/jenkinsci/ec2-plugin/commit/0cdbaf2d7da5c368209f427559c8608dec22a63b\">https://github.com/jenkinsci/ec2-plugin/commit/0cdbaf2d7da5c368209f427559c8608dec22a63b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6hmm-77r2-h6hr\">https://github.com/advisories/GHSA-6hmm-77r2-h6hr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6hmm-77r2-h6hr",
            "title": "[org.jenkins-ci.plugins:ec2] Missing permission checks in Jenkins Amazon EC2 Plugin",
            "date_modified": "2023-12-22T13:58:49.000Z",
            "date_published": "2022-05-24T17:06:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6hmm-77r2-h6hr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Robot Framework Plugin 2.0.0 and earlier does not configure the XML parser to prevent XML external entity (XXE) attacks.</p>\n<p>This allows a user able to control the input files for the 'Publish Robot Framework' post-build step to have Jenkins parse a crafted file that uses external entities for extraction of secrets from the Jenkins controller, server-side request forgery, or denial-of-service attacks.</p>\n<p>Robot Framework Plugin 2.0.1 disables external entity resolution for its XML parser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-2092\">https://nvd.nist.gov/vuln/detail/CVE-2020-2092</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1698\">https://jenkins.io/security/advisory/2020-01-15/#SECURITY-1698</a></li>\n<li><a href=\"https://github.com/jenkinsci/robot-plugin/commit/a06626f516e63813db570ff9f3e9b1f76012df59\">https://github.com/jenkinsci/robot-plugin/commit/a06626f516e63813db570ff9f3e9b1f76012df59</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m53p-f25q-q6fg\">https://github.com/advisories/GHSA-m53p-f25q-q6fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m53p-f25q-q6fg",
            "title": "[org.jenkins-ci.plugins:robot] XXE vulnerability in Jenkins Robot Framework Plugin",
            "date_modified": "2023-12-22T13:58:14.000Z",
            "date_published": "2022-05-24T17:06:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m53p-f25q-q6fg"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}