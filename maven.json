{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0 and 2.12.3.</p>\n<h1 id=\"affected-packages\">Affected packages</h1>\n<p>Only the <code>org.apache.logging.log4j:log4j-core</code> package is directly affected by this vulnerability. The <code>org.apache.logging.log4j:log4j-api</code> should be kept at the same version as the <code>org.apache.logging.log4j:log4j-core</code> package to ensure compatability if in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45105\">https://nvd.nist.gov/vuln/detail/CVE-2021-45105</a></li>\n<li><a href=\"https://logging.apache.org/log4j/2.x/security.html\">https://logging.apache.org/log4j/2.x/security.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211218-0001/\">https://security.netapp.com/advisory/ntap-20211218-0001/</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html\">https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/</a></li>\n<li><a href=\"https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032\">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</a></li>\n<li><a href=\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd\">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5024\">https://www.debian.org/security/2021/dsa-5024</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/930724\">https://www.kb.cert.org/vuls/id/930724</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-21-1541/\">https://www.zerodayinitiative.com/advisories/ZDI-21-1541/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/12/19/1\">http://www.openwall.com/lists/oss-security/2021/12/19/1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6xc-xr62-6r2g\">https://github.com/advisories/GHSA-p6xc-xr62-6r2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g",
            "title": "[org.apache.logging.log4j:log4j-core] Improper Input Validation and Uncontrolled Recursion in Apache Log4j2",
            "date_modified": "2022-04-04T20:02:43.000Z",
            "date_published": "2021-12-18T18:00:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g"
            }
        },
        {
            "content_html": "<p>Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0 and 2.12.3.</p>\n<h1 id=\"affected-packages\">Affected packages</h1>\n<p>Only the <code>org.apache.logging.log4j:log4j-core</code> package is directly affected by this vulnerability. The <code>org.apache.logging.log4j:log4j-api</code> should be kept at the same version as the <code>org.apache.logging.log4j:log4j-core</code> package to ensure compatability if in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45105\">https://nvd.nist.gov/vuln/detail/CVE-2021-45105</a></li>\n<li><a href=\"https://logging.apache.org/log4j/2.x/security.html\">https://logging.apache.org/log4j/2.x/security.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211218-0001/\">https://security.netapp.com/advisory/ntap-20211218-0001/</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html\">https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/</a></li>\n<li><a href=\"https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032\">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</a></li>\n<li><a href=\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd\">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5024\">https://www.debian.org/security/2021/dsa-5024</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/930724\">https://www.kb.cert.org/vuls/id/930724</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-21-1541/\">https://www.zerodayinitiative.com/advisories/ZDI-21-1541/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/12/19/1\">http://www.openwall.com/lists/oss-security/2021/12/19/1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6xc-xr62-6r2g\">https://github.com/advisories/GHSA-p6xc-xr62-6r2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g",
            "title": "[org.apache.logging.log4j:log4j-core] Improper Input Validation and Uncontrolled Recursion in Apache Log4j2",
            "date_modified": "2022-04-04T20:02:43.000Z",
            "date_published": "2021-12-18T18:00:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g"
            }
        },
        {
            "content_html": "<p>Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0 and 2.12.3.</p>\n<h1 id=\"affected-packages\">Affected packages</h1>\n<p>Only the <code>org.apache.logging.log4j:log4j-core</code> package is directly affected by this vulnerability. The <code>org.apache.logging.log4j:log4j-api</code> should be kept at the same version as the <code>org.apache.logging.log4j:log4j-core</code> package to ensure compatability if in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-45105\">https://nvd.nist.gov/vuln/detail/CVE-2021-45105</a></li>\n<li><a href=\"https://logging.apache.org/log4j/2.x/security.html\">https://logging.apache.org/log4j/2.x/security.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211218-0001/\">https://security.netapp.com/advisory/ntap-20211218-0001/</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-479842.pdf</a></li>\n<li><a href=\"https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf\">https://cert-portal.siemens.com/productcert/pdf/ssa-501673.pdf</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html\">https://lists.debian.org/debian-lts-announce/2021/12/msg00017.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EOKPQGV24RRBBI4TBZUDQMM4MEH7MXCY/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SIG7FZULMNK2XF6FZRU4VWYDQXNMUGAJ/</a></li>\n<li><a href=\"https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032\">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032</a></li>\n<li><a href=\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd\">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-5024\">https://www.debian.org/security/2021/dsa-5024</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/930724\">https://www.kb.cert.org/vuls/id/930724</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-21-1541/\">https://www.zerodayinitiative.com/advisories/ZDI-21-1541/</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/12/19/1\">http://www.openwall.com/lists/oss-security/2021/12/19/1</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p6xc-xr62-6r2g\">https://github.com/advisories/GHSA-p6xc-xr62-6r2g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g",
            "title": "[org.apache.logging.log4j:log4j-core] Improper Input Validation and Uncontrolled Recursion in Apache Log4j2",
            "date_modified": "2022-04-04T20:02:43.000Z",
            "date_published": "2021-12-18T18:00:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p6xc-xr62-6r2g"
            }
        },
        {
            "content_html": "<p>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-33037\">https://nvd.nist.gov/vuln/detail/CVE-2021-33037</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E\">https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html\">https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210827-0007/\">https://security.netapp.com/advisory/ntap-20210827-0007/</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-4952\">https://www.debian.org/security/2021/dsa-4952</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366\">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962\">https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vww-mc66-62m6\">https://github.com/advisories/GHSA-4vww-mc66-62m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6",
            "title": "[org.apache.tomcat:tomcat] HTTP Request Smuggling in Apache Tomcat",
            "date_modified": "2022-04-04T18:57:21.000Z",
            "date_published": "2021-08-13T15:21:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6"
            }
        },
        {
            "content_html": "<p>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-33037\">https://nvd.nist.gov/vuln/detail/CVE-2021-33037</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E\">https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html\">https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210827-0007/\">https://security.netapp.com/advisory/ntap-20210827-0007/</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-4952\">https://www.debian.org/security/2021/dsa-4952</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366\">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962\">https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vww-mc66-62m6\">https://github.com/advisories/GHSA-4vww-mc66-62m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6",
            "title": "[org.apache.tomcat:tomcat] HTTP Request Smuggling in Apache Tomcat",
            "date_modified": "2022-04-04T18:57:21.000Z",
            "date_published": "2021-08-13T15:21:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6"
            }
        },
        {
            "content_html": "<p>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-33037\">https://nvd.nist.gov/vuln/detail/CVE-2021-33037</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E\">https://lists.apache.org/thread.html/r612a79269b0d5e5780c62dfd34286a8037232fec0bc6f1a7e60c9381%40%3Cannounce.tomcat.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r40f921575aee8d7d34e53182f862c45cbb8f3d898c9d4e865c2ec262@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rd0dfea39829bc0606c936a16f6fca338127c86c0a1083970b45ac8d2@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/re01e7e93154e8bdf78a11a23f9686427bd3d51fc6e12c508645567b7@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html\">https://lists.debian.org/debian-lts-announce/2021/08/msg00009.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210827-0007/\">https://security.netapp.com/advisory/ntap-20210827-0007/</a></li>\n<li><a href=\"https://www.debian.org/security/2021/dsa-4952\">https://www.debian.org/security/2021/dsa-4952</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/r290aee55b72811fd19e75ac80f6143716c079170c5671b96932ed44b@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rf1b54fd3f52f998ca4829159a88cc4c23d6cef5c6447d00948e75c97@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E\">https://lists.apache.org/thread.html/rc6ef52453bb996a98cb45442871a1db56b7c349939e45d829bf9ae37@%3Ccommits.tomee.apache.org%3E</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366\">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10366</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962\">https://lists.apache.org/thread/kovg1bft77xo34ksrcskh5nl50p69962</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vww-mc66-62m6\">https://github.com/advisories/GHSA-4vww-mc66-62m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6",
            "title": "[org.apache.tomcat:tomcat] HTTP Request Smuggling in Apache Tomcat",
            "date_modified": "2022-04-04T18:57:21.000Z",
            "date_published": "2021-08-13T15:21:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vww-mc66-62m6"
            }
        },
        {
            "content_html": "<p>The AbstractXmlConfigRootTagRecognizer() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0265\">https://nvd.nist.gov/vuln/detail/CVE-2022-0265</a></li>\n<li><a href=\"https://github.com/hazelcast/hazelcast/commit/4d6b666cd0291abd618c3b95cdbb51aa4208e748\">https://github.com/hazelcast/hazelcast/commit/4d6b666cd0291abd618c3b95cdbb51aa4208e748</a></li>\n<li><a href=\"https://huntr.dev/bounties/d63972a2-b910-480a-a86b-d1f75d24d563\">https://huntr.dev/bounties/d63972a2-b910-480a-a86b-d1f75d24d563</a></li>\n<li><a href=\"https://github.com/hazelcast/hazelcast/pull/20407\">https://github.com/hazelcast/hazelcast/pull/20407</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99wh-973f-779p\">https://github.com/advisories/GHSA-99wh-973f-779p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99wh-973f-779p",
            "title": "[com.hazelcast:hazelcast] XML External Entity Reference in Hazelcast",
            "date_modified": "2022-04-01T19:47:36.000Z",
            "date_published": "2022-03-04T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99wh-973f-779p"
            }
        },
        {
            "content_html": "<p>In Hibernate Validator 5.2.x before 5.2.5 final, 5.3.x, and 5.4.x, it was found that when the security manager's reflective permissions, which allows it to access the private members of the class, are granted to Hibernate Validator, a potential privilege escalation can occur. By allowing the calling code to access those private members without the permission an attacker may be able to validate an invalid instance and access the private member value via ConstraintViolation#getInvalidValue().</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7536\">https://nvd.nist.gov/vuln/detail/CVE-2017-7536</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1465573\">https://bugzilla.redhat.com/show_bug.cgi?id=1465573</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E\">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/101048\">http://www.securityfocus.com/bid/101048</a></li>\n<li><a href=\"http://www.securitytracker.com/id/1039744\">http://www.securitytracker.com/id/1039744</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b\">https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac\">https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2808\">https://access.redhat.com/errata/RHSA-2017:2808</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2809\">https://access.redhat.com/errata/RHSA-2017:2809</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2810\">https://access.redhat.com/errata/RHSA-2017:2810</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2811\">https://access.redhat.com/errata/RHSA-2017:2811</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3141\">https://access.redhat.com/errata/RHSA-2017:3141</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3454\">https://access.redhat.com/errata/RHSA-2017:3454</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3455\">https://access.redhat.com/errata/RHSA-2017:3455</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3456\">https://access.redhat.com/errata/RHSA-2017:3456</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3458\">https://access.redhat.com/errata/RHSA-2017:3458</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2740\">https://access.redhat.com/errata/RHSA-2018:2740</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2741\">https://access.redhat.com/errata/RHSA-2018:2741</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2742\">https://access.redhat.com/errata/RHSA-2018:2742</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2743\">https://access.redhat.com/errata/RHSA-2018:2743</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2927\">https://access.redhat.com/errata/RHSA-2018:2927</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3817\">https://access.redhat.com/errata/RHSA-2018:3817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xxgp-pcfc-3vgc\">https://github.com/advisories/GHSA-xxgp-pcfc-3vgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc",
            "title": "[org.hibernate:hibernate-validator] Privilege Escalation in Hibernate Validator",
            "date_modified": "2022-03-31T22:00:46.000Z",
            "date_published": "2020-06-15T19:57:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc"
            }
        },
        {
            "content_html": "<p>In Hibernate Validator 5.2.x before 5.2.5 final, 5.3.x, and 5.4.x, it was found that when the security manager's reflective permissions, which allows it to access the private members of the class, are granted to Hibernate Validator, a potential privilege escalation can occur. By allowing the calling code to access those private members without the permission an attacker may be able to validate an invalid instance and access the private member value via ConstraintViolation#getInvalidValue().</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7536\">https://nvd.nist.gov/vuln/detail/CVE-2017-7536</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1465573\">https://bugzilla.redhat.com/show_bug.cgi?id=1465573</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E\">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/101048\">http://www.securityfocus.com/bid/101048</a></li>\n<li><a href=\"http://www.securitytracker.com/id/1039744\">http://www.securitytracker.com/id/1039744</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b\">https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac\">https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2808\">https://access.redhat.com/errata/RHSA-2017:2808</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2809\">https://access.redhat.com/errata/RHSA-2017:2809</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2810\">https://access.redhat.com/errata/RHSA-2017:2810</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2811\">https://access.redhat.com/errata/RHSA-2017:2811</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3141\">https://access.redhat.com/errata/RHSA-2017:3141</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3454\">https://access.redhat.com/errata/RHSA-2017:3454</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3455\">https://access.redhat.com/errata/RHSA-2017:3455</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3456\">https://access.redhat.com/errata/RHSA-2017:3456</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3458\">https://access.redhat.com/errata/RHSA-2017:3458</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2740\">https://access.redhat.com/errata/RHSA-2018:2740</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2741\">https://access.redhat.com/errata/RHSA-2018:2741</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2742\">https://access.redhat.com/errata/RHSA-2018:2742</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2743\">https://access.redhat.com/errata/RHSA-2018:2743</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2927\">https://access.redhat.com/errata/RHSA-2018:2927</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3817\">https://access.redhat.com/errata/RHSA-2018:3817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xxgp-pcfc-3vgc\">https://github.com/advisories/GHSA-xxgp-pcfc-3vgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc",
            "title": "[org.hibernate:hibernate-validator] Privilege Escalation in Hibernate Validator",
            "date_modified": "2022-03-31T22:00:46.000Z",
            "date_published": "2020-06-15T19:57:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc"
            }
        },
        {
            "content_html": "<p>In Hibernate Validator 5.2.x before 5.2.5 final, 5.3.x, and 5.4.x, it was found that when the security manager's reflective permissions, which allows it to access the private members of the class, are granted to Hibernate Validator, a potential privilege escalation can occur. By allowing the calling code to access those private members without the permission an attacker may be able to validate an invalid instance and access the private member value via ConstraintViolation#getInvalidValue().</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-7536\">https://nvd.nist.gov/vuln/detail/CVE-2017-7536</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1465573\">https://bugzilla.redhat.com/show_bug.cgi?id=1465573</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E\">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/101048\">http://www.securityfocus.com/bid/101048</a></li>\n<li><a href=\"http://www.securitytracker.com/id/1039744\">http://www.securitytracker.com/id/1039744</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b\">https://github.com/hibernate/hibernate-validator/commit/0778a5c98b817771a645c6f4ba0b28dd8b5437b</a></li>\n<li><a href=\"https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac\">https://github.com/hibernate/hibernate-validator/commit/0886e89900d343ea20fde5137c9a3086e6da9ac</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2808\">https://access.redhat.com/errata/RHSA-2017:2808</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2809\">https://access.redhat.com/errata/RHSA-2017:2809</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2810\">https://access.redhat.com/errata/RHSA-2017:2810</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2811\">https://access.redhat.com/errata/RHSA-2017:2811</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3141\">https://access.redhat.com/errata/RHSA-2017:3141</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3454\">https://access.redhat.com/errata/RHSA-2017:3454</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3455\">https://access.redhat.com/errata/RHSA-2017:3455</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3456\">https://access.redhat.com/errata/RHSA-2017:3456</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:3458\">https://access.redhat.com/errata/RHSA-2017:3458</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2740\">https://access.redhat.com/errata/RHSA-2018:2740</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2741\">https://access.redhat.com/errata/RHSA-2018:2741</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2742\">https://access.redhat.com/errata/RHSA-2018:2742</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2743\">https://access.redhat.com/errata/RHSA-2018:2743</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2927\">https://access.redhat.com/errata/RHSA-2018:2927</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3817\">https://access.redhat.com/errata/RHSA-2018:3817</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xxgp-pcfc-3vgc\">https://github.com/advisories/GHSA-xxgp-pcfc-3vgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc",
            "title": "[org.hibernate:hibernate-validator] Privilege Escalation in Hibernate Validator",
            "date_modified": "2022-03-31T22:00:46.000Z",
            "date_published": "2020-06-15T19:57:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xxgp-pcfc-3vgc"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework.boot:spring-boot-starter-webflux] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework.boot:spring-boot-starter-webflux] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-webflux] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-webflux] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework.boot:spring-boot-starter-web] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework.boot:spring-boot-starter-web] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-webmvc] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-webmvc] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-beans] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        },
        {
            "content_html": "<p>Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as <code>Spring4Shell</code>. </p>\n<h2 id=\"impact\">Impact</h2>\n<p>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</p>\n<p>These are the prerequisites for the exploit:</p>\n<ul>\n<li>JDK 9 or higher</li>\n<li>Apache Tomcat as the Servlet container</li>\n<li>Packaged as WAR</li>\n<li><code>spring-webmvc</code> or <code>spring-webflux</code> dependency</li>\n</ul>\n<h2 id=\"patches\">Patches</h2>\n<ul>\n<li>Spring Framework <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">5.3.18</a> and <a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">5.2.20</a></li>\n<li>Spring Boot <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">2.6.6</a> and <a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">2.5.12</a></li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>For those who are unable to upgrade, leaked reports recommend setting <code>disallowedFields</code> on <code>WebDataBinder</code> through an <code>@ControllerAdvice</code>. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets <code>disallowedFields</code> locally through its own <code>@InitBinder</code> method, which overrides the global setting.</p>\n<p>To apply the workaround in a more fail-safe way, applications could extend <code>RequestMappingHandlerAdapter</code> to update the <code>WebDataBinder</code> at the end after all other initialization. In order to do that, a Spring Boot application can declare a <code>WebMvcRegistrations</code> bean (Spring MVC) or a <code>WebFluxRegistrations</code> bean (Spring WebFlux).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-22965\">https://nvd.nist.gov/vuln/detail/CVE-2022-22965</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15\">https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12\">https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6\">https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE\">https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18\">https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18</a></li>\n<li><a href=\"https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\">https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2022-22965\">https://tanzu.vmware.com/security/cve-2022-22965</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-36p3-wjmg-h94x\">https://github.com/advisories/GHSA-36p3-wjmg-h94x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x",
            "title": "[org.springframework:spring-beans] Remote Code Execution in Spring Framework",
            "date_modified": "2022-04-01T16:26:09.000Z",
            "date_published": "2022-03-31T18:30:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-36p3-wjmg-h94x"
            }
        }
    ]
}