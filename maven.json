{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Jenkins BART Plugin 1.0.3 and earlier does not escape the parsed content of build logs before rendering it on the Jenkins UI, resulting in a stored cross-site scripting (XSS) vulnerability. Currently, there are no known workarounds or patches available.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45387\">https://nvd.nist.gov/vuln/detail/CVE-2022-45387</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2802\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2802</a></li>\n<li><a href=\"https://github.com/jenkins-infra/update-center2/pull/658\">https://github.com/jenkins-infra/update-center2/pull/658</a></li>\n<li><a href=\"https://github.com/jenkinsci/bart-plugin/blob/30d19e0ded8588c84601c7ffbcd0dd91c08ef945/src/main/java/org/jenkinsci/plugins/bart/LogParserBuildAction.java#L85\">https://github.com/jenkinsci/bart-plugin/blob/30d19e0ded8588c84601c7ffbcd0dd91c08ef945/src/main/java/org/jenkinsci/plugins/bart/LogParserBuildAction.java#L85</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j923-26c2-qq9p\">https://github.com/advisories/GHSA-j923-26c2-qq9p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j923-26c2-qq9p",
            "title": "[org.jenkins-ci.plugins:bart] Jenkins BART Plugin vulnerable to cross-site scripting (XSS)",
            "date_modified": "2022-12-15T20:47:51.000Z",
            "date_published": "2022-11-16T12:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j923-26c2-qq9p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins NS-ND Integration Performance Publisher Plugin 4.8.0.146 and earlier unconditionally disables SSL/TLS certificate and hostname validation for several features. Currently, there are no known workarounds or patches.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-38666\">https://nvd.nist.gov/vuln/detail/CVE-2022-38666</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2910%20(2)\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2910%20(2)</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vj5r-mmp4-3hrx\">https://github.com/advisories/GHSA-vj5r-mmp4-3hrx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vj5r-mmp4-3hrx",
            "title": "[org.jenkins-ci.main:cavisson-ns-nd-integration] SSL/TLS certificate validation unconditionally disabled by Jenkins NS-ND Integration Performance Publisher Plugin",
            "date_modified": "2022-12-15T20:44:47.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vj5r-mmp4-3hrx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NS-ND Integration Performance Publisher Plugin 4.8.0.143 and earlier globally and unconditionally disables SSL/TLS certificate and hostname validation for the entire Jenkins controller JVM.</p>\n<p>NS-ND Integration Performance Publisher Plugin 4.8.0.146 no longer disables SSL/TLS certificate and hostname validation globally.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45391\">https://nvd.nist.gov/vuln/detail/CVE-2022-45391</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2910%20(1)\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2910%20(1)</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3vwm-fc87-mq6h\">https://github.com/advisories/GHSA-3vwm-fc87-mq6h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3vwm-fc87-mq6h",
            "title": "[io.jenkins.plugins:cavisson-ns-nd-integration] SSL/TLS certificate validation globally and unconditionally disabled by Jenkins NS-ND Integration Performance Publisher Plugin",
            "date_modified": "2022-12-15T19:45:47.000Z",
            "date_published": "2022-11-16T12:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3vwm-fc87-mq6h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>NS-ND Integration Performance Publisher Plugin 4.8.0.143 and earlier stores passwords unencrypted in job <code>config.xml</code> files on the Jenkins controller as part of its configuration.</p>\n<p>These passwords can be viewed by attackers with Item/Extended Read permission or access to the Jenkins controller file system.</p>\n<p>NS-ND Integration Performance Publisher Plugin 4.8.0.146 stores passwords encrypted once job configurations are saved again.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45392\">https://nvd.nist.gov/vuln/detail/CVE-2022-45392</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2912\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2912</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x2w2-5552-fjv6\">https://github.com/advisories/GHSA-x2w2-5552-fjv6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x2w2-5552-fjv6",
            "title": "[io.jenkins.plugins:cavisson-ns-nd-integration] Plaintext Storage of a Password in Jenkins NS-ND Integration Performance Publisher Plugin",
            "date_modified": "2022-12-15T19:42:13.000Z",
            "date_published": "2022-11-16T12:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x2w2-5552-fjv6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CloudBees Docker Hub/Registry Notification Plugin provides several webhook endpoints that can be used to trigger builds when Docker images used by a job have been rebuilt.</p>\n<p>In CloudBees Docker Hub/Registry Notification Plugin 2.6.2 and earlier, these endpoints can be accessed without authentication.</p>\n<p>This allows unauthenticated attackers to trigger builds of jobs corresponding to the attacker-specified repository.</p>\n<p>CloudBees Docker Hub/Registry Notification Plugin 2.6.2.1 requires a token as a part of webhook URLs, which will act as authentication for the webhook endpoint. As a result, all webhook URLs in the plugin will be different after updating the plugin.</p>\n<p>Administrators can set the <a href=\"https://www.jenkins.io/doc/book/managing/system-properties/\">Java system</a> property <code>org.jenkinsci.plugins.registry.notification.webhook.JSONWebHook.DO_NOT_REQUIRE_API_TOKEN</code> to <code>true</code> to disable this fix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45385\">https://nvd.nist.gov/vuln/detail/CVE-2022-45385</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2843\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2843</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v535-pc6r-77qh\">https://github.com/advisories/GHSA-v535-pc6r-77qh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v535-pc6r-77qh",
            "title": "[org.jenkins-ci.plugins:dockerhub-notification] Lack of authentication mechanism for webhook in CloudBees Docker Hub/Registry Notification Plugin",
            "date_modified": "2022-12-15T19:26:45.000Z",
            "date_published": "2022-11-16T12:00:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v535-pc6r-77qh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Support Core Plugin defines the permission Support/DownloadBundle that allows users without Overall/Administer permission to create and download support bundles containing a limited set of diagnostic information.</p>\n<p>Support Core Plugin 1206.v14049fa_b_d860 and earlier does not correctly perform permission checks in several HTTP endpoints.</p>\n<p>This allows attackers with Support/DownloadBundle permission to download a previously created support bundle containing information limited to users with Overall/Administer permission.</p>\n<p>Support Core Plugin 1206.1208.v9b_7a_1d48db_0f deprecates the Support/DownloadBundle permission. The Overall/Administer permission is now required to download support bundles.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45383\">https://nvd.nist.gov/vuln/detail/CVE-2022-45383</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2804\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2804</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2j3-pq63-339w\">https://github.com/advisories/GHSA-w2j3-pq63-339w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2j3-pq63-339w",
            "title": "[org.jenkins-ci.plugins:support-core] Incorrect permission checks in Jenkins Support Core Plugin",
            "date_modified": "2022-12-15T19:25:06.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2j3-pq63-339w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Naginator Plugin 1.18.1 and earlier does not escape display names of source builds in builds that were triggered via Retry action.</p>\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to edit build display names.</p>\n<p>Naginator Plugin 1.18.2 escapes display names of source builds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45382\">https://nvd.nist.gov/vuln/detail/CVE-2022-45382</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2946\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2946</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h8hf-hxx6-5g6v\">https://github.com/advisories/GHSA-h8hf-hxx6-5g6v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h8hf-hxx6-5g6v",
            "title": "[org.jenkins-ci.plugins:naginator] Cross-site Scripting in Jenkins Naginator Plugin",
            "date_modified": "2022-12-15T18:55:48.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h8hf-hxx6-5g6v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pipeline Utility Steps Plugin implements a <code>readProperties</code> Pipeline step that supports interpolation of variables using the Apache Commons Configuration library.</p>\n<p>Pipeline Utility Steps Plugin 2.13.1 and earlier does not restrict the set of enabled prefix interpolators and bundles versions of this library that enable the <code>file:</code> prefix interpolator by default.</p>\n<p>This allows attackers able to configure Pipelines to read arbitrary files from the Jenkins controller file system.</p>\n<p>Pipeline Utility Steps Plugin 2.13.2 restricts the set of prefix interpolators enabled by default to <code>base64Decoder:</code>, <code>base64Encoder:</code>, <code>date:</code>, <code>urlDecoder:</code>, and <code>urlEncoder:</code>.</p>\n<p>Administrators can set the <a href=\"https://www.jenkins.io/doc/book/managing/system-properties/\">Java system property</a> <code>org.jenkinsci.plugins.pipeline.utility.steps.conf.ReadPropertiesStepExecution.CUSTOM_PREFIX_INTERPOLATOR_LOOKUPS</code> to customize which prefix interpolators are enabled.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45381\">https://nvd.nist.gov/vuln/detail/CVE-2022-45381</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2949\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2949</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3g9q-cmgv-g4p6\">https://github.com/advisories/GHSA-3g9q-cmgv-g4p6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3g9q-cmgv-g4p6",
            "title": "[org.jenkins-ci.plugins:pipeline-utility-steps] Arbitrary file read vulnerability in Jenkins Pipeline Utility Steps Plugin",
            "date_modified": "2022-12-15T18:54:01.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3g9q-cmgv-g4p6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>JUnit Plugin 1159.v0b_396e1e07dd and earlier converts HTTP(S) URLs in test report output to clickable links.</p>\n<p>This is done in an unsafe manner, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item/Configure permission.</p>\n<p>JUnit Plugin 1160.vf1f01a_a_ea_b_7f no longer converts URLs to clickable links.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45380\">https://nvd.nist.gov/vuln/detail/CVE-2022-45380</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2888\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2888</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-298r-5c48-7q2r\">https://github.com/advisories/GHSA-298r-5c48-7q2r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-298r-5c48-7q2r",
            "title": "[org.jenkins-ci.plugins:junit] Jenkins JUnit Plugin subject to Cross-site Scripting via URL conversion",
            "date_modified": "2022-12-15T18:49:47.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-298r-5c48-7q2r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Script Security Plugin 1189.vb_a_b_7c8fd5fde and earlier stores whole-script approvals as the <a href=\"https://en.wikipedia.org/wiki/SHA-1\">SHA-1 hash</a> of the approved script. SHA-1 no longer meets the security standards for producing a cryptographically secure message digest.</p>\n<p>Script Security Plugin 1190.v65867a_a_47126 uses SHA-512 for new whole-script approvals. Previously approved scripts will have their SHA-1 based whole-script approval replaced with a corresponding SHA-512 whole-script approval when the script is next used.</p>\n<p>Whole-script approval only stores the SHA-1 or SHA-512 hash, so it is not possible to migrate all previously approved scripts automatically on startup.</p>\n<p>Administrators concerned about SHA-1 collision attacks on the whole-script approval feature are able to revoke all previous (SHA-1) script approvals on the In-Process Script Approval page.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45379\">https://nvd.nist.gov/vuln/detail/CVE-2022-45379</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2564\">https://www.jenkins.io/security/advisory/2022-11-15/#SECURITY-2564</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fv42-mx39-6fpw\">https://github.com/advisories/GHSA-fv42-mx39-6fpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fv42-mx39-6fpw",
            "title": "[org.jenkins-ci.plugins:script-security] Whole-script approval in Jenkins Script Security Plugin vulnerable to SHA-1 collisions",
            "date_modified": "2022-12-15T18:45:28.000Z",
            "date_published": "2022-11-16T12:00:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fv42-mx39-6fpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins P4 Plugin 1.11.4 and earlier does not perform permission checks in multiple HTTP endpoints, allowing attackers with Overall/Read permission to connect to an attacker-specified Perforce server using attacker-specified username and password.</p>\n<p>P4 Plugin 1.11.5 requires Overall/Administer for the affected HTTP endpoints.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21654\">https://nvd.nist.gov/vuln/detail/CVE-2021-21654</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2327\">https://www.jenkins.io/security/advisory/2021-05-11/#SECURITY-2327</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h6qv-f5gf-8gcf\">https://github.com/advisories/GHSA-h6qv-f5gf-8gcf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h6qv-f5gf-8gcf",
            "title": "[org.jenkins-ci.plugins:p4] Missing Authorization in Jenkins P4 plugin",
            "date_modified": "2022-12-15T18:21:22.000Z",
            "date_published": "2021-06-16T17:29:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h6qv-f5gf-8gcf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins stores jobs and other entities on disk using their name shown on the UI as file and folder names.</p>\n<p>On Windows, when specifying a file or folder with a trailing dot character (<code>example.</code>), the file or folder will be treated as if that character was not present (<code>example</code>). As both are legal names for jobs and other entities in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier, this could allow users with the appropriate permissions to change or replace configurations of jobs and other entities.</p>\n<p>Jenkins 2.315, LTS 2.303.2 does not allow names of jobs and other entities to end with a dot character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21682\">https://nvd.nist.gov/vuln/detail/CVE-2021-21682</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2424\">https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2424</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/10/06/1\">http://www.openwall.com/lists/oss-security/2021/10/06/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6q4g-84f3-mw74\">https://github.com/advisories/GHSA-6q4g-84f3-mw74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6q4g-84f3-mw74",
            "title": "[org.jenkins-ci.main:jenkins-core] Improper handling of equivalent directory names on Windows in Jenkins",
            "date_modified": "2022-12-15T17:39:42.000Z",
            "date_published": "2022-05-24T19:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6q4g-84f3-mw74"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins stores jobs and other entities on disk using their name shown on the UI as file and folder names.</p>\n<p>On Windows, when specifying a file or folder with a trailing dot character (<code>example.</code>), the file or folder will be treated as if that character was not present (<code>example</code>). As both are legal names for jobs and other entities in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier, this could allow users with the appropriate permissions to change or replace configurations of jobs and other entities.</p>\n<p>Jenkins 2.315, LTS 2.303.2 does not allow names of jobs and other entities to end with a dot character.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21682\">https://nvd.nist.gov/vuln/detail/CVE-2021-21682</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2424\">https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2424</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/10/06/1\">http://www.openwall.com/lists/oss-security/2021/10/06/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6q4g-84f3-mw74\">https://github.com/advisories/GHSA-6q4g-84f3-mw74</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6q4g-84f3-mw74",
            "title": "[org.jenkins-ci.main:jenkins-core] Improper handling of equivalent directory names on Windows in Jenkins",
            "date_modified": "2022-12-15T17:39:42.000Z",
            "date_published": "2022-05-24T19:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6q4g-84f3-mw74"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The file browser for workspaces, archived artifacts, and <code>userContent/</code> in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier may interpret some paths to files as absolute on Windows.</p>\n<p>This results in a path traversal vulnerability allowing attackers with Overall/Read permission (Windows controller) or Job/Workspace permission (Windows agents) to obtain the contents of arbitrary files.\\n\\nThe file browser in Jenkins 2.315, LTS 2.303.2 refuses to serve files that would be considered absolute paths.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21683\">https://nvd.nist.gov/vuln/detail/CVE-2021-21683</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2481\">https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2481</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/10/06/1\">http://www.openwall.com/lists/oss-security/2021/10/06/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4pw5-r58h-fv24\">https://github.com/advisories/GHSA-4pw5-r58h-fv24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4pw5-r58h-fv24",
            "title": "[org.jenkins-ci.main:jenkins-core] Path traversal vulnerability on Windows in Jenkins",
            "date_modified": "2022-12-15T17:37:38.000Z",
            "date_published": "2022-05-24T19:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4pw5-r58h-fv24"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The file browser for workspaces, archived artifacts, and <code>userContent/</code> in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier may interpret some paths to files as absolute on Windows.</p>\n<p>This results in a path traversal vulnerability allowing attackers with Overall/Read permission (Windows controller) or Job/Workspace permission (Windows agents) to obtain the contents of arbitrary files.\\n\\nThe file browser in Jenkins 2.315, LTS 2.303.2 refuses to serve files that would be considered absolute paths.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21683\">https://nvd.nist.gov/vuln/detail/CVE-2021-21683</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2481\">https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2481</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/10/06/1\">http://www.openwall.com/lists/oss-security/2021/10/06/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4pw5-r58h-fv24\">https://github.com/advisories/GHSA-4pw5-r58h-fv24</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4pw5-r58h-fv24",
            "title": "[org.jenkins-ci.main:jenkins-core] Path traversal vulnerability on Windows in Jenkins",
            "date_modified": "2022-12-15T17:37:38.000Z",
            "date_published": "2022-05-24T19:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4pw5-r58h-fv24"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Git Plugin 4.8.2 and earlier does not escape the Git SHA-1 checksum parameters provided to commit notifications when displaying them in a build cause.</p>\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers able to submit crafted commit notifications to the <code>/git/notifyCommit</code> endpoint.</p>\n<p>Git Plugin 4.8.3 rejects Git SHA-1 checksum parameters that do not match the expected format. Existing values are sanitized when displayed on the UI.</p>\n<p>This vulnerability is only exploitable in Jenkins 2.314 and earlier, LTS 2.303.1 and earlier. See the <a href=\"https://www.jenkins.io/doc/upgrade-guide/2.303/#SECURITY-2452\">LTS upgrade guide</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21684\">https://nvd.nist.gov/vuln/detail/CVE-2021-21684</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2499\">https://www.jenkins.io/security/advisory/2021-10-06/#SECURITY-2499</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/10/06/1\">http://www.openwall.com/lists/oss-security/2021/10/06/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gghc-g8cj-4vfv\">https://github.com/advisories/GHSA-gghc-g8cj-4vfv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gghc-g8cj-4vfv",
            "title": "[org.jenkins-ci.plugins:git] Stored XSS vulnerability in Jenkins Git Plugin",
            "date_modified": "2022-12-15T17:36:32.000Z",
            "date_published": "2022-05-24T19:16:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gghc-g8cj-4vfv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Filesystem Trigger Plugin 0.40 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>\n<p>This allows attackers with Job/Configure permission or otherwise able to control the contents of an XML file being polled for changes to have Jenkins parse a crafted XML document that uses external entities for extraction of secrets from the polling Jenkins controller or agent, server-side request forgery, or denial-of-service attacks.</p>\n<p>Filesystem Trigger Plugin 0.41 disables external entity resolution for its XML parser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21657\">https://nvd.nist.gov/vuln/detail/CVE-2021-21657</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2339\">https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2339</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/05/25/3\">http://www.openwall.com/lists/oss-security/2021/05/25/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cphv-7cxw-5hcc\">https://github.com/advisories/GHSA-cphv-7cxw-5hcc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cphv-7cxw-5hcc",
            "title": "[org.jenkins-ci.plugins:fstrigger] XXE vulnerability in Jenkins Filesystem Trigger Plugin",
            "date_modified": "2022-12-15T17:35:17.000Z",
            "date_published": "2022-05-24T19:03:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cphv-7cxw-5hcc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>URLTrigger Plugin 0.48 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>\n<p>This allows attackers with Job/Configure permission or otherwise able to control the contents of an URL to an XML document being examined for changes to have Jenkins parse a crafted XML document that uses external entities for extraction of secrets from the polling Jenkins controller or agent, server-side request forgery, or denial-of-service attacks.</p>\n<p>URLTrigger Plugin 0.49 disables external entity resolution for its XML parser.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21659\">https://nvd.nist.gov/vuln/detail/CVE-2021-21659</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2341\">https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2341</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/05/25/3\">http://www.openwall.com/lists/oss-security/2021/05/25/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-34j5-c4cv-mmg5\">https://github.com/advisories/GHSA-34j5-c4cv-mmg5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-34j5-c4cv-mmg5",
            "title": "[org.jenkins-ci.plugins:urltrigger] XXE vulnerability in Jenkins URLTrigger Plugin",
            "date_modified": "2022-12-15T17:33:56.000Z",
            "date_published": "2022-05-24T19:03:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-34j5-c4cv-mmg5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Markdown Formatter Plugin 0.1.0 and earlier uses a Markdown library to parse Markdown that does not escape crafted link target URLs.</p>\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with the ability to edit any description rendered using the configured markup formatter.</p>\n<p>Markdown Formatter Plugin 0.2.0 uses a different Markdown library that is not affected by this problem.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21660\">https://nvd.nist.gov/vuln/detail/CVE-2021-21660</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2198\">https://www.jenkins.io/security/advisory/2021-05-25/#SECURITY-2198</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-21660\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-21660</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/05/25/3\">http://www.openwall.com/lists/oss-security/2021/05/25/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xqpp-26pp-2365\">https://github.com/advisories/GHSA-xqpp-26pp-2365</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xqpp-26pp-2365",
            "title": "[io.jenkins.plugins:markmarkdown-formatter] XSS vulnerability in Jenkins Markdown Formatter Plugin",
            "date_modified": "2022-12-15T17:32:32.000Z",
            "date_published": "2022-05-24T19:03:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xqpp-26pp-2365"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Build With Parameters Plugin 1.5 and earlier does not escape parameter names and descriptions.</p>\n<p>This results in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Job/Configure permission.</p>\n<p>Build With Parameters Plugin 1.5.1 escapes parameter names and descriptions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-21628\">https://nvd.nist.gov/vuln/detail/CVE-2021-21628</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2231\">https://www.jenkins.io/security/advisory/2021-03-30/#SECURITY-2231</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2021/03/30/1\">http://www.openwall.com/lists/oss-security/2021/03/30/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xjrg-6fv9-6rjg\">https://github.com/advisories/GHSA-xjrg-6fv9-6rjg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xjrg-6fv9-6rjg",
            "title": "[org.jenkins-ci.plugins:build-with-parameters] Stored XSS vulnerability in Jenkins Build With Parameters Plugin",
            "date_modified": "2022-12-15T17:31:00.000Z",
            "date_published": "2022-05-24T17:45:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xjrg-6fv9-6rjg"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}