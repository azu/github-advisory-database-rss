{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>JeecgBoot up to v 3.5.1 was discovered to contain a SQL injection vulnerability via the component <code>queryFilterTableDictInfo</code> in method <code>org.jeecg.modules.api.controller.SystemApiController</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34603\">https://nvd.nist.gov/vuln/detail/CVE-2023-34603</a></li>\n<li><a href=\"https://github.com/jeecgboot/jeecg-boot/issues/4984\">https://github.com/jeecgboot/jeecg-boot/issues/4984</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cvgc-465m-cw9g\">https://github.com/advisories/GHSA-cvgc-465m-cw9g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cvgc-465m-cw9g",
            "title": "[org.jeecgframework.boot:jeecg-boot-parent] JeecgBoot vulnerable to SQL injection in queryFilterTableDictInfo",
            "date_modified": "2023-06-19T22:46:38.000Z",
            "date_published": "2023-06-19T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cvgc-465m-cw9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>JeecgBoot up to v 3.5.1 was discovered to contain a SQL injection vulnerability via the component <code>queryTableDictItemsByCode</code> in method <code>org.jeecg.modules.api.controller.SystemApiController</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34602\">https://nvd.nist.gov/vuln/detail/CVE-2023-34602</a></li>\n<li><a href=\"https://github.com/jeecgboot/jeecg-boot/issues/4983\">https://github.com/jeecgboot/jeecg-boot/issues/4983</a></li>\n<li><a href=\"https://github.com/jeecgboot/jeecg-boot/commit/dd7bf104e7ed59142909567ecd004335c3442ec5\">https://github.com/jeecgboot/jeecg-boot/commit/dd7bf104e7ed59142909567ecd004335c3442ec5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-784x-7w88-w564\">https://github.com/advisories/GHSA-784x-7w88-w564</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-784x-7w88-w564",
            "title": "[org.jeecgframework.boot:jeecg-boot-parent] JeecgBoot vulnerable to SQL injection in queryTableDictItemsByCode",
            "date_modified": "2023-06-19T22:46:36.000Z",
            "date_published": "2023-06-19T06:30:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-784x-7w88-w564"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Whaleal IceFrog v1.1.8 component Aviator Template Engine is vulnerable to deserialization of untrusted data. The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3308\">https://nvd.nist.gov/vuln/detail/CVE-2023-3308</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.231804\">https://vuldb.com/?ctiid.231804</a></li>\n<li><a href=\"https://vuldb.com/?id.231804\">https://vuldb.com/?id.231804</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rx62-5cw6-x29q\">https://github.com/advisories/GHSA-rx62-5cw6-x29q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rx62-5cw6-x29q",
            "title": "[com.whaleal.icefrog:icefrog-all] Whaleal IceFrog is vulnerable to deserialization ",
            "date_modified": "2023-06-19T22:46:25.000Z",
            "date_published": "2023-06-18T09:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rx62-5cw6-x29q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins MSTest Plugin 1.0.0 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-24441\">https://nvd.nist.gov/vuln/detail/CVE-2023-24441</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2023-01-24/#SECURITY-2292\">https://www.jenkins.io/security/advisory/2023-01-24/#SECURITY-2292</a></li>\n<li><a href=\"https://github.com/jenkinsci/mstest-plugin/releases/tag/mstest-1.0.1\">https://github.com/jenkinsci/mstest-plugin/releases/tag/mstest-1.0.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3ppr-72x5-x67q\">https://github.com/advisories/GHSA-3ppr-72x5-x67q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3ppr-72x5-x67q",
            "title": "[org.jvnet.hudson.plugins:mstest] XML external entity vulnerability on agents in Jenkins MSTest Plugin ",
            "date_modified": "2023-06-19T19:54:00.000Z",
            "date_published": "2023-01-26T21:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3ppr-72x5-x67q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>jeecg-boot 3.5.0 and 3.5.1 have a SQL injection vulnerability the <code>id</code> parameter of the <code>/jeecg-boot/jmreport/show</code> interface.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34659\">https://nvd.nist.gov/vuln/detail/CVE-2023-34659</a></li>\n<li><a href=\"https://github.com/jeecgboot/jeecg-boot/issues/4976\">https://github.com/jeecgboot/jeecg-boot/issues/4976</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-934g-fvcc-4833\">https://github.com/advisories/GHSA-934g-fvcc-4833</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-934g-fvcc-4833",
            "title": "[org.jeecgframework.boot:jeecg-boot-parent] jeecg-boot SQL injection vulnerability",
            "date_modified": "2023-06-16T20:27:36.000Z",
            "date_published": "2023-06-16T18:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-934g-fvcc-4833"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>jeecg-boot V3.5.0 has an unauthorized arbitrary file upload in <code>/jeecg-boot/jmreport/upload</code> interface.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34660\">https://nvd.nist.gov/vuln/detail/CVE-2023-34660</a></li>\n<li><a href=\"https://github.com/jeecgboot/jeecg-boot/issues/4990\">https://github.com/jeecgboot/jeecg-boot/issues/4990</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jf2f-hvxx-4rqx\">https://github.com/advisories/GHSA-jf2f-hvxx-4rqx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jf2f-hvxx-4rqx",
            "title": "[org.jeecgframework.boot:jeecg-boot-parent] jeecg-boot unrestricted file upload vulnerability",
            "date_modified": "2023-06-16T20:27:32.000Z",
            "date_published": "2023-06-16T18:30:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jf2f-hvxx-4rqx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability, which was classified as problematic, has been found in Dromara HuTool up to 5.8.19. Affected by this issue is the function readBySax of the file XmlUtil.java of the component XML Parsing Module. The manipulation leads to xml external entity reference.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-3276\">https://nvd.nist.gov/vuln/detail/CVE-2023-3276</a></li>\n<li><a href=\"https://fbdhhhh47.github.io/2023/06/06/hutool-XXE/\">https://fbdhhhh47.github.io/2023/06/06/hutool-XXE/</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.231626\">https://vuldb.com/?ctiid.231626</a></li>\n<li><a href=\"https://vuldb.com/?id.231626\">https://vuldb.com/?id.231626</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p2qf-9vp6-3jjq\">https://github.com/advisories/GHSA-p2qf-9vp6-3jjq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p2qf-9vp6-3jjq",
            "title": "[cn.hutool:hutool-core] HuTool XML parsing module has blind XXE vulnerability",
            "date_modified": "2023-06-16T19:39:30.000Z",
            "date_published": "2023-06-15T15:30:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p2qf-9vp6-3jjq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Due to use of an unchecked chunk length, an unrecoverable fatal error can occur.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Denial of Service</p>\n<h2 id=\"description\">Description</h2>\n<p>The code in the function <a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388\">hasNextChunk</a> in the file <a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java\">SnappyInputStream.java</a> checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.</p>\n<pre><code class=\"language-java\">        int readBytes = readNext(header, 0, 4);\n        if (readBytes &lt; 4) {\n            return false;\n        }\n\n        int chunkSize = SnappyOutputStream.readInt(header, 0);\n        if (chunkSize == SnappyCodec.MAGIC_HEADER_HEAD) {\n            .........\n        }\n\n        // extend the compressed data buffer size\n        if (compressed == null || chunkSize &gt; compressed.length) {\n            compressed = new byte[chunkSize];\n        }\n</code></pre>\n<p>In the case that the “compressed” variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the “chunkSize” variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a “java.lang.NegativeArraySizeException” exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal “java.lang.OutOfMemoryError” error.</p>\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce</h2>\n<p>Compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.SnappyInputStream;\n\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff};\n        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n        byte[] out = new byte[50];\n        try {\n            in.read(out);\n        }\n        catch (Exception ignored) {\n\n        }\n    }\n}\n</code></pre>\n<p>The program will crash with the following error (or similar), even though there is a catch clause, since “OutOfMemoryError” does not get caught by catching the “Exception” class:</p>\n<pre><code>Exception in thread \"main\" java.lang.OutOfMemoryError: Requested array size exceeds VM limit\n    at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422)\n    at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167)\n    at java.base/java.io.InputStream.read(InputStream.java:217)\n    at org.example.Main.main(Main.java:12)\n</code></pre>\n<p>Alternatively - compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.SnappyInputStream;\n\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff};\n        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n        byte[] out = new byte[50];\n        in.read(out);\n    }\n}\n</code></pre>\n<p>The program will crash with the following error (or similar):</p>\n<pre><code>Exception in thread \"main\" java.lang.NegativeArraySizeException: -1\n    at org.xerial.snappy.SnappyInputStream.hasNextChunk(SnappyInputStream.java:422)\n    at org.xerial.snappy.SnappyInputStream.read(SnappyInputStream.java:167)\n    at java.base/java.io.InputStream.read(InputStream.java:217)\n    at org.example.Main.main(Main.java:12)\n</code></pre>\n<p>It is important to note that these examples were written by using a flow that is generally used by developers, and can be seen for example in the Apache project “flume”: <a href=\"https://github.com/apache/flume/blob/f9dbb2de255d59e35e3668a5c6c66a268a055207/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java#L278\">https://github.com/apache/flume/blob/f9dbb2de255d59e35e3668a5c6c66a268a055207/flume-ng-channels/flume-file-channel/src/main/java/org/apache/flume/channel/file/Serialization.java#L278</a>. Since they used try-catch, the “NegativeArraySizeException” exception won’t harm their users, but the “OutOfMemoryError” error can.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh\">https://github.com/xerial/snappy-java/security/advisories/GHSA-qcwq-55hx-v3vh</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea\">https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388\">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/SnappyInputStream.java#L388</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java\">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/SnappyInputStream.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qcwq-55hx-v3vh\">https://github.com/advisories/GHSA-qcwq-55hx-v3vh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qcwq-55hx-v3vh",
            "title": "[org.xerial.snappy:snappy-java] snappy-java's unchecked chunk length leads to DoS",
            "date_modified": "2023-06-15T17:15:07.000Z",
            "date_published": "2023-06-15T17:15:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qcwq-55hx-v3vh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Due to unchecked multiplications, an integer overflow may occur, causing an unrecoverable fatal error.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Denial of Service</p>\n<h2 id=\"description\">Description</h2>\n<p>The function <a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169\">compress(char[] input)</a> in the file <a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java\">Snappy.java</a> receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the <a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422\">rawCompress</a> function.</p>\n<pre><code class=\"language-java\">public static byte[] compress(char[] input)\n            throws IOException\n    {\n        return rawCompress(input, input.length * 2); // char uses 2 bytes\n    }\n</code></pre>\n<p>Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.</p>\n<pre><code class=\"language-java\">    public static byte[] rawCompress(Object data, int byteSize)\n            throws IOException\n    {\n        byte[] buf = new byte[Snappy.maxCompressedLength(byteSize)];\n        int compressedByteSize = impl.rawCompress(data, 0, byteSize, buf, 0);\n        byte[] result = new byte[compressedByteSize];\n        System.arraycopy(buf, 0, result, 0, compressedByteSize);\n        return result;\n    }\n</code></pre>\n<p>Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a “java.lang.NegativeArraySizeException” exception will be raised while trying to allocate the array “buf”. On the other side, if the result is positive, the “buf” array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.\nThe same issue exists also when using the “compress” functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.</p>\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce</h2>\n<p>Compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.Snappy;\n\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        char[] uncompressed = new char[0x40000000];\n        byte[] compressed = Snappy.compress(uncompressed);\n    }\n}\n</code></pre>\n<p>The program will crash, creating crashdumps and showing the following error (or similar):</p>\n<pre><code>#\n# A fatal error has been detected by the Java Runtime Environment:\n#\n#  EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x0000000063a01c20, pid=21164, tid=508\n#\n.......\n</code></pre>\n<p>Alternatively - compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.Snappy;\n\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        char[] uncompressed = new char[0x3fffffff];\n        byte[] compressed = Snappy.compress(uncompressed);\n    }\n}\n</code></pre>\n<p>The program will crash with the following error (or similar), since the maxCompressedLength returns a value that is interpreted as negative by java:</p>\n<pre><code>Exception in thread \"main\" java.lang.NegativeArraySizeException: -1789569677\n    at org.xerial.snappy.Snappy.rawCompress(Snappy.java:425)\n    at org.xerial.snappy.Snappy.compress(Snappy.java:172)\n    at org.example.Main.main(Main.java:10)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xerial/snappy-java/security/advisories/GHSA-fjpj-2g6w-x25r\">https://github.com/xerial/snappy-java/security/advisories/GHSA-fjpj-2g6w-x25r</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/commit/d0042551e4a3509a725038eb9b2ad1f683674d94\">https://github.com/xerial/snappy-java/commit/d0042551e4a3509a725038eb9b2ad1f683674d94</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169\">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L169</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422\">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/Snappy.java#L422</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java\">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/Snappy.java</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34454\">https://nvd.nist.gov/vuln/detail/CVE-2023-34454</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjpj-2g6w-x25r\">https://github.com/advisories/GHSA-fjpj-2g6w-x25r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fjpj-2g6w-x25r",
            "title": "[org.xerial.snappy:snappy-java] snappy-java's Integer Overflow vulnerability in compress leads to DoS",
            "date_modified": "2023-06-16T16:51:38.000Z",
            "date_published": "2023-06-15T16:28:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fjpj-2g6w-x25r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Due to unchecked multiplications, an integer overflow may occur, causing a fatal error.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Denial of Service</p>\n<h2 id=\"description\">Description</h2>\n<p>The function <a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107\">shuffle(int[] input)</a> in the file <a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java\">BitShuffle.java</a> receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function.</p>\n<pre><code class=\"language-java\">public static byte[] shuffle(int[] input) throws IOException {\n        byte[] output = new byte[input.length * 4];\n        int numProcessed = impl.shuffle(input, 0, 4, input.length * 4, output, 0);\n        assert(numProcessed == input.length * 4);\n        return output;\n    }\n</code></pre>\n<p>Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a “java.lang.NegativeArraySizeException” exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as “java.lang.ArrayIndexOutOfBoundsException”.\nThe same issue exists also when using the “shuffle” functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.</p>\n<h2 id=\"steps-to-reproduce\">Steps To Reproduce</h2>\n<p>Compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.BitShuffle;\n\nimport java.io.*;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        int[] original = new int[0x40000000];\n        byte[] shuffled = BitShuffle.shuffle(original);\n        System.out.println(shuffled[0]);\n    }\n}\n</code></pre>\n<p>The program will crash, showing the following error (or similar):</p>\n<pre><code>Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length 0\n    at org.example.Main.main(Main.java:12)\n\nProcess finished with exit code 1\n</code></pre>\n<p>Alternatively - compile and run the following code:</p>\n<pre><code class=\"language-java\">package org.example;\nimport org.xerial.snappy.BitShuffle;\n\nimport java.io.*;\n\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        int[] original = new int[0x20000000];\n        byte[] shuffled = BitShuffle.shuffle(original);\n    }\n}\n</code></pre>\n<p>The program will crash with the following error (or similar):</p>\n<pre><code>Exception in thread \"main\" java.lang.NegativeArraySizeException: -2147483648\n    at org.xerial.snappy.BitShuffle.shuffle(BitShuffle.java:108)\n    at org.example.Main.main(Main.java:11)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf\">https://github.com/xerial/snappy-java/security/advisories/GHSA-pqr6-cmr2-h8hf</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905\">https://github.com/xerial/snappy-java/commit/820e2e074c58748b41dbd547f4edba9e108ad905</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107\">https://github.com/xerial/snappy-java/blob/05c39b2ca9b5b7b39611529cc302d3d796329611/src/main/java/org/xerial/snappy/BitShuffle.java#L107</a></li>\n<li><a href=\"https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java\">https://github.com/xerial/snappy-java/blob/master/src/main/java/org/xerial/snappy/BitShuffle.java</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34453\">https://nvd.nist.gov/vuln/detail/CVE-2023-34453</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pqr6-cmr2-h8hf\">https://github.com/advisories/GHSA-pqr6-cmr2-h8hf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pqr6-cmr2-h8hf",
            "title": "[org.xerial.snappy:snappy-java] snappy-java's Integer Overflow vulnerability in shuffle leads to DoS",
            "date_modified": "2023-06-16T16:51:35.000Z",
            "date_published": "2023-06-15T16:13:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pqr6-cmr2-h8hf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered JSONUtil through 5.0 that allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34615\">https://nvd.nist.gov/vuln/detail/CVE-2023-34615</a></li>\n<li><a href=\"https://github.com/billdavidson/JSONUtil/issues/10\">https://github.com/billdavidson/JSONUtil/issues/10</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w2rr-wvh9-m2m7\">https://github.com/advisories/GHSA-w2rr-wvh9-m2m7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w2rr-wvh9-m2m7",
            "title": "[net.pwall.json:jsonutil] JSONUtil vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:20:51.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w2rr-wvh9-m2m7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered jjson through 0.1.7 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35110\">https://nvd.nist.gov/vuln/detail/CVE-2023-35110</a></li>\n<li><a href=\"https://github.com/grobmeier/jjson/issues/2\">https://github.com/grobmeier/jjson/issues/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75m3-f4hr-2vh9\">https://github.com/advisories/GHSA-75m3-f4hr-2vh9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75m3-f4hr-2vh9",
            "title": "[de.grobmeier.json:jjson] jjson vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:11:42.000Z",
            "date_published": "2023-06-14T15:30:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75m3-f4hr-2vh9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered sojo thru 1.1.1 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34613\">https://nvd.nist.gov/vuln/detail/CVE-2023-34613</a></li>\n<li><a href=\"https://github.com/maddingo/sojo/issues/15\">https://github.com/maddingo/sojo/issues/15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-75r3-38rh-pmxv\">https://github.com/advisories/GHSA-75r3-38rh-pmxv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-75r3-38rh-pmxv",
            "title": "[net.sf.sojo:sojo] sojo vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:10:34.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-75r3-38rh-pmxv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in ph-json that allows attackers to cause a denial of service or other unspecified impacts via crafted objects that have deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34612\">https://nvd.nist.gov/vuln/detail/CVE-2023-34612</a></li>\n<li><a href=\"https://github.com/phax/ph-commons/issues/35\">https://github.com/phax/ph-commons/issues/35</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mx27-gg24-h2jc\">https://github.com/advisories/GHSA-mx27-gg24-h2jc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mx27-gg24-h2jc",
            "title": "[com.helger.commons:ph-json] ph-json vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:16:15.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mx27-gg24-h2jc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered json-io through 4.14.0 allows attackers to cause a denial of service or other unspecified impacts via crafted object that have deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34610\">https://nvd.nist.gov/vuln/detail/CVE-2023-34610</a></li>\n<li><a href=\"https://github.com/jdereg/json-io/issues/169\">https://github.com/jdereg/json-io/issues/169</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-779h-3r69-4f5p\">https://github.com/advisories/GHSA-779h-3r69-4f5p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-779h-3r69-4f5p",
            "title": "[com.cedarsoftware:json-io] json-io vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:15:34.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-779h-3r69-4f5p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered htmlcleaner through version 2.28 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34624\">https://nvd.nist.gov/vuln/detail/CVE-2023-34624</a></li>\n<li><a href=\"https://github.com/amplafi/htmlcleaner/issues/13\">https://github.com/amplafi/htmlcleaner/issues/13</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jv4x-j47q-6qvp\">https://github.com/advisories/GHSA-jv4x-j47q-6qvp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jv4x-j47q-6qvp",
            "title": "[net.sourceforge.htmlcleaner:htmlcleaner] htmlcleaner vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:05:34.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jv4x-j47q-6qvp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Use of Java's default temporary directory for file creation in <code>FileBackedOutputStream</code> in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.</p>\n<p>Even though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-2976\">https://nvd.nist.gov/vuln/detail/CVE-2023-2976</a></li>\n<li><a href=\"https://github.com/google/guava/issues/2575\">https://github.com/google/guava/issues/2575</a></li>\n<li><a href=\"https://github.com/google/guava/issues/6532\">https://github.com/google/guava/issues/6532</a></li>\n<li><a href=\"https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284\">https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284</a></li>\n<li><a href=\"https://github.com/google/guava/releases/tag/v32.0.0\">https://github.com/google/guava/releases/tag/v32.0.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7g45-4rm6-3mm3\">https://github.com/advisories/GHSA-7g45-4rm6-3mm3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7g45-4rm6-3mm3",
            "title": "[com.google.guava:guava] Guava vulnerable to insecure use of temporary directory",
            "date_modified": "2023-06-14T21:01:08.000Z",
            "date_published": "2023-06-14T18:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7g45-4rm6-3mm3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered jmarsden/jsonij through 0.5.2 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34614\">https://nvd.nist.gov/vuln/detail/CVE-2023-34614</a></li>\n<li><a href=\"https://bitbucket.org/jmarsden/jsonij/issues/7/stack-overflow-error-caused-by-jsonij\">https://bitbucket.org/jmarsden/jsonij/issues/7/stack-overflow-error-caused-by-jsonij</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-66gv-5m8q-rrjc\">https://github.com/advisories/GHSA-66gv-5m8q-rrjc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-66gv-5m8q-rrjc",
            "title": "[cc.plural:jsonij] jsonij vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:15:10.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-66gv-5m8q-rrjc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered pbjson through 0.4.0 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34616\">https://nvd.nist.gov/vuln/detail/CVE-2023-34616</a></li>\n<li><a href=\"https://github.com/InductiveComputerScience/pbJson/issues/2\">https://github.com/InductiveComputerScience/pbJson/issues/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p4c9-x742-qh8c\">https://github.com/advisories/GHSA-p4c9-x742-qh8c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p4c9-x742-qh8c",
            "title": "[com.progsbase.libraries:JSON] pbjson vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:16:38.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p4c9-x742-qh8c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered genson through 1.6 allows attackers to cause a denial of service or other unspecified impacts via crafted objects that deeply nested structures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34617\">https://nvd.nist.gov/vuln/detail/CVE-2023-34617</a></li>\n<li><a href=\"https://github.com/owlike/genson/issues/191\">https://github.com/owlike/genson/issues/191</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fj64-qprx-q7vq\">https://github.com/advisories/GHSA-fj64-qprx-q7vq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fj64-qprx-q7vq",
            "title": "[com.owlike:genson] genson vulnerable to stack exhaustion",
            "date_modified": "2023-06-14T21:15:44.000Z",
            "date_published": "2023-06-14T15:30:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fj64-qprx-q7vq"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}