{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Apache Batik 1.13 is vulnerable to server-side request forgery, caused by improper input validation by the NodePickerPanel. By using a specially-crafted argument, an attacker could exploit this vulnerability to cause the underlying server to make arbitrary GET requests.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-11987\">https://nvd.nist.gov/vuln/detail/CVE-2020-11987</a></li>\n<li><a href=\"https://github.com/apache/xmlgraphics-batik/commit/0ef5b661a1f77772d1110877ea9e0287987098f6\">https://github.com/apache/xmlgraphics-batik/commit/0ef5b661a1f77772d1110877ea9e0287987098f6</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r2877ae10e8be56a3c52d03e373512ddd32f16b863f24c2e22f5a5ba2@%3Cdev.poi.apache.org%3E\">https://lists.apache.org/thread.html/r2877ae10e8be56a3c52d03e373512ddd32f16b863f24c2e22f5a5ba2@%3Cdev.poi.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r588d05a0790b40a0eb81088252e1e8c1efb99706631421f17038eb05@%3Cdev.poi.apache.org%3E\">https://lists.apache.org/thread.html/r588d05a0790b40a0eb81088252e1e8c1efb99706631421f17038eb05@%3Cdev.poi.apache.org%3E</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W7EAYO5XIHD6OIEA3HPK64UDDBSLNAC5/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W7EAYO5XIHD6OIEA3HPK64UDDBSLNAC5/</a></li>\n<li><a href=\"https://xmlgraphics.apache.org/security.html\">https://xmlgraphics.apache.org/security.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JEDID4DAVPECE6O4QQCSIS75BLLBUUAM/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JEDID4DAVPECE6O4QQCSIS75BLLBUUAM/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuApr2021.html\">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2022.html\">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2022.html\">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/BATIK-1284\">https://issues.apache.org/jira/browse/BATIK-1284</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2h63-qp69-fwvw\">https://github.com/advisories/GHSA-2h63-qp69-fwvw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2h63-qp69-fwvw",
            "title": "[org.apache.xmlgraphics:batik-svgbrowser] Server-side request forgery (SSRF) in Apache Batik",
            "date_modified": "2023-09-05T18:58:48.000Z",
            "date_published": "2022-01-06T20:35:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2h63-qp69-fwvw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-debug-jdk15on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-ext-jdk15on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-jdk15on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-debug-jdk14] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-ext-jdk14] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-jdk14] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-debug-jdk18on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-debug-jdk15to18] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-ext-jdk18on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-ext-jdk15to18] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-jdk15to18] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the <code>X509LDAPCertStoreSpi.java</code> class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: <code>CN=Subject*)(objectclass=</code>. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the <code>X509LDAPCertStoreSpi.java</code> class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://bouncycastle.org\">https://bouncycastle.org</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html\">https://lists.debian.org/debian-lts-announce/2023/08/msg00000.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230824-0008/\">https://security.netapp.com/advisory/ntap-20230824-0008/</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd\">https://github.com/bcgit/bc-java/commit/ccf93ca736b89250ff4ce079a5aa56f5cbf0ebbd</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java\">https://github.com/bcgit/bc-java/commits/main/prov/src/main/java/org/bouncycastle/jce/provider/X509LDAPCertStoreSpi.java</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-jdk18on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-09-05T16:57:43.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It is possible in XWiki to execute Velocity code without having script right by creating an XClass with a property of type \"TextArea\" and content type \"VelocityCode\" or \"VelocityWiki\". For the former, the syntax of the document needs to be set the <code>xwiki/1.0</code> (this syntax doesn't need to be installed). In both cases, when adding the property to an object, the Velocity code is executed regardless of the rights of the author of the property (edit right is still required, though). In both cases, the code is executed with the correct context author so no privileged APIs can be accessed. However, Velocity still grants access to otherwise inaccessible data and APIs that could allow further privilege escalation.</p>\n<p>At least for \"VelocityCode\", this behavior is most likely very old but only since XWiki 7.2, script right is a separate right, before that version all users were allowed to execute Velocity and thus this was expected and not a security issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in XWiki 14.10.10 and 15.4 RC1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20847\">https://jira.xwiki.org/browse/XWIKI-20847</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20848\">https://jira.xwiki.org/browse/XWIKI-20848</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839\">https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-m5m2-h6h9-p2c8\">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-m5m2-h6h9-p2c8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41046\">https://nvd.nist.gov/vuln/detail/CVE-2023-41046</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839\">https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20847\">https://jira.xwiki.org/browse/XWIKI-20847</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20848\">https://jira.xwiki.org/browse/XWIKI-20848</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5m2-h6h9-p2c8\">https://github.com/advisories/GHSA-m5m2-h6h9-p2c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5m2-h6h9-p2c8",
            "title": "[org.xwiki.platform:xwiki-platform-oldcore] Velocity execution without script right through VelocityCode and VelocityWiki property",
            "date_modified": "2023-09-04T16:36:41.000Z",
            "date_published": "2023-09-04T16:36:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5m2-h6h9-p2c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>It is possible in XWiki to execute Velocity code without having script right by creating an XClass with a property of type \"TextArea\" and content type \"VelocityCode\" or \"VelocityWiki\". For the former, the syntax of the document needs to be set the <code>xwiki/1.0</code> (this syntax doesn't need to be installed). In both cases, when adding the property to an object, the Velocity code is executed regardless of the rights of the author of the property (edit right is still required, though). In both cases, the code is executed with the correct context author so no privileged APIs can be accessed. However, Velocity still grants access to otherwise inaccessible data and APIs that could allow further privilege escalation.</p>\n<p>At least for \"VelocityCode\", this behavior is most likely very old but only since XWiki 7.2, script right is a separate right, before that version all users were allowed to execute Velocity and thus this was expected and not a security issue.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been patched in XWiki 14.10.10 and 15.4 RC1.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There are no known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20847\">https://jira.xwiki.org/browse/XWIKI-20847</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20848\">https://jira.xwiki.org/browse/XWIKI-20848</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839\">https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-m5m2-h6h9-p2c8\">https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-m5m2-h6h9-p2c8</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41046\">https://nvd.nist.gov/vuln/detail/CVE-2023-41046</a></li>\n<li><a href=\"https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839\">https://github.com/xwiki/xwiki-platform/commit/edc52579eeaab1b4514785c134044671a1ecd839</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20847\">https://jira.xwiki.org/browse/XWIKI-20847</a></li>\n<li><a href=\"https://jira.xwiki.org/browse/XWIKI-20848\">https://jira.xwiki.org/browse/XWIKI-20848</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m5m2-h6h9-p2c8\">https://github.com/advisories/GHSA-m5m2-h6h9-p2c8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m5m2-h6h9-p2c8",
            "title": "[org.xwiki.platform:xwiki-platform-oldcore] Velocity execution without script right through VelocityCode and VelocityWiki property",
            "date_modified": "2023-09-04T16:36:41.000Z",
            "date_published": "2023-09-04T16:36:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m5m2-h6h9-p2c8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>SQL injection vulnerability in DataEase v.1.18.9 allows a remote attacker to obtain sensitive information via a crafted string outside of the blacklist function.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40771\">https://nvd.nist.gov/vuln/detail/CVE-2023-40771</a></li>\n<li><a href=\"https://github.com/dataease/dataease/issues/5861\">https://github.com/dataease/dataease/issues/5861</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8rv7-g772-pp3j\">https://github.com/advisories/GHSA-8rv7-g772-pp3j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8rv7-g772-pp3j",
            "title": "[io.dataease:dataease-plugin-common] DataEase vulnerable to SQL injection",
            "date_modified": "2023-09-01T21:57:10.000Z",
            "date_published": "2023-09-01T18:30:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8rv7-g772-pp3j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue in hjson-java up to v3.0.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted JSON string to string a <code>StringIndexOutOfBoundsException</code>. </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-39685\">https://nvd.nist.gov/vuln/detail/CVE-2023-39685</a></li>\n<li><a href=\"https://github.com/hjson/hjson-java/issues/27\">https://github.com/hjson/hjson-java/issues/27</a></li>\n<li><a href=\"https://github.com/hjson/hjson-java/commit/aff0b607929b4397d93dc0d029a56aeefb242602\">https://github.com/hjson/hjson-java/commit/aff0b607929b4397d93dc0d029a56aeefb242602</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-94w5-rf69-2h6c\">https://github.com/advisories/GHSA-94w5-rf69-2h6c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-94w5-rf69-2h6c",
            "title": "[org.hjson:hjson] hson-java vulnerable to denial of service",
            "date_modified": "2023-09-01T21:54:17.000Z",
            "date_published": "2023-09-01T12:30:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-94w5-rf69-2h6c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>DDFFileParser</code> and <code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) are vulnerable to <a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">XXE Attacks</a>.</p>\n<p><a href=\"https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model\">DDF file</a> is a LWM2M format used to store LWM2M object description.<br>Leshan users are impacted only if they parse untrusted DDF files (e.g. if they let external users provide their own model), in that case they MUST upgrade to fixed version.\nIf you parse only trusted DDF file and validate only with trusted xml schema, upgrading is not mandatory. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in <strong>v1.5.0</strong> and <strong>2.0.0-M13</strong>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No easy way. Eventually writing your own <code>DDFFileParser</code>/<code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) creating a <code>DocumentBuilderFactory</code> with : </p>\n<pre><code class=\"language-java\">// For DDFFileParser\nDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\nfactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true); // Disable DTDs\nfactory.setXIncludeAware(false); // Disable XML Inclusions\nfactory.setExpandEntityReferences(false); // disable expand entity reference nodes\n\n// For DefaultDDFFileValidator\nSchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\nfactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\nfactory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\nfactory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html</a></li>\n<li><a href=\"https://semgrep.dev/docs/cheat-sheets/java-xxe/\">https://semgrep.dev/docs/cheat-sheets/java-xxe/</a></li>\n<li><a href=\"https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE\">https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7\">https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41034\">https://nvd.nist.gov/vuln/detail/CVE-2023-41034</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013\">https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c\">https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model\">https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model</a></li>\n<li><a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wc9j-gc65-3cm7\">https://github.com/advisories/GHSA-wc9j-gc65-3cm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wc9j-gc65-3cm7",
            "title": "[org.eclipse.leshan:leshan-core] DDFFileParser is vulnerable to XXE Attacks",
            "date_modified": "2023-08-31T21:47:31.000Z",
            "date_published": "2023-08-31T21:47:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wc9j-gc65-3cm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><code>DDFFileParser</code> and <code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) are vulnerable to <a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">XXE Attacks</a>.</p>\n<p><a href=\"https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model\">DDF file</a> is a LWM2M format used to store LWM2M object description.<br>Leshan users are impacted only if they parse untrusted DDF files (e.g. if they let external users provide their own model), in that case they MUST upgrade to fixed version.\nIf you parse only trusted DDF file and validate only with trusted xml schema, upgrading is not mandatory. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>This is fixed in <strong>v1.5.0</strong> and <strong>2.0.0-M13</strong>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No easy way. Eventually writing your own <code>DDFFileParser</code>/<code>DefaultDDFFileValidator</code> (and so <code>ObjectLoader</code>) creating a <code>DocumentBuilderFactory</code> with : </p>\n<pre><code class=\"language-java\">// For DDFFileParser\nDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\nfactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\nfactory.setFeature(\"http://apache.org/xml/features/disallow-doctype-decl\", true); // Disable DTDs\nfactory.setXIncludeAware(false); // Disable XML Inclusions\nfactory.setExpandEntityReferences(false); // disable expand entity reference nodes\n\n// For DefaultDDFFileValidator\nSchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\nfactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\nfactory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\nfactory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html</a></li>\n<li><a href=\"https://semgrep.dev/docs/cheat-sheets/java-xxe/\">https://semgrep.dev/docs/cheat-sheets/java-xxe/</a></li>\n<li><a href=\"https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE\">https://community.veracode.com/s/article/Java-Remediation-Guidance-for-XXE</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7\">https://github.com/eclipse-leshan/leshan/security/advisories/GHSA-wc9j-gc65-3cm7</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41034\">https://nvd.nist.gov/vuln/detail/CVE-2023-41034</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013\">https://github.com/eclipse-leshan/leshan/commit/29577d2879ba8e7674c3b216a7f01193fc7ae013</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c\">https://github.com/eclipse-leshan/leshan/commit/4d3e63ac271a817f81fba3e3229c519af7a3049c</a></li>\n<li><a href=\"https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model\">https://github.com/eclipse-leshan/leshan/wiki/Adding-new-objects#the-lwm2m-model</a></li>\n<li><a href=\"https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\">https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wc9j-gc65-3cm7\">https://github.com/advisories/GHSA-wc9j-gc65-3cm7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wc9j-gc65-3cm7",
            "title": "[org.eclipse.leshan:leshan-core] DDFFileParser is vulnerable to XXE Attacks",
            "date_modified": "2023-08-31T21:47:31.000Z",
            "date_published": "2023-08-31T21:47:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wc9j-gc65-3cm7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Graylog utilises only one single source port for DNS queries.</p>\n<h3 id=\"details\">Details</h3>\n<p>Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again. This goes against recommended practice since 2008, when Dan Kaminsky discovered how easy is to carry out DNS cache poisoning attacks. In order to prevent cache poisoning with spoofed DNS responses, it is necessary to maximise the uncertainty in the choice of a source port for a DNS query.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The attached figure shows the source ports distribution difference between Graylog configured to use a data adapter based on DNS queries and ISC Bind.  The source port distribution of the DNS queries sent from Graylog to a recursive DNS name server running Bind (CLIENT_QUERY) are depicted in purple, while the queries sent from the recursive DNS server to the authoritatives (RESOLVER_QUERY) are plotted in green color. As it can be observed, in contrast to ISC Bind which presents a heterogeneous usage of source port, Graylog utilises a single source port.</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/67056857/242301750-6a5a8d0d-fcd2-40d1-bbd4-73baa8279ed3.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Although unlikely in many setups, an external attacker could inject forged DNS responses into a Graylog's lookup table cache. In order to prevent this, it is at least recommendable to distribute the DNS queries through a pool of distinct sockets, each of them with a random source port and renew them periodically.</p>\n<p>(Credit to Iratxe Niño from Fundación Sarenet and Borja Marcos from Sarenet)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e\">https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327\">https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41045\">https://nvd.nist.gov/vuln/detail/CVE-2023-41045</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/advisories/GHSA-g96c-x7rh-99r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3",
            "title": "[org.graylog2:graylog2-server] Graylog vulnerable to insecure source port usage for DNS queries",
            "date_modified": "2023-08-31T18:47:59.000Z",
            "date_published": "2023-07-06T20:51:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}