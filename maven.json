{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty:jetty-http] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty.http2:http2-hpack] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty.http3:http3-qpack] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty.http3:http3-qpack] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty:jetty-http] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty:jetty-http] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty.http2:http2-hpack] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An integer overflow in <code>MetaDataBuilder.checkSize</code> allows for HTTP/2 HPACK header values to\nexceed their size limit. </p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">291 public void checkSize(int length, boolean huffman) throws SessionException\n292 {\n293 // Apply a huffman fudge factor\n294 if (huffman)\n295 length = (length * 4) / 3;\n296 if ((_size + length) &gt; _maxSize)\n297 throw new HpackException.SessionException(\"Header too large %d &gt; %d\",\n_size + length, _maxSize);\n298 }\n</code></pre>\n<p>However, when length is very large and huffman is true, the multiplication by 4 in line 295\nwill overflow, and length will become negative. (_size+length) will now be negative, and\nthe check on line 296 will not be triggered.</p>\n<p>Furthermore, <code>MetaDataBuilder.checkSize</code> allows for user-entered HPACK header value sizes to be\nnegative, potentially leading to a very large buffer allocation later on when the\nuser-entered size is multiplied by 2.</p>\n<p>In <code>MetaDataBuilder.java</code>, the following code determines if a header name or value\nexceeds the size limit, and throws an exception if the limit is exceeded:</p>\n<pre><code class=\"language-java\">public void checkSize(int length, boolean huffman) throws SessionException\n{\n// Apply a huffman fudge factor\nif (huffman)\nlength = (length * 4) / 3;\nif ((_size + length) &gt; _maxSize)\nthrow new HpackException.SessionException(\"Header too large %d &gt; %d\", _size\n+ length, _maxSize);\n}\n</code></pre>\n<p>However, no exception is thrown in the case of a negative size.\nLater, in <code>Huffman.decode</code>, the user-entered length is multiplied by 2 before allocating a buffer:</p>\n<pre><code class=\"language-java\">public static String decode(ByteBuffer buffer, int length) throws\nHpackException.CompressionException\n{\nUtf8StringBuilder utf8 = new Utf8StringBuilder(length * 2);\n// ...\n</code></pre>\n<p>This means that if a user provides a negative length value (or, more precisely, a length\nvalue which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a\nvery large positive number when multiplied by 2, then the user can cause a very large\nbuffer to be allocated on the server.</p>\n<h3 id=\"exploit-scenario-1\">Exploit Scenario 1</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ffffffffff02.\nEach time this header is decoded:</p>\n<ul>\n<li><code>HpackDecode.decode</code> will determine that a Huffman-coded value of length\n805306494 needs to be decoded.</li>\n<li><code>MetaDataBuilder.checkSize</code> will approve this length.</li>\n<li>Huffman.decode will allocate a 1.6 GB string array.</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens. (Note: this can be delayed by appending\nvalid huffman-coded characters to the end of the header.)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"exploit-scenario-2\">Exploit Scenario 2</h3>\n<p>An attacker repeatedly sends HTTP messages with the HPACK header 0x00ff8080ffff0b. Each\ntime this header is decoded:</p>\n<ul>\n<li>HpackDecode.decode will determine that a Huffman-coded value of length\n-1073758081 needs to be decoded</li>\n<li>MetaDataBuilder.checkSize will approve this length</li>\n<li>The number will be multiplied by 2 to get 2147451134, and Huffman.decode will\nallocate a 2.1 GB string array</li>\n<li>Huffman.decode will have a buffer overflow error, and the array will be deallocated\nthe next time garbage collection happens (Note that this deallocation can be\ndelayed by adding valid Huffman-coded characters to the end of the header)</li>\n</ul>\n<p>Depending on the timing of garbage collection, the number of threads, and the amount of\nmemory available on the server, this may cause the server to run out of memory.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Users of HTTP/2 can be impacted by a remote denial of service attack.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Fixed in Jetty 10.0.16 and Jetty 11.0.16\nFixed in Jetty 9.4.53\nJetty 12.x is unaffected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No workarounds possible, only patched versions of Jetty.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/eclipse/jetty.project/security/advisories/GHSA-wgh7-54f2-x98r</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36478\">https://nvd.nist.gov/vuln/detail/CVE-2023-36478</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/pull/9634\">https://github.com/eclipse/jetty.project/pull/9634</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-10.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16\">https://github.com/eclipse/jetty.project/releases/tag/jetty-11.0.16</a></li>\n<li><a href=\"https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009\">https://github.com/eclipse/jetty.project/releases/tag/jetty-9.4.53.v20231009</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wgh7-54f2-x98r\">https://github.com/advisories/GHSA-wgh7-54f2-x98r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r",
            "title": "[org.eclipse.jetty.http2:http2-hpack] HTTP/2 HPACK integer overflow and buffer allocation",
            "date_modified": "2023-10-10T21:16:26.000Z",
            "date_published": "2023-10-10T21:16:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wgh7-54f2-x98r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>ReportPortal database becomes unstable and reporting almost fully stops except for small launches with approximately 1 test inside when the test_item.path field is exceeded the allowable \"ltree\" field type indexing limit (path length&gt;=120 approximately, recursive nesting of the nested steps). </p>\n<p>REINDEX INDEX path_gist_idx and path_idx aren't helped. </p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem was fixed in <code>service-api</code> module of version <code>5.10.0</code> (product release <a href=\"https://reportportal.io/docs/releases/Version23.2/\">23.2</a>), where the maximum number of nested elements were programmatically limited.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>After deletion of the data with long paths, and reindexing both indexes (path_gist_idx and path_idx), the database becomes stable and ReportPortal is working properly.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/reportportal/reportportal/security/advisories/GHSA-mj24-gpw7-23m9\">https://github.com/reportportal/reportportal/security/advisories/GHSA-mj24-gpw7-23m9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-25822\">https://nvd.nist.gov/vuln/detail/CVE-2023-25822</a></li>\n<li><a href=\"https://github.com/reportportal/reportportal/releases/tag/v23.2\">https://github.com/reportportal/reportportal/releases/tag/v23.2</a></li>\n<li><a href=\"https://reportportal.io/docs/releases/Version23.2/\">https://reportportal.io/docs/releases/Version23.2/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mj24-gpw7-23m9\">https://github.com/advisories/GHSA-mj24-gpw7-23m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mj24-gpw7-23m9",
            "title": "[com.epam.reportportal:service-api] Denial of service vulnerability on creating a Launch with too many recursively nested elements in reportportal",
            "date_modified": "2023-10-10T18:28:12.000Z",
            "date_published": "2023-10-10T18:28:11.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mj24-gpw7-23m9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Open Network Operating System, ONOS, versions 1.8.0, 1.9.0, and 1.10.0 do not restrict the amount of memory allocated because the NettyMessagingManager payload size is not limited. ONOS nodes timeout when trying to connect to the cluster in vm test cluster, leading to a potential denial of service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-13763\">https://nvd.nist.gov/vuln/detail/CVE-2017-13763</a></li>\n<li><a href=\"https://gerrit.onosproject.org/#/c/13831/\">https://gerrit.onosproject.org/#/c/13831/</a></li>\n<li><a href=\"https://gerrit.onosproject.org/#/c/14318/\">https://gerrit.onosproject.org/#/c/14318/</a></li>\n<li><a href=\"https://github.com/opennetworkinglab/onos/commit/f7c7f6f229978fe4e78045069a4485504cc108c4\">https://github.com/opennetworkinglab/onos/commit/f7c7f6f229978fe4e78045069a4485504cc108c4</a></li>\n<li><a href=\"https://jira.onosproject.org/browse/ONOS-6401\">https://jira.onosproject.org/browse/ONOS-6401</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c6p7-vhw7-rc9w\">https://github.com/advisories/GHSA-c6p7-vhw7-rc9w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c6p7-vhw7-rc9w",
            "title": "[org.onosproject:onos-base] ONOS vulnerable to denial of service due to unrestricted NettyMessagingManager payload",
            "date_modified": "2023-10-10T15:44:14.000Z",
            "date_published": "2022-05-13T01:43:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c6p7-vhw7-rc9w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It was found that Keycloak oauth would permit an authenticated resource to obtain an access/refresh token pair from the authentication server, permitting indefinite usage in the case of permission revocation. An attacker on an already compromised resource could use this flaw to grant himself continued permissions and possibly conduct further attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-12160\">https://nvd.nist.gov/vuln/detail/CVE-2017-12160</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2904\">https://access.redhat.com/errata/RHSA-2017:2904</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2905\">https://access.redhat.com/errata/RHSA-2017:2905</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2017:2906\">https://access.redhat.com/errata/RHSA-2017:2906</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1484154\">https://bugzilla.redhat.com/show_bug.cgi?id=1484154</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qc72-gfvw-76h7\">https://github.com/advisories/GHSA-qc72-gfvw-76h7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qc72-gfvw-76h7",
            "title": "[org.keycloak:keycloak-parent] Keycloak Oauth Implementation Error",
            "date_modified": "2023-10-10T14:39:14.000Z",
            "date_published": "2022-05-13T01:23:16.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qc72-gfvw-76h7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Java implementation of AMF3 deserializers used in GraniteDS, version 3.1.1.GA, may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-3200\">https://nvd.nist.gov/vuln/detail/CVE-2017-3200</a></li>\n<li><a href=\"https://codewhitesec.blogspot.com/2017/04/amf.html\">https://codewhitesec.blogspot.com/2017/04/amf.html</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/307983\">https://www.kb.cert.org/vuls/id/307983</a></li>\n<li><a href=\"http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution\">http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution</a></li>\n<li><a href=\"https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382\">https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx9j-rvmj-jc32\">https://github.com/advisories/GHSA-vx9j-rvmj-jc32</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx9j-rvmj-jc32",
            "title": "[org.graniteds:granite-server-core] GraniteDS Insecure Deserialization",
            "date_modified": "2023-10-10T14:31:12.000Z",
            "date_published": "2022-05-13T01:28:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx9j-rvmj-jc32"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12402\">https://nvd.nist.gov/vuln/detail/CVE-2019-12402</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/308cc15f1f1dc53e97046fddbac240e6cd16de89a2746cf257be7f5b@%3Cdev.commons.apache.org%3E\">https://lists.apache.org/thread.html/308cc15f1f1dc53e97046fddbac240e6cd16de89a2746cf257be7f5b@%3Cdev.commons.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/54cc4e9fa6b24520135f6fa4724dfb3465bc14703c7dc7e52353a0ea@%3Ccommits.creadur.apache.org%3E\">https://lists.apache.org/thread.html/54cc4e9fa6b24520135f6fa4724dfb3465bc14703c7dc7e52353a0ea@%3Ccommits.creadur.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E\">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r05cf37c1e1e662e968cfece1102fcd50fe207181fdbf2c30aadfafd3@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r05cf37c1e1e662e968cfece1102fcd50fe207181fdbf2c30aadfafd3@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E\">https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r21d64797914001119d2fc766b88c6da181dc2308d20f14e7a7f46117@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r21d64797914001119d2fc766b88c6da181dc2308d20f14e7a7f46117@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r233267e24519bacd0f9fb9f61a1287cb9f4bcb6e75d83f34f405c521@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r233267e24519bacd0f9fb9f61a1287cb9f4bcb6e75d83f34f405c521@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r25422df9ad22fec56d9eeca3ab8bd6d66365e9f6bfe311b64730edf5@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r25422df9ad22fec56d9eeca3ab8bd6d66365e9f6bfe311b64730edf5@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r4363c994c8bca033569a98da9218cc0c62bb695c1e47a98e5084e5a0@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r4363c994c8bca033569a98da9218cc0c62bb695c1e47a98e5084e5a0@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r5103b1c9242c0f812ac96e524344144402cbff9b6e078d1557bc7b1e@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r5103b1c9242c0f812ac96e524344144402cbff9b6e078d1557bc7b1e@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r590c15cebee9b8e757e2f738127a9a71e48ede647a3044c504e050a4@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r590c15cebee9b8e757e2f738127a9a71e48ede647a3044c504e050a4@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r5caf4fcb69d2749225391e61db7216282955204849ba94f83afe011f@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r5caf4fcb69d2749225391e61db7216282955204849ba94f83afe011f@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r7af60fbd8b2350d49d14e53a3ab2801998b9d1af2d6fcac60b060a53@%3Cdev.brooklyn.apache.org%3E\">https://lists.apache.org/thread.html/r7af60fbd8b2350d49d14e53a3ab2801998b9d1af2d6fcac60b060a53@%3Cdev.brooklyn.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r972f82d821b805d04602976a9736c01b6bf218cfe0c3f48b472db488@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r972f82d821b805d04602976a9736c01b6bf218cfe0c3f48b472db488@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rcc35ab6be300365de5ff9587e0479d10d7d7c79070921837e3693162@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rcc35ab6be300365de5ff9587e0479d10d7d7c79070921837e3693162@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd3f99d732baed459b425fb0a9e9e14f7843c9459b12037e4a9d753b5@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rd3f99d732baed459b425fb0a9e9e14f7843c9459b12037e4a9d753b5@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rdebc1830d6c09c11d5a4804ca26769dbd292d17d361c61dea50915f0@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rdebc1830d6c09c11d5a4804ca26769dbd292d17d361c61dea50915f0@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/re13bd219dd4b651134f6357f12bd07a0344eea7518c577bbdd185265@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/re13bd219dd4b651134f6357f12bd07a0344eea7518c577bbdd185265@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rf5230a049d989dbfdd404b4320a265dceeeba459a4d04ec21873bd55@%3Csolr-user.lucene.apache.org%3E\">https://lists.apache.org/thread.html/rf5230a049d989dbfdd404b4320a265dceeeba459a4d04ec21873bd55@%3Csolr-user.lucene.apache.org%3E</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QLJIK2AUOZOWXR3S5XXBUNMOF3RTHTI7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QLJIK2AUOZOWXR3S5XXBUNMOF3RTHTI7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZB3GB7YXIOUKIOQ27VTIP6KKGJJ3CKL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZB3GB7YXIOUKIOQ27VTIP6KKGJJ3CKL/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2020.html\">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuApr2021.html\">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230818-0001/\">https://security.netapp.com/advisory/ntap-20230818-0001/</a></li>\n<li><a href=\"https://github.com/jensdietrich/xshady-release/tree/main/CVE-2019-12402\">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2019-12402</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-53x6-4x5p-rrvv\">https://github.com/advisories/GHSA-53x6-4x5p-rrvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-53x6-4x5p-rrvv",
            "title": "[io.github.1tchy.java9modular.org.apache.commons:commons-compress] Denial of Service in Apache Commons Compress",
            "date_modified": "2023-10-09T22:16:00.000Z",
            "date_published": "2019-10-11T18:41:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-53x6-4x5p-rrvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-12402\">https://nvd.nist.gov/vuln/detail/CVE-2019-12402</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/308cc15f1f1dc53e97046fddbac240e6cd16de89a2746cf257be7f5b@%3Cdev.commons.apache.org%3E\">https://lists.apache.org/thread.html/308cc15f1f1dc53e97046fddbac240e6cd16de89a2746cf257be7f5b@%3Cdev.commons.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/54cc4e9fa6b24520135f6fa4724dfb3465bc14703c7dc7e52353a0ea@%3Ccommits.creadur.apache.org%3E\">https://lists.apache.org/thread.html/54cc4e9fa6b24520135f6fa4724dfb3465bc14703c7dc7e52353a0ea@%3Ccommits.creadur.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E\">https://lists.apache.org/thread.html/9317fd092b257a0815434b116a8af8daea6e920b6673f4fd5583d5fe@%3Ccommits.druid.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r05cf37c1e1e662e968cfece1102fcd50fe207181fdbf2c30aadfafd3@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r05cf37c1e1e662e968cfece1102fcd50fe207181fdbf2c30aadfafd3@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E\">https://lists.apache.org/thread.html/r204ba2a9ea750f38d789d2bb429cc0925ad6133deea7cbc3001d96b5@%3Csolr-user.lucene.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r21d64797914001119d2fc766b88c6da181dc2308d20f14e7a7f46117@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r21d64797914001119d2fc766b88c6da181dc2308d20f14e7a7f46117@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r233267e24519bacd0f9fb9f61a1287cb9f4bcb6e75d83f34f405c521@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r233267e24519bacd0f9fb9f61a1287cb9f4bcb6e75d83f34f405c521@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r25422df9ad22fec56d9eeca3ab8bd6d66365e9f6bfe311b64730edf5@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r25422df9ad22fec56d9eeca3ab8bd6d66365e9f6bfe311b64730edf5@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r4363c994c8bca033569a98da9218cc0c62bb695c1e47a98e5084e5a0@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r4363c994c8bca033569a98da9218cc0c62bb695c1e47a98e5084e5a0@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r5103b1c9242c0f812ac96e524344144402cbff9b6e078d1557bc7b1e@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r5103b1c9242c0f812ac96e524344144402cbff9b6e078d1557bc7b1e@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r590c15cebee9b8e757e2f738127a9a71e48ede647a3044c504e050a4@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r590c15cebee9b8e757e2f738127a9a71e48ede647a3044c504e050a4@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r5caf4fcb69d2749225391e61db7216282955204849ba94f83afe011f@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r5caf4fcb69d2749225391e61db7216282955204849ba94f83afe011f@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r7af60fbd8b2350d49d14e53a3ab2801998b9d1af2d6fcac60b060a53@%3Cdev.brooklyn.apache.org%3E\">https://lists.apache.org/thread.html/r7af60fbd8b2350d49d14e53a3ab2801998b9d1af2d6fcac60b060a53@%3Cdev.brooklyn.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/r972f82d821b805d04602976a9736c01b6bf218cfe0c3f48b472db488@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/r972f82d821b805d04602976a9736c01b6bf218cfe0c3f48b472db488@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rcc35ab6be300365de5ff9587e0479d10d7d7c79070921837e3693162@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rcc35ab6be300365de5ff9587e0479d10d7d7c79070921837e3693162@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rd3f99d732baed459b425fb0a9e9e14f7843c9459b12037e4a9d753b5@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rd3f99d732baed459b425fb0a9e9e14f7843c9459b12037e4a9d753b5@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rdebc1830d6c09c11d5a4804ca26769dbd292d17d361c61dea50915f0@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/rdebc1830d6c09c11d5a4804ca26769dbd292d17d361c61dea50915f0@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/re13bd219dd4b651134f6357f12bd07a0344eea7518c577bbdd185265@%3Cissues.flink.apache.org%3E\">https://lists.apache.org/thread.html/re13bd219dd4b651134f6357f12bd07a0344eea7518c577bbdd185265@%3Cissues.flink.apache.org%3E</a></li>\n<li><a href=\"https://lists.apache.org/thread.html/rf5230a049d989dbfdd404b4320a265dceeeba459a4d04ec21873bd55@%3Csolr-user.lucene.apache.org%3E\">https://lists.apache.org/thread.html/rf5230a049d989dbfdd404b4320a265dceeeba459a4d04ec21873bd55@%3Csolr-user.lucene.apache.org%3E</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QLJIK2AUOZOWXR3S5XXBUNMOF3RTHTI7/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QLJIK2AUOZOWXR3S5XXBUNMOF3RTHTI7/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZB3GB7YXIOUKIOQ27VTIP6KKGJJ3CKL/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WZB3GB7YXIOUKIOQ27VTIP6KKGJJ3CKL/</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2020.html\">https://www.oracle.com/security-alerts/cpuapr2020.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuApr2021.html\">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujan2021.html\">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"https://www.oracle.com//security-alerts/cpujul2021.html\">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230818-0001/\">https://security.netapp.com/advisory/ntap-20230818-0001/</a></li>\n<li><a href=\"https://github.com/jensdietrich/xshady-release/tree/main/CVE-2019-12402\">https://github.com/jensdietrich/xshady-release/tree/main/CVE-2019-12402</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-53x6-4x5p-rrvv\">https://github.com/advisories/GHSA-53x6-4x5p-rrvv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-53x6-4x5p-rrvv",
            "title": "[org.apache.commons:commons-compress] Denial of Service in Apache Commons Compress",
            "date_modified": "2023-10-09T22:16:00.000Z",
            "date_published": "2019-10-11T18:41:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-53x6-4x5p-rrvv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"impact\">Impact</h1>\n<p>There is a potential for a mutation XSS (mXSS) vulnerability in AntiSamy caused by flawed parsing of the HTML being sanitized. To be subject to this vulnerability the <code>preserveComments</code> directive must be enabled in your policy file and also allow for certain tags at the same time. As a result, certain crafty inputs can result in elements in comment tags being interpreted as executable when using AntiSamy's sanitized output.</p>\n<h1 id=\"patches\">Patches</h1>\n<p>Patched in AntiSamy 1.7.4 and later. See important remediation details in the reference given below.</p>\n<h1 id=\"workarounds\">Workarounds</h1>\n<p>If you cannot upgrade to a fixed version of the library, the following mitigation can be applied until you can upgrade: Manually edit your AntiSamy policy file (e.g., antisamy.xml) by deleting the <code>preserveComments</code> directive or setting its value to <code>false</code>,  if present. Also it would be useful to make AntiSamy remove the <code>noscript</code> tag by adding this in your tag definitions under the <code>&lt;tagrules&gt;</code> node (or deleting it entirely if present):</p>\n<pre><code class=\"language-xml\">&lt;tag name=\"noscript\" action=\"remove\"/&gt;\n</code></pre>\n<p>As the previously mentioned policy settings are preconditions for the mXSS attack to work, changing them as recommended should be sufficient to protect you against this vulnerability when using a vulnerable version of this library. However, the existing bug would still be present in AntiSamy or its parser dependency (neko-htmlunit). The safety of this workaround relies on configurations that may change in the future and don't address the root cause of the vulnerability. As such, it is strongly recommended to upgrade to a fixed version of AntiSamy.</p>\n<h1 id=\"for-more-information\">For more information</h1>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Email one of the project co-leaders, listed on the <a href=\"https://owasp.org/www-project-antisamy/\">OWASP AntiSamy project</a> page, under \"Leaders\".</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/nahsra/antisamy/security/advisories/GHSA-pcf2-gh6g-h5r2\">https://github.com/nahsra/antisamy/security/advisories/GHSA-pcf2-gh6g-h5r2</a></li>\n<li><a href=\"https://github.com/nahsra/antisamy/releases/tag/v1.7.4\">https://github.com/nahsra/antisamy/releases/tag/v1.7.4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-43643\">https://nvd.nist.gov/vuln/detail/CVE-2023-43643</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pcf2-gh6g-h5r2\">https://github.com/advisories/GHSA-pcf2-gh6g-h5r2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pcf2-gh6g-h5r2",
            "title": "[org.owasp.antisamy:antisamy] mXSS in AntiSamy",
            "date_modified": "2023-10-10T05:31:44.000Z",
            "date_published": "2023-10-09T00:42:27.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pcf2-gh6g-h5r2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Java implementation of GraniteDS, version 3.1.1.GA, AMF3 deserializers derives class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-3199\">https://nvd.nist.gov/vuln/detail/CVE-2017-3199</a></li>\n<li><a href=\"https://codewhitesec.blogspot.com/2017/04/amf.html\">https://codewhitesec.blogspot.com/2017/04/amf.html</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/307983\">https://www.kb.cert.org/vuls/id/307983</a></li>\n<li><a href=\"http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution\">http://www.securityweek.com/flaws-java-amf-libraries-allow-remote-code-execution</a></li>\n<li><a href=\"https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382\">https://web.archive.org/web/20210124021547/http://www.securityfocus.com/bid/97382</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8m35-r25c-qr56\">https://github.com/advisories/GHSA-8m35-r25c-qr56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8m35-r25c-qr56",
            "title": "[org.graniteds:granite-core] GraniteDS Insecure Deserialization",
            "date_modified": "2023-10-06T21:21:35.000Z",
            "date_published": "2022-05-13T01:28:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8m35-r25c-qr56"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Previous versions of Apache Flex BlazeDS (4.7.2 and earlier) did not restrict which types were allowed for AMF(X) object deserialization by default. During the deserialization process code is executed that for several known types has undesired side-effects. Other, unknown types may also exhibit such behaviors. One vector in the Java standard library exists that allows an attacker to trigger possibly further exploitable Java deserialization of untrusted data. Other known vectors in third party libraries can be used to trigger remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-5641\">https://nvd.nist.gov/vuln/detail/CVE-2017-5641</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/FLEX-35290\">https://issues.apache.org/jira/browse/FLEX-35290</a></li>\n<li><a href=\"https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us\">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/307983\">https://www.kb.cert.org/vuls/id/307983</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-22-506/\">https://www.zerodayinitiative.com/advisories/ZDI-22-506/</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-22-507/\">https://www.zerodayinitiative.com/advisories/ZDI-22-507/</a></li>\n<li><a href=\"http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E\">http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E</a></li>\n<li><a href=\"https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273\">https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273</a></li>\n<li><a href=\"https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383\">https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383</a></li>\n<li><a href=\"https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627\">https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627</a></li>\n<li><a href=\"https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1\">https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w8v7-prhw-xjpw\">https://github.com/advisories/GHSA-w8v7-prhw-xjpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w8v7-prhw-xjpw",
            "title": "[org.apache.flex.blazeds:flex-messaging-remoting] Apache Flex BlazeDS unsafe deserialization",
            "date_modified": "2023-10-06T21:11:50.000Z",
            "date_published": "2022-05-13T01:02:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w8v7-prhw-xjpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Previous versions of Apache Flex BlazeDS (4.7.2 and earlier) did not restrict which types were allowed for AMF(X) object deserialization by default. During the deserialization process code is executed that for several known types has undesired side-effects. Other, unknown types may also exhibit such behaviors. One vector in the Java standard library exists that allows an attacker to trigger possibly further exploitable Java deserialization of untrusted data. Other known vectors in third party libraries can be used to trigger remote code execution.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-5641\">https://nvd.nist.gov/vuln/detail/CVE-2017-5641</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/FLEX-35290\">https://issues.apache.org/jira/browse/FLEX-35290</a></li>\n<li><a href=\"https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us\">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03823en_us</a></li>\n<li><a href=\"https://www.kb.cert.org/vuls/id/307983\">https://www.kb.cert.org/vuls/id/307983</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-22-506/\">https://www.zerodayinitiative.com/advisories/ZDI-22-506/</a></li>\n<li><a href=\"https://www.zerodayinitiative.com/advisories/ZDI-22-507/\">https://www.zerodayinitiative.com/advisories/ZDI-22-507/</a></li>\n<li><a href=\"http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E\">http://mail-archives.apache.org/mod_mbox/flex-dev/201703.mbox/%3C6B86C8D0-6E36-48F5-AC81-4AB3978F6746@c-ware.de%3E</a></li>\n<li><a href=\"https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273\">https://web.archive.org/web/20170920093830/http://www.securitytracker.com/id/1038273</a></li>\n<li><a href=\"https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383\">https://web.archive.org/web/20210124021605/http://www.securityfocus.com/bid/97383</a></li>\n<li><a href=\"https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627\">https://github.com/apache/flex-blazeds/commit/11b0aa132d9a43bf81fa12654ff227ff247b4627</a></li>\n<li><a href=\"https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1\">https://github.com/apache/flex-blazeds/commit/f861f0993c35e664906609cad275e45a71e2aaf1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w8v7-prhw-xjpw\">https://github.com/advisories/GHSA-w8v7-prhw-xjpw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w8v7-prhw-xjpw",
            "title": "[org.apache.flex.blazeds:flex-messaging-core] Apache Flex BlazeDS unsafe deserialization",
            "date_modified": "2023-10-06T21:11:50.000Z",
            "date_published": "2022-05-13T01:02:10.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w8v7-prhw-xjpw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Image Import function in XWiki through 10.7 has XSS.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-16277\">https://nvd.nist.gov/vuln/detail/CVE-2018-16277</a></li>\n<li><a href=\"https://mksec.tk/index.php/2018/09/27/cve-2018-16277-xss-in-xwiki/\">https://mksec.tk/index.php/2018/09/27/cve-2018-16277-xss-in-xwiki/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mvr-cq72-f66v\">https://github.com/advisories/GHSA-6mvr-cq72-f66v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mvr-cq72-f66v",
            "title": "[org.xwiki.platform:xwiki-platform] XWiki XSS Vulnerability",
            "date_modified": "2023-10-06T18:04:37.000Z",
            "date_published": "2022-05-14T01:59:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mvr-cq72-f66v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A flaw was found in Keycloak 4.2.1.Final, 4.3.0.Final. When TOPT enabled, an improper implementation of the Brute Force detection algorithm will not enforce its protection measures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-14657\">https://nvd.nist.gov/vuln/detail/CVE-2018-14657</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3592\">https://access.redhat.com/errata/RHSA-2018:3592</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3593\">https://access.redhat.com/errata/RHSA-2018:3593</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3595\">https://access.redhat.com/errata/RHSA-2018:3595</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85v8-vx4w-q684\">https://github.com/advisories/GHSA-85v8-vx4w-q684</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85v8-vx4w-q684",
            "title": "[org.keycloak:keycloak-parent] Keycloak Improper Bruteforce Detection",
            "date_modified": "2023-10-06T17:29:16.000Z",
            "date_published": "2022-05-13T01:12:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85v8-vx4w-q684"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}