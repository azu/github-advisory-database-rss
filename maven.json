{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability was found in y_project RuoYi-Cloud. It has been rated as problematic. Affected by this issue is some unknown functionality of the component JSON Handler. The manipulation leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-215108. A patch for this issue is available at <a href=\"https://gitee.com/y_project/RuoYi-Cloud/pulls/224\">https://gitee.com/y_project/RuoYi-Cloud/pulls/224</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-4348\">https://nvd.nist.gov/vuln/detail/CVE-2022-4348</a></li>\n<li><a href=\"https://gitee.com/y_project/RuoYi-Cloud/issues/I5IRC8\">https://gitee.com/y_project/RuoYi-Cloud/issues/I5IRC8</a></li>\n<li><a href=\"https://vuldb.com/?id.215108\">https://vuldb.com/?id.215108</a></li>\n<li><a href=\"https://gitee.com/y_project/RuoYi-Cloud/pulls/224/files\">https://gitee.com/y_project/RuoYi-Cloud/pulls/224/files</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vp22-232w-h9x8\">https://github.com/advisories/GHSA-vp22-232w-h9x8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vp22-232w-h9x8",
            "title": "[com.ruoyi:ruoyi-common] RuoYi-Cloud Cross-site Scripting vulnerability",
            "date_modified": "2022-12-12T21:59:57.000Z",
            "date_published": "2022-12-08T09:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vp22-232w-h9x8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>RQM Plugin 2.8 and earlier stores a password unencrypted in its global configuration file <code>net.praqma.jenkins.rqm.RqmBuilder.xml</code> on the Jenkins controller as part of its configuration.</p>\n<p>This password can be viewed by users with access to the Jenkins controller file system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34809\">https://nvd.nist.gov/vuln/detail/CVE-2022-34809</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-30/#SECURITY-2155\">https://www.jenkins.io/security/advisory/2022-06-30/#SECURITY-2155</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m59q-vgq9-75cr\">https://github.com/advisories/GHSA-m59q-vgq9-75cr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m59q-vgq9-75cr",
            "title": "[net.praqma:rqm-plugin] Password stored in plain text by Jenkins RQM Plugin",
            "date_modified": "2022-12-12T21:35:25.000Z",
            "date_published": "2022-07-01T00:01:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m59q-vgq9-75cr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>XebiaLabs XL Release Plugin 22.0.0 and earlier does not perform permission checks in methods implementing form validation.</p>\n<p>This allows attackers with Overall/Read permission to connect to an attacker-specified HTTP server using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n<p>Additionally, these form validation methods do not require POST requests, resulting in a cross-site request forgery (CSRF) vulnerability.</p>\n<p>XebiaLabs XL Release Plugin 22.0.1 requires POST requests and Overall/Administer permission for the affected form validation methods.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34780\">https://nvd.nist.gov/vuln/detail/CVE-2022-34780</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-06-30/#SECURITY-2773%20(2)\">https://www.jenkins.io/security/advisory/2022-06-30/#SECURITY-2773%20(2)</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h7pf-h58r-mv93\">https://github.com/advisories/GHSA-h7pf-h58r-mv93</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h7pf-h58r-mv93",
            "title": "[com.xebialabs.ci:xlrelease-plugin] CSRF vulnerability in Jenkins XebiaLabs XL Release Plugin allow capturing credentials",
            "date_modified": "2022-12-12T21:33:53.000Z",
            "date_published": "2022-07-01T00:01:07.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h7pf-h58r-mv93"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>GitHub Branch Source Plugin connects to a user-specified GitHub API URL (e.g. GitHub Enterprise) as part of form validation and completion (e.g. to verify Scan Credentials are correct). This functionality improperly checked permissions, allowing any user with Overall/Read access to Jenkins to connect to any web server and send credentials with a known ID, thereby possibly capturing them. Additionally, this functionality did not require POST requests be used, thereby allowing the above to be performed without direct access to Jenkins via Cross-Site Request Forgery. An enumeration of credentials IDs in this plugin now requires the permission to have Extended Read permission (when that permission is enabled; otherwise Configure permission) to the job in whose context credentials are being accessed. If no job context exists, Overall/Administer permission is required.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000091\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000091</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2017-07-10/\">https://jenkins.io/security/advisory/2017-07-10/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w66r-f5gg-gqwm\">https://github.com/advisories/GHSA-w66r-f5gg-gqwm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w66r-f5gg-gqwm",
            "title": "[org.jenkins-ci.plugins:github-branch-source] Jenkins GitHub Branch Source Plugin vulnerable to Cross-Site Request Forgery",
            "date_modified": "2022-12-12T21:31:47.000Z",
            "date_published": "2022-05-17T00:33:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w66r-f5gg-gqwm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross site scripting vulnerability exists in Jenkins Cucumber Living Documentation Plugin 1.0.12 and older in CukedoctorBaseAction#doDynamic that disables the Content-Security-Policy protection for archived artifacts and workspace files, allowing attackers able to control the content of these files to attack Jenkins users. This has been addressed in version 1.1.0 of the plugin, and it will now request that users change the Content-Security-Policy option in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000144\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000144</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-308\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-308</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q7jx-r75r-hgj2\">https://github.com/advisories/GHSA-q7jx-r75r-hgj2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q7jx-r75r-hgj2",
            "title": "[org.jenkins-ci.plugins:cucumber-living-documentation] Jenkins Cucumber Living Documentation Plugin Cross-site Scripting vulnerability",
            "date_modified": "2022-12-12T21:30:56.000Z",
            "date_published": "2022-05-14T03:23:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q7jx-r75r-hgj2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A man in the middle vulnerability exists in Jenkins vSphere Plugin 2.16 and older in VSphere.java that disables SSL/TLS certificate validation by default. vSphere Plugin 2.17 now has SSL/TLS certificate validation enabled by default.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000151\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000151</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-504\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-504</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vq7p-f4fv-rr5x\">https://github.com/advisories/GHSA-vq7p-f4fv-rr5x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vq7p-f4fv-rr5x",
            "title": "[org.jenkins-ci.plugins:vsphere-cloud] Jenkins vSphere Plugin disables SSL/TLS certificate validation by default",
            "date_modified": "2022-12-12T21:29:48.000Z",
            "date_published": "2022-05-14T03:23:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vq7p-f4fv-rr5x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When calling <code>DefaultHttpHeaders.set</code> with an <em>iterator</em> of values (as opposed to a single given value), header value validation was not performed, allowing malicious header values in the iterator to perform <a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">HTTP Response Splitting</a>.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The necessary validation was added in Netty 4.1.86.Final.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Integrators can work around the issue by changing the <code>DefaultHttpHeaders.set(CharSequence, Iterator&lt;?&gt;)</code> call, into a <code>remove()</code> call, and call <code>add()</code> in a loop over the iterator of values.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://owasp.org/www-community/attacks/HTTP_Response_Splitting\">HTTP Response Splitting</a>\n<a href=\"https://cwe.mitre.org/data/definitions/113.html\">CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/netty/netty\"></a><a href=\"https://github.com/netty/netty\">example link to repo</a></li>\n<li>Email us at <a href=\"mailto:netty-security@googlegroups.com\">netty-security@googlegroups.com</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp\">https://github.com/netty/netty/security/advisories/GHSA-hh82-3pmq-7frp</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hh82-3pmq-7frp\">https://github.com/advisories/GHSA-hh82-3pmq-7frp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hh82-3pmq-7frp",
            "title": "[io.netty:netty-codec-http] Netty vulnerable to HTTP Response splitting from assigning header value iterator",
            "date_modified": "2022-12-12T21:25:45.000Z",
            "date_published": "2022-12-12T21:25:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hh82-3pmq-7frp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>A StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to 4.1.86.Final</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>There is no workaround, except using a custom HaProxyMessageDecoder.</p>\n<h3 id=\"references\">References</h3>\n<p>When parsing a TLV with type = PP2_TYPE_SSL, the value can be again a TLV with type = PP2_TYPE_SSL and so on.\nThe only limitation of the recursion is that the TLV length cannot be bigger than 0xffff because it is encoded in an unsigned short type.\nProviding a TLV with a nesting level that is large enough will lead to raising of a StackOverflowError.\nThe StackOverflowError will be caught if HAProxyMessageDecoder is used as part of Netty’s ChannelPipeline, but using it directly without the ChannelPipeline will lead to a thrown exception / crash.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/netty/netty\">netty</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/netty/netty/security/advisories/GHSA-fx2c-96vj-985v\">https://github.com/netty/netty/security/advisories/GHSA-fx2c-96vj-985v</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41881\">https://nvd.nist.gov/vuln/detail/CVE-2022-41881</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fx2c-96vj-985v\">https://github.com/advisories/GHSA-fx2c-96vj-985v</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fx2c-96vj-985v",
            "title": "[io.netty:netty-codec-haproxy] HAProxyMessageDecoder Stack Exhaustion DoS",
            "date_modified": "2022-12-12T21:24:30.000Z",
            "date_published": "2022-12-12T21:24:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fx2c-96vj-985v"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>SnakeYaml's <code>Constructor</code> class, which inherits from <code>SafeConstructor</code>, allows\nany type be deserialized given the following line:</p>\n<p>new Yaml(new Constructor(TestDataClass.class)).load(yamlContent);</p>\n<p>Types do not have to match the types of properties in the\ntarget class. A <code>ConstructorException</code> is thrown, but only after a malicious\npayload is deserialized.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>High, lack of type checks during deserialization allows remote code execution.</p>\n<h3 id=\"proof-of-concept\">Proof of Concept</h3>\n<p>Execute <code>bash run.sh</code>. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\n<a href=\"http://127.0.0.1:8000\">http://127.0.0.1:8000</a>.</p>\n<p>Example output of successful run of proof of concept:</p>\n<pre><code>$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n    at org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n    at org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n    at org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n    at Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n    at java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n    at java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n    at java.base/java.lang.reflect.Field.set(Field.java:780)\n    at org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n    at org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n    ... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n</code></pre>\n<h3 id=\"further-analysis\">Further Analysis</h3>\n<p>Potential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.</p>\n<h3 id=\"timeline\">Timeline</h3>\n<p><strong>Date reported</strong>: 4/11/2022\n<strong>Date fixed</strong>: \n<strong>Date disclosed</strong>: 10/13/2022</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2\">https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1471\">https://nvd.nist.gov/vuln/detail/CVE-2022-1471</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mjmj-j48q-9wg2\">https://github.com/advisories/GHSA-mjmj-j48q-9wg2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mjmj-j48q-9wg2",
            "title": "[org.yaml:snakeyaml] SnakeYaml Constructor Deserialization Remote Code Execution",
            "date_modified": "2022-12-12T21:19:52.000Z",
            "date_published": "2022-12-12T21:19:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mjmj-j48q-9wg2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>GitHub Pull Request Builder Plugin stored the webhook secret shared between Jenkins and GitHub in plain text. This allowed users with Jenkins controller local file system access and Jenkins administrators to retrieve the stored password. The latter could result in exposure of the passwords through browser extensions, cross-site scripting vulnerabilities, and similar situations. GitHub Pull Request Builder Plugin 1.32.1 and newer stores the webhook secret encrypted on disk.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000143\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000143</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-262\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-262</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-876j-4q73-7f56\">https://github.com/advisories/GHSA-876j-4q73-7f56</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-876j-4q73-7f56",
            "title": "[org.jenkins-ci.plugins:ghprb] Jenkins GitHub Pull Request Builder Plugin ",
            "date_modified": "2022-12-12T21:08:04.000Z",
            "date_published": "2022-05-14T03:23:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-876j-4q73-7f56"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exposure of sensitive information vulnerability exists in Jenkins GitHub Pull Request Builder Plugin version 1.39.0 and older in GhprbCause.java that allows an attacker with local file system access to obtain GitHub credentials. Since 1.40.0, the plugin no longer stores serialized objects containing the credential on disk. Builds started before the plugin was updated to 1.40.0 will retain the encoded credentials on disk. We strongly recommend revoking old GitHub credentials used in Jenkins. We’re providing a script for use in the Script Console that will attempt to remove old stored credentials from build.xml files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000142\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000142</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-261\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-261</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr74-2j5v-ghfv\">https://github.com/advisories/GHSA-hr74-2j5v-ghfv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr74-2j5v-ghfv",
            "title": "[org.jenkins-ci.plugins:ghprb] Jenkins GitHub Pull Request Builder Plugin allows attacker with local file system access to obtain GitHub credentials",
            "date_modified": "2022-12-12T21:06:36.000Z",
            "date_published": "2022-05-14T03:23:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr74-2j5v-ghfv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery vulnerability exists in Jenkins vSphere Plugin 2.16 and older in Clone.java, CloudSelectorParameter.java, ConvertToTemplate.java, ConvertToVm.java, Delete.java, DeleteSnapshot.java, Deploy.java, ExposeGuestInfo.java, FolderVSphereCloudProperty.java, PowerOff.java, PowerOn.java, Reconfigure.java, Rename.java, RenameSnapshot.java, RevertToSnapshot.java, SuspendVm.java, TakeSnapshot.java, VSphereBuildStepContainer.java, vSphereCloudProvisionedSlave.java, vSphereCloudSlave.java, vSphereCloudSlaveTemplate.java, VSphereConnectionConfig.java, vSphereStep.java that allows attackers to perform form validation related actions, including sending numerous requests to the configured vSphere server, potentially resulting in denial of service, or send credentials stored in Jenkins with known ID to an attacker-specified server (\"test connection\"). Additionally, these form validation methods did not require POST requests, resulting in a CSRF vulnerability. As of version 2.17, these form validation methods require POST requests and appropriate user permissions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000153\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000153</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-745\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-745</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2g32-2j8w-2qgf\">https://github.com/advisories/GHSA-2g32-2j8w-2qgf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2g32-2j8w-2qgf",
            "title": "[org.jenkins-ci.plugins:vsphere-cloud] Jenkins vSphere Plugin Cross-Site Request Forgery vulnerability",
            "date_modified": "2022-12-12T21:05:13.000Z",
            "date_published": "2022-05-14T03:23:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2g32-2j8w-2qgf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Pipeline: Input Step Plugin by default allowed users with Item/Read access to a pipeline to interact with the step to provide input. This has been changed, and now requires users to have the Item/Build permission instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000108\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000108</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2017-08-07/\">https://jenkins.io/security/advisory/2017-08-07/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxpw-7x95-q38m\">https://github.com/advisories/GHSA-hxpw-7x95-q38m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxpw-7x95-q38m",
            "title": "[org.jenkins-ci.plugins:pipeline-input-step] Jenkins Pipeline: Input Step Plugin",
            "date_modified": "2022-12-12T21:03:30.000Z",
            "date_published": "2022-05-17T00:29:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxpw-7x95-q38m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>GitHub Branch Source provides a list of applicable credential IDs to allow users configuring a job to select the one they'd like to use. This functionality did not check permissions, allowing any user with Overall/Read permission to get a list of valid credentials IDs. Those could be used as part of an attack to capture the credentials using another vulnerability. An enumeration of credentials IDs in this plugin now requires the permission to have Extended Read permission (when that permission is enabled; otherwise Configure permission) to the job in whose context credentials are being accessed. If no job context exists, Overall/Administer permission is required.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000087\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000087</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2017-07-10/\">https://jenkins.io/security/advisory/2017-07-10/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6jp2-hggx-8j7p\">https://github.com/advisories/GHSA-6jp2-hggx-8j7p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6jp2-hggx-8j7p",
            "title": "[org.jenkins-ci.plugins:github-branch-source] Jenkins GitHub Branch Source Plugin allows any user with Overall/Read permission to get list of valid credentials IDs",
            "date_modified": "2022-12-12T20:58:15.000Z",
            "date_published": "2022-05-17T00:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6jp2-hggx-8j7p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p><strong>Vulnerability</strong></p>\n<p><code>PreparedStatement.setText(int, InputStream)</code>\nand</p>\n<p><code>PreparedStatemet.setBytea(int, InputStream)</code></p>\n<p>will create a temporary file if the InputStream is larger than 51k</p>\n<p>Example of vulnerable code:</p>\n<pre><code class=\"language-java\">String s = \"some very large string greater than 51200 bytes\";\n\nPreparedStatement.setInputStream(1, new ByteArrayInputStream(s.getBytes()) );\n</code></pre>\n<p>This will create a temporary file which is readable by other users on Unix like systems, but not MacOS.</p>\n<p>Impact\nOn Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system.</p>\n<p>This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability.</p>\n<p>When analyzing the impact of this vulnerability, here are the important questions to ask:</p>\n<p>Is the driver running in an environment where the OS has other untrusted users.\nIf yes, and you answered 'yes' to question 1, this vulnerability impacts you.\nIf no, this vulnerability does not impact you.\nPatches\nBecause certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using.</p>\n<p>Java 1.8 and higher users: this vulnerability is fixed in 42.2.27, 42.3.8, 42.4.3, 42.5.1\nJava 1.7 users: this vulnerability is fixed in 42.2.27.jre7\nJava 1.6 and lower users: no patch is available; you must use the workaround below.\nWorkarounds\nIf you are unable to patch, or are stuck running on Java 1.6, specifying the java.io.tmpdir system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability.</p>\n<p>References\n<a href=\"https://cwe.mitre.org/data/definitions/200.html\">CWE-200: Exposure of Sensitive Information to an Unauthorized Actor</a>\nFix commit <a href=\"https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5\">https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5</a>\nSimilar Vulnerabilities\nGoogle Guava - <a href=\"https://github.com/google/guava/issues/4011\">https://github.com/google/guava/issues/4011</a>\nApache Ant - <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-1945\">https://nvd.nist.gov/vuln/detail/CVE-2020-1945</a>\nJetBrains Kotlin Compiler - <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-15824\">https://nvd.nist.gov/vuln/detail/CVE-2020-15824</a></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-562r-vg33-8x8h\">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-562r-vg33-8x8h</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-41946\">https://nvd.nist.gov/vuln/detail/CVE-2022-41946</a></li>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5\">https://github.com/pgjdbc/pgjdbc/commit/9008dc9aade6dbfe4efafcd6872ebc55f4699cf5</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2022/12/msg00003.html\">https://lists.debian.org/debian-lts-announce/2022/12/msg00003.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-562r-vg33-8x8h\">https://github.com/advisories/GHSA-562r-vg33-8x8h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-562r-vg33-8x8h",
            "title": "[org.postgresql:postgresql] TemporaryFolder on unix-like systems does not limit access to created files",
            "date_modified": "2022-12-12T20:28:05.000Z",
            "date_published": "2022-11-23T22:17:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-562r-vg33-8x8h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Subversion Plugin connects to a user-specified Subversion repository as part of form validation (e.g. to retrieve a list of tags). This functionality improperly checked permissions, allowing any user with Item/Build permission (but not Item/Configure) to connect to any web server or Subversion server and send credentials with a known ID, thereby possibly capturing them. Additionally, this functionality did not require POST requests be used, thereby allowing the above to be performed without direct access to Jenkins via Cross-Site Request Forgery attacks. As of version 2.9, this functionality properly checks permissions and is only available via POST.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000085\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000085</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2017-07-10/\">https://jenkins.io/security/advisory/2017-07-10/</a></li>\n<li><a href=\"https://web.archive.org/web/20171119065136/http://www.securityfocus.com/bid/99574\">https://web.archive.org/web/20171119065136/http://www.securityfocus.com/bid/99574</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hrwc-pqfm-g6qf\">https://github.com/advisories/GHSA-hrwc-pqfm-g6qf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hrwc-pqfm-g6qf",
            "title": "[org.jenkins-ci.plugins:subversion] Jenkins Subversion Plugin Cross-Site Request Forgery vulnerability",
            "date_modified": "2022-12-12T19:10:15.000Z",
            "date_published": "2022-05-17T00:29:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hrwc-pqfm-g6qf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Jenkins Delivery Pipeline Plugin version 1.0.7 and earlier used the unescaped content of the query parameter 'fullscreen' in its JavaScript, resulting in a cross-site scripting vulnerability through specially crafted URLs. Version 1.0.8 of the plugin converts the value to a boolean (true/false) and inserts that into the page instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-1000404\">https://nvd.nist.gov/vuln/detail/CVE-2017-1000404</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2017-11-16/\">https://jenkins.io/security/advisory/2017-11-16/</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/101927\">http://www.securityfocus.com/bid/101927</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g364-c7w5-93wh\">https://github.com/advisories/GHSA-g364-c7w5-93wh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g364-c7w5-93wh",
            "title": "[se.diabol.jenkins.pipeline:delivery-pipeline-plugin] Jenkins Delivery Pipeline Plugin Cross-site Scripting vulnerability",
            "date_modified": "2022-12-12T17:17:38.000Z",
            "date_published": "2022-05-14T03:45:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g364-c7w5-93wh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A session fixation vulnerability exists in Jenkins SAML Plugin 1.0.6 and earlier in SamlSecurityRealm.java that allows unauthorized attackers to impersonate another users if they can control the pre-authentication session. SAML Plugin 1.0.7 invalidates the previous session during login and creates a new one.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000602\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000602</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-06-25/#SECURITY-916\">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-916</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4pjx-86pg-x4j5\">https://github.com/advisories/GHSA-4pjx-86pg-x4j5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4pjx-86pg-x4j5",
            "title": "[org.jenkins-ci.plugins:saml] Jenkins SAML Plugin Session Fixation vulnerability",
            "date_modified": "2022-12-12T17:10:16.000Z",
            "date_published": "2022-05-14T03:07:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4pjx-86pg-x4j5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A man in the middle vulnerability exists in Jenkins CollabNet Plugin 2.0.4 and earlier in CollabNetApp.java, CollabNetPlugin.java, CNFormFieldValidator.java that allows attackers to impersonate any service that Jenkins connects to. CollabNet Plugin 2.0.5 and newer no longer does that. It instead requires users to opt in to disabling SSL/TLS certificate validation by setting the system property hudson.plugins.collabnet.CollabNetPlugin.skipSslValidation to true. This feature applies to connections by this plugin only.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000605\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000605</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-06-25/#SECURITY-941\">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-941</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m8x2-4gc8-9v3r\">https://github.com/advisories/GHSA-m8x2-4gc8-9v3r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m8x2-4gc8-9v3r",
            "title": "[org.jenkins-ci.plugins:collabnet] Jenkins CollabNet Plugin man in the middle vulnerability",
            "date_modified": "2022-12-12T17:01:54.000Z",
            "date_published": "2022-05-14T02:56:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m8x2-4gc8-9v3r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exposure of sensitive information vulnerability exists in Jenkins SSH Agent Plugin 1.15 and earlier in SSHAgentStepExecution.java that exposes the SSH private key password to users with permission to read the build log. As of version 1.16, the plugin no longer logs the ssh-add invocation that would reveal the passphrase.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1999036\">https://nvd.nist.gov/vuln/detail/CVE-2018-1999036</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704\">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wwgx-94v6-fc2p\">https://github.com/advisories/GHSA-wwgx-94v6-fc2p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wwgx-94v6-fc2p",
            "title": "[org.jenkins-ci.plugins:ssh-agent] Jenkins SSH Agent Plugin exposes SSH private key password to users with permission to read the build log",
            "date_modified": "2022-12-12T17:00:04.000Z",
            "date_published": "2022-05-13T01:50:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wwgx-94v6-fc2p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}