{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins OpenShift Deployer Plugin 1.2.0 and earlier allows attackers to check for the existence of an attacker-specified file path on the Jenkins controller file system and to upload a SSH key file from the Jenkins controller file system to an attacker-specified URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36908\">https://nvd.nist.gov/vuln/detail/CVE-2022-36908</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(2)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(2)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5mv2-vqq7-mq5h\">https://github.com/advisories/GHSA-5mv2-vqq7-mq5h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5mv2-vqq7-mq5h",
            "title": "[org.jenkins-ci.plugins:openshift-deployer] Jenkins OpenShift Deployer Plugin allows attackers to check for file path, upload SSH key file",
            "date_modified": "2022-08-10T18:36:35.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5mv2-vqq7-mq5h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins OpenShift Deployer Plugin 1.2.0 and earlier allows attackers to connect to an attacker-specified URL using attacker-specified username and password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36906\">https://nvd.nist.gov/vuln/detail/CVE-2022-36906</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(1)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(1)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8528-c6m6-gppm\">https://github.com/advisories/GHSA-8528-c6m6-gppm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8528-c6m6-gppm",
            "title": "[org.jenkins-ci.plugins:openshift-deployer] Jenkins OpenShift Deployer Plugin allows connection to attacker-specified URL using attacker-specified credentials",
            "date_modified": "2022-08-10T18:35:57.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8528-c6m6-gppm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins OpenShift Deployer Plugin 1.2.0 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified username and password.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36907\">https://nvd.nist.gov/vuln/detail/CVE-2022-36907</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(1)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1375%20(1)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jvjh-9r4q-8q5q\">https://github.com/advisories/GHSA-jvjh-9r4q-8q5q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jvjh-9r4q-8q5q",
            "title": "[org.jenkins-ci.plugins:openshift-deployer] Jenkins OpenShift Deployer Plugin does not perform a permission check in a method implementing form validation",
            "date_modified": "2022-08-10T18:33:10.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jvjh-9r4q-8q5q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Repository Connector Plugin 2.2.0 and earlier does not perform a permission check in a method implementing form validation, allowing attackers with Overall/Read permission to check for the existence of an attacker-specified file path on the Jenkins controller file system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36904\">https://nvd.nist.gov/vuln/detail/CVE-2022-36904</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2665%20(2)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2665%20(2)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fjpq-f574-jc45\">https://github.com/advisories/GHSA-fjpq-f574-jc45</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fjpq-f574-jc45",
            "title": "[org.jenkins-ci.plugins:repository-connector] Jenkins Repository Connector Plugin does not perform a permission check in a method implementing form validation",
            "date_modified": "2022-08-10T18:32:37.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fjpq-f574-jc45"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins Repository Connector Plugin 2.2.0 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36903\">https://nvd.nist.gov/vuln/detail/CVE-2022-36903</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2665%20(1)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2665%20(1)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-76pg-mr9v-5vwc\">https://github.com/advisories/GHSA-76pg-mr9v-5vwc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-76pg-mr9v-5vwc",
            "title": "[org.jenkins-ci.plugins:repository-connector] Jenkins Repository Connector Plugin allows attackers with Overall/Read permission to enumerate credentials IDs",
            "date_modified": "2022-08-10T18:31:17.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-76pg-mr9v-5vwc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins HTTP Request Plugin 1.15 and earlier stores HTTP Request passwords unencrypted in its global configuration file on the Jenkins controller where they can be viewed by users with access to the Jenkins controller file system.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36901\">https://nvd.nist.gov/vuln/detail/CVE-2022-36901</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2053\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2053</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2qh6-hhvv-m2ww\">https://github.com/advisories/GHSA-2qh6-hhvv-m2ww</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2qh6-hhvv-m2ww",
            "title": "[org.jenkins-ci.plugins:http_request] Jenkins HTTP Request Plugin stores HTTP Request passwords unencrypted",
            "date_modified": "2022-08-10T18:30:42.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2qh6-hhvv-m2ww"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The webhook endpoint in Jenkins Git Plugin 4.11.3 and earlier provide unauthenticated attackers information about the existence of jobs configured to use an attacker-specified Git repository.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36884\">https://nvd.nist.gov/vuln/detail/CVE-2022-36884</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-284\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-284</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-449w-c77c-vmf6\">https://github.com/advisories/GHSA-449w-c77c-vmf6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-449w-c77c-vmf6",
            "title": "[org.jenkins-ci.plugins:git] Jenkins Git Plugin before 4.11.4 provides unauthenticated attackers information about the existence of jobs",
            "date_modified": "2022-08-10T18:28:39.000Z",
            "date_published": "2022-07-28T00:00:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-449w-c77c-vmf6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins Coverity Plugin 1.11.4 and earlier allows attackers with Overall/Read permission to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36921\">https://nvd.nist.gov/vuln/detail/CVE-2022-36921</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(2)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(2)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-99mq-hw5m-gwjj\">https://github.com/advisories/GHSA-99mq-hw5m-gwjj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-99mq-hw5m-gwjj",
            "title": "[org.jenkins-ci.plugins:coverity] Jenkins Coverity Plugin is missing authorization, leading to Credential Capture",
            "date_modified": "2022-08-10T18:25:41.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-99mq-hw5m-gwjj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins Git Plugin 4.11.3 and earlier allows unauthenticated attackers to trigger builds of jobs configured to use an attacker-specified Git repository and to cause them to check out an attacker-specified commit.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36883\">https://nvd.nist.gov/vuln/detail/CVE-2022-36883</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-284\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-284</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v878-67xw-grw2\">https://github.com/advisories/GHSA-v878-67xw-grw2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v878-67xw-grw2",
            "title": "[org.jenkins-ci.plugins:git] Jenkins Git Plugin before 4.11.4 is missing a permission check",
            "date_modified": "2022-08-10T18:25:41.000Z",
            "date_published": "2022-07-28T00:00:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v878-67xw-grw2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A missing permission check in Jenkins Coverity Plugin 1.11.4 and earlier allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36919\">https://nvd.nist.gov/vuln/detail/CVE-2022-36919</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(1)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(1)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x7w4-vfrh-fc3h\">https://github.com/advisories/GHSA-x7w4-vfrh-fc3h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x7w4-vfrh-fc3h",
            "title": "[org.jenkins-ci.plugins:coverity] Jenkins Coverity Plugin allows attackers with Overall/Read permission to enumerate credentials IDs",
            "date_modified": "2022-08-10T18:23:03.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x7w4-vfrh-fc3h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins Coverity Plugin 1.11.4 and earlier allows attackers to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36920\">https://nvd.nist.gov/vuln/detail/CVE-2022-36920</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(2)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2790%20(2)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5x3f-7m52-9cgf\">https://github.com/advisories/GHSA-5x3f-7m52-9cgf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5x3f-7m52-9cgf",
            "title": "[org.jenkins-ci.plugins:coverity] Jenkins Coverity Plugin vulnerable to cross-site request forgery (CSRF)",
            "date_modified": "2022-08-10T18:22:19.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5x3f-7m52-9cgf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Compuware zAdviser API Plugin 1.0.3 and earlier does not restrict execution of a controller/agent message to agents, allowing attackers able to control agent processes to retrieve Java system properties.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36900\">https://nvd.nist.gov/vuln/detail/CVE-2022-36900</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2630\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2630</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5xp2-7qfc-fwgc\">https://github.com/advisories/GHSA-5xp2-7qfc-fwgc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5xp2-7qfc-fwgc",
            "title": "[com.compuware.jenkins:compuware-zadviser-api] Jenkins Compuware zAdviser API Plugin before 1.0.4 vulnerable to protection mechanism failure",
            "date_modified": "2022-08-10T18:20:39.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5xp2-7qfc-fwgc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Compuware ISPW Operations Plugin 1.0.8 and earlier does not restrict execution of a controller/agent message to agents, allowing attackers able to control agent processes to retrieve Java system properties.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36899\">https://nvd.nist.gov/vuln/detail/CVE-2022-36899</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2629\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2629</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-57f2-52wj-7vj6\">https://github.com/advisories/GHSA-57f2-52wj-7vj6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-57f2-52wj-7vj6",
            "title": "[com.compuware.jenkins:compuware-ispw-operations] Jenkins Compuware ISPW Operations Plugin before 1.0.9 vulnerable to protection mechanism failure",
            "date_modified": "2022-08-10T18:19:34.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-57f2-52wj-7vj6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Git client plugin 3.11.0 and earlier does not perform SSH host key verification when connecting to Git repositories via SSH, enabling man-in-the-middle attacks. Git client plugin 3.11.1 provides strategies for performing host key verification for administrators to select the one that meets their security needs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36881\">https://nvd.nist.gov/vuln/detail/CVE-2022-36881</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1468\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-1468</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm7j-p8hc-97vj\">https://github.com/advisories/GHSA-cm7j-p8hc-97vj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm7j-p8hc-97vj",
            "title": "[org.jenkins-ci.plugins:git-client] Jenkins Git client plugin 3.11.0 does not perform SSH host key verification",
            "date_modified": "2022-08-10T17:39:45.000Z",
            "date_published": "2022-07-28T00:00:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm7j-p8hc-97vj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery (CSRF) vulnerability in Jenkins Openstack Heat Plugin 1.5 and earlier allows attackers to connect to an attacker-specified URL.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36911\">https://nvd.nist.gov/vuln/detail/CVE-2022-36911</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2105%20(1)\">https://www.jenkins.io/security/advisory/2022-07-27/#SECURITY-2105%20(1)</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/27/1\">http://www.openwall.com/lists/oss-security/2022/07/27/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fqhm-fjjv-7q8x\">https://github.com/advisories/GHSA-fqhm-fjjv-7q8x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fqhm-fjjv-7q8x",
            "title": "[org.jenkins-ci.plugins:openstack-heat] Jenkins Openstack Heat Plugin CSRF",
            "date_modified": "2022-08-10T17:27:42.000Z",
            "date_published": "2022-07-28T00:00:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fqhm-fjjv-7q8x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Eclipse Californium versions 2.0.0 to 2.7.2 and 3.0.0-3.5.0 a DTLS resumption handshake falls back to a DTLS full handshake on a parameter mismatch without using a HelloVerifyRequest. Especially, if used with certificate based cipher suites, that results in message amplification (DDoS other peers) and high CPU load (DoS own peer). The misbehavior occurs only with DTLS_VERIFY_PEERS_ON_RESUMPTION_THRESHOLD values larger than 0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2576\">https://nvd.nist.gov/vuln/detail/CVE-2022-2576</a></li>\n<li><a href=\"https://bugs.eclipse.org/580018\">https://bugs.eclipse.org/580018</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq3j-44gw-cf6r\">https://github.com/advisories/GHSA-qq3j-44gw-cf6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq3j-44gw-cf6r",
            "title": "[org.eclipse.californium:californium-core] Eclipse Californium denial of service (DoS) via Datagram Transport Layer Security (DTLS) handshake on parameter mismatch",
            "date_modified": "2022-08-10T15:41:25.000Z",
            "date_published": "2022-07-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq3j-44gw-cf6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Eclipse Californium versions 2.0.0 to 2.7.2 and 3.0.0-3.5.0 a DTLS resumption handshake falls back to a DTLS full handshake on a parameter mismatch without using a HelloVerifyRequest. Especially, if used with certificate based cipher suites, that results in message amplification (DDoS other peers) and high CPU load (DoS own peer). The misbehavior occurs only with DTLS_VERIFY_PEERS_ON_RESUMPTION_THRESHOLD values larger than 0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-2576\">https://nvd.nist.gov/vuln/detail/CVE-2022-2576</a></li>\n<li><a href=\"https://bugs.eclipse.org/580018\">https://bugs.eclipse.org/580018</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qq3j-44gw-cf6r\">https://github.com/advisories/GHSA-qq3j-44gw-cf6r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qq3j-44gw-cf6r",
            "title": "[org.eclipse.californium:californium-core] Eclipse Californium denial of service (DoS) via Datagram Transport Layer Security (DTLS) handshake on parameter mismatch",
            "date_modified": "2022-08-10T15:41:25.000Z",
            "date_published": "2022-07-30T00:00:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qq3j-44gw-cf6r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Dataease v1.11.1 was discovered to contain a SQL injection vulnerability via the parameter <code>dataSourceId</code>. Version 1.11.2 contains a fix.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-34115\">https://nvd.nist.gov/vuln/detail/CVE-2022-34115</a></li>\n<li><a href=\"https://github.com/dataease/dataease/issues/2428\">https://github.com/dataease/dataease/issues/2428</a></li>\n<li><a href=\"https://github.com/dataease/dataease/releases/tag/v1.11.2\">https://github.com/dataease/dataease/releases/tag/v1.11.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vjmr-6pmm-rprf\">https://github.com/advisories/GHSA-vjmr-6pmm-rprf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vjmr-6pmm-rprf",
            "title": "[io.dataease:dataease-plugin-common] Dataease v1.11.1 SQL Injection via parameter dataSourceId",
            "date_modified": "2022-08-06T09:37:45.000Z",
            "date_published": "2022-07-23T00:00:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vjmr-6pmm-rprf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Apache Calcite Avatica JDBC driver creates HTTP client instances based on class names provided via <code>httpclient_impl</code> connection property; however, the driver does not verify if the class implements the expected interface before instantiating it, which can lead to code execution loaded via arbitrary classes and in rare cases remote code execution. To exploit the vulnerability: 1) the attacker needs to have privileges to control JDBC connection parameters; 2) and there should be a vulnerable class (constructor with URL parameter and ability to execute code) in the classpath. From Apache Calcite Avatica 1.22.0 onwards, it will be verified that the class implements the expected interface before invoking its constructor.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-36364\">https://nvd.nist.gov/vuln/detail/CVE-2022-36364</a></li>\n<li><a href=\"https://lists.apache.org/thread/5csdj8bv4h3hfgw27okm84jh1j2fyw0c\">https://lists.apache.org/thread/5csdj8bv4h3hfgw27okm84jh1j2fyw0c</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/07/28/1\">http://www.openwall.com/lists/oss-security/2022/07/28/1</a></li>\n<li><a href=\"https://github.com/apache/calcite-avatica/commit/0c097b6a685fc1f97f151505a219976f15ed0c4c\">https://github.com/apache/calcite-avatica/commit/0c097b6a685fc1f97f151505a219976f15ed0c4c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w7f5-jrpr-5c2m\">https://github.com/advisories/GHSA-w7f5-jrpr-5c2m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w7f5-jrpr-5c2m",
            "title": "[org.apache.calcite.avatica:avatica-core] Apache Calcite Avatica JDBC driver arbitrary code execution",
            "date_modified": "2022-08-06T09:24:31.000Z",
            "date_published": "2022-07-29T00:00:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w7f5-jrpr-5c2m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p><em>What kind of vulnerability is it? Who is impacted?</em></p>\n<p>The PGJDBC implementation of the <code>java.sql.ResultRow.refreshRow()</code> method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. <code>;</code>, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user.</p>\n<p>User applications that do not invoke the <code>ResultSet.refreshRow()</code> method are not impacted.</p>\n<p>User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the <code>refreshRow()</code> method on the ResultSet.</p>\n<p>For example:</p>\n<pre><code class=\"language-sql\">CREATE TABLE refresh_row_example (\n  id     int PRIMARY KEY,\n  \"1 FROM refresh_row_example; SELECT pg_sleep(10); SELECT * \" int\n);\n</code></pre>\n<p>This example has a table with two columns. The name of the second column is crafted to contain a statement terminator followed by additional SQL. Invoking the <code>ResultSet.refreshRow()</code> on a ResultSet that queried this table, e.g. <code>SELECT * FROM refresh_row</code>, would cause the additional SQL commands such as the <code>SELECT pg_sleep(10)</code> invocation to be executed.</p>\n<p>As the multi statement command would contain multiple results, it would not be possible for the attacker to get data directly out of this approach as the <code>ResultSet.refreshRow()</code> method would throw an exception. However, the attacker could execute any arbitrary SQL including inserting the data into another table that could then be read or any other DML / DDL statement.</p>\n<p>Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user.</p>\n<h3 id=\"patches\">Patches</h3>\n<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>\n<p>Yes, versions 42.2.26 and 42.4.1 have been released with a fix.</p>\n<p>The 42.2.26 release was provided to support older clients that are still running JDK 6 or JDK 7 that cannot upgrade to the 42.4.x release line (which requires JDK 8+).</p>\n<p>We are not releasing a version for the 43.3.x release line and users are advised to upgrade to the 42.4.1 release to get the fix.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>\n<p>Check that you are not using the <code>ResultSet.refreshRow()</code> method.</p>\n<p>If you are, ensure that the code that executes that method does not connect to a database that is controlled by an unauthenticated or malicious user. If your application only connects to its own database with a fixed schema with no DDL permissions, then you will not be affected by this vulnerability as it requires a maliciously crafted schema.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2\">https://github.com/pgjdbc/pgjdbc/security/advisories/GHSA-r38f-c4h4-hqq2</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31197\">https://nvd.nist.gov/vuln/detail/CVE-2022-31197</a></li>\n<li><a href=\"https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637\">https://github.com/pgjdbc/pgjdbc/commit/739e599d52ad80f8dcd6efedc6157859b1a9d637</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r38f-c4h4-hqq2\">https://github.com/advisories/GHSA-r38f-c4h4-hqq2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r38f-c4h4-hqq2",
            "title": "[org.postgresql:postgresql] PostgreSQL JDBC Driver SQL Injection in ResultSet.refreshRow() with malicious column names",
            "date_modified": "2022-08-09T19:18:15.000Z",
            "date_published": "2022-08-06T05:51:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r38f-c4h4-hqq2"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}