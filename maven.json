{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The value of <code>nvdApiKey</code> configuration parameter is logged in clear text in debug mode.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NVD API key is a kind of secret and should be treated like other secrets when logging in debug mode.\nExpecting the same behavior as for several password configurations: just print <code>******</code></p>\n<p>Note that while the NVD API Key is an access token for the NVD API - they are not that sensitive. The only thing an NVD API Token grants is a higher rate limit when making calls to publicly available data. The data available from the NVD API is the same whether you have an API Key or not.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The nvdApiKey is configured to use an environment variable; when running <code>mvn -X dependency-check:check</code> the clear value is logged twice.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The NVD API key is a kind of secret and should not be exposed. If stolen, an attacker can use this key to obtain already public information.</p>\n<h3 id=\"update\">UPDATE</h3>\n<p>The issue isn't still resoved in 9.0.6:\nCreate a <code>pom.xml</code> with the following configuration:</p>\n<pre><code>    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.owasp&lt;/groupId&gt;\n                &lt;artifactId&gt;dependency-check-maven&lt;/artifactId&gt;\n                &lt;version&gt;9.0.6&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;formats&gt;\n                        &lt;format&gt;HTML&lt;/format&gt;\n                        &lt;format&gt;XML&lt;/format&gt;\n                        &lt;format&gt;JSON&lt;/format&gt;\n                    &lt;/formats&gt;\n                    &lt;failBuildOnCVSS&gt;7&lt;/failBuildOnCVSS&gt;\n                    &lt;autoUpdate&gt;true&lt;/autoUpdate&gt;\n                    &lt;skipProvidedScope&gt;true&lt;/skipProvidedScope&gt;\n                    &lt;nvdValidForHours&gt;12&lt;/nvdValidForHours&gt;\n                    &lt;knownExploitedEnabled&gt;true&lt;/knownExploitedEnabled&gt;\n                    &lt;knownExploitedUrl&gt;https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json&lt;/knownExploitedUrl&gt;\n                    &lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;OWASP-Check&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;check&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n</code></pre>\n<p>and run <code>mvn -X -B verify &gt; check.txt 2&gt;&amp;1</code>\nthen see that the API key ist still present in clear text: <code>grep nvdApiKey check.txt</code>\nreturns:\n<code>&lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;</code>\n<code>[DEBUG]   (f) nvdApiKey = foobar</code></p>\n<p>HINT: Can only verify maven, so didn't edit other Affected products.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5",
            "title": "[org.owasp:dependency-check-maven] nvdApiKey is logged in debug mode",
            "date_modified": "2023-12-15T23:43:31.000Z",
            "date_published": "2023-12-15T23:43:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The value of <code>nvdApiKey</code> configuration parameter is logged in clear text in debug mode.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NVD API key is a kind of secret and should be treated like other secrets when logging in debug mode.\nExpecting the same behavior as for several password configurations: just print <code>******</code></p>\n<p>Note that while the NVD API Key is an access token for the NVD API - they are not that sensitive. The only thing an NVD API Token grants is a higher rate limit when making calls to publicly available data. The data available from the NVD API is the same whether you have an API Key or not.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The nvdApiKey is configured to use an environment variable; when running <code>mvn -X dependency-check:check</code> the clear value is logged twice.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The NVD API key is a kind of secret and should not be exposed. If stolen, an attacker can use this key to obtain already public information.</p>\n<h3 id=\"update\">UPDATE</h3>\n<p>The issue isn't still resoved in 9.0.6:\nCreate a <code>pom.xml</code> with the following configuration:</p>\n<pre><code>    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.owasp&lt;/groupId&gt;\n                &lt;artifactId&gt;dependency-check-maven&lt;/artifactId&gt;\n                &lt;version&gt;9.0.6&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;formats&gt;\n                        &lt;format&gt;HTML&lt;/format&gt;\n                        &lt;format&gt;XML&lt;/format&gt;\n                        &lt;format&gt;JSON&lt;/format&gt;\n                    &lt;/formats&gt;\n                    &lt;failBuildOnCVSS&gt;7&lt;/failBuildOnCVSS&gt;\n                    &lt;autoUpdate&gt;true&lt;/autoUpdate&gt;\n                    &lt;skipProvidedScope&gt;true&lt;/skipProvidedScope&gt;\n                    &lt;nvdValidForHours&gt;12&lt;/nvdValidForHours&gt;\n                    &lt;knownExploitedEnabled&gt;true&lt;/knownExploitedEnabled&gt;\n                    &lt;knownExploitedUrl&gt;https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json&lt;/knownExploitedUrl&gt;\n                    &lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;OWASP-Check&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;check&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n</code></pre>\n<p>and run <code>mvn -X -B verify &gt; check.txt 2&gt;&amp;1</code>\nthen see that the API key ist still present in clear text: <code>grep nvdApiKey check.txt</code>\nreturns:\n<code>&lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;</code>\n<code>[DEBUG]   (f) nvdApiKey = foobar</code></p>\n<p>HINT: Can only verify maven, so didn't edit other Affected products.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5",
            "title": "[org.owasp:dependency-check-cli] nvdApiKey is logged in debug mode",
            "date_modified": "2023-12-15T23:43:31.000Z",
            "date_published": "2023-12-15T23:43:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The value of <code>nvdApiKey</code> configuration parameter is logged in clear text in debug mode.</p>\n<h3 id=\"details\">Details</h3>\n<p>The NVD API key is a kind of secret and should be treated like other secrets when logging in debug mode.\nExpecting the same behavior as for several password configurations: just print <code>******</code></p>\n<p>Note that while the NVD API Key is an access token for the NVD API - they are not that sensitive. The only thing an NVD API Token grants is a higher rate limit when making calls to publicly available data. The data available from the NVD API is the same whether you have an API Key or not.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The nvdApiKey is configured to use an environment variable; when running <code>mvn -X dependency-check:check</code> the clear value is logged twice.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>The NVD API key is a kind of secret and should not be exposed. If stolen, an attacker can use this key to obtain already public information.</p>\n<h3 id=\"update\">UPDATE</h3>\n<p>The issue isn't still resoved in 9.0.6:\nCreate a <code>pom.xml</code> with the following configuration:</p>\n<pre><code>    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.owasp&lt;/groupId&gt;\n                &lt;artifactId&gt;dependency-check-maven&lt;/artifactId&gt;\n                &lt;version&gt;9.0.6&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;formats&gt;\n                        &lt;format&gt;HTML&lt;/format&gt;\n                        &lt;format&gt;XML&lt;/format&gt;\n                        &lt;format&gt;JSON&lt;/format&gt;\n                    &lt;/formats&gt;\n                    &lt;failBuildOnCVSS&gt;7&lt;/failBuildOnCVSS&gt;\n                    &lt;autoUpdate&gt;true&lt;/autoUpdate&gt;\n                    &lt;skipProvidedScope&gt;true&lt;/skipProvidedScope&gt;\n                    &lt;nvdValidForHours&gt;12&lt;/nvdValidForHours&gt;\n                    &lt;knownExploitedEnabled&gt;true&lt;/knownExploitedEnabled&gt;\n                    &lt;knownExploitedUrl&gt;https://www.cisa.gov/sites/default/files/feeds/known_exploited_vulnerabilities.json&lt;/knownExploitedUrl&gt;\n                    &lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;OWASP-Check&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;check&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n</code></pre>\n<p>and run <code>mvn -X -B verify &gt; check.txt 2&gt;&amp;1</code>\nthen see that the API key ist still present in clear text: <code>grep nvdApiKey check.txt</code>\nreturns:\n<code>&lt;nvdApiKey&gt;foobar&lt;/nvdApiKey&gt;</code>\n<code>[DEBUG]   (f) nvdApiKey = foobar</code></p>\n<p>HINT: Can only verify maven, so didn't edit other Affected products.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/jeremylong/DependencyCheck/security/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qqhq-8r2c-c3f5\">https://github.com/advisories/GHSA-qqhq-8r2c-c3f5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5",
            "title": "[org.owasp:dependency-check-ant] nvdApiKey is logged in debug mode",
            "date_modified": "2023-12-15T23:43:31.000Z",
            "date_published": "2023-12-15T23:43:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qqhq-8r2c-c3f5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Deserialization of Untrusted Data vulnerability in Apache Dubbo.This issue only affects Apache Dubbo 3.1.5.</p>\n<p>Users are recommended to upgrade to the latest version, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-46279\">https://nvd.nist.gov/vuln/detail/CVE-2023-46279</a></li>\n<li><a href=\"https://lists.apache.org/thread/zw53nxrkrfswmk9n3sfwxmcj7x030nmo\">https://lists.apache.org/thread/zw53nxrkrfswmk9n3sfwxmcj7x030nmo</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/12/15/3\">http://www.openwall.com/lists/oss-security/2023/12/15/3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-97rv-88gf-phvr\">https://github.com/advisories/GHSA-97rv-88gf-phvr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-97rv-88gf-phvr",
            "title": "[org.apache.dubbo:dubbo] Apache Dubbo: Bypass deny serialize list check in Apache Dubbo",
            "date_modified": "2023-12-15T23:25:04.000Z",
            "date_published": "2023-12-15T09:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-97rv-88gf-phvr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A deserialization vulnerability existed when decode a&nbsp;malicious package.This issue affects Apache Dubbo: from 3.1.0 through 3.1.10, from 3.2.0 through 3.2.4.</p>\n<p>Users are recommended to upgrade to the latest version, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29234\">https://nvd.nist.gov/vuln/detail/CVE-2023-29234</a></li>\n<li><a href=\"https://lists.apache.org/thread/wb2df2whkdnbgp54nnqn0m94rllx8f77\">https://lists.apache.org/thread/wb2df2whkdnbgp54nnqn0m94rllx8f77</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/12/15/2\">http://www.openwall.com/lists/oss-security/2023/12/15/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x49-w35h-wqrj\">https://github.com/advisories/GHSA-6x49-w35h-wqrj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x49-w35h-wqrj",
            "title": "[org.apache.dubbo:dubbo] Bypass serialize checks in Apache Dubbo",
            "date_modified": "2023-12-15T23:20:29.000Z",
            "date_published": "2023-12-15T09:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x49-w35h-wqrj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A deserialization vulnerability existed when decode a&nbsp;malicious package.This issue affects Apache Dubbo: from 3.1.0 through 3.1.10, from 3.2.0 through 3.2.4.</p>\n<p>Users are recommended to upgrade to the latest version, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-29234\">https://nvd.nist.gov/vuln/detail/CVE-2023-29234</a></li>\n<li><a href=\"https://lists.apache.org/thread/wb2df2whkdnbgp54nnqn0m94rllx8f77\">https://lists.apache.org/thread/wb2df2whkdnbgp54nnqn0m94rllx8f77</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2023/12/15/2\">http://www.openwall.com/lists/oss-security/2023/12/15/2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6x49-w35h-wqrj\">https://github.com/advisories/GHSA-6x49-w35h-wqrj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6x49-w35h-wqrj",
            "title": "[org.apache.dubbo:dubbo] Bypass serialize checks in Apache Dubbo",
            "date_modified": "2023-12-15T23:20:29.000Z",
            "date_published": "2023-12-15T09:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6x49-w35h-wqrj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Script Security sandbox protection could be circumvented during the script compilation phase by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n<p>Both the pipeline validation REST APIs and actual script/pipeline execution are affected.</p>\n<p>This allowed users with Overall/Read permission, or able to control Jenkinsfile or sandboxed Pipeline shared library contents in SCM, to bypass the sandbox protection and execute arbitrary code on the Jenkins controller.</p>\n<p>All known unsafe AST transformations in Groovy are now prohibited in sandboxed scripts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-1003001\">https://nvd.nist.gov/vuln/detail/CVE-2019-1003001</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0326\">https://access.redhat.com/errata/RHBA-2019:0326</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0327\">https://access.redhat.com/errata/RHBA-2019:0327</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266\">https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46572/\">https://www.exploit-db.com/exploits/46572/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152132/Jenkins-ACL-Bypass-Metaprogramming-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/152132/Jenkins-ACL-Bypass-Metaprogramming-Remote-Code-Execution.html</a></li>\n<li><a href=\"http://www.rapid7.com/db/modules/exploit/multi/http/jenkins_metaprogramming\">http://www.rapid7.com/db/modules/exploit/multi/http/jenkins_metaprogramming</a></li>\n<li><a href=\"https://github.com/jenkinsci/pipeline-model-definition-plugin/commit/6d7884dec610bf34503d24d494d994e9fc607642\">https://github.com/jenkinsci/pipeline-model-definition-plugin/commit/6d7884dec610bf34503d24d494d994e9fc607642</a></li>\n<li><a href=\"https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c\">https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-plugin/commit/66c3e7aafe7888d4e1fe9995a688bb3fb742d742\">https://github.com/jenkinsci/workflow-cps-plugin/commit/66c3e7aafe7888d4e1fe9995a688bb3fb742d742</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6q78-6xvr-26fg\">https://github.com/advisories/GHSA-6q78-6xvr-26fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6q78-6xvr-26fg",
            "title": "[org.jenkins-ci.plugins:script-security] Jenkins Groovy Plugin sandbox bypass vulnerability",
            "date_modified": "2023-12-15T17:33:51.000Z",
            "date_published": "2022-05-13T01:15:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6q78-6xvr-26fg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins Script Security sandbox protection could be circumvented during the script compilation phase by applying AST transforming annotations such as <code>@Grab</code> to source code elements.</p>\n<p>Both the pipeline validation REST APIs and actual script/pipeline execution are affected.</p>\n<p>This allowed users with Overall/Read permission, or able to control Jenkinsfile or sandboxed Pipeline shared library contents in SCM, to bypass the sandbox protection and execute arbitrary code on the Jenkins controller.</p>\n<p>All known unsafe AST transformations in Groovy are now prohibited in sandboxed scripts.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-1003001\">https://nvd.nist.gov/vuln/detail/CVE-2019-1003001</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0326\">https://access.redhat.com/errata/RHBA-2019:0326</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0327\">https://access.redhat.com/errata/RHBA-2019:0327</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266\">https://jenkins.io/security/advisory/2019-01-08/#SECURITY-1266</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46572/\">https://www.exploit-db.com/exploits/46572/</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152132/Jenkins-ACL-Bypass-Metaprogramming-Remote-Code-Execution.html\">http://packetstormsecurity.com/files/152132/Jenkins-ACL-Bypass-Metaprogramming-Remote-Code-Execution.html</a></li>\n<li><a href=\"http://www.rapid7.com/db/modules/exploit/multi/http/jenkins_metaprogramming\">http://www.rapid7.com/db/modules/exploit/multi/http/jenkins_metaprogramming</a></li>\n<li><a href=\"https://github.com/jenkinsci/pipeline-model-definition-plugin/commit/6d7884dec610bf34503d24d494d994e9fc607642\">https://github.com/jenkinsci/pipeline-model-definition-plugin/commit/6d7884dec610bf34503d24d494d994e9fc607642</a></li>\n<li><a href=\"https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c\">https://github.com/jenkinsci/script-security-plugin/commit/2c5122e50742dd16492f9424992deb21cc07837c</a></li>\n<li><a href=\"https://github.com/jenkinsci/workflow-cps-plugin/commit/66c3e7aafe7888d4e1fe9995a688bb3fb742d742\">https://github.com/jenkinsci/workflow-cps-plugin/commit/66c3e7aafe7888d4e1fe9995a688bb3fb742d742</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6q78-6xvr-26fg\">https://github.com/advisories/GHSA-6q78-6xvr-26fg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6q78-6xvr-26fg",
            "title": "[org.jenkins-ci.plugins:pipeline-model-definition] Jenkins Groovy Plugin sandbox bypass vulnerability",
            "date_modified": "2023-12-15T17:33:51.000Z",
            "date_published": "2022-05-13T01:15:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6q78-6xvr-26fg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A session fixation vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java that prevented Jenkins from invalidating the existing session and creating a new one when a user signed up for a new user account.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000409\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000409</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-10-10/#SECURITY-1158\">https://jenkins.io/security/advisory/2018-10-10/#SECURITY-1158</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/517da6ed389f0a606dd9bb8595bc79fc93f4331c\">https://github.com/jenkinsci/jenkins/commit/517da6ed389f0a606dd9bb8595bc79fc93f4331c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rr6r-p7rw-369c\">https://github.com/advisories/GHSA-rr6r-p7rw-369c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rr6r-p7rw-369c",
            "title": "[org.jenkins-ci.main:jenkins-core] Session Fixation in Jenkins",
            "date_modified": "2023-12-15T17:19:18.000Z",
            "date_published": "2022-05-14T01:04:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rr6r-p7rw-369c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A session fixation vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java that prevented Jenkins from invalidating the existing session and creating a new one when a user signed up for a new user account.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000409\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000409</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-10-10/#SECURITY-1158\">https://jenkins.io/security/advisory/2018-10-10/#SECURITY-1158</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/517da6ed389f0a606dd9bb8595bc79fc93f4331c\">https://github.com/jenkinsci/jenkins/commit/517da6ed389f0a606dd9bb8595bc79fc93f4331c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rr6r-p7rw-369c\">https://github.com/advisories/GHSA-rr6r-p7rw-369c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rr6r-p7rw-369c",
            "title": "[org.jenkins-ci.main:jenkins-core] Session Fixation in Jenkins",
            "date_modified": "2023-12-15T17:19:18.000Z",
            "date_published": "2022-05-14T01:04:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rr6r-p7rw-369c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A data modification vulnerability exists in Jenkins Blue Ocean Plugins 1.10.1 and earlier that allows attackers to bypass all cross-site request forgery protection in Blue Ocean API. The vulnerability is found in:</p>\n<ul>\n<li>blueocean-core-js/src/js/bundleStartup.js</li>\n<li>blueocean-core-js/src/js/fetch.ts</li>\n<li>blueocean-core-js/src/js/i18n/i18n.js</li>\n<li>blueocean-core-js/src/js/urlconfig.js</li>\n<li>blueocean-rest/src/main/java/io/jenkins/blueocean/rest/APICrumbExclusion.java</li>\n<li>blueocean-web/src/main/java/io/jenkins/blueocean/BlueOceanUI.java</li>\n<li>blueocean-web/src/main/resources/io/jenkins/blueocean/BlueOceanUI/index.jelly</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-1003012\">https://nvd.nist.gov/vuln/detail/CVE-2019-1003012</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0326\">https://access.redhat.com/errata/RHBA-2019:0326</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHBA-2019:0327\">https://access.redhat.com/errata/RHBA-2019:0327</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1201\">https://jenkins.io/security/advisory/2019-01-28/#SECURITY-1201</a></li>\n<li><a href=\"https://github.com/jenkinsci/blueocean-plugin/commit/1a03020b5a50c1e3f47d4b0902ec7fc78d3c86ce\">https://github.com/jenkinsci/blueocean-plugin/commit/1a03020b5a50c1e3f47d4b0902ec7fc78d3c86ce</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qxh5-5r5p-5gvf\">https://github.com/advisories/GHSA-qxh5-5r5p-5gvf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qxh5-5r5p-5gvf",
            "title": "[io.jenkins.blueocean:blueocean] Cross-Site Request Forgery in Jenkins Blue Ocean Plugin",
            "date_modified": "2023-12-15T17:17:49.000Z",
            "date_published": "2022-05-13T01:31:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qxh5-5r5p-5gvf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An improper authorization vulnerability exists in Jenkins Jira Plugin 3.0.1 and earlier in JiraSite.java that allows attackers with Overall/Read access to have Jenkins connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins. In version 3.0.2, this form validation method requires POST requests and Overall/Administer (for globally defined sites) or Item/Configure permissions (for sites defined for a folder).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000412\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000412</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1029\">https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1029</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/jira-plugin/commit/612a6ef06dbd5a63bea0b128142c726e96195eda\">https://github.com/jenkinsci/jira-plugin/commit/612a6ef06dbd5a63bea0b128142c726e96195eda</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fpg6-xqj4-j7wf\">https://github.com/advisories/GHSA-fpg6-xqj4-j7wf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fpg6-xqj4-j7wf",
            "title": "[org.jenkins-ci.plugins:jira] Jenkins Jira Plugin Incorrect Authorization vulnerability",
            "date_modified": "2023-12-15T17:13:45.000Z",
            "date_published": "2022-05-13T01:18:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fpg6-xqj4-j7wf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An exposure of sensitive information vulnerability exists in Jenkins SSH Agent Plugin 1.15 and earlier in SSHAgentStepExecution.java that exposes the SSH private key password to users with permission to read the build log. As of version 1.16, the plugin no longer logs the ssh-add invocation that would reveal the passphrase.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1999036\">https://nvd.nist.gov/vuln/detail/CVE-2018-1999036</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704\">https://jenkins.io/security/advisory/2018-07-30/#SECURITY-704</a></li>\n<li><a href=\"https://github.com/jenkinsci/ssh-agent-plugin/commit/3a8abe1889d25f9a73cdba202cf27212b273de4d\">https://github.com/jenkinsci/ssh-agent-plugin/commit/3a8abe1889d25f9a73cdba202cf27212b273de4d</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wwgx-94v6-fc2p\">https://github.com/advisories/GHSA-wwgx-94v6-fc2p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wwgx-94v6-fc2p",
            "title": "[org.jenkins-ci.plugins:ssh-agent] Jenkins SSH Agent Plugin exposes SSH private key password to users with permission to read the build log",
            "date_modified": "2023-12-15T17:13:12.000Z",
            "date_published": "2022-05-13T01:50:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wwgx-94v6-fc2p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A Cron expression form validation could enter infinite loop, potentially resulting in denial of service. The form validation for cron expressions (e.g. \"Poll SCM\", \"Build periodically\") could enter infinite loops when cron expressions only matching certain rare dates were entered, blocking request handling threads indefinitely.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1999044\">https://nvd.nist.gov/vuln/detail/CVE-2018-1999044</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-08-15/#SECURITY-790\">https://jenkins.io/security/advisory/2018-08-15/#SECURITY-790</a></li>\n<li><a href=\"https://github.com/jenkinsci/jenkins/commit/e5046911c57e60a1d6d8aca9b21bd9093b0f3763\">https://github.com/jenkinsci/jenkins/commit/e5046911c57e60a1d6d8aca9b21bd9093b0f3763</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8qpf-fv36-h4r8\">https://github.com/advisories/GHSA-8qpf-fv36-h4r8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8qpf-fv36-h4r8",
            "title": "[org.jenkins-ci.main:jenkins-core] Infinite Loop in Jenkins Core",
            "date_modified": "2023-12-15T17:12:22.000Z",
            "date_published": "2022-05-13T01:50:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8qpf-fv36-h4r8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A exposure of sensitive information vulnerability exists in Jenkins GitHub Plugin 1.29.1 and earlier in GitHubTokenCredentialsCreator.java that allows attackers to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000600\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000600</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-06-25/#SECURITY-915\">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-915</a></li>\n<li><a href=\"https://github.com/jenkinsci/github-plugin/commit/ce7f5f2cb523757f2bf9ec362e1c8de1de447ec7\">https://github.com/jenkinsci/github-plugin/commit/ce7f5f2cb523757f2bf9ec362e1c8de1de447ec7</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6cvm-v6qj-hjq9\">https://github.com/advisories/GHSA-6cvm-v6qj-hjq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6cvm-v6qj-hjq9",
            "title": "[com.coravy.hudson.plugins.github:github] CSRF vulnerability and missing permission checks in GitHub Plugin allowed capturing credentials ",
            "date_modified": "2023-12-15T15:27:57.000Z",
            "date_published": "2022-05-13T01:48:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6cvm-v6qj-hjq9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An arbitrary code execution vulnerability exists in Liquibase Runner Plugin version 1.3.0 and older that allows an attacker with permission to configure jobs to load and execute arbitrary code on the Jenkins master JVM.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000146\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000146</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-03-26/#SECURITY-519\">https://jenkins.io/security/advisory/2018-03-26/#SECURITY-519</a></li>\n<li><a href=\"https://github.com/jenkinsci/liquibase-runner-plugin/commit/1817af0b5bb17e690d89c0a1623de8bd47f8c1a1\">https://github.com/jenkinsci/liquibase-runner-plugin/commit/1817af0b5bb17e690d89c0a1623de8bd47f8c1a1</a></li>\n<li><a href=\"https://github.com/jenkinsci/liquibase-runner-plugin/commit/382a1ea84910db28a88089306b24d1e80818f0a5\">https://github.com/jenkinsci/liquibase-runner-plugin/commit/382a1ea84910db28a88089306b24d1e80818f0a5</a></li>\n<li><a href=\"https://github.com/jenkinsci/liquibase-runner-plugin/commit/7726ce4569a287e32fbda6f01ad2846ada909436\">https://github.com/jenkinsci/liquibase-runner-plugin/commit/7726ce4569a287e32fbda6f01ad2846ada909436</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3hvc-xwjp-xr8m\">https://github.com/advisories/GHSA-3hvc-xwjp-xr8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3hvc-xwjp-xr8m",
            "title": "[org.jenkins-ci.plugins:liquibase-runner] Liquibase Runner Plugin allows users to load arbitrary Java code into controller JVM ",
            "date_modified": "2023-12-15T15:25:20.000Z",
            "date_published": "2022-05-13T01:48:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3hvc-xwjp-xr8m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A exposure of sensitive information vulnerability exists in Jenkins Openstack Cloud Plugin 2.35 and earlier in BootSource.java, InstancesToRun.java, JCloudsCleanupThread.java, JCloudsCloud.java, JCloudsComputer.java, JCloudsPreCreationThread.java, JCloudsRetentionStrategy.java, JCloudsSlave.java, JCloudsSlaveTemplate.java, LauncherFactory.java, OpenstackCredentials.java, OpenStackMachineStep.java, SlaveOptions.java, SlaveOptionsDescriptor.java that allows attackers with Overall/Read access to Jenkins to connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins, and to cause Jenkins to submit HTTP requests to attacker-specified URLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000603\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000603</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-06-25/#SECURITY-808\">https://jenkins.io/security/advisory/2018-06-25/#SECURITY-808</a></li>\n<li><a href=\"https://github.com/jenkinsci/openstack-cloud-plugin/commit/7123cf70c5223f22b44a3c7e59255c6a6e44da8b\">https://github.com/jenkinsci/openstack-cloud-plugin/commit/7123cf70c5223f22b44a3c7e59255c6a6e44da8b</a></li>\n<li><a href=\"https://github.com/jenkinsci/openstack-cloud-plugin/commit/9ec76f8db6aa5b9e868c5d7dade09f1ef1a0fdb6\">https://github.com/jenkinsci/openstack-cloud-plugin/commit/9ec76f8db6aa5b9e868c5d7dade09f1ef1a0fdb6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-grf8-94q5-4phx\">https://github.com/advisories/GHSA-grf8-94q5-4phx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-grf8-94q5-4phx",
            "title": "[org.jenkins-ci.plugins:openstack-cloud] CSRF vulnerability and missing permission checks in Openstack Cloud Plugin allowed capturing credentials ",
            "date_modified": "2023-12-15T15:05:52.000Z",
            "date_published": "2022-05-13T01:48:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-grf8-94q5-4phx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery vulnerability exists in Jenkins Email Extension Template Plugin 1.0 and earlier in ExtEmailTemplateManagement.java that allows creating or removing templates.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000417\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000417</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1125\">https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1125</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/emailext-template-plugin/commit/74653060cef7507425642841e0f2e58d10aa389f\">https://github.com/jenkinsci/emailext-template-plugin/commit/74653060cef7507425642841e0f2e58d10aa389f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4m38-gqh8-x266\">https://github.com/advisories/GHSA-4m38-gqh8-x266</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4m38-gqh8-x266",
            "title": "[org.jenkins-ci.plugins:email-ext] CSRF vulnerability in Email Extension Template Plugin ",
            "date_modified": "2023-12-15T11:55:53.000Z",
            "date_published": "2022-05-14T01:39:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4m38-gqh8-x266"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site scripting vulnerability exists in Jenkins Config File Provider Plugin 3.1 and earlier in configfiles.jelly, providerlist.jelly that allows users with the ability to configure configuration files to insert arbitrary HTML into some pages in Jenkins.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000413\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000413</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1080\">https://jenkins.io/security/advisory/2018-09-25/#SECURITY-1080</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/config-file-provider-plugin/commit/5c1df554e44b712e5d926b8d5557c592bf9f0a33\">https://github.com/jenkinsci/config-file-provider-plugin/commit/5c1df554e44b712e5d926b8d5557c592bf9f0a33</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vwfm-42q6-qj75\">https://github.com/advisories/GHSA-vwfm-42q6-qj75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vwfm-42q6-qj75",
            "title": "[org.jenkins-ci.plugins:config-file-provider] Stored XSS vulnerability in Config File Provider Plugin ",
            "date_modified": "2023-12-15T11:55:03.000Z",
            "date_published": "2022-05-14T01:40:44.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vwfm-42q6-qj75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A cross-site request forgery vulnerability exists in Jenkins Config File Provider Plugin 3.1 and earlier in ConfigFilesManagement.java, FolderConfigFileAction.java that allows creating and editing configuration file definitions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1000414\">https://nvd.nist.gov/vuln/detail/CVE-2018-1000414</a></li>\n<li><a href=\"https://jenkins.io/security/advisory/2018-09-25/#SECURITY-938\">https://jenkins.io/security/advisory/2018-09-25/#SECURITY-938</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/106532\">http://www.securityfocus.com/bid/106532</a></li>\n<li><a href=\"https://github.com/jenkinsci/config-file-provider-plugin/commit/5c1df554e44b712e5d926b8d5557c592bf9f0a33\">https://github.com/jenkinsci/config-file-provider-plugin/commit/5c1df554e44b712e5d926b8d5557c592bf9f0a33</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r5m8-5mwx-cmj8\">https://github.com/advisories/GHSA-r5m8-5mwx-cmj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r5m8-5mwx-cmj8",
            "title": "[org.jenkins-ci.plugins:config-file-provider] CSRF vulnerability in Config File Provider Plugin ",
            "date_modified": "2023-12-15T11:53:16.000Z",
            "date_published": "2022-05-14T01:39:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r5m8-5mwx-cmj8"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}