{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Streampark allows any users to upload a jar as application, but there is no mandatory verification of the uploaded file type. This means users may upload some high-risk files, and may upload them to any directory.&nbsp;Users of the affected versions should upgrade to Apache StreamPark 2.0.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45802\">https://nvd.nist.gov/vuln/detail/CVE-2022-45802</a></li>\n<li><a href=\"https://lists.apache.org/thread/thwl1v2h6r3c21x1qwff08o57qzjnst6\">https://lists.apache.org/thread/thwl1v2h6r3c21x1qwff08o57qzjnst6</a></li>\n<li><a href=\"https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236\">https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6874-289g-f7h7\">https://github.com/advisories/GHSA-6874-289g-f7h7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6874-289g-f7h7",
            "title": "[org.apache.streampark:streampark-common_2.11] Apache StreamPark Path Traversal vulnerability",
            "date_modified": "2023-07-06T23:01:30.000Z",
            "date_published": "2023-07-06T19:24:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6874-289g-f7h7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Streampark allows any users to upload a jar as application, but there is no mandatory verification of the uploaded file type. This means users may upload some high-risk files, and may upload them to any directory.&nbsp;Users of the affected versions should upgrade to Apache StreamPark 2.0.0 or later.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45802\">https://nvd.nist.gov/vuln/detail/CVE-2022-45802</a></li>\n<li><a href=\"https://lists.apache.org/thread/thwl1v2h6r3c21x1qwff08o57qzjnst6\">https://lists.apache.org/thread/thwl1v2h6r3c21x1qwff08o57qzjnst6</a></li>\n<li><a href=\"https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236\">https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6874-289g-f7h7\">https://github.com/advisories/GHSA-6874-289g-f7h7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6874-289g-f7h7",
            "title": "[org.apache.streampark:streampark-common_2.12] Apache StreamPark Path Traversal vulnerability",
            "date_modified": "2023-07-06T23:01:30.000Z",
            "date_published": "2023-07-06T19:24:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6874-289g-f7h7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.4.0 through 1.5.0.&nbsp;By manipulating the \"orderType\" parameter and the ordering of the returned content using an SQL injection attack, an attacker can extract the username of the&nbsp;&nbsp; user with ID 1 from the \"user\" table, one character at a time.&nbsp; Users are advised to upgrade to Apache InLong's 1.6.0 or cherry-pick PR #7530 to solve it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30465\">https://nvd.nist.gov/vuln/detail/CVE-2023-30465</a></li>\n<li><a href=\"https://lists.apache.org/thread/mrh4nr3jrlbj6nxkn4q8hddbfh1pnok0\">https://lists.apache.org/thread/mrh4nr3jrlbj6nxkn4q8hddbfh1pnok0</a></li>\n<li><a href=\"https://github.com/apache/inlong/issues/7529\">https://github.com/apache/inlong/issues/7529</a></li>\n<li><a href=\"https://github.com/apache/inlong/pull/7530\">https://github.com/apache/inlong/pull/7530</a></li>\n<li><a href=\"https://inlong.apache.org/zh-CN/download/release-1.6.0/\">https://inlong.apache.org/zh-CN/download/release-1.6.0/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqr6-3x3f-9wr3\">https://github.com/advisories/GHSA-cqr6-3x3f-9wr3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqr6-3x3f-9wr3",
            "title": "[org.apache.inlong:manager-service] Apache InLong SQL Injection vulnerability",
            "date_modified": "2023-07-06T22:57:42.000Z",
            "date_published": "2023-07-06T19:24:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqr6-3x3f-9wr3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in Apache Software Foundation Apache InLong.This issue affects Apache InLong: from 1.4.0 through 1.5.0.&nbsp;By manipulating the \"orderType\" parameter and the ordering of the returned content using an SQL injection attack, an attacker can extract the username of the&nbsp;&nbsp; user with ID 1 from the \"user\" table, one character at a time.&nbsp; Users are advised to upgrade to Apache InLong's 1.6.0 or cherry-pick PR #7530 to solve it.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-30465\">https://nvd.nist.gov/vuln/detail/CVE-2023-30465</a></li>\n<li><a href=\"https://lists.apache.org/thread/mrh4nr3jrlbj6nxkn4q8hddbfh1pnok0\">https://lists.apache.org/thread/mrh4nr3jrlbj6nxkn4q8hddbfh1pnok0</a></li>\n<li><a href=\"https://github.com/apache/inlong/issues/7529\">https://github.com/apache/inlong/issues/7529</a></li>\n<li><a href=\"https://github.com/apache/inlong/pull/7530\">https://github.com/apache/inlong/pull/7530</a></li>\n<li><a href=\"https://inlong.apache.org/zh-CN/download/release-1.6.0/\">https://inlong.apache.org/zh-CN/download/release-1.6.0/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqr6-3x3f-9wr3\">https://github.com/advisories/GHSA-cqr6-3x3f-9wr3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqr6-3x3f-9wr3",
            "title": "[org.apache.inlong:manager-pojo] Apache InLong SQL Injection vulnerability",
            "date_modified": "2023-07-06T22:57:42.000Z",
            "date_published": "2023-07-06T19:24:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqr6-3x3f-9wr3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Apache Linkis &lt;=1.3.1, due to the Manager module engineConn material upload does not check the zip path,&nbsp;This is a Zip Slip issue, which will lead to a&nbsp;potential RCE vulnerability.</p>\n<p>We recommend users upgrade the version of Linkis to version 1.3.2.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27603\">https://nvd.nist.gov/vuln/detail/CVE-2023-27603</a></li>\n<li><a href=\"https://lists.apache.org/thread/6n1vlvnyn441rm02zdqc0wnpckj8ltn8\">https://lists.apache.org/thread/6n1vlvnyn441rm02zdqc0wnpckj8ltn8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pj5j-w7mw-w797\">https://github.com/advisories/GHSA-pj5j-w7mw-w797</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pj5j-w7mw-w797",
            "title": "[org.apache.linkis:linkis] Apache Linkis Zip Slip issue",
            "date_modified": "2023-07-06T22:04:39.000Z",
            "date_published": "2023-07-06T19:24:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pj5j-w7mw-w797"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Apache Linkis &lt;=1.3.1,&nbsp;due to the default token generated by Linkis Gateway deployment being too simple, it is easy for attackers to obtain the default token for the attack.&nbsp;Generation rules should add random values.</p>\n<p>We recommend users upgrade the version of Linkis to version 1.3.2 And modify the default token value. You can refer to Token authorization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27987\">https://nvd.nist.gov/vuln/detail/CVE-2023-27987</a></li>\n<li><a href=\"https://lists.apache.org/thread/3cr1cz3210wzwngldwrqzm43vwhghp0p\">https://lists.apache.org/thread/3cr1cz3210wzwngldwrqzm43vwhghp0p</a></li>\n<li><a href=\"https://linkis.apache.org/docs/latest/auth/token\">https://linkis.apache.org/docs/latest/auth/token</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4x5h-xmv4-99wx\">https://github.com/advisories/GHSA-4x5h-xmv4-99wx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4x5h-xmv4-99wx",
            "title": "[org.apache.linkis:linkis] Apache Linkis Authentication Bypass vulnerability",
            "date_modified": "2023-07-06T22:04:04.000Z",
            "date_published": "2023-07-06T19:24:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4x5h-xmv4-99wx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Versions of the package <code>net.sourceforge.htmlunit:htmlunit</code> from 0 and before 3.0.0 are vulnerable to Remote Code Execution (RCE) via XSTL, when browsing the attacker’s webpage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-26119\">https://nvd.nist.gov/vuln/detail/CVE-2023-26119</a></li>\n<li><a href=\"https://github.com/HtmlUnit/htmlunit/commit/641325bbc84702dc9800ec7037aec061ce21956b\">https://github.com/HtmlUnit/htmlunit/commit/641325bbc84702dc9800ec7037aec061ce21956b</a></li>\n<li><a href=\"https://security.snyk.io/vuln/SNYK-JAVA-NETSOURCEFORGEHTMLUNIT-3252500\">https://security.snyk.io/vuln/SNYK-JAVA-NETSOURCEFORGEHTMLUNIT-3252500</a></li>\n<li><a href=\"https://siebene.github.io/2022/12/30/HtmlUnit-RCE/\">https://siebene.github.io/2022/12/30/HtmlUnit-RCE/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3xrr-7m6p-p7xh\">https://github.com/advisories/GHSA-3xrr-7m6p-p7xh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3xrr-7m6p-p7xh",
            "title": "[net.sourceforge.htmlunit:htmlunit] HtmlUnit Code Injection vulnerability",
            "date_modified": "2023-07-06T22:00:23.000Z",
            "date_published": "2023-07-06T19:24:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3xrr-7m6p-p7xh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Apache Linkis &lt;=1.3.1, The PublicService module uploads&nbsp;files without restrictions on the path to the uploaded&nbsp;files, and file types.</p>\n<p>We recommend users upgrade the version of Linkis to version 1.3.2.&nbsp;</p>\n<p>For versions &lt;=1.3.1, we suggest turning on the file path check switch in linkis.properties</p>\n<p><code>wds.linkis.workspace.filesystem.owner.check=true</code>\n<code>wds.linkis.workspace.filesystem.path.check=true</code></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27602\">https://nvd.nist.gov/vuln/detail/CVE-2023-27602</a></li>\n<li><a href=\"https://lists.apache.org/thread/wt70jfc0yfs6s5g0wg5dr5klnc48nsp1\">https://lists.apache.org/thread/wt70jfc0yfs6s5g0wg5dr5klnc48nsp1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x84r-jrqm-3hj8\">https://github.com/advisories/GHSA-x84r-jrqm-3hj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x84r-jrqm-3hj8",
            "title": "[org.apache.linkis:linkis] Apache Linkis Unrestricted File Upload vulnerability",
            "date_modified": "2023-07-06T21:58:53.000Z",
            "date_published": "2023-07-06T19:24:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x84r-jrqm-3hj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins AbsInt a³ Plugin 1.1.0 and earlier does not configure its XML parser to prevent XML external entity (XXE) attacks.</p>\n<p>This allows attackers able to control <code>Project File (APX)</code> contents to have Jenkins parse a crafted XML document that uses external entities for extraction of secrets from the Jenkins controller or server-side request forgery.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28685\">https://nvd.nist.gov/vuln/detail/CVE-2023-28685</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2023-03-21/#SECURITY-2930\">https://www.jenkins.io/security/advisory/2023-03-21/#SECURITY-2930</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wf8m-qr47-xc9m\">https://github.com/advisories/GHSA-wf8m-qr47-xc9m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wf8m-qr47-xc9m",
            "title": "[org.jenkins-ci.plugins:absint-a3] Jenkins AbsInt a³ Plugin XML External Entity Reference vulnerability",
            "date_modified": "2023-07-06T21:55:58.000Z",
            "date_published": "2023-07-06T19:24:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wf8m-qr47-xc9m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The improper Input Validation vulnerability in <code>Move folder to Trash</code> feature of Apache Zeppelin allows an attacker to delete the arbitrary files. This issue affects Apache Zeppelin Apache Zeppelin version 0.9.0 and prior versions.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-28655\">https://nvd.nist.gov/vuln/detail/CVE-2021-28655</a></li>\n<li><a href=\"https://lists.apache.org/thread/bxs056g3xlsofz0jb3wny9dw4llwptd2\">https://lists.apache.org/thread/bxs056g3xlsofz0jb3wny9dw4llwptd2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-gm67-h5wr-w3cv\">https://github.com/advisories/GHSA-gm67-h5wr-w3cv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-gm67-h5wr-w3cv",
            "title": "[org.apache.zeppelin:zeppelin] Apache Zeppelin Improper Input Validation vulnerability",
            "date_modified": "2023-07-06T21:44:44.000Z",
            "date_published": "2023-07-06T19:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-gm67-h5wr-w3cv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Kylin's cube designer function has a command injection vulnerability when overwriting system parameters in the configuration overwrites menu. RCE can be implemented by closing the single quotation marks around the parameter value of “-- conf=” to inject any operating system command into the command line parameters. This vulnerability affects Kylin 2 version 2.6.5 and earlier, Kylin 3 version 3.1.2 and earlier, and Kylin 4 version 4.0.1 and earlier.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24697\">https://nvd.nist.gov/vuln/detail/CVE-2022-24697</a></li>\n<li><a href=\"https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4\">https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4</a></li>\n<li><a href=\"https://github.com/apache/kylin/pull/1811\">https://github.com/apache/kylin/pull/1811</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ppxx-m926-g569\">https://github.com/advisories/GHSA-ppxx-m926-g569</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ppxx-m926-g569",
            "title": "[org.apache.kylin:kylin-server-base] Apache Kylin vulnerable to remote code execution",
            "date_modified": "2023-07-06T21:23:10.000Z",
            "date_published": "2023-07-06T19:24:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ppxx-m926-g569"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Kylin's cube designer function has a command injection vulnerability when overwriting system parameters in the configuration overwrites menu. RCE can be implemented by closing the single quotation marks around the parameter value of “-- conf=” to inject any operating system command into the command line parameters. This vulnerability affects Kylin 2 version 2.6.5 and earlier, Kylin 3 version 3.1.2 and earlier, and Kylin 4 version 4.0.1 and earlier.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24697\">https://nvd.nist.gov/vuln/detail/CVE-2022-24697</a></li>\n<li><a href=\"https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4\">https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4</a></li>\n<li><a href=\"https://github.com/apache/kylin/pull/1811\">https://github.com/apache/kylin/pull/1811</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ppxx-m926-g569\">https://github.com/advisories/GHSA-ppxx-m926-g569</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ppxx-m926-g569",
            "title": "[org.apache.kylin:kylin-spark-project] Apache Kylin vulnerable to remote code execution",
            "date_modified": "2023-07-06T21:23:10.000Z",
            "date_published": "2023-07-06T19:24:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ppxx-m926-g569"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Kylin's cube designer function has a command injection vulnerability when overwriting system parameters in the configuration overwrites menu. RCE can be implemented by closing the single quotation marks around the parameter value of “-- conf=” to inject any operating system command into the command line parameters. This vulnerability affects Kylin 2 version 2.6.5 and earlier, Kylin 3 version 3.1.2 and earlier, and Kylin 4 version 4.0.1 and earlier.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24697\">https://nvd.nist.gov/vuln/detail/CVE-2022-24697</a></li>\n<li><a href=\"https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4\">https://lists.apache.org/thread/07mnn9c7o314wrhrwjr10w9j5s82voj4</a></li>\n<li><a href=\"https://github.com/apache/kylin/pull/1811\">https://github.com/apache/kylin/pull/1811</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ppxx-m926-g569\">https://github.com/advisories/GHSA-ppxx-m926-g569</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ppxx-m926-g569",
            "title": "[org.apache.kylin:kylin-core-common] Apache Kylin vulnerable to remote code execution",
            "date_modified": "2023-07-06T21:23:10.000Z",
            "date_published": "2023-07-06T19:24:01.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ppxx-m926-g569"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A partial path traversal vulnerability exists in Graylog's <a href=\"https://go2docs.graylog.org/5-1/making_sense_of_your_log_data/cluster_support_bundle.htm\">Support Bundle</a> feature. The vulnerability is caused by incorrect user input validation in an HTTP API resource.</p>\n<p>Thanks to weiweiwei9811 for reporting this vulnerability and providing detailed information.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>Graylog's Support Bundle feature allows an attacker with valid Admin role credentials to download or delete files in sibling directories of the support bundle directory.</p>\n<p>The default <code>data_dir</code> in operating system packages (DEB, RPM) is set to <code>/var/lib/graylog-server</code>. The data directory for the Support Bundle feature is always <code>&lt;data_dir&gt;/support-bundle</code>.</p>\n<p>Due to the partial path traversal vulnerability, an attacker with valid Admin role credentials can read or delete files in directories that start with a <code>/var/lib/graylog-server/support-bundle</code> directory name.</p>\n<p>The vulnerability would allow the download or deletion of files in the following example directories.</p>\n<ul>\n<li><code>/var/lib/graylog-server/support-bundle-test</code></li>\n<li><code>/var/lib/graylog-server/support-bundlesdirectory</code></li>\n</ul>\n<p>For the <a href=\"https://hub.docker.com/r/graylog/graylog\">Graylog</a> and <a href=\"https://hub.docker.com/r/graylog/graylog-enterprise\">Graylog Enterprise</a> Docker images, the <code>data_dir</code> is set to <code>/usr/share/graylog/data</code> by default.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability is fixed in Graylog version 5.1.3 and later.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Block all HTTP requests to the following HTTP API endpoints by using a reverse proxy server in front of Graylog.</p>\n<ul>\n<li><code>GET /api/system/debug/support/bundle/download/{filename}</code></li>\n<li><code>DELETE /api/system/debug/support/bundle/{filename}</code></li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-2q4p-f6gf-mqr5\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-2q4p-f6gf-mqr5</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/02b8792e6f4b829f0c1d87fcbf2d58b73458b938\">https://github.com/Graylog2/graylog2-server/commit/02b8792e6f4b829f0c1d87fcbf2d58b73458b938</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2q4p-f6gf-mqr5\">https://github.com/advisories/GHSA-2q4p-f6gf-mqr5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2q4p-f6gf-mqr5",
            "title": "[org.graylog2:graylog2-server] Graylog server has partial path traversal vulnerability in Support Bundle feature",
            "date_modified": "2023-07-06T20:54:10.000Z",
            "date_published": "2023-07-06T20:53:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2q4p-f6gf-mqr5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Graylog utilises only one single source port for DNS queries.</p>\n<h3 id=\"details\">Details</h3>\n<p>Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again. This goes against recommended practice since 2008, when Dan Kaminsky discovered how easy is to carry out DNS cache poisoning attacks. In order to prevent cache poisoning with spoofed DNS responses, it is necessary to maximise the uncertainty in the choice of a source port for a DNS query.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The attached figure shows the source ports distribution difference between Graylog configured to use a data adapter based on DNS queries and ISC Bind.  The source port distribution of the DNS queries sent from Graylog to a recursive DNS name server running Bind (CLIENT_QUERY) are depicted in purple, while the queries sent from the recursive DNS server to the authoritatives (RESOLVER_QUERY) are plotted in green color. As it can be observed, in contrast to ISC Bind which presents a heterogeneous usage of source port, Graylog utilises a single source port.</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/67056857/242301750-6a5a8d0d-fcd2-40d1-bbd4-73baa8279ed3.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Although unlikely in many setups, an external attacker could inject forged DNS responses into a Graylog's lookup table cache. In order to prevent this, it is at least recommendable to distribute the DNS queries through a pool of distinct sockets, each of them with a random source port and renew them periodically.</p>\n<p>(Credit to Iratxe Niño from Fundación Sarenet and Borja Marcos from Sarenet)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e\">https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327\">https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/advisories/GHSA-g96c-x7rh-99r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3",
            "title": "[org.graylog2:graylog2-server] Graylog vulnerable to insecure source port usage for DNS queries",
            "date_modified": "2023-07-06T20:51:48.000Z",
            "date_published": "2023-07-06T20:51:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Graylog utilises only one single source port for DNS queries.</p>\n<h3 id=\"details\">Details</h3>\n<p>Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again. This goes against recommended practice since 2008, when Dan Kaminsky discovered how easy is to carry out DNS cache poisoning attacks. In order to prevent cache poisoning with spoofed DNS responses, it is necessary to maximise the uncertainty in the choice of a source port for a DNS query.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>The attached figure shows the source ports distribution difference between Graylog configured to use a data adapter based on DNS queries and ISC Bind.  The source port distribution of the DNS queries sent from Graylog to a recursive DNS name server running Bind (CLIENT_QUERY) are depicted in purple, while the queries sent from the recursive DNS server to the authoritatives (RESOLVER_QUERY) are plotted in green color. As it can be observed, in contrast to ISC Bind which presents a heterogeneous usage of source port, Graylog utilises a single source port.</p>\n<p><img alt=\"image\" src=\"https://user-images.githubusercontent.com/67056857/242301750-6a5a8d0d-fcd2-40d1-bbd4-73baa8279ed3.png\"></p>\n<h3 id=\"impact\">Impact</h3>\n<p>Although unlikely in many setups, an external attacker could inject forged DNS responses into a Graylog's lookup table cache. In order to prevent this, it is at least recommendable to distribute the DNS queries through a pool of distinct sockets, each of them with a random source port and renew them periodically.</p>\n<p>(Credit to Iratxe Niño from Fundación Sarenet and Borja Marcos from Sarenet)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-g96c-x7rh-99r3</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e\">https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327\">https://github.com/Graylog2/graylog2-server/commit/a101f4f12180fd3dfa7d3345188a099877a3c327</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g96c-x7rh-99r3\">https://github.com/advisories/GHSA-g96c-x7rh-99r3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3",
            "title": "[org.graylog2:graylog2-server] Graylog vulnerable to insecure source port usage for DNS queries",
            "date_modified": "2023-07-06T20:51:48.000Z",
            "date_published": "2023-07-06T20:51:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g96c-x7rh-99r3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In a multi-node Graylog cluster, after a user has explicitly logged out, a user session may still be used for API requests until it has reached its original expiry time.</p>\n<h3 id=\"details\">Details</h3>\n<p>Each node maintains an in-memory cache of user sessions. Upon a cache-miss, the session is loaded from the database. After that, the node operates solely on the cached session. Modifications to sessions will update the cached version as well as the session persisted in the database. However, each node maintains their isolated version of the session.</p>\n<p>When the user logs out, the session is removed from the node-local cache and deleted from the database. The other nodes will however still use the cached session.</p>\n<p>These nodes will only fail to accept the session id if they intent to update the session in the database. They will then notice that the session is gone. This is true for most API requests originating from user interaction with the Graylog UI because these will lead to an update of the session's \"last access\" timestamp.</p>\n<p>If the session update is however prevented by setting the <code>X-Graylog-No-Session-Extension:true</code> header in the request, the node will consider the (cached) session valid until the session is expired according to its timeout setting.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>In a 2-node setup, with both nodes behind a load balancer:</p>\n<ol>\n<li>Log in</li>\n<li>Extract the session ID from the cookie</li>\n<li>Log out and close the browser</li>\n<li>Perform the following API request repeatedly with curl (with <code>&lt;session-id&gt;</code> replaced with the session id from step 2 and <code>&lt;lb-host&gt;</code> replaced with the hostname of your load balancer):<pre><code>curl -I -H X-Graylog-No-Session-Extension:true https://&lt;session-id&gt;:session@&lt;lb-host&gt;/api/system/cluster/nodes\n</code></pre>\n</li>\n<li>Notice that the request is sometimes rejected, but sometimes succeeds</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>No session identifiers are leaked.</p>\n<p>After a user has logged out, the UI shows the login screen again, which gives the user the impression that their session is not valid anymore. However, if the session becomes compromised later, it can still be used to perform API requests against the Graylog cluster. The time frame for this is limited to the configured session lifetime, starting from the time when the user logged out.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-3fqm-frhg-7c85\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-3fqm-frhg-7c85</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3\">https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20\">https://github.com/Graylog2/graylog2-server/commit/ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3fqm-frhg-7c85\">https://github.com/advisories/GHSA-3fqm-frhg-7c85</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3fqm-frhg-7c85",
            "title": "[org.graylog2:graylog2-server] Graylog user session is still usable after logout",
            "date_modified": "2023-07-06T20:47:56.000Z",
            "date_published": "2023-07-06T20:47:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3fqm-frhg-7c85"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>In a multi-node Graylog cluster, after a user has explicitly logged out, a user session may still be used for API requests until it has reached its original expiry time.</p>\n<h3 id=\"details\">Details</h3>\n<p>Each node maintains an in-memory cache of user sessions. Upon a cache-miss, the session is loaded from the database. After that, the node operates solely on the cached session. Modifications to sessions will update the cached version as well as the session persisted in the database. However, each node maintains their isolated version of the session.</p>\n<p>When the user logs out, the session is removed from the node-local cache and deleted from the database. The other nodes will however still use the cached session.</p>\n<p>These nodes will only fail to accept the session id if they intent to update the session in the database. They will then notice that the session is gone. This is true for most API requests originating from user interaction with the Graylog UI because these will lead to an update of the session's \"last access\" timestamp.</p>\n<p>If the session update is however prevented by setting the <code>X-Graylog-No-Session-Extension:true</code> header in the request, the node will consider the (cached) session valid until the session is expired according to its timeout setting.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>In a 2-node setup, with both nodes behind a load balancer:</p>\n<ol>\n<li>Log in</li>\n<li>Extract the session ID from the cookie</li>\n<li>Log out and close the browser</li>\n<li>Perform the following API request repeatedly with curl (with <code>&lt;session-id&gt;</code> replaced with the session id from step 2 and <code>&lt;lb-host&gt;</code> replaced with the hostname of your load balancer):<pre><code>curl -I -H X-Graylog-No-Session-Extension:true https://&lt;session-id&gt;:session@&lt;lb-host&gt;/api/system/cluster/nodes\n</code></pre>\n</li>\n<li>Notice that the request is sometimes rejected, but sometimes succeeds</li>\n</ol>\n<h3 id=\"impact\">Impact</h3>\n<p>No session identifiers are leaked.</p>\n<p>After a user has logged out, the UI shows the login screen again, which gives the user the impression that their session is not valid anymore. However, if the session becomes compromised later, it can still be used to perform API requests against the Graylog cluster. The time frame for this is limited to the configured session lifetime, starting from the time when the user logged out.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-3fqm-frhg-7c85\">https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-3fqm-frhg-7c85</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3\">https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3</a></li>\n<li><a href=\"https://github.com/Graylog2/graylog2-server/commit/ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20\">https://github.com/Graylog2/graylog2-server/commit/ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3fqm-frhg-7c85\">https://github.com/advisories/GHSA-3fqm-frhg-7c85</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3fqm-frhg-7c85",
            "title": "[org.graylog2:graylog2-server] Graylog user session is still usable after logout",
            "date_modified": "2023-07-06T20:47:56.000Z",
            "date_published": "2023-07-06T20:47:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3fqm-frhg-7c85"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Use of TikaEncodingDetector in Apache Any23 can cause excessive memory usage.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-34150\">https://nvd.nist.gov/vuln/detail/CVE-2023-34150</a></li>\n<li><a href=\"https://lists.apache.org/thread/713tk23khbtbg940pb2ql8ggd4cvh6j1\">https://lists.apache.org/thread/713tk23khbtbg940pb2ql8ggd4cvh6j1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2gpr-j5vj-wvh2\">https://github.com/advisories/GHSA-2gpr-j5vj-wvh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2gpr-j5vj-wvh2",
            "title": "[org.apache.any23:apache-any23] Apache Any23 vulnerable to excessive memory usage",
            "date_modified": "2023-07-06T20:37:33.000Z",
            "date_published": "2023-07-05T09:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2gpr-j5vj-wvh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Bouncy Castle provides the X509LDAPCertStoreSpi.java class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.</p>\n<p>A potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: CN=Subject*)(objectclass=. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.</p>\n<p>Changes to the X509LDAPCertStoreSpi.java class add the additional checking of any X.500 name used to correctly escape wild card characters.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-33201\">https://nvd.nist.gov/vuln/detail/CVE-2023-33201</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc\">https://github.com/bcgit/bc-java/commit/e8c409a8389c815ea3fda5e8b94c92fdfe583bcc</a></li>\n<li><a href=\"https://github.com/bcgit/bc-java/wiki/CVE-2023-33201\">https://github.com/bcgit/bc-java/wiki/CVE-2023-33201</a></li>\n<li><a href=\"https://bouncycastle.org/releasenotes.html#r1rv74\">https://bouncycastle.org/releasenotes.html#r1rv74</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hr8g-6v94-x4m9\">https://github.com/advisories/GHSA-hr8g-6v94-x4m9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9",
            "title": "[org.bouncycastle:bcprov-debug-jdk18on] Bouncy Castle For Java LDAP injection vulnerability",
            "date_modified": "2023-07-06T15:40:29.000Z",
            "date_published": "2023-07-05T03:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hr8g-6v94-x4m9"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}