{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>An issue was discovered in Cloud Foundry Foundation cf-release versions prior to v260; UAA release 2.x versions prior to v2.7.4.16, 3.6.x versions prior to v3.6.10, 3.9.x versions prior to v3.9.12, and other versions prior to v3.17.0; and UAA bosh release (uaa-release) 13.x versions prior to v13.14, 24.x versions prior to v24.9, 30.x versions prior to 30.2, and other versions prior to v36. Privileged users in one zone are allowed to perform a password reset for users in a different zone.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-4991\">https://nvd.nist.gov/vuln/detail/CVE-2017-4991</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18\">https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553\">https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3\">https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8\">https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8</a></li>\n<li><a href=\"https://www.cloudfoundry.org/cve-2017-4991\">https://www.cloudfoundry.org/cve-2017-4991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgrg-x34r-78f3\">https://github.com/advisories/GHSA-cgrg-x34r-78f3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3",
            "title": "[org.cloudfoundry.identity:cloudfoundry-identity-server] Cloud Foundry UAA password reset vulnerability",
            "date_modified": "2024-03-11T05:00:33.000Z",
            "date_published": "2022-05-13T01:07:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Cloud Foundry Foundation cf-release versions prior to v260; UAA release 2.x versions prior to v2.7.4.16, 3.6.x versions prior to v3.6.10, 3.9.x versions prior to v3.9.12, and other versions prior to v3.17.0; and UAA bosh release (uaa-release) 13.x versions prior to v13.14, 24.x versions prior to v24.9, 30.x versions prior to 30.2, and other versions prior to v36. Privileged users in one zone are allowed to perform a password reset for users in a different zone.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-4991\">https://nvd.nist.gov/vuln/detail/CVE-2017-4991</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18\">https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553\">https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3\">https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8\">https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8</a></li>\n<li><a href=\"https://www.cloudfoundry.org/cve-2017-4991\">https://www.cloudfoundry.org/cve-2017-4991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgrg-x34r-78f3\">https://github.com/advisories/GHSA-cgrg-x34r-78f3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3",
            "title": "[org.cloudfoundry.identity:cloudfoundry-identity-server] Cloud Foundry UAA password reset vulnerability",
            "date_modified": "2024-03-11T05:00:33.000Z",
            "date_published": "2022-05-13T01:07:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Cloud Foundry Foundation cf-release versions prior to v260; UAA release 2.x versions prior to v2.7.4.16, 3.6.x versions prior to v3.6.10, 3.9.x versions prior to v3.9.12, and other versions prior to v3.17.0; and UAA bosh release (uaa-release) 13.x versions prior to v13.14, 24.x versions prior to v24.9, 30.x versions prior to 30.2, and other versions prior to v36. Privileged users in one zone are allowed to perform a password reset for users in a different zone.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-4991\">https://nvd.nist.gov/vuln/detail/CVE-2017-4991</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18\">https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553\">https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3\">https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8\">https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8</a></li>\n<li><a href=\"https://www.cloudfoundry.org/cve-2017-4991\">https://www.cloudfoundry.org/cve-2017-4991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgrg-x34r-78f3\">https://github.com/advisories/GHSA-cgrg-x34r-78f3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3",
            "title": "[org.cloudfoundry.identity:cloudfoundry-identity-server] Cloud Foundry UAA password reset vulnerability",
            "date_modified": "2024-03-11T05:00:33.000Z",
            "date_published": "2022-05-13T01:07:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in Cloud Foundry Foundation cf-release versions prior to v260; UAA release 2.x versions prior to v2.7.4.16, 3.6.x versions prior to v3.6.10, 3.9.x versions prior to v3.9.12, and other versions prior to v3.17.0; and UAA bosh release (uaa-release) 13.x versions prior to v13.14, 24.x versions prior to v24.9, 30.x versions prior to 30.2, and other versions prior to v36. Privileged users in one zone are allowed to perform a password reset for users in a different zone.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-4991\">https://nvd.nist.gov/vuln/detail/CVE-2017-4991</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18\">https://github.com/cloudfoundry/uaa/commit/2ca35f1723e039aa7d2318134b05d02e40072a18</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553\">https://github.com/cloudfoundry/uaa/commit/ba23bcf109704ab2eae519b705d7b2a75e023553</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3\">https://github.com/cloudfoundry/uaa/commit/bbf6751bc0d87c4a3aaf21b54e26ce328ab998b3</a></li>\n<li><a href=\"https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8\">https://github.com/cloudfoundry/uaa/commit/eb3f86054489039e11eabd54a8ec9a46c22abfc8</a></li>\n<li><a href=\"https://www.cloudfoundry.org/cve-2017-4991\">https://www.cloudfoundry.org/cve-2017-4991</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgrg-x34r-78f3\">https://github.com/advisories/GHSA-cgrg-x34r-78f3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3",
            "title": "[org.cloudfoundry.identity:cloudfoundry-identity-server] Cloud Foundry UAA password reset vulnerability",
            "date_modified": "2024-03-11T05:00:33.000Z",
            "date_published": "2022-05-13T01:07:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgrg-x34r-78f3"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Any program on the JVM may read serialized objects via <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/ObjectInputStream.html#readObject--\">java.io.ObjectInputStream.readObject()</a>. Reading serialized objects from an untrusted source is <strong>inherently unsafe</strong> (this affects any program running on any version of the JVM) and is a prerequisite for this vulnerability.</p>\n<p>Clojure classes that represent infinite seqs (Cycle, infinite Repeat, and Iterate) do not define hashCode() and use the parent ASeq.hashCode(), which walks the seq to compute the hash, yielding an infinite loop. Classes like java.util.HashMap call hashCode() on keys during deserialization of a serialized map. </p>\n<p>The exploit requires:</p>\n<ol>\n<li>Crafting a serialized HashMap object with an infinite seq object as a key.</li>\n<li>Sending that to a program that reads serialized objects via ObjectInputStream.readObject().</li>\n</ol>\n<p>This will cause the program to enter an infinite loop on the reading thread and thus a denial of service (DoS).</p>\n<p>The affected Clojure classes (Cycle, Repeat, Iterate) exist in Clojure 1.7.0-1.11.1, 1.12.0-alpha1-1.12.0-alpha8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22871\">https://nvd.nist.gov/vuln/detail/CVE-2024-22871</a></li>\n<li><a href=\"https://hackmd.io/%40fe1w0/rymmJGida\">https://hackmd.io/%40fe1w0/rymmJGida</a></li>\n<li><a href=\"https://clojure.atlassian.net/browse/CLJ-2839\">https://clojure.atlassian.net/browse/CLJ-2839</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vr64-r9qj-h27f\">https://github.com/advisories/GHSA-vr64-r9qj-h27f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vr64-r9qj-h27f",
            "title": "[org.clojure:clojure] Reading specially crafted serializable objects from an untrusted source may cause an infinite loop and denial of service",
            "date_modified": "2024-03-08T20:56:22.000Z",
            "date_published": "2024-02-29T03:33:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vr64-r9qj-h27f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Any program on the JVM may read serialized objects via <a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/ObjectInputStream.html#readObject--\">java.io.ObjectInputStream.readObject()</a>. Reading serialized objects from an untrusted source is <strong>inherently unsafe</strong> (this affects any program running on any version of the JVM) and is a prerequisite for this vulnerability.</p>\n<p>Clojure classes that represent infinite seqs (Cycle, infinite Repeat, and Iterate) do not define hashCode() and use the parent ASeq.hashCode(), which walks the seq to compute the hash, yielding an infinite loop. Classes like java.util.HashMap call hashCode() on keys during deserialization of a serialized map. </p>\n<p>The exploit requires:</p>\n<ol>\n<li>Crafting a serialized HashMap object with an infinite seq object as a key.</li>\n<li>Sending that to a program that reads serialized objects via ObjectInputStream.readObject().</li>\n</ol>\n<p>This will cause the program to enter an infinite loop on the reading thread and thus a denial of service (DoS).</p>\n<p>The affected Clojure classes (Cycle, Repeat, Iterate) exist in Clojure 1.7.0-1.11.1, 1.12.0-alpha1-1.12.0-alpha8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22871\">https://nvd.nist.gov/vuln/detail/CVE-2024-22871</a></li>\n<li><a href=\"https://hackmd.io/%40fe1w0/rymmJGida\">https://hackmd.io/%40fe1w0/rymmJGida</a></li>\n<li><a href=\"https://clojure.atlassian.net/browse/CLJ-2839\">https://clojure.atlassian.net/browse/CLJ-2839</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vr64-r9qj-h27f\">https://github.com/advisories/GHSA-vr64-r9qj-h27f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vr64-r9qj-h27f",
            "title": "[org.clojure:clojure] Reading specially crafted serializable objects from an untrusted source may cause an infinite loop and denial of service",
            "date_modified": "2024-03-08T20:56:22.000Z",
            "date_published": "2024-02-29T03:33:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vr64-r9qj-h27f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Exposure of sensitive data by by crafting a malicious EventFactory and providing a custom ExchangeCreatedEvent that exposes sensitive data. Vulnerability in Apache Camel. This issue affects Apache Camel: from 3.0.0 through 3.21.3, from 3.22.X through 3.22.0, from 4.0.X through 4.0.3, from 4.X through 4.3.0.</p>\n<p>Users are recommended to upgrade to version 3.21.4, 3.22.1, 4.0.4 or 4.4.0, which fixes the issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-22371\">https://nvd.nist.gov/vuln/detail/CVE-2024-22371</a></li>\n<li><a href=\"https://camel.apache.org/security/CVE-2024-22371.html\">https://camel.apache.org/security/CVE-2024-22371.html</a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/CAMEL-20305\">https://issues.apache.org/jira/browse/CAMEL-20305</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpxm-689r-3849\">https://github.com/advisories/GHSA-qpxm-689r-3849</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpxm-689r-3849",
            "title": "[org.apache.camel:camel-core] Apache Camel data exposure vulnerability",
            "date_modified": "2024-03-08T20:54:22.000Z",
            "date_published": "2024-02-26T18:30:30.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpxm-689r-3849"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1272\">https://nvd.nist.gov/vuln/detail/CVE-2018-1272</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:1320\">https://access.redhat.com/errata/RHSA-2018:1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2669\">https://access.redhat.com/errata/RHSA-2018:2669</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4487-x383-qpph\">https://github.com/advisories/GHSA-4487-x383-qpph</a></li>\n<li><a href=\"https://pivotal.io/security/cve-2018-1272\">https://pivotal.io/security/cve-2018-1272</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html\">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103697\">http://www.securityfocus.com/bid/103697</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/ab2410c754b67902f002bfcc0c3895bd7772d39\">https://github.com/spring-projects/spring-framework/commit/ab2410c754b67902f002bfcc0c3895bd7772d39</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea767\">https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea767</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4487-x383-qpph",
            "title": "[org.springframework:spring-core] Possible privilege escalation in org.springframework:spring-core",
            "date_modified": "2024-03-08T20:42:25.000Z",
            "date_published": "2018-10-17T20:27:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4487-x383-qpph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1272\">https://nvd.nist.gov/vuln/detail/CVE-2018-1272</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:1320\">https://access.redhat.com/errata/RHSA-2018:1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2669\">https://access.redhat.com/errata/RHSA-2018:2669</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4487-x383-qpph\">https://github.com/advisories/GHSA-4487-x383-qpph</a></li>\n<li><a href=\"https://pivotal.io/security/cve-2018-1272\">https://pivotal.io/security/cve-2018-1272</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html\">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103697\">http://www.securityfocus.com/bid/103697</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/ab2410c754b67902f002bfcc0c3895bd7772d39\">https://github.com/spring-projects/spring-framework/commit/ab2410c754b67902f002bfcc0c3895bd7772d39</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea767\">https://github.com/spring-projects/spring-framework/commit/e02ff3a0da50744b0980d5d665fd242eedea767</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4487-x383-qpph",
            "title": "[org.springframework:spring-core] Possible privilege escalation in org.springframework:spring-core",
            "date_modified": "2024-03-08T20:42:25.000Z",
            "date_published": "2018-10-17T20:27:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4487-x383-qpph"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A bypass in the component sofa-hessian of Solon before v2.3.3 allows attackers to execute arbitrary code via providing crafted payload.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-35839\">https://nvd.nist.gov/vuln/detail/CVE-2023-35839</a></li>\n<li><a href=\"https://github.com/noear/solon/issues/145\">https://github.com/noear/solon/issues/145</a></li>\n<li><a href=\"https://github.com/noear/solon/compare/v2.3.2...v2.3.3\">https://github.com/noear/solon/compare/v2.3.2...v2.3.3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7q8c-49f4-4c8q\">https://github.com/advisories/GHSA-7q8c-49f4-4c8q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7q8c-49f4-4c8q",
            "title": "[org.noear:solon] Solon vulnerable to deserialization of untrusted data",
            "date_modified": "2024-03-07T21:43:10.000Z",
            "date_published": "2023-06-19T03:30:18.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7q8c-49f4-4c8q"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1271\">https://nvd.nist.gov/vuln/detail/CVE-2018-1271</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:1320\">https://access.redhat.com/errata/RHSA-2018:1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2669\">https://access.redhat.com/errata/RHSA-2018:2669</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2939\">https://access.redhat.com/errata/RHSA-2018:2939</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g8hw-794c-4j9g\">https://github.com/advisories/GHSA-g8hw-794c-4j9g</a></li>\n<li><a href=\"https://pivotal.io/security/cve-2018-1271\">https://pivotal.io/security/cve-2018-1271</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html\">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103699\">http://www.securityfocus.com/bid/103699</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/0e28bee0f155b9bf240b4bafc4646e4810cb23f8\">https://github.com/spring-projects/spring-framework/commit/0e28bee0f155b9bf240b4bafc4646e4810cb23f8</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/13356a7ee2240f740737c5c83bdccdacc30603ab\">https://github.com/spring-projects/spring-framework/commit/13356a7ee2240f740737c5c83bdccdacc30603ab</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/695bf2961feffd35b5560ccc982a2189dcca611f\">https://github.com/spring-projects/spring-framework/commit/695bf2961feffd35b5560ccc982a2189dcca611f</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/91b803a2310344d925e5d4b1709bbcea90375548\">https://github.com/spring-projects/spring-framework/commit/91b803a2310344d925e5d4b1709bbcea90375548</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/98ad23bef8e2e04143f8f5b201380543a8d8c0c3\">https://github.com/spring-projects/spring-framework/commit/98ad23bef8e2e04143f8f5b201380543a8d8c0c3</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/b9ebdaaf3710db473a2e1fec8641c316483a22aa\">https://github.com/spring-projects/spring-framework/commit/b9ebdaaf3710db473a2e1fec8641c316483a22aa</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/f046a066eceefa0799d1bc89bd6e1318f39bdf69\">https://github.com/spring-projects/spring-framework/commit/f046a066eceefa0799d1bc89bd6e1318f39bdf69</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa\">https://github.com/spring-projects/spring-framework/commit/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g8hw-794c-4j9g",
            "title": "[org.springframework:spring-core] Path Traversal in org.springframework:spring-core",
            "date_modified": "2024-03-07T21:32:23.000Z",
            "date_published": "2018-10-17T20:07:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g8hw-794c-4j9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1271\">https://nvd.nist.gov/vuln/detail/CVE-2018-1271</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:1320\">https://access.redhat.com/errata/RHSA-2018:1320</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2669\">https://access.redhat.com/errata/RHSA-2018:2669</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:2939\">https://access.redhat.com/errata/RHSA-2018:2939</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g8hw-794c-4j9g\">https://github.com/advisories/GHSA-g8hw-794c-4j9g</a></li>\n<li><a href=\"https://pivotal.io/security/cve-2018-1271\">https://pivotal.io/security/cve-2018-1271</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpujul2020.html\">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html\">https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html</a></li>\n<li><a href=\"https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html\">https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html\">http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html\">http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/103699\">http://www.securityfocus.com/bid/103699</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2021.html\">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/0e28bee0f155b9bf240b4bafc4646e4810cb23f8\">https://github.com/spring-projects/spring-framework/commit/0e28bee0f155b9bf240b4bafc4646e4810cb23f8</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/13356a7ee2240f740737c5c83bdccdacc30603ab\">https://github.com/spring-projects/spring-framework/commit/13356a7ee2240f740737c5c83bdccdacc30603ab</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/695bf2961feffd35b5560ccc982a2189dcca611f\">https://github.com/spring-projects/spring-framework/commit/695bf2961feffd35b5560ccc982a2189dcca611f</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/91b803a2310344d925e5d4b1709bbcea90375548\">https://github.com/spring-projects/spring-framework/commit/91b803a2310344d925e5d4b1709bbcea90375548</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/98ad23bef8e2e04143f8f5b201380543a8d8c0c3\">https://github.com/spring-projects/spring-framework/commit/98ad23bef8e2e04143f8f5b201380543a8d8c0c3</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/b9ebdaaf3710db473a2e1fec8641c316483a22aa\">https://github.com/spring-projects/spring-framework/commit/b9ebdaaf3710db473a2e1fec8641c316483a22aa</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/f046a066eceefa0799d1bc89bd6e1318f39bdf69\">https://github.com/spring-projects/spring-framework/commit/f046a066eceefa0799d1bc89bd6e1318f39bdf69</a></li>\n<li><a href=\"https://github.com/spring-projects/spring-framework/commit/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa\">https://github.com/spring-projects/spring-framework/commit/f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g8hw-794c-4j9g",
            "title": "[org.springframework:spring-core] Path Traversal in org.springframework:spring-core",
            "date_modified": "2024-03-07T21:32:23.000Z",
            "date_published": "2018-10-17T20:07:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g8hw-794c-4j9g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>nGrinder before 3.5.9 allows to accept serialized Java objects from unauthenticated users, which could allow remote attacker to execute arbitrary code via unsafe Java objects deserialization.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28213\">https://nvd.nist.gov/vuln/detail/CVE-2024-28213</a></li>\n<li><a href=\"https://cve.naver.com/detail/cve-2024-28213.html\">https://cve.naver.com/detail/cve-2024-28213.html</a></li>\n<li><a href=\"https://github.com/naver/ngrinder/commit/85efa4a075354e077a700262ef78e2e9119881bf\">https://github.com/naver/ngrinder/commit/85efa4a075354e077a700262ef78e2e9119881bf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j7jm-8gf5-frcm\">https://github.com/advisories/GHSA-j7jm-8gf5-frcm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j7jm-8gf5-frcm",
            "title": "[org.ngrinder:ngrinder-core] nGrinder vulnerable to unsafe Java objects deserialization",
            "date_modified": "2024-03-07T17:25:52.000Z",
            "date_published": "2024-03-07T06:30:31.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j7jm-8gf5-frcm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The WMS specification defines an <code>sld=&lt;url&gt;</code> parameter for GetMap, GetLegendGraphic and GetFeatureInfo operations for user supplied \"dynamic styling\".  Enabling the use of dynamic styles, without also configuring URL checks, provides the opportunity for Service Side Request Forgery.</p>\n<p>It is possible to use this for \"Blind SSRF\" on the WMS endpoint to steal NetNTLMv2 hashes via file requests to malicious servers.</p>\n<h3 id=\"details\">Details</h3>\n<p>This vulnerability requires:</p>\n<ul>\n<li>WMS Settings dynamic styling being enabled</li>\n<li>Security URL checks to be disabled, or to be enabled and allowing <code>file:\\\\*</code> access</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can be used to steal user NetNTLMv2 hashes which could be relayed or cracked externally to gain further access.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The ability to reference an external URL location is defined by the WMS standard GetMap, GetFeatureInfo and GetLegendGraphic operations. These operations are defined by an Industry and International standard and cannot be redefined by the GeoServer application in isolation.</p>\n<p>To disable dynamic styling on GeoServer 2.10.3 and GeoServer 2.11.1:</p>\n<ol>\n<li>Navigate to <strong>Services &gt; WMS Settings</strong> page</li>\n<li>Locate <strong>Dynamic styling</strong> heading</li>\n<li>Select the <strong>Disable usage of SLD and SLD_BODY parameters in GET requests and user styles in POST</strong> checkbox.</li>\n</ol>\n<h3 id=\"resolution\">Resolution</h3>\n<p>To allow dynamic styling safely on GeoServer 2.22.5 and GeoServer 2.23.2:</p>\n<ol>\n<li>Navigate to <strong>Security &gt; URL Checks</strong></li>\n<li>Enable <strong>URL Checks are enabled</strong> setting</li>\n<li>Check the user manual for <a href=\"https://docs.geoserver.org/latest/en/user/security/urlchecks.html#example-regex-patterns\">examples</a> of how to trust specific locations:\n<code>^https://styles\\.server\\.net/cartography/.*$</code></li>\n<li>Enable dynamic styling on the <strong>Services &gt; WMS Settings</strong> page, deselect the <strong>Disable usage of SLD and SLD_BODY parameters in GET requests and user styles in POST</strong> checkbox.</li>\n</ol>\n<p>Use of dynamic styling safely is on by default in GeoServer 2.24.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://docs.geoserver.org/latest/en/user/services/wms/webadmin.html#disabling-usage-of-dynamic-styling-in-getmap-getfeatureinfo-and-getlegendgraphic-requests\">Disabling usage of dynamic styling in GetMap, GetFeatureInfo and GetLegendGraphic requests</a></li>\n<li><a href=\"https://docs.geoserver.org/latest/en/user/security/urlchecks.html\">URL Checks</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/geoserver/geoserver/security/advisories/GHSA-cqpc-x2c6-2gmf\">https://github.com/geoserver/geoserver/security/advisories/GHSA-cqpc-x2c6-2gmf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41339\">https://nvd.nist.gov/vuln/detail/CVE-2023-41339</a></li>\n<li><a href=\"https://github.com/geoserver/geoserver/releases/tag/2.22.5\">https://github.com/geoserver/geoserver/releases/tag/2.22.5</a></li>\n<li><a href=\"https://github.com/geoserver/geoserver/releases/tag/2.23.2\">https://github.com/geoserver/geoserver/releases/tag/2.23.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqpc-x2c6-2gmf\">https://github.com/advisories/GHSA-cqpc-x2c6-2gmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqpc-x2c6-2gmf",
            "title": "[org.geoserver.web:gs-web-app] Unsecured WMS dynamic styling sld=<url> parameter affords blind unauthenticated SSRF",
            "date_modified": "2024-03-06T23:57:17.000Z",
            "date_published": "2023-10-24T19:20:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqpc-x2c6-2gmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The WMS specification defines an <code>sld=&lt;url&gt;</code> parameter for GetMap, GetLegendGraphic and GetFeatureInfo operations for user supplied \"dynamic styling\".  Enabling the use of dynamic styles, without also configuring URL checks, provides the opportunity for Service Side Request Forgery.</p>\n<p>It is possible to use this for \"Blind SSRF\" on the WMS endpoint to steal NetNTLMv2 hashes via file requests to malicious servers.</p>\n<h3 id=\"details\">Details</h3>\n<p>This vulnerability requires:</p>\n<ul>\n<li>WMS Settings dynamic styling being enabled</li>\n<li>Security URL checks to be disabled, or to be enabled and allowing <code>file:\\\\*</code> access</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability can be used to steal user NetNTLMv2 hashes which could be relayed or cracked externally to gain further access.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The ability to reference an external URL location is defined by the WMS standard GetMap, GetFeatureInfo and GetLegendGraphic operations. These operations are defined by an Industry and International standard and cannot be redefined by the GeoServer application in isolation.</p>\n<p>To disable dynamic styling on GeoServer 2.10.3 and GeoServer 2.11.1:</p>\n<ol>\n<li>Navigate to <strong>Services &gt; WMS Settings</strong> page</li>\n<li>Locate <strong>Dynamic styling</strong> heading</li>\n<li>Select the <strong>Disable usage of SLD and SLD_BODY parameters in GET requests and user styles in POST</strong> checkbox.</li>\n</ol>\n<h3 id=\"resolution\">Resolution</h3>\n<p>To allow dynamic styling safely on GeoServer 2.22.5 and GeoServer 2.23.2:</p>\n<ol>\n<li>Navigate to <strong>Security &gt; URL Checks</strong></li>\n<li>Enable <strong>URL Checks are enabled</strong> setting</li>\n<li>Check the user manual for <a href=\"https://docs.geoserver.org/latest/en/user/security/urlchecks.html#example-regex-patterns\">examples</a> of how to trust specific locations:\n<code>^https://styles\\.server\\.net/cartography/.*$</code></li>\n<li>Enable dynamic styling on the <strong>Services &gt; WMS Settings</strong> page, deselect the <strong>Disable usage of SLD and SLD_BODY parameters in GET requests and user styles in POST</strong> checkbox.</li>\n</ol>\n<p>Use of dynamic styling safely is on by default in GeoServer 2.24.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://docs.geoserver.org/latest/en/user/services/wms/webadmin.html#disabling-usage-of-dynamic-styling-in-getmap-getfeatureinfo-and-getlegendgraphic-requests\">Disabling usage of dynamic styling in GetMap, GetFeatureInfo and GetLegendGraphic requests</a></li>\n<li><a href=\"https://docs.geoserver.org/latest/en/user/security/urlchecks.html\">URL Checks</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/geoserver/geoserver/security/advisories/GHSA-cqpc-x2c6-2gmf\">https://github.com/geoserver/geoserver/security/advisories/GHSA-cqpc-x2c6-2gmf</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-41339\">https://nvd.nist.gov/vuln/detail/CVE-2023-41339</a></li>\n<li><a href=\"https://github.com/geoserver/geoserver/releases/tag/2.22.5\">https://github.com/geoserver/geoserver/releases/tag/2.22.5</a></li>\n<li><a href=\"https://github.com/geoserver/geoserver/releases/tag/2.23.2\">https://github.com/geoserver/geoserver/releases/tag/2.23.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cqpc-x2c6-2gmf\">https://github.com/advisories/GHSA-cqpc-x2c6-2gmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cqpc-x2c6-2gmf",
            "title": "[org.geoserver.web:gs-web-app] Unsecured WMS dynamic styling sld=<url> parameter affords blind unauthenticated SSRF",
            "date_modified": "2024-03-06T23:57:17.000Z",
            "date_published": "2023-10-24T19:20:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cqpc-x2c6-2gmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins has a built-in command line interface (CLI) to access Jenkins from a script or shell environment.</p>\n<p>Jenkins uses the args4j library to parse command arguments and options on the Jenkins controller when processing CLI commands. This command parser has a feature that replaces an @ character followed by a file path in an argument with the file’s contents (expandAtFiles). This feature is enabled by default and Jenkins 2.441 and earlier, LTS 2.426.2 and earlier does not disable it.</p>\n<p>This allows attackers to read arbitrary files on the Jenkins controller file system using the default character encoding of the Jenkins controller process.</p>\n<ul>\n<li><p>Attackers with Overall/Read permission can read entire files.</p>\n</li>\n<li><p>Attackers without Overall/Read permission can read the first few lines of files. The number of lines that can be read depends on available CLI commands. As of publication of this advisory, the Jenkins security team has found ways to read the first three lines of files in recent releases of Jenkins without having any plugins installed, and has not identified any plugins that would increase this line count.</p>\n</li>\n</ul>\n<p>Binary files containing cryptographic keys used for various Jenkins features can also be read, with some limitations (see note on binary files below). As of publication, the Jenkins security team has confirmed the following possible attacks in addition to reading contents of all files with a known file path. All of them leverage attackers' ability to obtain cryptographic keys from binary files, and are therefore only applicable to instances where that is feasible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23897\">https://nvd.nist.gov/vuln/detail/CVE-2024-23897</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2024-01-24/#SECURITY-3314\">https://www.jenkins.io/security/advisory/2024-01-24/#SECURITY-3314</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/01/24/6\">http://www.openwall.com/lists/oss-security/2024/01/24/6</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/176839/Jenkins-2.441-LTS-2.426.3-CVE-2024-23897-Scanner.html\">http://packetstormsecurity.com/files/176839/Jenkins-2.441-LTS-2.426.3-CVE-2024-23897-Scanner.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/176840/Jenkins-2.441-LTS-2.426.3-Arbitrary-File-Read.html\">http://packetstormsecurity.com/files/176840/Jenkins-2.441-LTS-2.426.3-Arbitrary-File-Read.html</a></li>\n<li><a href=\"https://www.jenkins.io/changelog-stable/#v2.440.1\">https://www.jenkins.io/changelog-stable/#v2.440.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6f9g-cxwr-q5jr\">https://github.com/advisories/GHSA-6f9g-cxwr-q5jr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6f9g-cxwr-q5jr",
            "title": "[org.jenkins-ci.main:jenkins-core] Arbitrary file read vulnerability through the Jenkins CLI can lead to RCE",
            "date_modified": "2024-03-06T21:54:07.000Z",
            "date_published": "2024-01-24T18:31:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6f9g-cxwr-q5jr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Jenkins has a built-in command line interface (CLI) to access Jenkins from a script or shell environment.</p>\n<p>Jenkins uses the args4j library to parse command arguments and options on the Jenkins controller when processing CLI commands. This command parser has a feature that replaces an @ character followed by a file path in an argument with the file’s contents (expandAtFiles). This feature is enabled by default and Jenkins 2.441 and earlier, LTS 2.426.2 and earlier does not disable it.</p>\n<p>This allows attackers to read arbitrary files on the Jenkins controller file system using the default character encoding of the Jenkins controller process.</p>\n<ul>\n<li><p>Attackers with Overall/Read permission can read entire files.</p>\n</li>\n<li><p>Attackers without Overall/Read permission can read the first few lines of files. The number of lines that can be read depends on available CLI commands. As of publication of this advisory, the Jenkins security team has found ways to read the first three lines of files in recent releases of Jenkins without having any plugins installed, and has not identified any plugins that would increase this line count.</p>\n</li>\n</ul>\n<p>Binary files containing cryptographic keys used for various Jenkins features can also be read, with some limitations (see note on binary files below). As of publication, the Jenkins security team has confirmed the following possible attacks in addition to reading contents of all files with a known file path. All of them leverage attackers' ability to obtain cryptographic keys from binary files, and are therefore only applicable to instances where that is feasible.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23897\">https://nvd.nist.gov/vuln/detail/CVE-2024-23897</a></li>\n<li><a href=\"https://www.jenkins.io/security/advisory/2024-01-24/#SECURITY-3314\">https://www.jenkins.io/security/advisory/2024-01-24/#SECURITY-3314</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/01/24/6\">http://www.openwall.com/lists/oss-security/2024/01/24/6</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/176839/Jenkins-2.441-LTS-2.426.3-CVE-2024-23897-Scanner.html\">http://packetstormsecurity.com/files/176839/Jenkins-2.441-LTS-2.426.3-CVE-2024-23897-Scanner.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/176840/Jenkins-2.441-LTS-2.426.3-Arbitrary-File-Read.html\">http://packetstormsecurity.com/files/176840/Jenkins-2.441-LTS-2.426.3-Arbitrary-File-Read.html</a></li>\n<li><a href=\"https://www.jenkins.io/changelog-stable/#v2.440.1\">https://www.jenkins.io/changelog-stable/#v2.440.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6f9g-cxwr-q5jr\">https://github.com/advisories/GHSA-6f9g-cxwr-q5jr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6f9g-cxwr-q5jr",
            "title": "[org.jenkins-ci.main:jenkins-core] Arbitrary file read vulnerability through the Jenkins CLI can lead to RCE",
            "date_modified": "2024-03-06T21:54:07.000Z",
            "date_published": "2024-01-24T18:31:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6f9g-cxwr-q5jr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML parsers in iText before 5.5.12 and 7.x before 7.0.3 do not disable external entities, which might allow remote attackers to conduct XML external entity (XXE) attacks via a crafted PDF.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-9096\">https://nvd.nist.gov/vuln/detail/CVE-2017-9096</a></li>\n<li><a href=\"https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us\">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us</a></li>\n<li><a href=\"https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt\">https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/541483/100/0/threaded\">http://www.securityfocus.com/archive/1/541483/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86p9-x5pw-94qx\">https://github.com/advisories/GHSA-86p9-x5pw-94qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx",
            "title": "[com.lowagie:itext] Improper Restriction of XML External Entity Reference in  iText",
            "date_modified": "2024-03-06T21:45:41.000Z",
            "date_published": "2022-05-13T01:14:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML parsers in iText before 5.5.12 and 7.x before 7.0.3 do not disable external entities, which might allow remote attackers to conduct XML external entity (XXE) attacks via a crafted PDF.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-9096\">https://nvd.nist.gov/vuln/detail/CVE-2017-9096</a></li>\n<li><a href=\"https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us\">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us</a></li>\n<li><a href=\"https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt\">https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/541483/100/0/threaded\">http://www.securityfocus.com/archive/1/541483/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86p9-x5pw-94qx\">https://github.com/advisories/GHSA-86p9-x5pw-94qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx",
            "title": "[com.itextpdf:itextpdf] Improper Restriction of XML External Entity Reference in  iText",
            "date_modified": "2024-03-06T21:45:41.000Z",
            "date_published": "2022-05-13T01:14:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The XML parsers in iText before 5.5.12 and 7.x before 7.0.3 do not disable external entities, which might allow remote attackers to conduct XML external entity (XXE) attacks via a crafted PDF.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-9096\">https://nvd.nist.gov/vuln/detail/CVE-2017-9096</a></li>\n<li><a href=\"https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us\">https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&amp;docId=emr_na-hpesbhf03902en_us</a></li>\n<li><a href=\"https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt\">https://www.compass-security.com/fileadmin/Datein/Research/Advisories/CSNC-2017-017_itext_xml_external_entity_attack.txt</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuoct2020.html\">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/541483/100/0/threaded\">http://www.securityfocus.com/archive/1/541483/100/0/threaded</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86p9-x5pw-94qx\">https://github.com/advisories/GHSA-86p9-x5pw-94qx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx",
            "title": "[com.itextpdf:itextpdf] Improper Restriction of XML External Entity Reference in  iText",
            "date_modified": "2024-03-06T21:45:41.000Z",
            "date_published": "2022-05-13T01:14:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86p9-x5pw-94qx"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}