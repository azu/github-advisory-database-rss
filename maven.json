{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Pinot.</p>\n<p>This issue affects Apache Pinot: from 0.1 before 1.0.0.</p>\n<p>Users are recommended to upgrade to version 1.0.0&nbsp;and configure RBAC, which fixes the issue.</p>\n<p>Details:&nbsp;</p>\n<p>When using a request to path <code>/appconfigs</code> to the controller, it can lead to the disclosure of sensitive information such as system information (e.g. arch, os version), environment information (e.g. maxHeapSize) and Pinot configurations (e.g. zookeeper path). This issue was addressed by the Role-based Access Control <a href=\"https://docs.pinot.apache.org/operators/tutorials/authentication/basic-auth-access-control\">https://docs.pinot.apache.org/operators/tutorials/authentication/basic-auth-access-control</a> , so that <code>/appConfigs</code> and all other APIs can be access controlled. Only authorized users have access to it. Note the user needs to add the admin role accordingly to the RBAC guide to control access to this endpoint, and in the future version of Pinot, a default admin role is planned to be added.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-39676\">https://nvd.nist.gov/vuln/detail/CVE-2024-39676</a></li>\n<li><a href=\"https://lists.apache.org/thread/hsm0b2w8qr0sqy4rj1mfnnw286tslpzc\">https://lists.apache.org/thread/hsm0b2w8qr0sqy4rj1mfnnw286tslpzc</a></li>\n<li><a href=\"https://docs.pinot.apache.org/operators/tutorials/authentication/basic-auth-access-control\">https://docs.pinot.apache.org/operators/tutorials/authentication/basic-auth-access-control</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8gj9-r4hv-3jjw\">https://github.com/advisories/GHSA-8gj9-r4hv-3jjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8gj9-r4hv-3jjw",
            "title": "[org.apache.pinot:pinot-controller] Apache Pinot: Unauthorized endpoint exposed sensitive information",
            "date_modified": "2024-07-24T14:59:49.000Z",
            "date_published": "2024-07-24T09:30:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8gj9-r4hv-3jjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>For RocketMQ versions 5.2.0 and below, under certain conditions, there is a risk of exposure of sensitive Information to an unauthorized actor even if RocketMQ is enabled with authentication and authorization functions.</p>\n<p>An attacker, possessing regular user privileges or listed in the IP whitelist, could potentially acquire the administrator's account and password through specific interfaces. Such an action would grant them full control over RocketMQ, provided they have access to the broker IP address list.</p>\n<p>To mitigate these security threats, it is strongly advised that users upgrade to version 5.3.0 or newer. Additionally, we recommend users to use RocketMQ ACL 2.0 instead of the original RocketMQ ACL when upgrading to version Apache RocketMQ 5.3.0.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-23321\">https://nvd.nist.gov/vuln/detail/CVE-2024-23321</a></li>\n<li><a href=\"https://lists.apache.org/thread/lr8npobww786nrnddd1pcy974r17c830\">https://lists.apache.org/thread/lr8npobww786nrnddd1pcy974r17c830</a></li>\n<li><a href=\"https://github.com/apache/rocketmq/releases/tag/rocketmq-all-5.3.0\">https://github.com/apache/rocketmq/releases/tag/rocketmq-all-5.3.0</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/07/22/1\">http://www.openwall.com/lists/oss-security/2024/07/22/1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q9w2-h4cw-8ghp\">https://github.com/advisories/GHSA-q9w2-h4cw-8ghp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q9w2-h4cw-8ghp",
            "title": "[org.apache.rocketmq:rocketmq-all] Apache RocketMQ Vulnerable to Unauthorized Exposure of Sensitive Data",
            "date_modified": "2024-07-22T21:57:53.000Z",
            "date_published": "2024-07-22T12:30:35.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q9w2-h4cw-8ghp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When editing a user, group or any object in the Syncope Console, HTML tags could be added to any text field and could lead to potential exploits.\nThe same vulnerability was found in the Syncope Enduser, when editing \"Personal Information\" or \"User Requests\".</p>\n<p>Users are recommended to upgrade to version 3.0.8, which fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38503\">https://nvd.nist.gov/vuln/detail/CVE-2024-38503</a></li>\n<li><a href=\"https://syncope.apache.org/security#cve-2024-38503-html-tags-can-be-injected-into-console-or-enduser\">https://syncope.apache.org/security#cve-2024-38503-html-tags-can-be-injected-into-console-or-enduser</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/07/22/3\">http://www.openwall.com/lists/oss-security/2024/07/22/3</a></li>\n<li><a href=\"https://github.com/apache/syncope/commit/12e65f5fb12ad87ce0b223b3c2bb39025a4521e4\">https://github.com/apache/syncope/commit/12e65f5fb12ad87ce0b223b3c2bb39025a4521e4</a></li>\n<li><a href=\"https://github.com/apache/syncope/releases/tag/syncope-3.0.8\">https://github.com/apache/syncope/releases/tag/syncope-3.0.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8pxv-x6jq-5vw9\">https://github.com/advisories/GHSA-8pxv-x6jq-5vw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8pxv-x6jq-5vw9",
            "title": "[org.apache.syncope.client.idrepo:syncope-client-idrepo-console] Apache Syncope Improper Input Validation vulnerability",
            "date_modified": "2024-07-22T18:43:42.000Z",
            "date_published": "2024-07-22T12:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8pxv-x6jq-5vw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>When editing a user, group or any object in the Syncope Console, HTML tags could be added to any text field and could lead to potential exploits.\nThe same vulnerability was found in the Syncope Enduser, when editing \"Personal Information\" or \"User Requests\".</p>\n<p>Users are recommended to upgrade to version 3.0.8, which fixes this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-38503\">https://nvd.nist.gov/vuln/detail/CVE-2024-38503</a></li>\n<li><a href=\"https://syncope.apache.org/security#cve-2024-38503-html-tags-can-be-injected-into-console-or-enduser\">https://syncope.apache.org/security#cve-2024-38503-html-tags-can-be-injected-into-console-or-enduser</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2024/07/22/3\">http://www.openwall.com/lists/oss-security/2024/07/22/3</a></li>\n<li><a href=\"https://github.com/apache/syncope/commit/12e65f5fb12ad87ce0b223b3c2bb39025a4521e4\">https://github.com/apache/syncope/commit/12e65f5fb12ad87ce0b223b3c2bb39025a4521e4</a></li>\n<li><a href=\"https://github.com/apache/syncope/releases/tag/syncope-3.0.8\">https://github.com/apache/syncope/releases/tag/syncope-3.0.8</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8pxv-x6jq-5vw9\">https://github.com/advisories/GHSA-8pxv-x6jq-5vw9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8pxv-x6jq-5vw9",
            "title": "[org.apache.syncope.client.idrepo:syncope-client-idrepo-common-ui] Apache Syncope Improper Input Validation vulnerability",
            "date_modified": "2024-07-22T18:43:42.000Z",
            "date_published": "2024-07-22T12:30:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8pxv-x6jq-5vw9"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to dnsjava v3.6.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability. </p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.athene-center.de/en/keytrap\">https://www.athene-center.de/en/keytrap</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf\">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-crjg-w57m-rqqf</a></li>\n<li><a href=\"https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78\">https://github.com/dnsjava/dnsjava/commit/07ac36a11578cc1bce0cd8ddf2fe568f062aee78</a></li>\n<li><a href=\"https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf\">https://github.com/dnsjava/dnsjava/commit/3ddc45ce8cdb5c2274e10b7401416f497694e1cf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-crjg-w57m-rqqf\">https://github.com/advisories/GHSA-crjg-w57m-rqqf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-crjg-w57m-rqqf",
            "title": "[dnsjava:dnsjava] DNSJava vulnerable to KeyTrap - Denial-of-Service Algorithmic Complexity Attacks",
            "date_modified": "2024-07-22T17:30:20.000Z",
            "date_published": "2024-07-22T17:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-crjg-w57m-rqqf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users using the <code>ValidatingResolver</code> for DNSSEC validation can run into CPU exhaustion with specially crafted DNSSEC-signed zones.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to dnsjava v3.6.0</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Although not recommended, only using a non-validating resolver, will remove the vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://www.athene-center.de/en/keytrap\">https://www.athene-center.de/en/keytrap</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr\">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-mmwx-rj87-vfgr</a></li>\n<li><a href=\"https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116\">https://github.com/dnsjava/dnsjava/commit/711af79be3214f52daa5c846b95766dc0a075116</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mmwx-rj87-vfgr\">https://github.com/advisories/GHSA-mmwx-rj87-vfgr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mmwx-rj87-vfgr",
            "title": "[dnsjava:dnsjava] DNSJava affected by KeyTrap - NSEC3 closest encloser proof can exhaust CPU resources",
            "date_modified": "2024-07-22T15:30:56.000Z",
            "date_published": "2024-07-22T14:46:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mmwx-rj87-vfgr"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The H2O machine learning platform uses \"Iced\" classes as the primary means of moving Java Objects around the cluster. The Iced format supports inclusion of serialized Java objects. When a model is deserialized, any class is allowed to be deserialized (no class whitelist). An attacker can construct a crafted Iced model that uses Java gadgets and leads to arbitrary code execution when imported to the H2O platform.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-6960\">https://nvd.nist.gov/vuln/detail/CVE-2024-6960</a></li>\n<li><a href=\"https://research.jfrog.com/vulnerabilities/h2o-model-deserialization-rce-jfsa-2024-001035518\">https://research.jfrog.com/vulnerabilities/h2o-model-deserialization-rce-jfsa-2024-001035518</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w36w-948j-xhfw\">https://github.com/advisories/GHSA-w36w-948j-xhfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w36w-948j-xhfw",
            "title": "[ai.h2o:h2o-core] H2O vulnerable to Deserialization of Untrusted Data",
            "date_modified": "2024-07-22T14:42:25.000Z",
            "date_published": "2024-07-21T12:30:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w36w-948j-xhfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Records in DNS replies are not checked for their relevance to the query, allowing an attacker to respond with RRs from different zones.</p>\n<h3 id=\"details\">Details</h3>\n<p>DNS Messages are not authenticated. They do not guarantee that</p>\n<ul>\n<li>received RRs are authentic</li>\n<li>not received RRs do not exist</li>\n<li>all or any received records in a response relate to the request</li>\n</ul>\n<p>Applications utilizing DNSSEC generally expect these guarantees to be met, however DNSSEC by itself only guarantees the first two.\nTo meet the third guarantee, resolvers generally follow an (undocumented, as far as RFCs go) algorithm such as: (simplified, e.g. lacks DNSSEC validation!)</p>\n<ol>\n<li>denote by <code>QNAME</code> the name you are querying (e.g. fraunhofer.de.), and initialize a list of aliases</li>\n<li>if the ANSWER section contains a valid PTR RRSet for <code>QNAME</code>, return it (and optionally return the list of aliases as well)</li>\n<li>if the ANSWER section contains a valid CNAME RRSet for <code>QNAME</code>, add it to the list of aliases. Set <code>QNAME</code> to the CNAME's target and go to 2.</li>\n<li>Verify that <code>QNAME</code> does not have any PTR, CNAME and DNAME records using valid NSEC or NSEC3 records. Return <code>null</code>.</li>\n</ol>\n<p>Note that this algorithm relies on NSEC records and thus requires a considerable portion of the DNSSEC specifications to be implemented. For this reason, it cannot be performed by a DNS client (aka application) and is typically performed as part of the resolver logic.</p>\n<p>dnsjava does not implement a comparable algorithm, and the provided APIs instead return either</p>\n<ul>\n<li>the received DNS message itself (e.g. when using a ValidatingResolver such as in <a href=\"https://github.com/dnsjava/dnsjava/blob/master/EXAMPLES.md#dnssec-resolver\">this</a> example), or</li>\n<li>essentially just the contents of its ANSWER section (e.g. when using a LookupSession such as in <a href=\"https://github.com/dnsjava/dnsjava/blob/master/EXAMPLES.md#simple-lookup-with-a-resolver\">this</a> example)</li>\n</ul>\n<p>If applications blindly filter the received results for RRs of the desired record type (as seems to be typical usage for dnsjava), a rogue recursive resolver or (on UDP/TCP connections) a network attacker can</p>\n<ul>\n<li>In addition to the actual DNS response, add RRs irrelevant to the query but of the right datatype, e.g. from another zone, as long as that zone is correctly using DNSSEC, or</li>\n<li>completely exchange the relevant response records</li>\n</ul>\n<h3 id=\"impact\">Impact</h3>\n<p>DNS(SEC) libraries are usually used as part of a larger security framework.\nTherefore, the main misuses of this vulnerability concern application code, which might take the returned records as authentic answers to the request.\nHere are three concrete examples of where this might be detrimental:</p>\n<ul>\n<li><a href=\"https://datatracker.ietf.org/doc/html/rfc6186\">RFC 6186</a> specifies that to connect to an IMAP server for a user, a mail user agent should retrieve certain SRV records and send the user's credentials to the specified servers. Exchanging the SRV records can be a tool to redirect the credentials.</li>\n<li>When delivering mail via SMTP, MX records determine where to deliver the mails to. Exchanging the MX records might lead to information disclosure. Additionally, an exchange of TLSA records might allow attackers to intercept TLS traffic.</li>\n<li>Some research projects like <a href=\"https://www.lightest.eu/\">LIGHTest</a> are trying to manage CA trust stores via URI and SMIMEA records in the DNS. Exchanging these allows manipulating the root of trust for dependent applications.</li>\n</ul>\n<h3 id=\"mitigations\">Mitigations</h3>\n<p>At this point, the following mitigations are recommended:</p>\n<ul>\n<li>When using a ValidatingResolver, ignore any Server indications of whether or not data was available (e.g. NXDOMAIN, NODATA, ...).</li>\n<li>For APIs returning RRs from DNS responses, filter the RRs using an algorithm such as the one above. This includes e.g. <code>LookupSession.lookupAsync</code>.</li>\n<li>Remove APIs dealing with raw DNS messages from the examples section or place a noticable warning above.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/dnsjava/dnsjava/security/advisories/GHSA-cfxw-4h78-h7fw\">https://github.com/dnsjava/dnsjava/security/advisories/GHSA-cfxw-4h78-h7fw</a></li>\n<li><a href=\"https://github.com/dnsjava/dnsjava/commit/bc51df1c455e6c9fb7cbd42fcb6d62d16047818d\">https://github.com/dnsjava/dnsjava/commit/bc51df1c455e6c9fb7cbd42fcb6d62d16047818d</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25638\">https://nvd.nist.gov/vuln/detail/CVE-2024-25638</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cfxw-4h78-h7fw\">https://github.com/advisories/GHSA-cfxw-4h78-h7fw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cfxw-4h78-h7fw",
            "title": "[dnsjava:dnsjava] DNSJava DNSSEC Bypass",
            "date_modified": "2024-07-22T16:55:12.000Z",
            "date_published": "2024-07-22T14:33:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cfxw-4h78-h7fw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22096\">https://nvd.nist.gov/vuln/detail/CVE-2021-22096</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2021-22096\">https://tanzu.vmware.com/security/cve-2021-22096</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211125-0005\">https://security.netapp.com/advisory/ntap-20211125-0005</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfmp-97jj-h8m6\">https://github.com/advisories/GHSA-rfmp-97jj-h8m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6",
            "title": "[org.springframework:spring] Improper Output Neutralization for Logs in Spring Framework",
            "date_modified": "2024-07-19T20:07:46.000Z",
            "date_published": "2022-05-24T19:19:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22096\">https://nvd.nist.gov/vuln/detail/CVE-2021-22096</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2021-22096\">https://tanzu.vmware.com/security/cve-2021-22096</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211125-0005\">https://security.netapp.com/advisory/ntap-20211125-0005</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfmp-97jj-h8m6\">https://github.com/advisories/GHSA-rfmp-97jj-h8m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6",
            "title": "[org.springframework:spring] Improper Output Neutralization for Logs in Spring Framework",
            "date_modified": "2024-07-19T20:07:46.000Z",
            "date_published": "2022-05-24T19:19:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22096\">https://nvd.nist.gov/vuln/detail/CVE-2021-22096</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2021-22096\">https://tanzu.vmware.com/security/cve-2021-22096</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211125-0005\">https://security.netapp.com/advisory/ntap-20211125-0005</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfmp-97jj-h8m6\">https://github.com/advisories/GHSA-rfmp-97jj-h8m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6",
            "title": "[org.springframework:spring-core] Improper Output Neutralization for Logs in Spring Framework",
            "date_modified": "2024-07-19T20:07:46.000Z",
            "date_published": "2022-05-24T19:19:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22096\">https://nvd.nist.gov/vuln/detail/CVE-2021-22096</a></li>\n<li><a href=\"https://tanzu.vmware.com/security/cve-2021-22096\">https://tanzu.vmware.com/security/cve-2021-22096</a></li>\n<li><a href=\"https://www.oracle.com/security-alerts/cpuapr2022.html\">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20211125-0005\">https://security.netapp.com/advisory/ntap-20211125-0005</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rfmp-97jj-h8m6\">https://github.com/advisories/GHSA-rfmp-97jj-h8m6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6",
            "title": "[org.springframework:spring-core] Improper Output Neutralization for Logs in Spring Framework",
            "date_modified": "2024-07-19T20:07:46.000Z",
            "date_published": "2022-05-24T19:19:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rfmp-97jj-h8m6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In versions of Apache CXF before 3.6.4 and 4.0.5 (3.5.x and lower versions are not impacted), a CXF HTTP client conduit may prevent HTTPClient instances from being garbage collected and it is possible that memory consumption will continue to increase, eventually causing the application to run  out of memory</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41172\">https://nvd.nist.gov/vuln/detail/CVE-2024-41172</a></li>\n<li><a href=\"https://lists.apache.org/thread/n2hvbrgwpdtcqdccod8by28ynnolybl6\">https://lists.apache.org/thread/n2hvbrgwpdtcqdccod8by28ynnolybl6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mgg-fqfq-64hg\">https://github.com/advisories/GHSA-4mgg-fqfq-64hg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mgg-fqfq-64hg",
            "title": "[org.apache.cxf:cxf-rt-transports-http] Apache CXF allows unrestricted memory consumption in CXF HTTP clients",
            "date_modified": "2024-07-19T18:34:57.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mgg-fqfq-64hg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In versions of Apache CXF before 3.6.4 and 4.0.5 (3.5.x and lower versions are not impacted), a CXF HTTP client conduit may prevent HTTPClient instances from being garbage collected and it is possible that memory consumption will continue to increase, eventually causing the application to run  out of memory</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-41172\">https://nvd.nist.gov/vuln/detail/CVE-2024-41172</a></li>\n<li><a href=\"https://lists.apache.org/thread/n2hvbrgwpdtcqdccod8by28ynnolybl6\">https://lists.apache.org/thread/n2hvbrgwpdtcqdccod8by28ynnolybl6</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4mgg-fqfq-64hg\">https://github.com/advisories/GHSA-4mgg-fqfq-64hg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4mgg-fqfq-64hg",
            "title": "[org.apache.cxf:cxf-rt-transports-http] Apache CXF allows unrestricted memory consumption in CXF HTTP clients",
            "date_modified": "2024-07-19T18:34:57.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4mgg-fqfq-64hg"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An improper input validation of the&nbsp;p2c parameter in the Apache CXF JOSE code before 4.0.5, 3.6.4 and 3.5.9&nbsp;allows an attacker to perform a denial of service attack by specifying a large value for this parameter in a token.&nbsp;</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32007\">https://nvd.nist.gov/vuln/detail/CVE-2024-32007</a></li>\n<li><a href=\"https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633\">https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c\">https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d\">https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473\">https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pff-fmh2-4mmf\">https://github.com/advisories/GHSA-6pff-fmh2-4mmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf",
            "title": "[org.apache.cxf:cxf-rt-rs-security-jose] Apache CXF Denial of Service vulnerability in JOSE",
            "date_modified": "2024-07-19T18:34:50.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An improper input validation of the&nbsp;p2c parameter in the Apache CXF JOSE code before 4.0.5, 3.6.4 and 3.5.9&nbsp;allows an attacker to perform a denial of service attack by specifying a large value for this parameter in a token.&nbsp;</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32007\">https://nvd.nist.gov/vuln/detail/CVE-2024-32007</a></li>\n<li><a href=\"https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633\">https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c\">https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d\">https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473\">https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pff-fmh2-4mmf\">https://github.com/advisories/GHSA-6pff-fmh2-4mmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf",
            "title": "[org.apache.cxf:cxf-rt-rs-security-jose] Apache CXF Denial of Service vulnerability in JOSE",
            "date_modified": "2024-07-19T18:34:50.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An improper input validation of the&nbsp;p2c parameter in the Apache CXF JOSE code before 4.0.5, 3.6.4 and 3.5.9&nbsp;allows an attacker to perform a denial of service attack by specifying a large value for this parameter in a token.&nbsp;</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32007\">https://nvd.nist.gov/vuln/detail/CVE-2024-32007</a></li>\n<li><a href=\"https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633\">https://lists.apache.org/thread/stwrgsr1llb73nkl16klv9vjqgmmx633</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c\">https://github.com/apache/cxf/commit/20793d3fed2e73e2785a58ec5b47403306ae4a5c</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d\">https://github.com/apache/cxf/commit/2d2baa3455db7439bf1ed4e00edfc5a7106edf7d</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473\">https://github.com/apache/cxf/commit/d1d77c34c199c2c87ebcfe23e3c81dccfe2e2473</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6pff-fmh2-4mmf\">https://github.com/advisories/GHSA-6pff-fmh2-4mmf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf",
            "title": "[org.apache.cxf:cxf-rt-rs-security-jose] Apache CXF Denial of Service vulnerability in JOSE",
            "date_modified": "2024-07-19T18:34:50.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6pff-fmh2-4mmf"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A SSRF vulnerability in WADL service description in versions of Apache CXF before 4.0.5, 3.6.4 and 3.5.9 allows an attacker to perform SSRF style attacks on REST webservices. The attack only applies if a custom stylesheet parameter is configured.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29736\">https://nvd.nist.gov/vuln/detail/CVE-2024-29736</a></li>\n<li><a href=\"https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2\">https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312\">https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b\">https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570\">https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5m3j-pxh7-455p\">https://github.com/advisories/GHSA-5m3j-pxh7-455p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p",
            "title": "[org.apache.cxf:cxf-rt-rs-service-description] Apache CXF: SSRF vulnerability via WADL stylesheet parameter",
            "date_modified": "2024-07-19T18:34:45.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A SSRF vulnerability in WADL service description in versions of Apache CXF before 4.0.5, 3.6.4 and 3.5.9 allows an attacker to perform SSRF style attacks on REST webservices. The attack only applies if a custom stylesheet parameter is configured.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29736\">https://nvd.nist.gov/vuln/detail/CVE-2024-29736</a></li>\n<li><a href=\"https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2\">https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312\">https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b\">https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570\">https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5m3j-pxh7-455p\">https://github.com/advisories/GHSA-5m3j-pxh7-455p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p",
            "title": "[org.apache.cxf:cxf-rt-rs-service-description] Apache CXF: SSRF vulnerability via WADL stylesheet parameter",
            "date_modified": "2024-07-19T18:34:45.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A SSRF vulnerability in WADL service description in versions of Apache CXF before 4.0.5, 3.6.4 and 3.5.9 allows an attacker to perform SSRF style attacks on REST webservices. The attack only applies if a custom stylesheet parameter is configured.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29736\">https://nvd.nist.gov/vuln/detail/CVE-2024-29736</a></li>\n<li><a href=\"https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2\">https://lists.apache.org/thread/4jtpsswn2r6xommol54p5mg263ysgdw2</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312\">https://github.com/apache/cxf/commit/378afe1acb7503315bc63555c8743db0f55d8312</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b\">https://github.com/apache/cxf/commit/bafb0cadf723fc3962031c34f1f20dc0e8b7a36b</a></li>\n<li><a href=\"https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570\">https://github.com/apache/cxf/commit/df2241c59481a57aebb1c0693b778a35baaf5570</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5m3j-pxh7-455p\">https://github.com/advisories/GHSA-5m3j-pxh7-455p</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p",
            "title": "[org.apache.cxf:cxf-rt-rs-service-description] Apache CXF: SSRF vulnerability via WADL stylesheet parameter",
            "date_modified": "2024-07-19T18:34:45.000Z",
            "date_published": "2024-07-19T09:32:06.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5m3j-pxh7-455p"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}