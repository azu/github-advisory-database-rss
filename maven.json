{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Java artifacts hosted at the Maven central repository",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Amaven",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/maven.json",
    "description": "Security Advisory for Java artifacts hosted at the Maven central repository on GitHub",
    "items": [
        {
            "content_html": "<p>A flaw was found in Keycloak 4.2.1.Final, 4.3.0.Final. When TOPT enabled, an improper implementation of the Brute Force detection algorithm will not enforce its protection measures.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-14657\">https://nvd.nist.gov/vuln/detail/CVE-2018-14657</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3592\">https://access.redhat.com/errata/RHSA-2018:3592</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3593\">https://access.redhat.com/errata/RHSA-2018:3593</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3595\">https://access.redhat.com/errata/RHSA-2018:3595</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-14657</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85v8-vx4w-q684\">https://github.com/advisories/GHSA-85v8-vx4w-q684</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85v8-vx4w-q684",
            "title": "[org.keycloak:keycloak-parent] Keycloak Improper Bruteforce Detection",
            "date_modified": "2023-10-06T17:29:16.000Z",
            "date_published": "2022-05-13T01:12:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85v8-vx4w-q684"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It was found that SAML authentication in Keycloak 3.4.3.Final incorrectly authenticated expired certificates. A malicious user could use this to access unauthorized data or possibly conduct further attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-10894\">https://nvd.nist.gov/vuln/detail/CVE-2018-10894</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3592\">https://access.redhat.com/errata/RHSA-2018:3592</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3593\">https://access.redhat.com/errata/RHSA-2018:3593</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3595\">https://access.redhat.com/errata/RHSA-2018:3595</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0877\">https://access.redhat.com/errata/RHSA-2019:0877</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e\">https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvv8-8wh9-9fh2\">https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvv8-8wh9-9fh2",
            "title": "[org.keycloak:keycloak-services] Keycloak Authentication Error",
            "date_modified": "2023-10-06T17:25:02.000Z",
            "date_published": "2022-05-13T01:34:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvv8-8wh9-9fh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>It was found that SAML authentication in Keycloak 3.4.3.Final incorrectly authenticated expired certificates. A malicious user could use this to access unauthorized data or possibly conduct further attacks.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-10894\">https://nvd.nist.gov/vuln/detail/CVE-2018-10894</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3592\">https://access.redhat.com/errata/RHSA-2018:3592</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3593\">https://access.redhat.com/errata/RHSA-2018:3593</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2018:3595\">https://access.redhat.com/errata/RHSA-2018:3595</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0877\">https://access.redhat.com/errata/RHSA-2019:0877</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894\">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-10894</a></li>\n<li><a href=\"https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e\">https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xvv8-8wh9-9fh2\">https://github.com/advisories/GHSA-xvv8-8wh9-9fh2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xvv8-8wh9-9fh2",
            "title": "[org.keycloak:keycloak-saml-adapter-core] Keycloak Authentication Error",
            "date_modified": "2023-10-06T17:25:02.000Z",
            "date_published": "2022-05-13T01:34:55.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xvv8-8wh9-9fh2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>An issue was discovered in MCMS 4.6.5. There is a CSRF vulnerability that can add an administrator account via ms/basic/manager/save.do.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-17366\">https://nvd.nist.gov/vuln/detail/CVE-2018-17366</a></li>\n<li><a href=\"https://gitee.com/mingSoft/MCMS/issues/IM1DA\">https://gitee.com/mingSoft/MCMS/issues/IM1DA</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m246-pv28-4r6f\">https://github.com/advisories/GHSA-m246-pv28-4r6f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m246-pv28-4r6f",
            "title": "[net.mingsoft:ms-mcms] Mingsoft MCMS CSRF vulnerability",
            "date_modified": "2023-10-06T16:19:53.000Z",
            "date_published": "2022-05-14T02:00:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m246-pv28-4r6f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>OpenRefine before 3.2 beta allows directory traversal via a relative pathname in a ZIP archive.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-19859\">https://nvd.nist.gov/vuln/detail/CVE-2018-19859</a></li>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/issues/1840\">https://github.com/OpenRefine/OpenRefine/issues/1840</a></li>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/pull/1901\">https://github.com/OpenRefine/OpenRefine/pull/1901</a></li>\n<li><a href=\"https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656\">https://github.com/OpenRefine/OpenRefine/commit/e243e73e4064de87a913946bd320fbbe246da656</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f6fv-fjg8-4m6w\">https://github.com/advisories/GHSA-f6fv-fjg8-4m6w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f6fv-fjg8-4m6w",
            "title": "[org.openrefine:main] OpenRefine Directory Traversal",
            "date_modified": "2023-10-06T15:30:56.000Z",
            "date_published": "2022-05-14T01:14:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f6fv-fjg8-4m6w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-18240\">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>\n<li><a href=\"https://github.com/pippo-java/pippo/issues/454\">https://github.com/pippo-java/pippo/issues/454</a></li>\n<li><a href=\"https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296\">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h892-x453-86wc\">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h892-x453-86wc",
            "title": "[ro.pippo:pippo-session] Pippo RCE Vulnerability",
            "date_modified": "2023-10-06T01:08:09.000Z",
            "date_published": "2022-05-13T01:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h892-x453-86wc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Pippo through 1.11.0 allows remote code execution via a command to java.lang.ProcessBuilder because the XstreamEngine component does not use XStream's available protection mechanisms to restrict unmarshalling.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-18240\">https://nvd.nist.gov/vuln/detail/CVE-2018-18240</a></li>\n<li><a href=\"https://github.com/pippo-java/pippo/issues/454\">https://github.com/pippo-java/pippo/issues/454</a></li>\n<li><a href=\"https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296\">https://github.com/pippo-java/pippo/commit/c6b26551a82d2dd32097fcb17c13c3b830916296</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h892-x453-86wc\">https://github.com/advisories/GHSA-h892-x453-86wc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h892-x453-86wc",
            "title": "[ro.pippo:pippo-core] Pippo RCE Vulnerability",
            "date_modified": "2023-10-06T01:08:09.000Z",
            "date_published": "2022-05-13T01:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h892-x453-86wc"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>IdTokenClaimsValidator skips <code>aud</code> claim validation if token is issued by same identity issuer/provider.</p>\n<h3 id=\"details\">Details</h3>\n<p>See <a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></p>\n<p>This logic violates point 3 of <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation\">https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation</a>. </p>\n<p>Workaround exists by setting <code>micronaut.security.token.jwt.claims-validators.audience</code> with valid values. \n <code>micronaut.security.token.jwt.claims-validators.openid-idtoken</code> can be kept as default on.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Should probably be:</p>\n<pre><code class=\"language-java\">                return issuer.equalsIgnoreCase(iss) &amp;&amp;\n                        audiences.contains(clientId) &amp;&amp;\n                                validateAzp(claims, clientId, audiences);\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<p>Any OIDC setup using Micronaut where multiple OIDC applications exists for the same issuer but token auth are not meant to be shared.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h\">https://github.com/micronaut-projects/micronaut-security/security/advisories/GHSA-qw22-8w9r-864h</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980\">https://github.com/micronaut-projects/micronaut-security/commit/9728b925221a0d87798ccf250657a3c214b7e980</a></li>\n<li><a href=\"https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202\">https://github.com/micronaut-projects/micronaut-security/blob/master/security-oauth2/src/main/java/io/micronaut/security/oauth2/client/IdTokenClaimsValidator.java#L202</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qw22-8w9r-864h\">https://github.com/advisories/GHSA-qw22-8w9r-864h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h",
            "title": "[io.micronaut.security:micronaut-security-oauth2] io.micronaut.security:micronaut-security-oauth2 has invalid IdTokenClaimsValidator logic on aud",
            "date_modified": "2023-10-05T20:55:17.000Z",
            "date_published": "2023-10-05T20:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qw22-8w9r-864h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Addresses partial fix in CVE-2018-1261. Pivotal spring-integration-zip, versions prior to 1.0.2, exposes an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive (affects other archives as well, bzip2, tar, xz, war, cpio, 7z), that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-1263\">https://nvd.nist.gov/vuln/detail/CVE-2018-1263</a></li>\n<li><a href=\"https://pivotal.io/security/cve-2018-1263\">https://pivotal.io/security/cve-2018-1263</a></li>\n<li><a href=\"https://web.archive.org/web/20210125210559/https://www.securityfocus.com/bid/104179/\">https://web.archive.org/web/20210125210559/https://www.securityfocus.com/bid/104179/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-87vg-5pgx-pggh\">https://github.com/advisories/GHSA-87vg-5pgx-pggh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-87vg-5pgx-pggh",
            "title": "[org.springframework.integration:spring-integration-zip] spring-integration-zip Arbitrary File Write",
            "date_modified": "2023-10-05T18:49:19.000Z",
            "date_published": "2022-05-13T01:07:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-87vg-5pgx-pggh"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}