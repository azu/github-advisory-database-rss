<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2023-07-25T19:01:28.015Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore CSRF Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gmff-vcv6-mmfr</id>
        <link href="https://github.com/advisories/GHSA-gmff-vcv6-mmfr"/>
        <updated>2023-07-25T18:51:55.000Z</updated>
        <content type="html"><![CDATA[<p>Pimcore before 5.3.0 allows remote attackers to conduct cross-site request forgery (CSRF) attacks by leveraging validation of the <code>X-pimcore-csrf-token</code> anti-CSRF token only in the "Settings &gt; Users / Roles" function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-14057">https://nvd.nist.gov/vuln/detail/CVE-2018-14057</a></li>
<li><a href="https://www.exploit-db.com/exploits/45208/">https://www.exploit-db.com/exploits/45208/</a></li>
<li><a href="https://www.sec-consult.com/en/blog/advisories/sql-injection-xss-csrf-vulnerabilities-in-pimcore-software/">https://www.sec-consult.com/en/blog/advisories/sql-injection-xss-csrf-vulnerabilities-in-pimcore-software/</a></li>
<li><a href="http://packetstormsecurity.com/files/148954/Pimcore-5.2.3-CSRF-Cross-Site-Scripting-SQL-Injection.html">http://packetstormsecurity.com/files/148954/Pimcore-5.2.3-CSRF-Cross-Site-Scripting-SQL-Injection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2018/Aug/13">http://seclists.org/fulldisclosure/2018/Aug/13</a></li>
<li><a href="https://github.com/advisories/GHSA-gmff-vcv6-mmfr">https://github.com/advisories/GHSA-gmff-vcv6-mmfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmff-vcv6-mmfr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:36:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore SQLi Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q4hw-c66h-4xqc</id>
        <link href="https://github.com/advisories/GHSA-q4hw-c66h-4xqc"/>
        <updated>2023-07-25T18:50:45.000Z</updated>
        <content type="html"><![CDATA[<p>Pimcore before 5.3.0 allows SQL Injection via the REST web service API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-14058">https://nvd.nist.gov/vuln/detail/CVE-2018-14058</a></li>
<li><a href="https://www.exploit-db.com/exploits/45208/">https://www.exploit-db.com/exploits/45208/</a></li>
<li><a href="https://www.sec-consult.com/en/blog/advisories/sql-injection-xss-csrf-vulnerabilities-in-pimcore-software/">https://www.sec-consult.com/en/blog/advisories/sql-injection-xss-csrf-vulnerabilities-in-pimcore-software/</a></li>
<li><a href="http://packetstormsecurity.com/files/148954/Pimcore-5.2.3-CSRF-Cross-Site-Scripting-SQL-Injection.html">http://packetstormsecurity.com/files/148954/Pimcore-5.2.3-CSRF-Cross-Site-Scripting-SQL-Injection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2018/Aug/13">http://seclists.org/fulldisclosure/2018/Aug/13</a></li>
<li><a href="https://github.com/advisories/GHSA-q4hw-c66h-4xqc">https://github.com/advisories/GHSA-q4hw-c66h-4xqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4hw-c66h-4xqc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:36:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[topthink/framework] ThinkPHP SQLi Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-78q9-24gv-g288</id>
        <link href="https://github.com/advisories/GHSA-78q9-24gv-g288"/>
        <updated>2023-07-25T18:44:14.000Z</updated>
        <content type="html"><![CDATA[<p>ThinkPHP 3.2.4 has SQL Injection via the count parameter because the <code>Library/Think/Db/Driver/Mysql.class.php</code> <code>parseKey</code> function mishandles the key variable. NOTE: a backquote character is not required in the attack URI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18529">https://nvd.nist.gov/vuln/detail/CVE-2018-18529</a></li>
<li><a href="https://www.kingkk.com/2018/10/Thinkphp-%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2%E6%BC%8F%E6%B4%9E/#ThinkPHP3-lt-3-2-4">https://www.kingkk.com/2018/10/Thinkphp-%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2%E6%BC%8F%E6%B4%9E/#ThinkPHP3-lt-3-2-4</a></li>
<li><a href="https://github.com/advisories/GHSA-78q9-24gv-g288">https://github.com/advisories/GHSA-78q9-24gv-g288</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78q9-24gv-g288</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-14T01:53:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[thorsten/phpmyfaq] phpMyFAQ CSRF]]></title>
        <id>https://github.com/advisories/GHSA-p57w-9q28-j6v7</id>
        <link href="https://github.com/advisories/GHSA-p57w-9q28-j6v7"/>
        <updated>2023-07-25T18:43:01.000Z</updated>
        <content type="html"><![CDATA[<p>phpMyFAQ before 2.9.11 allows CSRF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16650">https://nvd.nist.gov/vuln/detail/CVE-2018-16650</a></li>
<li><a href="https://www.phpmyfaq.de/security/advisory-2018-09-02">https://www.phpmyfaq.de/security/advisory-2018-09-02</a></li>
<li><a href="https://github.com/advisories/GHSA-p57w-9q28-j6v7">https://github.com/advisories/GHSA-p57w-9q28-j6v7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p57w-9q28-j6v7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:02:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/html-sanitizer] By-passing Cross-Site Scripting Protection in HTML Sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-59jf-3q9v-rh6g</id>
        <link href="https://github.com/advisories/GHSA-59jf-3q9v-rh6g"/>
        <updated>2023-07-25T18:40:23.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuirscclilanefrlorcc-44">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N/E:F/RL:O/RC:C</code> (4.4)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>Due to an encoding issue in the serialization layer, malicious markup nested in a <code>noscript</code> element was not encoded correctly. <code>noscript</code> is disabled in the default configuration, but might have been enabled in custom scenarios. This allows bypassing the cross-site scripting mechanism of <a href="https://packagist.org/packages/typo3/html-sanitizer"><code>typo3/html-sanitizer</code></a>.</p>
<h3 id="solution">Solution</h3>
<p>Update to <code>typo3/html-sanitizer</code> versions 1.5.1 or 2.1.2 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to David Klein and Yaniv Nizry who reported this issue, and to TYPO3 security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-002">TYPO3-CORE-SA-2023-002</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-59jf-3q9v-rh6g">https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-59jf-3q9v-rh6g</a></li>
<li><a href="https://github.com/advisories/GHSA-59jf-3q9v-rh6g">https://github.com/advisories/GHSA-59jf-3q9v-rh6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59jf-3q9v-rh6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T18:27:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/html-sanitizer] By-passing Cross-Site Scripting Protection in HTML Sanitizer]]></title>
        <id>https://github.com/advisories/GHSA-59jf-3q9v-rh6g</id>
        <link href="https://github.com/advisories/GHSA-59jf-3q9v-rh6g"/>
        <updated>2023-07-25T18:40:23.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuirscclilanefrlorcc-44">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N/E:F/RL:O/RC:C</code> (4.4)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>Due to an encoding issue in the serialization layer, malicious markup nested in a <code>noscript</code> element was not encoded correctly. <code>noscript</code> is disabled in the default configuration, but might have been enabled in custom scenarios. This allows bypassing the cross-site scripting mechanism of <a href="https://packagist.org/packages/typo3/html-sanitizer"><code>typo3/html-sanitizer</code></a>.</p>
<h3 id="solution">Solution</h3>
<p>Update to <code>typo3/html-sanitizer</code> versions 1.5.1 or 2.1.2 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to David Klein and Yaniv Nizry who reported this issue, and to TYPO3 security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-002">TYPO3-CORE-SA-2023-002</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-59jf-3q9v-rh6g">https://github.com/TYPO3/html-sanitizer/security/advisories/GHSA-59jf-3q9v-rh6g</a></li>
<li><a href="https://github.com/advisories/GHSA-59jf-3q9v-rh6g">https://github.com/advisories/GHSA-59jf-3q9v-rh6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59jf-3q9v-rh6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T18:27:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-core] Information Disclosure due to Out-of-scope Site Resolution]]></title>
        <id>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</id>
        <link href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r"/>
        <updated>2023-07-25T18:25:53.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuinsuclinanefrlorcc-35">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C</code> (3.5)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>In multi-site scenarios, enumerating the HTTP query parameters <code>id</code> and <code>L</code> allowed out-of-scope access to rendered content in the website frontend. For instance, this allowed visitors to access content of an internal site by adding handcrafted query parameters to the URL of a site that was publicly available.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 9.5.42 ELTS, 10.4.39 ELTS, 11.5.30, 12.4.4 that fix the problem described above.</p>
<blockquote>
<p>ℹ️ <strong>Strong security defaults - Manual actions required</strong>
Resolving sites by the <code>id</code> and <code>L</code> HTTP query parameters is now denied per default. However, it is still allowed to resolve a particular page by e.g. <code>https://example.org/?id=123&amp;L=0</code> - as long as the <code>page-id 123</code> is in the scope of the site configured for the <code>base-url example.org</code>.
The new feature flag <code>security.frontend.allowInsecureSiteResolutionByQueryParameters</code> - which is disabled per default - can be used to reactivate the previous behavior.</p>
</blockquote>
<h3 id="credits">Credits</h3>
<p>Thanks to Garvin Hicking who reported this issue, and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-003">TYPO3-CORE-SA-2023-003</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
<li><a href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-25T18:25:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-core] Information Disclosure due to Out-of-scope Site Resolution]]></title>
        <id>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</id>
        <link href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r"/>
        <updated>2023-07-25T18:25:53.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuinsuclinanefrlorcc-35">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C</code> (3.5)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>In multi-site scenarios, enumerating the HTTP query parameters <code>id</code> and <code>L</code> allowed out-of-scope access to rendered content in the website frontend. For instance, this allowed visitors to access content of an internal site by adding handcrafted query parameters to the URL of a site that was publicly available.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 9.5.42 ELTS, 10.4.39 ELTS, 11.5.30, 12.4.4 that fix the problem described above.</p>
<blockquote>
<p>ℹ️ <strong>Strong security defaults - Manual actions required</strong>
Resolving sites by the <code>id</code> and <code>L</code> HTTP query parameters is now denied per default. However, it is still allowed to resolve a particular page by e.g. <code>https://example.org/?id=123&amp;L=0</code> - as long as the <code>page-id 123</code> is in the scope of the site configured for the <code>base-url example.org</code>.
The new feature flag <code>security.frontend.allowInsecureSiteResolutionByQueryParameters</code> - which is disabled per default - can be used to reactivate the previous behavior.</p>
</blockquote>
<h3 id="credits">Credits</h3>
<p>Thanks to Garvin Hicking who reported this issue, and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-003">TYPO3-CORE-SA-2023-003</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
<li><a href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-25T18:25:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-core] Information Disclosure due to Out-of-scope Site Resolution]]></title>
        <id>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</id>
        <link href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r"/>
        <updated>2023-07-25T18:25:53.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuinsuclinanefrlorcc-35">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C</code> (3.5)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>In multi-site scenarios, enumerating the HTTP query parameters <code>id</code> and <code>L</code> allowed out-of-scope access to rendered content in the website frontend. For instance, this allowed visitors to access content of an internal site by adding handcrafted query parameters to the URL of a site that was publicly available.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 9.5.42 ELTS, 10.4.39 ELTS, 11.5.30, 12.4.4 that fix the problem described above.</p>
<blockquote>
<p>ℹ️ <strong>Strong security defaults - Manual actions required</strong>
Resolving sites by the <code>id</code> and <code>L</code> HTTP query parameters is now denied per default. However, it is still allowed to resolve a particular page by e.g. <code>https://example.org/?id=123&amp;L=0</code> - as long as the <code>page-id 123</code> is in the scope of the site configured for the <code>base-url example.org</code>.
The new feature flag <code>security.frontend.allowInsecureSiteResolutionByQueryParameters</code> - which is disabled per default - can be used to reactivate the previous behavior.</p>
</blockquote>
<h3 id="credits">Credits</h3>
<p>Thanks to Garvin Hicking who reported this issue, and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-003">TYPO3-CORE-SA-2023-003</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
<li><a href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-25T18:25:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-core] Information Disclosure due to Out-of-scope Site Resolution]]></title>
        <id>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</id>
        <link href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r"/>
        <updated>2023-07-25T18:25:53.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuinsuclinanefrlorcc-35">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C</code> (3.5)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>In multi-site scenarios, enumerating the HTTP query parameters <code>id</code> and <code>L</code> allowed out-of-scope access to rendered content in the website frontend. For instance, this allowed visitors to access content of an internal site by adding handcrafted query parameters to the URL of a site that was publicly available.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 9.5.42 ELTS, 10.4.39 ELTS, 11.5.30, 12.4.4 that fix the problem described above.</p>
<blockquote>
<p>ℹ️ <strong>Strong security defaults - Manual actions required</strong>
Resolving sites by the <code>id</code> and <code>L</code> HTTP query parameters is now denied per default. However, it is still allowed to resolve a particular page by e.g. <code>https://example.org/?id=123&amp;L=0</code> - as long as the <code>page-id 123</code> is in the scope of the site configured for the <code>base-url example.org</code>.
The new feature flag <code>security.frontend.allowInsecureSiteResolutionByQueryParameters</code> - which is disabled per default - can be used to reactivate the previous behavior.</p>
</blockquote>
<h3 id="credits">Credits</h3>
<p>Thanks to Garvin Hicking who reported this issue, and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-003">TYPO3-CORE-SA-2023-003</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/TYPO3/typo3/security/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
<li><a href="https://github.com/advisories/GHSA-jq6g-4v5m-wm9r">https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq6g-4v5m-wm9r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-25T18:25:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr ERP and CRM contain XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ggww-q2gv-m3g4</id>
        <link href="https://github.com/advisories/GHSA-ggww-q2gv-m3g4"/>
        <updated>2023-07-25T18:25:53.000Z</updated>
        <content type="html"><![CDATA[<p>Dolibarr ERP/CRM through 8.0.3 has <code>/exports/export.php?datatoexport=</code> XSS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19799">https://nvd.nist.gov/vuln/detail/CVE-2018-19799</a></li>
<li><a href="https://pentest.com.tr/exploits/Dolibarr-ERP-CRM-8-0-3-Cross-Site-Scripting.html">https://pentest.com.tr/exploits/Dolibarr-ERP-CRM-8-0-3-Cross-Site-Scripting.html</a></li>
<li><a href="https://www.exploit-db.com/exploits/45945/">https://www.exploit-db.com/exploits/45945/</a></li>
<li><a href="http://packetstormsecurity.com/files/150623/Dolibarr-ERP-CRM-8.0.3-Cross-Site-Scripting.html">http://packetstormsecurity.com/files/150623/Dolibarr-ERP-CRM-8.0.3-Cross-Site-Scripting.html</a></li>
<li><a href="https://github.com/advisories/GHSA-ggww-q2gv-m3g4">https://github.com/advisories/GHSA-ggww-q2gv-m3g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggww-q2gv-m3g4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:41:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[showdoc/showdoc] Showdoc Forced Browsing]]></title>
        <id>https://github.com/advisories/GHSA-6xx7-cphv-pxgr</id>
        <link href="https://github.com/advisories/GHSA-6xx7-cphv-pxgr"/>
        <updated>2023-07-25T18:24:01.000Z</updated>
        <content type="html"><![CDATA[<p>ShowDoc 2.4.1 allows remote attackers to obtain sensitive information by navigating with a modified page_id, as demonstrated by reading note content, or discovering a username in the JSON data at a diff URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19609">https://nvd.nist.gov/vuln/detail/CVE-2018-19609</a></li>
<li><a href="https://github.com/CCCCCrash/POCs/tree/master/Web/showdoc/IncorrectAccessControl">https://github.com/CCCCCrash/POCs/tree/master/Web/showdoc/IncorrectAccessControl</a></li>
<li><a href="https://github.com/advisories/GHSA-6xx7-cphv-pxgr">https://github.com/advisories/GHSA-6xx7-cphv-pxgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6xx7-cphv-pxgr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:45:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shopware/shopware] Shopware SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-42gv-77f4-r3j9</id>
        <link href="https://github.com/advisories/GHSA-42gv-77f4-r3j9"/>
        <updated>2023-07-25T18:22:04.000Z</updated>
        <content type="html"><![CDATA[<p>Shopware before 5.4.3 allows SQL Injection by remote authenticated users, aka SW-21404.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20713">https://nvd.nist.gov/vuln/detail/CVE-2018-20713</a></li>
<li><a href="https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-05-2018">https://docs.shopware.com/en/shopware-5-en/security-updates/security-update-05-2018</a></li>
<li><a href="https://github.com/shopware5/shopware/commit/73cb46727050e28a0d7c2cf8471baaa3eaf2e5e8">https://github.com/shopware5/shopware/commit/73cb46727050e28a0d7c2cf8471baaa3eaf2e5e8</a></li>
<li><a href="https://github.com/advisories/GHSA-42gv-77f4-r3j9">https://github.com/advisories/GHSA-42gv-77f4-r3j9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-42gv-77f4-r3j9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:39:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[forkcms/forkcms] Fork CMS XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xcmj-xjhg-wvhq</id>
        <link href="https://github.com/advisories/GHSA-xcmj-xjhg-wvhq"/>
        <updated>2023-07-25T18:17:49.000Z</updated>
        <content type="html"><![CDATA[<p>Fork CMS 5.0.6 allows stored XSS via the <code>private/en/settings</code> <code>facebook_admin_ids</code> parameter (aka "Admin ids" input in the Facebook section).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20682">https://nvd.nist.gov/vuln/detail/CVE-2018-20682</a></li>
<li><a href="https://www.netsparker.com/web-applications-advisories/ns-18-032-stored-cross-site-scripting-in-forkcms/">https://www.netsparker.com/web-applications-advisories/ns-18-032-stored-cross-site-scripting-in-forkcms/</a></li>
<li><a href="https://github.com/advisories/GHSA-xcmj-xjhg-wvhq">https://github.com/advisories/GHSA-xcmj-xjhg-wvhq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcmj-xjhg-wvhq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:39:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[topthink/framework] ThinkPHP SQLi Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j7g8-3qqg-8cvm</id>
        <link href="https://github.com/advisories/GHSA-j7g8-3qqg-8cvm"/>
        <updated>2023-07-25T17:57:12.000Z</updated>
        <content type="html"><![CDATA[<p>ThinkPHP 3.2.4 has SQL Injection via the order parameter because the <code>Library/Think/Db/Driver.class.php</code> parseOrder function mishandles the key variable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18546">https://nvd.nist.gov/vuln/detail/CVE-2018-18546</a></li>
<li><a href="https://github.com/top-think/thinkphp/commit/9748cb80d2f24c89218f358ca2f5ab88ee33396f">https://github.com/top-think/thinkphp/commit/9748cb80d2f24c89218f358ca2f5ab88ee33396f</a></li>
<li><a href="https://98587329.github.io/2018/10/09/thinkphp%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/">https://98587329.github.io/2018/10/09/thinkphp%E6%B3%A8%E5%85%A5%E5%88%86%E6%9E%90/</a></li>
<li><a href="https://github.com/top-think/framework/issues/2613">https://github.com/top-think/framework/issues/2613</a></li>
<li><a href="https://github.com/advisories/GHSA-j7g8-3qqg-8cvm">https://github.com/advisories/GHSA-j7g8-3qqg-8cvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7g8-3qqg-8cvm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-14T01:53:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[librenms/librenms] LibreNMS XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9m82-f3wx-p625</id>
        <link href="https://github.com/advisories/GHSA-9m82-f3wx-p625"/>
        <updated>2023-07-25T17:54:39.000Z</updated>
        <content type="html"><![CDATA[<p>Persistent Cross-Site Scripting (XSS) issues in LibreNMS before 1.44 allow remote attackers to inject arbitrary web script or HTML via the dashboard_name parameter in the /ajax_form.php resource, related to html/includes/forms/add-dashboard.inc.php, html/includes/forms/delete-dashboard.inc.php, and html/includes/forms/edit-dashboard.inc.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18478">https://nvd.nist.gov/vuln/detail/CVE-2018-18478</a></li>
<li><a href="https://github.com/librenms/librenms/issues/9170">https://github.com/librenms/librenms/issues/9170</a></li>
<li><a href="https://github.com/librenms/librenms/pull/9171">https://github.com/librenms/librenms/pull/9171</a></li>
<li><a href="https://github.com/librenms/librenms/releases/tag/1.44">https://github.com/librenms/librenms/releases/tag/1.44</a></li>
<li><a href="https://hackpuntes.com/cve-2018-18478-libre-nms-1-43-cross-site-scripting-persistente/">https://hackpuntes.com/cve-2018-18478-libre-nms-1-43-cross-site-scripting-persistente/</a></li>
<li><a href="https://github.com/advisories/GHSA-9m82-f3wx-p625">https://github.com/advisories/GHSA-9m82-f3wx-p625</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m82-f3wx-p625</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:53:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[topthink/framework] ThinkPHP SQLi Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xfj-4jpg-58vf</id>
        <link href="https://github.com/advisories/GHSA-7xfj-4jpg-58vf"/>
        <updated>2023-07-25T17:52:15.000Z</updated>
        <content type="html"><![CDATA[<p>ThinkPHP 5.1.25 has SQL Injection via the count parameter because the library/think/db/Query.php aggregate function mishandles the aggregate variable. NOTE: a backquote character is required in the attack URI.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18530">https://nvd.nist.gov/vuln/detail/CVE-2018-18530</a></li>
<li><a href="https://www.kingkk.com/2018/10/Thinkphp-%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2%E6%BC%8F%E6%B4%9E/#ThinkPHP5-lt-5-1-25">https://www.kingkk.com/2018/10/Thinkphp-%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2%E6%BC%8F%E6%B4%9E/#ThinkPHP5-lt-5-1-25</a></li>
<li><a href="https://github.com/top-think/framework/issues/2613">https://github.com/top-think/framework/issues/2613</a></li>
<li><a href="https://github.com/advisories/GHSA-7xfj-4jpg-58vf">https://github.com/advisories/GHSA-7xfj-4jpg-58vf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xfj-4jpg-58vf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-14T01:53:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony DoS]]></title>
        <id>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</id>
        <link href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4"/>
        <updated>2023-07-25T17:48:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the HttpFoundation component in Symfony 2.7.x before 2.7.48, 2.8.x before 2.8.41, 3.3.x before 3.3.17, 3.4.x before 3.4.11, and 4.0.x before 4.0.11. The PDOSessionHandler class allows storing sessions on a PDO connection. Under some configurations and with a well-crafted payload, it was possible to do a denial of service on a Symfony application without too much resources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-11386">https://nvd.nist.gov/vuln/detail/CVE-2018-11386</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/</a></li>
<li><a href="https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler">https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4262">https://www.debian.org/security/2018/dsa-4262</a></li>
<li><a href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4">https://github.com/advisories/GHSA-r2rq-3h56-fqm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:14:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony DoS]]></title>
        <id>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</id>
        <link href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4"/>
        <updated>2023-07-25T17:48:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the HttpFoundation component in Symfony 2.7.x before 2.7.48, 2.8.x before 2.8.41, 3.3.x before 3.3.17, 3.4.x before 3.4.11, and 4.0.x before 4.0.11. The PDOSessionHandler class allows storing sessions on a PDO connection. Under some configurations and with a well-crafted payload, it was possible to do a denial of service on a Symfony application without too much resources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-11386">https://nvd.nist.gov/vuln/detail/CVE-2018-11386</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/</a></li>
<li><a href="https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler">https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4262">https://www.debian.org/security/2018/dsa-4262</a></li>
<li><a href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4">https://github.com/advisories/GHSA-r2rq-3h56-fqm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:14:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/symfony] Symfony DoS]]></title>
        <id>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</id>
        <link href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4"/>
        <updated>2023-07-25T17:48:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the HttpFoundation component in Symfony 2.7.x before 2.7.48, 2.8.x before 2.8.41, 3.3.x before 3.3.17, 3.4.x before 3.4.11, and 4.0.x before 4.0.11. The PDOSessionHandler class allows storing sessions on a PDO connection. Under some configurations and with a well-crafted payload, it was possible to do a denial of service on a Symfony application without too much resources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-11386">https://nvd.nist.gov/vuln/detail/CVE-2018-11386</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/G4XNBMFW33H47O5TZGA7JYCVLDBCXAJV/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UBQK7JDXIELADIPGZIOUCZKMAJM5LSBW/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WU5N2TZFNGXDGMXMPP7LZCWTFLENF6WH/</a></li>
<li><a href="https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler">https://symfony.com/blog/cve-2018-11386-denial-of-service-when-using-pdosessionhandler</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4262">https://www.debian.org/security/2018/dsa-4262</a></li>
<li><a href="https://github.com/advisories/GHSA-r2rq-3h56-fqm4">https://github.com/advisories/GHSA-r2rq-3h56-fqm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r2rq-3h56-fqm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:14:36.000Z</published>
    </entry>
</feed>