<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-07-26T20:01:26.406Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar]]></title>
        <id>https://github.com/advisories/GHSA-296q-rj83-g9rq</id>
        <link href="https://github.com/advisories/GHSA-296q-rj83-g9rq"/>
        <updated>2024-07-26T14:28:29.000Z</updated>
        <content type="html"><![CDATA[<h2 id="usd-2024-0009--reflected-xss-in-oveleon-cookiebar">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>
<h3 id="details">Details</h3>
<p><strong>Advisory ID</strong>: usd-2024-0009 
<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href="https://www.usd.de/">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>
<h3 id="affected-component">Affected Component</h3>
<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>
<h3 id="desciption">Desciption</h3>
<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.
The <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>
<h3 id="fix">Fix</h3>
<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>
</li>
<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>
</li>
<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>
<li><a href="https://github.com/advisories/GHSA-296q-rj83-g9rq">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-296q-rj83-g9rq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-26T14:28:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar]]></title>
        <id>https://github.com/advisories/GHSA-296q-rj83-g9rq</id>
        <link href="https://github.com/advisories/GHSA-296q-rj83-g9rq"/>
        <updated>2024-07-26T14:28:29.000Z</updated>
        <content type="html"><![CDATA[<h2 id="usd-2024-0009--reflected-xss-in-oveleon-cookiebar">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>
<h3 id="details">Details</h3>
<p><strong>Advisory ID</strong>: usd-2024-0009 
<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href="https://www.usd.de/">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>
<h3 id="affected-component">Affected Component</h3>
<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>
<h3 id="desciption">Desciption</h3>
<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.
The <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>
<h3 id="fix">Fix</h3>
<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>
</li>
<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>
</li>
<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>
<li><a href="https://github.com/advisories/GHSA-296q-rj83-g9rq">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-296q-rj83-g9rq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-26T14:28:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places]]></title>
        <id>https://github.com/advisories/GHSA-3wmx-48g3-x66g</id>
        <link href="https://github.com/advisories/GHSA-3wmx-48g3-x66g"/>
        <updated>2024-07-25T18:08:26.000Z</updated>
        <content type="html"><![CDATA[<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the "administer fields" permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41709">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>
<li><a href="https://backdropcms.org/security/backdrop-sa-core-2024-001">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>
<li><a href="https://github.com/advisories/GHSA-3wmx-48g3-x66g">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wmx-48g3-x66g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T06:31:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places]]></title>
        <id>https://github.com/advisories/GHSA-3wmx-48g3-x66g</id>
        <link href="https://github.com/advisories/GHSA-3wmx-48g3-x66g"/>
        <updated>2024-07-25T18:08:26.000Z</updated>
        <content type="html"><![CDATA[<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the "administer fields" permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41709">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>
<li><a href="https://backdropcms.org/security/backdrop-sa-core-2024-001">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>
<li><a href="https://github.com/advisories/GHSA-3wmx-48g3-x66g">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wmx-48g3-x66g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T06:31:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[craftcms/cms] Craft CMS Allows TOTP Token To Stay Valid After Use]]></title>
        <id>https://github.com/advisories/GHSA-wmx7-pw49-88jx</id>
        <link href="https://github.com/advisories/GHSA-wmx7-pw49-88jx"/>
        <updated>2024-07-25T17:58:02.000Z</updated>
        <content type="html"><![CDATA[<p>Craft CMS 5 allows reuse of TOTP tokens multiple times within the validity period.</p>
<h3 id="impact">Impact</h3>
<p>An attacker is able to re-submit a valid TOTP token to establish an authenticated session. This requires that the attacker has knowledge of the victim's credentials.</p>
<p>A TOTP token can be used multiple times to establish an authenticated session.
<a href="https://www.rfc-editor.org/rfc/rfc6238">RFC 6238</a> insists that an OTP must not be used more than once.</p>
<blockquote>
<p>The verifier MUST NOT accept the second attempt of the OTP after the successful validation has been issued for the first OTP, which ensures one-time only use of an OTP.</p>
</blockquote>
<p>The OWASP Application Security Verification Standard v4.0.3 (ASVS) <a href="https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x11-V2-Authentication.md#v28-one-time-verifier">reiterates
this property with requirement 2.8.4</a>.</p>
<blockquote>
<p>Verify that time-based OTP can be used only once within the validity period.</p>
</blockquote>
<p>It should also be noted that the validity period of an TOTP token is 2 minutes. This makes a successful brute force attack more likely, since the four tokens are valid at the same time.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in Craft 5.2.3.</p>
<p>References:</p>
<p><a href="https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV</a> 2024061701_CraftCMS_TOTP_Valid_After_Use</p>
<p><a href="https://github.com/craftcms/cms/releases/tag/5.2.3">https://github.com/craftcms/cms/releases/tag/5.2.3</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx">https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx</a></li>
<li><a href="https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38">https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38</a></li>
<li><a href="https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use</a></li>
<li><a href="https://github.com/advisories/GHSA-wmx7-pw49-88jx">https://github.com/advisories/GHSA-wmx7-pw49-88jx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmx7-pw49-88jx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-25T17:58:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr ERP CRM vulnerable to remote code execution (RCE) ]]></title>
        <id>https://github.com/advisories/GHSA-vprp-94p9-5jp8</id>
        <link href="https://github.com/advisories/GHSA-vprp-94p9-5jp8"/>
        <updated>2024-07-25T16:44:51.000Z</updated>
        <content type="html"><![CDATA[<p>Dolibarr ERP CRM before 19.0.2 was discovered to contain a remote code execution (RCE) vulnerability via the Computed field parameter under the Users Module Setup function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40137">https://nvd.nist.gov/vuln/detail/CVE-2024-40137</a></li>
<li><a href="https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137">https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137</a></li>
<li><a href="https://github.com/advisories/GHSA-vprp-94p9-5jp8">https://github.com/advisories/GHSA-vprp-94p9-5jp8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vprp-94p9-5jp8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-24T21:31:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[processwire/processwire] ProcessWire Cross Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</id>
        <link href="https://github.com/advisories/GHSA-r9vw-cjf9-xh4x"/>
        <updated>2024-07-19T22:39:58.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in ProcessWire v.3.0.229 allows a remote attacker to execute arbitrary code via a crafted HTML file to the comments functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41597">https://nvd.nist.gov/vuln/detail/CVE-2024-41597</a></li>
<li><a href="https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md">https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md</a></li>
<li><a href="https://github.com/advisories/GHSA-r9vw-cjf9-xh4x">https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-19T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Automad arbitrary file upload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-47mc-qmh2-mqj4</id>
        <link href="https://github.com/advisories/GHSA-47mc-qmh2-mqj4"/>
        <updated>2024-07-19T22:39:52.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the image upload function of Automad v2.0.0 allows attackers to execute arbitrary code via a crafted file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40400">https://nvd.nist.gov/vuln/detail/CVE-2024-40400</a></li>
<li><a href="https://github.com/marcantondahmen/automad/issues/106">https://github.com/marcantondahmen/automad/issues/106</a></li>
<li><a href="https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e">https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e</a></li>
<li><a href="https://github.com/advisories/GHSA-47mc-qmh2-mqj4">https://github.com/advisories/GHSA-47mc-qmh2-mqj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47mc-qmh2-mqj4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[craftcms/cms] Craft CMS SQL injection vulnerability via the GraphQL API endpoint]]></title>
        <id>https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</id>
        <link href="https://github.com/advisories/GHSA-hq4f-mv3q-8wcv"/>
        <updated>2024-07-19T21:44:48.000Z</updated>
        <content type="html"><![CDATA[<p>Craft CMS up to v3.7.31 was discovered to contain a SQL injection vulnerability via the GraphQL API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37843">https://nvd.nist.gov/vuln/detail/CVE-2024-37843</a></li>
<li><a href="https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql">https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql</a></li>
<li><a href="https://github.com/advisories/GHSA-hq4f-mv3q-8wcv">https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-25T21:31:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[opencart/opencart] openCart Server-Side Template Injection (SSTI) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</id>
        <link href="https://github.com/advisories/GHSA-xrh7-2gfq-4rcq"/>
        <updated>2024-07-17T23:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>A Server-Side Template Injection (SSTI) vulnerability in the edit theme function of openCart project v4.0.2.3 allows attackers to execute arbitrary code via injecting a crafted payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40420">https://nvd.nist.gov/vuln/detail/CVE-2024-40420</a></li>
<li><a href="https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md">https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md</a></li>
<li><a href="https://github.com/advisories/GHSA-xrh7-2gfq-4rcq">https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T21:31:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe uses TinyMCE which allows svg files linked in object tags]]></title>
        <id>https://github.com/advisories/GHSA-52cw-pvq9-9m5v</id>
        <link href="https://github.com/advisories/GHSA-52cw-pvq9-9m5v"/>
        <updated>2024-07-22T16:54:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TinyMCE v6 has a configuration value <code>convert_unsafe_embeds</code> set to <code>false</code> which allows svg files containing javascript to be used in <code>&lt;object&gt;</code> or <code>&lt;embed&gt;</code> tags, which can be used as a vector for XSS attacks.</p>
<p>Note that <code>&lt;embed&gt;</code> tags are not allowed by default.</p>
<p>After patching the default value of <code>convert_unsafe_embeds</code> will be set to <code>true</code>. This means that <code>&lt;object&gt;</code> tags will be converted to iframes instead the next time the page is saved, which may break any pages that rely upon previously saved <code>&lt;object&gt;</code> tags. Developers can override this configuration if desired to revert to the original behaviour.</p>
<p>We reviewed the potential impact of this vulnerability within the context of Silverstripe CMS. We concluded this is a medium impact vulnerability given how TinyMCE is used by Silverstripe CMS.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2024-001">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>
<li><a href="https://github.com/advisories/GHSA-5359-pvf2-pw78">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v</a></li>
<li><a href="https://github.com/advisories/GHSA-5359-pvf2-pw78">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2024-001">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>
<li><a href="https://github.com/advisories/GHSA-52cw-pvq9-9m5v">https://github.com/advisories/GHSA-52cw-pvq9-9m5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52cw-pvq9-9m5v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T16:00:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/sylius] Sylius has a security vulnerability via adjustments API endpoint]]></title>
        <id>https://github.com/advisories/GHSA-55rf-8q29-4g43</id>
        <link href="https://github.com/advisories/GHSA-55rf-8q29-4g43"/>
        <updated>2024-07-17T19:13:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A security vulnerability was discovered in the <code>/api/v2/shop/adjustments/{id}</code> endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information. </p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in versions: 1.12.19, 1.13.4 and above. The <code>/api/v2/shop/adjustments/{id}</code> will always return <code>404</code> status.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Using YAML configuration:</p>
<p>Create <code>config/api_platform/Adjustment.yaml</code> file:</p>
<pre><code class="language-yaml"># config/api_platform/Adjustment.yaml

'%sylius.model.adjustment.class%':
    itemOperations:
        shop_get:
            controller: ApiPlatform\Core\Action\NotFoundAction
            read: false
            output: false
</code></pre>
<p>Or using XML configuration:</p>
<p>Copy the original configuration from vendor:</p>
<pre><code class="language-bash">cp vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/Resources/config/api_resources/Adjustment.xml config/api_platform
</code></pre>
<p>And change the <code>shop_get</code> operation in copied <code>config/api_platform/Adjustment.xml</code> file:</p>
<pre><code class="language-xml">&lt;!-- config/api_platform/Adjustment.xml --&gt;

...
&lt;itemOperation name="shop_get"&gt;
    &lt;attribute name="method"&gt;GET&lt;/attribute&gt;
    &lt;attribute name="path"&gt;/shop/adjustments/{id}&lt;/attribute&gt;
    &lt;attribute name="controller"&gt;ApiPlatform\Core\Action\NotFoundAction&lt;/attribute&gt;
    &lt;attribute name="read"&gt;false&lt;/attribute&gt;
    &lt;attribute name="output"&gt;false&lt;/attribute&gt;
&lt;/itemOperation&gt;
...
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Sylius/Sylius/issues">Sylius issues</a></li>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43">https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43</a></li>
<li><a href="https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464">https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40633">https://nvd.nist.gov/vuln/detail/CVE-2024-40633</a></li>
<li><a href="https://github.com/advisories/GHSA-55rf-8q29-4g43">https://github.com/advisories/GHSA-55rf-8q29-4g43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-55rf-8q29-4g43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T14:32:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/sylius] Sylius has a security vulnerability via adjustments API endpoint]]></title>
        <id>https://github.com/advisories/GHSA-55rf-8q29-4g43</id>
        <link href="https://github.com/advisories/GHSA-55rf-8q29-4g43"/>
        <updated>2024-07-17T19:13:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A security vulnerability was discovered in the <code>/api/v2/shop/adjustments/{id}</code> endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information. </p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in versions: 1.12.19, 1.13.4 and above. The <code>/api/v2/shop/adjustments/{id}</code> will always return <code>404</code> status.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Using YAML configuration:</p>
<p>Create <code>config/api_platform/Adjustment.yaml</code> file:</p>
<pre><code class="language-yaml"># config/api_platform/Adjustment.yaml

'%sylius.model.adjustment.class%':
    itemOperations:
        shop_get:
            controller: ApiPlatform\Core\Action\NotFoundAction
            read: false
            output: false
</code></pre>
<p>Or using XML configuration:</p>
<p>Copy the original configuration from vendor:</p>
<pre><code class="language-bash">cp vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/Resources/config/api_resources/Adjustment.xml config/api_platform
</code></pre>
<p>And change the <code>shop_get</code> operation in copied <code>config/api_platform/Adjustment.xml</code> file:</p>
<pre><code class="language-xml">&lt;!-- config/api_platform/Adjustment.xml --&gt;

...
&lt;itemOperation name="shop_get"&gt;
    &lt;attribute name="method"&gt;GET&lt;/attribute&gt;
    &lt;attribute name="path"&gt;/shop/adjustments/{id}&lt;/attribute&gt;
    &lt;attribute name="controller"&gt;ApiPlatform\Core\Action\NotFoundAction&lt;/attribute&gt;
    &lt;attribute name="read"&gt;false&lt;/attribute&gt;
    &lt;attribute name="output"&gt;false&lt;/attribute&gt;
&lt;/itemOperation&gt;
...
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Sylius/Sylius/issues">Sylius issues</a></li>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43">https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43</a></li>
<li><a href="https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464">https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40633">https://nvd.nist.gov/vuln/detail/CVE-2024-40633</a></li>
<li><a href="https://github.com/advisories/GHSA-55rf-8q29-4g43">https://github.com/advisories/GHSA-55rf-8q29-4g43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-55rf-8q29-4g43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T14:32:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Framework has a Cross-site Scripting vulnerability with encoded payload]]></title>
        <id>https://github.com/advisories/GHSA-chx7-9x8h-r5mg</id>
        <link href="https://github.com/advisories/GHSA-chx7-9x8h-r5mg"/>
        <updated>2024-07-22T16:54:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bad actor with access to edit content in the CMS could send a specifically crafted encoded payload to the server, which could be used to inject a JavaScript payload on the front end of the site. The payload would be sanitised on the client-side, but server-side sanitisation doesn't catch it.</p>
<p>The server-side sanitisation logic has been updated to sanitise against this type of attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2024-32981">https://www.silverstripe.org/download/security-releases/cve-2024-32981</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-chx7-9x8h-r5mg">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-chx7-9x8h-r5mg</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/b8d20dc9d531550e06fd7da7a0eafa551922e2e1">https://github.com/silverstripe/silverstripe-framework/commit/b8d20dc9d531550e06fd7da7a0eafa551922e2e1</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2024-32981">https://www.silverstripe.org/download/security-releases/cve-2024-32981</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32981">https://nvd.nist.gov/vuln/detail/CVE-2024-32981</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-32981.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2024-32981.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-chx7-9x8h-r5mg">https://github.com/advisories/GHSA-chx7-9x8h-r5mg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chx7-9x8h-r5mg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T14:27:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/reports] Silverstripe Reports are still accessible even when `canView()` returns false]]></title>
        <id>https://github.com/advisories/GHSA-89q6-98xx-4ffw</id>
        <link href="https://github.com/advisories/GHSA-89q6-98xx-4ffw"/>
        <updated>2024-07-22T16:54:52.000Z</updated>
        <content type="html"><![CDATA[<p>Reports can be accessed by their direct URL by any user who has access to view the reports admin section, even if the <code>canView()</code> method for that report returns <code>false</code>.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2024-29885">https://www.silverstripe.org/download/security-releases/cve-2024-29885</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-reports/security/advisories/GHSA-89q6-98xx-4ffw">https://github.com/silverstripe/silverstripe-reports/security/advisories/GHSA-89q6-98xx-4ffw</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-reports/commit/0351106c18ad4246d983b5f4e082c09c382121f4">https://github.com/silverstripe/silverstripe-reports/commit/0351106c18ad4246d983b5f4e082c09c382121f4</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2024-29885">https://www.silverstripe.org/download/security-releases/cve-2024-29885</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29885">https://nvd.nist.gov/vuln/detail/CVE-2024-29885</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/reports/CVE-2024-29885.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/reports/CVE-2024-29885.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-89q6-98xx-4ffw">https://github.com/advisories/GHSA-89q6-98xx-4ffw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-89q6-98xx-4ffw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T14:26:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[torrentpier/torrentpier] TorrentPier Deserialization of Untrusted Data vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fg86-4c2r-7wxw</id>
        <link href="https://github.com/advisories/GHSA-fg86-4c2r-7wxw"/>
        <updated>2024-07-15T21:38:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In <code>torrentpier/library/includes/functions.php</code>, <code>get_tracks()</code> uses the unsafe native PHP serialization format to deserialize user-controlled cookies:</p>
<p><a href="https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60">https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60</a></p>
<h3 id="poc">PoC</h3>
<p>One can use <a href="https://github.com/ambionics/phpggc/"><code>phpggc</code></a> and the chain <code>Guzzle/FW1</code> to write PHP code to an arbitrary file, and execute commands on the system. For instance, the cookie <code>bb_t</code> will be deserialized when browsing to <code>viewforum.php</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/torrentpier/torrentpier/security/advisories/GHSA-fg86-4c2r-7wxw">https://github.com/torrentpier/torrentpier/security/advisories/GHSA-fg86-4c2r-7wxw</a></li>
<li><a href="https://github.com/torrentpier/torrentpier/commit/ed37e6e522f345f2b46147c6f53c1ab6dec1db9e">https://github.com/torrentpier/torrentpier/commit/ed37e6e522f345f2b46147c6f53c1ab6dec1db9e</a></li>
<li><a href="https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60">https://github.com/torrentpier/torrentpier/blob/84f6c9f4a081d9ffff4c233098758280304bf50f/library/includes/functions.php#L41-L60</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40624">https://nvd.nist.gov/vuln/detail/CVE-2024-40624</a></li>
<li><a href="https://github.com/advisories/GHSA-fg86-4c2r-7wxw">https://github.com/advisories/GHSA-fg86-4c2r-7wxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg86-4c2r-7wxw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-15T17:48:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[web-auth/webauthn-framework] The FIDO2/Webauthn Support for PHP library allows enumeration of valid usernames ]]></title>
        <id>https://github.com/advisories/GHSA-875x-g8p7-5w27</id>
        <link href="https://github.com/advisories/GHSA-875x-g8p7-5w27"/>
        <updated>2024-07-15T21:38:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The ProfileBasedRequestOptionsBuilder method returns allowedCredentials without any credentials if no username was found.</p>
<h3 id="details">Details</h3>
<p>When WebAuthn is used as the first or only authentication method, an attacker can enumerate usernames based on the absence of the <code>allowedCredentials</code> property in the assertion options response. This allows enumeration of valid or invalid usernames.</p>
<h4 id="proposal-how-to-resolve-it">Proposal how to resolve it:</h4>
<pre><code>return $this-&gt;publicKeyCredentialRequestOptionsFactory-&gt;create(
            $this-&gt;profile,
            count($allowedCredentials) &lt;= 0 ? self::getRandomCredentials(): $allowedCredentials,
            $optionsRequest-&gt;userVerification,
            $extensions
);

private static function getRandomCredentials(): array
{
        $credentialSources = [];
        for ($i = 0; $i &lt;= rand(0,1); $i++) {
            $credentialSources[] = new PublicKeyCredentialSource(
                random_bytes(32),
                "public-key",
                [],
                "basic",
                new EmptyTrustPath(),
                Uuid::v7(),
                random_bytes(77),
                Uuid::v7()-&gt;__toString(),
                rand(0, 6000),
                null
            );
        }
        return array_map(
            static fn (PublicKeyCredentialSource $credential): PublicKeyCredentialDescriptor =&gt; $credential-&gt;getPublicKeyCredentialDescriptor(),
            $credentialSources
        );
}
</code></pre>
<h3 id="poc">PoC</h3>
<p>curl <a href="https://example.com/assertion/options">https://example.com/assertion/options</a> <br>  -H 'content-type: application/json' <br>  --data-raw '{"username":"NotMeRandomUsername123"}'</p>
<h3 id="impact">Impact</h3>
<p>By knowing which usernames are valid, attackers can focus their efforts on a smaller set of potential targets, increasing the efficiency and likelihood of successful attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/web-auth/webauthn-framework/security/advisories/GHSA-875x-g8p7-5w27">https://github.com/web-auth/webauthn-framework/security/advisories/GHSA-875x-g8p7-5w27</a></li>
<li><a href="https://github.com/web-auth/webauthn-framework/commit/a9d1352897fba552e659e1445a771dec2d4ed05a">https://github.com/web-auth/webauthn-framework/commit/a9d1352897fba552e659e1445a771dec2d4ed05a</a></li>
<li><a href="https://github.com/web-auth/webauthn-lib/commit/b6798de27cdedd8681fe4c9b13ace0ff2456d18b">https://github.com/web-auth/webauthn-lib/commit/b6798de27cdedd8681fe4c9b13ace0ff2456d18b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39912">https://nvd.nist.gov/vuln/detail/CVE-2024-39912</a></li>
<li><a href="https://github.com/web-auth/webauthn-framework/commit/64de11f6cddc71e56c76e0cc4573bf94d02be045">https://github.com/web-auth/webauthn-framework/commit/64de11f6cddc71e56c76e0cc4573bf94d02be045</a></li>
<li><a href="https://github.com/advisories/GHSA-875x-g8p7-5w27">https://github.com/advisories/GHSA-875x-g8p7-5w27</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-875x-g8p7-5w27</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-15T16:37:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[web-auth/webauthn-lib] The FIDO2/Webauthn Support for PHP library allows enumeration of valid usernames ]]></title>
        <id>https://github.com/advisories/GHSA-875x-g8p7-5w27</id>
        <link href="https://github.com/advisories/GHSA-875x-g8p7-5w27"/>
        <updated>2024-07-15T21:38:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The ProfileBasedRequestOptionsBuilder method returns allowedCredentials without any credentials if no username was found.</p>
<h3 id="details">Details</h3>
<p>When WebAuthn is used as the first or only authentication method, an attacker can enumerate usernames based on the absence of the <code>allowedCredentials</code> property in the assertion options response. This allows enumeration of valid or invalid usernames.</p>
<h4 id="proposal-how-to-resolve-it">Proposal how to resolve it:</h4>
<pre><code>return $this-&gt;publicKeyCredentialRequestOptionsFactory-&gt;create(
            $this-&gt;profile,
            count($allowedCredentials) &lt;= 0 ? self::getRandomCredentials(): $allowedCredentials,
            $optionsRequest-&gt;userVerification,
            $extensions
);

private static function getRandomCredentials(): array
{
        $credentialSources = [];
        for ($i = 0; $i &lt;= rand(0,1); $i++) {
            $credentialSources[] = new PublicKeyCredentialSource(
                random_bytes(32),
                "public-key",
                [],
                "basic",
                new EmptyTrustPath(),
                Uuid::v7(),
                random_bytes(77),
                Uuid::v7()-&gt;__toString(),
                rand(0, 6000),
                null
            );
        }
        return array_map(
            static fn (PublicKeyCredentialSource $credential): PublicKeyCredentialDescriptor =&gt; $credential-&gt;getPublicKeyCredentialDescriptor(),
            $credentialSources
        );
}
</code></pre>
<h3 id="poc">PoC</h3>
<p>curl <a href="https://example.com/assertion/options">https://example.com/assertion/options</a> <br>  -H 'content-type: application/json' <br>  --data-raw '{"username":"NotMeRandomUsername123"}'</p>
<h3 id="impact">Impact</h3>
<p>By knowing which usernames are valid, attackers can focus their efforts on a smaller set of potential targets, increasing the efficiency and likelihood of successful attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/web-auth/webauthn-framework/security/advisories/GHSA-875x-g8p7-5w27">https://github.com/web-auth/webauthn-framework/security/advisories/GHSA-875x-g8p7-5w27</a></li>
<li><a href="https://github.com/web-auth/webauthn-framework/commit/a9d1352897fba552e659e1445a771dec2d4ed05a">https://github.com/web-auth/webauthn-framework/commit/a9d1352897fba552e659e1445a771dec2d4ed05a</a></li>
<li><a href="https://github.com/web-auth/webauthn-lib/commit/b6798de27cdedd8681fe4c9b13ace0ff2456d18b">https://github.com/web-auth/webauthn-lib/commit/b6798de27cdedd8681fe4c9b13ace0ff2456d18b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39912">https://nvd.nist.gov/vuln/detail/CVE-2024-39912</a></li>
<li><a href="https://github.com/web-auth/webauthn-framework/commit/64de11f6cddc71e56c76e0cc4573bf94d02be045">https://github.com/web-auth/webauthn-framework/commit/64de11f6cddc71e56c76e0cc4573bf94d02be045</a></li>
<li><a href="https://github.com/advisories/GHSA-875x-g8p7-5w27">https://github.com/advisories/GHSA-875x-g8p7-5w27</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-875x-g8p7-5w27</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-15T16:37:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/wordpress] Login by Auth0 plugin for WordPress vulnerable to Reflected Cross-Site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-x6p7-44rh-m3rr</id>
        <link href="https://github.com/advisories/GHSA-x6p7-44rh-m3rr"/>
        <updated>2024-07-11T19:52:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Auth0 WordPress plugin allows site administrators to opt-in to allowing the use of a <code>wle</code> parameter, which can be passed to the WordPress login page by end users. When this parameter is supplied using an expected value (which is randomly generated by the plugin, by default), the end user can fallback to using WordPress' native authentication behavior. (This is generally intended as an emergency fallback for administrators to still be able to access their dashboard in the event something goes wrong.)</p>
<p>In previous versions of the plugin, under specific conditions, this parameter could potentially accept an arbitrary string that would be improperly rendered, potentially allowing for a cross-site scripting (XSS) attack on the login page.</p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to v4.6.1 of the plugin to resolve the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/auth0/wordpress/security/advisories/GHSA-x6p7-44rh-m3rr">https://github.com/auth0/wordpress/security/advisories/GHSA-x6p7-44rh-m3rr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6813">https://nvd.nist.gov/vuln/detail/CVE-2023-6813</a></li>
<li><a href="https://plugins.trac.wordpress.org/changeset?sfp_email=&amp;sfph_mail=&amp;reponame=&amp;old=3114611%40auth0&amp;new=3114611%40auth0&amp;sfp_email=&amp;sfph_mail=">https://plugins.trac.wordpress.org/changeset?sfp_email=&amp;sfph_mail=&amp;reponame=&amp;old=3114611%40auth0&amp;new=3114611%40auth0&amp;sfp_email=&amp;sfph_mail=</a></li>
<li><a href="https://www.wordfence.com/threat-intel/vulnerabilities/id/0c4e0d48-fde1-45dd-8e06-4582cf677579?source=cve">https://www.wordfence.com/threat-intel/vulnerabilities/id/0c4e0d48-fde1-45dd-8e06-4582cf677579?source=cve</a></li>
<li><a href="https://github.com/advisories/GHSA-x6p7-44rh-m3rr">https://github.com/advisories/GHSA-x6p7-44rh-m3rr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x6p7-44rh-m3rr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-11T19:52:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[auth0/wordpress] Duplicate Advisory: Login by Auth0 plugin for WordPress vulnerable to Reflected Cross-Site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-52jw-f3jq-hhwg</id>
        <link href="https://github.com/advisories/GHSA-52jw-f3jq-hhwg"/>
        <updated>2024-07-11T19:50:02.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-x6p7-44rh-m3rr. This link has been maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>The Login by Auth0 plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘wle’ parameter in all versions up to, and including, 4.6.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6813">https://nvd.nist.gov/vuln/detail/CVE-2023-6813</a></li>
<li><a href="https://plugins.trac.wordpress.org/changeset?sfp_email=&amp;sfph_mail=&amp;reponame=&amp;old=3114611%40auth0&amp;new=3114611%40auth0&amp;sfp_email=&amp;sfph_mail=">https://plugins.trac.wordpress.org/changeset?sfp_email=&amp;sfph_mail=&amp;reponame=&amp;old=3114611%40auth0&amp;new=3114611%40auth0&amp;sfp_email=&amp;sfph_mail=</a></li>
<li><a href="https://www.wordfence.com/threat-intel/vulnerabilities/id/0c4e0d48-fde1-45dd-8e06-4582cf677579?source=cve">https://www.wordfence.com/threat-intel/vulnerabilities/id/0c4e0d48-fde1-45dd-8e06-4582cf677579?source=cve</a></li>
<li><a href="https://github.com/advisories/GHSA-52jw-f3jq-hhwg">https://github.com/advisories/GHSA-52jw-f3jq-hhwg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52jw-f3jq-hhwg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-10T09:30:40.000Z</published>
    </entry>
</feed>