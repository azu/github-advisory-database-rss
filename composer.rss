<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2023-12-29T20:01:16.201Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Cross-Site Request Forgery (CSRF) in automad/automad]]></title>
        <id>https://github.com/advisories/GHSA-4j8w-p6hv-3qxc</id>
        <link href="https://github.com/advisories/GHSA-4j8w-p6hv-3qxc"/>
        <updated>2023-12-29T19:35:03.000Z</updated>
        <content type="html"><![CDATA[<p>automad up to 1.10.9 does not implement anti-CSRF tokens by default, making it vulnerable Cross-Site Request Forgery (CSRF). An attacker may exploit this vulnerability to force an admin into creating or deleting users. An exploit has been disclosed publicly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-7038">https://nvd.nist.gov/vuln/detail/CVE-2023-7038</a></li>
<li><a href="https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Cross-Site%20Request%20Forgery%20(CSRF)">https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Cross-Site%20Request%20Forgery%20(CSRF)</a></li>
<li><a href="https://vuldb.com/?ctiid.248687">https://vuldb.com/?ctiid.248687</a></li>
<li><a href="https://vuldb.com/?id.248687">https://vuldb.com/?id.248687</a></li>
<li><a href="https://github.com/advisories/GHSA-4j8w-p6hv-3qxc">https://github.com/advisories/GHSA-4j8w-p6hv-3qxc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4j8w-p6hv-3qxc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-21T18:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Authenticated Blind SSRF in automad/automad]]></title>
        <id>https://github.com/advisories/GHSA-q5q3-qm26-9jwm</id>
        <link href="https://github.com/advisories/GHSA-q5q3-qm26-9jwm"/>
        <updated>2023-12-29T19:32:23.000Z</updated>
        <content type="html"><![CDATA[<p>automad up to 1.10.9 is vulnerable to an authenticated blind server-side request forgery in <code>importUrl</code> as the <code>import</code> function on the <code>FileController.php</code> file was not properly validating the value of the <code>importUrl</code> argument. This issue may allow attackers to perform a port scan against the local environment or abuse some service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-7037">https://nvd.nist.gov/vuln/detail/CVE-2023-7037</a></li>
<li><a href="https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Authenticated%20Blind%20SSRF">https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Authenticated%20Blind%20SSRF</a></li>
<li><a href="https://vuldb.com/?ctiid.248686">https://vuldb.com/?ctiid.248686</a></li>
<li><a href="https://vuldb.com/?id.248686">https://vuldb.com/?id.248686</a></li>
<li><a href="https://github.com/advisories/GHSA-q5q3-qm26-9jwm">https://github.com/advisories/GHSA-q5q3-qm26-9jwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q5q3-qm26-9jwm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-21T18:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Stored Cross-site scripting affecting automad/automad]]></title>
        <id>https://github.com/advisories/GHSA-7j9h-ch38-474r</id>
        <link href="https://github.com/advisories/GHSA-7j9h-ch38-474r"/>
        <updated>2023-12-29T19:28:59.000Z</updated>
        <content type="html"><![CDATA[<p>automad up to 1.10.9 is vulnerable to stored cross-site scripting in the <code>sitename</code> argument because the <code>SharedController</code> class that handles form data and saving shared information does not properly sanitize the user input on the client side when rendering the data. The attack may be launched remotely and an exploit has been disclosed publicly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-7035">https://nvd.nist.gov/vuln/detail/CVE-2023-7035</a></li>
<li><a href="https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Stored%20Cross%20Site%20Scripting%20(XSS)">https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Stored%20Cross%20Site%20Scripting%20(XSS)</a></li>
<li><a href="https://vuldb.com/?ctiid.248684">https://vuldb.com/?ctiid.248684</a></li>
<li><a href="https://vuldb.com/?id.248684">https://vuldb.com/?id.248684</a></li>
<li><a href="https://github.com/advisories/GHSA-7j9h-ch38-474r">https://github.com/advisories/GHSA-7j9h-ch38-474r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7j9h-ch38-474r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-21T15:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Unrestricted File Upload affecting automad]]></title>
        <id>https://github.com/advisories/GHSA-fpph-mqc8-h6q5</id>
        <link href="https://github.com/advisories/GHSA-fpph-mqc8-h6q5"/>
        <updated>2023-12-29T18:35:31.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in automad up to 1.10.9. This affects the function upload of the file <code>FileCollectionController.php</code> of the component <code>Content Type Handler</code>. The manipulation leads to unrestricted upload. The attack may be launched remotely and an exploit has been disclosed publicly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-7036">https://nvd.nist.gov/vuln/detail/CVE-2023-7036</a></li>
<li><a href="https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Unrestricted%20File%20Upload">https://github.com/screetsec/VDD/tree/main/Automad%20CMS/Unrestricted%20File%20Upload</a></li>
<li><a href="https://vuldb.com/?ctiid.248685">https://vuldb.com/?ctiid.248685</a></li>
<li><a href="https://vuldb.com/?id.248685">https://vuldb.com/?id.248685</a></li>
<li><a href="https://github.com/advisories/GHSA-fpph-mqc8-h6q5">https://github.com/advisories/GHSA-fpph-mqc8-h6q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpph-mqc8-h6q5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-21T18:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[winter/wn-backend-module] Winter CMS Stored XSS through Backend ColorPicker FormWidget]]></title>
        <id>https://github.com/advisories/GHSA-43w4-4j3c-jx29</id>
        <link href="https://github.com/advisories/GHSA-43w4-4j3c-jx29"/>
        <updated>2023-12-29T02:11:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users with access to backend forms that include a <a href="https://wintercms.com/docs/v1.2/docs/backend/forms#color-picker">ColorPicker FormWidget</a> can provide a value that would then be rendered unescaped in the backend form, potentially allowing for a stored XSS attack.</p>
<p>By default, only the Brand Settings (<code>backend.manage_branding</code>) and Mail Brand Settings (<code>system.manage_mail_templates</code>) forms include the <code>colorpicker</code> formwidget, however it is also common for theme's to include it on their Theme Customization (<code>cms.manage_theme_options</code>) form.</p>
<p>Although this was a security issue, it's important to note that its severity is relatively low. To exploit the vulnerability, an attacker would already need to have trusted access to the Winter CMS backend and they would then need to convince a user with higher privileges than them to visit an affected Form in the backend.</p>
<p>These two factors limit the potential harm of this vulnerability. That being said, all users are advised to update to the latest version (1.2.4) to ensure their systems remain secure.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v1.2.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Apply <a href="https://github.com/wintercms/winter/commit/517f65dfae679b57575b047de13c5af48915a5ba">https://github.com/wintercms/winter/commit/517f65dfae679b57575b047de13c5af48915a5ba</a> manually if unable to upgrade to v1.2.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/wintercms/winter/security/advisories/GHSA-43w4-4j3c-jx29">https://github.com/wintercms/winter/security/advisories/GHSA-43w4-4j3c-jx29</a></li>
<li><a href="https://github.com/wintercms/winter/commit/517f65dfae679b57575b047de13c5af48915a5ba">https://github.com/wintercms/winter/commit/517f65dfae679b57575b047de13c5af48915a5ba</a></li>
<li><a href="https://github.com/advisories/GHSA-43w4-4j3c-jx29">https://github.com/advisories/GHSA-43w4-4j3c-jx29</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43w4-4j3c-jx29</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-28T22:32:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[winter/wn-system-module] Winter CMS Stored XSS through privileged upload of Media Manager file followed by renaming]]></title>
        <id>https://github.com/advisories/GHSA-4wvw-75qh-fqjp</id>
        <link href="https://github.com/advisories/GHSA-4wvw-75qh-fqjp"/>
        <updated>2023-12-28T22:32:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users with the <code>media.manage_media</code> permission can upload files to the Media Manager and rename them after uploading. Previously, media manager files were only sanitized on upload, not on renaming, which could have allowed a stored XSS attack.</p>
<p>Although this was a security issue, it's important to note that its severity is low. To exploit the vulnerability, an attacker would already need to have trusted permissions in the Winter CMS backend. This means they would already have extensive access and control within the system. Additionally, to execute the XSS, the attacker would need to convince the victim to directly visit the URL of the maliciously uploaded SVG, and the application would have to be using local storage where uploaded files are served under the same domain as the application itself instead of a CDN. This is because all SVGs in Winter CMS are rendered through an img tag, which prevents any payloads from being executed directly.</p>
<p>These two factors significantly limit the potential harm of this vulnerability. That being said, all users are advised to update to the latest version (1.2.4) to ensure their systems remain secure.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in v1.2.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Apply <a href="https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491">https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491</a> and <a href="https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491">https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491</a> manually if unable to upgrade to v1.2.4.</p>
<h3 id="references">References</h3>
<p>Related: <a href="https://github.com/wintercms/winter/security/advisories/GHSA-wjw2-4j7j-6gc3">https://github.com/wintercms/winter/security/advisories/GHSA-wjw2-4j7j-6gc3</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/wintercms/winter/security/advisories/GHSA-4wvw-75qh-fqjp">https://github.com/wintercms/winter/security/advisories/GHSA-4wvw-75qh-fqjp</a></li>
<li><a href="https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491">https://github.com/wintercms/winter/commit/2969daeea8dee64d292dbaa3778ea251e2a7e491</a></li>
<li><a href="https://github.com/advisories/GHSA-4wvw-75qh-fqjp">https://github.com/advisories/GHSA-4wvw-75qh-fqjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wvw-75qh-fqjp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-28T22:32:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mainwp/mainwp] MainWP Dashboard SQL Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-87fg-9x5w-j3rm</id>
        <link href="https://github.com/advisories/GHSA-87fg-9x5w-j3rm"/>
        <updated>2023-12-28T22:11:58.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability in MainWP MainWP Dashboard – WordPress Manager for Multiple Websites Maintenance.This issue affects MainWP Dashboard – WordPress Manager for Multiple Websites Maintenance: from n/a through 4.4.3.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38519">https://nvd.nist.gov/vuln/detail/CVE-2023-38519</a></li>
<li><a href="https://patchstack.com/database/vulnerability/mainwp/wordpress-mainwp-plugin-4-4-3-3-sql-injection-vulnerability?_s_id=cve">https://patchstack.com/database/vulnerability/mainwp/wordpress-mainwp-plugin-4-4-3-3-sql-injection-vulnerability?_s_id=cve</a></li>
<li><a href="https://github.com/mainwp/mainwp/commit/8df951c0e8b2c2646cc57fc66b00767551cac400">https://github.com/mainwp/mainwp/commit/8df951c0e8b2c2646cc57fc66b00767551cac400</a></li>
<li><a href="https://github.com/advisories/GHSA-87fg-9x5w-j3rm">https://github.com/advisories/GHSA-87fg-9x5w-j3rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87fg-9x5w-j3rm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-20T15:30:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckeditor/ckeditor] HTML comments vulnerability allowing to execute JavaScript code]]></title>
        <id>https://github.com/advisories/GHSA-7h26-63m7-qhf2</id>
        <link href="https://github.com/advisories/GHSA-7h26-63m7-qhf2"/>
        <updated>2023-12-28T05:05:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="affected-packages">Affected packages</h3>
<p>The vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4.</p>
<h3 id="impact">Impact</h3>
<p>A potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed comments HTML bypassing content sanitization, which could result in executing JavaScript code. It affects all users using the CKEditor 4 at version &lt; 4.17.0.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been recognized and patched. The fix will be available in version 4.17.0.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@cksource.com">security@cksource.com</a> if you have any questions or comments about this advisory.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The CKEditor 4 team would like to thank William Bowling (<a href="https://github.com/wbowling">wbowling</a>) for recognizing and reporting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-7h26-63m7-qhf2">https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-7h26-63m7-qhf2</a></li>
<li><a href="https://github.com/ckeditor/ckeditor4/blob/major/CHANGES.md#ckeditor-417">https://github.com/ckeditor/ckeditor4/blob/major/CHANGES.md#ckeditor-417</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41165">https://nvd.nist.gov/vuln/detail/CVE-2021-41165</a></li>
<li><a href="https://www.drupal.org/sa-core-2021-011">https://www.drupal.org/sa-core-2021-011</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-7h26-63m7-qhf2">https://github.com/advisories/GHSA-7h26-63m7-qhf2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h26-63m7-qhf2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-11-17T21:58:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-core] TYPO3 Arbitrary File Read via Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-3gjc-mp82-fj4q</id>
        <link href="https://github.com/advisories/GHSA-3gjc-mp82-fj4q"/>
        <updated>2023-12-27T15:08:03.000Z</updated>
        <content type="html"><![CDATA[<p>In TYPO3 11.5.24, the filelist component allows attackers (who have access to the administrator panel) to read arbitrary files via directory traversal in the baseuri field, as demonstrated by POST <code>/typo3/record/edit</code> with <code>../../../ in data[sys_file_storage]*[data][sDEF][lDEF][basePath][vDEF]</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30451">https://nvd.nist.gov/vuln/detail/CVE-2023-30451</a></li>
<li><a href="http://packetstormsecurity.com/files/176274/TYPO3-11.5.24-Path-Traversal.html">http://packetstormsecurity.com/files/176274/TYPO3-11.5.24-Path-Traversal.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3gjc-mp82-fj4q">https://github.com/advisories/GHSA-3gjc-mp82-fj4q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gjc-mp82-fj4q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-25T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Cross Site Request Forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-qp42-5pj7-4ccm</id>
        <link href="https://github.com/advisories/GHSA-qp42-5pj7-4ccm"/>
        <updated>2023-12-27T15:07:36.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS 9 before 9.2.3 is vulnerable to Cross Site Request Forgery (CSRF) via <code>/ccm/system/dialogs/logs/delete_all/submit</code>. An attacker can force an admin user to delete server report logs on a web application to which they are currently authenticated.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48652">https://nvd.nist.gov/vuln/detail/CVE-2023-48652</a></li>
<li><a href="https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes">https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes</a></li>
<li><a href="https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates">https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-qp42-5pj7-4ccm">https://github.com/advisories/GHSA-qp42-5pj7-4ccm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qp42-5pj7-4ccm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-25T09:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aws/aws-sdk-php] Potential URI resolution path traversal in the AWS SDK for PHP]]></title>
        <id>https://github.com/advisories/GHSA-557v-xcg6-rm5m</id>
        <link href="https://github.com/advisories/GHSA-557v-xcg6-rm5m"/>
        <updated>2023-12-22T22:27:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Within the scope of requests to S3 object keys and/or prefixes containing a Unix double-dot, a URI path traversal is possible. The issue exists in the<code>buildEndpoint</code> method in the <code>RestSerializer</code> component of the AWS SDK for PHP v3 prior to 3.288.1. The <code>buildEndpoint</code> method relies on the Guzzle Psr7 <code>UriResolver</code> utility, which strips dot segments from the request path in accordance with RFC 3986. Under certain conditions, this could lead to an arbitrary object being accessed.</p>
<p>Versions of the AWS SDK for PHP v3 before 3.288.1 are affected by this issue.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to the AWS SDK for PHP &gt;= 3.288.1, if you are on version &lt; 3.288.1.</p>
<h3 id="references">References</h3>
<p>RFC 3986 - <a href="https://datatracker.ietf.org/doc/html/rfc3986#section-5.2.4">https://datatracker.ietf.org/doc/html/rfc3986</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please contact <a href="mailto:aws-security@amazon.com">AWS's Security team</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aws/aws-sdk-php/security/advisories/GHSA-557v-xcg6-rm5m">https://github.com/aws/aws-sdk-php/security/advisories/GHSA-557v-xcg6-rm5m</a></li>
<li><a href="https://github.com/aws/aws-sdk-php/commit/aebc9f801438746ac4ade327551576cb75f635f2">https://github.com/aws/aws-sdk-php/commit/aebc9f801438746ac4ade327551576cb75f635f2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51651">https://nvd.nist.gov/vuln/detail/CVE-2023-51651</a></li>
<li><a href="https://github.com/aws/aws-sdk-php/releases/tag/3.288.1">https://github.com/aws/aws-sdk-php/releases/tag/3.288.1</a></li>
<li><a href="https://github.com/advisories/GHSA-557v-xcg6-rm5m">https://github.com/advisories/GHSA-557v-xcg6-rm5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-557v-xcg6-rm5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-21T23:16:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microweber/microweber] Business Logic Errors in microweber/microweber]]></title>
        <id>https://github.com/advisories/GHSA-qjfx-fvx7-3wvw</id>
        <link href="https://github.com/advisories/GHSA-qjfx-fvx7-3wvw"/>
        <updated>2023-12-21T15:59:27.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been identified in microweber where users can purchase items with a coupon code. If the admin disables the use of the coupon code functionality, but the user sends requests to the API that handles the coupon code, the user can exploit the vulnerability and obtain items at a lower price.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6832">https://nvd.nist.gov/vuln/detail/CVE-2023-6832</a></li>
<li><a href="https://github.com/microweber/microweber/commit/890e9838aabbc799ebefcf6b20ba25e0fd6dbfee">https://github.com/microweber/microweber/commit/890e9838aabbc799ebefcf6b20ba25e0fd6dbfee</a></li>
<li><a href="https://huntr.com/bounties/53105a20-f4b1-45ad-a734-0349de6d7376">https://huntr.com/bounties/53105a20-f4b1-45ad-a734-0349de6d7376</a></li>
<li><a href="https://github.com/advisories/GHSA-qjfx-fvx7-3wvw">https://github.com/advisories/GHSA-qjfx-fvx7-3wvw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjfx-fvx7-3wvw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-15T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Core Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m648-hpf8-qcjw</id>
        <link href="https://github.com/advisories/GHSA-m648-hpf8-qcjw"/>
        <updated>2023-12-20T21:03:24.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in Drupal Core Form API does not properly handle certain form input from cross-site requests, which can lead to other vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13663">https://nvd.nist.gov/vuln/detail/CVE-2020-13663</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-004">https://www.drupal.org/sa-core-2020-004</a></li>
<li><a href="https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693">https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693</a></li>
<li><a href="https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6">https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6</a></li>
<li><a href="https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb">https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb</a></li>
<li><a href="https://github.com/advisories/GHSA-m648-hpf8-qcjw">https://github.com/advisories/GHSA-m648-hpf8-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m648-hpf8-qcjw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:05:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Core Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m648-hpf8-qcjw</id>
        <link href="https://github.com/advisories/GHSA-m648-hpf8-qcjw"/>
        <updated>2023-12-20T21:03:24.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in Drupal Core Form API does not properly handle certain form input from cross-site requests, which can lead to other vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13663">https://nvd.nist.gov/vuln/detail/CVE-2020-13663</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-004">https://www.drupal.org/sa-core-2020-004</a></li>
<li><a href="https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693">https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693</a></li>
<li><a href="https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6">https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6</a></li>
<li><a href="https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb">https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb</a></li>
<li><a href="https://github.com/advisories/GHSA-m648-hpf8-qcjw">https://github.com/advisories/GHSA-m648-hpf8-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m648-hpf8-qcjw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:05:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Core Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m648-hpf8-qcjw</id>
        <link href="https://github.com/advisories/GHSA-m648-hpf8-qcjw"/>
        <updated>2023-12-20T21:03:24.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in Drupal Core Form API does not properly handle certain form input from cross-site requests, which can lead to other vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13663">https://nvd.nist.gov/vuln/detail/CVE-2020-13663</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-004">https://www.drupal.org/sa-core-2020-004</a></li>
<li><a href="https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693">https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693</a></li>
<li><a href="https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6">https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6</a></li>
<li><a href="https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb">https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb</a></li>
<li><a href="https://github.com/advisories/GHSA-m648-hpf8-qcjw">https://github.com/advisories/GHSA-m648-hpf8-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m648-hpf8-qcjw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:05:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Core Cross-Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m648-hpf8-qcjw</id>
        <link href="https://github.com/advisories/GHSA-m648-hpf8-qcjw"/>
        <updated>2023-12-20T21:03:24.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in Drupal Core Form API does not properly handle certain form input from cross-site requests, which can lead to other vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13663">https://nvd.nist.gov/vuln/detail/CVE-2020-13663</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-004">https://www.drupal.org/sa-core-2020-004</a></li>
<li><a href="https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693">https://github.com/drupal/core/commit/5f3c4d80fd77df0cfa87722b446db54040d55693</a></li>
<li><a href="https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6">https://github.com/drupal/core/commit/bc3235dcb5570bbda62ef9547e7604ee060b72c6</a></li>
<li><a href="https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb">https://github.com/drupal/core/commit/faf3243c4ce03bbaab386af2b272b363fd0dfddb</a></li>
<li><a href="https://github.com/advisories/GHSA-m648-hpf8-qcjw">https://github.com/advisories/GHSA-m648-hpf8-qcjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m648-hpf8-qcjw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:05:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Cache poisoning in drupal/core]]></title>
        <id>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</id>
        <link href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x"/>
        <updated>2023-12-20T21:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>In certain scenarios, Drupal's JSON:API module will output error backtraces. With some configurations, this may cause sensitive information to be cached and made available to anonymous users, leading to privilege escalation.</p>
<p>This vulnerability only affects sites with the JSON:API module enabled, and can be mitigated by uninstalling JSON:API.</p>
<p>The core REST and contributed GraphQL modules are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5256">https://nvd.nist.gov/vuln/detail/CVE-2023-5256</a></li>
<li><a href="https://www.drupal.org/sa-core-2023-006">https://www.drupal.org/sa-core-2023-006</a></li>
<li><a href="https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742">https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742</a></li>
<li><a href="https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc">https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc</a></li>
<li><a href="https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24">https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24</a></li>
<li><a href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x">https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-28T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Cache poisoning in drupal/core]]></title>
        <id>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</id>
        <link href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x"/>
        <updated>2023-12-20T21:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>In certain scenarios, Drupal's JSON:API module will output error backtraces. With some configurations, this may cause sensitive information to be cached and made available to anonymous users, leading to privilege escalation.</p>
<p>This vulnerability only affects sites with the JSON:API module enabled, and can be mitigated by uninstalling JSON:API.</p>
<p>The core REST and contributed GraphQL modules are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5256">https://nvd.nist.gov/vuln/detail/CVE-2023-5256</a></li>
<li><a href="https://www.drupal.org/sa-core-2023-006">https://www.drupal.org/sa-core-2023-006</a></li>
<li><a href="https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742">https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742</a></li>
<li><a href="https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc">https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc</a></li>
<li><a href="https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24">https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24</a></li>
<li><a href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x">https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-28T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Cache poisoning in drupal/core]]></title>
        <id>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</id>
        <link href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x"/>
        <updated>2023-12-20T21:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>In certain scenarios, Drupal's JSON:API module will output error backtraces. With some configurations, this may cause sensitive information to be cached and made available to anonymous users, leading to privilege escalation.</p>
<p>This vulnerability only affects sites with the JSON:API module enabled, and can be mitigated by uninstalling JSON:API.</p>
<p>The core REST and contributed GraphQL modules are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5256">https://nvd.nist.gov/vuln/detail/CVE-2023-5256</a></li>
<li><a href="https://www.drupal.org/sa-core-2023-006">https://www.drupal.org/sa-core-2023-006</a></li>
<li><a href="https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742">https://github.com/drupal/core/commit/1cd2741c2b43f6ad1bdfc121b8d9ec3b87e70742</a></li>
<li><a href="https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc">https://github.com/drupal/core/commit/5495dc530e3acd056478245bfe1828210c6da7dc</a></li>
<li><a href="https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24">https://github.com/drupal/core/commit/d4fe67562ee3ea0d9ecb9672d2945d94c5633d24</a></li>
<li><a href="https://github.com/advisories/GHSA-rjqg-3h9m-fx5x">https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjqg-3h9m-fx5x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-28T21:30:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpsysinfo/phpsysinfo] Phpsysinfo Cross Site Request Forgery (CSRF) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-67gv-xrw7-p72w</id>
        <link href="https://github.com/advisories/GHSA-67gv-xrw7-p72w"/>
        <updated>2023-12-19T21:17:20.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery (CSRF) vulnerability in Phpsysinfo version 3.4.3 allows a remote attacker to obtain sensitive information via a crafted page in the XML.php file.  Phpsysinfo 3.4.3 disables the functionality by default but the users may enable the vulnerable functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49006">https://nvd.nist.gov/vuln/detail/CVE-2023-49006</a></li>
<li><a href="https://github.com/Hebing123/cve/issues/5">https://github.com/Hebing123/cve/issues/5</a></li>
<li><a href="https://github.com/phpsysinfo/phpsysinfo/commit/4f2cee505e4f2e9b369a321063ff2c5e0c34ba45">https://github.com/phpsysinfo/phpsysinfo/commit/4f2cee505e4f2e9b369a321063ff2c5e0c34ba45</a></li>
<li><a href="https://huntr.com/bounties/ca6d669f-fd82-4188-aae2-69e08740d982/">https://huntr.com/bounties/ca6d669f-fd82-4188-aae2-69e08740d982/</a></li>
<li><a href="https://github.com/advisories/GHSA-67gv-xrw7-p72w">https://github.com/advisories/GHSA-67gv-xrw7-p72w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67gv-xrw7-p72w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-19T12:30:19.000Z</published>
    </entry>
</feed>