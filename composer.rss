<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-06-07T22:01:07.856Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework potential Cross-site Scripting vector in `Zend_Service_ReCaptcha_MailHide`]]></title>
        <id>https://github.com/advisories/GHSA-4v57-pwvf-x35j</id>
        <link href="https://github.com/advisories/GHSA-4v57-pwvf-x35j"/>
        <updated>2024-06-07T21:59:21.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Service_ReCaptcha_MailHide</code> had a potential XSS vulnerability. Due to the fact that the email address was never validated, and because its use of <code>htmlentities()</code> did not include the encoding argument, it was potentially possible for a malicious user aware of the issue to inject a specially crafted multibyte string as an attack via the CAPTCHA's email argument</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml</a></li>
<li><a href="https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05">https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05</a></li>
<li><a href="https://github.com/advisories/GHSA-4v57-pwvf-x35j">https://github.com/advisories/GHSA-4v57-pwvf-x35j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v57-pwvf-x35j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:59:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework potential Cross-site Scripting vector in `Zend_Service_ReCaptcha_MailHide`]]></title>
        <id>https://github.com/advisories/GHSA-4v57-pwvf-x35j</id>
        <link href="https://github.com/advisories/GHSA-4v57-pwvf-x35j"/>
        <updated>2024-06-07T21:59:21.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Service_ReCaptcha_MailHide</code> had a potential XSS vulnerability. Due to the fact that the email address was never validated, and because its use of <code>htmlentities()</code> did not include the encoding argument, it was potentially possible for a malicious user aware of the issue to inject a specially crafted multibyte string as an attack via the CAPTCHA's email argument</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml</a></li>
<li><a href="https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05">https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05</a></li>
<li><a href="https://github.com/advisories/GHSA-4v57-pwvf-x35j">https://github.com/advisories/GHSA-4v57-pwvf-x35j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v57-pwvf-x35j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:59:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework potential Cross-site Scripting vector in `Zend_Service_ReCaptcha_MailHide`]]></title>
        <id>https://github.com/advisories/GHSA-4v57-pwvf-x35j</id>
        <link href="https://github.com/advisories/GHSA-4v57-pwvf-x35j"/>
        <updated>2024-06-07T21:59:21.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Service_ReCaptcha_MailHide</code> had a potential XSS vulnerability. Due to the fact that the email address was never validated, and because its use of <code>htmlentities()</code> did not include the encoding argument, it was potentially possible for a malicious user aware of the issue to inject a specially crafted multibyte string as an attack via the CAPTCHA's email argument</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-05.yaml</a></li>
<li><a href="https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05">https://web.archive.org/web/20210411002217/https://framework.zend.com/security/advisory/ZF2010-05</a></li>
<li><a href="https://github.com/advisories/GHSA-4v57-pwvf-x35j">https://github.com/advisories/GHSA-4v57-pwvf-x35j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v57-pwvf-x35j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:59:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-form] Zend-Form vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</id>
        <link href="https://github.com/advisories/GHSA-gvpp-6jrj-5pqc"/>
        <updated>2024-06-07T21:58:35.000Z</updated>
        <content type="html"><![CDATA[<p>Many Zend Framework 2 view helpers were using the escapeHtml() view helper in order to escape HTML attributes, instead of the more appropriate escapeHtmlAttr(). In situations where user data and/or JavaScript is used to seed attributes, this can lead to potential cross site scripting (XSS) attack vectors.</p>
<p>Vulnerable view helpers include:</p>
<ul>
<li>All <code>Zend\Form</code> view helpers.</li>
<li>Most <code>Zend\Navigation</code> (aka <code>Zend\View\Helper\Navigation\*</code>) view helpers.</li>
<li>All "HTML Element" view helpers: <code>htmlFlash()</code>, <code>htmlPage()</code>, <code>htmlQuickTime()</code>.</li>
<li><code>Zend\View\Helper\Gravatar</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-form/commit/6fe40314e8e3477494aadd03d62573bd1c212bd1">https://github.com/zendframework/zend-form/commit/6fe40314e8e3477494aadd03d62573bd1c212bd1</a></li>
<li><a href="https://github.com/zendframework/zend-form/commit/d7a1f5bc4626b1df990391502a868b28c37ba65d">https://github.com/zendframework/zend-form/commit/d7a1f5bc4626b1df990391502a868b28c37ba65d</a></li>
<li><a href="https://github.com/zendframework/zend-form/commit/fd43a951460c4bc60c77a566129705f6bdb9c61b">https://github.com/zendframework/zend-form/commit/fd43a951460c4bc60c77a566129705f6bdb9c61b</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2014-03">https://framework.zend.com/security/advisory/ZF2014-03</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-form/ZF2014-03.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-form/ZF2014-03.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gvpp-6jrj-5pqc">https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:58:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-form] Zend-Form vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</id>
        <link href="https://github.com/advisories/GHSA-gvpp-6jrj-5pqc"/>
        <updated>2024-06-07T21:58:35.000Z</updated>
        <content type="html"><![CDATA[<p>Many Zend Framework 2 view helpers were using the escapeHtml() view helper in order to escape HTML attributes, instead of the more appropriate escapeHtmlAttr(). In situations where user data and/or JavaScript is used to seed attributes, this can lead to potential cross site scripting (XSS) attack vectors.</p>
<p>Vulnerable view helpers include:</p>
<ul>
<li>All <code>Zend\Form</code> view helpers.</li>
<li>Most <code>Zend\Navigation</code> (aka <code>Zend\View\Helper\Navigation\*</code>) view helpers.</li>
<li>All "HTML Element" view helpers: <code>htmlFlash()</code>, <code>htmlPage()</code>, <code>htmlQuickTime()</code>.</li>
<li><code>Zend\View\Helper\Gravatar</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-form/commit/6fe40314e8e3477494aadd03d62573bd1c212bd1">https://github.com/zendframework/zend-form/commit/6fe40314e8e3477494aadd03d62573bd1c212bd1</a></li>
<li><a href="https://github.com/zendframework/zend-form/commit/d7a1f5bc4626b1df990391502a868b28c37ba65d">https://github.com/zendframework/zend-form/commit/d7a1f5bc4626b1df990391502a868b28c37ba65d</a></li>
<li><a href="https://github.com/zendframework/zend-form/commit/fd43a951460c4bc60c77a566129705f6bdb9c61b">https://github.com/zendframework/zend-form/commit/fd43a951460c4bc60c77a566129705f6bdb9c61b</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2014-03">https://framework.zend.com/security/advisory/ZF2014-03</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-form/ZF2014-03.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-form/ZF2014-03.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gvpp-6jrj-5pqc">https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvpp-6jrj-5pqc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:58:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aimeos/aimeos-core] aimeos-core arbitrary file uopload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cr7j-rwmv-vgch</id>
        <link href="https://github.com/advisories/GHSA-cr7j-rwmv-vgch"/>
        <updated>2024-06-07T21:56:03.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the image upload function of aimeos-core v2024.04 allows attackers to execute arbitrary code via uploading a crafted PHP file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36811">https://nvd.nist.gov/vuln/detail/CVE-2024-36811</a></li>
<li><a href="https://github.com/aimeos/aimeos-core/commit/13e163126adff48f987b3b6faca28551effe0205">https://github.com/aimeos/aimeos-core/commit/13e163126adff48f987b3b6faca28551effe0205</a></li>
<li><a href="https://github.com/aimeos/aimeos-core/commit/5eea7aa933ac7402044bc6d282f96fba44475ee2">https://github.com/aimeos/aimeos-core/commit/5eea7aa933ac7402044bc6d282f96fba44475ee2</a></li>
<li><a href="https://drive.google.com/file/d/1QJWwaDB6smLCuNp10yZKWgpELTQJax31/view?usp=sharing">https://drive.google.com/file/d/1QJWwaDB6smLCuNp10yZKWgpELTQJax31/view?usp=sharing</a></li>
<li><a href="https://drive.google.com/file/d/1n5_t-zmKHbx3H47xdhR5kuHTDc0Gxur3/view?usp=sharing">https://drive.google.com/file/d/1n5_t-zmKHbx3H47xdhR5kuHTDc0Gxur3/view?usp=sharing</a></li>
<li><a href="https://github.com/ssshah2131/CVE/blob/main/Aimeos_RCE">https://github.com/ssshah2131/CVE/blob/main/Aimeos_RCE</a></li>
<li><a href="https://github.com/advisories/GHSA-cr7j-rwmv-vgch">https://github.com/advisories/GHSA-cr7j-rwmv-vgch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cr7j-rwmv-vgch</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-07T21:31:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework Potential XSS or HTML Injection vector in Zend_Json]]></title>
        <id>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</id>
        <link href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5"/>
        <updated>2024-06-07T21:52:45.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Json_Encoder</code> was not taking into account the solidus character (/) during encoding, leading to incompatibilities with the JSON specification, and opening the potential for XSS or HTML injection attacks when returning HTML within a JSON string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml</a></li>
<li><a href="https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06">https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06</a></li>
<li><a href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5">https://github.com/advisories/GHSA-vvm3-rv48-j3g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework Potential XSS or HTML Injection vector in Zend_Json]]></title>
        <id>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</id>
        <link href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5"/>
        <updated>2024-06-07T21:52:45.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Json_Encoder</code> was not taking into account the solidus character (/) during encoding, leading to incompatibilities with the JSON specification, and opening the potential for XSS or HTML injection attacks when returning HTML within a JSON string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml</a></li>
<li><a href="https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06">https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06</a></li>
<li><a href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5">https://github.com/advisories/GHSA-vvm3-rv48-j3g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework Potential XSS or HTML Injection vector in Zend_Json]]></title>
        <id>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</id>
        <link href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5"/>
        <updated>2024-06-07T21:52:45.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Json_Encoder</code> was not taking into account the solidus character (/) during encoding, leading to incompatibilities with the JSON specification, and opening the potential for XSS or HTML injection attacks when returning HTML within a JSON string.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-06.yaml</a></li>
<li><a href="https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06">https://web.archive.org/web/20200228150030/https://framework.zend.com/security/advisory/ZF2010-06</a></li>
<li><a href="https://github.com/advisories/GHSA-vvm3-rv48-j3g5">https://github.com/advisories/GHSA-vvm3-rv48-j3g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvm3-rv48-j3g5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-http] Zend-HTTP URL Rewrite vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cg8w-5jrc-675g</id>
        <link href="https://github.com/advisories/GHSA-cg8w-5jrc-675g"/>
        <updated>2024-06-07T21:52:13.000Z</updated>
        <content type="html"><![CDATA[<p>zend-diactoros (and, by extension, Expressive), zend-http (and, by extension, Zend Framework MVC projects), and zend-feed (specifically, its PubSubHubbub sub-component) each contain a potential URL rewrite exploit. In each case, marshaling a request URI includes logic that introspects HTTP request headers that are specific to a given server-side URL rewrite mechanism.</p>
<p>When these headers are present on systems not running the specific URL rewriting mechanism, the logic would still trigger, allowing a malicious client or proxy to emulate the headers to request arbitrary content.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-http/commit/44197164a270259116162a442f639085ea24094a">https://github.com/zendframework/zend-http/commit/44197164a270259116162a442f639085ea24094a</a></li>
<li><a href="https://github.com/zendframework/zend-http/commit/5234f4a9e8137b731ab95d6a17879d4eb8fb9e39">https://github.com/zendframework/zend-http/commit/5234f4a9e8137b731ab95d6a17879d4eb8fb9e39</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2018-01">https://framework.zend.com/security/advisory/ZF2018-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-http/ZF2018-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-http/ZF2018-01.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-cg8w-5jrc-675g">https://github.com/advisories/GHSA-cg8w-5jrc-675g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg8w-5jrc-675g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-07T21:52:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] ZendFramework1 Potential Security Issues in Bundled Dojo Library]]></title>
        <id>https://github.com/advisories/GHSA-w5mj-j45q-m638</id>
        <link href="https://github.com/advisories/GHSA-w5mj-j45q-m638"/>
        <updated>2024-06-07T21:49:58.000Z</updated>
        <content type="html"><![CDATA[<p>In mid-March, 2010, the Dojo Foundation issued a Security Advisory indicating potential security issues with specific files in Dojo Toolkit. Details of the advisory may be found on the Dojo website:</p>
<p><a href="http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory/">http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory/</a>
In particular, several files in the Dojo tree were identified as having potential exploits, and the Dojo team also advised disabling or removing any PHP scripts in the tree when deploying to production.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml</a></li>
<li><a href="https://web.archive.org/web/20210509072723/https://framework.zend.com/security/advisory/ZF2010-07">https://web.archive.org/web/20210509072723/https://framework.zend.com/security/advisory/ZF2010-07</a></li>
<li><a href="http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory">http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory</a></li>
<li><a href="https://github.com/advisories/GHSA-w5mj-j45q-m638">https://github.com/advisories/GHSA-w5mj-j45q-m638</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5mj-j45q-m638</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:49:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] ZendFramework1 Potential Security Issues in Bundled Dojo Library]]></title>
        <id>https://github.com/advisories/GHSA-w5mj-j45q-m638</id>
        <link href="https://github.com/advisories/GHSA-w5mj-j45q-m638"/>
        <updated>2024-06-07T21:49:58.000Z</updated>
        <content type="html"><![CDATA[<p>In mid-March, 2010, the Dojo Foundation issued a Security Advisory indicating potential security issues with specific files in Dojo Toolkit. Details of the advisory may be found on the Dojo website:</p>
<p><a href="http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory/">http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory/</a>
In particular, several files in the Dojo tree were identified as having potential exploits, and the Dojo team also advised disabling or removing any PHP scripts in the tree when deploying to production.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2010-07.yaml</a></li>
<li><a href="https://web.archive.org/web/20210509072723/https://framework.zend.com/security/advisory/ZF2010-07">https://web.archive.org/web/20210509072723/https://framework.zend.com/security/advisory/ZF2010-07</a></li>
<li><a href="http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory">http://dojotoolkit.org/blog/post/dylan/2010/03/dojo-security-advisory</a></li>
<li><a href="https://github.com/advisories/GHSA-w5mj-j45q-m638">https://github.com/advisories/GHSA-w5mj-j45q-m638</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5mj-j45q-m638</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:49:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-json] Zend-JSON vulnerable to XXE/XEE attacks]]></title>
        <id>https://github.com/advisories/GHSA-8x2v-pcg7-94f4</id>
        <link href="https://github.com/advisories/GHSA-8x2v-pcg7-94f4"/>
        <updated>2024-06-07T21:49:12.000Z</updated>
        <content type="html"><![CDATA[<p>Numerous components utilizing PHP's DOMDocument, SimpleXML, and xml_parse functionality are vulnerable to two types of attacks:</p>
<ul>
<li>XML eXternal Entity (XXE) Injection attacks. The above mentioned extensions are insecure by default, allowing external entities to be specified by adding a specific DOCTYPE element to XML documents and strings. By exploiting this vulnerability an application may be coerced to open arbitrary files and/or TCP connections.</li>
<li>XML Entity Expansion (XEE) vectors, leading to Denial of Service vectors. XEE attacks occur when the XML DOCTYPE declaration includes XML entity definitions that contain either recursive or circular references; this leads to CPU and memory consumption, making Denial of Service exploits trivial to implement.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-json/commit/078e77a6e59cdbf32a94691afe3523db340f5da9">https://github.com/zendframework/zend-json/commit/078e77a6e59cdbf32a94691afe3523db340f5da9</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/7a747fbefe566c28a94b7e7ca37c15fc09ba4754">https://github.com/zendframework/zend-json/commit/7a747fbefe566c28a94b7e7ca37c15fc09ba4754</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/865f96ecbc5e080fccb5e75304ce06ac57d2ce22">https://github.com/zendframework/zend-json/commit/865f96ecbc5e080fccb5e75304ce06ac57d2ce22</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/89fc6f760478dc15519cb3ef4e4976425dc6ee10">https://github.com/zendframework/zend-json/commit/89fc6f760478dc15519cb3ef4e4976425dc6ee10</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/9fe5103dc9be472fa0a443ca36619a2953b6f88e">https://github.com/zendframework/zend-json/commit/9fe5103dc9be472fa0a443ca36619a2953b6f88e</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/acc60fc3fe56f5b0ad218c4c5789b21f11bc3a89">https://github.com/zendframework/zend-json/commit/acc60fc3fe56f5b0ad218c4c5789b21f11bc3a89</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2014-01">https://framework.zend.com/security/advisory/ZF2014-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-json/ZF2014-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-json/ZF2014-01.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8x2v-pcg7-94f4">https://github.com/advisories/GHSA-8x2v-pcg7-94f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8x2v-pcg7-94f4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-07T21:49:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-json] Zend-JSON vulnerable to XXE/XEE attacks]]></title>
        <id>https://github.com/advisories/GHSA-8x2v-pcg7-94f4</id>
        <link href="https://github.com/advisories/GHSA-8x2v-pcg7-94f4"/>
        <updated>2024-06-07T21:49:12.000Z</updated>
        <content type="html"><![CDATA[<p>Numerous components utilizing PHP's DOMDocument, SimpleXML, and xml_parse functionality are vulnerable to two types of attacks:</p>
<ul>
<li>XML eXternal Entity (XXE) Injection attacks. The above mentioned extensions are insecure by default, allowing external entities to be specified by adding a specific DOCTYPE element to XML documents and strings. By exploiting this vulnerability an application may be coerced to open arbitrary files and/or TCP connections.</li>
<li>XML Entity Expansion (XEE) vectors, leading to Denial of Service vectors. XEE attacks occur when the XML DOCTYPE declaration includes XML entity definitions that contain either recursive or circular references; this leads to CPU and memory consumption, making Denial of Service exploits trivial to implement.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-json/commit/078e77a6e59cdbf32a94691afe3523db340f5da9">https://github.com/zendframework/zend-json/commit/078e77a6e59cdbf32a94691afe3523db340f5da9</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/7a747fbefe566c28a94b7e7ca37c15fc09ba4754">https://github.com/zendframework/zend-json/commit/7a747fbefe566c28a94b7e7ca37c15fc09ba4754</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/865f96ecbc5e080fccb5e75304ce06ac57d2ce22">https://github.com/zendframework/zend-json/commit/865f96ecbc5e080fccb5e75304ce06ac57d2ce22</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/89fc6f760478dc15519cb3ef4e4976425dc6ee10">https://github.com/zendframework/zend-json/commit/89fc6f760478dc15519cb3ef4e4976425dc6ee10</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/9fe5103dc9be472fa0a443ca36619a2953b6f88e">https://github.com/zendframework/zend-json/commit/9fe5103dc9be472fa0a443ca36619a2953b6f88e</a></li>
<li><a href="https://github.com/zendframework/zend-json/commit/acc60fc3fe56f5b0ad218c4c5789b21f11bc3a89">https://github.com/zendframework/zend-json/commit/acc60fc3fe56f5b0ad218c4c5789b21f11bc3a89</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2014-01">https://framework.zend.com/security/advisory/ZF2014-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-json/ZF2014-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-json/ZF2014-01.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8x2v-pcg7-94f4">https://github.com/advisories/GHSA-8x2v-pcg7-94f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8x2v-pcg7-94f4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-07T21:49:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework Local file disclosure via XXE injection in Zend_XmlRpc]]></title>
        <id>https://github.com/advisories/GHSA-229x-22xc-2f2w</id>
        <link href="https://github.com/advisories/GHSA-229x-22xc-2f2w"/>
        <updated>2024-06-07T21:39:44.000Z</updated>
        <content type="html"><![CDATA[<p>Zend_XmlRpc is vulnerable to XML eXternal Entity (XXE) Injection attacks. The SimpleXMLElement class (SimpleXML PHP extension) is used in an insecure way to parse XML data. External entities can be specified by adding a specific DOCTYPE element to XML-RPC requests. By exploiting this vulnerability an application may be coerced to open arbitrary files and/or TCP connections.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-01.yaml</a></li>
<li><a href="https://web.archive.org/web/20210620092354/https://framework.zend.com/security/advisory/ZF2012-01">https://web.archive.org/web/20210620092354/https://framework.zend.com/security/advisory/ZF2012-01</a></li>
<li><a href="https://github.com/advisories/GHSA-229x-22xc-2f2w">https://github.com/advisories/GHSA-229x-22xc-2f2w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-229x-22xc-2f2w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-07T21:39:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] Zendframework Denial of Service vector via XEE injection]]></title>
        <id>https://github.com/advisories/GHSA-2jx7-xg83-j2m7</id>
        <link href="https://github.com/advisories/GHSA-2jx7-xg83-j2m7"/>
        <updated>2024-06-07T21:39:24.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Dom</code>, <code>Zend_Feed</code>, <code>Zend_Soap</code>, and <code>Zend_XmlRpc</code> are vulnerable to XML Entity Expansion (XEE) vectors, leading to Denial of Service vectors. XEE attacks occur when the XML DOCTYPE declaration includes XML entity definitions that contain either recursive or circular references; this leads to CPU and memory consumption, making Denial of Service exploits trivial to implement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://framework.zend.com/security/advisory/ZF2012-02">https://framework.zend.com/security/advisory/ZF2012-02</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-02.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2012-02.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-2jx7-xg83-j2m7">https://github.com/advisories/GHSA-2jx7-xg83-j2m7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2jx7-xg83-j2m7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-07T21:39:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] ZendFramework Cross-site Scripting vector in `Zend_Filter_StripTags`]]></title>
        <id>https://github.com/advisories/GHSA-gwpm-pm6x-h7rj</id>
        <link href="https://github.com/advisories/GHSA-gwpm-pm6x-h7rj"/>
        <updated>2024-06-07T21:38:39.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend_Filter_StripTags</code> is a filtering class analogous to PHP's <code>strip_tags()</code> function. In addition to stripping HTML tags and selectively keeping those provided in a whitelist, it also provides the ability to whitelist specific attributes to retain per whitelisted tag.</p>
<h1 id="the-reporter-discovered-that-attributes-that-contained-whitespace-and-in-paricular-line-breaks-surrounding-the-attribute-assignment-operator-would-not-be-stripped-regardless-of-whether-or-not-they-were-whitelisted-as-examples-of-input-affected---a-hrefhttpframeworkzendcomissues-onclick">The reporter discovered that attributes that contained whitespace, and in paricular, line breaks, surrounding the attribute assignment operator would not be stripped, regardless of whether or not they were whitelisted. As examples of input affected:
```

&lt;a href="<a href="http://framework.zend.com/issues">http://framework.zend.com/issues</a>" onclick</h1>
<p>"alert('Broken'); return false;"&gt;Issues</p>
<pre><code>When passed to the following code:
</code></pre>
<p>$filter = new Zend_Filter_StripTags(array('a' =&gt; array('href')));
$value  = $filter-&gt;($html);</p>
<pre><code>then the "onclick" attribute would remain, even though it was not specified in the tag's whitelist. This could open potential cross-site scripting attack (XSS) vectors.

## Recommendations
If you were using `Zend_Filter_StripTags` and utlizing the attribute whitelisting functionality, you should immediately upgrade to Zend Framework 1.7.6 or above; regardless, it is always best to run the most current version of the framework.

Also, if relying on `Zend_Filter_StripTags` to prevent XSS, the only way to reliably do so is to strip all tags, and never to whitelist. If you are whitelisting, you should consider finding a reliable XSS filter through which to run your output; we recommend HTML Purifier.
### References

- &lt;https://framework.zend.com/security/advisory/ZF2009-02&gt;
- &lt;https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2009-02.yaml&gt;
- &lt;https://github.com/advisories/GHSA-gwpm-pm6x-h7rj&gt;
</code></pre>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwpm-pm6x-h7rj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:38:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-session] Zend-Session session validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-96c6-m98x-hxjx</id>
        <link href="https://github.com/advisories/GHSA-96c6-m98x-hxjx"/>
        <updated>2024-06-07T21:25:24.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend\Session</code> session validators do not work as expected if set prior to the start of a session.</p>
<p>For instance, the following test case fails (where $this-&gt;manager is an instance of <code>Zend\Session\SessionManager</code>):</p>
<pre><code>$this
    -&gt;manager
    -&gt;getValidatorChain()
    -&gt;attach('session.validate', array(new RemoteAddr(), 'isValid'));

$this-&gt;manager-&gt;start();

$this-&gt;assertSame(
    array(
        'Zend\Session\Validator\RemoteAddr' =3D&gt; '',
    ),
    $_SESSION['__ZF']['_VALID']
);
</code></pre>
<p>The implication is that subsequent calls to <code>Zend\Session\SessionManager#start()</code> (in later requests, assuming a session was created) will not have any validator metadata attached, which causes any validator metadata to be re-built from scratch, thus marking the session as valid.</p>
<p>An attacker is thus able to simply ignore session validators such as <code>RemoteAddr</code> or <code>HttpUserAgent</code>, since the "signature" that these validators check against is not being stored in the session.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-session/commit/05fa95488b5ade513c4dcc56051a7ddb1c94f341">https://github.com/zendframework/zend-session/commit/05fa95488b5ade513c4dcc56051a7ddb1c94f341</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/1272fc047121720130690c324413629d8f63d210">https://github.com/zendframework/zend-session/commit/1272fc047121720130690c324413629d8f63d210</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/35014ab0ae17c2a169320f182697ee9fe73d841e">https://github.com/zendframework/zend-session/commit/35014ab0ae17c2a169320f182697ee9fe73d841e</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/3b1a65b3193a4219f5c4259ab8735f9ad254a021">https://github.com/zendframework/zend-session/commit/3b1a65b3193a4219f5c4259ab8735f9ad254a021</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/6a27a9fddd8f5b12b3af0de6309181ff5946dd0e">https://github.com/zendframework/zend-session/commit/6a27a9fddd8f5b12b3af0de6309181ff5946dd0e</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/7c4b73dd64e01001946aac76c6deddfe1c6ef0be">https://github.com/zendframework/zend-session/commit/7c4b73dd64e01001946aac76c6deddfe1c6ef0be</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/7fc94bd6a60342416242a3899d63072c471b33d3">https://github.com/zendframework/zend-session/commit/7fc94bd6a60342416242a3899d63072c471b33d3</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/93b43aa0ca5348d29034f67195ffa3f4082878d5">https://github.com/zendframework/zend-session/commit/93b43aa0ca5348d29034f67195ffa3f4082878d5</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/9868f84513536446b0bac81cc95e0130b0a6fc9c">https://github.com/zendframework/zend-session/commit/9868f84513536446b0bac81cc95e0130b0a6fc9c</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/a3382bfd3067f527762294b5fc622550988e6862">https://github.com/zendframework/zend-session/commit/a3382bfd3067f527762294b5fc622550988e6862</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/b1903947e285568344b3458e4524b016ce311072">https://github.com/zendframework/zend-session/commit/b1903947e285568344b3458e4524b016ce311072</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/ff9236cc4c4944b5f5a6fbfee01420ef82c4fa91">https://github.com/zendframework/zend-session/commit/ff9236cc4c4944b5f5a6fbfee01420ef82c4fa91</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2015-01">https://framework.zend.com/security/advisory/ZF2015-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-session/ZF2015-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-session/ZF2015-01.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-96c6-m98x-hxjx">https://github.com/advisories/GHSA-96c6-m98x-hxjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96c6-m98x-hxjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:25:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zend-session] Zend-Session session validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-96c6-m98x-hxjx</id>
        <link href="https://github.com/advisories/GHSA-96c6-m98x-hxjx"/>
        <updated>2024-06-07T21:25:24.000Z</updated>
        <content type="html"><![CDATA[<p><code>Zend\Session</code> session validators do not work as expected if set prior to the start of a session.</p>
<p>For instance, the following test case fails (where $this-&gt;manager is an instance of <code>Zend\Session\SessionManager</code>):</p>
<pre><code>$this
    -&gt;manager
    -&gt;getValidatorChain()
    -&gt;attach('session.validate', array(new RemoteAddr(), 'isValid'));

$this-&gt;manager-&gt;start();

$this-&gt;assertSame(
    array(
        'Zend\Session\Validator\RemoteAddr' =3D&gt; '',
    ),
    $_SESSION['__ZF']['_VALID']
);
</code></pre>
<p>The implication is that subsequent calls to <code>Zend\Session\SessionManager#start()</code> (in later requests, assuming a session was created) will not have any validator metadata attached, which causes any validator metadata to be re-built from scratch, thus marking the session as valid.</p>
<p>An attacker is thus able to simply ignore session validators such as <code>RemoteAddr</code> or <code>HttpUserAgent</code>, since the "signature" that these validators check against is not being stored in the session.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zendframework/zend-session/commit/05fa95488b5ade513c4dcc56051a7ddb1c94f341">https://github.com/zendframework/zend-session/commit/05fa95488b5ade513c4dcc56051a7ddb1c94f341</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/1272fc047121720130690c324413629d8f63d210">https://github.com/zendframework/zend-session/commit/1272fc047121720130690c324413629d8f63d210</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/35014ab0ae17c2a169320f182697ee9fe73d841e">https://github.com/zendframework/zend-session/commit/35014ab0ae17c2a169320f182697ee9fe73d841e</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/3b1a65b3193a4219f5c4259ab8735f9ad254a021">https://github.com/zendframework/zend-session/commit/3b1a65b3193a4219f5c4259ab8735f9ad254a021</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/6a27a9fddd8f5b12b3af0de6309181ff5946dd0e">https://github.com/zendframework/zend-session/commit/6a27a9fddd8f5b12b3af0de6309181ff5946dd0e</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/7c4b73dd64e01001946aac76c6deddfe1c6ef0be">https://github.com/zendframework/zend-session/commit/7c4b73dd64e01001946aac76c6deddfe1c6ef0be</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/7fc94bd6a60342416242a3899d63072c471b33d3">https://github.com/zendframework/zend-session/commit/7fc94bd6a60342416242a3899d63072c471b33d3</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/93b43aa0ca5348d29034f67195ffa3f4082878d5">https://github.com/zendframework/zend-session/commit/93b43aa0ca5348d29034f67195ffa3f4082878d5</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/9868f84513536446b0bac81cc95e0130b0a6fc9c">https://github.com/zendframework/zend-session/commit/9868f84513536446b0bac81cc95e0130b0a6fc9c</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/a3382bfd3067f527762294b5fc622550988e6862">https://github.com/zendframework/zend-session/commit/a3382bfd3067f527762294b5fc622550988e6862</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/b1903947e285568344b3458e4524b016ce311072">https://github.com/zendframework/zend-session/commit/b1903947e285568344b3458e4524b016ce311072</a></li>
<li><a href="https://github.com/zendframework/zend-session/commit/ff9236cc4c4944b5f5a6fbfee01420ef82c4fa91">https://github.com/zendframework/zend-session/commit/ff9236cc4c4944b5f5a6fbfee01420ef82c4fa91</a></li>
<li><a href="https://framework.zend.com/security/advisory/ZF2015-01">https://framework.zend.com/security/advisory/ZF2015-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-session/ZF2015-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zend-session/ZF2015-01.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-96c6-m98x-hxjx">https://github.com/advisories/GHSA-96c6-m98x-hxjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96c6-m98x-hxjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:25:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework1] ZendFramework Potential Cross-site Scripting in Development Environment Error View Script]]></title>
        <id>https://github.com/advisories/GHSA-g52p-86j5-xr8q</id>
        <link href="https://github.com/advisories/GHSA-g52p-86j5-xr8q"/>
        <updated>2024-06-07T21:20:39.000Z</updated>
        <content type="html"><![CDATA[<p>The default error handling view script generated using <code>Zend_Tool</code> failed to escape request parameters when run in the "development" configuration environment, providing a potential XSS attack vector.</p>
<p><code>Zend_Tool_Project_Context_Zf_ViewScriptFile</code> was patched such that the view script template now calls the <code>escape()</code> method on dumped request variables.</p>
<p>Zend Framework 1.11.4 includes a patch that adds escaping to the generated error/error.phtml view script, ensuring that request variables are escaped appropriately for the browser.
Do note, however, that this will not update any previously generated code. You will still need to follow the next advice for previously generated error view scripts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/zendframework/zendframework1/ZF2011-01.yaml</a></li>
<li><a href="https://web.archive.org/web/20210120123405/https://framework.zend.com/security/advisory/ZF2011-01">https://web.archive.org/web/20210120123405/https://framework.zend.com/security/advisory/ZF2011-01</a></li>
<li><a href="https://github.com/advisories/GHSA-g52p-86j5-xr8q">https://github.com/advisories/GHSA-g52p-86j5-xr8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g52p-86j5-xr8q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-07T21:20:39.000Z</published>
    </entry>
</feed>