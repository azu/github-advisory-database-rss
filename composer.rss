<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-10-09T10:01:36.293Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[livewire/livewire] Livewire Remote Code Execution on File Uploads]]></title>
        <id>https://github.com/advisories/GHSA-f3cx-396f-7jqp</id>
        <link href="https://github.com/advisories/GHSA-f3cx-396f-7jqp"/>
        <updated>2024-10-08T22:19:17.000Z</updated>
        <content type="html"><![CDATA[<p>In livewire/livewire <code>&lt; v3.5.2</code>, the file extension of an uploaded file is guessed based on the MIME type. As a result, the actual file extension from the file name is not validated. An attacker can therefore bypass the validation by uploading a file with a valid MIME type (e.g., <code>image/png</code>) and a “.php” file extension.
If the following criteria are met, the attacker can carry out an RCE attack:</p>
<ul>
<li>Filename is composed of the original file name using <code>$file-&gt;getClientOriginalName()</code></li>
<li>Files stored directly on your server in a public storage disk</li>
<li>Webserver is configured to execute “.php” files</li>
</ul>
<h3 id="poc">PoC</h3>
<p>In the following scenario, an attacker could upload a file called <code>shell.php</code> with an <code>image/png</code> MIME type and execute it on the remote server.</p>
<pre><code class="language-php">class SomeComponent extends Component
{
    use WithFileUploads;

    #[Validate('image|extensions:png')]
    public $file;

    public function save()
    {
        $this-&gt;validate();

        $this-&gt;file-&gt;storeAs(
            path: 'images',
            name: $this-&gt;file-&gt;getClientOriginalName(),
            options: ['disk' =&gt; 'public'],
        );
    }
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/livewire/livewire/security/advisories/GHSA-f3cx-396f-7jqp">https://github.com/livewire/livewire/security/advisories/GHSA-f3cx-396f-7jqp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47823">https://nvd.nist.gov/vuln/detail/CVE-2024-47823</a></li>
<li><a href="https://github.com/livewire/livewire/commit/70503b79f5db75a1eac9bf55826038a6ee5a16d5">https://github.com/livewire/livewire/commit/70503b79f5db75a1eac9bf55826038a6ee5a16d5</a></li>
<li><a href="https://github.com/advisories/GHSA-f3cx-396f-7jqp">https://github.com/advisories/GHSA-f3cx-396f-7jqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3cx-396f-7jqp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-08T22:19:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Denial of Service in TYPO3 Bookmark Toolbar]]></title>
        <id>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</id>
        <link href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp"/>
        <updated>2024-10-08T22:18:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Due to insufficient input validation, manipulated data saved in the bookmark toolbar of the backend user interface causes a general error state, blocking further access to the interface. Exploiting this vulnerability requires an administrator-level backend user account.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Hendrik Eichner who reported this issue and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-001">TYPO3-CORE-SA-2024-011</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-011">https://typo3.org/security/advisory/typo3-core-sa-2024-011</a></li>
<li><a href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T22:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Denial of Service in TYPO3 Bookmark Toolbar]]></title>
        <id>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</id>
        <link href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp"/>
        <updated>2024-10-08T22:18:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Due to insufficient input validation, manipulated data saved in the bookmark toolbar of the backend user interface causes a general error state, blocking further access to the interface. Exploiting this vulnerability requires an administrator-level backend user account.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Hendrik Eichner who reported this issue and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-001">TYPO3-CORE-SA-2024-011</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-011">https://typo3.org/security/advisory/typo3-core-sa-2024-011</a></li>
<li><a href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T22:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Denial of Service in TYPO3 Bookmark Toolbar]]></title>
        <id>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</id>
        <link href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp"/>
        <updated>2024-10-08T22:18:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Due to insufficient input validation, manipulated data saved in the bookmark toolbar of the backend user interface causes a general error state, blocking further access to the interface. Exploiting this vulnerability requires an administrator-level backend user account.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Hendrik Eichner who reported this issue and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-001">TYPO3-CORE-SA-2024-011</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-011">https://typo3.org/security/advisory/typo3-core-sa-2024-011</a></li>
<li><a href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T22:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Denial of Service in TYPO3 Bookmark Toolbar]]></title>
        <id>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</id>
        <link href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp"/>
        <updated>2024-10-08T22:18:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Due to insufficient input validation, manipulated data saved in the bookmark toolbar of the backend user interface causes a general error state, blocking further access to the interface. Exploiting this vulnerability requires an administrator-level backend user account.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Hendrik Eichner who reported this issue and to TYPO3 core &amp; security team members Oliver Hader and Benjamin Franzke who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-001">TYPO3-CORE-SA-2024-011</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/TYPO3/typo3/security/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-011">https://typo3.org/security/advisory/typo3-core-sa-2024-011</a></li>
<li><a href="https://github.com/advisories/GHSA-ffcv-v6pw-qhrp">https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffcv-v6pw-qhrp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T22:18:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core-recommended] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/drupal] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core-recommended] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/drupal] Drupal Full Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</id>
        <link href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc"/>
        <updated>2024-10-08T14:54:52.000Z</updated>
        <content type="html"><![CDATA[<p><code>core/authorize.php</code> in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of <code>hash_salt</code> is <code>file_get_contents</code> of a file that does not exist.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45440">https://nvd.nist.gov/vuln/detail/CVE-2024-45440</a></li>
<li><a href="https://www.drupal.org/project/drupal/issues/3457781">https://www.drupal.org/project/drupal/issues/3457781</a></li>
<li><a href="https://senscybersecurity.nl/CVE-2024-45440-Explained">https://senscybersecurity.nl/CVE-2024-45440-Explained</a></li>
<li><a href="https://github.com/github/advisory-database/pull/4827">https://github.com/github/advisory-database/pull/4827</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.3.6">https://www.drupal.org/project/drupal/releases/10.3.6</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/11.0.5">https://www.drupal.org/project/drupal/releases/11.0.5</a></li>
<li><a href="https://www.drupal.org/project/drupal/releases/10.2.9">https://www.drupal.org/project/drupal/releases/10.2.9</a></li>
<li><a href="https://github.com/advisories/GHSA-mg8j-w93w-xjgc">https://github.com/advisories/GHSA-mg8j-w93w-xjgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg8j-w93w-xjgc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Information Disclosure in TYPO3 Page Tree]]></title>
        <id>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</id>
        <link href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q"/>
        <updated>2024-10-08T14:37:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Backend users could see items in the backend page tree without having access if the mounts pointed to pages restricted for their user/group, or if no mounts were configured but the pages allowed access to "everybody." However, affected users could not manipulate these pages.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Peter Schuler who reported this issue and to TYPO3 core &amp; security team member Oliver Hader who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c">https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22">https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719">https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-012">https://typo3.org/security/advisory/typo3-core-sa-2024-012</a></li>
<li><a href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T14:37:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Information Disclosure in TYPO3 Page Tree]]></title>
        <id>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</id>
        <link href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q"/>
        <updated>2024-10-08T14:37:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Backend users could see items in the backend page tree without having access if the mounts pointed to pages restricted for their user/group, or if no mounts were configured but the pages allowed access to "everybody." However, affected users could not manipulate these pages.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Peter Schuler who reported this issue and to TYPO3 core &amp; security team member Oliver Hader who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c">https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22">https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719">https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-012">https://typo3.org/security/advisory/typo3-core-sa-2024-012</a></li>
<li><a href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T14:37:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-backend] Information Disclosure in TYPO3 Page Tree]]></title>
        <id>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</id>
        <link href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q"/>
        <updated>2024-10-08T14:37:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="problem">Problem</h3>
<p>Backend users could see items in the backend page tree without having access if the mounts pointed to pages restricted for their user/group, or if no mounts were configured but the pages allowed access to "everybody." However, affected users could not manipulate these pages.</p>
<h3 id="solution">Solution</h3>
<p>Update to TYPO3 versions 10.4.46 ELTS, 11.5.40 LTS, 12.4.21 LTS, 13.3.1 that fix the problem described.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Peter Schuler who reported this issue and to TYPO3 core &amp; security team member Oliver Hader who fixed the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/TYPO3/typo3/security/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c">https://github.com/TYPO3-CMS/backend/commit/8b024b08a2c7071a2f2ff7c758766e4e9273f83c</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22">https://github.com/TYPO3-CMS/backend/commit/9ae1ef969b63292a13f80955a95713cabd45cc22</a></li>
<li><a href="https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719">https://github.com/TYPO3-CMS/backend/commit/a7b3c924014ada61632cd5e3fb9825fcc86c5719</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2024-012">https://typo3.org/security/advisory/typo3-core-sa-2024-012</a></li>
<li><a href="https://github.com/advisories/GHSA-rf5m-h8q9-9w6q">https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rf5m-h8q9-9w6q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-08T14:37:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[krayin/laravel-crm] Krayin CRM vulnerable to Cross Site Scripting (XSS) via the organization name]]></title>
        <id>https://github.com/advisories/GHSA-74q2-6jp4-3rqq</id>
        <link href="https://github.com/advisories/GHSA-74q2-6jp4-3rqq"/>
        <updated>2024-10-07T19:27:15.000Z</updated>
        <content type="html"><![CDATA[<p>Krayin CRM v1.3.0 is vulnerable to Cross Site Scripting (XSS) via the organization name field in <code>/admin/contacts/organizations/edit/2</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45932">https://nvd.nist.gov/vuln/detail/CVE-2024-45932</a></li>
<li><a href="https://github.com/AslamMahi/CVE-Aslam-Mahi/blob/main/Laravel%20CRM%20v1.3.0/CVE-2024-45932.md">https://github.com/AslamMahi/CVE-Aslam-Mahi/blob/main/Laravel%20CRM%20v1.3.0/CVE-2024-45932.md</a></li>
<li><a href="https://krayincrm.com">https://krayincrm.com</a></li>
<li><a href="https://github.com/advisories/GHSA-74q2-6jp4-3rqq">https://github.com/advisories/GHSA-74q2-6jp4-3rqq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74q2-6jp4-3rqq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-07T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[limesurvey/limesurvey] LimeSurvey Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c7xm-rwqj-pgcj</id>
        <link href="https://github.com/advisories/GHSA-c7xm-rwqj-pgcj"/>
        <updated>2024-10-07T19:26:38.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in LimeSurvey before 6.5.12+240611 allows a remote attacker to execute arbitrary code via a crafted script to the title and comment fields.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28709">https://nvd.nist.gov/vuln/detail/CVE-2024-28709</a></li>
<li><a href="https://github.com/LimeSurvey/LimeSurvey/commit/c844c4fba81cc26ffe6544bf095bad6252910bc0">https://github.com/LimeSurvey/LimeSurvey/commit/c844c4fba81cc26ffe6544bf095bad6252910bc0</a></li>
<li><a href="https://www.limesurvey.org">https://www.limesurvey.org</a></li>
<li><a href="https://github.com/advisories/GHSA-c7xm-rwqj-pgcj">https://github.com/advisories/GHSA-c7xm-rwqj-pgcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c7xm-rwqj-pgcj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-07T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[limesurvey/limesurvey] LimeSurvey Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-632q-77qj-c89q</id>
        <link href="https://github.com/advisories/GHSA-632q-77qj-c89q"/>
        <updated>2024-10-07T19:02:00.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in LimeSurvey before 6.5.0+240319 allows a remote attacker to execute arbitrary code via a lack of input validation and output encoding in the Alert Widget's message component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28710">https://nvd.nist.gov/vuln/detail/CVE-2024-28710</a></li>
<li><a href="https://github.com/LimeSurvey/LimeSurvey/commit/c2fd60f94bc1db275f20cbb27a3135a9bdfb7f10">https://github.com/LimeSurvey/LimeSurvey/commit/c2fd60f94bc1db275f20cbb27a3135a9bdfb7f10</a></li>
<li><a href="https://www.limesurvey.org">https://www.limesurvey.org</a></li>
<li><a href="https://github.com/advisories/GHSA-632q-77qj-c89q">https://github.com/advisories/GHSA-632q-77qj-c89q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-632q-77qj-c89q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-07T18:31:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet's XLSX reader]]></title>
        <id>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</id>
        <link href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88"/>
        <updated>2024-10-07T22:30:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The security scanner responsible for preventing XXE attacks in the XLSX reader can be bypassed by slightly modifying the XML structure, utilizing white-spaces. On servers that allow users to upload their own Excel (XLSX) sheets, Server files and sensitive information can be disclosed by providing a crafted sheet. </p>
<h3 id="details">Details</h3>
<p>The security scan function in <code>src/PhpSpreadsheet/Reader/Security/XmlScanner.php</code> contains a flawed XML encoding check to retrieve the input file's XML encoding in the <code>toUtf8</code> function. </p>
<p>The function searches for the XML encoding through a defined regex which looks for <code>encoding="*"</code> and/or <code>encoding='*'</code>, if not found, it defaults to the UTF-8 encoding which bypasses the conversion logic. </p>
<pre><code>$patterns = [
           '/encoding="([^"]*]?)"/',
           "/encoding='([^']*?)'/",
];
</code></pre>
<p>This logic can be used to pass a UTF-7 encoded XXE payload, by utilizing a whitespace before or after the <code>=</code> in the attribute definition. </p>
<h3 id="poc">PoC</h3>
<p>Needed:</p>
<ul>
<li>An Excel sheet (XLSX) with at least one cell containing a value.</li>
</ul>
<p>Unzip the excel sheet, and modify the <code>xl/SharedStrings.xml</code> file with the following value (note the space after <code>encoding=</code>):</p>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE abc [ ... ]&gt;
</code></pre>
<h4 id="step-by-step">Step-by-step</h4>
<ol>
<li>First off, the following string is encoded in base64:</li>
</ol>
<pre><code>&lt;!ENTITY internal 'abc'  &gt;" 
</code></pre>
<p>Resulting in:</p>
<pre><code>PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K
</code></pre>
<ol start="2">
<li>The string is used with a parameter entity and the PHP filter wrapper to ultimately define custom entities and call them within the XML.</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE foo [ &lt;!ENTITY % xxe SYSTEM "php://filter//resource=data://text/plain;base64,PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K" &gt; %xxe;]&gt;
&lt;sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="1" uniqueCount="1"&gt;&lt;si&gt;&lt;t&gt;&amp;internal;&lt;/t&gt;&lt;/si&gt;&lt;/sst&gt;
</code></pre>
<p>When this file is parsed by the library, the value <code>abc</code> should be in the original filled cell.</p>
<p>With the help of the PHP filter wrapper, this can be escalated to information disclosure/file read. </p>
<h3 id="impact">Impact</h3>
<p>Sensitive information disclosure through the XXE on sites that allow users to upload their own excel spreadsheets, and parse them using PHPSpreadsheet's Excel parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c">https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331">https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf">https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45293">https://nvd.nist.gov/vuln/detail/CVE-2024-45293</a></li>
<li><a href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/advisories/GHSA-6hwr-6v2f-3m88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-07T15:58:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet's XLSX reader]]></title>
        <id>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</id>
        <link href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88"/>
        <updated>2024-10-07T22:30:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The security scanner responsible for preventing XXE attacks in the XLSX reader can be bypassed by slightly modifying the XML structure, utilizing white-spaces. On servers that allow users to upload their own Excel (XLSX) sheets, Server files and sensitive information can be disclosed by providing a crafted sheet. </p>
<h3 id="details">Details</h3>
<p>The security scan function in <code>src/PhpSpreadsheet/Reader/Security/XmlScanner.php</code> contains a flawed XML encoding check to retrieve the input file's XML encoding in the <code>toUtf8</code> function. </p>
<p>The function searches for the XML encoding through a defined regex which looks for <code>encoding="*"</code> and/or <code>encoding='*'</code>, if not found, it defaults to the UTF-8 encoding which bypasses the conversion logic. </p>
<pre><code>$patterns = [
           '/encoding="([^"]*]?)"/',
           "/encoding='([^']*?)'/",
];
</code></pre>
<p>This logic can be used to pass a UTF-7 encoded XXE payload, by utilizing a whitespace before or after the <code>=</code> in the attribute definition. </p>
<h3 id="poc">PoC</h3>
<p>Needed:</p>
<ul>
<li>An Excel sheet (XLSX) with at least one cell containing a value.</li>
</ul>
<p>Unzip the excel sheet, and modify the <code>xl/SharedStrings.xml</code> file with the following value (note the space after <code>encoding=</code>):</p>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE abc [ ... ]&gt;
</code></pre>
<h4 id="step-by-step">Step-by-step</h4>
<ol>
<li>First off, the following string is encoded in base64:</li>
</ol>
<pre><code>&lt;!ENTITY internal 'abc'  &gt;" 
</code></pre>
<p>Resulting in:</p>
<pre><code>PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K
</code></pre>
<ol start="2">
<li>The string is used with a parameter entity and the PHP filter wrapper to ultimately define custom entities and call them within the XML.</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE foo [ &lt;!ENTITY % xxe SYSTEM "php://filter//resource=data://text/plain;base64,PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K" &gt; %xxe;]&gt;
&lt;sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="1" uniqueCount="1"&gt;&lt;si&gt;&lt;t&gt;&amp;internal;&lt;/t&gt;&lt;/si&gt;&lt;/sst&gt;
</code></pre>
<p>When this file is parsed by the library, the value <code>abc</code> should be in the original filled cell.</p>
<p>With the help of the PHP filter wrapper, this can be escalated to information disclosure/file read. </p>
<h3 id="impact">Impact</h3>
<p>Sensitive information disclosure through the XXE on sites that allow users to upload their own excel spreadsheets, and parse them using PHPSpreadsheet's Excel parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c">https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331">https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf">https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45293">https://nvd.nist.gov/vuln/detail/CVE-2024-45293</a></li>
<li><a href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/advisories/GHSA-6hwr-6v2f-3m88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-07T15:58:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet's XLSX reader]]></title>
        <id>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</id>
        <link href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88"/>
        <updated>2024-10-07T22:30:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The security scanner responsible for preventing XXE attacks in the XLSX reader can be bypassed by slightly modifying the XML structure, utilizing white-spaces. On servers that allow users to upload their own Excel (XLSX) sheets, Server files and sensitive information can be disclosed by providing a crafted sheet. </p>
<h3 id="details">Details</h3>
<p>The security scan function in <code>src/PhpSpreadsheet/Reader/Security/XmlScanner.php</code> contains a flawed XML encoding check to retrieve the input file's XML encoding in the <code>toUtf8</code> function. </p>
<p>The function searches for the XML encoding through a defined regex which looks for <code>encoding="*"</code> and/or <code>encoding='*'</code>, if not found, it defaults to the UTF-8 encoding which bypasses the conversion logic. </p>
<pre><code>$patterns = [
           '/encoding="([^"]*]?)"/',
           "/encoding='([^']*?)'/",
];
</code></pre>
<p>This logic can be used to pass a UTF-7 encoded XXE payload, by utilizing a whitespace before or after the <code>=</code> in the attribute definition. </p>
<h3 id="poc">PoC</h3>
<p>Needed:</p>
<ul>
<li>An Excel sheet (XLSX) with at least one cell containing a value.</li>
</ul>
<p>Unzip the excel sheet, and modify the <code>xl/SharedStrings.xml</code> file with the following value (note the space after <code>encoding=</code>):</p>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE abc [ ... ]&gt;
</code></pre>
<h4 id="step-by-step">Step-by-step</h4>
<ol>
<li>First off, the following string is encoded in base64:</li>
</ol>
<pre><code>&lt;!ENTITY internal 'abc'  &gt;" 
</code></pre>
<p>Resulting in:</p>
<pre><code>PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K
</code></pre>
<ol start="2">
<li>The string is used with a parameter entity and the PHP filter wrapper to ultimately define custom entities and call them within the XML.</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding= 'UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE foo [ &lt;!ENTITY % xxe SYSTEM "php://filter//resource=data://text/plain;base64,PCFFTlRJVFkgaW50ZXJuYWwgJ2FiYycgID4K" &gt; %xxe;]&gt;
&lt;sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="1" uniqueCount="1"&gt;&lt;si&gt;&lt;t&gt;&amp;internal;&lt;/t&gt;&lt;/si&gt;&lt;/sst&gt;
</code></pre>
<p>When this file is parsed by the library, the value <code>abc</code> should be in the original filled cell.</p>
<p>With the help of the PHP filter wrapper, this can be escalated to information disclosure/file read. </p>
<h3 id="impact">Impact</h3>
<p>Sensitive information disclosure through the XXE on sites that allow users to upload their own excel spreadsheets, and parse them using PHPSpreadsheet's Excel parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-6hwr-6v2f-3m88</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c">https://github.com/PHPOffice/PhpSpreadsheet/commit/3bcd51826b7f089d1641e756c83030c30c3bdb0c</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331">https://github.com/PHPOffice/PhpSpreadsheet/commit/7d6cb09f6e8204f65e6dd5a0490f7f45f44bb331</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf">https://github.com/PHPOffice/PhpSpreadsheet/commit/949ff63e1f6413e6485f73af012d506aa81384bf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45293">https://nvd.nist.gov/vuln/detail/CVE-2024-45293</a></li>
<li><a href="https://github.com/advisories/GHSA-6hwr-6v2f-3m88">https://github.com/advisories/GHSA-6hwr-6v2f-3m88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hwr-6v2f-3m88</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-07T15:58:52.000Z</published>
    </entry>
</feed>