<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2023-09-11T17:01:28.182Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[mautic/core] Mautic Sessions could be hijacked due to tracking contacts by an auto-incremented ID]]></title>
        <id>https://github.com/advisories/GHSA-vfxj-qg93-7wwc</id>
        <link href="https://github.com/advisories/GHSA-vfxj-qg93-7wwc"/>
        <updated>2023-09-11T15:06:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was discovered in Mautic 1.x and 2.x before 2.13.0. It is possible to systematically emulate tracking cookies per contact due to tracking the contact by their auto-incremented ID. Thus, a third party can manipulate the cookie value with +1 to systematically assume being tracked as each contact in Mautic. It is then possible to retrieve information about the contact through forms that have progressive profiling enabled.</p>
<h3 id="patches">Patches</h3>
<p>Update to 2.13.0 or later</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-vfxj-qg93-7wwc">https://github.com/mautic/mautic/security/advisories/GHSA-vfxj-qg93-7wwc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-10189">https://nvd.nist.gov/vuln/detail/CVE-2018-10189</a></li>
<li><a href="https://github.com/mautic/mautic/releases/tag/2.13.0">https://github.com/mautic/mautic/releases/tag/2.13.0</a></li>
<li><a href="https://github.com/advisories/GHSA-vfxj-qg93-7wwc">https://github.com/advisories/GHSA-vfxj-qg93-7wwc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfxj-qg93-7wwc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-01-19T21:16:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[erusev/parsedown] Parsedown Class-Name Injection]]></title>
        <id>https://github.com/advisories/GHSA-62m3-fc7f-jpp8</id>
        <link href="https://github.com/advisories/GHSA-62m3-fc7f-jpp8"/>
        <updated>2023-09-11T15:01:48.000Z</updated>
        <content type="html"><![CDATA[<p>Parsedown before 1.7.2, when safe mode is used and HTML markup is disabled, might allow attackers to execute arbitrary JavaScript code if a script (already running on the affected page) executes the contents of any element with a specific class. This occurs because spaces are permitted in code block infostrings, which interferes with the intended behavior of a single class name beginning with the language- substring.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/erusev/parsedown/issues/699">https://github.com/erusev/parsedown/issues/699</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/erusev/parsedown/CVE-2019-10905.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/erusev/parsedown/CVE-2019-10905.yaml</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10905">https://nvd.nist.gov/vuln/detail/CVE-2019-10905</a></li>
<li><a href="https://github.com/erusev/parsedown/releases/tag/1.7.2">https://github.com/erusev/parsedown/releases/tag/1.7.2</a></li>
<li><a href="https://github.com/advisories/GHSA-62m3-fc7f-jpp8">https://github.com/advisories/GHSA-62m3-fc7f-jpp8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62m3-fc7f-jpp8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-26T00:09:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] Cross-site scripting in phpoffice/phpspreadsheet]]></title>
        <id>https://github.com/advisories/GHSA-4mqv-gcr3-pff9</id>
        <link href="https://github.com/advisories/GHSA-4mqv-gcr3-pff9"/>
        <updated>2023-09-11T15:01:32.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package phpoffice/phpspreadsheet. The library is vulnerable to XSS when creating an html output from an excel file by adding a comment on any cell. The root cause of this issue is within the HTML writer where user comments are concatenated as part of link and this is returned as HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7776">https://nvd.nist.gov/vuln/detail/CVE-2020-7776</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/0ed5b800be2136bcb8fa9c1bdf59abc957a98845">https://github.com/PHPOffice/PhpSpreadsheet/commit/0ed5b800be2136bcb8fa9c1bdf59abc957a98845</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/blob/master/src/PhpSpreadsheet/Writer/Html.php%23L1792">https://github.com/PHPOffice/PhpSpreadsheet/blob/master/src/PhpSpreadsheet/Writer/Html.php%23L1792</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PHP-PHPOFFICEPHPSPREADSHEET-1048856">https://snyk.io/vuln/SNYK-PHP-PHPOFFICEPHPSPREADSHEET-1048856</a></li>
<li><a href="https://github.com/advisories/GHSA-4mqv-gcr3-pff9">https://github.com/advisories/GHSA-4mqv-gcr3-pff9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mqv-gcr3-pff9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-06T18:53:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[laminas/laminas-http] Remote code execution in zendframework and laminas-http]]></title>
        <id>https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</id>
        <link href="https://github.com/advisories/GHSA-xx8f-qf9f-5fgw"/>
        <updated>2023-09-11T15:00:57.000Z</updated>
        <content type="html"><![CDATA[<p>Laminas Project laminas-http before 2.14.2, and Zend Framework 3.0.0, has a deserialization vulnerability that can lead to remote code execution if the content is controllable, related to the __destruct method of the Zend\Http\Response\Stream class in Stream.php. NOTE: Zend Framework is no longer supported by the maintainer. NOTE: the laminas-http vendor considers this a "vulnerability in the PHP language itself" but has added certain type checking as a way to prevent exploitation in (unrecommended) use cases where attacker-supplied data can be deserialized.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3007">https://nvd.nist.gov/vuln/detail/CVE-2021-3007</a></li>
<li><a href="https://github.com/laminas/laminas-http/pull/48">https://github.com/laminas/laminas-http/pull/48</a></li>
<li><a href="https://github.com/Ling-Yizhou/zendframework3-/blob/main/zend%20framework3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20rce.md">https://github.com/Ling-Yizhou/zendframework3-/blob/main/zend%20framework3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20rce.md</a></li>
<li><a href="https://github.com/laminas/laminas-http/commits/2.15.x/src/Response/Stream.php">https://github.com/laminas/laminas-http/commits/2.15.x/src/Response/Stream.php</a></li>
<li><a href="https://github.com/laminas/laminas-http/releases/tag/2.14.2">https://github.com/laminas/laminas-http/releases/tag/2.14.2</a></li>
<li><a href="https://research.checkpoint.com/2021/freakout-leveraging-newest-vulnerabilities-for-creating-a-botnet/">https://research.checkpoint.com/2021/freakout-leveraging-newest-vulnerabilities-for-creating-a-botnet/</a></li>
<li><a href="https://github.com/advisories/GHSA-xx8f-qf9f-5fgw">https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-06-08T20:11:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zendframework/zendframework] Remote code execution in zendframework and laminas-http]]></title>
        <id>https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</id>
        <link href="https://github.com/advisories/GHSA-xx8f-qf9f-5fgw"/>
        <updated>2023-09-11T15:00:57.000Z</updated>
        <content type="html"><![CDATA[<p>Laminas Project laminas-http before 2.14.2, and Zend Framework 3.0.0, has a deserialization vulnerability that can lead to remote code execution if the content is controllable, related to the __destruct method of the Zend\Http\Response\Stream class in Stream.php. NOTE: Zend Framework is no longer supported by the maintainer. NOTE: the laminas-http vendor considers this a "vulnerability in the PHP language itself" but has added certain type checking as a way to prevent exploitation in (unrecommended) use cases where attacker-supplied data can be deserialized.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3007">https://nvd.nist.gov/vuln/detail/CVE-2021-3007</a></li>
<li><a href="https://github.com/laminas/laminas-http/pull/48">https://github.com/laminas/laminas-http/pull/48</a></li>
<li><a href="https://github.com/Ling-Yizhou/zendframework3-/blob/main/zend%20framework3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20rce.md">https://github.com/Ling-Yizhou/zendframework3-/blob/main/zend%20framework3%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20rce.md</a></li>
<li><a href="https://github.com/laminas/laminas-http/commits/2.15.x/src/Response/Stream.php">https://github.com/laminas/laminas-http/commits/2.15.x/src/Response/Stream.php</a></li>
<li><a href="https://github.com/laminas/laminas-http/releases/tag/2.14.2">https://github.com/laminas/laminas-http/releases/tag/2.14.2</a></li>
<li><a href="https://research.checkpoint.com/2021/freakout-leveraging-newest-vulnerabilities-for-creating-a-botnet/">https://research.checkpoint.com/2021/freakout-leveraging-newest-vulnerabilities-for-creating-a-botnet/</a></li>
<li><a href="https://github.com/advisories/GHSA-xx8f-qf9f-5fgw">https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xx8f-qf9f-5fgw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-06-08T20:11:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bolt/bolt] Cross-site Scripting in Bolt]]></title>
        <id>https://github.com/advisories/GHSA-cj8p-53v9-2c26</id>
        <link href="https://github.com/advisories/GHSA-cj8p-53v9-2c26"/>
        <updated>2023-09-11T14:59:53.000Z</updated>
        <content type="html"><![CDATA[<p>Bolt before 3.6.10 has XSS via createFolder or createFile in <code>Controller/Async/FilesystemManager.php</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-15485">https://nvd.nist.gov/vuln/detail/CVE-2019-15485</a></li>
<li><a href="https://github.com/bolt/bolt/pull/7800">https://github.com/bolt/bolt/pull/7800</a></li>
<li><a href="https://github.com/bolt/bolt/releases/tag/v3.6.10">https://github.com/bolt/bolt/releases/tag/v3.6.10</a></li>
<li><a href="https://github.com/advisories/GHSA-cj8p-53v9-2c26">https://github.com/advisories/GHSA-cj8p-53v9-2c26</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj8p-53v9-2c26</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-11-08T15:28:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/ux-autocomplete] Prevent injection of invalid entity ids for "autocomplete" fields]]></title>
        <id>https://github.com/advisories/GHSA-4cpv-669c-r79x</id>
        <link href="https://github.com/advisories/GHSA-4cpv-669c-r79x"/>
        <updated>2023-09-11T14:43:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Under certain circumstances, an attacker could successfully submit an entity id for an <code>EntityType</code> that is <em>not</em> part of the valid choices.</p>
<p>Affected applications are any that use:</p>
<ul>
<li>A custom <code>query_builder</code> option to limit the valid results;
AND</li>
<li>An <code>EntityType</code> with <code>'autocomplete' =&gt; true</code> or a custom <a href="https://symfony.com/bundles/ux-autocomplete/current/index.html#usage-in-a-form-with-ajax">AsEntityAutocompleteField</a>.</li>
</ul>
<p>Under this circumstance, if an id is submitted, it is accepted even if the matching record would not be returned by the custom query built with <code>query_builder</code>.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been fixed in <code>symfony/ux-autocomplete</code> version 2.11.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Upgrade to version 2.11.2 or greater of <code>symfony/ux-autocomplete</code> or perform extra validation after submit to verify the selected option is valid.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/symfony/ux-autocomplete/security/advisories/GHSA-4cpv-669c-r79x">https://github.com/symfony/ux-autocomplete/security/advisories/GHSA-4cpv-669c-r79x</a></li>
<li><a href="https://github.com/symfony/ux-autocomplete/commit/fabcb2eee14b9e84a45b276711853a560b5d770c">https://github.com/symfony/ux-autocomplete/commit/fabcb2eee14b9e84a45b276711853a560b5d770c</a></li>
<li><a href="https://symfony.com/bundles/ux-autocomplete/current/index.html#usage-in-a-form-with-ajax">https://symfony.com/bundles/ux-autocomplete/current/index.html#usage-in-a-form-with-ajax</a></li>
<li><a href="https://github.com/advisories/GHSA-4cpv-669c-r79x">https://github.com/advisories/GHSA-4cpv-669c-r79x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cpv-669c-r79x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T14:43:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] XSS vulnerability in theme config file in Mautic]]></title>
        <id>https://github.com/advisories/GHSA-5w74-jx7m-x6hv</id>
        <link href="https://github.com/advisories/GHSA-5w74-jx7m-x6hv"/>
        <updated>2023-09-11T13:42:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Mautic before v2.13.0 has stored XSS via a theme config file.</p>
<h3 id="patches">Patches</h3>
<p>Update to 2.13.0 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-5w74-jx7m-x6hv">https://github.com/mautic/mautic/security/advisories/GHSA-5w74-jx7m-x6hv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-8071">https://nvd.nist.gov/vuln/detail/CVE-2018-8071</a></li>
<li><a href="https://github.com/mautic/mautic/commit/3add236e9cc00ea9b211b52cccc4660379b2ee8b">https://github.com/mautic/mautic/commit/3add236e9cc00ea9b211b52cccc4660379b2ee8b</a></li>
<li><a href="https://github.com/mautic/mautic/releases/tag/2.13.0">https://github.com/mautic/mautic/releases/tag/2.13.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5w74-jx7m-x6hv">https://github.com/advisories/GHSA-5w74-jx7m-x6hv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5w74-jx7m-x6hv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-01-19T21:16:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] XSS vulnerability in Author URL of themes in Mautic]]></title>
        <id>https://github.com/advisories/GHSA-xcf7-cj8q-pcjm</id>
        <link href="https://github.com/advisories/GHSA-xcf7-cj8q-pcjm"/>
        <updated>2023-09-11T13:41:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An XSS vulnerability was discovered in Mautic 2.13.1 in the Author URL of themes.</p>
<h3 id="patches">Patches</h3>
<p>Update to 2.14 or later</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/mautic/mautic/releases/tag/2.14.0">https://github.com/mautic/mautic/releases/tag/2.14.0</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-xcf7-cj8q-pcjm">https://github.com/mautic/mautic/security/advisories/GHSA-xcf7-cj8q-pcjm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-11198">https://nvd.nist.gov/vuln/detail/CVE-2018-11198</a></li>
<li><a href="https://github.com/mautic/mautic/releases">https://github.com/mautic/mautic/releases</a></li>
<li><a href="https://github.com/mautic/mautic/releases/tag/2.14.0">https://github.com/mautic/mautic/releases/tag/2.14.0</a></li>
<li><a href="https://github.com/advisories/GHSA-xcf7-cj8q-pcjm">https://github.com/advisories/GHSA-xcf7-cj8q-pcjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcf7-cj8q-pcjm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-01-19T21:16:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] Mautic users able to download any files from server using filemanager]]></title>
        <id>https://github.com/advisories/GHSA-qpgw-2c72-4c89</id>
        <link href="https://github.com/advisories/GHSA-qpgw-2c72-4c89"/>
        <updated>2023-09-11T13:40:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Mautic versions 1.0.0 - 2.11.0 are vulnerable to allowing any authorized Mautic user session (must be logged into Mautic) to use the Filemanager to download any file from the server that the web user has access to.</p>
<h3 id="patches">Patches</h3>
<p>Update to 2.12.0 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-qpgw-2c72-4c89">https://github.com/mautic/mautic/security/advisories/GHSA-qpgw-2c72-4c89</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000490">https://nvd.nist.gov/vuln/detail/CVE-2017-1000490</a></li>
<li><a href="https://github.com/mautic/mautic/commit/3b01786433ae15e9a23f1eb9b0d3dfdb065b6241">https://github.com/mautic/mautic/commit/3b01786433ae15e9a23f1eb9b0d3dfdb065b6241</a></li>
<li><a href="https://github.com/mautic/mautic/releases/tag/2.12.0">https://github.com/mautic/mautic/releases/tag/2.12.0</a></li>
<li><a href="https://github.com/advisories/GHSA-qpgw-2c72-4c89">https://github.com/advisories/GHSA-qpgw-2c72-4c89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpgw-2c72-4c89</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-01-19T20:50:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] Disabled users able to log in with third party SSO plugin]]></title>
        <id>https://github.com/advisories/GHSA-6x98-fx9j-7c78</id>
        <link href="https://github.com/advisories/GHSA-6x98-fx9j-7c78"/>
        <updated>2023-09-11T13:39:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Mautic versions 2.0.0 - 2.11.0 with a SSO plugin installed could allow a disabled user to still login using email address</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to 2.12.0 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-6x98-fx9j-7c78">https://github.com/mautic/mautic/security/advisories/GHSA-6x98-fx9j-7c78</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000489">https://nvd.nist.gov/vuln/detail/CVE-2017-1000489</a></li>
<li><a href="https://github.com/mautic/mautic/commit/fd933cbef795b04cabdc50527cb18e037488fef9">https://github.com/mautic/mautic/commit/fd933cbef795b04cabdc50527cb18e037488fef9</a></li>
<li><a href="https://github.com/mautic/mautic/releases/tag/2.12.0">https://github.com/mautic/mautic/releases/tag/2.12.0</a></li>
<li><a href="https://github.com/advisories/GHSA-6x98-fx9j-7c78">https://github.com/advisories/GHSA-6x98-fx9j-7c78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x98-fx9j-7c78</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-01-19T21:16:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet due to incomplete fix for previous encoding issue]]></title>
        <id>https://github.com/advisories/GHSA-vvwv-h69m-wg6f</id>
        <link href="https://github.com/advisories/GHSA-vvwv-h69m-wg6f"/>
        <updated>2023-09-11T13:38:05.000Z</updated>
        <content type="html"><![CDATA[<p>PHPOffice PhpSpreadsheet before 1.8.0 has an XXE issue. The XmlScanner decodes the sheet1.xml from an .xlsx to utf-8 if something else than UTF-8 is declared in the header. This was a security measurement to prevent CVE-2018-19277 but the fix is not sufficient. By double-encoding the the xml payload to utf-7 it is possible to bypass the check for the string ?&lt;!ENTITY? and thus allowing for an xml external entity processing (XXE) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12331">https://nvd.nist.gov/vuln/detail/CVE-2019-12331</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/blob/master/CHANGELOG.md#180---2019-07-01">https://github.com/PHPOffice/PhpSpreadsheet/blob/master/CHANGELOG.md#180---2019-07-01</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/releases/tag/1.8.0">https://github.com/PHPOffice/PhpSpreadsheet/releases/tag/1.8.0</a></li>
<li><a href="https://herolab.usd.de/security-advisories/usd-2019-0046/">https://herolab.usd.de/security-advisories/usd-2019-0046/</a></li>
<li><a href="https://github.com/advisories/GHSA-vvwv-h69m-wg6f">https://github.com/advisories/GHSA-vvwv-h69m-wg6f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvwv-h69m-wg6f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-11-20T01:39:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/drupal] Drupal core third-party PEAR Archive_Tar library is vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</id>
        <link href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp"/>
        <updated>2023-09-08T14:19:07.000Z</updated>
        <content type="html"><![CDATA[<p>In Drupal Core versions 7.x prior to 7.62, 8.6.x prior to 8.6.6 and 8.5.x prior to 8.5.9; Drupal core uses the third-party PEAR Archive_Tar library. This library has released a security update which impacts some Drupal configurations. Refer to CVE-2018-1000888 for details</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-6338">https://nvd.nist.gov/vuln/detail/CVE-2019-6338</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html">https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4370">https://www.debian.org/security/2019/dsa-4370</a></li>
<li><a href="https://www.drupal.org/sa-core-2019-001">https://www.drupal.org/sa-core-2019-001</a></li>
<li><a href="http://www.securityfocus.com/bid/106706">http://www.securityfocus.com/bid/106706</a></li>
<li><a href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp">https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-12-02T18:11:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/drupal] Drupal core third-party PEAR Archive_Tar library is vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</id>
        <link href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp"/>
        <updated>2023-09-08T14:19:07.000Z</updated>
        <content type="html"><![CDATA[<p>In Drupal Core versions 7.x prior to 7.62, 8.6.x prior to 8.6.6 and 8.5.x prior to 8.5.9; Drupal core uses the third-party PEAR Archive_Tar library. This library has released a security update which impacts some Drupal configurations. Refer to CVE-2018-1000888 for details</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-6338">https://nvd.nist.gov/vuln/detail/CVE-2019-6338</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html">https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4370">https://www.debian.org/security/2019/dsa-4370</a></li>
<li><a href="https://www.drupal.org/sa-core-2019-001">https://www.drupal.org/sa-core-2019-001</a></li>
<li><a href="http://www.securityfocus.com/bid/106706">http://www.securityfocus.com/bid/106706</a></li>
<li><a href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp">https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-12-02T18:11:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/drupal] Drupal core third-party PEAR Archive_Tar library is vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</id>
        <link href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp"/>
        <updated>2023-09-08T14:19:07.000Z</updated>
        <content type="html"><![CDATA[<p>In Drupal Core versions 7.x prior to 7.62, 8.6.x prior to 8.6.6 and 8.5.x prior to 8.5.9; Drupal core uses the third-party PEAR Archive_Tar library. This library has released a security update which impacts some Drupal configurations. Refer to CVE-2018-1000888 for details</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-6338">https://nvd.nist.gov/vuln/detail/CVE-2019-6338</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/drupal/drupal/CVE-2019-6338.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html">https://lists.debian.org/debian-lts-announce/2019/02/msg00032.html</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4370">https://www.debian.org/security/2019/dsa-4370</a></li>
<li><a href="https://www.drupal.org/sa-core-2019-001">https://www.drupal.org/sa-core-2019-001</a></li>
<li><a href="http://www.securityfocus.com/bid/106706">http://www.securityfocus.com/bid/106706</a></li>
<li><a href="https://github.com/advisories/GHSA-6rmq-x2hv-vxpp">https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rmq-x2hv-vxpp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-12-02T18:11:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal core Unrestricted Upload of File with Dangerous Type]]></title>
        <id>https://github.com/advisories/GHSA-68jc-v27h-vhmw</id>
        <link href="https://github.com/advisories/GHSA-68jc-v27h-vhmw"/>
        <updated>2023-09-08T14:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>Drupal core does not properly sanitize certain filenames on uploaded files, which can lead to files being interpreted as the incorrect extension and served as the wrong MIME type or executed as PHP for certain hosting configurations. This issue affects: Drupal Drupal Core 9.0 versions prior to 9.0.8, 8.9 versions prior to 8.9.9, 8.8 versions prior to 8.8.11, and 7 versions prior to 7.74.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13671">https://nvd.nist.gov/vuln/detail/CVE-2020-13671</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-012">https://www.drupal.org/sa-core-2020-012</a></li>
<li><a href="https://github.com/advisories/GHSA-68jc-v27h-vhmw">https://github.com/advisories/GHSA-68jc-v27h-vhmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68jc-v27h-vhmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T16:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal core Unrestricted Upload of File with Dangerous Type]]></title>
        <id>https://github.com/advisories/GHSA-68jc-v27h-vhmw</id>
        <link href="https://github.com/advisories/GHSA-68jc-v27h-vhmw"/>
        <updated>2023-09-08T14:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>Drupal core does not properly sanitize certain filenames on uploaded files, which can lead to files being interpreted as the incorrect extension and served as the wrong MIME type or executed as PHP for certain hosting configurations. This issue affects: Drupal Drupal Core 9.0 versions prior to 9.0.8, 8.9 versions prior to 8.9.9, 8.8 versions prior to 8.8.11, and 7 versions prior to 7.74.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13671">https://nvd.nist.gov/vuln/detail/CVE-2020-13671</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-012">https://www.drupal.org/sa-core-2020-012</a></li>
<li><a href="https://github.com/advisories/GHSA-68jc-v27h-vhmw">https://github.com/advisories/GHSA-68jc-v27h-vhmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68jc-v27h-vhmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T16:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal core Unrestricted Upload of File with Dangerous Type]]></title>
        <id>https://github.com/advisories/GHSA-68jc-v27h-vhmw</id>
        <link href="https://github.com/advisories/GHSA-68jc-v27h-vhmw"/>
        <updated>2023-09-08T14:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>Drupal core does not properly sanitize certain filenames on uploaded files, which can lead to files being interpreted as the incorrect extension and served as the wrong MIME type or executed as PHP for certain hosting configurations. This issue affects: Drupal Drupal Core 9.0 versions prior to 9.0.8, 8.9 versions prior to 8.9.9, 8.8 versions prior to 8.8.11, and 7 versions prior to 7.74.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13671">https://nvd.nist.gov/vuln/detail/CVE-2020-13671</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-012">https://www.drupal.org/sa-core-2020-012</a></li>
<li><a href="https://github.com/advisories/GHSA-68jc-v27h-vhmw">https://github.com/advisories/GHSA-68jc-v27h-vhmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68jc-v27h-vhmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T16:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Drupal core Unrestricted Upload of File with Dangerous Type]]></title>
        <id>https://github.com/advisories/GHSA-68jc-v27h-vhmw</id>
        <link href="https://github.com/advisories/GHSA-68jc-v27h-vhmw"/>
        <updated>2023-09-08T14:12:07.000Z</updated>
        <content type="html"><![CDATA[<p>Drupal core does not properly sanitize certain filenames on uploaded files, which can lead to files being interpreted as the incorrect extension and served as the wrong MIME type or executed as PHP for certain hosting configurations. This issue affects: Drupal Drupal Core 9.0 versions prior to 9.0.8, 8.9 versions prior to 8.9.9, 8.8 versions prior to 8.8.11, and 7 versions prior to 7.74.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13671">https://nvd.nist.gov/vuln/detail/CVE-2020-13671</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5KSFM672XW3X6BR7TVKRD63SLZGKK437/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KWM4CTMEGAC4I2CHYNJVSROY4CVXVEUT/</a></li>
<li><a href="https://www.drupal.org/sa-core-2020-012">https://www.drupal.org/sa-core-2020-012</a></li>
<li><a href="https://github.com/advisories/GHSA-68jc-v27h-vhmw">https://github.com/advisories/GHSA-68jc-v27h-vhmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68jc-v27h-vhmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T16:28:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Escape Cross-site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g996-q5r8-w7g2</id>
        <link href="https://github.com/advisories/GHSA-g996-q5r8-w7g2"/>
        <updated>2023-09-08T14:11:05.000Z</updated>
        <content type="html"><![CDATA[<p>In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, validation messages are not escaped, which can lead to XSS when user input is included. This is related to symfony/framework-bundle.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10909">https://nvd.nist.gov/vuln/detail/CVE-2019-10909</a></li>
<li><a href="https://github.com/symfony/symfony/commit/ab4d05358c3d0dd1a36fc8c306829f68e3dd84e2">https://github.com/symfony/symfony/commit/ab4d05358c3d0dd1a36fc8c306829f68e3dd84e2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2019-10909.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/framework-bundle/CVE-2019-10909.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10909.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2019-10909.yaml</a></li>
<li><a href="https://symfony.com/blog/cve-2019-10909-escape-validation-messages-in-the-php-templating-engine">https://symfony.com/blog/cve-2019-10909-escape-validation-messages-in-the-php-templating-engine</a></li>
<li><a href="https://symfony.com/cve-2019-10909">https://symfony.com/cve-2019-10909</a></li>
<li><a href="https://www.drupal.org/sa-core-2019-005">https://www.drupal.org/sa-core-2019-005</a></li>
<li><a href="https://www.synology.com/security/advisory/Synology_SA_19_19">https://www.synology.com/security/advisory/Synology_SA_19_19</a></li>
<li><a href="https://github.com/advisories/GHSA-g996-q5r8-w7g2">https://github.com/advisories/GHSA-g996-q5r8-w7g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g996-q5r8-w7g2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-11-12T23:00:53.000Z</published>
    </entry>
</feed>