<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-04-03T14:01:13.195Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[causal/oidc] OpenID Connect Authentication (oidc) Typo3 extension Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-hhf8-f5w9-g6vh</id>
        <link href="https://github.com/advisories/GHSA-hhf8-f5w9-g6vh"/>
        <updated>2024-04-02T18:21:50.000Z</updated>
        <content type="html"><![CDATA[<p>The authentication service of the extension does not verify the OpenID Connect authentication state from the user lookup chain. Instead, the authentication service authenticates every valid frontend user from the user lookup chain, where the  frontend user field “tx_oidc” is not empty.</p>
<p>In scenarios, where either ext:felogin is active or where <code>$GLOBALS['TYPO3_CONF_VARS'][‘FE’][‘checkFeUserPid’]</code> is disabled, an attacker can login to OpenID Connect frontend user accounts by providing a valid username and any password. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/causal/oidc/CVE-2024-30173.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/causal/oidc/CVE-2024-30173.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-ext-sa-2024-002">https://typo3.org/security/advisory/typo3-ext-sa-2024-002</a></li>
<li><a href="https://github.com/advisories/GHSA-hhf8-f5w9-g6vh">https://github.com/advisories/GHSA-hhf8-f5w9-g6vh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hhf8-f5w9-g6vh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-02T18:21:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[francoisjacquet/rosariosis] RosarioSIS cross site scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r32g-w9cv-9fgc</id>
        <link href="https://github.com/advisories/GHSA-r32g-w9cv-9fgc"/>
        <updated>2024-04-02T18:21:29.000Z</updated>
        <content type="html"><![CDATA[<p>** DISPUTED ** A vulnerability was found in francoisjacquet RosarioSIS 11.5.1. It has been rated as problematic. This issue affects some unknown processing of the component Add Portal Note. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The real existence of this vulnerability is still doubted at the moment. The associated identifier of this vulnerability is VDB-258911. NOTE: The vendor explains that the PDF is opened by the browser app in a sandbox, so no data from the website should be accessible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3138">https://nvd.nist.gov/vuln/detail/CVE-2024-3138</a></li>
<li><a href="https://powerful-bulb-c36.notion.site/Stored-xss-via-malicious-PDF-upload-98fb1ea6b9bf4ddfaf04d61b2c05410a">https://powerful-bulb-c36.notion.site/Stored-xss-via-malicious-PDF-upload-98fb1ea6b9bf4ddfaf04d61b2c05410a</a></li>
<li><a href="https://vuldb.com/?ctiid.258911">https://vuldb.com/?ctiid.258911</a></li>
<li><a href="https://vuldb.com/?id.258911">https://vuldb.com/?id.258911</a></li>
<li><a href="https://vuldb.com/?submit.307450">https://vuldb.com/?submit.307450</a></li>
<li><a href="https://github.com/advisories/GHSA-r32g-w9cv-9fgc">https://github.com/advisories/GHSA-r32g-w9cv-9fgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r32g-w9cv-9fgc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[uvdesk/core-framework] UVDesk Community Helpdesk Improper Privilege Management]]></title>
        <id>https://github.com/advisories/GHSA-57q5-h622-3cpx</id>
        <link href="https://github.com/advisories/GHSA-57q5-h622-3cpx"/>
        <updated>2024-04-02T15:14:30.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Privilege Management in uvdesk/community-skeleton</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3137">https://nvd.nist.gov/vuln/detail/CVE-2024-3137</a></li>
<li><a href="https://huntr.com/bounties/faf74783-644c-40cd-aa98-2239e5fafcd1">https://huntr.com/bounties/faf74783-644c-40cd-aa98-2239e5fafcd1</a></li>
<li><a href="https://github.com/uvdesk/core-framework/blob/master/Controller/Thread.php#L44">https://github.com/uvdesk/core-framework/blob/master/Controller/Thread.php#L44</a></li>
<li><a href="https://github.com/advisories/GHSA-57q5-h622-3cpx">https://github.com/advisories/GHSA-57q5-h622-3cpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-57q5-h622-3cpx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T03:30:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon insertGraphTemplate SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-626r-cj47-p49g</id>
        <link href="https://github.com/advisories/GHSA-626r-cj47-p49g"/>
        <updated>2024-04-02T14:44:00.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon insertGraphTemplate SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the insertGraphTemplate function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22339.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23119">https://nvd.nist.gov/vuln/detail/CVE-2024-23119</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-113">https://www.zerodayinitiative.com/advisories/ZDI-24-113</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-626r-cj47-p49g">https://github.com/advisories/GHSA-626r-cj47-p49g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-626r-cj47-p49g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon updateContactHostCommands SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2j4g-v4fv-rhwg</id>
        <link href="https://github.com/advisories/GHSA-2j4g-v4fv-rhwg"/>
        <updated>2024-04-02T14:43:34.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon updateContactHostCommands SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the updateContactHostCommands function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22298.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23118">https://nvd.nist.gov/vuln/detail/CVE-2024-23118</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-114">https://www.zerodayinitiative.com/advisories/ZDI-24-114</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-2j4g-v4fv-rhwg">https://github.com/advisories/GHSA-2j4g-v4fv-rhwg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j4g-v4fv-rhwg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon updateContactServiceCommands SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j8hg-v5qv-9m28</id>
        <link href="https://github.com/advisories/GHSA-j8hg-v5qv-9m28"/>
        <updated>2024-04-02T14:43:18.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon updateContactServiceCommands SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the updateContactServiceCommands function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22297.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23117">https://nvd.nist.gov/vuln/detail/CVE-2024-23117</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-115">https://www.zerodayinitiative.com/advisories/ZDI-24-115</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-j8hg-v5qv-9m28">https://github.com/advisories/GHSA-j8hg-v5qv-9m28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8hg-v5qv-9m28</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon updateGroups SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qjvm-p5vg-437c</id>
        <link href="https://github.com/advisories/GHSA-qjvm-p5vg-437c"/>
        <updated>2024-04-02T14:42:37.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon updateGroups SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the updateGroups function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22295.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23115">https://nvd.nist.gov/vuln/detail/CVE-2024-23115</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-117">https://www.zerodayinitiative.com/advisories/ZDI-24-117</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-qjvm-p5vg-437c">https://github.com/advisories/GHSA-qjvm-p5vg-437c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjvm-p5vg-437c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon updateLCARelation SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j4pc-vqvc-4p9x</id>
        <link href="https://github.com/advisories/GHSA-j4pc-vqvc-4p9x"/>
        <updated>2024-04-02T14:41:43.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon updateLCARelation SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the updateLCARelation function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22296.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23116">https://nvd.nist.gov/vuln/detail/CVE-2024-23116</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-116">https://www.zerodayinitiative.com/advisories/ZDI-24-116</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-j4pc-vqvc-4p9x">https://github.com/advisories/GHSA-j4pc-vqvc-4p9x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j4pc-vqvc-4p9x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[centreon/centreon] Centreon updateDirectory SQL Injection Remote Code Execution Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-22v7-v3mj-pm8r</id>
        <link href="https://github.com/advisories/GHSA-22v7-v3mj-pm8r"/>
        <updated>2024-04-02T14:39:51.000Z</updated>
        <content type="html"><![CDATA[<p>Centreon updateDirectory SQL Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Centreon. Authentication is required to exploit this vulnerability.</p>
<p>The specific flaw exists within the updateDirectory function. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-22294.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0637">https://nvd.nist.gov/vuln/detail/CVE-2024-0637</a></li>
<li><a href="https://www.zerodayinitiative.com/advisories/ZDI-24-118">https://www.zerodayinitiative.com/advisories/ZDI-24-118</a></li>
<li><a href="https://github.com/centreon/centreon/pull/2464">https://github.com/centreon/centreon/pull/2464</a></li>
<li><a href="https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399">https://github.com/centreon/centreon/commit/c6ee0f67544a70524539b26e8ea92209676a5399</a></li>
<li><a href="https://github.com/advisories/GHSA-22v7-v3mj-pm8r">https://github.com/advisories/GHSA-22v7-v3mj-pm8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22v7-v3mj-pm8r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T00:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki makeCollapsible allows applying event handler to any CSS selector]]></title>
        <id>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</id>
        <link href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5"/>
        <updated>2024-04-01T19:54:54.000Z</updated>
        <content type="html"><![CDATA[<p>In MediaWiki before 1.34.1, users can add various Cascading Style Sheets (CSS) classes (which can affect what content is shown or hidden in the user interface) to arbitrary DOM nodes via HTML content within a MediaWiki page. This occurs because jquery.makeCollapsible allows applying an event handler to any Cascading Style Sheets (CSS) selector. There is no known way to exploit this for cross-site scripting (XSS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10960">https://nvd.nist.gov/vuln/detail/CVE-2020-10960</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html">https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T246602">https://phabricator.wikimedia.org/T246602</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5">https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:13:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki makeCollapsible allows applying event handler to any CSS selector]]></title>
        <id>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</id>
        <link href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5"/>
        <updated>2024-04-01T19:54:54.000Z</updated>
        <content type="html"><![CDATA[<p>In MediaWiki before 1.34.1, users can add various Cascading Style Sheets (CSS) classes (which can affect what content is shown or hidden in the user interface) to arbitrary DOM nodes via HTML content within a MediaWiki page. This occurs because jquery.makeCollapsible allows applying an event handler to any Cascading Style Sheets (CSS) selector. There is no known way to exploit this for cross-site scripting (XSS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10960">https://nvd.nist.gov/vuln/detail/CVE-2020-10960</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html">https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T246602">https://phabricator.wikimedia.org/T246602</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5">https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:13:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki makeCollapsible allows applying event handler to any CSS selector]]></title>
        <id>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</id>
        <link href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5"/>
        <updated>2024-04-01T19:54:54.000Z</updated>
        <content type="html"><![CDATA[<p>In MediaWiki before 1.34.1, users can add various Cascading Style Sheets (CSS) classes (which can affect what content is shown or hidden in the user interface) to arbitrary DOM nodes via HTML content within a MediaWiki page. This occurs because jquery.makeCollapsible allows applying an event handler to any Cascading Style Sheets (CSS) selector. There is no known way to exploit this for cross-site scripting (XSS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10960">https://nvd.nist.gov/vuln/detail/CVE-2020-10960</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html">https://lists.wikimedia.org/pipermail/wikitech-l/2020-March/093243.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T246602">https://phabricator.wikimedia.org/T246602</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2020-10960.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pfm2-mqwj-ggm5">https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfm2-mqwj-ggm5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:13:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wintercms/winter] Winter CMS Server-Side Template Injection (SSTI) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8r5j-gm3j-cx9c</id>
        <link href="https://github.com/advisories/GHSA-8r5j-gm3j-cx9c"/>
        <updated>2024-04-01T15:12:59.000Z</updated>
        <content type="html"><![CDATA[<p>Server-side Template Injection (SSTI) vulnerability in Winter CMS v.1.2.3 allows a remote attacker to execute arbitrary code via a crafted payload to the CMS Pages field and Plugin components.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29686">https://nvd.nist.gov/vuln/detail/CVE-2024-29686</a></li>
<li><a href="https://forum.ksec.co.uk/t/webapps-winter-cms-1-2-3-server-side-template-injection-ssti-authenticated/2779">https://forum.ksec.co.uk/t/webapps-winter-cms-1-2-3-server-side-template-injection-ssti-authenticated/2779</a></li>
<li><a href="https://www.exploit-db.com/exploits/51893">https://www.exploit-db.com/exploits/51893</a></li>
<li><a href="https://wintercms.com/docs/v1.2/docs/cms/themes#template-structure">https://wintercms.com/docs/v1.2/docs/cms/themes#template-structure</a></li>
<li><a href="https://github.com/advisories/GHSA-8r5j-gm3j-cx9c">https://github.com/advisories/GHSA-8r5j-gm3j-cx9c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r5j-gm3j-cx9c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-29T18:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kimai/kimai] Kimai API returns timesheet entries a user should not be authorized to view]]></title>
        <id>https://github.com/advisories/GHSA-cj3c-5xpm-cx94</id>
        <link href="https://github.com/advisories/GHSA-cj3c-5xpm-cx94"/>
        <updated>2024-03-29T19:05:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The permission <code>view_other_timesheet</code> performs differently for the Kimai UI and the API, thus returning unexpected data through the API.</p>
<h3 id="details">Details</h3>
<p>When setting the <code>view_other_timesheet</code> permission to true, on the frontend, users can only see timesheet entries for teams they are a part of. When requesting all timesheets from the API, however, all timesheet entries are returned, regardless of whether the user shares team permissions or not.</p>
<p>Example:
There are projects P1 and P2, Teams T1 and T2, users U1 and U2 and Timesheet entries E1 and E2. U1 is team leader of team T1 and has access to P1. U2 is in Team T2 and has access to both P1 and P2. U2 creates E1 for P1 and E2 for P2.
In the UI, U1 with <code>view _other_timesheet</code> perms sees E1 as he is a part of T1 that has access to P1.
In the API, however, he has access to E1 <strong>and E2</strong>.</p>
<p>Additionally, if U1 is not a team leader T1, he does not see any timesheet from a user other than himself in the UI, but still all timesheets in the API.</p>
<h3 id="poc">PoC</h3>
<ul>
<li>Give a user <code>view_other_timesheet</code> permission</li>
<li>The result of the UI and the API call to <code>/api/timesheets?user=all</code> differs in the data that is being returned</li>
</ul>
<p>Curl command:</p>
<pre><code class="language-bash">curl -X 'GET' \
  'https://kimai.instance.com/api/timesheets?user=all' \
  -H 'accept: application/json' \
  -H 'X-AUTH-USER: username' \
  -H 'X-AUTH-TOKEN: api_token'
</code></pre>
<h3 id="impact">Impact</h3>
<p>This is at least an insufficient granularity of access control weakness. People can see timesheet entries they are not supposed to.
This greatly affects the confidentiality of timesheet entries. </p>
<p>Restricting API access to administrators is also not a valid solution, as API access is needed, for example, to use the mobile app.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kimai/kimai/security/advisories/GHSA-cj3c-5xpm-cx94">https://github.com/kimai/kimai/security/advisories/GHSA-cj3c-5xpm-cx94</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29200">https://nvd.nist.gov/vuln/detail/CVE-2024-29200</a></li>
<li><a href="https://github.com/kimai/kimai/releases/tag/2.13.0">https://github.com/kimai/kimai/releases/tag/2.13.0</a></li>
<li><a href="https://github.com/advisories/GHSA-cj3c-5xpm-cx94">https://github.com/advisories/GHSA-cj3c-5xpm-cx94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cj3c-5xpm-cx94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-29T19:05:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codeigniter4/framework] CodeIgniter4 DoS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-39fp-mqmm-gxj6</id>
        <link href="https://github.com/advisories/GHSA-39fp-mqmm-gxj6"/>
        <updated>2024-03-29T19:41:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability was found in the Language class that allowed DoS attacks. This vulnerability can be exploited by an attacker to consume a large amount of memory on the server.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v4.4.7 or later. See <a href="https://codeigniter4.github.io/userguide/installation/upgrade_447.html">upgrading guide</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Disabling Auto Routing prevents a known attack vector in the framework.</li>
<li>Do not pass invalid values to the <code>lang()</code> function or <code>Language</code> class.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://codeigniter4.github.io/userguide/outgoing/localization.html#language-localization">https://codeigniter4.github.io/userguide/outgoing/localization.html#language-localization</a></li>
<li><a href="https://codeigniter4.github.io/userguide/general/common_functions.html#lang">https://codeigniter4.github.io/userguide/general/common_functions.html#lang</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-39fp-mqmm-gxj6">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-39fp-mqmm-gxj6</a></li>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/commit/fa851acbae7ae4c5a97f8f38ae87aa0822a334c0">https://github.com/codeigniter4/CodeIgniter4/commit/fa851acbae7ae4c5a97f8f38ae87aa0822a334c0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29904">https://nvd.nist.gov/vuln/detail/CVE-2024-29904</a></li>
<li><a href="https://github.com/advisories/GHSA-39fp-mqmm-gxj6">https://github.com/advisories/GHSA-39fp-mqmm-gxj6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-39fp-mqmm-gxj6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-29T16:36:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce/tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability in handling iframes]]></title>
        <id>https://github.com/advisories/GHSA-438c-3975-5x3f</id>
        <link href="https://github.com/advisories/GHSA-438c-3975-5x3f"/>
        <updated>2024-03-26T21:23:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A&nbsp;<a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a>&nbsp;vulnerability was discovered in TinyMCE’s content insertion code.  This allowed <code>iframe</code> elements containing malicious code to execute when inserted into the editor.  These <code>iframe</code> elements are restricted in their permissions by same-origin browser protections, but could still trigger operations such as downloading of malicious assets.</p>
<h3 id="fix">Fix</h3>
<p>TinyMCE 6.8.1 introduced a new <code>sandbox_iframes</code> boolean option which adds the <code>sandbox=""</code> attribute to every <code>iframe</code> element by default when enabled. This will prevent cross-origin, and in special cases same-origin, XSS by embedded resources in <code>iframe</code> elements. From TinyMCE 7.0.0 onwards the default value of this option is <code>true</code>.</p>
<p>In TinyMCE 7.0.0 a new <code>sandbox_iframes_exclusions</code> option was also added, allowing a list of domains to be specified that should be excluded from having the&nbsp;<code>sandbox=""</code>&nbsp;attribute applied when the&nbsp;<code>sandbox_iframes</code>&nbsp;option is enabled. By default, this option is set to an array of domains that are provided in embed code by popular websites. To sandbox <code>iframe</code> elements from every domain, set this option to <code>[]</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The HTTP Content-Security-Policy (CSP) <code>frame-src</code> or <code>object-src</code> can be configured to restrict or block the loading of unauthorized URLS.  Refer to the <a href="https://www.tiny.cloud/docs/tinymce/latest/tinymce-and-csp/">TinyMCE Content Security Policy Guide</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types">TinyMCE 6.8.1</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#sandbox_iframes-editor-option-is-now-defaulted-to-true">TinyMCE 7.0.0</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-438c-3975-5x3f">https://github.com/tinymce/tinymce/security/advisories/GHSA-438c-3975-5x3f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29203">https://nvd.nist.gov/vuln/detail/CVE-2024-29203</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/bcdea2ad14e3c2cea40743fb48c63bba067ae6d1">https://github.com/tinymce/tinymce/commit/bcdea2ad14e3c2cea40743fb48c63bba067ae6d1</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types">https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#sandbox_iframes-editor-option-is-now-defaulted-to-true">https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#sandbox_iframes-editor-option-is-now-defaulted-to-true</a></li>
<li><a href="https://github.com/advisories/GHSA-438c-3975-5x3f">https://github.com/advisories/GHSA-438c-3975-5x3f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-438c-3975-5x3f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-26T21:23:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tinymce/tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability in handling external SVG files through Object or Embed elements]]></title>
        <id>https://github.com/advisories/GHSA-5359-pvf2-pw78</id>
        <link href="https://github.com/advisories/GHSA-5359-pvf2-pw78"/>
        <updated>2024-03-26T21:23:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content loading and content inserting code. A SVG image could be loaded though an <code>object</code> or <code>embed</code> element and that image could potentially contain a XSS payload.</p>
<h3 id="fix">Fix</h3>
<p>TinyMCE 6.8.1 introduced a new <code>convert_unsafe_embeds</code> option to automatically convert <code>object</code> and <code>embed</code> elements respective of their <code>type</code> attribute.  From TinyMCE 7.0.0 onwards, the <code>convert_unsafe_embeds</code> option is enabled by default.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using TinyMCE 6.8.1 or higher, set <code>convert_unsafe_embeds</code> to true. For any earlier versions, a custom NodeFilter is recommended to remove or modify any <code>object</code> or <code>embed</code> elements. This can be added using the <code>editor.parser.addNodeFilter</code> and <code>editor.serializer.addNodeFilter</code> APIs.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Tiny Technologies would like to thank Toni Huttunen of <a href="https://www.fraktal.fi/">Fraktal Oy</a> for discovering this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types">TinyMCE 6.8.1</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#convert_unsafe_embeds-editor-option-is-now-defaulted-to-true">TinyMCE 7.0.0</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-5359-pvf2-pw78">https://github.com/tinymce/tinymce/security/advisories/GHSA-5359-pvf2-pw78</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29881">https://nvd.nist.gov/vuln/detail/CVE-2024-29881</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/bcdea2ad14e3c2cea40743fb48c63bba067ae6d1">https://github.com/tinymce/tinymce/commit/bcdea2ad14e3c2cea40743fb48c63bba067ae6d1</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types">https://www.tiny.cloud/docs/tinymce/6/6.8.1-release-notes/#new-convert_unsafe_embeds-option-that-controls-whether-object-and-embed-elements-will-be-converted-to-more-restrictive-alternatives-namely-img-for-image-mime-types-video-for-video-mime-types-audio-audio-mime-types-or-iframe-for-other-or-unspecified-mime-types</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#convert_unsafe_embeds-editor-option-is-now-defaulted-to-true">https://www.tiny.cloud/docs/tinymce/7/7.0-release-notes/#convert_unsafe_embeds-editor-option-is-now-defaulted-to-true</a></li>
<li><a href="https://github.com/advisories/GHSA-5359-pvf2-pw78">https://github.com/advisories/GHSA-5359-pvf2-pw78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5359-pvf2-pw78</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-26T21:23:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore Preview Documents are not restricted to logged in users anymore]]></title>
        <id>https://github.com/advisories/GHSA-5737-rqv4-v445</id>
        <link href="https://github.com/advisories/GHSA-5737-rqv4-v445"/>
        <updated>2024-03-27T10:20:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Any call with the query argument <code>?pimcore_preview=true</code> allows to view unpublished sites. Event if in incognito window. Due to the behaviour of how previews should work, this also applies to internal documents, say an intranet which could be really severe.</p>
<h3 id="details">Details</h3>
<p>In previous versions of Pimcore, session information would propagate to previews, so only a logged in user could open a preview. This no longer applies. Previews are broad open to any user and with just the hint of a restricted link one could gain access to possible confident / unreleased information.</p>
<h3 id="poc">PoC</h3>
<ul>
<li>go to demo.pimcore.com </li>
<li>unpublish a document</li>
<li>open preview link in incognito tab</li>
<li>see how the page loads normally</li>
</ul>
<h3 id="impact">Impact</h3>
<p>Any intranet or other restricted sites which are able to show a preview are affected. This could possibly be huge.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-5737-rqv4-v445">https://github.com/pimcore/pimcore/security/advisories/GHSA-5737-rqv4-v445</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29197">https://nvd.nist.gov/vuln/detail/CVE-2024-29197</a></li>
<li><a href="https://github.com/pimcore/pimcore/commit/3ae43fb1065f9eb62ad2f542b883858d36d57e53">https://github.com/pimcore/pimcore/commit/3ae43fb1065f9eb62ad2f542b883858d36d57e53</a></li>
<li><a href="https://github.com/advisories/GHSA-5737-rqv4-v445">https://github.com/advisories/GHSA-5737-rqv4-v445</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5737-rqv4-v445</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-26T19:32:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Pimcore Preview Documents are not restricted to logged in users anymore]]></title>
        <id>https://github.com/advisories/GHSA-5737-rqv4-v445</id>
        <link href="https://github.com/advisories/GHSA-5737-rqv4-v445"/>
        <updated>2024-03-27T10:20:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Any call with the query argument <code>?pimcore_preview=true</code> allows to view unpublished sites. Event if in incognito window. Due to the behaviour of how previews should work, this also applies to internal documents, say an intranet which could be really severe.</p>
<h3 id="details">Details</h3>
<p>In previous versions of Pimcore, session information would propagate to previews, so only a logged in user could open a preview. This no longer applies. Previews are broad open to any user and with just the hint of a restricted link one could gain access to possible confident / unreleased information.</p>
<h3 id="poc">PoC</h3>
<ul>
<li>go to demo.pimcore.com </li>
<li>unpublish a document</li>
<li>open preview link in incognito tab</li>
<li>see how the page loads normally</li>
</ul>
<h3 id="impact">Impact</h3>
<p>Any intranet or other restricted sites which are able to show a preview are affected. This could possibly be huge.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pimcore/pimcore/security/advisories/GHSA-5737-rqv4-v445">https://github.com/pimcore/pimcore/security/advisories/GHSA-5737-rqv4-v445</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29197">https://nvd.nist.gov/vuln/detail/CVE-2024-29197</a></li>
<li><a href="https://github.com/pimcore/pimcore/commit/3ae43fb1065f9eb62ad2f542b883858d36d57e53">https://github.com/pimcore/pimcore/commit/3ae43fb1065f9eb62ad2f542b883858d36d57e53</a></li>
<li><a href="https://github.com/advisories/GHSA-5737-rqv4-v445">https://github.com/advisories/GHSA-5737-rqv4-v445</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5737-rqv4-v445</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-26T19:32:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpmyfaq/phpmyfaq] phpMyFAQ stored Cross-site Scripting at user email]]></title>
        <id>https://github.com/advisories/GHSA-q7g6-xfh2-vhpx</id>
        <link href="https://github.com/advisories/GHSA-q7g6-xfh2-vhpx"/>
        <updated>2024-03-25T19:46:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The <code>email</code> field in phpMyFAQ's user control panel page is vulnerable to stored XSS attacks due to the inadequacy of PHP's <code>FILTER_VALIDATE_EMAIL</code> function, which only validates the email format, not its content. This vulnerability enables an attacker to execute arbitrary client-side JavaScript within the context of another user's phpMyFAQ session.</p>
<h3 id="details">Details</h3>
<p>Despite using PHP's <code>FILTER_VALIDATE_EMAIL</code> function, the email field does not adequately validate the content of the email address. This means that malicious input, such as JavaScript code, can be accepted and stored in the database without being detected. When the stored data is retrieved and displayed on web pages, it is not properly sanitized to remove or neutralize any potentially harmful content, such as JavaScript code which leads to Stored XSS.</p>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Login as any user, go to the user control panel, change email to any valid email and intercept the request.</p>
</li>
<li><p>Modify the request’s email parameter to the following payload:  <code>"&gt;&lt;svg/onload=confirm('XSS')&gt;"@x.y</code>
<img alt="image" src="https://github.com/thorsten/phpMyFAQ/assets/63487456/1c5a5431-773a-4e26-95ba-e2563f681ca1"></p>
</li>
<li><p>Send the request and see that the XSS is triggered in the user control panel page.
<img alt="image" src="https://github.com/thorsten/phpMyFAQ/assets/63487456/b0328fcc-3c03-4997-8121-1f5e7cf89178"></p>
</li>
<li><p>Also affects any user who browse to "../admin/?action=user&amp;user_action=listallusers"
<img alt="image" src="https://github.com/thorsten/phpMyFAQ/assets/63487456/3af1add8-ea64-4350-a77e-d14da6084d4c"></p>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>This allows an attacker to execute arbitrary client side JavaScript within the context of another user's phpMyFAQ session.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-q7g6-xfh2-vhpx">https://github.com/thorsten/phpMyFAQ/security/advisories/GHSA-q7g6-xfh2-vhpx</a></li>
<li><a href="https://github.com/thorsten/phpMyFAQ/commit/09336b0ff0e0a04aa0c97c5975651af4769d2459">https://github.com/thorsten/phpMyFAQ/commit/09336b0ff0e0a04aa0c97c5975651af4769d2459</a></li>
<li><a href="https://github.com/thorsten/phpMyFAQ/commit/de90315c9bd4ead5fe6ba5586f6b016843aa8209">https://github.com/thorsten/phpMyFAQ/commit/de90315c9bd4ead5fe6ba5586f6b016843aa8209</a></li>
<li><a href="https://github.com/advisories/GHSA-q7g6-xfh2-vhpx">https://github.com/advisories/GHSA-q7g6-xfh2-vhpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q7g6-xfh2-vhpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-25T19:46:28.000Z</published>
    </entry>
</feed>