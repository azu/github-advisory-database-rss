<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2022-10-25T04:39:54.972Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[october/system] October CMS Safe Mode bypass leads to authenticated Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</id>
        <link href="https://github.com/advisories/GHSA-x4q7-m6fp-4v9v"/>
        <updated>2022-10-24T18:35:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability only affects installations that rely on the safe mode restriction, commonly used when providing public access to the admin panel. Assuming an attacker has access to the admin panel and permission to open the "Editor" section, they can bypass the Safe Mode (<code>cms.safe_mode</code>) restriction to introduce new PHP code in a CMS template using a specially crafted request.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in v2.2.34 and v3.0.66</p>
<h3 id="references">References</h3>
<p>Credits to:</p>
<ul>
<li>David Miller</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:hello@octobercms.com">hello@octobercms.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/octobercms/october/security/advisories/GHSA-x4q7-m6fp-4v9v">https://github.com/octobercms/october/security/advisories/GHSA-x4q7-m6fp-4v9v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35944">https://nvd.nist.gov/vuln/detail/CVE-2022-35944</a></li>
<li><a href="https://github.com/advisories/GHSA-x4q7-m6fp-4v9v">https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-13T19:11:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpmyfaq/phpmyfaq] phpMyFAQ vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-6rj8-9cm9-6gff</id>
        <link href="https://github.com/advisories/GHSA-6rj8-9cm9-6gff"/>
        <updated>2022-10-21T13:03:13.000Z</updated>
        <content type="html"><![CDATA[<p>phpMyFAQ versions 3.1.7 and prior are vulnerable to stored cross-site scripting (XSS). A patch is available on the <code>main</code> branch of the repository and anticipated to be part of version 3.2.0-alpha.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3608">https://nvd.nist.gov/vuln/detail/CVE-2022-3608</a></li>
<li><a href="https://github.com/thorsten/phpmyfaq/commit/37123edd50f854bd141e6fbe65221af2d5cf2677">https://github.com/thorsten/phpmyfaq/commit/37123edd50f854bd141e6fbe65221af2d5cf2677</a></li>
<li><a href="https://huntr.dev/bounties/8f0f3635-9d81-4c55-9826-2ba955c3a850">https://huntr.dev/bounties/8f0f3635-9d81-4c55-9826-2ba955c3a850</a></li>
<li><a href="https://github.com/advisories/GHSA-6rj8-9cm9-6gff">https://github.com/advisories/GHSA-6rj8-9cm9-6gff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rj8-9cm9-6gff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[thorsten/phpmyfaq] phpMyFAQ vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-6rj8-9cm9-6gff</id>
        <link href="https://github.com/advisories/GHSA-6rj8-9cm9-6gff"/>
        <updated>2022-10-21T13:03:13.000Z</updated>
        <content type="html"><![CDATA[<p>phpMyFAQ versions 3.1.7 and prior are vulnerable to stored cross-site scripting (XSS). A patch is available on the <code>main</code> branch of the repository and anticipated to be part of version 3.2.0-alpha.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3608">https://nvd.nist.gov/vuln/detail/CVE-2022-3608</a></li>
<li><a href="https://github.com/thorsten/phpmyfaq/commit/37123edd50f854bd141e6fbe65221af2d5cf2677">https://github.com/thorsten/phpmyfaq/commit/37123edd50f854bd141e6fbe65221af2d5cf2677</a></li>
<li><a href="https://huntr.dev/bounties/8f0f3635-9d81-4c55-9826-2ba955c3a850">https://huntr.dev/bounties/8f0f3635-9d81-4c55-9826-2ba955c3a850</a></li>
<li><a href="https://github.com/advisories/GHSA-6rj8-9cm9-6gff">https://github.com/advisories/GHSA-6rj8-9cm9-6gff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rj8-9cm9-6gff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-19T19:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the brute force protection]]></title>
        <id>https://github.com/advisories/GHSA-c27j-76xg-6x4f</id>
        <link href="https://github.com/advisories/GHSA-c27j-76xg-6x4f"/>
        <updated>2022-10-18T21:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be exploited for targeted attacks because the attack does not scale to brute force.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Kirby comes with a built-in brute force protection. By default, it will prevent further login attempts after 10 failed logins from a single IP address or of a single existing user. After every failed login attempt, Kirby inserts a random delay between one millisecond and two seconds to make automated attacks harder and to avoid leaking whether the user exists. Unfortunately, this random delay was not inserted after the brute force limit was reached.</p>
<p>Because Kirby only tracks failed login attempts per email address for existing users but always tracks failed login attempts per IP address, this behavior could be abused by attackers for user enumeration. For this to work, an attacker would need to create login requests beyond the trials limit (which is 10 by default) from two or more IP addresses. After the trials limit was reached, the login form immediately blocked further requests for existing users, but not for invalid users.</p>
<p>This exploit does not scale to brute force attacks because of the delay during the first 10 requests per user, the faint difference between the responses for valid and invalid users and the fact that code-based logins would send an email for every login attempt, which makes the attack easy to spot. The vulnerability is therefore only relevant for targeted attacks.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-c27j-76xg-6x4f">https://github.com/advisories/GHSA-c27j-76xg-6x4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c27j-76xg-6x4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:16:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the brute force protection]]></title>
        <id>https://github.com/advisories/GHSA-c27j-76xg-6x4f</id>
        <link href="https://github.com/advisories/GHSA-c27j-76xg-6x4f"/>
        <updated>2022-10-18T21:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be exploited for targeted attacks because the attack does not scale to brute force.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Kirby comes with a built-in brute force protection. By default, it will prevent further login attempts after 10 failed logins from a single IP address or of a single existing user. After every failed login attempt, Kirby inserts a random delay between one millisecond and two seconds to make automated attacks harder and to avoid leaking whether the user exists. Unfortunately, this random delay was not inserted after the brute force limit was reached.</p>
<p>Because Kirby only tracks failed login attempts per email address for existing users but always tracks failed login attempts per IP address, this behavior could be abused by attackers for user enumeration. For this to work, an attacker would need to create login requests beyond the trials limit (which is 10 by default) from two or more IP addresses. After the trials limit was reached, the login form immediately blocked further requests for existing users, but not for invalid users.</p>
<p>This exploit does not scale to brute force attacks because of the delay during the first 10 requests per user, the faint difference between the responses for valid and invalid users and the fact that code-based logins would send an email for every login attempt, which makes the attack easy to spot. The vulnerability is therefore only relevant for targeted attacks.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-c27j-76xg-6x4f">https://github.com/advisories/GHSA-c27j-76xg-6x4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c27j-76xg-6x4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:16:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the brute force protection]]></title>
        <id>https://github.com/advisories/GHSA-c27j-76xg-6x4f</id>
        <link href="https://github.com/advisories/GHSA-c27j-76xg-6x4f"/>
        <updated>2022-10-18T21:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be exploited for targeted attacks because the attack does not scale to brute force.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Kirby comes with a built-in brute force protection. By default, it will prevent further login attempts after 10 failed logins from a single IP address or of a single existing user. After every failed login attempt, Kirby inserts a random delay between one millisecond and two seconds to make automated attacks harder and to avoid leaking whether the user exists. Unfortunately, this random delay was not inserted after the brute force limit was reached.</p>
<p>Because Kirby only tracks failed login attempts per email address for existing users but always tracks failed login attempts per IP address, this behavior could be abused by attackers for user enumeration. For this to work, an attacker would need to create login requests beyond the trials limit (which is 10 by default) from two or more IP addresses. After the trials limit was reached, the login form immediately blocked further requests for existing users, but not for invalid users.</p>
<p>This exploit does not scale to brute force attacks because of the delay during the first 10 requests per user, the faint difference between the responses for valid and invalid users and the fact that code-based logins would send an email for every login attempt, which makes the attack easy to spot. The vulnerability is therefore only relevant for targeted attacks.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-c27j-76xg-6x4f">https://github.com/advisories/GHSA-c27j-76xg-6x4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c27j-76xg-6x4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:16:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the brute force protection]]></title>
        <id>https://github.com/advisories/GHSA-c27j-76xg-6x4f</id>
        <link href="https://github.com/advisories/GHSA-c27j-76xg-6x4f"/>
        <updated>2022-10-18T21:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be exploited for targeted attacks because the attack does not scale to brute force.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Kirby comes with a built-in brute force protection. By default, it will prevent further login attempts after 10 failed logins from a single IP address or of a single existing user. After every failed login attempt, Kirby inserts a random delay between one millisecond and two seconds to make automated attacks harder and to avoid leaking whether the user exists. Unfortunately, this random delay was not inserted after the brute force limit was reached.</p>
<p>Because Kirby only tracks failed login attempts per email address for existing users but always tracks failed login attempts per IP address, this behavior could be abused by attackers for user enumeration. For this to work, an attacker would need to create login requests beyond the trials limit (which is 10 by default) from two or more IP addresses. After the trials limit was reached, the login form immediately blocked further requests for existing users, but not for invalid users.</p>
<p>This exploit does not scale to brute force attacks because of the delay during the first 10 requests per user, the faint difference between the responses for valid and invalid users and the fact that code-based logins would send an email for every login attempt, which makes the attack easy to spot. The vulnerability is therefore only relevant for targeted attacks.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>In all of the mentioned releases, we have rewritten the affected code so that the delay is also inserted after the brute force limit is reached.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-c27j-76xg-6x4f">https://github.com/advisories/GHSA-c27j-76xg-6x4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c27j-76xg-6x4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:16:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the code-based login and password reset forms]]></title>
        <id>https://github.com/advisories/GHSA-43qq-qw4x-28f8</id>
        <link href="https://github.com/advisories/GHSA-43qq-qw4x-28f8"/>
        <updated>2022-10-18T21:14:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability only affects you if you are using the <code>code</code> or <code>password-reset</code> auth method with the <code>auth.methods</code> option. It can only be successfully exploited under server configuration conditions outside of the attacker's control.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Under normal circumstances, entering an invalid email address results in a "fake" login code form that looks exactly like the one of an existing user (unless debugging is enabled). However, the code that handles the creation of a code challenge (for code-based login or password reset) didn't catch errors that occurred while the challenge request was processed:</p>
<ul>
<li>If the challenge itself runs into an error (e.g. if the email could not be sent), attackers could tell existing users (where the challenge code is called) from non-existing users (where the challenge code is not called and therefore does not output an error).</li>
<li>If you are using the <code>user.login:failed</code> hook and any exception is thrown within the hook, attackers could see that the user does not exist.</li>
</ul>
<p>As long as no error occurs during challenge creation and during the processing of the <code>user.login:failed</code> hook, your Kirby sites are <em>not</em> affected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>All of the mentioned releases contain two patches for this vulnerability:</p>
<ul>
<li>All errors that occur during the creation of an auth challenge (code-based login or password reset) are swallowed by the backend and only displayed to the user if debugging is enabled.</li>
<li>We added a new <code>auth.debug</code> option that can be enabled separately from the <code>debug</code> option. If disabled, auth errors are only printed to the PHP error log. This ensures that security-critical errors are only displayed if they are really necessary for debugging.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by setting the <code>auth.methods</code> option to <code>password</code>, which disables the code-based login and password reset forms.</p>
<p>However please note that your site will still be vulnerable against <a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">another user enumeration issue</a> that was also fixed in the same patch releases.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="mailto:florian@hatchery.io">Florian Merz</a> (@florianmrz) of <a href="https://www.hatchery.io/">hatchery.io</a> for responsibly reporting the identified issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8">https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-43qq-qw4x-28f8">https://github.com/advisories/GHSA-43qq-qw4x-28f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43qq-qw4x-28f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:14:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the code-based login and password reset forms]]></title>
        <id>https://github.com/advisories/GHSA-43qq-qw4x-28f8</id>
        <link href="https://github.com/advisories/GHSA-43qq-qw4x-28f8"/>
        <updated>2022-10-18T21:14:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability only affects you if you are using the <code>code</code> or <code>password-reset</code> auth method with the <code>auth.methods</code> option. It can only be successfully exploited under server configuration conditions outside of the attacker's control.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Under normal circumstances, entering an invalid email address results in a "fake" login code form that looks exactly like the one of an existing user (unless debugging is enabled). However, the code that handles the creation of a code challenge (for code-based login or password reset) didn't catch errors that occurred while the challenge request was processed:</p>
<ul>
<li>If the challenge itself runs into an error (e.g. if the email could not be sent), attackers could tell existing users (where the challenge code is called) from non-existing users (where the challenge code is not called and therefore does not output an error).</li>
<li>If you are using the <code>user.login:failed</code> hook and any exception is thrown within the hook, attackers could see that the user does not exist.</li>
</ul>
<p>As long as no error occurs during challenge creation and during the processing of the <code>user.login:failed</code> hook, your Kirby sites are <em>not</em> affected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>All of the mentioned releases contain two patches for this vulnerability:</p>
<ul>
<li>All errors that occur during the creation of an auth challenge (code-based login or password reset) are swallowed by the backend and only displayed to the user if debugging is enabled.</li>
<li>We added a new <code>auth.debug</code> option that can be enabled separately from the <code>debug</code> option. If disabled, auth errors are only printed to the PHP error log. This ensures that security-critical errors are only displayed if they are really necessary for debugging.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by setting the <code>auth.methods</code> option to <code>password</code>, which disables the code-based login and password reset forms.</p>
<p>However please note that your site will still be vulnerable against <a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">another user enumeration issue</a> that was also fixed in the same patch releases.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="mailto:florian@hatchery.io">Florian Merz</a> (@florianmrz) of <a href="https://www.hatchery.io/">hatchery.io</a> for responsibly reporting the identified issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8">https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-43qq-qw4x-28f8">https://github.com/advisories/GHSA-43qq-qw4x-28f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43qq-qw4x-28f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:14:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the code-based login and password reset forms]]></title>
        <id>https://github.com/advisories/GHSA-43qq-qw4x-28f8</id>
        <link href="https://github.com/advisories/GHSA-43qq-qw4x-28f8"/>
        <updated>2022-10-18T21:14:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability only affects you if you are using the <code>code</code> or <code>password-reset</code> auth method with the <code>auth.methods</code> option. It can only be successfully exploited under server configuration conditions outside of the attacker's control.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Under normal circumstances, entering an invalid email address results in a "fake" login code form that looks exactly like the one of an existing user (unless debugging is enabled). However, the code that handles the creation of a code challenge (for code-based login or password reset) didn't catch errors that occurred while the challenge request was processed:</p>
<ul>
<li>If the challenge itself runs into an error (e.g. if the email could not be sent), attackers could tell existing users (where the challenge code is called) from non-existing users (where the challenge code is not called and therefore does not output an error).</li>
<li>If you are using the <code>user.login:failed</code> hook and any exception is thrown within the hook, attackers could see that the user does not exist.</li>
</ul>
<p>As long as no error occurs during challenge creation and during the processing of the <code>user.login:failed</code> hook, your Kirby sites are <em>not</em> affected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>All of the mentioned releases contain two patches for this vulnerability:</p>
<ul>
<li>All errors that occur during the creation of an auth challenge (code-based login or password reset) are swallowed by the backend and only displayed to the user if debugging is enabled.</li>
<li>We added a new <code>auth.debug</code> option that can be enabled separately from the <code>debug</code> option. If disabled, auth errors are only printed to the PHP error log. This ensures that security-critical errors are only displayed if they are really necessary for debugging.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by setting the <code>auth.methods</code> option to <code>password</code>, which disables the code-based login and password reset forms.</p>
<p>However please note that your site will still be vulnerable against <a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">another user enumeration issue</a> that was also fixed in the same patch releases.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="mailto:florian@hatchery.io">Florian Merz</a> (@florianmrz) of <a href="https://www.hatchery.io/">hatchery.io</a> for responsibly reporting the identified issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8">https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-43qq-qw4x-28f8">https://github.com/advisories/GHSA-43qq-qw4x-28f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43qq-qw4x-28f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:14:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Kirby CMS vulnerable to user enumeration in the code-based login and password reset forms]]></title>
        <id>https://github.com/advisories/GHSA-43qq-qw4x-28f8</id>
        <link href="https://github.com/advisories/GHSA-43qq-qw4x-28f8"/>
        <updated>2022-10-18T21:14:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="tldr">TL;DR</h3>
<p>This vulnerability only affects you if you are using the <code>code</code> or <code>password-reset</code> auth method with the <code>auth.methods</code> option. It can only be successfully exploited under server configuration conditions outside of the attacker's control.</p>
<hr>
<h3 id="introduction">Introduction</h3>
<p>User enumeration is a type of vulnerability that allows attackers to confirm which users are registered in a Kirby installation. This information can be abused for social engineering attacks against users of the site or to find out the organizational structure of the company.</p>
<p>User enumeration attacks are performed by entering an existing and a non-existing user into the email address field of the login form. If the system returns a different response or behaves differently depending on whether the user exists, the attacker can enter unknown email addresses and use the different behavior as a clue for the (non-)existing user.</p>
<h3 id="impact">Impact</h3>
<p>Under normal circumstances, entering an invalid email address results in a "fake" login code form that looks exactly like the one of an existing user (unless debugging is enabled). However, the code that handles the creation of a code challenge (for code-based login or password reset) didn't catch errors that occurred while the challenge request was processed:</p>
<ul>
<li>If the challenge itself runs into an error (e.g. if the email could not be sent), attackers could tell existing users (where the challenge code is called) from non-existing users (where the challenge code is not called and therefore does not output an error).</li>
<li>If you are using the <code>user.login:failed</code> hook and any exception is thrown within the hook, attackers could see that the user does not exist.</li>
</ul>
<p>As long as no error occurs during challenge creation and during the processing of the <code>user.login:failed</code> hook, your Kirby sites are <em>not</em> affected by this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">Kirby 3.5.8.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">Kirby 3.6.6.2</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">Kirby 3.7.5.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">Kirby 3.8.1</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<p>All of the mentioned releases contain two patches for this vulnerability:</p>
<ul>
<li>All errors that occur during the creation of an auth challenge (code-based login or password reset) are swallowed by the backend and only displayed to the user if debugging is enabled.</li>
<li>We added a new <code>auth.debug</code> option that can be enabled separately from the <code>debug</code> option. If disabled, auth errors are only printed to the PHP error log. This ensures that security-critical errors are only displayed if they are really necessary for debugging.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by setting the <code>auth.methods</code> option to <code>password</code>, which disables the code-based login and password reset forms.</p>
<p>However please note that your site will still be vulnerable against <a href="https://github.com/getkirby/kirby/security/advisories/GHSA-c27j-76xg-6x4f">another user enumeration issue</a> that was also fixed in the same patch releases.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to <a href="mailto:florian@hatchery.io">Florian Merz</a> (@florianmrz) of <a href="https://www.hatchery.io/">hatchery.io</a> for responsibly reporting the identified issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8">https://github.com/getkirby/kirby/security/advisories/GHSA-43qq-qw4x-28f8</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.2">https://github.com/getkirby/kirby/releases/tag/3.5.8.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.2">https://github.com/getkirby/kirby/releases/tag/3.6.6.2</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.7.5.1">https://github.com/getkirby/kirby/releases/tag/3.7.5.1</a></li>
<li><a href="https://github.com/getkirby/kirby/releases/tag/3.8.1">https://github.com/getkirby/kirby/releases/tag/3.8.1</a></li>
<li><a href="https://github.com/advisories/GHSA-43qq-qw4x-28f8">https://github.com/advisories/GHSA-43qq-qw4x-28f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43qq-qw4x-28f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T21:14:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[oro/commerce] OroCommerce Cross site scripting vulnerability during shipping rule editing for UPS integration]]></title>
        <id>https://github.com/advisories/GHSA-4vf4-955g-vxp2</id>
        <link href="https://github.com/advisories/GHSA-4vf4-955g-vxp2"/>
        <updated>2022-10-18T19:52:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Shipping rule edit page is vulnerable to cross site scripting (XSS) payload added to UPS Surcharge field. The attacker should have permission to create or edit a shipping rule.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/oroinc/orocommerce/security/advisories/GHSA-4vf4-955g-vxp2">https://github.com/oroinc/orocommerce/security/advisories/GHSA-4vf4-955g-vxp2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31037">https://nvd.nist.gov/vuln/detail/CVE-2022-31037</a></li>
<li><a href="https://github.com/advisories/GHSA-4vf4-955g-vxp2">https://github.com/advisories/GHSA-4vf4-955g-vxp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vf4-955g-vxp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-18T19:52:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[october/system] October CMS Safe Mode bypass leads to authenticated Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</id>
        <link href="https://github.com/advisories/GHSA-x4q7-m6fp-4v9v"/>
        <updated>2022-10-24T18:35:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability only affects installations that rely on the safe mode restriction, commonly used when providing public access to the admin panel. Assuming an attacker has access to the admin panel and permission to open the "Editor" section, they can bypass the Safe Mode (<code>cms.safe_mode</code>) restriction to introduce new PHP code in a CMS template using a specially crafted request.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been patched in v2.2.34 and v3.0.66</p>
<h3 id="references">References</h3>
<p>Credits to:</p>
<ul>
<li>David Miller</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:hello@octobercms.com">hello@octobercms.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/octobercms/october/security/advisories/GHSA-x4q7-m6fp-4v9v">https://github.com/octobercms/october/security/advisories/GHSA-x4q7-m6fp-4v9v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35944">https://nvd.nist.gov/vuln/detail/CVE-2022-35944</a></li>
<li><a href="https://github.com/advisories/GHSA-x4q7-m6fp-4v9v">https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4q7-m6fp-4v9v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-13T19:11:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr vulnerable to Eval Injection]]></title>
        <id>https://github.com/advisories/GHSA-7cm4-vmf2-8wf2</id>
        <link href="https://github.com/advisories/GHSA-7cm4-vmf2-8wf2"/>
        <updated>2022-10-18T03:10:46.000Z</updated>
        <content type="html"><![CDATA[<p>Dolibarr ERP &amp; CRM &lt;=15.0.3 are vulnerable to Eval injection. By default, any administrator can be added to the installation page of dolibarr, and if successfully added, malicious code can be inserted into the database and then execute it by eval.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40871">https://nvd.nist.gov/vuln/detail/CVE-2022-40871</a></li>
<li><a href="https://github.com/youncyb/dolibarr-rce">https://github.com/youncyb/dolibarr-rce</a></li>
<li><a href="https://github.com/advisories/GHSA-7cm4-vmf2-8wf2">https://github.com/advisories/GHSA-7cm4-vmf2-8wf2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cm4-vmf2-8wf2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-12T19:00:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[melisplatform/melis-asset-manager] melisplatform/melis-asset-manager vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-7fj2-rrq6-rphq</id>
        <link href="https://github.com/advisories/GHSA-7fj2-rrq6-rphq"/>
        <updated>2022-10-14T19:45:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Attackers can read arbitrary files on affected versions of <code>melisplatform/melis-asset-manager</code>, leading to the disclosure of sensitive information. Conducting this attack does not require authentication.</p>
<p>Users should immediately upgrade to <code>melisplatform/melis-asset-manager</code> &gt;= 5.0.1.</p>
<h3 id="patches">Patches</h3>
<p>This issue was addressed by restricting access to files to intended directories only.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-asset-manager/commit/a0f75918c049aff78953a0bc91c585153595d1bd">https://github.com/melisplatform/melis-asset-manager/commit/a0f75918c049aff78953a0bc91c585153595d1bd</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, you can contact:</p>
<ul>
<li>The original reporters, by sending an email to vulnerability.research [at] sonarsource.com;</li>
<li>The maintainers, by opening an issue on this repository.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-asset-manager/security/advisories/GHSA-7fj2-rrq6-rphq">https://github.com/melisplatform/melis-asset-manager/security/advisories/GHSA-7fj2-rrq6-rphq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39296">https://nvd.nist.gov/vuln/detail/CVE-2022-39296</a></li>
<li><a href="https://github.com/melisplatform/melis-asset-manager/commit/a0f75918c049aff78953a0bc91c585153595d1bd">https://github.com/melisplatform/melis-asset-manager/commit/a0f75918c049aff78953a0bc91c585153595d1bd</a></li>
<li><a href="https://github.com/advisories/GHSA-7fj2-rrq6-rphq">https://github.com/advisories/GHSA-7fj2-rrq6-rphq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fj2-rrq6-rphq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-11T20:46:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[melisplatform/melis-cms] melisplatform/melis-cms vulnerable to deserialization of untrusted data]]></title>
        <id>https://github.com/advisories/GHSA-m3m3-6gww-7gj9</id>
        <link href="https://github.com/advisories/GHSA-m3m3-6gww-7gj9"/>
        <updated>2022-10-13T20:09:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Attackers can deserialize arbitrary data on affected versions of <code>melisplatform/melis-cms</code>, and ultimately leads to the execution of arbitrary PHP code on the system. Conducting this attack does not require authentication.</p>
<p>Users should immediately upgrade to <code>melisplatform/melis-cms</code> &gt;= 5.0.1.</p>
<h3 id="patches">Patches</h3>
<p>This issue was addressed by restricting allowed classes when deserializing user-controlled data. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-cms/commit/d124b2474699a679a24ec52620cadceb3d4cec11">https://github.com/melisplatform/melis-cms/commit/d124b2474699a679a24ec52620cadceb3d4cec11</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, you can contact:</p>
<ul>
<li>The original reporters, by sending an email to vulnerability.research [at] sonarsource.com;</li>
<li>The maintainers, by opening an issue on this repository.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-cms/security/advisories/GHSA-m3m3-6gww-7gj9">https://github.com/melisplatform/melis-cms/security/advisories/GHSA-m3m3-6gww-7gj9</a></li>
<li><a href="https://github.com/melisplatform/melis-cms/commit/d124b2474699a679a24ec52620cadceb3d4cec11">https://github.com/melisplatform/melis-cms/commit/d124b2474699a679a24ec52620cadceb3d4cec11</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39297">https://nvd.nist.gov/vuln/detail/CVE-2022-39297</a></li>
<li><a href="https://github.com/advisories/GHSA-m3m3-6gww-7gj9">https://github.com/advisories/GHSA-m3m3-6gww-7gj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3m3-6gww-7gj9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-11T20:45:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[melisplatform/melis-front] melisplatform/melis-front vulnerable to deserialization of untrusted data]]></title>
        <id>https://github.com/advisories/GHSA-h479-2mv4-5c26</id>
        <link href="https://github.com/advisories/GHSA-h479-2mv4-5c26"/>
        <updated>2022-10-13T20:10:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Attackers can deserialize arbitrary data on affected versions of <code>melisplatform/melis-front</code>, and ultimately leads to the execution of arbitrary PHP code on the system. Conducting this attack does not require authentication.</p>
<p>Users should immediately upgrade to <code>melisplatform/melis-front</code> &gt;= 5.0.1.</p>
<h3 id="patches">Patches</h3>
<p>This issue was addressed by restricting allowed classes when deserializing user-controlled data. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-front/commit/89ae612d5f1f7aa2fb621ee8de27dffe1feb851e">https://github.com/melisplatform/melis-front/commit/89ae612d5f1f7aa2fb621ee8de27dffe1feb851e</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, you can contact:</p>
<ul>
<li>The original reporters, by sending an email to vulnerability.research [at] sonarsource.com;</li>
<li>The maintainers, by opening an issue on this repository.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/melisplatform/melis-front/security/advisories/GHSA-h479-2mv4-5c26">https://github.com/melisplatform/melis-front/security/advisories/GHSA-h479-2mv4-5c26</a></li>
<li><a href="https://github.com/melisplatform/melis-front/commit/89ae612d5f1f7aa2fb621ee8de27dffe1feb851e">https://github.com/melisplatform/melis-front/commit/89ae612d5f1f7aa2fb621ee8de27dffe1feb851e</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39298">https://nvd.nist.gov/vuln/detail/CVE-2022-39298</a></li>
<li><a href="https://github.com/advisories/GHSA-h479-2mv4-5c26">https://github.com/advisories/GHSA-h479-2mv4-5c26</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h479-2mv4-5c26</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-11T20:45:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpmailer/phpmailer] PHPMailer vulnerable to email header injection]]></title>
        <id>https://github.com/advisories/GHSA-398j-f7m7-795j</id>
        <link href="https://github.com/advisories/GHSA-398j-f7m7-795j"/>
        <updated>2022-10-06T21:25:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Arbitrary additional email headers can be injected via crafted From or Sender headers.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in 2.2.1</p>
<h3 id="workarounds">Workarounds</h3>
<p>Filter user-supplied values prior to using them in From or Sender properties.</p>
<h3 id="references">References</h3>
<p><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-0796">https://nvd.nist.gov/vuln/detail/CVE-2012-0796</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a private issue in <a href="https://github.com/PHPMailer/PHPMailer">the PHPMailer project</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/PHPMailer/PHPMailer/security/advisories/GHSA-398j-f7m7-795j">https://github.com/PHPMailer/PHPMailer/security/advisories/GHSA-398j-f7m7-795j</a></li>
<li><a href="https://github.com/advisories/GHSA-398j-f7m7-795j">https://github.com/advisories/GHSA-398j-f7m7-795j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-398j-f7m7-795j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-06T21:25:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yetiforce/yetiforce-crm] YetiForce CRM vulnerable to stored Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-v9fj-h8g6-4w9q</id>
        <link href="https://github.com/advisories/GHSA-v9fj-h8g6-4w9q"/>
        <updated>2022-10-07T13:10:02.000Z</updated>
        <content type="html"><![CDATA[<p>YetiForce CRM version 6.4.0 and prior is vulnerable to stored cross-site scripting. A <a href="https://github.com/yetiforcecompany/yetiforcecrm/commit/54728becfdad9b6e686bbe336007cba2ce518248">patch</a> is available on the <code>developer</code> branch.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3002">https://nvd.nist.gov/vuln/detail/CVE-2022-3002</a></li>
<li><a href="https://github.com/yetiforcecompany/yetiforcecrm/commit/54728becfdad9b6e686bbe336007cba2ce518248">https://github.com/yetiforcecompany/yetiforcecrm/commit/54728becfdad9b6e686bbe336007cba2ce518248</a></li>
<li><a href="https://huntr.dev/bounties/d213d7ea-fe92-40b2-a1f9-2ba32dec50f5">https://huntr.dev/bounties/d213d7ea-fe92-40b2-a1f9-2ba32dec50f5</a></li>
<li><a href="https://github.com/advisories/GHSA-v9fj-h8g6-4w9q">https://github.com/advisories/GHSA-v9fj-h8g6-4w9q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v9fj-h8g6-4w9q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T18:52:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codeigniter4/framework] Codeigniter4's Secure or HttpOnly flag set in Config\Cookie is not reflected in Cookies issued]]></title>
        <id>https://github.com/advisories/GHSA-745p-r637-7vvp</id>
        <link href="https://github.com/advisories/GHSA-745p-r637-7vvp"/>
        <updated>2022-10-10T19:41:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Setting <code>$secure</code> or <code>$httponly</code> value to <code>true</code> in <code>Config\Cookie</code> is not reflected in <code>set_cookie()</code> or <code>Response::setCookie()</code>.</p>
<blockquote>
<p><strong>Note</strong>
This vulnerability does not affect session cookies.</p>
</blockquote>
<p>The following code does not issue a cookie with the secure flag even if you set <code>$secure = true</code> in <code>Config\Cookie</code>.</p>
<pre><code class="language-php">helper('cookie');

$cookie = [
    'name'  =&gt; $name,
    'value' =&gt; $value,
];
set_cookie($cookie);
// or
$this-&gt;response-&gt;setCookie($cookie);
</code></pre>
<h3 id="patches">Patches</h3>
<p>Upgrade to v4.2.7 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<ol>
<li>Specify the options explicitly.<pre><code class="language-php">helper('cookie');

$cookie = [
    'name'     =&gt; $name,
    'value'    =&gt; $value,
    'secure'   =&gt; true,
    'httponly' =&gt; true,
];
set_cookie($cookie);
// or
$this-&gt;response-&gt;setCookie($cookie);
</code></pre>
</li>
<li>Use Cookie object.<pre><code class="language-php">use CodeIgniter\Cookie\Cookie;

helper('cookie');

$cookie = new Cookie($name, $value);
set_cookie($cookie);
// or
$this-&gt;response-&gt;setCookie($cookie);
</code></pre>
</li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://codeigniter4.github.io/userguide/helpers/cookie_helper.html#set_cookie">https://codeigniter4.github.io/userguide/helpers/cookie_helper.html#set_cookie</a></li>
<li><a href="https://codeigniter4.github.io/userguide/outgoing/response.html#CodeIgniter%5CHTTP%5CResponse::setCookie">https://codeigniter4.github.io/userguide/outgoing/response.html#CodeIgniter\HTTP\Response::setCookie</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/codeigniter4/CodeIgniter4/issues">codeigniter4/CodeIgniter4</a></li>
<li>Email us at <a href="https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md">SECURITY.md</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-745p-r637-7vvp">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-745p-r637-7vvp</a></li>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/issues/6540">https://github.com/codeigniter4/CodeIgniter4/issues/6540</a></li>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/pull/6544">https://github.com/codeigniter4/CodeIgniter4/pull/6544</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39284">https://nvd.nist.gov/vuln/detail/CVE-2022-39284</a></li>
<li><a href="https://codeigniter4.github.io/userguide/helpers/cookie_helper.html#set_cookie">https://codeigniter4.github.io/userguide/helpers/cookie_helper.html#set_cookie</a></li>
<li><a href="https://codeigniter4.github.io/userguide/outgoing/response.html#CodeIgniter%5CHTTP%5CResponse::setCookie">https://codeigniter4.github.io/userguide/outgoing/response.html#CodeIgniter%5CHTTP%5CResponse::setCookie</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies">https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/codeigniter4/framework/CVE-2022-39284.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/codeigniter4/framework/CVE-2022-39284.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-745p-r637-7vvp">https://github.com/advisories/GHSA-745p-r637-7vvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-745p-r637-7vvp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T20:01:41.000Z</published>
    </entry>
</feed>