<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-05-27T07:01:22.670Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</id>
        <link href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r"/>
        <updated>2024-05-24T19:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>An Incorrect Access Control vulnerability was found in Wikimedia MediaWiki 1.18.0 through 1.32.1. It is possible to bypass the limits on IP range blocks ($wgBlockCIDRLimit) by using the API. Fixed in 1.32.2, 1.31.2, 1.30.2 and 1.27.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12472">https://nvd.nist.gov/vuln/detail/CVE-2019-12472</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html">https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T199540">https://phabricator.wikimedia.org/T199540</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r">https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</id>
        <link href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r"/>
        <updated>2024-05-24T19:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>An Incorrect Access Control vulnerability was found in Wikimedia MediaWiki 1.18.0 through 1.32.1. It is possible to bypass the limits on IP range blocks ($wgBlockCIDRLimit) by using the API. Fixed in 1.32.2, 1.31.2, 1.30.2 and 1.27.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12472">https://nvd.nist.gov/vuln/detail/CVE-2019-12472</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html">https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T199540">https://phabricator.wikimedia.org/T199540</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r">https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</id>
        <link href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r"/>
        <updated>2024-05-24T19:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>An Incorrect Access Control vulnerability was found in Wikimedia MediaWiki 1.18.0 through 1.32.1. It is possible to bypass the limits on IP range blocks ($wgBlockCIDRLimit) by using the API. Fixed in 1.32.2, 1.31.2, 1.30.2 and 1.27.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12472">https://nvd.nist.gov/vuln/detail/CVE-2019-12472</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html">https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T199540">https://phabricator.wikimedia.org/T199540</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r">https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mediawiki/core] MediaWiki Incorrect Access Control vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</id>
        <link href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r"/>
        <updated>2024-05-24T19:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>An Incorrect Access Control vulnerability was found in Wikimedia MediaWiki 1.18.0 through 1.32.1. It is possible to bypass the limits on IP range blocks ($wgBlockCIDRLimit) by using the API. Fixed in 1.32.2, 1.31.2, 1.30.2 and 1.27.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12472">https://nvd.nist.gov/vuln/detail/CVE-2019-12472</a></li>
<li><a href="https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html">https://lists.wikimedia.org/pipermail/wikitech-l/2019-June/092152.html</a></li>
<li><a href="https://phabricator.wikimedia.org/T199540">https://phabricator.wikimedia.org/T199540</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/mediawiki/core/CVE-2019-12472.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7mqg-5fgh-xh4r">https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7mqg-5fgh-xh4r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpservermon/phpservermon] PHP Server Monitor vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-rq7f-j68f-mqh3</id>
        <link href="https://github.com/advisories/GHSA-rq7f-j68f-mqh3"/>
        <updated>2024-05-24T18:45:29.000Z</updated>
        <content type="html"><![CDATA[<p>PHP Server Monitor, version 3.2.0, is vulnerable to an XSS via the /phpservermon-3.2.0/vendor/phpmailer/phpmailer/test_script/index.php page in all visible parameters. An attacker could create a specially crafted URL, send it to a victim and retrieve their session details.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5312">https://nvd.nist.gov/vuln/detail/CVE-2024-5312</a></li>
<li><a href="https://github.com/PHPMailer/PHPMailer/commit/ff8718f72225a2e34d918c06a3b2c8cca5af3164">https://github.com/PHPMailer/PHPMailer/commit/ff8718f72225a2e34d918c06a3b2c8cca5af3164</a></li>
<li><a href="https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-php-server-monitor">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-php-server-monitor</a></li>
<li><a href="https://github.com/advisories/GHSA-rq7f-j68f-mqh3">https://github.com/advisories/GHSA-rq7f-j68f-mqh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rq7f-j68f-mqh3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-24T18:45:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-q8x7-jc3h-p8xc</id>
        <link href="https://github.com/advisories/GHSA-q8x7-jc3h-p8xc"/>
        <updated>2024-05-24T14:53:46.000Z</updated>
        <content type="html"><![CDATA[<p>Vulnerabilities in Dolibarr ERP - CRM that affect version 9.0.1 and allow SQL injection. These vulnerabilities could allow a remote attacker to send a specially crafted SQL query to the system and retrieve all the information stored in the database through the parameters in /dolibarr/commande/list.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5315">https://nvd.nist.gov/vuln/detail/CVE-2024-5315</a></li>
<li><a href="https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-dolibarrs-erp-cms">https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-dolibarrs-erp-cms</a></li>
<li><a href="https://github.com/advisories/GHSA-q8x7-jc3h-p8xc">https://github.com/advisories/GHSA-q8x7-jc3h-p8xc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q8x7-jc3h-p8xc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-24T14:53:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Dolibarr vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-q3jx-w7fc</id>
        <link href="https://github.com/advisories/GHSA-c3h9-q3jx-w7fc"/>
        <updated>2024-05-24T14:53:36.000Z</updated>
        <content type="html"><![CDATA[<p>Vulnerabilities in Dolibarr ERP - CRM that affect version 9.0.1 and allow SQL injection. These vulnerabilities could allow a remote attacker to send a specially crafted SQL query to the system and retrieve all the information stored in the database through the parameters sortorder y sortfield in /dolibarr/admin/dict.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5314">https://nvd.nist.gov/vuln/detail/CVE-2024-5314</a></li>
<li><a href="https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-dolibarrs-erp-cms">https://www.incibe.es/en/incibe-cert/notices/aviso/multiple-vulnerabilities-dolibarrs-erp-cms</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-q3jx-w7fc">https://github.com/advisories/GHSA-c3h9-q3jx-w7fc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-q3jx-w7fc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-24T14:53:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Cross-site scripting vulnerability in VersionedRequestFilter]]></title>
        <id>https://github.com/advisories/GHSA-mpqj-f4v3-334h</id>
        <link href="https://github.com/advisories/GHSA-mpqj-f4v3-334h"/>
        <updated>2024-05-23T19:46:37.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability in VersionedRequestFilter has been found.</p>
<p>If an incoming user request should not be able to access the requested stage, an error message is created for display on the CMS login page that they are redirected to. In this error message, the URL of the requested page is interpolated into the error message without being escaped; hence, arbitrary HTML can be injected into the CMS login page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8">https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836">https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-007">https://www.silverstripe.org/download/security-releases/ss-2016-007</a></li>
<li><a href="https://github.com/advisories/GHSA-mpqj-f4v3-334h">https://github.com/advisories/GHSA-mpqj-f4v3-334h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpqj-f4v3-334h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:46:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Cross-site scripting vulnerability in VersionedRequestFilter]]></title>
        <id>https://github.com/advisories/GHSA-mpqj-f4v3-334h</id>
        <link href="https://github.com/advisories/GHSA-mpqj-f4v3-334h"/>
        <updated>2024-05-23T19:46:37.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability in VersionedRequestFilter has been found.</p>
<p>If an incoming user request should not be able to access the requested stage, an error message is created for display on the CMS login page that they are redirected to. In this error message, the URL of the requested page is interpolated into the error message without being escaped; hence, arbitrary HTML can be injected into the CMS login page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8">https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836">https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-007">https://www.silverstripe.org/download/security-releases/ss-2016-007</a></li>
<li><a href="https://github.com/advisories/GHSA-mpqj-f4v3-334h">https://github.com/advisories/GHSA-mpqj-f4v3-334h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpqj-f4v3-334h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:46:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe XSS in CMS Edit Page]]></title>
        <id>https://github.com/advisories/GHSA-m8v7-x398-pxrf</id>
        <link href="https://github.com/advisories/GHSA-m8v7-x398-pxrf"/>
        <updated>2024-05-23T19:33:36.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a lack of parameter sanitisation a carefully crafted URL could be used to inject arbitrary HTML into the CMS Edit page.</p>
<p>An attacker could create a URL and share it with a site administrator to perform an attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770">https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commits/3.3.2">https://github.com/silverstripe/silverstripe-framework/commits/3.3.2</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-004">https://www.silverstripe.org/download/security-releases/ss-2016-004</a></li>
<li><a href="https://github.com/advisories/GHSA-m8v7-x398-pxrf">https://github.com/advisories/GHSA-m8v7-x398-pxrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8v7-x398-pxrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:33:34.000Z</published>
    </entry>
</feed>