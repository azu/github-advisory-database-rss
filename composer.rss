<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2022-03-11T00:19:55.012Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[silverstripe/graphql] Authentication bypass in SilverStripe GraphQL]]></title>
        <id>https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</id>
        <link href="https://github.com/advisories/GHSA-mg2g-8pwj-r2j2"/>
        <updated>2022-03-09T23:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>The GraphQL module accepts basic-auth as an authentication method by default. This can be used to bypass MFA authentication if the silverstripe/mfa module is installed, which is now a commonly installed module. A users password is still required though.</p>
<p>Basic-auth has been removed as a default authentication method. It desired, it can be re-enabled by adding it to the authenticators key of a schema, or on SilverStripe\Graphql\Auth\Handler</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26136">https://nvd.nist.gov/vuln/detail/CVE-2020-26136</a></li>
<li><a href="https://forum.silverstripe.org/c/releases">https://forum.silverstripe.org/c/releases</a></li>
<li><a href="https://www.silverstripe.org/blog/tag/release">https://www.silverstripe.org/blog/tag/release</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/">https://www.silverstripe.org/download/security-releases/</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2020-26136">https://www.silverstripe.org/download/security-releases/cve-2020-26136</a></li>
<li><a href="https://github.com/advisories/GHSA-mg2g-8pwj-r2j2">https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</uri>
        </author>
        <published>2021-06-10T17:21:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/graphql] Authentication bypass in SilverStripe GraphQL]]></title>
        <id>https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</id>
        <link href="https://github.com/advisories/GHSA-mg2g-8pwj-r2j2"/>
        <updated>2022-03-09T23:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>The GraphQL module accepts basic-auth as an authentication method by default. This can be used to bypass MFA authentication if the silverstripe/mfa module is installed, which is now a commonly installed module. A users password is still required though.</p>
<p>Basic-auth has been removed as a default authentication method. It desired, it can be re-enabled by adding it to the authenticators key of a schema, or on SilverStripe\Graphql\Auth\Handler</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26136">https://nvd.nist.gov/vuln/detail/CVE-2020-26136</a></li>
<li><a href="https://forum.silverstripe.org/c/releases">https://forum.silverstripe.org/c/releases</a></li>
<li><a href="https://www.silverstripe.org/blog/tag/release">https://www.silverstripe.org/blog/tag/release</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/">https://www.silverstripe.org/download/security-releases/</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2020-26136">https://www.silverstripe.org/download/security-releases/cve-2020-26136</a></li>
<li><a href="https://github.com/advisories/GHSA-mg2g-8pwj-r2j2">https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mg2g-8pwj-r2j2</uri>
        </author>
        <published>2021-06-10T17:21:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ezsystems/ezplatform-kernel] Exposure of Resource to Wrong Sphere in ezsystems/ezplatform-kernel]]></title>
        <id>https://github.com/advisories/GHSA-x8xx-x82q-42q3</id>
        <link href="https://github.com/advisories/GHSA-x8xx-x82q-42q3"/>
        <updated>2022-03-08T21:24:56.000Z</updated>
        <content type="html"><![CDATA[<p>When image files are uploaded, they are made accessible under a name similar to the original file name. There are two issues with this. Both require access to uploading images in order to exploit them, this limits the impact. The first issue is that certain injection attacks can be possible, since not all possible attack vectors are removed from the original file name.</p>
<p>The second issue is that direct access to the images is not access controlled. This is by design, for performance reasons, and documented as such. But it does mean that images not meant to be publicly accessible can be accessed, provided that the image path and filename is correctly deduced and/or guessed, through dictionary attacks and similar.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25336">https://nvd.nist.gov/vuln/detail/CVE-2022-25336</a></li>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization">https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization</a></li>
<li><a href="https://github.com/advisories/GHSA-x8xx-x82q-42q3">https://github.com/advisories/GHSA-x8xx-x82q-42q3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x8xx-x82q-42q3</uri>
        </author>
        <published>2022-02-19T00:01:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ezsystems/ezpublish-kernel] Code injection in ezsystems/ezpublish-kernel]]></title>
        <id>https://github.com/advisories/GHSA-xwv6-v7qx-f5jc</id>
        <link href="https://github.com/advisories/GHSA-xwv6-v7qx-f5jc"/>
        <updated>2022-03-08T21:24:54.000Z</updated>
        <content type="html"><![CDATA[<p>When image files are uploaded, they are made accessible under a name similar to the original file name. There are two issues with this. Both require access to uploading images in order to exploit them, this limits the impact. The first issue is that certain injection attacks can be possible, since not all possible attack vectors are removed from the original file name.</p>
<p>The second issue is that direct access to the images is not access controlled. This is by design, for performance reasons, and documented as such. But it does mean that images not meant to be publicly accessible can be accessed, provided that the image path and filename is correctly deduced and/or guessed, through dictionary attacks and similar.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25337">https://nvd.nist.gov/vuln/detail/CVE-2022-25337</a></li>
<li><a href="https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization">https://developers.ibexa.co/security-advisories/ibexa-sa-2022-001-image-filenames-sanitization</a></li>
<li><a href="https://github.com/advisories/GHSA-xwv6-v7qx-f5jc">https://github.com/advisories/GHSA-xwv6-v7qx-f5jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xwv6-v7qx-f5jc</uri>
        </author>
        <published>2022-02-19T00:01:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Improper Authorization in dolibarr/dolibarr]]></title>
        <id>https://github.com/advisories/GHSA-4xc7-x2jr-cr74</id>
        <link href="https://github.com/advisories/GHSA-4xc7-x2jr-cr74"/>
        <updated>2022-03-04T14:46:06.000Z</updated>
        <content type="html"><![CDATA[<p>Dolibarr allows improper access control issues in the userphoto modulepart. The impact could lead to data exposure as the attached files and documents may contain sensitive information of relevant parties such as contacts, suppliers, invoices, orders, stocks, agenda, accounting and more.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0731">https://nvd.nist.gov/vuln/detail/CVE-2022-0731</a></li>
<li><a href="https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a">https://github.com/dolibarr/dolibarr/commit/209ab708d4b65fbd88ba4340d60b7822cb72651a</a></li>
<li><a href="https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8">https://huntr.dev/bounties/e242ab4e-fc70-4b2c-a42d-5b3ee4895de8</a></li>
<li><a href="https://github.com/advisories/GHSA-4xc7-x2jr-cr74">https://github.com/advisories/GHSA-4xc7-x2jr-cr74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4xc7-x2jr-cr74</uri>
        </author>
        <published>2022-02-24T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ectouch/ectouch] Arbitrary file delete in ectouch/ectouch]]></title>
        <id>https://github.com/advisories/GHSA-ph62-8768-r87v</id>
        <link href="https://github.com/advisories/GHSA-ph62-8768-r87v"/>
        <updated>2022-03-04T14:47:36.000Z</updated>
        <content type="html"><![CDATA[<p>ECTouch v2 suffers from arbitrary file deletion due to insufficient filtering of the filename parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25098">https://nvd.nist.gov/vuln/detail/CVE-2022-25098</a></li>
<li><a href="https://github.com/dota-st/Vulnerability/blob/master/ECTouchV2.md">https://github.com/dota-st/Vulnerability/blob/master/ECTouchV2.md</a></li>
<li><a href="https://github.com/advisories/GHSA-ph62-8768-r87v">https://github.com/advisories/GHSA-ph62-8768-r87v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ph62-8768-r87v</uri>
        </author>
        <published>2022-02-25T00:01:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dolibarr/dolibarr] Code injection in dolibarr/dolibarr]]></title>
        <id>https://github.com/advisories/GHSA-42qm-c3cf-9wv2</id>
        <link href="https://github.com/advisories/GHSA-42qm-c3cf-9wv2"/>
        <updated>2022-03-10T15:55:04.000Z</updated>
        <content type="html"><![CDATA[<p>Improper php function sanitization, lead to an ability to inject arbitrary PHP code and run arbitrary commands on file system. In the function "dol_eval" in file "dolibarr/htdocs/core/lib/functions.lib.php" dangerous PHP functions are sanitized using "str_replace" and can be bypassed using following code in $s parameter</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0819">https://nvd.nist.gov/vuln/detail/CVE-2022-0819</a></li>
<li><a href="https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075">https://github.com/dolibarr/dolibarr/commit/2a48dd349e7de0d4a38e448b0d2ecbe25e968075</a></li>
<li><a href="https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5">https://huntr.dev/bounties/b03d4415-d4f9-48c8-9ae2-d3aa248027b5</a></li>
<li><a href="https://github.com/advisories/GHSA-42qm-c3cf-9wv2">https://github.com/advisories/GHSA-42qm-c3cf-9wv2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-42qm-c3cf-9wv2</uri>
        </author>
        <published>2022-03-03T00:00:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matyhtf/framework] Path manipulation in matyhtf/framework]]></title>
        <id>https://github.com/advisories/GHSA-mh9j-v6mq-pfch</id>
        <link href="https://github.com/advisories/GHSA-mh9j-v6mq-pfch"/>
        <updated>2022-03-08T21:25:20.000Z</updated>
        <content type="html"><![CDATA[<p>matyhtf framework v3.0.5 is affected by a path manipulation vulnerability in Smarty.class.php.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43676">https://nvd.nist.gov/vuln/detail/CVE-2021-43676</a></li>
<li><a href="https://github.com/matyhtf/framework/issues/206">https://github.com/matyhtf/framework/issues/206</a></li>
<li><a href="https://github.com/advisories/GHSA-mh9j-v6mq-pfch">https://github.com/advisories/GHSA-mh9j-v6mq-pfch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh9j-v6mq-pfch</uri>
        </author>
        <published>2021-12-04T00:01:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microweber/microweber] Rate limit missing in microweber]]></title>
        <id>https://github.com/advisories/GHSA-7r79-mrp6-8mhq</id>
        <link href="https://github.com/advisories/GHSA-7r79-mrp6-8mhq"/>
        <updated>2022-03-10T16:00:57.000Z</updated>
        <content type="html"><![CDATA[<p>Microweber prior to version 1.3 does not rate limit password reset emails.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0777">https://nvd.nist.gov/vuln/detail/CVE-2022-0777</a></li>
<li><a href="https://github.com/microweber/microweber/commit/a3944cf9d1d8c41a48297ddc98302934e2511b0f">https://github.com/microweber/microweber/commit/a3944cf9d1d8c41a48297ddc98302934e2511b0f</a></li>
<li><a href="https://huntr.dev/bounties/b36be8cd-544f-42bd-990d-aa1a46df44d7">https://huntr.dev/bounties/b36be8cd-544f-42bd-990d-aa1a46df44d7</a></li>
<li><a href="https://github.com/advisories/GHSA-7r79-mrp6-8mhq">https://github.com/advisories/GHSA-7r79-mrp6-8mhq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7r79-mrp6-8mhq</uri>
        </author>
        <published>2022-03-02T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getgrav/grav] Cross site scripting in getgrav/grav]]></title>
        <id>https://github.com/advisories/GHSA-2p89-ppc2-mrq4</id>
        <link href="https://github.com/advisories/GHSA-2p89-ppc2-mrq4"/>
        <updated>2022-03-02T21:28:14.000Z</updated>
        <content type="html"><![CDATA[<p>User input is not properly sanitized leading to cross site scrpting (xss) in grav.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0743">https://nvd.nist.gov/vuln/detail/CVE-2022-0743</a></li>
<li><a href="https://github.com/getgrav/grav/commit/3dd0cabeac9835fe64dcb4b68c658b39f1f6be2f">https://github.com/getgrav/grav/commit/3dd0cabeac9835fe64dcb4b68c658b39f1f6be2f</a></li>
<li><a href="https://huntr.dev/bounties/32ea4ddb-5b41-4bf9-b5a1-ef455fe2d293">https://huntr.dev/bounties/32ea4ddb-5b41-4bf9-b5a1-ef455fe2d293</a></li>
<li><a href="https://github.com/advisories/GHSA-2p89-ppc2-mrq4">https://github.com/advisories/GHSA-2p89-ppc2-mrq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2p89-ppc2-mrq4</uri>
        </author>
        <published>2022-03-02T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pimcore/pimcore] Path traversal in pimcore]]></title>
        <id>https://github.com/advisories/GHSA-gjq4-69wj-p6pr</id>
        <link href="https://github.com/advisories/GHSA-gjq4-69wj-p6pr"/>
        <updated>2022-03-03T13:27:26.000Z</updated>
        <content type="html"><![CDATA[<p>The application doesn't perform a check/filter against the value of "importFile" parameter at endpoint "/admin/translation/import". After the API is executed, PHP unlink function will proceed to delete the file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0665">https://nvd.nist.gov/vuln/detail/CVE-2022-0665</a></li>
<li><a href="https://github.com/pimcore/pimcore/commit/28945649a6234ccaa8c94c6cd83d1954603baf3e">https://github.com/pimcore/pimcore/commit/28945649a6234ccaa8c94c6cd83d1954603baf3e</a></li>
<li><a href="https://huntr.dev/bounties/423df64d-c591-4ad9-bf1c-411bcbc06ba3">https://huntr.dev/bounties/423df64d-c591-4ad9-bf1c-411bcbc06ba3</a></li>
<li><a href="https://github.com/advisories/GHSA-gjq4-69wj-p6pr">https://github.com/advisories/GHSA-gjq4-69wj-p6pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gjq4-69wj-p6pr</uri>
        </author>
        <published>2022-02-23T00:00:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] Improper regex in htaccess file]]></title>
        <id>https://github.com/advisories/GHSA-mj6m-246h-9w56</id>
        <link href="https://github.com/advisories/GHSA-mj6m-246h-9w56"/>
        <updated>2022-03-02T14:47:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>the default .htaccess file has some restrictions in the access to PHP files to only allow specific PHP files to be executed in the root of the application.</p>
<p>This logic isn't correct, as the regex in the second FilesMatch only checks the filename, not the full path.</p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to 3.3.5 or 4.2.0 </p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<ul>
<li>Release post: <a href="https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic">https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic</a></li>
<li>Internally tracked under MST-32</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56">https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56</a></li>
<li><a href="https://github.com/advisories/GHSA-mj6m-246h-9w56">https://github.com/advisories/GHSA-mj6m-246h-9w56</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj6m-246h-9w56</uri>
        </author>
        <published>2022-03-01T22:05:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mautic/core] Improper regex in htaccess file]]></title>
        <id>https://github.com/advisories/GHSA-mj6m-246h-9w56</id>
        <link href="https://github.com/advisories/GHSA-mj6m-246h-9w56"/>
        <updated>2022-03-02T14:47:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>the default .htaccess file has some restrictions in the access to PHP files to only allow specific PHP files to be executed in the root of the application.</p>
<p>This logic isn't correct, as the regex in the second FilesMatch only checks the filename, not the full path.</p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to 3.3.5 or 4.2.0 </p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<ul>
<li>Release post: <a href="https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic">https://www.mautic.org/blog/community/mautic-4-2-one-small-step-mautic</a></li>
<li>Internally tracked under MST-32</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@mautic.org">security@mautic.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56">https://github.com/mautic/mautic/security/advisories/GHSA-mj6m-246h-9w56</a></li>
<li><a href="https://github.com/advisories/GHSA-mj6m-246h-9w56">https://github.com/advisories/GHSA-mj6m-246h-9w56</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mj6m-246h-9w56</uri>
        </author>
        <published>2022-03-01T22:05:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[librenms/librenms] Cross site scripting in LibreNMS]]></title>
        <id>https://github.com/advisories/GHSA-vhm6-gw82-6f8j</id>
        <link href="https://github.com/advisories/GHSA-vhm6-gw82-6f8j"/>
        <updated>2022-03-08T18:06:06.000Z</updated>
        <content type="html"><![CDATA[<p>LibreNMS prior to version 22.2.2 is vulnerable to cross-site scripting.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0772">https://nvd.nist.gov/vuln/detail/CVE-2022-0772</a></li>
<li><a href="https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281">https://github.com/librenms/librenms/commit/703745d0ed3948623153117d761ce48514e2f281</a></li>
<li><a href="https://huntr.dev/bounties/faae29bd-c43a-468d-8af6-2b6aa4d40f09">https://huntr.dev/bounties/faae29bd-c43a-468d-8af6-2b6aa4d40f09</a></li>
<li><a href="https://github.com/advisories/GHSA-vhm6-gw82-6f8j">https://github.com/advisories/GHSA-vhm6-gw82-6f8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vhm6-gw82-6f8j</uri>
        </author>
        <published>2022-02-28T00:00:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rudloff/alltube] Server-Side Request Forgery (SSRF) in rudloff/alltube]]></title>
        <id>https://github.com/advisories/GHSA-r5hc-wm3g-hjw6</id>
        <link href="https://github.com/advisories/GHSA-r5hc-wm3g-hjw6"/>
        <updated>2022-03-09T20:18:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Releases prior to 3.0.2 are vulnerable to a Server-Side Request Forgery vulnerability that allows an attacker to send a request to an internal hostname.</p>
<h3 id="patches">Patches</h3>
<p>3.0.2 contains a fix for this vulnerability.
(The 1.x and 2.x releases are not maintained anymore.)</p>
<p>Part of the fix requires applying <a href="https://github.com/Rudloff/alltube/blob/148a171b240e7ceb076b9e198bef412de14ac55d/patches/youtube-dl-redirect.diff">a patch</a> to youtube-dl to prevent it from following HTTP redirects. If you are using the version of youtube-dl bundled with 3.0.2, it is already patched.
However, if you are using your own unpatched version of youtube-dl <strong>you might still be vulnerable</strong>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d">https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d</a></li>
<li><a href="https://github.com/Rudloff/alltube/commit/1b099bb9836a3ce7c427a41722a7ab5a3d1c1b2d">https://github.com/Rudloff/alltube/commit/1b099bb9836a3ce7c427a41722a7ab5a3d1c1b2d</a></li>
<li><a href="https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903/">https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0768">https://nvd.nist.gov/vuln/detail/CVE-2022-0768</a></li>
<li><a href="https://github.com/ytdl-org/youtube-dl/issues/30691">https://github.com/ytdl-org/youtube-dl/issues/30691</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Rudloff/alltube/security/advisories/GHSA-r5hc-wm3g-hjw6">https://github.com/Rudloff/alltube/security/advisories/GHSA-r5hc-wm3g-hjw6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0768">https://nvd.nist.gov/vuln/detail/CVE-2022-0768</a></li>
<li><a href="https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d">https://github.com/Rudloff/alltube/commit/3a4f09dda0a466662a4e52cde674749e0c668e8d</a></li>
<li><a href="https://github.com/rudloff/alltube/commit/148a171b240e7ceb076b9e198bef412de14ac55d">https://github.com/rudloff/alltube/commit/148a171b240e7ceb076b9e198bef412de14ac55d</a></li>
<li><a href="https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903">https://huntr.dev/bounties/9b14cc46-ec08-4940-83cc-9f986b2a5903</a></li>
<li><a href="https://github.com/advisories/GHSA-r5hc-wm3g-hjw6">https://github.com/advisories/GHSA-r5hc-wm3g-hjw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5hc-wm3g-hjw6</uri>
        </author>
        <published>2022-03-01T22:01:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microweber/microweber] Cross-site Scripting in microweber]]></title>
        <id>https://github.com/advisories/GHSA-6m26-25q2-cq46</id>
        <link href="https://github.com/advisories/GHSA-6m26-25q2-cq46"/>
        <updated>2022-03-09T20:36:47.000Z</updated>
        <content type="html"><![CDATA[<p>Microweber Cross-site Scripting (XSS) - Stored XSS vulnerability on admin page up to version 1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0763">https://nvd.nist.gov/vuln/detail/CVE-2022-0763</a></li>
<li><a href="https://github.com/microweber/microweber/commit/c897d0dc159849763a813184d9b75b966c6360bf">https://github.com/microweber/microweber/commit/c897d0dc159849763a813184d9b75b966c6360bf</a></li>
<li><a href="https://huntr.dev/bounties/6de9c621-740d-4d7a-9d77-d90c6c87f3b6">https://huntr.dev/bounties/6de9c621-740d-4d7a-9d77-d90c6c87f3b6</a></li>
<li><a href="https://github.com/advisories/GHSA-6m26-25q2-cq46">https://github.com/advisories/GHSA-6m26-25q2-cq46</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6m26-25q2-cq46</uri>
        </author>
        <published>2022-02-27T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[microweber/microweber] Cross-site Scripting in microweber]]></title>
        <id>https://github.com/advisories/GHSA-4p92-fv6v-fhfj</id>
        <link href="https://github.com/advisories/GHSA-4p92-fv6v-fhfj"/>
        <updated>2022-03-09T20:43:45.000Z</updated>
        <content type="html"><![CDATA[<p>Microweber prior to 1.2.11 is vulnerable to reflected cross-site scripting.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0723">https://nvd.nist.gov/vuln/detail/CVE-2022-0723</a></li>
<li><a href="https://github.com/microweber/microweber/commit/15e519a86e4b24526abaf9e6dc81cb1af86843a5">https://github.com/microweber/microweber/commit/15e519a86e4b24526abaf9e6dc81cb1af86843a5</a></li>
<li><a href="https://huntr.dev/bounties/16b0547b-1bb3-493c-8a00-5b6a11fca1c5">https://huntr.dev/bounties/16b0547b-1bb3-493c-8a00-5b6a11fca1c5</a></li>
<li><a href="https://github.com/advisories/GHSA-4p92-fv6v-fhfj">https://github.com/advisories/GHSA-4p92-fv6v-fhfj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4p92-fv6v-fhfj</uri>
        </author>
        <published>2022-02-27T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codeigniter4/framework] Cross-Site Request Forgery (CSRF) Protection Bypass Vulnerability in CodeIgniter4]]></title>
        <id>https://github.com/advisories/GHSA-4v37-24gm-h554</id>
        <link href="https://github.com/advisories/GHSA-4v37-24gm-h554"/>
        <updated>2022-03-01T22:50:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability might allow remote attackers to bypass the CodeIgniter4 CSRF protection mechanism. </p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v4.1.9 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>These are workarounds for this vulnerability, but <strong>you will still need to code as these after upgrading to v4.1.9</strong>.
Otherwise, the CSRF protection may be bypassed.</p>
<h4 id="when-auto-routing-is-enabled">When Auto-Routing is Enabled</h4>
<ol>
<li>Check the request method in the controller method before processing.</li>
</ol>
<p>E.g.:</p>
<pre><code class="language-php">        if (strtolower($this-&gt;request-&gt;getMethod()) !== 'post') {
            return $this-&gt;response-&gt;setStatusCode(405)-&gt;setBody('Method Not Allowed');
        }
</code></pre>
<h4 id="when-auto-routing-is-disabled">When Auto-Routing is Disabled</h4>
<p>Do one of the following:</p>
<ol>
<li>Do not use <code>$routes-&gt;add()</code>, and <a href="https://codeigniter4.github.io/userguide/incoming/routing.html#using-http-verbs-in-routes">use HTTP verbs in routes</a>.</li>
<li>Check the request method in the controller method before processing.</li>
</ol>
<p>E.g.:</p>
<pre><code class="language-php">        if (strtolower($this-&gt;request-&gt;getMethod()) !== 'post') {
            return $this-&gt;response-&gt;setStatusCode(405)-&gt;setBody('Method Not Allowed');
        }
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://codeigniter4.github.io/userguide/libraries/security.html#cross-site-request-forgery-csrf">CodeIgniter4 CSRF protection</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/codeigniter4/CodeIgniter4/issues">codeigniter4/CodeIgniter4</a></li>
<li>Email us at <a href="https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md">SECURITY.md</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-4v37-24gm-h554">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-4v37-24gm-h554</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24712">https://nvd.nist.gov/vuln/detail/CVE-2022-24712</a></li>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/blob/7dc2ece32401ebde67122f7d2460efcaee7c352e/user_guide_src/source/changelogs/v4.1.9.rst">https://github.com/codeigniter4/CodeIgniter4/blob/7dc2ece32401ebde67122f7d2460efcaee7c352e/user_guide_src/source/changelogs/v4.1.9.rst</a></li>
<li><a href="https://github.com/advisories/GHSA-4v37-24gm-h554">https://github.com/advisories/GHSA-4v37-24gm-h554</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v37-24gm-h554</uri>
        </author>
        <published>2022-03-01T21:47:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codeigniter4/framework] Remote CLI Command Execution Vulnerability in CodeIgniter4]]></title>
        <id>https://github.com/advisories/GHSA-xjp4-6w75-qrj7</id>
        <link href="https://github.com/advisories/GHSA-xjp4-6w75-qrj7"/>
        <updated>2022-03-09T20:20:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability allows attackers to execute CLI routes via HTTP request.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v4.1.9 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/codeigniter4/CodeIgniter4/issues">codeigniter4/CodeIgniter4</a></li>
<li>Email us at <a href="https://github.com/codeigniter4/CodeIgniter4/blob/develop/SECURITY.md">SECURITY.md</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-xjp4-6w75-qrj7">https://github.com/codeigniter4/CodeIgniter4/security/advisories/GHSA-xjp4-6w75-qrj7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24711">https://nvd.nist.gov/vuln/detail/CVE-2022-24711</a></li>
<li><a href="https://github.com/codeigniter4/CodeIgniter4/commit/202f41ad522ba1d414b9d9c35aba1cb0c156b781">https://github.com/codeigniter4/CodeIgniter4/commit/202f41ad522ba1d414b9d9c35aba1cb0c156b781</a></li>
<li><a href="https://github.com/advisories/GHSA-xjp4-6w75-qrj7">https://github.com/advisories/GHSA-xjp4-6w75-qrj7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xjp4-6w75-qrj7</uri>
        </author>
        <published>2022-03-01T21:44:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drupal/core] Incorrect authorization in Drupal core]]></title>
        <id>https://github.com/advisories/GHSA-73q4-j324-2qcc</id>
        <link href="https://github.com/advisories/GHSA-73q4-j324-2qcc"/>
        <updated>2022-03-01T22:04:21.000Z</updated>
        <content type="html"><![CDATA[<p>The Quick Edit module does not properly check entity access in some circumstances. This could result in users with the "access in-place editing" permission viewing some content they are are not authorized to access. Sites are only affected if the QuickEdit module (which comes with the Standard profile) is installed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25270">https://nvd.nist.gov/vuln/detail/CVE-2022-25270</a></li>
<li><a href="https://www.drupal.org/sa-core-2022-004">https://www.drupal.org/sa-core-2022-004</a></li>
<li><a href="https://github.com/advisories/GHSA-73q4-j324-2qcc">https://github.com/advisories/GHSA-73q4-j324-2qcc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-73q4-j324-2qcc</uri>
        </author>
        <published>2022-02-18T00:00:36.000Z</published>
    </entry>
</feed>