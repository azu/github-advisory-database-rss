<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2022-09-02T19:01:24.083Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[prestashop/productcomments] Cross-site Scripting in prestashop/productcomments]]></title>
        <id>https://github.com/advisories/GHSA-prrh-qvhf-x788</id>
        <link href="https://github.com/advisories/GHSA-prrh-qvhf-x788"/>
        <updated>2022-08-31T21:27:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker could steal an admin's cookie</p>
<h3 id="patches">Patches</h3>
<p>The issue is fixed in 5.0.2</p>
<h3 id="references">References</h3>
<p><a href="https://cwe.mitre.org/data/definitions/79.html">Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/PrestaShop/productcomments/security/advisories/GHSA-prrh-qvhf-x788">https://github.com/PrestaShop/productcomments/security/advisories/GHSA-prrh-qvhf-x788</a></li>
<li><a href="https://github.com/PrestaShop/productcomments/commit/314456d739155aa71f0b235827e8e0f24b97c26b">https://github.com/PrestaShop/productcomments/commit/314456d739155aa71f0b235827e8e0f24b97c26b</a></li>
<li><a href="https://github.com/advisories/GHSA-prrh-qvhf-x788">https://github.com/advisories/GHSA-prrh-qvhf-x788</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prrh-qvhf-x788</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-31T21:27:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[snipe/snipe-it] Insufficient Session Expiration in snipe/snipe-it ]]></title>
        <id>https://github.com/advisories/GHSA-cmxc-9ghj-jp87</id>
        <link href="https://github.com/advisories/GHSA-cmxc-9ghj-jp87"/>
        <updated>2022-08-30T20:54:46.000Z</updated>
        <content type="html"><![CDATA[<p>Session Fixation in GitHub repository snipe/snipe-it prior to 6.0.10. The session is not invalidated after a password change.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2997">https://nvd.nist.gov/vuln/detail/CVE-2022-2997</a></li>
<li><a href="https://github.com/snipe/snipe-it/commit/6fde72a69335c80079363b7d26aa94e7f67400e1">https://github.com/snipe/snipe-it/commit/6fde72a69335c80079363b7d26aa94e7f67400e1</a></li>
<li><a href="https://huntr.dev/bounties/c09bf21b-50d2-49f0-8c92-49f6b3c358d8">https://huntr.dev/bounties/c09bf21b-50d2-49f0-8c92-49f6b3c358d8</a></li>
<li><a href="https://github.com/advisories/GHSA-cmxc-9ghj-jp87">https://github.com/advisories/GHSA-cmxc-9ghj-jp87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmxc-9ghj-jp87</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-26T00:03:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields]]></title>
        <id>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</id>
        <link href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76"/>
        <updated>2022-08-30T20:53:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="introduction">Introduction</h3>
<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>
<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>
<h3 id="impact">Impact</h3>
<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>
<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>
<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>
<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>
<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.1">Kirby 3.5.8.1</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.1">Kirby 3.6.6.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.7.4">Kirby 3.7.4</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerabilities.</p>
<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>
<li><a href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-30T20:53:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields]]></title>
        <id>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</id>
        <link href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76"/>
        <updated>2022-08-30T20:53:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="introduction">Introduction</h3>
<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>
<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>
<h3 id="impact">Impact</h3>
<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>
<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>
<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>
<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>
<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.1">Kirby 3.5.8.1</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.1">Kirby 3.6.6.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.7.4">Kirby 3.7.4</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerabilities.</p>
<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>
<li><a href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-30T20:53:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Cross-site scripting from content entered in the tags and multiselect fields]]></title>
        <id>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</id>
        <link href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76"/>
        <updated>2022-08-30T20:53:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="introduction">Introduction</h3>
<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>
<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>
<h3 id="impact">Impact</h3>
<p>The tags and multiselect fields allow to select tags from an autocompleted list. The tags field also allows to enter new tags or edit existing tags. Kirby already handled escaping of the autocompleted tags, but unfortunately the Panel used HTML rendering for new or edited tags as well as for custom tags from the content file.</p>
<p>This allowed <strong>attackers with Panel access</strong> to store malicious HTML code in a tag. The browser of the victim who visited the modified page in the Panel will then have rendered this malicious HTML code.</p>
<p>It also allowed <strong>self-inflicted XSS attacks</strong> in the tags field (meaning that malicious code is executed in the browser of the user who entered it). This could be used in social engineering attacks where a victim is convinced by an attacker to enter malicious code into a tags field.</p>
<p><strong>Visitors without Panel access</strong> could <em>only</em> use this attack vector if your site allows changing the content of a tags or multiselect field from a frontend form (for example user self-registration or the creation of pages from a contact or other frontend form). If you validate or sanitize the provided form data, you are already protected against such attacks by external visitors.</p>
<p>You are also <em>not</em> affected by these vulnerabilities if your site doesn't have untrustworthy users with Panel access or a way to modify field values from the frontend or if you don't use the tags or multiselect fields.</p>
<h3 id="patches">Patches</h3>
<p>The problems have been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.1">Kirby 3.5.8.1</a>, <a href="https://github.com/getkirby/kirby/releases/tag/3.6.6.1">Kirby 3.6.6.1</a> and <a href="https://github.com/getkirby/kirby/releases/tag/3.7.4">Kirby 3.7.4</a>. Please update to one of these or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerabilities.</p>
<p><strong>Note:</strong> The fixes for these vulnerabilities have the side effect that values in the tags and multiselect fields that come from dynamic options are displayed with double escaping (e.g. the <code>&amp;</code> character is displayed as <code>&amp;amp;</code>). In the fix for Kirby 3.5, every value in the tags field is displayed with double escaping when dynamic options are enabled, while dynamic options themselves are displayed with triple escaping. We will fix the double/triple escaping issues with a refactoring of the options fields (tags, multiselect, checkboxes, radio, select and toggles) in Kirby 3.8.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to one of the patch releases. If you cannot update immediately, you can work around the issue by disabling the tags and multiselect fields. This can be done by uncommenting these fields from all your blueprints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/getkirby/kirby/security/advisories/GHSA-rv3r-vqjj-8c76</a></li>
<li><a href="https://github.com/advisories/GHSA-rv3r-vqjj-8c76">https://github.com/advisories/GHSA-rv3r-vqjj-8c76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rv3r-vqjj-8c76</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-30T20:53:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm]]></title>
        <id>https://github.com/advisories/GHSA-rjvc-mf7r-ch7r</id>
        <link href="https://github.com/advisories/GHSA-rjvc-mf7r-ch7r"/>
        <updated>2022-08-30T20:50:33.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2885">https://nvd.nist.gov/vuln/detail/CVE-2022-2885</a></li>
<li><a href="https://github.com/yetiforcecompany/yetiforcecrm/commit/a9ad9ee089b575855b9e5e202b4990a15811e8d2">https://github.com/yetiforcecompany/yetiforcecrm/commit/a9ad9ee089b575855b9e5e202b4990a15811e8d2</a></li>
<li><a href="https://huntr.dev/bounties/edeed309-be07-4373-b15e-2d1eb415eb89">https://huntr.dev/bounties/edeed309-be07-4373-b15e-2d1eb415eb89</a></li>
<li><a href="https://github.com/advisories/GHSA-rjvc-mf7r-ch7r">https://github.com/advisories/GHSA-rjvc-mf7r-ch7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjvc-mf7r-ch7r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-22T00:00:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[notrinos/notrinos-erp] Exposure of password hashes in notrinos/notrinos-erp]]></title>
        <id>https://github.com/advisories/GHSA-44w5-q257-8428</id>
        <link href="https://github.com/advisories/GHSA-44w5-q257-8428"/>
        <updated>2022-08-30T20:50:33.000Z</updated>
        <content type="html"><![CDATA[<p>The AP officers account is authorized to Backup and Restore the Database, Due to this he/she can download the backup and see the password hash of the System Administrator account, The weak hash (MD5) of the password can be easily cracked and get the admin password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2921">https://nvd.nist.gov/vuln/detail/CVE-2022-2921</a></li>
<li><a href="https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45">https://github.com/notrinos/notrinoserp/commit/1b9903f4deea3289872793e60d730c63ecbf7b45</a></li>
<li><a href="https://huntr.dev/bounties/51b32a1c-946b-4390-a212-b6c4b6e4115c">https://huntr.dev/bounties/51b32a1c-946b-4390-a212-b6c4b6e4115c</a></li>
<li><a href="https://github.com/advisories/GHSA-44w5-q257-8428">https://github.com/advisories/GHSA-44w5-q257-8428</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-44w5-q257-8428</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-22T00:00:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm]]></title>
        <id>https://github.com/advisories/GHSA-w83m-rghh-frxj</id>
        <link href="https://github.com/advisories/GHSA-w83m-rghh-frxj"/>
        <updated>2022-08-30T20:42:30.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1340">https://nvd.nist.gov/vuln/detail/CVE-2022-1340</a></li>
<li><a href="https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618">https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618</a></li>
<li><a href="https://huntr.dev/bounties/4746f149-fc55-48a1-a7ab-fd7c7412c05a">https://huntr.dev/bounties/4746f149-fc55-48a1-a7ab-fd7c7412c05a</a></li>
<li><a href="https://github.com/advisories/GHSA-w83m-rghh-frxj">https://github.com/advisories/GHSA-w83m-rghh-frxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w83m-rghh-frxj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-23T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yetiforce/yetiforce-crm] Cross site scripting in yetiforce/yetiforce-crm]]></title>
        <id>https://github.com/advisories/GHSA-jhxh-68jj-68c7</id>
        <link href="https://github.com/advisories/GHSA-jhxh-68jj-68c7"/>
        <updated>2022-08-30T20:42:04.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting (XSS) - Stored in GitHub repository yetiforcecompany/yetiforcecrm prior to 6.4.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2890">https://nvd.nist.gov/vuln/detail/CVE-2022-2890</a></li>
<li><a href="https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618">https://github.com/yetiforcecompany/yetiforcecrm/commit/2c14baaf8dbc7fd82d5c585f2fa0c23528450618</a></li>
<li><a href="https://huntr.dev/bounties/5d228a33-eda3-4cff-91da-7bc43e6636da">https://huntr.dev/bounties/5d228a33-eda3-4cff-91da-7bc43e6636da</a></li>
<li><a href="https://github.com/advisories/GHSA-jhxh-68jj-68c7">https://github.com/advisories/GHSA-jhxh-68jj-68c7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhxh-68jj-68c7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-23T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/starterkit] Cross site scripting in getkirby/starterkit]]></title>
        <id>https://github.com/advisories/GHSA-4m2g-668v-jwjx</id>
        <link href="https://github.com/advisories/GHSA-4m2g-668v-jwjx"/>
        <updated>2022-08-30T20:33:36.000Z</updated>
        <content type="html"><![CDATA[<p>A stored cross-site scripting (XSS) vulnerability in Kirby's Starterkit v3.7.0.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the Tags field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35174">https://nvd.nist.gov/vuln/detail/CVE-2022-35174</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss/">https://owasp.org/www-community/attacks/xss/</a></li>
<li><a href="https://www.youtube.com/watch?v=0lngc_zPTSg">https://www.youtube.com/watch?v=0lngc_zPTSg</a></li>
<li><a href="https://github.com/advisories/GHSA-4m2g-668v-jwjx">https://github.com/advisories/GHSA-4m2g-668v-jwjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m2g-668v-jwjx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-19T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[notrinos/notrinos-erp] NotrinosERP Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hrx5-cv4v-4c44</id>
        <link href="https://github.com/advisories/GHSA-hrx5-cv4v-4c44"/>
        <updated>2022-08-30T20:18:02.000Z</updated>
        <content type="html"><![CDATA[<p>NotrinosERP version 0.7 and prior is vulnerable to stored cross-site scripting. A fix is available on the <code>master</code> branch of the repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2871">https://nvd.nist.gov/vuln/detail/CVE-2022-2871</a></li>
<li><a href="https://github.com/notrinos/notrinoserp/commit/0362778f4f678156c22a009094225823df8a4760">https://github.com/notrinos/notrinoserp/commit/0362778f4f678156c22a009094225823df8a4760</a></li>
<li><a href="https://huntr.dev/bounties/61126c07-22ac-4961-a198-1aa33060b373">https://huntr.dev/bounties/61126c07-22ac-4961-a198-1aa33060b373</a></li>
<li><a href="https://github.com/advisories/GHSA-hrx5-cv4v-4c44">https://github.com/advisories/GHSA-hrx5-cv4v-4c44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrx5-cv4v-4c44</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-18T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos CMS vulnerable to XSS in various backend modules]]></title>
        <id>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</id>
        <link href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3"/>
        <updated>2022-08-30T20:13:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Neos CMS allow attackers with the editor role or higher to inject arbitrary script or HTML code using the editor function, the deletion of assets, or a workspace title. The vulnerabilities were found in versions 3.3.29 and 8.0.1 and could also be present in all intermediate versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30429">https://nvd.nist.gov/vuln/detail/CVE-2022-30429</a></li>
<li><a href="https://www.neos.io/blog/xss-in-various-backend-modules.html">https://www.neos.io/blog/xss-in-various-backend-modules.html</a></li>
<li><a href="http://cms.com">http://cms.com</a></li>
<li><a href="http://neos.com">http://neos.com</a></li>
<li><a href="https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/">https://it-sec.de/unbekannte-schwachstellen-in-neos-cms/</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/CVE-2022-30429.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7m9h-v68w-pfw3">https://github.com/advisories/GHSA-7m9h-v68w-pfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m9h-v68w-pfw3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T00:00:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getkirby/cms] Cross-site scripting from dynamic options in the multiselect field]]></title>
        <id>https://github.com/advisories/GHSA-3f89-869f-5w76</id>
        <link href="https://github.com/advisories/GHSA-3f89-869f-5w76"/>
        <updated>2022-08-29T17:34:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="introduction">Introduction</h3>
<p>Cross-site scripting (XSS) is a type of vulnerability that allows to execute any kind of JavaScript code inside the Panel session of the same or other users. In the Panel, a harmful script can for example trigger requests to Kirby's API with the permissions of the victim.</p>
<p>Such vulnerabilities are critical if you might have potential attackers in your group of authenticated Panel users. They can escalate their privileges if they get access to the Panel session of an admin user. Depending on your site, other JavaScript-powered attacks are possible.</p>
<h3 id="impact">Impact</h3>
<p>The multiselect field allows to select tags from an autocompleted list. Unfortunately, the Panel in Kirby 3.5 used HTML rendering for the raw option value.</p>
<p>This allowed <strong>attackers with influence on the options source</strong> (e.g. content of sibling pages or an API endpoint) to inject HTML code. If a page in the Panel that uses the manipulated multiselect options was visited by a victim and the victim opened the autocomplete dropdown, the victim's browser will then have rendered this malicious HTML code.</p>
<p>You are <em>not</em> affected by this vulnerability if you don't use the multiselect field or only use it with options that cannot be manipulated by attackers.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in <a href="https://github.com/getkirby/kirby/releases/tag/3.5.8.1">Kirby 3.5.8.1</a>. Please update to this or a <a href="https://github.com/getkirby/kirby/releases">later version</a> to fix the vulnerability.</p>
<h3 id="workarounds">Workarounds</h3>
<p>We recommend to update to the patch release. If you cannot update immediately, you can work around the issue by disabling the multiselect field. This can be done by uncommenting this field from all your blueprints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getkirby/kirby/security/advisories/GHSA-3f89-869f-5w76">https://github.com/getkirby/kirby/security/advisories/GHSA-3f89-869f-5w76</a></li>
<li><a href="https://github.com/getkirby/kirby/commit/b5b8863885e17556abc070dde1e20aec15fbfdf5">https://github.com/getkirby/kirby/commit/b5b8863885e17556abc070dde1e20aec15fbfdf5</a></li>
<li><a href="https://github.com/advisories/GHSA-3f89-869f-5w76">https://github.com/advisories/GHSA-3f89-869f-5w76</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f89-869f-5w76</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-29T17:34:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aheinze/cockpit] Cockpit before 2.2.0 vulnerable to Insufficient Session Expiration]]></title>
        <id>https://github.com/advisories/GHSA-vm6p-35rw-3fxc</id>
        <link href="https://github.com/advisories/GHSA-vm6p-35rw-3fxc"/>
        <updated>2022-08-26T03:02:31.000Z</updated>
        <content type="html"><![CDATA[<p>Cockpit before version 2.2.0 is vulnerable to Insufficient Session Expiration. The application does not validate requests after password changes, allowing a user to change their account details even after an admin changes their password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2713">https://nvd.nist.gov/vuln/detail/CVE-2022-2713</a></li>
<li><a href="https://github.com/cockpit-hq/cockpit/commit/dd8d0314912fa6517ebd2cc9939d9fafbe68731b">https://github.com/cockpit-hq/cockpit/commit/dd8d0314912fa6517ebd2cc9939d9fafbe68731b</a></li>
<li><a href="https://huntr.dev/bounties/3080fc96-75d7-4868-84de-9fc8c9b90290">https://huntr.dev/bounties/3080fc96-75d7-4868-84de-9fc8c9b90290</a></li>
<li><a href="https://github.com/advisories/GHSA-vm6p-35rw-3fxc">https://github.com/advisories/GHSA-vm6p-35rw-3fxc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vm6p-35rw-3fxc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-08-09T00:00:25.000Z</published>
    </entry>
</feed>