<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-02-06T22:01:13.013Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-fluid] TYPO3 vulnerable to Cross-Site Scripting in the textarea view helper ]]></title>
        <id>https://github.com/advisories/GHSA-p78x-93mq-qwqh</id>
        <link href="https://github.com/advisories/GHSA-p78x-93mq-qwqh"/>
        <updated>2024-02-06T20:56:17.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 before 4.3.4 and 4.4.x before 4.4.1 allows XSS in the textarea view helper in an extbase extension.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-3672">https://nvd.nist.gov/vuln/detail/CVE-2010-3672</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=590719">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=590719</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2010-3672">https://security-tracker.debian.org/tracker/CVE-2010-3672</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-sa-2010-012/#XSS">https://typo3.org/security/advisory/typo3-sa-2010-012/#XSS</a></li>
<li><a href="https://github.com/TYPO3/typo3/commit/5f13c2276c8b753ceb76b31d1034a47c781d302a">https://github.com/TYPO3/typo3/commit/5f13c2276c8b753ceb76b31d1034a47c781d302a</a></li>
<li><a href="https://github.com/TYPO3/typo3/commit/fc2b43503d871b42c0e0094ea55756c089b536ea">https://github.com/TYPO3/typo3/commit/fc2b43503d871b42c0e0094ea55756c089b536ea</a></li>
<li><a href="https://github.com/TYPO3-CMS/fluid/blob/cbce111326850c247729f097b2d1fb735e513906/Classes/ViewHelpers/Form/TextareaViewHelper.php">https://github.com/TYPO3-CMS/fluid/blob/cbce111326850c247729f097b2d1fb735e513906/Classes/ViewHelpers/Form/TextareaViewHelper.php</a></li>
<li><a href="https://github.com/advisories/GHSA-p78x-93mq-qwqh">https://github.com/advisories/GHSA-p78x-93mq-qwqh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p78x-93mq-qwqh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-21T01:57:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms-fluid] TYPO3 vulnerable to Cross-Site Scripting in the textarea view helper ]]></title>
        <id>https://github.com/advisories/GHSA-p78x-93mq-qwqh</id>
        <link href="https://github.com/advisories/GHSA-p78x-93mq-qwqh"/>
        <updated>2024-02-06T20:56:17.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 before 4.3.4 and 4.4.x before 4.4.1 allows XSS in the textarea view helper in an extbase extension.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-3672">https://nvd.nist.gov/vuln/detail/CVE-2010-3672</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=590719">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=590719</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2010-3672">https://security-tracker.debian.org/tracker/CVE-2010-3672</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-sa-2010-012/#XSS">https://typo3.org/security/advisory/typo3-sa-2010-012/#XSS</a></li>
<li><a href="https://github.com/TYPO3/typo3/commit/5f13c2276c8b753ceb76b31d1034a47c781d302a">https://github.com/TYPO3/typo3/commit/5f13c2276c8b753ceb76b31d1034a47c781d302a</a></li>
<li><a href="https://github.com/TYPO3/typo3/commit/fc2b43503d871b42c0e0094ea55756c089b536ea">https://github.com/TYPO3/typo3/commit/fc2b43503d871b42c0e0094ea55756c089b536ea</a></li>
<li><a href="https://github.com/TYPO3-CMS/fluid/blob/cbce111326850c247729f097b2d1fb735e513906/Classes/ViewHelpers/Form/TextareaViewHelper.php">https://github.com/TYPO3-CMS/fluid/blob/cbce111326850c247729f097b2d1fb735e513906/Classes/ViewHelpers/Form/TextareaViewHelper.php</a></li>
<li><a href="https://github.com/advisories/GHSA-p78x-93mq-qwqh">https://github.com/advisories/GHSA-p78x-93mq-qwqh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p78x-93mq-qwqh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-21T01:57:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simplesamlphp/saml2] SimpleSAMLphp saml2 incorrect signature validation]]></title>
        <id>https://github.com/advisories/GHSA-g888-g2pp-82hf</id>
        <link href="https://github.com/advisories/GHSA-g888-g2pp-82hf"/>
        <updated>2024-02-06T18:24:33.000Z</updated>
        <content type="html"><![CDATA[<p>HTTPRedirect.php in the saml2 library in SimpleSAMLphp before 1.15.4 has an incorrect check of return values in the signature validation utilities, allowing an attacker to get invalid signatures accepted as valid by forcing an error during validation. This occurs because of a dependency on PHP functionality that interprets a -1 error code as a true boolean value.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7711">https://nvd.nist.gov/vuln/detail/CVE-2018-7711</a></li>
<li><a href="https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d">https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html">https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html</a></li>
<li><a href="https://simplesamlphp.org/security/201803-01">https://simplesamlphp.org/security/201803-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g888-g2pp-82hf">https://github.com/advisories/GHSA-g888-g2pp-82hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g888-g2pp-82hf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:34:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simplesamlphp/saml2] SimpleSAMLphp saml2 incorrect signature validation]]></title>
        <id>https://github.com/advisories/GHSA-g888-g2pp-82hf</id>
        <link href="https://github.com/advisories/GHSA-g888-g2pp-82hf"/>
        <updated>2024-02-06T18:24:33.000Z</updated>
        <content type="html"><![CDATA[<p>HTTPRedirect.php in the saml2 library in SimpleSAMLphp before 1.15.4 has an incorrect check of return values in the signature validation utilities, allowing an attacker to get invalid signatures accepted as valid by forcing an error during validation. This occurs because of a dependency on PHP functionality that interprets a -1 error code as a true boolean value.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7711">https://nvd.nist.gov/vuln/detail/CVE-2018-7711</a></li>
<li><a href="https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d">https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html">https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html</a></li>
<li><a href="https://simplesamlphp.org/security/201803-01">https://simplesamlphp.org/security/201803-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g888-g2pp-82hf">https://github.com/advisories/GHSA-g888-g2pp-82hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g888-g2pp-82hf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:34:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simplesamlphp/saml2] SimpleSAMLphp saml2 incorrect signature validation]]></title>
        <id>https://github.com/advisories/GHSA-g888-g2pp-82hf</id>
        <link href="https://github.com/advisories/GHSA-g888-g2pp-82hf"/>
        <updated>2024-02-06T18:24:33.000Z</updated>
        <content type="html"><![CDATA[<p>HTTPRedirect.php in the saml2 library in SimpleSAMLphp before 1.15.4 has an incorrect check of return values in the signature validation utilities, allowing an attacker to get invalid signatures accepted as valid by forcing an error during validation. This occurs because of a dependency on PHP functionality that interprets a -1 error code as a true boolean value.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-7711">https://nvd.nist.gov/vuln/detail/CVE-2018-7711</a></li>
<li><a href="https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d">https://github.com/simplesamlphp/saml2/commit/4f6af7f69f29df8555a18b9bb7b646906b45924d</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html">https://lists.debian.org/debian-lts-announce/2018/03/msg00017.html</a></li>
<li><a href="https://simplesamlphp.org/security/201803-01">https://simplesamlphp.org/security/201803-01</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/simplesamlphp/saml2/CVE-2018-7711.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g888-g2pp-82hf">https://github.com/advisories/GHSA-g888-g2pp-82hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g888-g2pp-82hf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:34:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</id>
        <link href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv"/>
        <updated>2024-02-06T18:21:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">foo:
    path: /foo/{id}
    defaults:
        _sylius:
            repository:
                method: findSome
                arguments:
                    entity: "expr:service('repository').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/foo/"~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>ParametersParser::parseRequestValueExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15143">https://nvd.nist.gov/vuln/detail/CVE-2020-15143</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650">https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/advisories/GHSA-p4pj-9g59-4ppv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-08-19T21:04:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</id>
        <link href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv"/>
        <updated>2024-02-06T18:21:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">foo:
    path: /foo/{id}
    defaults:
        _sylius:
            repository:
                method: findSome
                arguments:
                    entity: "expr:service('repository').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/foo/"~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>ParametersParser::parseRequestValueExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15143">https://nvd.nist.gov/vuln/detail/CVE-2020-15143</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650">https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/advisories/GHSA-p4pj-9g59-4ppv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-08-19T21:04:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</id>
        <link href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv"/>
        <updated>2024-02-06T18:21:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">foo:
    path: /foo/{id}
    defaults:
        _sylius:
            repository:
                method: findSome
                arguments:
                    entity: "expr:service('repository').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/foo/"~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>ParametersParser::parseRequestValueExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15143">https://nvd.nist.gov/vuln/detail/CVE-2020-15143</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650">https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/advisories/GHSA-p4pj-9g59-4ppv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-08-19T21:04:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</id>
        <link href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv"/>
        <updated>2024-02-06T18:21:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">foo:
    path: /foo/{id}
    defaults:
        _sylius:
            repository:
                method: findSome
                arguments:
                    entity: "expr:service('repository').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/foo/"~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>ParametersParser::parseRequestValueExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-p4pj-9g59-4ppv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15143">https://nvd.nist.gov/vuln/detail/CVE-2020-15143</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650">https://github.com/Sylius/SyliusResourceBundle/commit/73ed8b8bb083f36c30ad7c3cec336f65d6a80650</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15143.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p4pj-9g59-4ppv">https://github.com/advisories/GHSA-p4pj-9g59-4ppv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4pj-9g59-4ppv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-08-19T21:04:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</id>
        <link href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5"/>
        <updated>2024-02-06T18:20:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">sylius_grid:
    grids:
        foo:
            fields:
                bar:
                    options:
                        baz: "expr:service('sylius.repository.product').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/route?id="~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>OptionsParser::parseOptionExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15146">https://nvd.nist.gov/vuln/detail/CVE-2020-15146</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00">https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-08-19T19:52:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</id>
        <link href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5"/>
        <updated>2024-02-06T18:20:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">sylius_grid:
    grids:
        foo:
            fields:
                bar:
                    options:
                        baz: "expr:service('sylius.repository.product').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/route?id="~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>OptionsParser::parseOptionExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15146">https://nvd.nist.gov/vuln/detail/CVE-2020-15146</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00">https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-08-19T19:52:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</id>
        <link href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5"/>
        <updated>2024-02-06T18:20:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">sylius_grid:
    grids:
        foo:
            fields:
                bar:
                    options:
                        baz: "expr:service('sylius.repository.product').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/route?id="~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>OptionsParser::parseOptionExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15146">https://nvd.nist.gov/vuln/detail/CVE-2020-15146</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00">https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-08-19T19:52:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sylius/resource-bundle] Remote Code Execution in SyliusResourceBundle]]></title>
        <id>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</id>
        <link href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5"/>
        <updated>2024-02-06T18:20:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Request parameters injected inside an expression evaluated by <code>symfony/expression-language</code> package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.</p>
<p>The vulnerable versions include: <code>&lt;=1.3.13 || &gt;=1.4.0 &lt;=1.4.6 || &gt;=1.5.0 &lt;=1.5.1 || &gt;=1.6.0 &lt;=1.6.3</code>.</p>
<h3 id="example">Example</h3>
<pre><code class="language-yaml">sylius_grid:
    grids:
        foo:
            fields:
                bar:
                    options:
                        baz: "expr:service('sylius.repository.product').find($id)"
</code></pre>
<p>In this case, <code>$id</code> can be prepared in a way that calls other services. </p>
<p>If you visit <code>/route?id="~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"</code>, it will result in a following expression <code>expr:service('repository').find(""~service('doctrine').getManager().getConnection().executeQuery("DELETE * FROM TABLE")~"")</code>, which will execute a query on the currently connected database.</p>
<p>To find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The fix requires adding <code>addslashes</code> in <code>OptionsParser::parseOptionExpression</code> to sanitize user input before evaluating it using the expression language.</p>
<pre><code class="language-php">- return is_string($variable) ? sprintf('"%s"', $variable) : $variable;
+ return is_string($variable) ? sprintf('"%s"', addslashes($variable)) : $variable;
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>This security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@sylius.com">security@sylius.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/Sylius/SyliusResourceBundle/security/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15146">https://nvd.nist.gov/vuln/detail/CVE-2020-15146</a></li>
<li><a href="https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00">https://github.com/Sylius/SyliusResourceBundle/commit/73d9aba182947473a5935b31caf65ca263091e00</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/sylius/resource-bundle/CVE-2020-15146.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h6m7-j4h3-9rf5">https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6m7-j4h3-9rf5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2020-08-19T19:52:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[studio-42/elfinder] elFinder Server Side Request Forgery (SSRF)]]></title>
        <id>https://github.com/advisories/GHSA-3qhm-qfj3-4rrx</id>
        <link href="https://github.com/advisories/GHSA-3qhm-qfj3-4rrx"/>
        <updated>2024-02-06T18:00:03.000Z</updated>
        <content type="html"><![CDATA[<p>A Server Side Request Forgery (SSRF) vulnerability in elFinder before 2.1.49 could allow a malicious user to access the content of internal network resources. This occurs in <code>get_remote_contents()</code> in <code>php/elFinder.class.php</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-6257">https://nvd.nist.gov/vuln/detail/CVE-2019-6257</a></li>
<li><a href="https://github.com/Studio-42/elFinder/commit/2f522db8f037a66ce9040ee0b216aa4a0359286c">https://github.com/Studio-42/elFinder/commit/2f522db8f037a66ce9040ee0b216aa4a0359286c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-6257.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/studio-42/elfinder/CVE-2019-6257.yaml</a></li>
<li><a href="https://github.com/Studio-42/elFinder/blob/2.1.49/Changelog">https://github.com/Studio-42/elFinder/blob/2.1.49/Changelog</a></li>
<li><a href="https://github.com/Studio-42/elFinder/releases/tag/2.1.49">https://github.com/Studio-42/elFinder/releases/tag/2.1.49</a></li>
<li><a href="https://github.com/advisories/GHSA-3qhm-qfj3-4rrx">https://github.com/advisories/GHSA-3qhm-qfj3-4rrx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qhm-qfj3-4rrx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:06:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Reflected XSS in SilverStripe]]></title>
        <id>https://github.com/advisories/GHSA-qvrv-2x7x-78x2</id>
        <link href="https://github.com/advisories/GHSA-qvrv-2x7x-78x2"/>
        <updated>2024-02-06T17:33:38.000Z</updated>
        <content type="html"><![CDATA[<p>SilverStripe through 4.4.x before 4.4.5 and 4.5.x before 4.5.2 allows Reflected XSS on the login form and custom forms. Silverstripe Forms allow malicious HTML or JavaScript to be inserted through non-scalar FormField attributes, which allows performing XSS (Cross-Site Scripting) on some forms built with user input (Request data). This can lead to phishing attempts to obtain a user&amp;#39;s credentials or other sensitive user input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19325">https://nvd.nist.gov/vuln/detail/CVE-2019-19325</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89">https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2019-19325">https://www.silverstripe.org/download/security-releases/cve-2019-19325</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2019-19325/">https://www.silverstripe.org/download/security-releases/cve-2019-19325/</a></li>
<li><a href="https://github.com/advisories/GHSA-qvrv-2x7x-78x2">https://github.com/advisories/GHSA-qvrv-2x7x-78x2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvrv-2x7x-78x2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-02-24T17:33:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Reflected XSS in SilverStripe]]></title>
        <id>https://github.com/advisories/GHSA-qvrv-2x7x-78x2</id>
        <link href="https://github.com/advisories/GHSA-qvrv-2x7x-78x2"/>
        <updated>2024-02-06T17:33:38.000Z</updated>
        <content type="html"><![CDATA[<p>SilverStripe through 4.4.x before 4.4.5 and 4.5.x before 4.5.2 allows Reflected XSS on the login form and custom forms. Silverstripe Forms allow malicious HTML or JavaScript to be inserted through non-scalar FormField attributes, which allows performing XSS (Cross-Site Scripting) on some forms built with user input (Request data). This can lead to phishing attempts to obtain a user&amp;#39;s credentials or other sensitive user input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19325">https://nvd.nist.gov/vuln/detail/CVE-2019-19325</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89">https://github.com/silverstripe/silverstripe-framework/commit/49fda52b12ba59f0a04bcabf78425586a8779e89</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2019-19325">https://www.silverstripe.org/download/security-releases/cve-2019-19325</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/CVE-2019-19325.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/cve-2019-19325/">https://www.silverstripe.org/download/security-releases/cve-2019-19325/</a></li>
<li><a href="https://github.com/advisories/GHSA-qvrv-2x7x-78x2">https://github.com/advisories/GHSA-qvrv-2x7x-78x2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvrv-2x7x-78x2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-02-24T17:33:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/graphql] SilverStripe GraphQL Server permission checker not inherited by query subclass.]]></title>
        <id>https://github.com/advisories/GHSA-r7rh-g777-g5gx</id>
        <link href="https://github.com/advisories/GHSA-r7rh-g777-g5gx"/>
        <updated>2024-02-06T17:19:17.000Z</updated>
        <content type="html"><![CDATA[<p>Default SilverStripe GraphQL Server (aka silverstripe/graphql) 3.x through 3.4.1 permission checker not inherited by query subclass.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28661">https://nvd.nist.gov/vuln/detail/CVE-2021-28661</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-graphql/pull/407/commits/16961459f681f7b32145296189dfdbcc7715e6ed">https://github.com/silverstripe/silverstripe-graphql/pull/407/commits/16961459f681f7b32145296189dfdbcc7715e6ed</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-graphql/releases">https://github.com/silverstripe/silverstripe-graphql/releases</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-graphql/releases/tag/3.5.2">https://github.com/silverstripe/silverstripe-graphql/releases/tag/3.5.2</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/CVE-2021-28661">https://www.silverstripe.org/download/security-releases/CVE-2021-28661</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/graphql/CVE-2021-28661.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/graphql/CVE-2021-28661.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r7rh-g777-g5gx">https://github.com/advisories/GHSA-r7rh-g777-g5gx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7rh-g777-g5gx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-10-12T18:49:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/form] Symfony Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</id>
        <link href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2"/>
        <updated>2024-02-06T17:18:09.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19789">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2019/May/21">https://seclists.org/bugtraq/2019/May/21</a></li>
<li><a href="https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4441">https://www.debian.org/security/2019/dsa-4441</a></li>
<li><a href="https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>
<li><a href="https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>
<li><a href="https://symfony.com/cve-2018-19789">https://symfony.com/cve-2018-19789</a></li>
<li><a href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:04:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/form] Symfony Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</id>
        <link href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2"/>
        <updated>2024-02-06T17:18:09.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19789">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2019/May/21">https://seclists.org/bugtraq/2019/May/21</a></li>
<li><a href="https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4441">https://www.debian.org/security/2019/dsa-4441</a></li>
<li><a href="https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>
<li><a href="https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>
<li><a href="https://symfony.com/cve-2018-19789">https://symfony.com/cve-2018-19789</a></li>
<li><a href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:04:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[symfony/form] Symfony Path Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</id>
        <link href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2"/>
        <updated>2024-02-06T17:18:09.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Symfony 2.7.x before 2.7.50, 2.8.x before 2.8.49, 3.x before 3.4.20, 4.0.x before 4.0.15, 4.1.x before 4.1.9, and 4.2.x before 4.2.1. When using the scalar type hint <code>string</code> in a setter method (e.g. <code>setName(string $name)</code>) of a class that's the <code>data_class</code> of a form, and when a file upload is submitted to the corresponding field instead of a normal text input, then <code>UploadedFile::__toString()</code> is called which will then return and disclose the path of the uploaded file. If combined with a local file inclusion issue in certain circumstances this could escalate it to a Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19789">https://nvd.nist.gov/vuln/detail/CVE-2018-19789</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html">https://lists.debian.org/debian-lts-announce/2019/03/msg00009.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4TD3E7FZIXLVFG3SMFJPDEKPZ26TJOW7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JZMRJ7VTHCY5AZK24G4QGX36RLUDTDKE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OA4WVFN5FYPIXAPLWZI6N425JHHDSWAZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2019/May/21">https://seclists.org/bugtraq/2019/May/21</a></li>
<li><a href="https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path">https://symfony.com/blog/cve-2018-19789-disclosure-of-uploaded-files-full-path</a></li>
<li><a href="https://www.debian.org/security/2019/dsa-4441">https://www.debian.org/security/2019/dsa-4441</a></li>
<li><a href="https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249">https://web.archive.org/web/20210124224817/http://www.securityfocus.com/bid/106249</a></li>
<li><a href="https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c">https://github.com/symfony/symfony/commit/b65e6f1a47b68f2713b60cdac9cc3a4af62a2d1c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/form/CVE-2018-19789.yaml</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/symfony/symfony/CVE-2018-19789.yaml</a></li>
<li><a href="https://symfony.com/cve-2018-19789">https://symfony.com/cve-2018-19789</a></li>
<li><a href="https://github.com/advisories/GHSA-x3cf-w64x-4cp2">https://github.com/advisories/GHSA-x3cf-w64x-4cp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3cf-w64x-4cp2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:04:20.000Z</published>
    </entry>
</feed>