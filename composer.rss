<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-06-05T17:01:17.345Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Cache Flooding in TYPO3 Frontend]]></title>
        <id>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</id>
        <link href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43"/>
        <updated>2024-06-05T16:55:38.000Z</updated>
        <content type="html"><![CDATA[<p> Links with a valid cHash argument lead to newly generated page cache entries. Because the cHash is not bound to a specific page, attackers could use valid cHash arguments for multiple pages, leading to additional useless page cache entries. Depending on the number of pages in the system and the number of available valid links with a cHash, attackers could add a considerable amount of additional cache entries, which in the end exceed storage limits and thus could lead to the system not responding any more. This means the Cache Flooding attack potentially could lead to a successful Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43">https://github.com/advisories/GHSA-pw2q-qwvj-gh43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:55:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Cache Flooding in TYPO3 Frontend]]></title>
        <id>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</id>
        <link href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43"/>
        <updated>2024-06-05T16:55:38.000Z</updated>
        <content type="html"><![CDATA[<p> Links with a valid cHash argument lead to newly generated page cache entries. Because the cHash is not bound to a specific page, attackers could use valid cHash arguments for multiple pages, leading to additional useless page cache entries. Depending on the number of pages in the system and the number of available valid links with a cHash, attackers could add a considerable amount of additional cache entries, which in the end exceed storage limits and thus could lead to the system not responding any more. This means the Cache Flooding attack potentially could lead to a successful Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43">https://github.com/advisories/GHSA-pw2q-qwvj-gh43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:55:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Cache Flooding in TYPO3 Frontend]]></title>
        <id>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</id>
        <link href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43"/>
        <updated>2024-06-05T16:55:38.000Z</updated>
        <content type="html"><![CDATA[<p> Links with a valid cHash argument lead to newly generated page cache entries. Because the cHash is not bound to a specific page, attackers could use valid cHash arguments for multiple pages, leading to additional useless page cache entries. Depending on the number of pages in the system and the number of available valid links with a cHash, attackers could add a considerable amount of additional cache entries, which in the end exceed storage limits and thus could lead to the system not responding any more. This means the Cache Flooding attack potentially could lead to a successful Denial of Service (DoS) attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2016-09-14-2.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pw2q-qwvj-gh43">https://github.com/advisories/GHSA-pw2q-qwvj-gh43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pw2q-qwvj-gh43</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:55:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Authentication Bypass in TYPO3 Frontend]]></title>
        <id>https://github.com/advisories/GHSA-mh3r-6cp5-hc2j</id>
        <link href="https://github.com/advisories/GHSA-mh3r-6cp5-hc2j"/>
        <updated>2024-06-05T16:55:02.000Z</updated>
        <content type="html"><![CDATA[<p>Due to late TCA initialization the authentication service fails to restrict frontend user according to the validation rules. Therefore it is possible to authenticate restricted (e.g. disabled) frontend users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-02-28-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-02-28-1.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-mh3r-6cp5-hc2j">https://github.com/advisories/GHSA-mh3r-6cp5-hc2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh3r-6cp5-hc2j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:55:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Authentication Bypass in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</id>
        <link href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq"/>
        <updated>2024-06-05T16:52:47.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-001">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>
<li><a href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq">https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Authentication Bypass in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</id>
        <link href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq"/>
        <updated>2024-06-05T16:52:47.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-001">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>
<li><a href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq">https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Authentication Bypass in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</id>
        <link href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq"/>
        <updated>2024-06-05T16:52:47.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that TYPO3’s Salted Password system extension (which is a mandatory system component) is vulnerable to Authentication Bypass when using hashing methods which are related by PHP class inheritance. In standard TYPO3 core distributions stored passwords using the blowfish hashing algorithm can be overridden when using MD5 as the default hashing algorithm by just knowing a valid username. Per default the Portable PHP hashing algorithm (PHPass) is used which is not vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-001">https://typo3.org/security/advisory/typo3-core-sa-2018-001</a></li>
<li><a href="https://github.com/advisories/GHSA-6f9m-v7mp-7jjq">https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6f9m-v7mp-7jjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:52:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Information Disclosure in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-g46h-v2cc-6c94</id>
        <link href="https://github.com/advisories/GHSA-g46h-v2cc-6c94"/>
        <updated>2024-06-05T16:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>Failing to properly check user permission on file storages, editors could gain knowledge of protected storages and its folders as well as using them in a file collection being rendered in the frontend. A valid backend user account is needed to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-2.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-005">https://typo3.org/security/advisory/typo3-core-sa-2017-005</a></li>
<li><a href="https://github.com/advisories/GHSA-g46h-v2cc-6c94">https://github.com/advisories/GHSA-g46h-v2cc-6c94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g46h-v2cc-6c94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:43:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Information Disclosure in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-g46h-v2cc-6c94</id>
        <link href="https://github.com/advisories/GHSA-g46h-v2cc-6c94"/>
        <updated>2024-06-05T16:43:52.000Z</updated>
        <content type="html"><![CDATA[<p>Failing to properly check user permission on file storages, editors could gain knowledge of protected storages and its folders as well as using them in a file collection being rendered in the frontend. A valid backend user account is needed to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-2.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-005">https://typo3.org/security/advisory/typo3-core-sa-2017-005</a></li>
<li><a href="https://github.com/advisories/GHSA-g46h-v2cc-6c94">https://github.com/advisories/GHSA-g46h-v2cc-6c94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g46h-v2cc-6c94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T16:43:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Insecure Deserialization & Arbitrary Code Execution in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-ppgf-8745-8pgx</id>
        <link href="https://github.com/advisories/GHSA-ppgf-8745-8pgx"/>
        <updated>2024-06-05T16:41:49.000Z</updated>
        <content type="html"><![CDATA[<p>Phar files (formerly known as "PHP archives") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - "bundle.phar" would be valid as well as "bundle.txt" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-002">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>
<li><a href="https://github.com/advisories/GHSA-ppgf-8745-8pgx">https://github.com/advisories/GHSA-ppgf-8745-8pgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ppgf-8745-8pgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T16:41:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Insecure Deserialization & Arbitrary Code Execution in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-ppgf-8745-8pgx</id>
        <link href="https://github.com/advisories/GHSA-ppgf-8745-8pgx"/>
        <updated>2024-06-05T16:41:49.000Z</updated>
        <content type="html"><![CDATA[<p>Phar files (formerly known as "PHP archives") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - "bundle.phar" would be valid as well as "bundle.txt" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-002">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>
<li><a href="https://github.com/advisories/GHSA-ppgf-8745-8pgx">https://github.com/advisories/GHSA-ppgf-8745-8pgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ppgf-8745-8pgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T16:41:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Insecure Deserialization & Arbitrary Code Execution in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-ppgf-8745-8pgx</id>
        <link href="https://github.com/advisories/GHSA-ppgf-8745-8pgx"/>
        <updated>2024-06-05T16:41:49.000Z</updated>
        <content type="html"><![CDATA[<p>Phar files (formerly known as "PHP archives") can act als self extracting archives which leads to the fact that source code is executed when Phar files are invoked. The Phar file format is not limited to be stored with a dedicated file extension - "bundle.phar" would be valid as well as "bundle.txt" would be. This way, Phar files can be obfuscated as image or text file which would not be denied from being uploaded and persisted to a TYPO3 installation. Due to a missing sanitization of user input, those Phar files can be invoked by manipulated URLs in TYPO3 backend forms. A valid backend user account is needed to exploit this vulnerability. In theory the attack vector would be possible in the TYPO3 frontend as well, however no functional exploit has been identified so far.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-2.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-002">https://typo3.org/security/advisory/typo3-core-sa-2018-002</a></li>
<li><a href="https://github.com/advisories/GHSA-ppgf-8745-8pgx">https://github.com/advisories/GHSA-ppgf-8745-8pgx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ppgf-8745-8pgx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T16:41:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Information Disclosure in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-c7p6-3c9c-f88q</id>
        <link href="https://github.com/advisories/GHSA-c7p6-3c9c-f88q"/>
        <updated>2024-06-05T15:11:37.000Z</updated>
        <content type="html"><![CDATA[<p>HTTP requests being performed using the TYPO3 API expose the specific TYPO3 version to the called endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-3.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-3.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-006">https://typo3.org/security/advisory/typo3-core-sa-2017-006</a></li>
<li><a href="https://github.com/advisories/GHSA-c7p6-3c9c-f88q">https://github.com/advisories/GHSA-c7p6-3c9c-f88q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c7p6-3c9c-f88q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-05T15:11:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Information Disclosure in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-c7p6-3c9c-f88q</id>
        <link href="https://github.com/advisories/GHSA-c7p6-3c9c-f88q"/>
        <updated>2024-06-05T15:11:37.000Z</updated>
        <content type="html"><![CDATA[<p>HTTP requests being performed using the TYPO3 API expose the specific TYPO3 version to the called endpoint.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-3.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-3.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-006">https://typo3.org/security/advisory/typo3-core-sa-2017-006</a></li>
<li><a href="https://github.com/advisories/GHSA-c7p6-3c9c-f88q">https://github.com/advisories/GHSA-c7p6-3c9c-f88q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c7p6-3c9c-f88q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-05T15:11:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Privilege Escalation & SQL Injection in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</id>
        <link href="https://github.com/advisories/GHSA-7qwg-fcpw-xg5g"/>
        <updated>2024-06-05T15:10:20.000Z</updated>
        <content type="html"><![CDATA[<p>Failing to properly dissociate system related configuration from user generated configuration, the Form Framework (system extension "form") is vulnerable to SQL injection and Privilege Escalation. Basically instructions can be persisted to a form definition file that were not configured to be modified - this applies to definitions managed using the form editor module as well as direct file upload using the regular file list module. A valid backend user account as well as having system extension form activated are needed in order to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-3.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-3.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-003">https://typo3.org/security/advisory/typo3-core-sa-2018-003</a></li>
<li><a href="https://github.com/advisories/GHSA-7qwg-fcpw-xg5g">https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T15:10:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Privilege Escalation & SQL Injection in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</id>
        <link href="https://github.com/advisories/GHSA-7qwg-fcpw-xg5g"/>
        <updated>2024-06-05T15:10:20.000Z</updated>
        <content type="html"><![CDATA[<p>Failing to properly dissociate system related configuration from user generated configuration, the Form Framework (system extension "form") is vulnerable to SQL injection and Privilege Escalation. Basically instructions can be persisted to a form definition file that were not configured to be modified - this applies to definitions managed using the form editor module as well as direct file upload using the regular file list module. A valid backend user account as well as having system extension form activated are needed in order to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-3.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2018-07-12-3.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2018-003">https://typo3.org/security/advisory/typo3-core-sa-2018-003</a></li>
<li><a href="https://github.com/advisories/GHSA-7qwg-fcpw-xg5g">https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qwg-fcpw-xg5g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T15:10:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] TYPO3 Remote Code Execution in third party library swiftmailer]]></title>
        <id>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</id>
        <link href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw"/>
        <updated>2024-06-05T15:08:05.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 uses the package swiftmailer/swiftmailer for mail actions. This package is known to be vulnerable to Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-001">https://typo3.org/security/advisory/typo3-core-sa-2017-001</a></li>
<li><a href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw">https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T15:08:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] TYPO3 Remote Code Execution in third party library swiftmailer]]></title>
        <id>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</id>
        <link href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw"/>
        <updated>2024-06-05T15:08:05.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 uses the package swiftmailer/swiftmailer for mail actions. This package is known to be vulnerable to Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-001">https://typo3.org/security/advisory/typo3-core-sa-2017-001</a></li>
<li><a href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw">https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T15:08:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] TYPO3 Remote Code Execution in third party library swiftmailer]]></title>
        <id>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</id>
        <link href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw"/>
        <updated>2024-06-05T15:08:05.000Z</updated>
        <content type="html"><![CDATA[<p>TYPO3 uses the package swiftmailer/swiftmailer for mail actions. This package is known to be vulnerable to Remote Code Execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-01-03-1.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-001">https://typo3.org/security/advisory/typo3-core-sa-2017-001</a></li>
<li><a href="https://github.com/advisories/GHSA-g4pf-3jvq-2gcw">https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4pf-3jvq-2gcw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T15:08:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Arbitrary Code Execution in TYPO3 CMS]]></title>
        <id>https://github.com/advisories/GHSA-67wg-6j7r-mqh8</id>
        <link href="https://github.com/advisories/GHSA-67wg-6j7r-mqh8"/>
        <updated>2024-06-05T15:07:10.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a missing file extension in the fileDenyPattern, backend user are allowed to upload *.pht files which can be executed in certain web server setups. The new default fileDenyPattern is the following, which might have been overridden in the TYPO3 Install Tool.</p>
<pre><code>\.(php[3-7]?|phpsh|phtml|pht)(\..*)?$|^\.htaccess$
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-4.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/typo3/cms/2017-09-05-4.yaml</a></li>
<li><a href="https://typo3.org/security/advisory/typo3-core-sa-2017-007">https://typo3.org/security/advisory/typo3-core-sa-2017-007</a></li>
<li><a href="https://github.com/advisories/GHSA-67wg-6j7r-mqh8">https://github.com/advisories/GHSA-67wg-6j7r-mqh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67wg-6j7r-mqh8</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-05T15:07:09.000Z</published>
    </entry>
</feed>