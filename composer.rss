<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-05-19T08:01:25.630Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[paragonie/random_compat] random_compat Uses insecure CSPRNG]]></title>
        <id>https://github.com/advisories/GHSA-3fmq-x9q6-wm39</id>
        <link href="https://github.com/advisories/GHSA-3fmq-x9q6-wm39"/>
        <updated>2024-05-17T23:27:21.000Z</updated>
        <content type="html"><![CDATA[<p>random_compat versions prior to 2.0 are affected by a security vulnerability related to the insecure usage of Cryptographically Secure Pseudo-Random Number Generators (CSPRNG). The affected versions use openssl_random_pseudo_bytes(), which may result in insufficient entropy and compromise the security of generated random numbers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/paragonie/random_compat/issues/96">https://github.com/paragonie/random_compat/issues/96</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/paragonie/random_compat/2016-03-16.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/paragonie/random_compat/2016-03-16.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-3fmq-x9q6-wm39">https://github.com/advisories/GHSA-3fmq-x9q6-wm39</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3fmq-x9q6-wm39</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-17T23:27:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[onelogin/php-saml] onelogin/php-saml signature wrapping attacks]]></title>
        <id>https://github.com/advisories/GHSA-g48f-pgwh-wwxx</id>
        <link href="https://github.com/advisories/GHSA-g48f-pgwh-wwxx"/>
        <updated>2024-05-17T23:06:56.000Z</updated>
        <content type="html"><![CDATA[<p>Vulnerability in onelogin/php-saml versions prior to 2.10.0 allows signature Wrapping attacks which may result in a malicious user gaining unauthorized access to a system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/onelogin/php-saml/commit/9d31baa97a57b0989020f62d24307c29e325dac3">https://github.com/onelogin/php-saml/commit/9d31baa97a57b0989020f62d24307c29e325dac3</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/CVE-2016-1000253.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/CVE-2016-1000253.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g48f-pgwh-wwxx">https://github.com/advisories/GHSA-g48f-pgwh-wwxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g48f-pgwh-wwxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:06:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[onelogin/php-saml] onelogin/php-saml Improper signature validation on LogoutRequest/LogoutResponse.]]></title>
        <id>https://github.com/advisories/GHSA-9wrw-p9rm-r782</id>
        <link href="https://github.com/advisories/GHSA-9wrw-p9rm-r782"/>
        <updated>2024-05-17T23:06:55.000Z</updated>
        <content type="html"><![CDATA[<p>In order to verify Signatures on Logoutrequests and LogoutResponses we use
the verifySignature of the class XMLSecurityKey from the xmlseclibs library.
That method end up calling openssl_verify() depending on the signature algorithm used.</p>
<p>The openssl_verify() function returns 1 when the signature was successfully verified,
0 if it failed to verify with the given key, and -1 in case an error occurs.
PHP allows translating numerical values to boolean implicitly, with the following correspondences:</p>
<ul>
<li>0 equals false.</li>
<li>Non-zero equals true.</li>
</ul>
<p>This means that an implicit conversion to boolean of the values returned by openssl_verify()
will convert an error state, signaled by the value -1, to a successful verification of the
signature (represented by the boolean true).</p>
<p>The LogoutRequest/LogoutResponse signature validator was performing an implicit conversion to boolean
of the values returned by the verify() method, which subsequently will return the same output
as openssl_verify() under most circumstances.
This means an error during signature verification is treated as a successful verification by the method.</p>
<p>Since the signature validation of SAMLResponses were not affected, the impact of this security
vulnerability is lower, but an update of the php-saml toolkit is recommended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/onelogin/php-saml/commit/949359f5cad5e1d085c4e5447d9aa8f49a6e82a1">https://github.com/onelogin/php-saml/commit/949359f5cad5e1d085c4e5447d9aa8f49a6e82a1</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/2017-02-28.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/onelogin/php-saml/2017-02-28.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-9wrw-p9rm-r782">https://github.com/advisories/GHSA-9wrw-p9rm-r782</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9wrw-p9rm-r782</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-05-17T23:06:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nzo/url-encryptor-bundle] nzo/url-encryptor-bundle Insecure default secret key and IV allowing anyone to decrypt values]]></title>
        <id>https://github.com/advisories/GHSA-r2r8-36pq-27cm</id>
        <link href="https://github.com/advisories/GHSA-r2r8-36pq-27cm"/>
        <updated>2024-05-17T23:06:54.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of nzo/url-encryptor-bundle prior to 5.0.1 and 4.3.2 are affected by a security vulnerability related to the lack of mandatory key and IV requirements. By default, the bundle uses the aes-256-ctr algorithm, which is susceptible to malleability attacks, potentially leading to Insecure Direct Object Reference (IDOR) vulnerabilities. Additionally, the reuse of keys enables users to decrypt and modify encrypted data if they can guess the plaintext of one ciphertext.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a</a></li>
<li><a href="https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r2r8-36pq-27cm">https://github.com/advisories/GHSA-r2r8-36pq-27cm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r2r8-36pq-27cm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T23:06:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nzo/url-encryptor-bundle] nzo/url-encryptor-bundle Insecure default secret key and IV allowing anyone to decrypt values]]></title>
        <id>https://github.com/advisories/GHSA-r2r8-36pq-27cm</id>
        <link href="https://github.com/advisories/GHSA-r2r8-36pq-27cm"/>
        <updated>2024-05-17T23:06:54.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of nzo/url-encryptor-bundle prior to 5.0.1 and 4.3.2 are affected by a security vulnerability related to the lack of mandatory key and IV requirements. By default, the bundle uses the aes-256-ctr algorithm, which is susceptible to malleability attacks, potentially leading to Insecure Direct Object Reference (IDOR) vulnerabilities. Additionally, the reuse of keys enables users to decrypt and modify encrypted data if they can guess the plaintext of one ciphertext.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/ba3af1a9bcf3bedcc0ed5948979f482e2134da1a</a></li>
<li><a href="https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581">https://github.com/nayzo/NzoUrlEncryptorBundle/commit/bd8232501c12c9df1bc45b1970870ef665218581</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/nzo/url-encryptor-bundle/2020-05-03.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r2r8-36pq-27cm">https://github.com/advisories/GHSA-r2r8-36pq-27cm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r2r8-36pq-27cm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T23:06:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/swiftmailer] Flow Swift Mailer package Remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-rq6q-hjvh-5mwh</id>
        <link href="https://github.com/advisories/GHSA-rq6q-hjvh-5mwh"/>
        <updated>2024-05-17T23:06:51.000Z</updated>
        <content type="html"><![CDATA[<p>A remote code execution vulnerability has been found in the Swift Mailer library (swiftmailer/swiftmailer) recently. <a href="http://legalhackers.com/advisories/SwiftMailer-Exploit-Remote-Code-Exec-CVE-2016-10074-Vuln.html">See this advisory for details</a>. If you are not using the default mail() transport, this particular problem  does not affect you. Upgrading is of course still recommended!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/swiftmailer/2017-01-06.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/swiftmailer/2017-01-06.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2017-01.html">https://www.neos.io/blog/flow-sa-2017-01.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rq6q-hjvh-5mwh">https://github.com/advisories/GHSA-rq6q-hjvh-5mwh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rq6q-hjvh-5mwh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-17T23:06:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Cross-site Scripting vulnerabilities in Neos]]></title>
        <id>https://github.com/advisories/GHSA-6cj3-rc4p-f38f</id>
        <link href="https://github.com/advisories/GHSA-6cj3-rc4p-f38f"/>
        <updated>2024-05-17T23:04:04.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>
<h3 id="reflected-cross-site-scripting-sxss-with-authentication">Reflected Cross-Site Scripting (SXSS) with authentication</h3>
<p>A Neos backend user with permission to modify content can insert JavaScript instructions into content elements. The browser will execute the script in "Print" preview mode.
A Neos backend user who can modify his profile information ("Title", "First Name", "Last name", "Middle Name", "Other Name") can inject JavaScript instructions in those parameters. Once set up, an administrator who wants to edit this user account will execute the code.
Both attack vectors require a valid Neos backend user account.</p>
<h3 id="reflected-cross-site-scripting-rxss-without-authentication">Reflected Cross-Site Scripting (RXSS) without authentication</h3>
<p>A non-persistent XSS using parameters passed during plugin execution is possible. If invalid parameters are passed, an error message may be shown (depending on the context Neos runs in and how the parameters are handled) that contains the unescaped parameter value.</p>
<p>Note: Through the HTML content type the inclusion of arbitrary JavaScript is still possible for users with a valid Neos backend account. If you want to prohibit that, disable the nodetype or restrict access.</p>
<h3 id="potential-backdoor-upload">Potential backdoor upload</h3>
<p>Through an issue with the underlying Flow framework (see the related Flow advisory Flow-SA-2015-001) any editor with access to the Media Management module can upload server side script files (when using Neos 2.0.x). If those scripts are executed by the server when accessed through their public URL, anything not blocked through other means is possible (information disclosure, placement of backdoors, data removal, …).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-sa-2015-002.html">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6cj3-rc4p-f38f">https://github.com/advisories/GHSA-6cj3-rc4p-f38f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cj3-rc4p-f38f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T23:04:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Cross-site Scripting vulnerabilities in Neos]]></title>
        <id>https://github.com/advisories/GHSA-6cj3-rc4p-f38f</id>
        <link href="https://github.com/advisories/GHSA-6cj3-rc4p-f38f"/>
        <updated>2024-05-17T23:04:04.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that Neos is vulnerable to several XSS attacks. Through these vulnerabilities, an attacker could tamper with page rendering, redirect victims to a fake login page, or capture user credentials (such as cookies). With the potential backdoor upload an attacker could gain access to the server itself, to an extent mainly limited by the server setup.</p>
<h3 id="reflected-cross-site-scripting-sxss-with-authentication">Reflected Cross-Site Scripting (SXSS) with authentication</h3>
<p>A Neos backend user with permission to modify content can insert JavaScript instructions into content elements. The browser will execute the script in "Print" preview mode.
A Neos backend user who can modify his profile information ("Title", "First Name", "Last name", "Middle Name", "Other Name") can inject JavaScript instructions in those parameters. Once set up, an administrator who wants to edit this user account will execute the code.
Both attack vectors require a valid Neos backend user account.</p>
<h3 id="reflected-cross-site-scripting-rxss-without-authentication">Reflected Cross-Site Scripting (RXSS) without authentication</h3>
<p>A non-persistent XSS using parameters passed during plugin execution is possible. If invalid parameters are passed, an error message may be shown (depending on the context Neos runs in and how the parameters are handled) that contains the unescaped parameter value.</p>
<p>Note: Through the HTML content type the inclusion of arbitrary JavaScript is still possible for users with a valid Neos backend account. If you want to prohibit that, disable the nodetype or restrict access.</p>
<h3 id="potential-backdoor-upload">Potential backdoor upload</h3>
<p>Through an issue with the underlying Flow framework (see the related Flow advisory Flow-SA-2015-001) any editor with access to the Media Management module can upload server side script files (when using Neos 2.0.x). If those scripts are executed by the server when accessed through their public URL, anything not blocked through other means is possible (information disclosure, placement of backdoors, data removal, …).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-11-23.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-sa-2015-002.html">https://www.neos.io/blog/neos-sa-2015-002.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6cj3-rc4p-f38f">https://github.com/advisories/GHSA-6cj3-rc4p-f38f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cj3-rc4p-f38f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T23:04:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Privilege Escalation in TYPO3 Neos]]></title>
        <id>https://github.com/advisories/GHSA-43cf-7f3h-38rg</id>
        <link href="https://github.com/advisories/GHSA-43cf-7f3h-38rg"/>
        <updated>2024-05-17T23:03:48.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-sa-2015-001.html">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-43cf-7f3h-38rg">https://github.com/advisories/GHSA-43cf-7f3h-38rg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43cf-7f3h-38rg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Privilege Escalation in TYPO3 Neos]]></title>
        <id>https://github.com/advisories/GHSA-43cf-7f3h-38rg</id>
        <link href="https://github.com/advisories/GHSA-43cf-7f3h-38rg"/>
        <updated>2024-05-17T23:03:48.000Z</updated>
        <content type="html"><![CDATA[<p>It has been discovered that TYPO3 Neos is vulnerable to Privilege Escalation. Logged in editors could access, create and modify content nodes that exist in the workspace of other editors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2015-03-28.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-sa-2015-001.html">https://www.neos.io/blog/neos-sa-2015-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-43cf-7f3h-38rg">https://github.com/advisories/GHSA-43cf-7f3h-38rg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43cf-7f3h-38rg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/flow] Time-Based Information Disclosure Vulnerability in Flow]]></title>
        <id>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</id>
        <link href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw"/>
        <updated>2024-05-17T23:03:26.000Z</updated>
        <content type="html"><![CDATA[<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2016-001.html">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/flow] Time-Based Information Disclosure Vulnerability in Flow]]></title>
        <id>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</id>
        <link href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw"/>
        <updated>2024-05-17T23:03:26.000Z</updated>
        <content type="html"><![CDATA[<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2016-001.html">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/flow] Time-Based Information Disclosure Vulnerability in Flow]]></title>
        <id>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</id>
        <link href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw"/>
        <updated>2024-05-17T23:03:26.000Z</updated>
        <content type="html"><![CDATA[<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2016-001.html">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/flow] Time-Based Information Disclosure Vulnerability in Flow]]></title>
        <id>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</id>
        <link href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw"/>
        <updated>2024-05-17T23:03:26.000Z</updated>
        <content type="html"><![CDATA[<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2016-001.html">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/flow] Time-Based Information Disclosure Vulnerability in Flow]]></title>
        <id>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</id>
        <link href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw"/>
        <updated>2024-05-17T23:03:26.000Z</updated>
        <content type="html"><![CDATA[<p>The PersistedUsernamePasswordProvider was prone to a information disclosure of account existance based on timing attacks as the hashing of passwords was only done in case an account was found. We changed the core so that the provider always does a password comparison in case credentials were submitted at all.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/flow/2016-11-01.yaml</a></li>
<li><a href="https://www.neos.io/blog/flow-sa-2016-001.html">https://www.neos.io/blog/flow-sa-2016-001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6pq8-67pw-j6hw">https://github.com/advisories/GHSA-6pq8-67pw-j6hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6pq8-67pw-j6hw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-17T23:03:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos Information Disclosure Security Note]]></title>
        <id>https://github.com/advisories/GHSA-3c5g-73f7-grvm</id>
        <link href="https://github.com/advisories/GHSA-3c5g-73f7-grvm"/>
        <updated>2024-05-17T22:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>Due to reports it has been validated that internal workspaces in Neos are accessible without authentication. Some users assumed this is a planned feature but it is not. A workspace preview should be an additional feature with respective security measures in place.</p>
<p>Note that this only allows reading of internal workspaces not writing. And for clarification, an internal workspace is a workspace that is non public and doesn't have an owner.</p>
<p>Given that an internal workspace exists in your installation, it is possible to view a page in context of that workspace by opening a link in this format:</p>
<p><a href="https://domain/path/to/page.html@workspace-name">https://domain/path/to/page.html@workspace-name</a></p>
<p>The issue is quite problematic when exploited but at the same time slightly less impactful than it sounds. First of all there is no default internal workspace, so the issue affects only workspaces created by users. That also means the workspace-name, which will also always include a hash is individual to a project and an exploiter must get hold of the workspace-name including the hash. This is non trivial as there is no indication of the existence of it, but obviously brute force and educated guessed can be made.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-workspace-disclosure-security.html">https://www.neos.io/blog/neos-workspace-disclosure-security.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3c5g-73f7-grvm">https://github.com/advisories/GHSA-3c5g-73f7-grvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3c5g-73f7-grvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T22:54:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos Information Disclosure Security Note]]></title>
        <id>https://github.com/advisories/GHSA-3c5g-73f7-grvm</id>
        <link href="https://github.com/advisories/GHSA-3c5g-73f7-grvm"/>
        <updated>2024-05-17T22:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>Due to reports it has been validated that internal workspaces in Neos are accessible without authentication. Some users assumed this is a planned feature but it is not. A workspace preview should be an additional feature with respective security measures in place.</p>
<p>Note that this only allows reading of internal workspaces not writing. And for clarification, an internal workspace is a workspace that is non public and doesn't have an owner.</p>
<p>Given that an internal workspace exists in your installation, it is possible to view a page in context of that workspace by opening a link in this format:</p>
<p><a href="https://domain/path/to/page.html@workspace-name">https://domain/path/to/page.html@workspace-name</a></p>
<p>The issue is quite problematic when exploited but at the same time slightly less impactful than it sounds. First of all there is no default internal workspace, so the issue affects only workspaces created by users. That also means the workspace-name, which will also always include a hash is individual to a project and an exploiter must get hold of the workspace-name including the hash. This is non trivial as there is no indication of the existence of it, but obviously brute force and educated guessed can be made.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-workspace-disclosure-security.html">https://www.neos.io/blog/neos-workspace-disclosure-security.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3c5g-73f7-grvm">https://github.com/advisories/GHSA-3c5g-73f7-grvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3c5g-73f7-grvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T22:54:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos Information Disclosure Security Note]]></title>
        <id>https://github.com/advisories/GHSA-3c5g-73f7-grvm</id>
        <link href="https://github.com/advisories/GHSA-3c5g-73f7-grvm"/>
        <updated>2024-05-17T22:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>Due to reports it has been validated that internal workspaces in Neos are accessible without authentication. Some users assumed this is a planned feature but it is not. A workspace preview should be an additional feature with respective security measures in place.</p>
<p>Note that this only allows reading of internal workspaces not writing. And for clarification, an internal workspace is a workspace that is non public and doesn't have an owner.</p>
<p>Given that an internal workspace exists in your installation, it is possible to view a page in context of that workspace by opening a link in this format:</p>
<p><a href="https://domain/path/to/page.html@workspace-name">https://domain/path/to/page.html@workspace-name</a></p>
<p>The issue is quite problematic when exploited but at the same time slightly less impactful than it sounds. First of all there is no default internal workspace, so the issue affects only workspaces created by users. That also means the workspace-name, which will also always include a hash is individual to a project and an exploiter must get hold of the workspace-name including the hash. This is non trivial as there is no indication of the existence of it, but obviously brute force and educated guessed can be made.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-workspace-disclosure-security.html">https://www.neos.io/blog/neos-workspace-disclosure-security.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3c5g-73f7-grvm">https://github.com/advisories/GHSA-3c5g-73f7-grvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3c5g-73f7-grvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T22:54:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos Information Disclosure Security Note]]></title>
        <id>https://github.com/advisories/GHSA-3c5g-73f7-grvm</id>
        <link href="https://github.com/advisories/GHSA-3c5g-73f7-grvm"/>
        <updated>2024-05-17T22:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>Due to reports it has been validated that internal workspaces in Neos are accessible without authentication. Some users assumed this is a planned feature but it is not. A workspace preview should be an additional feature with respective security measures in place.</p>
<p>Note that this only allows reading of internal workspaces not writing. And for clarification, an internal workspace is a workspace that is non public and doesn't have an owner.</p>
<p>Given that an internal workspace exists in your installation, it is possible to view a page in context of that workspace by opening a link in this format:</p>
<p><a href="https://domain/path/to/page.html@workspace-name">https://domain/path/to/page.html@workspace-name</a></p>
<p>The issue is quite problematic when exploited but at the same time slightly less impactful than it sounds. First of all there is no default internal workspace, so the issue affects only workspaces created by users. That also means the workspace-name, which will also always include a hash is individual to a project and an exploiter must get hold of the workspace-name including the hash. This is non trivial as there is no indication of the existence of it, but obviously brute force and educated guessed can be made.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-workspace-disclosure-security.html">https://www.neos.io/blog/neos-workspace-disclosure-security.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3c5g-73f7-grvm">https://github.com/advisories/GHSA-3c5g-73f7-grvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3c5g-73f7-grvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T22:54:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[neos/neos] Neos Information Disclosure Security Note]]></title>
        <id>https://github.com/advisories/GHSA-3c5g-73f7-grvm</id>
        <link href="https://github.com/advisories/GHSA-3c5g-73f7-grvm"/>
        <updated>2024-05-17T22:54:48.000Z</updated>
        <content type="html"><![CDATA[<p>Due to reports it has been validated that internal workspaces in Neos are accessible without authentication. Some users assumed this is a planned feature but it is not. A workspace preview should be an additional feature with respective security measures in place.</p>
<p>Note that this only allows reading of internal workspaces not writing. And for clarification, an internal workspace is a workspace that is non public and doesn't have an owner.</p>
<p>Given that an internal workspace exists in your installation, it is possible to view a page in context of that workspace by opening a link in this format:</p>
<p><a href="https://domain/path/to/page.html@workspace-name">https://domain/path/to/page.html@workspace-name</a></p>
<p>The issue is quite problematic when exploited but at the same time slightly less impactful than it sounds. First of all there is no default internal workspace, so the issue affects only workspaces created by users. That also means the workspace-name, which will also always include a hash is individual to a project and an exploiter must get hold of the workspace-name including the hash. This is non trivial as there is no indication of the existence of it, but obviously brute force and educated guessed can be made.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/neos/neos/2019-06-17.yaml</a></li>
<li><a href="https://www.neos.io/blog/neos-workspace-disclosure-security.html">https://www.neos.io/blog/neos-workspace-disclosure-security.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3c5g-73f7-grvm">https://github.com/advisories/GHSA-3c5g-73f7-grvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3c5g-73f7-grvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-17T22:54:47.000Z</published>
    </entry>
</feed>