<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/composer.rss</id>
    <title>Security Advisory for PHP packages hosted at packagist.org</title>
    <updated>2024-05-23T20:01:28.756Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Acomposer"/>
    <subtitle>Security Advisory for PHP packages hosted at packagist.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] silverstripe/framework ReadOnly transformation for formfields exploitable]]></title>
        <id>https://github.com/advisories/GHSA-97jm-g33h-f46g</id>
        <link href="https://github.com/advisories/GHSA-97jm-g33h-f46g"/>
        <updated>2024-05-23T19:50:28.000Z</updated>
        <content type="html"><![CDATA[<p>Form fields returning isReadonly() as true are vulnerable to reflected XSS injections. This includes ReadonlyField, LookupField, HTMLReadonlyField, as well as special purpose fields like TimeField_Readonly. Values submitted to through these form fields are not filtered out from the form session data, and might be shown to the user depending on the form behaviour. For example, form validation errors cause the form to re-render with previously submitted values by default.</p>
<p>SilverStripe forms automatically load values from request data (GET and POST), which enables malicious use of URLs if your form uses these fields and doesn't overwrite data on form construction.</p>
<p>Readonly and disabled form fields are already filtered out in Form-&gt;saveInto(), so maliciously submitted data on these fields doesn't make it into the database unless you are accessing form values directly in your saving logic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae">https://github.com/silverstripe/silverstripe-framework/commit/8336cb96b9600dacafa8a525c92662345b52cfae</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-010-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-010">https://www.silverstripe.org/download/security-releases/ss-2016-010</a></li>
<li><a href="https://github.com/advisories/GHSA-97jm-g33h-f46g">https://github.com/advisories/GHSA-97jm-g33h-f46g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-97jm-g33h-f46g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:50:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Cross-site scripting vulnerability in VersionedRequestFilter]]></title>
        <id>https://github.com/advisories/GHSA-mpqj-f4v3-334h</id>
        <link href="https://github.com/advisories/GHSA-mpqj-f4v3-334h"/>
        <updated>2024-05-23T19:46:37.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability in VersionedRequestFilter has been found.</p>
<p>If an incoming user request should not be able to access the requested stage, an error message is created for display on the CMS login page that they are redirected to. In this error message, the URL of the requested page is interpolated into the error message without being escaped; hence, arbitrary HTML can be injected into the CMS login page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8">https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836">https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-007">https://www.silverstripe.org/download/security-releases/ss-2016-007</a></li>
<li><a href="https://github.com/advisories/GHSA-mpqj-f4v3-334h">https://github.com/advisories/GHSA-mpqj-f4v3-334h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpqj-f4v3-334h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:46:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Cross-site scripting vulnerability in VersionedRequestFilter]]></title>
        <id>https://github.com/advisories/GHSA-mpqj-f4v3-334h</id>
        <link href="https://github.com/advisories/GHSA-mpqj-f4v3-334h"/>
        <updated>2024-05-23T19:46:37.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting vulnerability in VersionedRequestFilter has been found.</p>
<p>If an incoming user request should not be able to access the requested stage, an error message is created for display on the CMS login page that they are redirected to. In this error message, the URL of the requested page is interpolated into the error message without being escaped; hence, arbitrary HTML can be injected into the CMS login page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8">https://github.com/silverstripe/silverstripe-framework/commit/3fa84cf0c64a539d78600c36364817a8e38411d8</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836">https://github.com/silverstripe/silverstripe-framework/commit/41be95c95a55031412ee4056aeee5c2c69595836</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-007-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-007">https://www.silverstripe.org/download/security-releases/ss-2016-007</a></li>
<li><a href="https://github.com/advisories/GHSA-mpqj-f4v3-334h">https://github.com/advisories/GHSA-mpqj-f4v3-334h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpqj-f4v3-334h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:46:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Missing CSRF protection in login form]]></title>
        <id>https://github.com/advisories/GHSA-vj2j-6g3w-4662</id>
        <link href="https://github.com/advisories/GHSA-vj2j-6g3w-4662"/>
        <updated>2024-05-23T19:41:42.000Z</updated>
        <content type="html"><![CDATA[<p>LoginForm calls disableSecurityToken(), which causes a "shared host domain" vulnerability: <a href="http://stackoverflow.com/a/15350123">http://stackoverflow.com/a/15350123</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989">https://github.com/silverstripe/silverstripe-framework/commit/a6bd22ab2f3b11a054d20be13306a19089510989</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-006-1.yaml</a></li>
<li><a href="https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123">https://stackoverflow.com/questions/6412813/do-login-forms-need-tokens-against-csrf-attacks/15350123#15350123</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-006">https://www.silverstripe.org/download/security-releases/ss-2016-006</a></li>
<li><a href="https://github.com/advisories/GHSA-vj2j-6g3w-4662">https://github.com/advisories/GHSA-vj2j-6g3w-4662</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj2j-6g3w-4662</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:41:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Brute force bypass on default admin]]></title>
        <id>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</id>
        <link href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6"/>
        <updated>2024-05-23T19:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>Default Administrator accounts were not subject to the same brute force protection afforded to other Member accounts. Failed login counts were not logged for default admins resulting in unlimited attempts on the default admin username and password.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2">https://github.com/silverstripe/silverstripe-framework/commit/f32c893546340c8c279fd1ab6d4269e9d6539bc2</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-005-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-005">https://www.silverstripe.org/download/security-releases/ss-2016-005</a></li>
<li><a href="https://github.com/advisories/GHSA-8v6m-7f5v-hhx6">https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v6m-7f5v-hhx6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-23T19:37:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe XSS in CMS Edit Page]]></title>
        <id>https://github.com/advisories/GHSA-m8v7-x398-pxrf</id>
        <link href="https://github.com/advisories/GHSA-m8v7-x398-pxrf"/>
        <updated>2024-05-23T19:33:36.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a lack of parameter sanitisation a carefully crafted URL could be used to inject arbitrary HTML into the CMS Edit page.</p>
<p>An attacker could create a URL and share it with a site administrator to perform an attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770">https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commits/3.3.2">https://github.com/silverstripe/silverstripe-framework/commits/3.3.2</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-004">https://www.silverstripe.org/download/security-releases/ss-2016-004</a></li>
<li><a href="https://github.com/advisories/GHSA-m8v7-x398-pxrf">https://github.com/advisories/GHSA-m8v7-x398-pxrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8v7-x398-pxrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:33:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe XSS in CMS Edit Page]]></title>
        <id>https://github.com/advisories/GHSA-m8v7-x398-pxrf</id>
        <link href="https://github.com/advisories/GHSA-m8v7-x398-pxrf"/>
        <updated>2024-05-23T19:33:36.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a lack of parameter sanitisation a carefully crafted URL could be used to inject arbitrary HTML into the CMS Edit page.</p>
<p>An attacker could create a URL and share it with a site administrator to perform an attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770">https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commits/3.3.2">https://github.com/silverstripe/silverstripe-framework/commits/3.3.2</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-004">https://www.silverstripe.org/download/security-releases/ss-2016-004</a></li>
<li><a href="https://github.com/advisories/GHSA-m8v7-x398-pxrf">https://github.com/advisories/GHSA-m8v7-x398-pxrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8v7-x398-pxrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:33:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe XSS in CMS Edit Page]]></title>
        <id>https://github.com/advisories/GHSA-m8v7-x398-pxrf</id>
        <link href="https://github.com/advisories/GHSA-m8v7-x398-pxrf"/>
        <updated>2024-05-23T19:33:36.000Z</updated>
        <content type="html"><![CDATA[<p>Due to a lack of parameter sanitisation a carefully crafted URL could be used to inject arbitrary HTML into the CMS Edit page.</p>
<p>An attacker could create a URL and share it with a site administrator to perform an attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770">https://github.com/silverstripe/silverstripe-framework/commit/a24c8260b1d048dc6a0836eb1be9a1ca2056e770</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-004-1.yaml</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commits/3.3.2">https://github.com/silverstripe/silverstripe-framework/commits/3.3.2</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-004">https://www.silverstripe.org/download/security-releases/ss-2016-004</a></li>
<li><a href="https://github.com/advisories/GHSA-m8v7-x398-pxrf">https://github.com/advisories/GHSA-m8v7-x398-pxrf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8v7-x398-pxrf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:33:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Hostname, IP and Protocol Spoofing through HTTP Headers]]></title>
        <id>https://github.com/advisories/GHSA-87pf-7x99-5xc4</id>
        <link href="https://github.com/advisories/GHSA-87pf-7x99-5xc4"/>
        <updated>2024-05-23T19:28:07.000Z</updated>
        <content type="html"><![CDATA[<p>In it's default configuration, SilverStripe trusts all originating IPs to include HTTP headers for Hostname, IP and Protocol. This enables reverse proxies to forward requests while still retaining the original request information. Trusted IPs can be limited via the SS_TRUSTED_PROXY_IPS constant. Even with this restriction in place, SilverStripe trusts a variety of HTTP headers due to different proxy notations (e.g. X-Forwarded-For vs. Client-IP). Unless a proxy explicitly unsets invalid HTTP headers from connecting clients, this can lead to spoofing requests being passed through trusted proxies.</p>
<p>The impact of spoofed headers can include Director::forceSSL() not being enforced, SS_HTTPRequest-&gt;getIP() returning a wrong IP (disabling any IP restrictions), and spoofed hostnames circumventing any hostname-specific restrictions enforced in SilverStripe Controllers.</p>
<p>Regardless on running a reverse proxy in your hosting infrastructure, please follow the instructions on Secure Coding: Request hostname forgery in order to opt-in to these protections. If your website is not behind a reverse proxy, you might already be protected if using Apache with mod_env enabled, and you have the following line in your .htaccess file: SetEnv BlockUntrustedIPs true.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6">https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf">https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4">https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-003">https://www.silverstripe.org/download/security-releases/ss-2016-003</a></li>
<li><a href="https://github.com/advisories/GHSA-87pf-7x99-5xc4">https://github.com/advisories/GHSA-87pf-7x99-5xc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87pf-7x99-5xc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:27:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Hostname, IP and Protocol Spoofing through HTTP Headers]]></title>
        <id>https://github.com/advisories/GHSA-87pf-7x99-5xc4</id>
        <link href="https://github.com/advisories/GHSA-87pf-7x99-5xc4"/>
        <updated>2024-05-23T19:28:07.000Z</updated>
        <content type="html"><![CDATA[<p>In it's default configuration, SilverStripe trusts all originating IPs to include HTTP headers for Hostname, IP and Protocol. This enables reverse proxies to forward requests while still retaining the original request information. Trusted IPs can be limited via the SS_TRUSTED_PROXY_IPS constant. Even with this restriction in place, SilverStripe trusts a variety of HTTP headers due to different proxy notations (e.g. X-Forwarded-For vs. Client-IP). Unless a proxy explicitly unsets invalid HTTP headers from connecting clients, this can lead to spoofing requests being passed through trusted proxies.</p>
<p>The impact of spoofed headers can include Director::forceSSL() not being enforced, SS_HTTPRequest-&gt;getIP() returning a wrong IP (disabling any IP restrictions), and spoofed hostnames circumventing any hostname-specific restrictions enforced in SilverStripe Controllers.</p>
<p>Regardless on running a reverse proxy in your hosting infrastructure, please follow the instructions on Secure Coding: Request hostname forgery in order to opt-in to these protections. If your website is not behind a reverse proxy, you might already be protected if using Apache with mod_env enabled, and you have the following line in your .htaccess file: SetEnv BlockUntrustedIPs true.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6">https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf">https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4">https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-003">https://www.silverstripe.org/download/security-releases/ss-2016-003</a></li>
<li><a href="https://github.com/advisories/GHSA-87pf-7x99-5xc4">https://github.com/advisories/GHSA-87pf-7x99-5xc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87pf-7x99-5xc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:27:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe Hostname, IP and Protocol Spoofing through HTTP Headers]]></title>
        <id>https://github.com/advisories/GHSA-87pf-7x99-5xc4</id>
        <link href="https://github.com/advisories/GHSA-87pf-7x99-5xc4"/>
        <updated>2024-05-23T19:28:07.000Z</updated>
        <content type="html"><![CDATA[<p>In it's default configuration, SilverStripe trusts all originating IPs to include HTTP headers for Hostname, IP and Protocol. This enables reverse proxies to forward requests while still retaining the original request information. Trusted IPs can be limited via the SS_TRUSTED_PROXY_IPS constant. Even with this restriction in place, SilverStripe trusts a variety of HTTP headers due to different proxy notations (e.g. X-Forwarded-For vs. Client-IP). Unless a proxy explicitly unsets invalid HTTP headers from connecting clients, this can lead to spoofing requests being passed through trusted proxies.</p>
<p>The impact of spoofed headers can include Director::forceSSL() not being enforced, SS_HTTPRequest-&gt;getIP() returning a wrong IP (disabling any IP restrictions), and spoofed hostnames circumventing any hostname-specific restrictions enforced in SilverStripe Controllers.</p>
<p>Regardless on running a reverse proxy in your hosting infrastructure, please follow the instructions on Secure Coding: Request hostname forgery in order to opt-in to these protections. If your website is not behind a reverse proxy, you might already be protected if using Apache with mod_env enabled, and you have the following line in your .htaccess file: SetEnv BlockUntrustedIPs true.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6">https://github.com/silverstripe/silverstripe-framework/commit/37059eb6b3546f304e9c031abca0f096ddb175c6</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf">https://github.com/silverstripe/silverstripe-framework/commit/893e49703de4aa1855b5364919cbb0826f754fbf</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4">https://github.com/silverstripe/silverstripe-framework/commit/faa94d51d570788dcebc2f2ef6e9de4d179ce1e4</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-003-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-003">https://www.silverstripe.org/download/security-releases/ss-2016-003</a></li>
<li><a href="https://github.com/advisories/GHSA-87pf-7x99-5xc4">https://github.com/advisories/GHSA-87pf-7x99-5xc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87pf-7x99-5xc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:27:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe CSRF vulnerability in GridFieldAddExistingAutocompleter]]></title>
        <id>https://github.com/advisories/GHSA-2hpc-mf4q-j885</id>
        <link href="https://github.com/advisories/GHSA-2hpc-mf4q-j885"/>
        <updated>2024-05-23T19:19:35.000Z</updated>
        <content type="html"><![CDATA[<p>GridField does not have sufficient CSRF protection, meaning that in some cases users with CMS access can be tricked into posting unspecified data into the CMS from external websites. Amongst other default CMS interfaces, GridField is used for management of groups, users and permissions in the CMS.</p>
<p>The resolution for this issue is to ensure that all gridFieldAlterAction submissions are checked for the SecurityID token during submission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/013524af5069bb0cf909853f04418d9bef56d18c">https://github.com/silverstripe/silverstripe-framework/commit/013524af5069bb0cf909853f04418d9bef56d18c</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/56e92f5a32e45849cc9361c8603c31d7010c9d36">https://github.com/silverstripe/silverstripe-framework/commit/56e92f5a32e45849cc9361c8603c31d7010c9d36</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/e2c77c5a8f13e901c51a3684210811559b592f0c">https://github.com/silverstripe/silverstripe-framework/commit/e2c77c5a8f13e901c51a3684210811559b592f0c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-002-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-002-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-002">https://www.silverstripe.org/download/security-releases/ss-2016-002</a></li>
<li><a href="https://github.com/advisories/GHSA-2hpc-mf4q-j885">https://github.com/advisories/GHSA-2hpc-mf4q-j885</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2hpc-mf4q-j885</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:19:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[silverstripe/framework] Silverstripe CSRF vulnerability in GridFieldAddExistingAutocompleter]]></title>
        <id>https://github.com/advisories/GHSA-2hpc-mf4q-j885</id>
        <link href="https://github.com/advisories/GHSA-2hpc-mf4q-j885"/>
        <updated>2024-05-23T19:19:35.000Z</updated>
        <content type="html"><![CDATA[<p>GridField does not have sufficient CSRF protection, meaning that in some cases users with CMS access can be tricked into posting unspecified data into the CMS from external websites. Amongst other default CMS interfaces, GridField is used for management of groups, users and permissions in the CMS.</p>
<p>The resolution for this issue is to ensure that all gridFieldAlterAction submissions are checked for the SecurityID token during submission.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/013524af5069bb0cf909853f04418d9bef56d18c">https://github.com/silverstripe/silverstripe-framework/commit/013524af5069bb0cf909853f04418d9bef56d18c</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/56e92f5a32e45849cc9361c8603c31d7010c9d36">https://github.com/silverstripe/silverstripe-framework/commit/56e92f5a32e45849cc9361c8603c31d7010c9d36</a></li>
<li><a href="https://github.com/silverstripe/silverstripe-framework/commit/e2c77c5a8f13e901c51a3684210811559b592f0c">https://github.com/silverstripe/silverstripe-framework/commit/e2c77c5a8f13e901c51a3684210811559b592f0c</a></li>
<li><a href="https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-002-1.yaml">https://github.com/FriendsOfPHP/security-advisories/blob/master/silverstripe/framework/SS-2016-002-1.yaml</a></li>
<li><a href="https://www.silverstripe.org/download/security-releases/ss-2016-002">https://www.silverstripe.org/download/security-releases/ss-2016-002</a></li>
<li><a href="https://github.com/advisories/GHSA-2hpc-mf4q-j885">https://github.com/advisories/GHSA-2hpc-mf4q-j885</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2hpc-mf4q-j885</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-05-23T19:19:33.000Z</published>
    </entry>
</feed>