<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-11-02T23:01:21.168Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pip] Command Injection in pip when used with Mercurial]]></title>
        <id>https://github.com/advisories/GHSA-mq26-g339-26xf</id>
        <link href="https://github.com/advisories/GHSA-mq26-g339-26xf"/>
        <updated>2023-11-02T21:04:34.000Z</updated>
        <content type="html"><![CDATA[<p>When installing a package from a Mercurial VCS URL, e.g. <code>pip install hg+...</code>, with pip prior to v23.3, the specified Mercurial revision could be used to inject arbitrary configuration options to the <code>hg clone</code> call (e.g. <code>--config</code>). Controlling the Mercurial configuration can modify how and which repository is installed. This vulnerability does not affect users who aren't installing from Mercurial.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5752">https://nvd.nist.gov/vuln/detail/CVE-2023-5752</a></li>
<li><a href="https://github.com/pypa/pip/pull/12306">https://github.com/pypa/pip/pull/12306</a></li>
<li><a href="https://mail.python.org/archives/list/security-announce@python.org/thread/F4PL35U6X4VVHZ5ILJU3PWUWN7H7LZXL/">https://mail.python.org/archives/list/security-announce@python.org/thread/F4PL35U6X4VVHZ5ILJU3PWUWN7H7LZXL/</a></li>
<li><a href="https://github.com/pypa/pip/commit/389cb799d0da9a840749fcd14878928467ed49b4">https://github.com/pypa/pip/commit/389cb799d0da9a840749fcd14878928467ed49b4</a></li>
<li><a href="https://github.com/advisories/GHSA-mq26-g339-26xf">https://github.com/advisories/GHSA-mq26-g339-26xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq26-g339-26xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-25T18:32:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[transmute-core] transmute-core unsafe YAML deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w9cp-3x79-2p8p</id>
        <link href="https://github.com/advisories/GHSA-w9cp-3x79-2p8p"/>
        <updated>2023-11-02T21:01:56.000Z</updated>
        <content type="html"><![CDATA[<p>Unsafe YAML deserialization in yaml.Loader in transmute-core before 1.13.5 allows attackers to execute arbitrary Python code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47204">https://nvd.nist.gov/vuln/detail/CVE-2023-47204</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/pull/58">https://github.com/toumorokoshi/transmute-core/pull/58</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/releases/tag/v1.13.5">https://github.com/toumorokoshi/transmute-core/releases/tag/v1.13.5</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/commit/29bf82eb8ed9926d31eec90aec482ecc0dcb23f0">https://github.com/toumorokoshi/transmute-core/commit/29bf82eb8ed9926d31eec90aec482ecc0dcb23f0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/transmute-core/PYSEC-2023-223.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/transmute-core/PYSEC-2023-223.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-w9cp-3x79-2p8p">https://github.com/advisories/GHSA-w9cp-3x79-2p8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w9cp-3x79-2p8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</id>
        <link href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc"/>
        <updated>2023-11-02T20:05:09.000Z</updated>
        <content type="html"><![CDATA[<p>z3c.form in Plone CMS 5.x through 5.0.6 and 4.x through 4.3.11 allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted GET request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7136">https://nvd.nist.gov/vuln/detail/CVE-2016-7136</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc">https://github.com/advisories/GHSA-22jm-p2vv-j2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:46:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</id>
        <link href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc"/>
        <updated>2023-11-02T20:05:09.000Z</updated>
        <content type="html"><![CDATA[<p>z3c.form in Plone CMS 5.x through 5.0.6 and 4.x through 4.3.11 allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted GET request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7136">https://nvd.nist.gov/vuln/detail/CVE-2016-7136</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc">https://github.com/advisories/GHSA-22jm-p2vv-j2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:46:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</id>
        <link href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p"/>
        <updated>2023-11-02T20:01:05.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the URL checking infrastructure in Plone CMS 5.x through 5.0.6, 4.x through 4.3.11, and 3.3.x through 3.3.6 allows remote attackers to inject arbitrary web script or HTML via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7138">https://nvd.nist.gov/vuln/detail/CVE-2016-7138</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p">https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:45:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</id>
        <link href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p"/>
        <updated>2023-11-02T20:01:05.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the URL checking infrastructure in Plone CMS 5.x through 5.0.6, 4.x through 4.3.11, and 3.3.x through 3.3.6 allows remote attackers to inject arbitrary web script or HTML via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7138">https://nvd.nist.gov/vuln/detail/CVE-2016-7138</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p">https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:45:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</id>
        <link href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p"/>
        <updated>2023-11-02T20:01:05.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the URL checking infrastructure in Plone CMS 5.x through 5.0.6, 4.x through 4.3.11, and 3.3.x through 3.3.6 allows remote attackers to inject arbitrary web script or HTML via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7138">https://nvd.nist.gov/vuln/detail/CVE-2016-7138</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-1</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-v3hp-f8qr-cf3p">https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3hp-f8qr-cf3p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:45:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cobbler] Cobbler Arbitrary File Read]]></title>
        <id>https://github.com/advisories/GHSA-4vc9-4xpq-77vm</id>
        <link href="https://github.com/advisories/GHSA-4vc9-4xpq-77vm"/>
        <updated>2023-11-02T16:07:00.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in cobbler software component version 2.6.11-1. It suffers from an invalid parameter validation vulnerability, leading the arbitrary file reading. The flaw is triggered by navigating to a vulnerable URL via cobbler-web on a default installation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-9605">https://nvd.nist.gov/vuln/detail/CVE-2016-9605</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9605">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9605</a></li>
<li><a href="https://github.com/advisories/GHSA-4vc9-4xpq-77vm">https://github.com/advisories/GHSA-4vc9-4xpq-77vm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vc9-4xpq-77vm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:38:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pypdf] Possible Infinite Loop when PdfWriter(clone_from) is used with a PDF]]></title>
        <id>https://github.com/advisories/GHSA-wjcc-cq79-p63f</id>
        <link href="https://github.com/advisories/GHSA-wjcc-cq79-p63f"/>
        <updated>2023-10-31T22:22:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop.
This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage.</p>
<p>That is, for example, the case when the pypdf-user manipulates an incoming malicious PDF e.g. by merging it with another PDF or by adding annotations.</p>
<h3 id="patches">Patches</h3>
<p>The issue was fixed with #2264</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot update your version of pypdf, you should modify <code>pypdf/generic/_data_structures.py</code> just like #2264 did.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f">https://github.com/py-pdf/pypdf/security/advisories/GHSA-wjcc-cq79-p63f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46250">https://nvd.nist.gov/vuln/detail/CVE-2023-46250</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/2264">https://github.com/py-pdf/pypdf/pull/2264</a></li>
<li><a href="https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d">https://github.com/py-pdf/pypdf/commit/9b23ac3c9619492570011d551d521690de9a3e2d</a></li>
<li><a href="https://github.com/advisories/GHSA-wjcc-cq79-p63f">https://github.com/advisories/GHSA-wjcc-cq79-p63f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wjcc-cq79-p63f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-31T22:22:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Synapse vulnerable to leak of remote user device information]]></title>
        <id>https://github.com/advisories/GHSA-mp92-3jfm-3575</id>
        <link href="https://github.com/advisories/GHSA-mp92-3jfm-3575"/>
        <updated>2023-10-31T20:29:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Cached device information of remote users can be queried from Synapse. This can be used to enumerate the remote users known to a homeserver.</p>
<h3 id="patches">Patches</h3>
<p>System administrators are encouraged to upgrade to Synapse 1.95.1 as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>federation_domain_whitelist</code> can be used to limit federation traffic with a homeserver.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/synapse/security/advisories/GHSA-mp92-3jfm-3575">https://github.com/matrix-org/synapse/security/advisories/GHSA-mp92-3jfm-3575</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43796">https://nvd.nist.gov/vuln/detail/CVE-2023-43796</a></li>
<li><a href="https://github.com/matrix-org/synapse/commit/daec55e1fe120c564240c5386e77941372bf458f">https://github.com/matrix-org/synapse/commit/daec55e1fe120c564240c5386e77941372bf458f</a></li>
<li><a href="https://github.com/advisories/GHSA-mp92-3jfm-3575">https://github.com/advisories/GHSA-mp92-3jfm-3575</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mp92-3jfm-3575</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-31T20:29:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] LangChain vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-prgp-w7vf-ch62</id>
        <link href="https://github.com/advisories/GHSA-prgp-w7vf-ch62"/>
        <updated>2023-10-30T20:15:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in langchain langchain-ai before version 0.0.325 allows a remote attacker to execute arbitrary code via a crafted script to the PythonAstREPLTool._run component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39659">https://nvd.nist.gov/vuln/detail/CVE-2023-39659</a></li>
<li><a href="https://github.com/langchain-ai/langchain/issues/7700">https://github.com/langchain-ai/langchain/issues/7700</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/5640">https://github.com/langchain-ai/langchain/pull/5640</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/12427">https://github.com/langchain-ai/langchain/pull/12427</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/cadfce295f8a33828fc635c2e5ea28b883e5c992">https://github.com/langchain-ai/langchain/commit/cadfce295f8a33828fc635c2e5ea28b883e5c992</a></li>
<li><a href="https://github.com/langchain-ai/langchain/releases/tag/v0.0.325">https://github.com/langchain-ai/langchain/releases/tag/v0.0.325</a></li>
<li><a href="https://github.com/advisories/GHSA-prgp-w7vf-ch62">https://github.com/advisories/GHSA-prgp-w7vf-ch62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prgp-w7vf-ch62</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-08-15T18:31:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[homeassistant] Home Assistant vulnerable to account takeover via auth_callback login]]></title>
        <id>https://github.com/advisories/GHSA-qhhj-7hrc-gqj5</id>
        <link href="https://github.com/advisories/GHSA-qhhj-7hrc-gqj5"/>
        <updated>2023-10-26T21:46:22.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/"><em>Part of the Cure53 security audit of Home Assistant.</em></a></p>
<p>The audit team’s analyses confirmed that the <code>redirect_uri</code> and <code>client_id</code> are alterable when logging in. Consequently, the code parameter utilized to fetch the <code>access_token</code> post-authentication will be sent to the URL specified in the aforementioned parameters.</p>
<p>Since an arbitrary URL is permitted and <code>homeassistant.local</code> represents the preferred, default domain likely used and trusted by many users, an attacker could leverage this weakness to manipulate a user and retrieve account access. Notably, this attack strategy is plausible if the victim has exposed their Home Assistant to the Internet, since after acquiring the victim’s <code>access_token</code>, the adversary would need to utilize it directly towards the instance to achieve any pertinent malicious actions.</p>
<p>To achieve this compromise attempt, the attacker must send a link with a <code>redirect_uri</code> that they control to the victim’s own Home Assistant instance. In the eventuality the victim authenticates via the said link, the attacker would obtain code sent to the specified URL in <code>redirect_uri</code>, which can then be leveraged to fetch an <code>access_token</code>.</p>
<p>An attacker could increase the efficacy of this strategy by registering a nearly identical domain to <code>homeassistant.local</code>, which at first glance may appear legitimate and thereby obfuscate any malicious intentions.</p>
<p>Nonetheless, owing to the requirements for victim interaction and Home Assistant instance exposure to the Internet, this severity rating was consequently downgraded to Low.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/home-assistant/core/security/advisories/GHSA-qhhj-7hrc-gqj5">https://github.com/home-assistant/core/security/advisories/GHSA-qhhj-7hrc-gqj5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41893">https://nvd.nist.gov/vuln/detail/CVE-2023-41893</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/homeassistant/PYSEC-2023-214.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/homeassistant/PYSEC-2023-214.yaml</a></li>
<li><a href="https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/">https://www.home-assistant.io/blog/2023/10/19/security-audits-of-home-assistant/</a></li>
<li><a href="https://github.com/advisories/GHSA-qhhj-7hrc-gqj5">https://github.com/advisories/GHSA-qhhj-7hrc-gqj5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qhhj-7hrc-gqj5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-26T21:46:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urllib3] urllib3's request body not stripped after redirect from 303 status changes request method to GET]]></title>
        <id>https://github.com/advisories/GHSA-g4mx-q9vg-27p4</id>
        <link href="https://github.com/advisories/GHSA-g4mx-q9vg-27p4"/>
        <updated>2023-10-26T14:43:23.000Z</updated>
        <content type="html"><![CDATA[<p>urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 "See Other" after the request had its method changed from one that could accept a request body (like <code>POST</code>) to <code>GET</code> as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.</p>
<p>From <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-get">RFC 9110 Section 9.3.1</a>:</p>
<blockquote>
<p>A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.</p>
</blockquote>
<h2 id="affected-usages">Affected usages</h2>
<p>Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.</p>
<p>Both of the following conditions must be true to be affected by this vulnerability:</p>
<ul>
<li>If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON)</li>
<li>The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.</li>
</ul>
<h2 id="remediation">Remediation</h2>
<p>You can remediate this vulnerability with any of the following steps:</p>
<ul>
<li>Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7)</li>
<li>Disable redirects for services that you aren't expecting to respond with redirects with <code>redirects=False</code>.</li>
<li>Disable automatic redirects with <code>redirects=False</code> and handle 303 redirects manually by stripping the HTTP request body.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4">https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3">https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36">https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36</a></li>
<li><a href="https://github.com/urllib3/urllib3/releases/tag/1.26.18">https://github.com/urllib3/urllib3/releases/tag/1.26.18</a></li>
<li><a href="https://github.com/urllib3/urllib3/releases/tag/2.0.7">https://github.com/urllib3/urllib3/releases/tag/2.0.7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45803">https://nvd.nist.gov/vuln/detail/CVE-2023-45803</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9">https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-get">https://www.rfc-editor.org/rfc/rfc9110.html#name-get</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g4mx-q9vg-27p4">https://github.com/advisories/GHSA-g4mx-q9vg-27p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4mx-q9vg-27p4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-17T20:15:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urllib3] urllib3's request body not stripped after redirect from 303 status changes request method to GET]]></title>
        <id>https://github.com/advisories/GHSA-g4mx-q9vg-27p4</id>
        <link href="https://github.com/advisories/GHSA-g4mx-q9vg-27p4"/>
        <updated>2023-10-26T14:43:23.000Z</updated>
        <content type="html"><![CDATA[<p>urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 "See Other" after the request had its method changed from one that could accept a request body (like <code>POST</code>) to <code>GET</code> as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.</p>
<p>From <a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-get">RFC 9110 Section 9.3.1</a>:</p>
<blockquote>
<p>A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.</p>
</blockquote>
<h2 id="affected-usages">Affected usages</h2>
<p>Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.</p>
<p>Both of the following conditions must be true to be affected by this vulnerability:</p>
<ul>
<li>If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON)</li>
<li>The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.</li>
</ul>
<h2 id="remediation">Remediation</h2>
<p>You can remediate this vulnerability with any of the following steps:</p>
<ul>
<li>Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7)</li>
<li>Disable redirects for services that you aren't expecting to respond with redirects with <code>redirects=False</code>.</li>
<li>Disable automatic redirects with <code>redirects=False</code> and handle 303 redirects manually by stripping the HTTP request body.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4">https://github.com/urllib3/urllib3/security/advisories/GHSA-g4mx-q9vg-27p4</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3">https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36">https://github.com/urllib3/urllib3/commit/b594c5ceaca38e1ac215f916538fb128e3526a36</a></li>
<li><a href="https://github.com/urllib3/urllib3/releases/tag/1.26.18">https://github.com/urllib3/urllib3/releases/tag/1.26.18</a></li>
<li><a href="https://github.com/urllib3/urllib3/releases/tag/2.0.7">https://github.com/urllib3/urllib3/releases/tag/2.0.7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45803">https://nvd.nist.gov/vuln/detail/CVE-2023-45803</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9">https://github.com/urllib3/urllib3/commit/4e98d57809dacab1cbe625fddeec1a290c478ea9</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc9110.html#name-get">https://www.rfc-editor.org/rfc/rfc9110.html#name-get</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PPDPLM6UUMN55ESPQWJFLLIZY4ZKCNRX/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/urllib3/PYSEC-2023-212.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-g4mx-q9vg-27p4">https://github.com/advisories/GHSA-g4mx-q9vg-27p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g4mx-q9vg-27p4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-17T20:15:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter-server] Jupyter server Token bruteforcing]]></title>
        <id>https://github.com/advisories/GHSA-q874-g24w-4q9g</id>
        <link href="https://github.com/advisories/GHSA-q874-g24w-4q9g"/>
        <updated>2023-10-26T13:29:38.000Z</updated>
        <content type="html"><![CDATA[<p>Affects: Notebook and Lab between 6.4.0?(potentially earlier) and 6.4.11 (currently latest). Jupyter Server &lt;=1.16.0. If I am correct about the responsible code it will affect Jupyter-Server 1.17.0 and 2.0.0a0 as well.
Description: If notebook server is started with a value of <code>root_dir</code> that contains the starting user's home directory, then the underlying REST API can be used to leak the access token assigned at start time by guessing/brute forcing the PID of the jupyter server. While this requires an authenticated user session, this url can be used from an xss payload (as in CVE-2021-32798) or from a hooked or otherwise compromised browser to leak this access token to a malicious third party. This token can be used along with the REST API to interact with Jupyter services/notebooks such as modifying or overwriting critical files, such as .bashrc or .ssh/authorized_keys, allowing a malicious user to read potentially sensitive data and possibly gain control of the impacted system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29241">https://nvd.nist.gov/vuln/detail/CVE-2022-29241</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8">https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f">https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f</a></li>
<li><a href="https://github.com/advisories/GHSA-q874-g24w-4q9g">https://github.com/advisories/GHSA-q874-g24w-4q9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q874-g24w-4q9g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-16T23:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter-server] Jupyter server Token bruteforcing]]></title>
        <id>https://github.com/advisories/GHSA-q874-g24w-4q9g</id>
        <link href="https://github.com/advisories/GHSA-q874-g24w-4q9g"/>
        <updated>2023-10-26T13:29:38.000Z</updated>
        <content type="html"><![CDATA[<p>Affects: Notebook and Lab between 6.4.0?(potentially earlier) and 6.4.11 (currently latest). Jupyter Server &lt;=1.16.0. If I am correct about the responsible code it will affect Jupyter-Server 1.17.0 and 2.0.0a0 as well.
Description: If notebook server is started with a value of <code>root_dir</code> that contains the starting user's home directory, then the underlying REST API can be used to leak the access token assigned at start time by guessing/brute forcing the PID of the jupyter server. While this requires an authenticated user session, this url can be used from an xss payload (as in CVE-2021-32798) or from a hooked or otherwise compromised browser to leak this access token to a malicious third party. This token can be used along with the REST API to interact with Jupyter services/notebooks such as modifying or overwriting critical files, such as .bashrc or .ssh/authorized_keys, allowing a malicious user to read potentially sensitive data and possibly gain control of the impacted system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-q874-g24w-4q9g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29241">https://nvd.nist.gov/vuln/detail/CVE-2022-29241</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-server/PYSEC-2022-211.yaml</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8">https://github.com/jupyter-server/jupyter_server/commit/3485007abbb459585357212dcaa20521989272e8</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f">https://github.com/jupyter-server/jupyter_server/commit/877da10cd0d7ae45f8b1e385fa1f5a335e7adf1f</a></li>
<li><a href="https://github.com/advisories/GHSA-q874-g24w-4q9g">https://github.com/advisories/GHSA-q874-g24w-4q9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q874-g24w-4q9g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-06-16T23:13:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twisted] twisted.web has disordered HTTP pipeline response]]></title>
        <id>https://github.com/advisories/GHSA-xc8x-vp79-p3wm</id>
        <link href="https://github.com/advisories/GHSA-xc8x-vp79-p3wm"/>
        <updated>2023-10-27T20:48:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When sending multiple HTTP requests in one TCP packet, twisted.web will process the requests asynchronously without guaranteeing the response order.</p>
<h3 id="details">Details</h3>
<p>There's an example faulty program:</p>
<pre><code class="language-python">from twisted.internet import reactor, endpoints
from twisted.web import server
from twisted.web.proxy import ReverseProxyResource
from twisted.web.resource import Resource

class Second(Resource):
    isLeaf = True
    def render_GET(self, request):
        return b'SECOND\n'

class First(Resource):
    isLeaf = True
    def render_GET(self, request):
        def send_response():
            request.write(b'FIRST DELAYED\n')
            request.finish()
        reactor.callLater(0.5, send_response)
        return server.NOT_DONE_YET

root = Resource()

root.putChild(b'second', Second())
root.putChild(b'first', First())

endpoint = endpoints.TCP4ServerEndpoint(reactor, 8080)
endpoint.listen(server.Site(root))
reactor.run()
</code></pre>
<p>When two requests for <code>/first</code> and <code>/second</code> are sent in the same order, the second request will be responded to first.</p>
<pre><code class="language-shell">echo -en "GET /first HTTP/1.1\r\nHost: a\r\n\r\nGET /second HTTP/1.1\r\nHost: a\r\n\r\n" | nc localhost 8080
</code></pre>
<h3 id="impact">Impact</h3>
<p>If one of the endpoints is controlled by an attacker, the attacker can delay the response on purpose to manipulate the response of the second request when a victim launched two requests using HTTP pipeline.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm">https://github.com/twisted/twisted/security/advisories/GHSA-xc8x-vp79-p3wm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46137">https://nvd.nist.gov/vuln/detail/CVE-2023-46137</a></li>
<li><a href="https://github.com/advisories/GHSA-xc8x-vp79-p3wm">https://github.com/advisories/GHSA-xc8x-vp79-p3wm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xc8x-vp79-p3wm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-25T21:15:13.000Z</published>
    </entry>
</feed>