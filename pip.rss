<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-03-15T20:01:19.766Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[fgr]  fgr Vulnerable to Insecure Default Variable Initialization]]></title>
        <id>https://github.com/advisories/GHSA-879p-8gw4-mcpw</id>
        <link href="https://github.com/advisories/GHSA-879p-8gw4-mcpw"/>
        <updated>2024-03-15T19:01:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any users whom would not desire a traceback to be included in their logs whenever an error is raised in their code will be affected.</p>
<p>If users have inadvertently created a scenario in their code that could cause a traceback to include sensitive information <em>and</em> a malicious entity gained access to their log stream, this could create an issue.</p>
<h3 id="patches">Patches</h3>
<p>None yet... users will need to upgrade to <code>0.4.*</code></p>
<h3 id="workarounds">Workarounds</h3>
<p>No particularly reasonable ones at present.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cwe.mitre.org/data/definitions/453.html">https://cwe.mitre.org/data/definitions/453.html</a></li>
<li><a href="https://www.invicti.com/web-vulnerability-scanner/vulnerabilities/stack-trace-disclosure-python/">https://www.invicti.com/web-vulnerability-scanner/vulnerabilities/stack-trace-disclosure-python/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dan1hc/fgr/security/advisories/GHSA-879p-8gw4-mcpw">https://github.com/dan1hc/fgr/security/advisories/GHSA-879p-8gw4-mcpw</a></li>
<li><a href="https://github.com/advisories/GHSA-879p-8gw4-mcpw">https://github.com/advisories/GHSA-879p-8gw4-mcpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-879p-8gw4-mcpw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-03-15T19:01:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6 vulnerable to a username timing attack on recover password/MFA token]]></title>
        <id>https://github.com/advisories/GHSA-5h3x-6gwf-73jm</id>
        <link href="https://github.com/advisories/GHSA-5h3x-6gwf-73jm"/>
        <updated>2024-03-15T16:44:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Much like <a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53">https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53</a>, it is possible to find which usernames exist in vantage6 by calling the API routes <code>/recover/lost</code> and <code>/2fa/lost</code>, which send emails to users if they have lost their password or MFA token. Usernames can be found by assessing response time differences, and additionally, they can be found because the endpoint gives a response "Failed to login" if the username exists.</p>
<h3 id="patches">Patches</h3>
<p>No</p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53">https://github.com/vantage6/vantage6/security/advisories/GHSA-45gq-q4xh-cp53</a></li>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-5h3x-6gwf-73jm">https://github.com/vantage6/vantage6/security/advisories/GHSA-5h3x-6gwf-73jm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24770">https://nvd.nist.gov/vuln/detail/CVE-2024-24770</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/aecfd6d0e83165a41a60ebd52d2287b0217be26b">https://github.com/vantage6/vantage6/commit/aecfd6d0e83165a41a60ebd52d2287b0217be26b</a></li>
<li><a href="https://github.com/advisories/GHSA-5h3x-6gwf-73jm">https://github.com/advisories/GHSA-5h3x-6gwf-73jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5h3x-6gwf-73jm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T16:44:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6's CORS settings overly permissive]]></title>
        <id>https://github.com/advisories/GHSA-4946-85pr-fvxh</id>
        <link href="https://github.com/advisories/GHSA-4946-85pr-fvxh"/>
        <updated>2024-03-15T16:42:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vantage6 server has no restrictions on CORS settings. It should be possible for people to set the allowed origins of the server. </p>
<p>The impact is limited because v6 does not use session cookies</p>
<h3 id="patches">Patches</h3>
<p>No</p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-4946-85pr-fvxh">https://github.com/vantage6/vantage6/security/advisories/GHSA-4946-85pr-fvxh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23823">https://nvd.nist.gov/vuln/detail/CVE-2024-23823</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/70bb4e1d889230a841eb364d6c03accd7dd01a41">https://github.com/vantage6/vantage6/commit/70bb4e1d889230a841eb364d6c03accd7dd01a41</a></li>
<li><a href="https://github.com/advisories/GHSA-4946-85pr-fvxh">https://github.com/advisories/GHSA-4946-85pr-fvxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4946-85pr-fvxh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-15T16:42:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow: Ignored Airflow Permission]]></title>
        <id>https://github.com/advisories/GHSA-h574-6646-vfxx</id>
        <link href="https://github.com/advisories/GHSA-h574-6646-vfxx"/>
        <updated>2024-03-15T14:19:24.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Airflow, versions 2.8.0 through 2.8.2, has a vulnerability that allows an authenticated user with limited permissions to access resources such as variables, connections, etc from the UI which they do not have permission to access.&nbsp;</p>
<p>Users of Apache Airflow are recommended to upgrade to version 2.8.3 or newer to mitigate the risk associated with this vulnerability</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28746">https://nvd.nist.gov/vuln/detail/CVE-2024-28746</a></li>
<li><a href="https://github.com/apache/airflow/pull/37881">https://github.com/apache/airflow/pull/37881</a></li>
<li><a href="https://lists.apache.org/thread/b4pffc7w7do6qgk4jjbyxvdz5odrvny7">https://lists.apache.org/thread/b4pffc7w7do6qgk4jjbyxvdz5odrvny7</a></li>
<li><a href="https://github.com/apache/airflow/commit/89e7f3e7bdf2126bbbcd959dc10d65ef92773cca">https://github.com/apache/airflow/commit/89e7f3e7bdf2126bbbcd959dc10d65ef92773cca</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-46.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-46.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h574-6646-vfxx">https://github.com/advisories/GHSA-h574-6646-vfxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h574-6646-vfxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-14T09:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain-core] LangChain directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h59x-p739-982c</id>
        <link href="https://github.com/advisories/GHSA-h59x-p739-982c"/>
        <updated>2024-03-14T23:14:55.000Z</updated>
        <content type="html"><![CDATA[<p>LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28088">https://nvd.nist.gov/vuln/detail/CVE-2024-28088</a></li>
<li><a href="https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md">https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md</a></li>
<li><a href="https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py">https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5">https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/18600">https://github.com/langchain-ai/langchain/pull/18600</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h59x-p739-982c">https://github.com/advisories/GHSA-h59x-p739-982c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h59x-p739-982c</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-03-04T00:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] LangChain directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h59x-p739-982c</id>
        <link href="https://github.com/advisories/GHSA-h59x-p739-982c"/>
        <updated>2024-03-14T23:14:55.000Z</updated>
        <content type="html"><![CDATA[<p>LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28088">https://nvd.nist.gov/vuln/detail/CVE-2024-28088</a></li>
<li><a href="https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md">https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md</a></li>
<li><a href="https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py">https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5">https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/18600">https://github.com/langchain-ai/langchain/pull/18600</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain-core/PYSEC-2024-45.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h59x-p739-982c">https://github.com/advisories/GHSA-h59x-p739-982c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h59x-p739-982c</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-03-04T00:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whoogle-search] Whoogle Search Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q97g-c29h-x2p7</id>
        <link href="https://github.com/advisories/GHSA-q97g-c29h-x2p7"/>
        <updated>2024-03-14T20:37:58.000Z</updated>
        <content type="html"><![CDATA[<p>Whoogle Search is a self-hosted metasearch engine. In versions prior to 0.8.4, the <code>element</code> method in <code>app/routes.py</code> does not validate the user-controlled <code>src_type</code> and <code>element_url</code> variables and passes them to the <code>send</code> method which sends a GET request on lines 339-343 in <code>request.py</code>, which leads to a server-side request forgery. This issue allows for crafting GET requests to internal and external resources on behalf of the server. For example, this issue would allow for accessing resources on the internal network that the server has access to, even though these resources may not be accessible on the internet. This issue is fixed in version 0.8.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22203">https://nvd.nist.gov/vuln/detail/CVE-2024-22203</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-20.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-20.yaml</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>
<li><a href="https://github.com/advisories/GHSA-q97g-c29h-x2p7">https://github.com/advisories/GHSA-q97g-c29h-x2p7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q97g-c29h-x2p7</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-14T20:37:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whoogle-search] Whoogle Search Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hh2q-qv66-jcqg</id>
        <link href="https://github.com/advisories/GHSA-hh2q-qv66-jcqg"/>
        <updated>2024-03-14T20:37:58.000Z</updated>
        <content type="html"><![CDATA[<p>Whoogle Search is a self-hosted metasearch engine. Versions 0.8.3 and prior have a limited file write vulnerability when the configuration options in Whoogle are enabled. The <code>config</code> function in <code>app/routes.py</code> does not validate the user-controlled <code>name</code> variable on line 447 and <code>config_data</code> variable on line 437. The <code>name</code> variable is insecurely concatenated in <code>os.path.join</code>, leading to path manipulation. The POST data from the <code>config_data</code> variable is saved with <code>pickle.dump</code> which leads to a limited file write. However, the data that is saved is earlier transformed into a dictionary and the <code>url</code> key value pair is added before the file is saved on the system. All in all, the issue allows us to save and overwrite files on the system that the application has permissions to, with a dictionary containing arbitrary data and the <code>url</code> key value, which is a limited file write. Version 0.8.4 contains a patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22204">https://nvd.nist.gov/vuln/detail/CVE-2024-22204</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L419-L452">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L419-L452</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L437">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L437</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L444">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L444</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L447">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L447</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-23.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-23.yaml</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>
<li><a href="https://github.com/advisories/GHSA-hh2q-qv66-jcqg">https://github.com/advisories/GHSA-hh2q-qv66-jcqg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh2q-qv66-jcqg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-14T20:37:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whoogle-search] Whoogle Search Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3q6g-qmpx-rqw4</id>
        <link href="https://github.com/advisories/GHSA-3q6g-qmpx-rqw4"/>
        <updated>2024-03-14T20:37:58.000Z</updated>
        <content type="html"><![CDATA[<p>Whoogle Search is a self-hosted metasearch engine. In versions 0.8.3 and prior, the <code>window</code> endpoint does not sanitize user-supplied input from the <code>location</code> variable and passes it to the <code>send</code> method which sends a <code>GET</code> request on lines 339-343 in <code>request.py,</code> which leads to a server-side request forgery. This issue allows for crafting GET requests to internal and external resources on behalf of the server. For example, this issue would allow for accessing resources on the internal network that the server has access to, even though these resources may not be accessible on the internet. This issue is fixed in version 0.8.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22205">https://nvd.nist.gov/vuln/detail/CVE-2024-22205</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L496-L557">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L496-L557</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L497">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L497</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-18.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-18.yaml</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>
<li><a href="https://github.com/advisories/GHSA-3q6g-qmpx-rqw4">https://github.com/advisories/GHSA-3q6g-qmpx-rqw4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q6g-qmpx-rqw4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-14T20:37:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whoogle-search] Whoogle Search Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-phg6-44m7-hx3h</id>
        <link href="https://github.com/advisories/GHSA-phg6-44m7-hx3h"/>
        <updated>2024-03-14T20:37:57.000Z</updated>
        <content type="html"><![CDATA[<p>Whoogle Search is a self-hosted metasearch engine. In versions 0.8.3 and prior, the <code>element</code> method in <code>app/routes.py</code> does not validate the user-controlled <code>src_type</code> and <code>element_url</code> variables and passes them to the <code>send</code> method which sends a <code>GET</code> request on lines 339-343 in <code>requests.py</code>. The returned contents of the URL are then passed to and reflected back to the user in the <code>send_file</code> function on line 484, together with the user-controlled <code>src_type</code>, which allows the attacker to control the HTTP response content type leading to a cross-site scripting vulnerability. An attacker could craft a special URL to point to a malicious website and send the link to a victim. The fact that the link would contain a trusted domain (e.g. from one of public Whoogle instances) could be used to trick the user into clicking the link.The malicious website could, for example, be a copy of a real website, meant to steal a person’s credentials to the website, or trick that person in another way. Version 0.8.4 contains a patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22417">https://nvd.nist.gov/vuln/detail/CVE-2024-22417</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda">https://github.com/benbusby/whoogle-search/commit/3a2e0b262e4a076a20416b45e6b6f23fd265aeda</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/request.py#L339-L343</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L465-L490</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L466</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L476</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L479</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L484C6-L484C7">https://github.com/benbusby/whoogle-search/blob/92e8ede24e9277a5440d403f75877209f1269884/app/routes.py#L484C6-L484C7</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-19.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2024-19.yaml</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search">https://securitylab.github.com/advisories/GHSL-2023-186_GHSL-2023-189_benbusby_whoogle-search</a></li>
<li><a href="https://github.com/advisories/GHSA-phg6-44m7-hx3h">https://github.com/advisories/GHSA-phg6-44m7-hx3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phg6-44m7-hx3h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-14T20:37:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mssql-django] Remote Code Execution Vulnerability in Microsoft Django Backend for SQL Server]]></title>
        <id>https://github.com/advisories/GHSA-vmqv-47j8-gwv8</id>
        <link href="https://github.com/advisories/GHSA-vmqv-47j8-gwv8"/>
        <updated>2024-03-13T16:59:16.000Z</updated>
        <content type="html"><![CDATA[<p>Microsoft Django Backend for SQL Server Remote Code Execution Vulnerability</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26164">https://nvd.nist.gov/vuln/detail/CVE-2024-26164</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26164">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-26164</a></li>
<li><a href="https://github.com/advisories/GHSA-vmqv-47j8-gwv8">https://github.com/advisories/GHSA-vmqv-47j8-gwv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vmqv-47j8-gwv8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-12T18:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiosmtpd] aiosmtpd vulnerable to SMTP smuggling]]></title>
        <id>https://github.com/advisories/GHSA-pr2m-px7j-xg65</id>
        <link href="https://github.com/advisories/GHSA-pr2m-px7j-xg65"/>
        <updated>2024-03-13T15:33:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>aiosmtpd is vulnerable to inbound SMTP smuggling. SMTP smuggling is a novel vulnerability based on not so novel interpretation differences of the SMTP protocol. By exploiting SMTP smuggling, an attacker may send smuggle/spoof e-mails with fake sender addresses, allowing advanced phishing attacks. This issue also existed in other SMTP software like Postfix (<a href="https://www.postfix.org/smtp-smuggling.html">https://www.postfix.org/smtp-smuggling.html</a>).</p>
<h3 id="details">Details</h3>
<p>Detailed information on SMTP smuggling can be found in the full blog post (<a href="https://sec-consult.com/blog/detail/smtp-smuggling-spoofing-e-mails-worldwide/">https://sec-consult.com/blog/detail/smtp-smuggling-spoofing-e-mails-worldwide/</a>) or on the Postfix homepage (<a href="https://www.postfix.org/smtp-smuggling.html">https://www.postfix.org/smtp-smuggling.html</a>). (and soon on the official website <a href="https://smtpsmuggling.com/">https://smtpsmuggling.com/</a>)  </p>
<h3 id="impact">Impact</h3>
<p>With the right SMTP server constellation, an attacker can send spoofed e-mails to inbound/receiving aiosmtpd instances.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiosmtpd/security/advisories/GHSA-pr2m-px7j-xg65">https://github.com/aio-libs/aiosmtpd/security/advisories/GHSA-pr2m-px7j-xg65</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27305">https://nvd.nist.gov/vuln/detail/CVE-2024-27305</a></li>
<li><a href="https://github.com/aio-libs/aiosmtpd/commit/24b6c79c8921cf1800e27ca144f4f37023982bbb">https://github.com/aio-libs/aiosmtpd/commit/24b6c79c8921cf1800e27ca144f4f37023982bbb</a></li>
<li><a href="https://www.postfix.org/smtp-smuggling.html">https://www.postfix.org/smtp-smuggling.html</a></li>
<li><a href="https://github.com/advisories/GHSA-pr2m-px7j-xg65">https://github.com/advisories/GHSA-pr2m-px7j-xg65</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pr2m-px7j-xg65</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T15:33:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckan] Potential log injection in reset user endpoint in CKAN]]></title>
        <id>https://github.com/advisories/GHSA-8g38-3m6v-232j</id>
        <link href="https://github.com/advisories/GHSA-8g38-3m6v-232j"/>
        <updated>2024-03-13T22:28:41.000Z</updated>
        <content type="html"><![CDATA[<p>A user endpoint didn't perform filtering on an incoming parameter, which was added directly to the application log. This could lead to an attacker injecting false log entries or corrupt the log file format.</p>
<h3 id="patches">Patches</h3>
<p>This has been fixed in the CKAN 2.9.11 and 2.10.4 versions</p>
<h3 id="workarounds">Workarounds</h3>
<p>Override the <code>/user/reset</code> endpoint to filter the <code>id</code> parameter in order to exclude newlines</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckan/ckan/security/advisories/GHSA-8g38-3m6v-232j">https://github.com/ckan/ckan/security/advisories/GHSA-8g38-3m6v-232j</a></li>
<li><a href="https://github.com/ckan/ckan/commit/5fa133e7e9019573066455b5d442e93c62b3fc93">https://github.com/ckan/ckan/commit/5fa133e7e9019573066455b5d442e93c62b3fc93</a></li>
<li><a href="https://github.com/ckan/ckan/commit/81b56c55e5e3651d7fcf9642cd5a489a9b62212c">https://github.com/ckan/ckan/commit/81b56c55e5e3651d7fcf9642cd5a489a9b62212c</a></li>
<li><a href="https://github.com/ckan/ckan/commit/d81f411bff2da7347c343a83e17f5814475b5b64">https://github.com/ckan/ckan/commit/d81f411bff2da7347c343a83e17f5814475b5b64</a></li>
<li><a href="https://docs.ckan.org/en/2.10/changelog.html#v-2-10-4-2024-03-13">https://docs.ckan.org/en/2.10/changelog.html#v-2-10-4-2024-03-13</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27097">https://nvd.nist.gov/vuln/detail/CVE-2024-27097</a></li>
<li><a href="https://github.com/advisories/GHSA-8g38-3m6v-232j">https://github.com/advisories/GHSA-8g38-3m6v-232j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g38-3m6v-232j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T15:30:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckan] Potential log injection in reset user endpoint in CKAN]]></title>
        <id>https://github.com/advisories/GHSA-8g38-3m6v-232j</id>
        <link href="https://github.com/advisories/GHSA-8g38-3m6v-232j"/>
        <updated>2024-03-13T22:28:41.000Z</updated>
        <content type="html"><![CDATA[<p>A user endpoint didn't perform filtering on an incoming parameter, which was added directly to the application log. This could lead to an attacker injecting false log entries or corrupt the log file format.</p>
<h3 id="patches">Patches</h3>
<p>This has been fixed in the CKAN 2.9.11 and 2.10.4 versions</p>
<h3 id="workarounds">Workarounds</h3>
<p>Override the <code>/user/reset</code> endpoint to filter the <code>id</code> parameter in order to exclude newlines</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckan/ckan/security/advisories/GHSA-8g38-3m6v-232j">https://github.com/ckan/ckan/security/advisories/GHSA-8g38-3m6v-232j</a></li>
<li><a href="https://github.com/ckan/ckan/commit/5fa133e7e9019573066455b5d442e93c62b3fc93">https://github.com/ckan/ckan/commit/5fa133e7e9019573066455b5d442e93c62b3fc93</a></li>
<li><a href="https://github.com/ckan/ckan/commit/81b56c55e5e3651d7fcf9642cd5a489a9b62212c">https://github.com/ckan/ckan/commit/81b56c55e5e3651d7fcf9642cd5a489a9b62212c</a></li>
<li><a href="https://github.com/ckan/ckan/commit/d81f411bff2da7347c343a83e17f5814475b5b64">https://github.com/ckan/ckan/commit/d81f411bff2da7347c343a83e17f5814475b5b64</a></li>
<li><a href="https://docs.ckan.org/en/2.10/changelog.html#v-2-10-4-2024-03-13">https://docs.ckan.org/en/2.10/changelog.html#v-2-10-4-2024-03-13</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27097">https://nvd.nist.gov/vuln/detail/CVE-2024-27097</a></li>
<li><a href="https://github.com/advisories/GHSA-8g38-3m6v-232j">https://github.com/advisories/GHSA-8g38-3m6v-232j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g38-3m6v-232j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-13T15:30:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLflow authentication requirement bypass can allow a user to arbitrarily create an account]]></title>
        <id>https://github.com/advisories/GHSA-4qq5-mxxx-m6gg</id>
        <link href="https://github.com/advisories/GHSA-4qq5-mxxx-m6gg"/>
        <updated>2024-03-11T05:00:46.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker is able to arbitrarily create an account in MLflow bypassing any authentication requirement.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6014">https://nvd.nist.gov/vuln/detail/CVE-2023-6014</a></li>
<li><a href="https://huntr.com/bounties/3e64df69-ddc2-463e-9809-d07c24dc1de4">https://huntr.com/bounties/3e64df69-ddc2-463e-9809-d07c24dc1de4</a></li>
<li><a href="https://github.com/mlflow/mlflow/issues/9669">https://github.com/mlflow/mlflow/issues/9669</a></li>
<li><a href="https://github.com/mlflow/mlflow/pull/9700">https://github.com/mlflow/mlflow/pull/9700</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/32de2154ef9f946160e5dc01a4d8a449dd0bd259">https://github.com/mlflow/mlflow/commit/32de2154ef9f946160e5dc01a4d8a449dd0bd259</a></li>
<li><a href="https://github.com/mlflow/mlflow/releases/tag/v2.8.0">https://github.com/mlflow/mlflow/releases/tag/v2.8.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4qq5-mxxx-m6gg">https://github.com/advisories/GHSA-4qq5-mxxx-m6gg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4qq5-mxxx-m6gg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T21:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django settings leak in date template filter]]></title>
        <id>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</id>
        <link href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh"/>
        <updated>2024-03-08T20:49:46.000Z</updated>
        <content type="html"><![CDATA[<p>The get_format function in <code>utils/formats.py</code> in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by <code>SECRET_KEY</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8213">https://nvd.nist.gov/vuln/detail/CVE-2015-8213</a></li>
<li><a href="https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4">https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0129.html">http://rhn.redhat.com/errata/RHSA-2016-0129.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0156.html">http://rhn.redhat.com/errata/RHSA-2016-0156.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0157.html">http://rhn.redhat.com/errata/RHSA-2016-0157.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0158.html">http://rhn.redhat.com/errata/RHSA-2016-0158.html</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3404">http://www.debian.org/security/2015/dsa-3404</a></li>
<li><a href="http://www.securityfocus.com/bid/77750">http://www.securityfocus.com/bid/77750</a></li>
<li><a href="http://www.securitytracker.com/id/1034237">http://www.securitytracker.com/id/1034237</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2816-1">http://www.ubuntu.com/usn/USN-2816-1</a></li>
<li><a href="https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da">https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da</a></li>
<li><a href="https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172">https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172</a></li>
<li><a href="https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991">https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued">https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued</a></li>
<li><a href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh">https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:25:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django settings leak in date template filter]]></title>
        <id>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</id>
        <link href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh"/>
        <updated>2024-03-08T20:49:46.000Z</updated>
        <content type="html"><![CDATA[<p>The get_format function in <code>utils/formats.py</code> in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by <code>SECRET_KEY</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8213">https://nvd.nist.gov/vuln/detail/CVE-2015-8213</a></li>
<li><a href="https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4">https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0129.html">http://rhn.redhat.com/errata/RHSA-2016-0129.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0156.html">http://rhn.redhat.com/errata/RHSA-2016-0156.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0157.html">http://rhn.redhat.com/errata/RHSA-2016-0157.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0158.html">http://rhn.redhat.com/errata/RHSA-2016-0158.html</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3404">http://www.debian.org/security/2015/dsa-3404</a></li>
<li><a href="http://www.securityfocus.com/bid/77750">http://www.securityfocus.com/bid/77750</a></li>
<li><a href="http://www.securitytracker.com/id/1034237">http://www.securitytracker.com/id/1034237</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2816-1">http://www.ubuntu.com/usn/USN-2816-1</a></li>
<li><a href="https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da">https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da</a></li>
<li><a href="https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172">https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172</a></li>
<li><a href="https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991">https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued">https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued</a></li>
<li><a href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh">https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:25:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django settings leak in date template filter]]></title>
        <id>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</id>
        <link href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh"/>
        <updated>2024-03-08T20:49:46.000Z</updated>
        <content type="html"><![CDATA[<p>The get_format function in <code>utils/formats.py</code> in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by <code>SECRET_KEY</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8213">https://nvd.nist.gov/vuln/detail/CVE-2015-8213</a></li>
<li><a href="https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4">https://github.com/django/django/commit/316bc3fc9437c5960c24baceb93c73f1939711e4</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/173375.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-December/174770.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00014.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html">http://lists.opensuse.org/opensuse-updates/2015-12/msg00017.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0129.html">http://rhn.redhat.com/errata/RHSA-2016-0129.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0156.html">http://rhn.redhat.com/errata/RHSA-2016-0156.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0157.html">http://rhn.redhat.com/errata/RHSA-2016-0157.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-0158.html">http://rhn.redhat.com/errata/RHSA-2016-0158.html</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3404">http://www.debian.org/security/2015/dsa-3404</a></li>
<li><a href="http://www.securityfocus.com/bid/77750">http://www.securityfocus.com/bid/77750</a></li>
<li><a href="http://www.securitytracker.com/id/1034237">http://www.securitytracker.com/id/1034237</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2816-1">http://www.ubuntu.com/usn/USN-2816-1</a></li>
<li><a href="https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da">https://github.com/django/django/commit/3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da</a></li>
<li><a href="https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172">https://github.com/django/django/commit/8a01c6b53169ee079cb21ac5919fdafcc8c5e172</a></li>
<li><a href="https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991">https://github.com/django/django/commit/9f83fc2f66f5a0bac7c291aec55df66050bb6991</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued">https://www.djangoproject.com/weblog/2015/nov/24/security-releases-issued</a></li>
<li><a href="https://github.com/advisories/GHSA-6wcr-wcqm-3mfh">https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wcr-wcqm-3mfh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:25:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[weasyprint] WeasyPrint allows the attachment of arbitrary files and URLs to a PDF]]></title>
        <id>https://github.com/advisories/GHSA-35jj-wx47-4w8r</id>
        <link href="https://github.com/advisories/GHSA-35jj-wx47-4w8r"/>
        <updated>2024-03-11T03:38:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Since version 61.0, there's a vulnerability which allows attaching content of arbitrary files and URLs to a generated PDF document, even if <code>url_fetcher</code> is configured to prevent access to files and URLs.</p>
<h3 id="patches">Patches</h3>
<p>Fixed by 734ee8e that’s included in 61.2</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Check that no PDF attachment is defined in source HTML.</li>
<li>Launch WeasyPrint in a sandbox that prevents access to the filesystem and the network.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Kozea/WeasyPrint/security/advisories/GHSA-35jj-wx47-4w8r">https://github.com/Kozea/WeasyPrint/security/advisories/GHSA-35jj-wx47-4w8r</a></li>
<li><a href="https://github.com/Kozea/WeasyPrint/commit/734ee8e2dc84ff3090682f3abff056d0907c8598">https://github.com/Kozea/WeasyPrint/commit/734ee8e2dc84ff3090682f3abff056d0907c8598</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28184">https://nvd.nist.gov/vuln/detail/CVE-2024-28184</a></li>
<li><a href="https://github.com/advisories/GHSA-35jj-wx47-4w8r">https://github.com/advisories/GHSA-35jj-wx47-4w8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35jj-wx47-4w8r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-08T20:42:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libosdp] LibOSDP RMAC revert to the beginning of the session]]></title>
        <id>https://github.com/advisories/GHSA-xhjw-7vh5-qxqm</id>
        <link href="https://github.com/advisories/GHSA-xhjw-7vh5-qxqm"/>
        <updated>2024-03-08T17:33:53.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>Issues:<ul>
<li>SCS_14 is allowed on encrypted connection (osdp_phy.c)</li>
<li>No validation for RMAC_I is only in response to osdp_SCRYPT (osdp_cp.c)</li>
<li>Couldn't find anything specific in the OSDP specifications indicating it is forbidden, I'm gussing it shouldn't be allowed according from the secure connection initialization flow (let me know if you think there is spec-rela
ted change that should be done)</li>
</ul>
</li>
<li>Attack:<ul>
<li>Once RMAC_I message can be sent during a session, attacker with MITM access to the communication may intercept the original RMAC_I reply and save it.</li>
<li>While the session continues, the attacker will record all of the replies and save them, till capturing the message to be replied (can be detected by ID, length or time based on inspection of visual activity next to the reade
r)</li>
<li>Once attacker captures a session with the message to be replayed, he stops reseting the connection and waits for signal to perform the replay to of the PD to CP message (ex: by signaling remotly to the MIMT device or setting
 a specific timing).</li>
<li>in order to replay, the attacker will craft a specific RMAC_I message in the proper seq of the execution, which will result in reverting the RMAC to the begining of the session.</li>
<li>At that phase - attacker can replay all the messages from the begining of the session.</li>
</ul>
</li>
</ul>
<h3 id="impact">Impact</h3>
<p>Reply attack</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in 298576d9214b48214092eebdd892ec77be085e5a</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goToMain/libosdp/security/advisories/GHSA-xhjw-7vh5-qxqm">https://github.com/goToMain/libosdp/security/advisories/GHSA-xhjw-7vh5-qxqm</a></li>
<li><a href="https://github.com/goToMain/libosdp/commit/298576d9214b48214092eebdd892ec77be085e5a">https://github.com/goToMain/libosdp/commit/298576d9214b48214092eebdd892ec77be085e5a</a></li>
<li><a href="https://github.com/advisories/GHSA-xhjw-7vh5-qxqm">https://github.com/advisories/GHSA-xhjw-7vh5-qxqm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xhjw-7vh5-qxqm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-08T17:33:51.000Z</published>
    </entry>
</feed>