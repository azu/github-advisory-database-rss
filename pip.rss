<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-08-30T21:01:20.505Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow logs passwords in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-cvcq-gmc3-q6m8</id>
        <link href="https://github.com/advisories/GHSA-cvcq-gmc3-q6m8"/>
        <updated>2023-08-30T20:55:56.000Z</updated>
        <content type="html"><![CDATA[<p>In Airflow versions prior to 1.10.13, when creating a user using airflow CLI, the password gets logged in plain text in the Log table in Airflow Metadatase. The same happenes when creating a Connection with a password field.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-17511">https://nvd.nist.gov/vuln/detail/CVE-2020-17511</a></li>
<li><a href="https://github.com/apache/airflow/commit/4e32546faf227a6497ce8b282fff7450cae6f665">https://github.com/apache/airflow/commit/4e32546faf227a6497ce8b282fff7450cae6f665</a></li>
<li><a href="https://lists.apache.org/thread.html/ree782a29d927b96bf0b39fb92e2f1f09ea3112a985f7a08ce93765ac%40%3Cusers.airflow.apache.org%3E">https://lists.apache.org/thread.html/ree782a29d927b96bf0b39fb92e2f1f09ea3112a985f7a08ce93765ac%40%3Cusers.airflow.apache.org%3E</a></li>
<li><a href="https://github.com/advisories/GHSA-cvcq-gmc3-q6m8">https://github.com/advisories/GHSA-cvcq-gmc3-q6m8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvcq-gmc3-q6m8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-12-17T21:00:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[RestrictedPython] Sandbox escape via various forms of "format".]]></title>
        <id>https://github.com/advisories/GHSA-xjw2-6jm9-rf67</id>
        <link href="https://github.com/advisories/GHSA-xjw2-6jm9-rf67"/>
        <updated>2023-08-30T20:47:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" all objects accessible through recursive attribute lookup and subscription from objects he can access. This can lead to critical information disclosure.
With <code>RestrictedPython</code>, the format functionality is available via the <code>format</code> and <code>format_map</code> methods of <code>str</code> (and <code>unicode</code>) (accessed either via the class or its instances) and via <code>string.Formatter</code>.
All known versions of <code>RestrictedPython</code> are vulnerable. </p>
<h3 id="patches">Patches</h3>
<p>The issue will be fixed in 5.4 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds to fix the issue without upgrading.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.format_map">https://docs.python.org/3/library/stdtypes.html#str.format_map</a></li>
<li><a href="http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/">http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/</a></li>
<li><a href="https://www.exploit-db.com/exploits/51580">https://www.exploit-db.com/exploits/51580</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in the <a href="https://github.com/zopefoundation/RestrictedPython/issues">RestrictedPython issue tracker</a></li>
<li>Email us at <a href="mailto:security@plone.org">security@plone.org</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks for analysing and reporting the go to:</p>
<ul>
<li>Abhishek Govindarasu</li>
<li>Ankush Menat</li>
<li>Ward Theunisse</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41039">https://nvd.nist.gov/vuln/detail/CVE-2023-41039</a></li>
<li><a href="https://github.com/zopefoundation/RestrictedPython/commit/4134aedcff17c977da7717693ed89ce56d54c120">https://github.com/zopefoundation/RestrictedPython/commit/4134aedcff17c977da7717693ed89ce56d54c120</a></li>
<li><a href="https://github.com/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/advisories/GHSA-xjw2-6jm9-rf67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xjw2-6jm9-rf67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-30T20:47:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[RestrictedPython] Sandbox escape via various forms of "format".]]></title>
        <id>https://github.com/advisories/GHSA-xjw2-6jm9-rf67</id>
        <link href="https://github.com/advisories/GHSA-xjw2-6jm9-rf67"/>
        <updated>2023-08-30T20:47:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" all objects accessible through recursive attribute lookup and subscription from objects he can access. This can lead to critical information disclosure.
With <code>RestrictedPython</code>, the format functionality is available via the <code>format</code> and <code>format_map</code> methods of <code>str</code> (and <code>unicode</code>) (accessed either via the class or its instances) and via <code>string.Formatter</code>.
All known versions of <code>RestrictedPython</code> are vulnerable. </p>
<h3 id="patches">Patches</h3>
<p>The issue will be fixed in 5.4 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds to fix the issue without upgrading.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.format_map">https://docs.python.org/3/library/stdtypes.html#str.format_map</a></li>
<li><a href="http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/">http://lucumr.pocoo.org/2016/12/29/careful-with-str-format/</a></li>
<li><a href="https://www.exploit-db.com/exploits/51580">https://www.exploit-db.com/exploits/51580</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in the <a href="https://github.com/zopefoundation/RestrictedPython/issues">RestrictedPython issue tracker</a></li>
<li>Email us at <a href="mailto:security@plone.org">security@plone.org</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks for analysing and reporting the go to:</p>
<ul>
<li>Abhishek Govindarasu</li>
<li>Ankush Menat</li>
<li>Ward Theunisse</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41039">https://nvd.nist.gov/vuln/detail/CVE-2023-41039</a></li>
<li><a href="https://github.com/zopefoundation/RestrictedPython/commit/4134aedcff17c977da7717693ed89ce56d54c120">https://github.com/zopefoundation/RestrictedPython/commit/4134aedcff17c977da7717693ed89ce56d54c120</a></li>
<li><a href="https://github.com/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/advisories/GHSA-xjw2-6jm9-rf67</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xjw2-6jm9-rf67</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-30T20:47:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zbar] Heap-based buffer overflow in ZBar]]></title>
        <id>https://github.com/advisories/GHSA-mhp6-jvpx-2p4m</id>
        <link href="https://github.com/advisories/GHSA-mhp6-jvpx-2p4m"/>
        <updated>2023-08-30T20:22:20.000Z</updated>
        <content type="html"><![CDATA[<p>A heap-based buffer overflow exists in the qr_reader_match_centers function of ZBar 0.23.90. Specially crafted QR codes may lead to information disclosure and/or arbitrary code execution. To trigger this vulnerability, an attacker can digitally input the malicious QR code, or prepare it to be physically scanned by the vulnerable scanner.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40889">https://nvd.nist.gov/vuln/detail/CVE-2023-40889</a></li>
<li><a href="https://hackmd.io/@cspl/B1ZkFZv23">https://hackmd.io/@cspl/B1ZkFZv23</a></li>
<li><a href="https://github.com/advisories/GHSA-mhp6-jvpx-2p4m">https://github.com/advisories/GHSA-mhp6-jvpx-2p4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhp6-jvpx-2p4m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-29T18:31:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-sqoop] Airflow Sqoop Provider RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g3m9-pr5m-4cvp</id>
        <link href="https://github.com/advisories/GHSA-g3m9-pr5m-4cvp"/>
        <updated>2023-08-30T20:15:43.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Airflow Sqoop Provider, versions before 4.0.0, is affected by a vulnerability that allows an attacker pass parameters with the connections, which makes it possible to implement RCE attacks via ‘sqoop import --connect’, obtain airflow server permissions, etc. The attacker needs to be logged in and have authorization (permissions) to create/edit connections.</p>
<p> It is recommended to upgrade to a version that is not affected.
This issue was reported independently by happyhacking-k, And Xie Jianming and LiuHui of Caiji Sec Team also reported it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27604">https://nvd.nist.gov/vuln/detail/CVE-2023-27604</a></li>
<li><a href="https://github.com/apache/airflow/pull/33039">https://github.com/apache/airflow/pull/33039</a></li>
<li><a href="https://lists.apache.org/thread/lswlxf11do51ob7f6xyyg8qp3n7wdrgd">https://lists.apache.org/thread/lswlxf11do51ob7f6xyyg8qp3n7wdrgd</a></li>
<li><a href="https://github.com/advisories/GHSA-g3m9-pr5m-4cvp">https://github.com/advisories/GHSA-g3m9-pr5m-4cvp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3m9-pr5m-4cvp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-28T09:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-spark] Apache Airflow vulnerable arbitrary code execution via Spark server]]></title>
        <id>https://github.com/advisories/GHSA-8q28-pw9g-w82c</id>
        <link href="https://github.com/advisories/GHSA-8q28-pw9g-w82c"/>
        <updated>2023-08-30T20:13:17.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of Untrusted Data, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Software Foundation Apache Airflow Spark Provider.</p>
<p>When the Apache Spark provider is installed on an Airflow deployment, an Airflow user that is authorized to configure Spark hooks can effectively run arbitrary code on the Airflow node by pointing it at a malicious Spark server. Prior to version 4.1.3, this was not called out in the documentation explicitly, so it is possible that administrators provided authorizations to configure Spark hooks without taking this into account. We recommend administrators to review their configurations to make sure the authorization to configure Spark hooks is only provided to fully trusted users.</p>
<p>To view the warning in the docs please visit&nbsp; <a href="https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/4.1.3/connections/spark.html">https://airflow.apache.org/docs/apache-airflow-providers-apache-spark/4.1.3/connections/spark.html</a> </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40195">https://nvd.nist.gov/vuln/detail/CVE-2023-40195</a></li>
<li><a href="https://github.com/apache/airflow/pull/33233">https://github.com/apache/airflow/pull/33233</a></li>
<li><a href="https://lists.apache.org/thread/fzy95b1d6zv31j5wrx3znhzcscck2o24">https://lists.apache.org/thread/fzy95b1d6zv31j5wrx3znhzcscck2o24</a></li>
<li><a href="https://github.com/apache/airflow/commit/6850b5c777fa515e110ad1daa85242209a8ec6c0">https://github.com/apache/airflow/commit/6850b5c777fa515e110ad1daa85242209a8ec6c0</a></li>
<li><a href="https://github.com/advisories/GHSA-8q28-pw9g-w82c">https://github.com/advisories/GHSA-8q28-pw9g-w82c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8q28-pw9g-w82c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-28T09:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gitpython] Blind local file inclusion]]></title>
        <id>https://github.com/advisories/GHSA-cwvm-v4w8-q58c</id>
        <link href="https://github.com/advisories/GHSA-cwvm-v4w8-q58c"/>
        <updated>2023-08-30T20:09:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In order to resolve some git references, GitPython reads files from the <code>.git</code> directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the <code>.git</code> directory. This allows an attacker to make GitPython read any file from the system.</p>
<h3 id="details">Details</h3>
<p>This vulnerability is present in</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175</a></p>
<p>That code joins the base directory with a user given string without checking if the final path is located outside the base directory.</p>
<p>I was able to exploit it from three places, but there may be more code paths that lead to it:</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605</a></p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620</a></p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353</a></p>
<h3 id="poc">PoC</h3>
<p>Running GitPython within any repo should work, here is an example with the GitPython repo.</p>
<pre><code class="language-python">import git

r = git.Repo(".")

# This will make GitPython read the README.md file from the root of the repo
r.commit("../README.md")
r.tree("../README.md")
r.index.diff("../README.md")

# Reading /etc/random
# WARNING: this will probably halt your system, run with caution
# r.commit("../../../../../../../../../dev/random")
</code></pre>
<h3 id="impact">Impact</h3>
<p>I wasn't able to show the contents of the files (that's why "blind" local file inclusion), depending on how GitPython is being used, this can be used by an attacker for something <em>inoffensive</em> as checking if a file exits, or cause a DoS by making GitPython read a big/infinite file (like <code>/dev/random</code> on Linux systems).</p>
<h3 id="possible-solutions">Possible solutions</h3>
<p>A solution would be to check that the final path isn't located outside the <code>repodir</code> path (maybe even after resolving symlinks). Maybe there could be other checks in place to make sure that the reference names are valid.</p>
<hr>
<blockquote>
<p>[!NOTE]
This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>
</blockquote>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c</a></li>
<li><a href="https://github.com/advisories/GHSA-cwvm-v4w8-q58c">https://github.com/advisories/GHSA-cwvm-v4w8-q58c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwvm-v4w8-q58c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-30T20:09:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[borgbackup] Archive spoofing vulnerability in borgbackup]]></title>
        <id>https://github.com/advisories/GHSA-8fjr-hghr-4m99</id>
        <link href="https://github.com/advisories/GHSA-8fjr-hghr-4m99"/>
        <updated>2023-08-30T20:09:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw in the cryptographic authentication scheme in borgbackup allowed an attacker to fake archives and potentially indirectly cause backup data loss in the repository.</p>
<p>The attack requires an attacker to be able to</p>
<ol>
<li>insert files (with no additional headers) into backups</li>
<li>gain write access to the repository</li>
</ol>
<p>This vulnerability does not disclose plaintext to the attacker, nor does it affect the authenticity of existing archives.</p>
<p>Creating plausible fake archives may be feasible for empty or small archives, but is unlikely for large archives.</p>
<p>Affected are all borgbackup releases prior to 1.2.5.</p>
<p>Note: CVSS scoring model seemed to badly fit for this case, thus I manually set score to "moderate".</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in borgbackup 1.2.5.</p>
<p>Additionally to installing the fixed code, users must follow the upgrade procedure as documented in the change log.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Data loss after being attacked can be avoided by reviewing the archives (timestamp and contents valid and as expected) after any "borg check --repair" and before "borg prune".</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/borgbackup/borg/blob/1.2.5-cvedocs/docs/changes.rst#pre-125-archives-spoofing-vulnerability-cve-2023-36811">https://github.com/borgbackup/borg/blob/1.2.5-cvedocs/docs/changes.rst#pre-125-archives-spoofing-vulnerability-cve-2023-36811</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/borgbackup/borg/security/advisories/GHSA-8fjr-hghr-4m99">https://github.com/borgbackup/borg/security/advisories/GHSA-8fjr-hghr-4m99</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36811">https://nvd.nist.gov/vuln/detail/CVE-2023-36811</a></li>
<li><a href="https://github.com/borgbackup/borg/commit/3eb070191da10c2d3f7bc6484cf3d51c3045f884">https://github.com/borgbackup/borg/commit/3eb070191da10c2d3f7bc6484cf3d51c3045f884</a></li>
<li><a href="https://github.com/borgbackup/borg/blob/1.2.5-cvedocs/docs/changes.rst#pre-125-archives-spoofing-vulnerability-cve-2023-36811">https://github.com/borgbackup/borg/blob/1.2.5-cvedocs/docs/changes.rst#pre-125-archives-spoofing-vulnerability-cve-2023-36811</a></li>
<li><a href="https://github.com/advisories/GHSA-8fjr-hghr-4m99">https://github.com/advisories/GHSA-8fjr-hghr-4m99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8fjr-hghr-4m99</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-30T20:09:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nltk] NLTK Vulnerable To Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-mr7p-25v2-35wr</id>
        <link href="https://github.com/advisories/GHSA-mr7p-25v2-35wr"/>
        <updated>2023-08-30T19:56:35.000Z</updated>
        <content type="html"><![CDATA[<p>NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a <code>../</code> (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14751">https://nvd.nist.gov/vuln/detail/CVE-2019-14751</a></li>
<li><a href="https://github.com/mssalvatore/CVE-2019-14751_PoC">https://github.com/mssalvatore/CVE-2019-14751_PoC</a></li>
<li><a href="https://github.com/nltk/nltk/blob/3.4.5/ChangeLog">https://github.com/nltk/nltk/blob/3.4.5/ChangeLog</a></li>
<li><a href="https://github.com/nltk/nltk/commit/f59d7ed8df2e0e957f7f247fe218032abdbe9a10">https://github.com/nltk/nltk/commit/f59d7ed8df2e0e957f7f247fe218032abdbe9a10</a></li>
<li><a href="https://salvatoresecurity.com/zip-slip-in-nltk-cve-2019-14751/">https://salvatoresecurity.com/zip-slip-in-nltk-cve-2019-14751/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QI4IJGLZQ5S7C5LNRNROHAO2P526XE3D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QI4IJGLZQ5S7C5LNRNROHAO2P526XE3D/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZGZSSEJH7RHH3RBUEVWWYT75QU67J7SE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZGZSSEJH7RHH3RBUEVWWYT75QU67J7SE/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00054.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00054.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00001.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-mr7p-25v2-35wr">https://github.com/advisories/GHSA-mr7p-25v2-35wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mr7p-25v2-35wr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-08-23T21:53:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] langchain SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7q94-qpjr-xpgm</id>
        <link href="https://github.com/advisories/GHSA-7q94-qpjr-xpgm"/>
        <updated>2023-08-30T00:54:17.000Z</updated>
        <content type="html"><![CDATA[<p>SQL injection vulnerability in langchain allows a remote attacker to obtain sensitive information via the SQLDatabaseChain component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36189">https://nvd.nist.gov/vuln/detail/CVE-2023-36189</a></li>
<li><a href="https://github.com/hwchase17/langchain/issues/5923">https://github.com/hwchase17/langchain/issues/5923</a></li>
<li><a href="https://github.com/hwchase17/langchain/pull/6051">https://github.com/hwchase17/langchain/pull/6051</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-110.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-110.yaml</a></li>
<li><a href="https://github.com/langchain-ai/langchain/issues/5923">https://github.com/langchain-ai/langchain/issues/5923</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/8425">https://github.com/langchain-ai/langchain/pull/8425</a></li>
<li><a href="https://github.com/advisories/GHSA-7q94-qpjr-xpgm">https://github.com/advisories/GHSA-7q94-qpjr-xpgm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7q94-qpjr-xpgm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-06T15:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter-server]  Open Redirect Vulnerability in jupyter-server]]></title>
        <id>https://github.com/advisories/GHSA-r726-vmfq-j9j3</id>
        <link href="https://github.com/advisories/GHSA-r726-vmfq-j9j3"/>
        <updated>2023-08-29T23:34:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Open Redirect Vulnerability. Maliciously crafted login links to known Jupyter Servers  can cause successful login or an already logged-in session to be redirected to arbitrary sites, which should be restricted to Jupyter Server-served URLs.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Jupyter Server 2.7.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>Vulnerability reported by user davwwwx via the <a href="https://app.intigriti.com/programs/jupyter/jupyter/detail">bug bounty program</a> <a href="https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en">sponsored by the European Commission</a> and hosted on the <a href="https://www.intigriti.com/">Intigriti platform</a>.</p>
<ul>
<li><a href="https://blog.xss.am/2023/08/CVE-2023-39968-jupyter-token-leak/">https://blog.xss.am/2023/08/CVE-2023-39968-jupyter-token-leak/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-r726-vmfq-j9j3">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-r726-vmfq-j9j3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39968">https://nvd.nist.gov/vuln/detail/CVE-2023-39968</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/290362593b2ffb23c59f8114d76f77875de4b925">https://github.com/jupyter-server/jupyter_server/commit/290362593b2ffb23c59f8114d76f77875de4b925</a></li>
<li><a href="https://github.com/advisories/GHSA-r726-vmfq-j9j3">https://github.com/advisories/GHSA-r726-vmfq-j9j3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r726-vmfq-j9j3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-29T23:34:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter-server] cross-site inclusion (XSSI) of files in jupyter-server]]></title>
        <id>https://github.com/advisories/GHSA-64x5-55rw-9974</id>
        <link href="https://github.com/advisories/GHSA-64x5-55rw-9974"/>
        <updated>2023-08-29T23:34:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Improper cross-site credential checks on <code>/files/</code> URLs could allow exposure of certain file contents, or accessing files when opening untrusted files via  "Open image in new tab".</p>
<h3 id="patches">Patches</h3>
<p>Jupyter Server 2.7.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use lower performance <code>--ContentsManager.files_handler_class=jupyter_server.files.handlers.FilesHandler</code>, which implements the correct checks.</p>
<h3 id="references">References</h3>
<p>Upstream patch for CVE-2019-9644 was not applied completely, leaving part of the vulnerability open.</p>
<p>Vulnerability reported by Tim Coen via the <a href="https://app.intigriti.com/programs/jupyter/jupyter/detail">bug bounty program</a> <a href="https://commission.europa.eu/news/european-commissions-open-source-programme-office-starts-bug-bounties-2022-01-19_en">sponsored by the European Commission</a> and hosted on the <a href="https://www.intigriti.com/">Intigriti platform</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-64x5-55rw-9974">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-64x5-55rw-9974</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40170">https://nvd.nist.gov/vuln/detail/CVE-2023-40170</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/87a4927272819f0b1cae1afa4c8c86ee2da002fd">https://github.com/jupyter-server/jupyter_server/commit/87a4927272819f0b1cae1afa4c8c86ee2da002fd</a></li>
<li><a href="https://github.com/advisories/GHSA-64x5-55rw-9974">https://github.com/advisories/GHSA-64x5-55rw-9974</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64x5-55rw-9974</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-29T23:34:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gitpython] GitPython untrusted search path on Windows systems leading to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-wfm5-v35h-vwf4</id>
        <link href="https://github.com/advisories/GHSA-wfm5-v35h-vwf4"/>
        <updated>2023-08-29T23:33:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment (see big warning in <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor">https://docs.python.org/3/library/subprocess.html#popen-constructor</a>). GitPython defaults to use the <code>git</code> command, if a user runs GitPython from a repo has a <code>git.exe</code> or <code>git</code> executable, that program will be run instead of the one in the user's <code>PATH</code>.</p>
<h3 id="details">Details</h3>
<p>This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo.</p>
<p>The execution of the <code>git</code> command happens in</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277</a> </p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996</a></p>
<p>And there are other commands executed that should probably be aware of this problem.</p>
<h3 id="poc">PoC</h3>
<p>On a Windows system, create a <code>git.exe</code> or <code>git</code> executable in any directory, and import or run GitPython from that directory</p>
<pre><code>python -c "import git"
</code></pre>
<p>The git executable from the current directory will be run.</p>
<h3 id="impact">Impact</h3>
<p>An attacker can trick a user to download a repository with a malicious <code>git</code> executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands.</p>
<h3 id="possible-solutions">Possible solutions</h3>
<ul>
<li>Default to an absolute path for the git program on Windows, like <code>C:\\Program Files\\Git\\cmd\\git.EXE</code> (default git path installation).</li>
<li>Require users to set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> environment variable on Windows systems.</li>
<li>Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> env var to an absolute path.</li>
<li>Resolve the executable manually by only looking into the <code>PATH</code> environment variable (suggested by @Byron)</li>
</ul>
<hr>
<blockquote>
<p>[!NOTE]
This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>
</blockquote>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40590">https://nvd.nist.gov/vuln/detail/CVE-2023-40590</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html#popen-constructor">https://docs.python.org/3/library/subprocess.html#popen-constructor</a></li>
<li><a href="https://github.com/advisories/GHSA-wfm5-v35h-vwf4">https://github.com/advisories/GHSA-wfm5-v35h-vwf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wfm5-v35h-vwf4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-29T23:33:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Allows Arbitrary URL Generation]]></title>
        <id>https://github.com/advisories/GHSA-2655-q453-22f9</id>
        <link href="https://github.com/advisories/GHSA-2655-q453-22f9"/>
        <updated>2023-08-29T22:33:18.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>django.http.HttpRequest.get_host</code> function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-4520">https://nvd.nist.gov/vuln/detail/CVE-2012-4520</a></li>
<li><a href="https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3">https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3</a></li>
<li><a href="https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e">https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e</a></li>
<li><a href="https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071">https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=865164">https://bugzilla.redhat.com/show_bug.cgi?id=865164</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/oct/17/security/">https://www.djangoproject.com/weblog/2012/oct/17/security/</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=691145">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=691145</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090666.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090666.html</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090904.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090904.html</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090970.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090970.html</a></li>
<li><a href="https://ubuntu.com/usn/usn-1632-1">https://ubuntu.com/usn/usn-1632-1</a></li>
<li><a href="https://ubuntu.com/usn/usn-1757-1">https://ubuntu.com/usn/usn-1757-1</a></li>
<li><a href="https://web.archive.org/web/20140417023920/http://securitytracker.com/id?1027708">https://web.archive.org/web/20140417023920/http://securitytracker.com/id?1027708</a></li>
<li><a href="https://www.debian.org/security/2013/dsa-2634">https://www.debian.org/security/2013/dsa-2634</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/10/30/4">https://www.openwall.com/lists/oss-security/2012/10/30/4</a></li>
<li><a href="https://github.com/advisories/GHSA-2655-q453-22f9">https://github.com/advisories/GHSA-2655-q453-22f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2655-q453-22f9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:10:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Allows Arbitrary URL Generation]]></title>
        <id>https://github.com/advisories/GHSA-2655-q453-22f9</id>
        <link href="https://github.com/advisories/GHSA-2655-q453-22f9"/>
        <updated>2023-08-29T22:33:18.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>django.http.HttpRequest.get_host</code> function in Django 1.3.x before 1.3.4 and 1.4.x before 1.4.2 allows remote attackers to generate and display arbitrary URLs via crafted username and password Host header values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-4520">https://nvd.nist.gov/vuln/detail/CVE-2012-4520</a></li>
<li><a href="https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3">https://github.com/django/django/commit/92d3430f12171f16f566c9050c40feefb830a4a3</a></li>
<li><a href="https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e">https://github.com/django/django/commit/9305c0e12d43c4df999c3301a1f0c742264a657e</a></li>
<li><a href="https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071">https://github.com/django/django/commit/b45c377f8f488955e0c7069cad3f3dd21910b071</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=865164">https://bugzilla.redhat.com/show_bug.cgi?id=865164</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/oct/17/security/">https://www.djangoproject.com/weblog/2012/oct/17/security/</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=691145">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=691145</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090666.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090666.html</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090904.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090904.html</a></li>
<li><a href="https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090970.html">https://lists.fedoraproject.org/pipermail/package-announce/2012-October/090970.html</a></li>
<li><a href="https://ubuntu.com/usn/usn-1632-1">https://ubuntu.com/usn/usn-1632-1</a></li>
<li><a href="https://ubuntu.com/usn/usn-1757-1">https://ubuntu.com/usn/usn-1757-1</a></li>
<li><a href="https://web.archive.org/web/20140417023920/http://securitytracker.com/id?1027708">https://web.archive.org/web/20140417023920/http://securitytracker.com/id?1027708</a></li>
<li><a href="https://www.debian.org/security/2013/dsa-2634">https://www.debian.org/security/2013/dsa-2634</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/10/30/4">https://www.openwall.com/lists/oss-security/2012/10/30/4</a></li>
<li><a href="https://github.com/advisories/GHSA-2655-q453-22f9">https://github.com/advisories/GHSA-2655-q453-22f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2655-q453-22f9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:10:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Image Field Vulnerable to Image Decompression Bombs]]></title>
        <id>https://github.com/advisories/GHSA-59w8-4wm2-4xw8</id>
        <link href="https://github.com/advisories/GHSA-59w8-4wm2-4xw8"/>
        <updated>2023-08-29T22:31:04.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>django.forms.ImageField</code> class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3443">https://nvd.nist.gov/vuln/detail/CVE-2012-3443</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/">https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/</a></li>
<li><a href="https://github.com/django/django/commit/9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155">https://github.com/django/django/commit/9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155</a></li>
<li><a href="https://github.com/django/django/commit/da33d67181b53fe6cc737ac1220153814a1509f6">https://github.com/django/django/commit/da33d67181b53fe6cc737ac1220153814a1509f6</a></li>
<li><a href="https://www.debian.org/security/2012/dsa-2529">https://www.debian.org/security/2012/dsa-2529</a></li>
<li><a href="https://www.mandriva.com/security/advisories?name=MDVSA-2012:143">https://www.mandriva.com/security/advisories?name=MDVSA-2012:143</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/07/31/1">https://www.openwall.com/lists/oss-security/2012/07/31/1</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/07/31/2">https://www.openwall.com/lists/oss-security/2012/07/31/2</a></li>
<li><a href="https://www.ubuntu.com/usn/USN-1560-1">https://www.ubuntu.com/usn/USN-1560-1</a></li>
<li><a href="https://github.com/advisories/GHSA-59w8-4wm2-4xw8">https://github.com/advisories/GHSA-59w8-4wm2-4xw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59w8-4wm2-4xw8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:12:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Image Field Vulnerable to Image Decompression Bombs]]></title>
        <id>https://github.com/advisories/GHSA-59w8-4wm2-4xw8</id>
        <link href="https://github.com/advisories/GHSA-59w8-4wm2-4xw8"/>
        <updated>2023-08-29T22:31:04.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>django.forms.ImageField</code> class in the form system in Django before 1.3.2 and 1.4.x before 1.4.1 completely decompresses image data during image validation, which allows remote attackers to cause a denial of service (memory consumption) by uploading an image file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3443">https://nvd.nist.gov/vuln/detail/CVE-2012-3443</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/">https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/</a></li>
<li><a href="https://github.com/django/django/commit/9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155">https://github.com/django/django/commit/9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155</a></li>
<li><a href="https://github.com/django/django/commit/da33d67181b53fe6cc737ac1220153814a1509f6">https://github.com/django/django/commit/da33d67181b53fe6cc737ac1220153814a1509f6</a></li>
<li><a href="https://www.debian.org/security/2012/dsa-2529">https://www.debian.org/security/2012/dsa-2529</a></li>
<li><a href="https://www.mandriva.com/security/advisories?name=MDVSA-2012:143">https://www.mandriva.com/security/advisories?name=MDVSA-2012:143</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/07/31/1">https://www.openwall.com/lists/oss-security/2012/07/31/1</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2012/07/31/2">https://www.openwall.com/lists/oss-security/2012/07/31/2</a></li>
<li><a href="https://www.ubuntu.com/usn/USN-1560-1">https://www.ubuntu.com/usn/USN-1560-1</a></li>
<li><a href="https://github.com/advisories/GHSA-59w8-4wm2-4xw8">https://github.com/advisories/GHSA-59w8-4wm2-4xw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59w8-4wm2-4xw8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:12:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Allows Redirect via Data URL]]></title>
        <id>https://github.com/advisories/GHSA-78vx-ggch-wghm</id>
        <link href="https://github.com/advisories/GHSA-78vx-ggch-wghm"/>
        <updated>2023-08-29T21:47:29.000Z</updated>
        <content type="html"><![CDATA[<p>The (1) <code>django.http.HttpResponseRedirect</code> and (2) <code>django.http.HttpResponsePermanentRedirect</code> classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a <code>data:</code> URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3442">https://nvd.nist.gov/vuln/detail/CVE-2012-3442</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/">https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/</a></li>
<li><a href="http://www.debian.org/security/2012/dsa-2529">http://www.debian.org/security/2012/dsa-2529</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/07/31/1">http://www.openwall.com/lists/oss-security/2012/07/31/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/07/31/2">http://www.openwall.com/lists/oss-security/2012/07/31/2</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-1560-1">http://www.ubuntu.com/usn/USN-1560-1</a></li>
<li><a href="https://github.com/django/django/commit/4dea4883e6c50d75f215a6b9bcbd95273f57c72d">https://github.com/django/django/commit/4dea4883e6c50d75f215a6b9bcbd95273f57c72d</a></li>
<li><a href="https://github.com/django/django/commit/e34685034b60be1112160e76091e5aee60149fa1">https://github.com/django/django/commit/e34685034b60be1112160e76091e5aee60149fa1</a></li>
<li><a href="https://github.com/advisories/GHSA-78vx-ggch-wghm">https://github.com/advisories/GHSA-78vx-ggch-wghm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78vx-ggch-wghm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:12:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Allows Redirect via Data URL]]></title>
        <id>https://github.com/advisories/GHSA-78vx-ggch-wghm</id>
        <link href="https://github.com/advisories/GHSA-78vx-ggch-wghm"/>
        <updated>2023-08-29T21:47:29.000Z</updated>
        <content type="html"><![CDATA[<p>The (1) <code>django.http.HttpResponseRedirect</code> and (2) <code>django.http.HttpResponsePermanentRedirect</code> classes in Django before 1.3.2 and 1.4.x before 1.4.1 do not validate the scheme of a redirect target, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via a <code>data:</code> URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-3442">https://nvd.nist.gov/vuln/detail/CVE-2012-3442</a></li>
<li><a href="https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/">https://www.djangoproject.com/weblog/2012/jul/30/security-releases-issued/</a></li>
<li><a href="http://www.debian.org/security/2012/dsa-2529">http://www.debian.org/security/2012/dsa-2529</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/07/31/1">http://www.openwall.com/lists/oss-security/2012/07/31/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/07/31/2">http://www.openwall.com/lists/oss-security/2012/07/31/2</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-1560-1">http://www.ubuntu.com/usn/USN-1560-1</a></li>
<li><a href="https://github.com/django/django/commit/4dea4883e6c50d75f215a6b9bcbd95273f57c72d">https://github.com/django/django/commit/4dea4883e6c50d75f215a6b9bcbd95273f57c72d</a></li>
<li><a href="https://github.com/django/django/commit/e34685034b60be1112160e76091e5aee60149fa1">https://github.com/django/django/commit/e34685034b60be1112160e76091e5aee60149fa1</a></li>
<li><a href="https://github.com/advisories/GHSA-78vx-ggch-wghm">https://github.com/advisories/GHSA-78vx-ggch-wghm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78vx-ggch-wghm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:12:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keyring] Python Keyring does not securely initialize encryption cipher]]></title>
        <id>https://github.com/advisories/GHSA-p3h7-3c45-qj4v</id>
        <link href="https://github.com/advisories/GHSA-p3h7-3c45-qj4v"/>
        <updated>2023-08-29T21:40:07.000Z</updated>
        <content type="html"><![CDATA[<p>Python Keyring 0.9.1 does not securely initialize the cipher when encrypting passwords for <code>CryptedFileKeyring</code> files, which makes it easier for local users to obtain passwords via a brute-force attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-4571">https://nvd.nist.gov/vuln/detail/CVE-2012-4571</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/python-keyring/+bug/1004845">https://bugs.launchpad.net/ubuntu/+source/python-keyring/+bug/1004845</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/10/31/8">http://www.openwall.com/lists/oss-security/2012/10/31/8</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-1634-1">http://www.ubuntu.com/usn/USN-1634-1</a></li>
<li><a href="https://github.com/jaraco/keyring/commit/162f2ed0e39e16d561732b9fad8af6cd2341d7bd">https://github.com/jaraco/keyring/commit/162f2ed0e39e16d561732b9fad8af6cd2341d7bd</a></li>
<li><a href="https://github.com/advisories/GHSA-p3h7-3c45-qj4v">https://github.com/advisories/GHSA-p3h7-3c45-qj4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p3h7-3c45-qj4v</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T05:18:21.000Z</published>
    </entry>
</feed>