<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-06-11T12:01:53.071Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[lunary] lunary-ai/lunary Access Control Vulnerability in Prompt Variation Management]]></title>
        <id>https://github.com/advisories/GHSA-3mwc-2cj7-gx8c</id>
        <link href="https://github.com/advisories/GHSA-3mwc-2cj7-gx8c"/>
        <updated>2024-06-10T18:36:37.000Z</updated>
        <content type="html"><![CDATA[<p>In lunary-ai/lunary version 1.2.13, an insufficient granularity of access control vulnerability allows users to create, update, get, and delete prompt variations for datasets not owned by their organization. This issue arises due to the application not properly validating the ownership of dataset prompts and their variations against the organization or project of the requesting user. As a result, unauthorized modifications to dataset prompts can occur, leading to altered or removed dataset prompts without proper authorization. This vulnerability impacts the integrity and consistency of dataset information, potentially affecting the results of experiments.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5389">https://nvd.nist.gov/vuln/detail/CVE-2024-5389</a></li>
<li><a href="https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2">https://huntr.com/bounties/3ca5309f-5615-4d5b-8043-968af220d7a2</a></li>
<li><a href="https://github.com/advisories/GHSA-3mwc-2cj7-gx8c">https://github.com/advisories/GHSA-3mwc-2cj7-gx8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mwc-2cj7-gx8c</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-10T00:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] zenml-io/zenml does not expire the session after password reset]]></title>
        <id>https://github.com/advisories/GHSA-99hm-86h7-gr3g</id>
        <link href="https://github.com/advisories/GHSA-99hm-86h7-gr3g"/>
        <updated>2024-06-10T18:36:32.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in zenml-io/zenml version 0.56.3 allows attackers to reuse old session credentials or session IDs due to insufficient session expiration. Specifically, the session does not expire after a password change, enabling an attacker to maintain access to a compromised account without the victim's ability to revoke this access. This issue was observed in a self-hosted ZenML deployment via Docker, where after changing the password from one browser, the session remained active and usable in another browser without requiring re-authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4680">https://nvd.nist.gov/vuln/detail/CVE-2024-4680</a></li>
<li><a href="https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a">https://huntr.com/bounties/c88f6bd2-490d-4930-98dd-03651b20230a</a></li>
<li><a href="https://github.com/advisories/GHSA-99hm-86h7-gr3g">https://github.com/advisories/GHSA-99hm-86h7-gr3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99hm-86h7-gr3g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-08T21:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[authlib] Authlib has algorithm confusion with asymmetric public keys]]></title>
        <id>https://github.com/advisories/GHSA-5357-c2jx-v7qh</id>
        <link href="https://github.com/advisories/GHSA-5357-c2jx-v7qh"/>
        <updated>2024-06-10T15:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>lepture Authlib before 1.3.1 has algorithm confusion with asymmetric public keys. Unless an algorithm is specified in a jwt.decode call, HMAC verification is allowed with any asymmetric public key. (This is similar to CVE-2022-29217 and CVE-2024-33663.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37568">https://nvd.nist.gov/vuln/detail/CVE-2024-37568</a></li>
<li><a href="https://github.com/lepture/authlib/issues/654">https://github.com/lepture/authlib/issues/654</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/authlib/PYSEC-2024-52.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-5357-c2jx-v7qh">https://github.com/advisories/GHSA-5357-c2jx-v7qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5357-c2jx-v7qh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-09T21:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ebookmeta] ebookmeta XML External Entity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hx54-pf28-7xch</id>
        <link href="https://github.com/advisories/GHSA-hx54-pf28-7xch"/>
        <updated>2024-06-07T21:54:47.000Z</updated>
        <content type="html"><![CDATA[<p>An XML External Entity (XXE) vulnerability in the <code>ebookmeta.get_metadata</code> function via lxml dependency allows attackers to access sensitive information or cause a Denial of Service (DoS) via crafted XML input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37388">https://nvd.nist.gov/vuln/detail/CVE-2024-37388</a></li>
<li><a href="https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335">https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335</a></li>
<li><a href="https://github.com/advisories/GHSA-hx54-pf28-7xch">https://github.com/advisories/GHSA-hx54-pf28-7xch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hx54-pf28-7xch</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-07T21:31:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ebookmeta] ebookmeta XML External Entity vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-whf4-fpj8-pgg8</id>
        <link href="https://github.com/advisories/GHSA-whf4-fpj8-pgg8"/>
        <updated>2024-06-07T21:54:41.000Z</updated>
        <content type="html"><![CDATA[<p>An XML External Entity (XXE) vulnerability in the <code>ebookmeta.get_metadata</code> function of ebookmeta before v1.2.8 allows attackers to access sensitive information or cause a Denial of Service (DoS) via crafted XML input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-36827">https://nvd.nist.gov/vuln/detail/CVE-2024-36827</a></li>
<li><a href="https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335">https://github.com/dnkorpushov/ebookmeta/issues/16#issue-2317712335</a></li>
<li><a href="https://github.com/advisories/GHSA-whf4-fpj8-pgg8">https://github.com/advisories/GHSA-whf4-fpj8-pgg8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whf4-fpj8-pgg8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-07T21:31:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[h2o] Arbitrary system path lookup in h20]]></title>
        <id>https://github.com/advisories/GHSA-x234-r5fg-x52m</id>
        <link href="https://github.com/advisories/GHSA-x234-r5fg-x52m"/>
        <updated>2024-06-06T22:57:23.000Z</updated>
        <content type="html"><![CDATA[<p>In h2oai/h2o-3 version 3.40.0.4, an exposure of sensitive information vulnerability exists due to an arbitrary system path lookup feature. This vulnerability allows any remote user to view full paths in the entire file system where h2o-3 is hosted. Specifically, the issue resides in the Typeahead API call, which when requested with a typeahead lookup of '/', exposes the root filesystem including directories such as /home, /usr, /bin, among others. This vulnerability could allow attackers to explore the entire filesystem, and when combined with a Local File Inclusion (LFI) vulnerability, could make exploitation of the server trivial.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5550">https://nvd.nist.gov/vuln/detail/CVE-2024-5550</a></li>
<li><a href="https://huntr.com/bounties/e76372c2-39be-4984-a7c8-7048a75a25dc">https://huntr.com/bounties/e76372c2-39be-4984-a7c8-7048a75a25dc</a></li>
<li><a href="https://github.com/advisories/GHSA-x234-r5fg-x52m">https://github.com/advisories/GHSA-x234-r5fg-x52m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x234-r5fg-x52m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[litellm] Arbitrary file deletion in litellm]]></title>
        <id>https://github.com/advisories/GHSA-3xr8-qfvj-9p9j</id>
        <link href="https://github.com/advisories/GHSA-3xr8-qfvj-9p9j"/>
        <updated>2024-06-06T22:55:47.000Z</updated>
        <content type="html"><![CDATA[<p>BerriAI's litellm, in its latest version, is vulnerable to arbitrary file deletion due to improper input validation on the <code>/audio/transcriptions</code> endpoint. An attacker can exploit this vulnerability by sending a specially crafted request that includes a file path to the server, which then deletes the specified file without proper authorization or validation. This vulnerability is present in the code where <code>os.remove(file.filename)</code> is used to delete a file, allowing any user to delete critical files on the server such as SSH keys, SQLite databases, or configuration files. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4888">https://nvd.nist.gov/vuln/detail/CVE-2024-4888</a></li>
<li><a href="https://huntr.com/bounties/48461d89-cf13-4ad3-a43e-0d37da08fc6c">https://huntr.com/bounties/48461d89-cf13-4ad3-a43e-0d37da08fc6c</a></li>
<li><a href="https://github.com/BerriAI/litellm/pull/3193">https://github.com/BerriAI/litellm/pull/3193</a></li>
<li><a href="https://github.com/advisories/GHSA-3xr8-qfvj-9p9j">https://github.com/advisories/GHSA-3xr8-qfvj-9p9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xr8-qfvj-9p9j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[litellm] SQL injection in litellm]]></title>
        <id>https://github.com/advisories/GHSA-h6m6-jj8v-94jj</id>
        <link href="https://github.com/advisories/GHSA-h6m6-jj8v-94jj"/>
        <updated>2024-06-06T22:54:22.000Z</updated>
        <content type="html"><![CDATA[<p>An SQL Injection vulnerability exists in the berriai/litellm repository, specifically within the <code>/global/spend/logs</code> endpoint. The vulnerability arises due to improper neutralization of special elements used in an SQL command. The affected code constructs an SQL query by concatenating an unvalidated <code>api_key</code> parameter directly into the query, making it susceptible to SQL Injection if the <code>api_key</code> contains malicious data. This issue affects the latest version of the repository. Successful exploitation of this vulnerability could lead to unauthorized access, data manipulation, exposure of confidential information, and denial of service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5225">https://nvd.nist.gov/vuln/detail/CVE-2024-5225</a></li>
<li><a href="https://huntr.com/bounties/491e4884-0306-4cd4-8fe2-9a19de33bf5c">https://huntr.com/bounties/491e4884-0306-4cd4-8fe2-9a19de33bf5c</a></li>
<li><a href="https://github.com/BerriAI/litellm/pull/3940">https://github.com/BerriAI/litellm/pull/3940</a></li>
<li><a href="https://github.com/BerriAI/litellm/commit/f75c15d6cd535aa78014378ad532de1df6be2f56">https://github.com/BerriAI/litellm/commit/f75c15d6cd535aa78014378ad532de1df6be2f56</a></li>
<li><a href="https://github.com/advisories/GHSA-h6m6-jj8v-94jj">https://github.com/advisories/GHSA-h6m6-jj8v-94jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6m6-jj8v-94jj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[litellm] SQL injection in litellm]]></title>
        <id>https://github.com/advisories/GHSA-8j42-pcfm-3467</id>
        <link href="https://github.com/advisories/GHSA-8j42-pcfm-3467"/>
        <updated>2024-06-06T22:53:19.000Z</updated>
        <content type="html"><![CDATA[<p>A blind SQL injection vulnerability exists in the berriai/litellm application, specifically within the '/team/update' process. The vulnerability arises due to the improper handling of the 'user_id' parameter in the raw SQL query used for deleting users. An attacker can exploit this vulnerability by injecting malicious SQL commands through the 'user_id' parameter, leading to potential unauthorized access to sensitive information such as API keys, user information, and tokens stored in the database. The affected version is 1.27.14.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-4890">https://nvd.nist.gov/vuln/detail/CVE-2024-4890</a></li>
<li><a href="https://huntr.com/bounties/a4f6d357-5b44-4e00-9cac-f1cc351211d2">https://huntr.com/bounties/a4f6d357-5b44-4e00-9cac-f1cc351211d2</a></li>
<li><a href="https://github.com/BerriAI/litellm/pull/2954">https://github.com/BerriAI/litellm/pull/2954</a></li>
<li><a href="https://github.com/advisories/GHSA-8j42-pcfm-3467">https://github.com/advisories/GHSA-8j42-pcfm-3467</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j42-pcfm-3467</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dtale] Authentication bypass in dtale]]></title>
        <id>https://github.com/advisories/GHSA-v9q6-fm48-rx74</id>
        <link href="https://github.com/advisories/GHSA-v9q6-fm48-rx74"/>
        <updated>2024-06-06T22:47:25.000Z</updated>
        <content type="html"><![CDATA[<p>man-group/dtale version 3.10.0 is vulnerable to an authentication bypass and remote code execution (RCE) due to improper input validation. The vulnerability arises from a hardcoded <code>SECRET_KEY</code> in the flask configuration, allowing attackers to forge a session cookie if authentication is enabled. Additionally, the application fails to properly restrict custom filter queries, enabling attackers to execute arbitrary code on the server by bypassing the restriction on the <code>/update-settings</code> endpoint, even when <code>enable_custom_filters</code> is not enabled. This vulnerability allows attackers to bypass authentication mechanisms and execute remote code on the server.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3408">https://nvd.nist.gov/vuln/detail/CVE-2024-3408</a></li>
<li><a href="https://huntr.com/bounties/57a06666-ff85-4577-af19-f3dfb7b02f91">https://huntr.com/bounties/57a06666-ff85-4577-af19-f3dfb7b02f91</a></li>
<li><a href="https://github.com/advisories/GHSA-v9q6-fm48-rx74">https://github.com/advisories/GHSA-v9q6-fm48-rx74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v9q6-fm48-rx74</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-06T21:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Server-Side Request Forgery in langchain]]></title>
        <id>https://github.com/advisories/GHSA-q25c-c977-4cmh</id>
        <link href="https://github.com/advisories/GHSA-q25c-c977-4cmh"/>
        <updated>2024-06-06T22:41:07.000Z</updated>
        <content type="html"><![CDATA[<p>A Server-Side Request Forgery (SSRF) vulnerability exists in the Web Research Retriever component of langchain-ai/langchain version 0.1.5. The vulnerability arises because the Web Research Retriever does not restrict requests to remote internet addresses, allowing it to reach local addresses. This flaw enables attackers to execute port scans, access local services, and in some scenarios, read instance metadata from cloud environments. The vulnerability is particularly concerning as it can be exploited to abuse the Web Explorer server as a proxy for web attacks on third parties and interact with servers in the local network, including reading their response data. This could potentially lead to arbitrary code execution, depending on the nature of the local services. The vulnerability is limited to GET requests, as POST requests are not possible, but the impact on confidentiality, integrity, and availability is significant due to the potential for stolen credentials and state-changing interactions with internal APIs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3095">https://nvd.nist.gov/vuln/detail/CVE-2024-3095</a></li>
<li><a href="https://huntr.com/bounties/e62d4895-2901-405b-9559-38276b6a5273">https://huntr.com/bounties/e62d4895-2901-405b-9559-38276b6a5273</a></li>
<li><a href="https://github.com/advisories/GHSA-q25c-c977-4cmh">https://github.com/advisories/GHSA-q25c-c977-4cmh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q25c-c977-4cmh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Undefined Behavior in mlflow]]></title>
        <id>https://github.com/advisories/GHSA-8f8q-q2j7-7j2m</id>
        <link href="https://github.com/advisories/GHSA-8f8q-q2j7-7j2m"/>
        <updated>2024-06-06T22:38:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3099">https://nvd.nist.gov/vuln/detail/CVE-2024-3099</a></li>
<li><a href="https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a">https://huntr.com/bounties/8d96374a-ce8d-480e-9cb0-0a7e5165c24a</a></li>
<li><a href="https://github.com/advisories/GHSA-8f8q-q2j7-7j2m">https://github.com/advisories/GHSA-8f8q-q2j7-7j2m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8f8q-q2j7-7j2m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Local File Inclusion in mlflow]]></title>
        <id>https://github.com/advisories/GHSA-j46q-5pxx-8vmw</id>
        <link href="https://github.com/advisories/GHSA-j46q-5pxx-8vmw"/>
        <updated>2024-06-06T22:37:39.000Z</updated>
        <content type="html"><![CDATA[<p>A Local File Inclusion (LFI) vulnerability was identified in mlflow/mlflow, specifically in version 2.9.2, which was fixed in version 2.11.3. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../'. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system, including sensitive files like '/etc/passwd'. The vulnerability is a bypass to a previous patch that only addressed similar manipulation within the URI's query string, highlighting the need for comprehensive validation of all parts of a URI to prevent LFI attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2928">https://nvd.nist.gov/vuln/detail/CVE-2024-2928</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/96f0b573a73d8eedd6735a2ce26e08859527be07">https://github.com/mlflow/mlflow/commit/96f0b573a73d8eedd6735a2ce26e08859527be07</a></li>
<li><a href="https://huntr.com/bounties/19bf02d7-6393-4a95-b9d0-d6d4d2d8c298">https://huntr.com/bounties/19bf02d7-6393-4a95-b9d0-d6d4d2d8c298</a></li>
<li><a href="https://github.com/advisories/GHSA-j46q-5pxx-8vmw">https://github.com/advisories/GHSA-j46q-5pxx-8vmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j46q-5pxx-8vmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Clickjacking in zenml]]></title>
        <id>https://github.com/advisories/GHSA-mq73-g4qr-fgcq</id>
        <link href="https://github.com/advisories/GHSA-mq73-g4qr-fgcq"/>
        <updated>2024-06-06T22:30:11.000Z</updated>
        <content type="html"><![CDATA[<p>A clickjacking vulnerability exists in zenml-io/zenml versions up to and including 0.55.5 due to the application's failure to set appropriate X-Frame-Options or Content-Security-Policy HTTP headers. This vulnerability allows an attacker to embed the application UI within an iframe on a malicious page, potentially leading to unauthorized actions by tricking users into interacting with the interface under the attacker's control. The issue was addressed in version 0.56.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2383">https://nvd.nist.gov/vuln/detail/CVE-2024-2383</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/f863fde1269bc355951f8cfc826c0244d88ad5e9">https://github.com/zenml-io/zenml/commit/f863fde1269bc355951f8cfc826c0244d88ad5e9</a></li>
<li><a href="https://huntr.com/bounties/22d26f5a-c0ae-4344-aa7d-08ff5ada3963">https://huntr.com/bounties/22d26f5a-c0ae-4344-aa7d-08ff5ada3963</a></li>
<li><a href="https://github.com/advisories/GHSA-mq73-g4qr-fgcq">https://github.com/advisories/GHSA-mq73-g4qr-fgcq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq73-g4qr-fgcq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Improper authentication in zenml]]></title>
        <id>https://github.com/advisories/GHSA-j527-v579-m98h</id>
        <link href="https://github.com/advisories/GHSA-j527-v579-m98h"/>
        <updated>2024-06-06T22:29:19.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in zenml-io/zenml versions up to and including 0.55.4. Due to improper authentication mechanisms, an attacker with access to an active user session can change the account password without needing to know the current password. This vulnerability allows for unauthorized account takeover by bypassing the standard password change verification process. The issue was fixed in version 0.56.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2213">https://nvd.nist.gov/vuln/detail/CVE-2024-2213</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/58cb3d987372c91eb605853c35325701733337c2">https://github.com/zenml-io/zenml/commit/58cb3d987372c91eb605853c35325701733337c2</a></li>
<li><a href="https://huntr.com/bounties/8f5534ac-fd08-4b8b-8c2e-35949aa36e48">https://huntr.com/bounties/8f5534ac-fd08-4b8b-8c2e-35949aa36e48</a></li>
<li><a href="https://github.com/advisories/GHSA-j527-v579-m98h">https://github.com/advisories/GHSA-j527-v579-m98h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j527-v579-m98h</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Cross site scripting in zenml]]></title>
        <id>https://github.com/advisories/GHSA-vwgf-7f9h-h499</id>
        <link href="https://github.com/advisories/GHSA-vwgf-7f9h-h499"/>
        <updated>2024-06-06T22:28:36.000Z</updated>
        <content type="html"><![CDATA[<p>A stored Cross-Site Scripting (XSS) vulnerability was identified in the zenml-io/zenml repository, specifically within the 'logo_url' field. By injecting malicious payloads into this field, an attacker could send harmful messages to other users, potentially compromising their accounts. The vulnerability affects version 0.55.3 and was fixed in version 0.56.2. The impact of exploiting this vulnerability could lead to user account compromise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2171">https://nvd.nist.gov/vuln/detail/CVE-2024-2171</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e">https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e</a></li>
<li><a href="https://huntr.com/bounties/cee06a28-7e3b-460b-b504-69add838ebe8">https://huntr.com/bounties/cee06a28-7e3b-460b-b504-69add838ebe8</a></li>
<li><a href="https://github.com/advisories/GHSA-vwgf-7f9h-h499">https://github.com/advisories/GHSA-vwgf-7f9h-h499</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwgf-7f9h-h499</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Race condition in zenml]]></title>
        <id>https://github.com/advisories/GHSA-c546-8jmq-hprj</id>
        <link href="https://github.com/advisories/GHSA-c546-8jmq-hprj"/>
        <updated>2024-06-06T22:22:20.000Z</updated>
        <content type="html"><![CDATA[<p>A race condition vulnerability exists in zenml-io/zenml versions up to and including 0.55.3, which allows for the creation of multiple users with the same username when requests are sent in parallel. This issue was fixed in version 0.55.5. The vulnerability arises due to insufficient handling of concurrent user creation requests, leading to data inconsistencies and potential authentication problems. Specifically, concurrent processes may overwrite or corrupt user data, complicating user identification and posing security risks. This issue is particularly concerning for APIs that rely on usernames as input parameters, such as PUT /api/v1/users/test_race, where it could lead to further complications.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2032">https://nvd.nist.gov/vuln/detail/CVE-2024-2032</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/afcaf741ef9114c9b32f722f101b97de3d8d147b">https://github.com/zenml-io/zenml/commit/afcaf741ef9114c9b32f722f101b97de3d8d147b</a></li>
<li><a href="https://huntr.com/bounties/6199cd5d-611f-4ea9-96c5-52a952ba5a56">https://huntr.com/bounties/6199cd5d-611f-4ea9-96c5-52a952ba5a56</a></li>
<li><a href="https://github.com/advisories/GHSA-c546-8jmq-hprj">https://github.com/advisories/GHSA-c546-8jmq-hprj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c546-8jmq-hprj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Improper authorization in zenml]]></title>
        <id>https://github.com/advisories/GHSA-9x88-4jg8-4vf7</id>
        <link href="https://github.com/advisories/GHSA-9x88-4jg8-4vf7"/>
        <updated>2024-06-06T22:21:22.000Z</updated>
        <content type="html"><![CDATA[<p>An improper authorization vulnerability exists in the zenml-io/zenml repository, specifically within the API PUT /api/v1/users/id endpoint. This vulnerability allows any authenticated user to modify the information of other users, including changing the <code>active</code> status of user accounts to false, effectively deactivating them. This issue affects version 0.55.3 and was fixed in version 0.56.2. The impact of this vulnerability is significant as it allows for the deactivation of admin accounts, potentially disrupting the functionality and security of the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2035">https://nvd.nist.gov/vuln/detail/CVE-2024-2035</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/b95f083efffa56831cd41d8ed536aeb0b6038fa3">https://github.com/zenml-io/zenml/commit/b95f083efffa56831cd41d8ed536aeb0b6038fa3</a></li>
<li><a href="https://huntr.com/bounties/1cfc6493-082e-4229-9f2f-496801a6557c">https://huntr.com/bounties/1cfc6493-082e-4229-9f2f-496801a6557c</a></li>
<li><a href="https://github.com/advisories/GHSA-9x88-4jg8-4vf7">https://github.com/advisories/GHSA-9x88-4jg8-4vf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x88-4jg8-4vf7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Denial of service in langchain]]></title>
        <id>https://github.com/advisories/GHSA-3hjh-jh2h-vrg6</id>
        <link href="https://github.com/advisories/GHSA-3hjh-jh2h-vrg6"/>
        <updated>2024-06-06T22:21:15.000Z</updated>
        <content type="html"><![CDATA[<p>A Denial-of-Service (DoS) vulnerability exists in the <code>SitemapLoader</code> class of the <code>langchain-ai/langchain</code> repository, affecting all versions. The <code>parse_sitemap</code> method, responsible for parsing sitemaps and extracting URLs, lacks a mechanism to prevent infinite recursion when a sitemap URL refers to the current sitemap itself. This oversight allows for the possibility of an infinite loop, leading to a crash by exceeding the maximum recursion depth in Python. This vulnerability can be exploited to occupy server socket/port resources and crash the Python process, impacting the availability of services relying on this functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2965">https://nvd.nist.gov/vuln/detail/CVE-2024-2965</a></li>
<li><a href="https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae">https://huntr.com/bounties/90b0776d-9fa6-4841-aac4-09fde5918cae</a></li>
<li><a href="https://github.com/advisories/GHSA-3hjh-jh2h-vrg6">https://github.com/advisories/GHSA-3hjh-jh2h-vrg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3hjh-jh2h-vrg6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Remote code execution in mlflow]]></title>
        <id>https://github.com/advisories/GHSA-5q6c-ffvg-xcm9</id>
        <link href="https://github.com/advisories/GHSA-5q6c-ffvg-xcm9"/>
        <updated>2024-06-06T22:15:32.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in mlflow/mlflow version 8.2.1 allows for remote code execution due to improper neutralization of special elements used in an OS command ('Command Injection') within the <code>mlflow.data.http_dataset_source.py</code> module. Specifically, when loading a dataset from a source URL with an HTTP scheme, the filename extracted from the <code>Content-Disposition</code> header or the URL path is used to generate the final file path without proper sanitization. This flaw enables an attacker to control the file path fully by utilizing path traversal or absolute path techniques, such as '../../tmp/poc.txt' or '/tmp/poc.txt', leading to arbitrary file write. Exploiting this vulnerability could allow a malicious user to execute commands on the vulnerable machine, potentially gaining access to data and model information. The issue is fixed in version 2.9.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0520">https://nvd.nist.gov/vuln/detail/CVE-2024-0520</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/400c226953b4568f4361bc0a0c223511652c2b9d">https://github.com/mlflow/mlflow/commit/400c226953b4568f4361bc0a0c223511652c2b9d</a></li>
<li><a href="https://huntr.com/bounties/93e470d7-b6f0-409b-af63-49d3e2a26dbc">https://huntr.com/bounties/93e470d7-b6f0-409b-af63-49d3e2a26dbc</a></li>
<li><a href="https://github.com/advisories/GHSA-5q6c-ffvg-xcm9">https://github.com/advisories/GHSA-5q6c-ffvg-xcm9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5q6c-ffvg-xcm9</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-06T21:30:35.000Z</published>
    </entry>
</feed>