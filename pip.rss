<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-12-13T15:01:21.004Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[sentry] Sentry vulnerable to invite code reuse via cookie manipulation]]></title>
        <id>https://github.com/advisories/GHSA-jv85-mqxj-3f9j</id>
        <link href="https://github.com/advisories/GHSA-jv85-mqxj-3f9j"/>
        <updated>2022-12-13T00:37:40.000Z</updated>
        <content type="html"><![CDATA[<p>With a known valid invite link (i.e. not already accepted or expired) an unauthenticated attacker can manipulate the cookie to allow the same invite link to be reused on multiple accounts when joining an organization.</p>
<h3 id="impact">Impact</h3>
<p>An attacker with a valid invite link can create multiple users and join the organization from which the invite link was generated.</p>
<h3 id="patches">Patches</h3>
<p>This issue was patched in version 22.11.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Sentry SaaS customers do not need to take action.</p>
<p>Self-hosted Sentry installs can disable the invite functionality until they are ready to deploy the patched version by editing their <code>sentry.conf.py</code> file (usually located at <code>~/.sentry/</code>).</p>
<ol>
<li><p>Add the following line into <code>sentry.conf.py</code>:</p>
<pre><code class="language-python"> SENTRY_FEATURES["organizations:invite-members"] = False
</code></pre>
</li>
<li><p>Restart the Sentry web service.</p>
<pre><code>docker compose restart web
</code></pre>
</li>
</ol>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://help.sentry.io/account/security/cve-2022-23485-faqs/">Visit our FAQs on this CVE</a></li>
<li>Open an issue in <a href="http://github.com/getsentry/sentry">getsentry/sentry</a></li>
<li>Email us at security[@]sentry.io</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/getsentry/sentry/security/advisories/GHSA-jv85-mqxj-3f9j">https://github.com/getsentry/sentry/security/advisories/GHSA-jv85-mqxj-3f9j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23485">https://nvd.nist.gov/vuln/detail/CVE-2022-23485</a></li>
<li><a href="https://github.com/advisories/GHSA-jv85-mqxj-3f9j">https://github.com/advisories/GHSA-jv85-mqxj-3f9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jv85-mqxj-3f9j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-12T21:27:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[paddlepaddle] PaddlePaddle Out-of-bounds Read vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2hvc-hwg3-hpvw</id>
        <link href="https://github.com/advisories/GHSA-2hvc-hwg3-hpvw"/>
        <updated>2022-12-09T20:08:17.000Z</updated>
        <content type="html"><![CDATA[<p>Out-of-bounds read in <code>gather_tree</code> in PaddlePaddle before 2.4. A <a href="https://github.com/PaddlePaddle/Paddle/commit/6712e262fc6734873cc6d5ca4f45973339a88697">patch</a> is available in the <code>release/2.4</code> branch.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46741">https://nvd.nist.gov/vuln/detail/CVE-2022-46741</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-001.md">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-001.md</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/pull/47051">https://github.com/PaddlePaddle/Paddle/pull/47051</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/6712e262fc6734873cc6d5ca4f45973339a88697">https://github.com/PaddlePaddle/Paddle/commit/6712e262fc6734873cc6d5ca4f45973339a88697</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/ee6e6d511f9f33fc862c11722701fb5abb99ed94">https://github.com/PaddlePaddle/Paddle/commit/ee6e6d511f9f33fc862c11722701fb5abb99ed94</a></li>
<li><a href="https://github.com/advisories/GHSA-2hvc-hwg3-hpvw">https://github.com/advisories/GHSA-2hvc-hwg3-hpvw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2hvc-hwg3-hpvw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-07T09:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[certifi] Certifi removing TrustCor root certificate]]></title>
        <id>https://github.com/advisories/GHSA-43fp-rhv2-5gv8</id>
        <link href="https://github.com/advisories/GHSA-43fp-rhv2-5gv8"/>
        <updated>2022-12-08T14:37:36.000Z</updated>
        <content type="html"><![CDATA[<p>Certifi 2022.12.07 removes root certificates from "TrustCor" from the root store. These are in the process of being removed from Mozilla's trust store.</p>
<p>TrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found <a href="https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8">https://github.com/certifi/python-certifi/security/advisories/GHSA-43fp-rhv2-5gv8</a></li>
<li><a href="https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8">https://github.com/certifi/python-certifi/commit/9e9e840925d7b8e76c76fdac1fab7e6e88c1c3b8</a></li>
<li><a href="https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ">https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ</a></li>
<li><a href="https://github.com/advisories/GHSA-43fp-rhv2-5gv8">https://github.com/advisories/GHSA-43fp-rhv2-5gv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43fp-rhv2-5gv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-07T23:05:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PaddlePaddle] PaddlePaddle vulnerable to Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-gcjf-29m9-888q</id>
        <link href="https://github.com/advisories/GHSA-gcjf-29m9-888q"/>
        <updated>2022-12-09T15:35:13.000Z</updated>
        <content type="html"><![CDATA[<p>Code injection in <code>paddle.audio.functional.get_window</code> in PaddlePaddle 2.4.0-rc0 allows arbitrary code execution. A <a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">patch</a> is available on the <code>develop</code> branch of the repository and anticipated to be part of a 2.4 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46742">https://nvd.nist.gov/vuln/detail/CVE-2022-46742</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/pull/47386">https://github.com/PaddlePaddle/Paddle/pull/47386</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>
<li><a href="https://github.com/advisories/GHSA-gcjf-29m9-888q">https://github.com/advisories/GHSA-gcjf-29m9-888q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcjf-29m9-888q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-07T09:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[py7zr] py7zr directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</id>
        <link href="https://github.com/advisories/GHSA-m8xw-9x5x-6vh3"/>
        <updated>2022-12-09T15:55:24.000Z</updated>
        <content type="html"><![CDATA[<p>A directory traversal vulnerability in the SevenZipFile.extractall() function of the python library py7zr v0.20.0 and earlier allows attackers to write arbitrary files via extracting a crafted 7z file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44900">https://nvd.nist.gov/vuln/detail/CVE-2022-44900</a></li>
<li><a href="https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406">https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406</a></li>
<li><a href="http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html">http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html</a></li>
<li><a href="https://lessonsec.com/cve/cve-2022-44900/">https://lessonsec.com/cve/cve-2022-44900/</a></li>
<li><a href="https://github.com/advisories/GHSA-m8xw-9x5x-6vh3">https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-06T21:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Passeo] Passeo uses insecure random number generator]]></title>
        <id>https://github.com/advisories/GHSA-mhhf-vgwh-fw9h</id>
        <link href="https://github.com/advisories/GHSA-mhhf-vgwh-fw9h"/>
        <updated>2022-12-08T09:44:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Everyone below v1.0.5 is impacted by this flaw, of confidentiality being at risk due to the password(s) being easily able to be guessed with Passeo's use of the <code>random</code> library. It is recommended to change any passwords made with Passeo before v1.0.5 and upgrade to v1.0.5, and v1.0.5 patches this with the <code>secrets</code> library.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No current workaround available than updating to v1.0.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ArjunSharda/Passeo/security/advisories/GHSA-mhhf-vgwh-fw9h">https://github.com/ArjunSharda/Passeo/security/advisories/GHSA-mhhf-vgwh-fw9h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23472">https://nvd.nist.gov/vuln/detail/CVE-2022-23472</a></li>
<li><a href="https://github.com/ArjunSharda/Passeo/commit/8caa798b6bc4647dca59b2376204b6dc6176361a">https://github.com/ArjunSharda/Passeo/commit/8caa798b6bc4647dca59b2376204b6dc6176361a</a></li>
<li><a href="https://peps.python.org/pep-0506/">https://peps.python.org/pep-0506/</a></li>
<li><a href="https://github.com/advisories/GHSA-mhhf-vgwh-fw9h">https://github.com/advisories/GHSA-mhhf-vgwh-fw9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhhf-vgwh-fw9h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-06T21:13:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[GitPython] GitPython vulnerable to Remote Code Execution due to improper user input validation]]></title>
        <id>https://github.com/advisories/GHSA-hcpj-qp55-gfph</id>
        <link href="https://github.com/advisories/GHSA-hcpj-qp55-gfph"/>
        <updated>2022-12-07T19:19:24.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package gitpython are vulnerable to Remote Code Execution (RCE) due to improper user input validation, which makes it possible to inject a maliciously crafted remote URL into the clone command. Exploiting this vulnerability is possible because the library makes external calls to git without sufficient sanitization of input arguments.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24439">https://nvd.nist.gov/vuln/detail/CVE-2022-24439</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/blob/bec61576ae75803bc4e60d8de7a629c194313d1c/git/repo/base.py%23L1249">https://github.com/gitpython-developers/GitPython/blob/bec61576ae75803bc4e60d8de7a629c194313d1c/git/repo/base.py%23L1249</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858">https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858</a></li>
<li><a href="https://github.com/advisories/GHSA-hcpj-qp55-gfph">https://github.com/advisories/GHSA-hcpj-qp55-gfph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcpj-qp55-gfph</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-06T06:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[guarddog] GuardDog vulnerable to arbitrary file write when scanning a specially-crafted remote PyPI package]]></title>
        <id>https://github.com/advisories/GHSA-78m5-jpmf-ch7v</id>
        <link href="https://github.com/advisories/GHSA-78m5-jpmf-ch7v"/>
        <updated>2022-12-05T23:34:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Unsafe extracting using <code>shutil.unpack_archive()</code> from a remotely retrieved tarball may lead to writing the extracted file to an unintended destination.</p>
<h3 id="details">Details</h3>
<p>Extracting files using <code>shutil.unpack_archive()</code> from a potentially malicious tarball without validating that the destination file path is within the intended destination directory can cause files outside the destination directory to be overwritten.  </p>
<p>The vulnerable code snippet is between <a href="https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158">L153..158</a>. </p>
<pre><code class="language-python">response = requests.get(url, stream=True)

with open(zippath, "wb") as f:
      f.write(response.raw.read())

shutil.unpack_archive(zippath, unzippedpath)
</code></pre>
<p>It seems that a remotely retrieved tarball which could be with the extension <code>.tar.gz</code> happens to be unpacked using <code>shutil.unpack_archive()</code> with no destination verification/limitation of the extracted files.</p>
<h3 id="poc">PoC</h3>
<p>The PoC provided showcases the risk of extracting the non-harmless text file <code>sim4n6.txt</code> to a parent location rather than the current folder. </p>
<pre><code class="language-bash">&gt; tar --list -f archive.tar
tar: Removing leading `../../../' from member names
../../../sim4n6.txt

&gt; python3 
Python 3.10.6 (main, Nov  2 2022, 18:53:38) [GCC 11.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import shutil
&gt;&gt;&gt; shutil.unpack_archive("archive.tar")
&gt;&gt;&gt; exit()

&gt; file ../../../sim4n6.txt
../../../sim4n6.txt: ASCII text
</code></pre>
<h3 id="a-potential-attack-scenario">A Potential Attack Scenario</h3>
<ul>
<li>An attacker may craft a malicious tarball with a filename path, such as <code>../../../../../../../../etc/passwd</code>, and then serve the archive remotely, thus, providing a possibility to overwrite the system files.</li>
</ul>
<h3 id="mitigation">Mitigation</h3>
<p>Potential mitigation could be to:</p>
<ul>
<li>Use a safer module, like <code>zipfile</code>.</li>
<li>Validate the location of the extracted files and discard those with malicious paths such as a relative path <code>..</code> or absolute ones.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/DataDog/guarddog/security/advisories/GHSA-78m5-jpmf-ch7v">https://github.com/DataDog/guarddog/security/advisories/GHSA-78m5-jpmf-ch7v</a></li>
<li><a href="https://github.com/DataDog/guarddog/commit/37c7d0767ba28f4df46117d478f97652594c491c">https://github.com/DataDog/guarddog/commit/37c7d0767ba28f4df46117d478f97652594c491c</a></li>
<li><a href="https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158">https://github.com/DataDog/guarddog/blob/a1d064ceb09d39bb28deb6972bc0a278756ea91f/guarddog/scanners/package_scanner.py#L153..158</a></li>
<li><a href="https://github.com/advisories/GHSA-78m5-jpmf-ch7v">https://github.com/advisories/GHSA-78m5-jpmf-ch7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-78m5-jpmf-ch7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-05T23:34:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[torch] PyTorch vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-47fc-vmwq-366v</id>
        <link href="https://github.com/advisories/GHSA-47fc-vmwq-366v"/>
        <updated>2022-12-02T22:28:42.000Z</updated>
        <content type="html"><![CDATA[<p>In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely. The fix for this issue is planned to be released in version 1.13.1, there is a release checker in issue #89855.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45907">https://nvd.nist.gov/vuln/detail/CVE-2022-45907</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/88868">https://github.com/pytorch/pytorch/issues/88868</a></li>
<li><a href="https://github.com/pytorch/pytorch/commit/767f6aa49fe20a2766b9843d01e3b7f7793df6a3">https://github.com/pytorch/pytorch/commit/767f6aa49fe20a2766b9843d01e3b7f7793df6a3</a></li>
<li><a href="https://github.com/pytorch/pytorch/issues/89855">https://github.com/pytorch/pytorch/issues/89855</a></li>
<li><a href="https://github.com/pytorch/pytorch/pull/89189">https://github.com/pytorch/pytorch/pull/89189</a></li>
<li><a href="https://github.com/advisories/GHSA-47fc-vmwq-366v">https://github.com/advisories/GHSA-47fc-vmwq-366v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47fc-vmwq-366v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-26T03:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xblock-drag-and-drop-v2] XBlock vulnerable to Cross-Site Scripting (XSS) ]]></title>
        <id>https://github.com/advisories/GHSA-qv6c-367r-3w6q</id>
        <link href="https://github.com/advisories/GHSA-qv6c-367r-3w6q"/>
        <updated>2022-12-02T22:26:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>XSS Vulnerability in multiple XBlock Fields.  Any platform that has deployed the XBlock will be impacted.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492">https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492</a></p>
<p>The fix is compatible with all Open edX releases newer than Lilac.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864">https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/openedx/xblock-drag-and-drop-v2/security/advisories/GHSA-qv6c-367r-3w6q">https://github.com/openedx/xblock-drag-and-drop-v2/security/advisories/GHSA-qv6c-367r-3w6q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46147">https://nvd.nist.gov/vuln/detail/CVE-2022-46147</a></li>
<li><a href="https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864">https://github.com/openedx/xblock-drag-and-drop-v2/pull/295#issuecomment-1277693864</a></li>
<li><a href="https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492">https://github.com/openedx/xblock-drag-and-drop-v2/commit/53c4482f9bb6d8c7ccdf5253bd82c84a222b2492</a></li>
<li><a href="https://github.com/openedx/xblock-drag-and-drop-v2/commit/68887d1b4a44325d2de7573d450e41129ba98b1a">https://github.com/openedx/xblock-drag-and-drop-v2/commit/68887d1b4a44325d2de7573d450e41129ba98b1a</a></li>
<li><a href="https://github.com/openedx/xblock-drag-and-drop-v2/releases/tag/v3.0.0">https://github.com/openedx/xblock-drag-and-drop-v2/releases/tag/v3.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-qv6c-367r-3w6q">https://github.com/advisories/GHSA-qv6c-367r-3w6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qv6c-367r-3w6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-02T22:26:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[guarddog] GuardDog vulnerable to arbitrary file write when scanning a specially-crafted PyPI package]]></title>
        <id>https://github.com/advisories/GHSA-rp2v-v467-q9vq</id>
        <link href="https://github.com/advisories/GHSA-rp2v-v467-q9vq"/>
        <updated>2022-12-02T22:25:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed.</p>
<p>This is due to a path traversal vulnerability when extracting the <code>.tar.gz</code> file of the package being scanned, which exists by design in the <code>tarfile.TarFile.extractall</code> function. See also <a href="https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall">https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall</a></p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to GuardDog v0.1.5 or more recent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://semgrep.dev/r?q=trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal">https://semgrep.dev/r?q=trailofbits.python.tarfile-extractall-traversal.tarfile-extractall-traversal</a></li>
<li><a href="https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html">https://www.trellix.com/en-us/about/newsroom/stories/research/tarfile-exploiting-the-world.html</a></li>
<li><a href="https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall">https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractall</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/DataDog/guarddog/security/advisories/GHSA-rp2v-v467-q9vq">https://github.com/DataDog/guarddog/security/advisories/GHSA-rp2v-v467-q9vq</a></li>
<li><a href="https://github.com/advisories/GHSA-rp2v-v467-q9vq">https://github.com/advisories/GHSA-rp2v-v467-q9vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rp2v-v467-q9vq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-02T22:25:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Pillow] Out of bounds read in Pillow]]></title>
        <id>https://github.com/advisories/GHSA-mvg9-xffr-p774</id>
        <link href="https://github.com/advisories/GHSA-mvg9-xffr-p774"/>
        <updated>2022-12-01T21:57:25.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-25291">https://nvd.nist.gov/vuln/detail/CVE-2021-25291</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/cbdce6c5d054fccaf4af34b47f212355c64ace7a">https://github.com/python-pillow/Pillow/commit/cbdce6c5d054fccaf4af34b47f212355c64ace7a</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202107-33">https://security.gentoo.org/glsa/202107-33</a></li>
<li><a href="https://github.com/advisories/GHSA-mvg9-xffr-p774">https://github.com/advisories/GHSA-mvg9-xffr-p774</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mvg9-xffr-p774</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-03-29T16:35:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[paddlepaddle] PaddlePaddle vulnerable to code injection via winstr]]></title>
        <id>https://github.com/advisories/GHSA-83g7-8fch-p37m</id>
        <link href="https://github.com/advisories/GHSA-83g7-8fch-p37m"/>
        <updated>2022-12-01T22:10:00.000Z</updated>
        <content type="html"><![CDATA[<p>In PaddlePaddle before 2.4, paddle.audio.functional.get_window is vulnerable to code injection because it calls eval on a user-supplied winstr. This may lead to arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45908">https://nvd.nist.gov/vuln/detail/CVE-2022-45908</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>
<li><a href="https://github.com/advisories/GHSA-83g7-8fch-p37m">https://github.com/advisories/GHSA-83g7-8fch-p37m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-83g7-8fch-p37m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-26T03:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wger] wger vulnerable to brute force attempts]]></title>
        <id>https://github.com/advisories/GHSA-gr58-76rp-mmg4</id>
        <link href="https://github.com/advisories/GHSA-gr58-76rp-mmg4"/>
        <updated>2022-11-30T19:32:53.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Restriction of Excessive Authentication Attempts in GitHub repository wger-project/wger prior to 2.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2650">https://nvd.nist.gov/vuln/detail/CVE-2022-2650</a></li>
<li><a href="https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c">https://github.com/wger-project/wger/commit/5e3167e3a2dc95836fa2607fe201524c031a2c4c</a></li>
<li><a href="https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b">https://huntr.dev/bounties/f0d85efa-4e78-4b1d-848f-edea115af64b</a></li>
<li><a href="https://github.com/advisories/GHSA-gr58-76rp-mmg4">https://github.com/advisories/GHSA-gr58-76rp-mmg4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gr58-76rp-mmg4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-24T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rdiffweb] Rdiffweb vulnerable to Missing Authentication for Critical Function]]></title>
        <id>https://github.com/advisories/GHSA-4wph-9vrm-6v3w</id>
        <link href="https://github.com/advisories/GHSA-4wph-9vrm-6v3w"/>
        <updated>2022-11-29T05:05:21.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Authentication for Critical Function in GitHub repository ikus060/rdiffweb prior to 2.5.0a6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4018">https://nvd.nist.gov/vuln/detail/CVE-2022-4018</a></li>
<li><a href="https://github.com/ikus060/rdiffweb/commit/f2a32f2a9f3fb8be1a9432ac3d81d3aacdb13095">https://github.com/ikus060/rdiffweb/commit/f2a32f2a9f3fb8be1a9432ac3d81d3aacdb13095</a></li>
<li><a href="https://huntr.dev/bounties/5340c2f6-0252-40f6-8929-cca5d64958a5">https://huntr.dev/bounties/5340c2f6-0252-40f6-8929-cca5d64958a5</a></li>
<li><a href="https://github.com/advisories/GHSA-4wph-9vrm-6v3w">https://github.com/advisories/GHSA-4wph-9vrm-6v3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4wph-9vrm-6v3w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-16T19:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bitlyshortener] Package discontinued because Bitly lowered the free quota]]></title>
        <id>https://github.com/advisories/GHSA-ggrh-grj3-vfvw</id>
        <link href="https://github.com/advisories/GHSA-ggrh-grj3-vfvw"/>
        <updated>2022-11-28T23:00:24.000Z</updated>
        <content type="html"><![CDATA[<p>On November 17, 2022, an email was received from Bitly advising that the new link quota per free token is lowered to 50 per month (from its previous value of 1000 per month). As per the email, this change is effective on December 8, 2022.</p>
<p>The new quota is so low as to not be useful. For this reason, the maintenance of this package is being discontinued, although the package should continue to function with the limited new quota.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/impredicative/bitlyshortener/security/advisories/GHSA-ggrh-grj3-vfvw">https://github.com/impredicative/bitlyshortener/security/advisories/GHSA-ggrh-grj3-vfvw</a></li>
<li><a href="https://github.com/advisories/GHSA-ggrh-grj3-vfvw">https://github.com/advisories/GHSA-ggrh-grj3-vfvw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggrh-grj3-vfvw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T23:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mpxj] Temporary File Information Disclosure vulnerability in MPXJ]]></title>
        <id>https://github.com/advisories/GHSA-jf2p-4gqj-849g</id>
        <link href="https://github.com/advisories/GHSA-jf2p-4gqj-849g"/>
        <updated>2022-12-07T17:25:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory</p>
<ul>
<li>Open an issue in <a href="https://github.com/joniles/mpxj">https://github.com/joniles/mpxj</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41954">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>
<li><a href="https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd">https://github.com/joniles/mpxj/commit/287ad0234213c52b0638565e14bd9cf3ed44cedd</a></li>
<li><a href="https://github.com/advisories/GHSA-jf2p-4gqj-849g">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf2p-4gqj-849g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cleo] cleo is vulnerable to Regular Expression Denial of Service (ReDoS)]]></title>
        <id>https://github.com/advisories/GHSA-2p9h-ccw7-33gf</id>
        <link href="https://github.com/advisories/GHSA-2p9h-ccw7-33gf"/>
        <updated>2022-11-28T21:13:01.000Z</updated>
        <content type="html"><![CDATA[<p>An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the cleo PyPI package, when an attacker is able to supply arbitrary input to the Table.set_rows method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42966">https://nvd.nist.gov/vuln/detail/CVE-2022-42966</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186">https://research.jfrog.com/vulnerabilities/cleo-redos-xray-257186</a></li>
<li><a href="https://github.com/python-poetry/cleo/pull/285">https://github.com/python-poetry/cleo/pull/285</a></li>
<li><a href="https://github.com/advisories/GHSA-2p9h-ccw7-33gf">https://github.com/advisories/GHSA-2p9h-ccw7-33gf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2p9h-ccw7-33gf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T12:01:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] OS Command Injection in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-45r6-j3cc-6mxx</id>
        <link href="https://github.com/advisories/GHSA-45r6-j3cc-6mxx"/>
        <updated>2022-11-28T21:06:22.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Spark Provider, Apache Airflow allows an attacker to read arbtrary files in the task execution context, without write access to DAG files. This issue affects Spark Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Spark Provider is installed (Spark Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Spark Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version that has lower version of the Spark Provider installed).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40954">https://nvd.nist.gov/vuln/detail/CVE-2022-40954</a></li>
<li><a href="https://github.com/apache/airflow/pull/27646">https://github.com/apache/airflow/pull/27646</a></li>
<li><a href="https://lists.apache.org/thread/0tmdlnmjs5t4gsx5fy73tb6zd3jztq45">https://lists.apache.org/thread/0tmdlnmjs5t4gsx5fy73tb6zd3jztq45</a></li>
<li><a href="https://github.com/advisories/GHSA-45r6-j3cc-6mxx">https://github.com/advisories/GHSA-45r6-j3cc-6mxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45r6-j3cc-6mxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-22T12:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] OS Command Injection in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-rmf2-pwfq-h75j</id>
        <link href="https://github.com/advisories/GHSA-rmf2-pwfq-h75j"/>
        <updated>2022-11-29T17:55:59.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pig Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Pig Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Pig Provider is installed (Pig Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pig Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40189">https://nvd.nist.gov/vuln/detail/CVE-2022-40189</a></li>
<li><a href="https://github.com/apache/airflow/pull/27644">https://github.com/apache/airflow/pull/27644</a></li>
<li><a href="https://lists.apache.org/thread/yxnfzfw2w9pj5s785k3rlyly4y44sd15">https://lists.apache.org/thread/yxnfzfw2w9pj5s785k3rlyly4y44sd15</a></li>
<li><a href="https://github.com/advisories/GHSA-rmf2-pwfq-h75j">https://github.com/advisories/GHSA-rmf2-pwfq-h75j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmf2-pwfq-h75j</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T12:30:22.000Z</published>
    </entry>
</feed>