<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-10-13T04:01:28.859Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[Pillow] Out-of-bounds Read in Pillow]]></title>
        <id>https://github.com/advisories/GHSA-xrcv-f9gm-v42c</id>
        <link href="https://github.com/advisories/GHSA-xrcv-f9gm-v42c"/>
        <updated>2024-10-11T21:27:30.000Z</updated>
        <content type="html"><![CDATA[<p>path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22816">https://nvd.nist.gov/vuln/detail/CVE-2022-22816</a></li>
<li><a href="https://github.com/python-pillow/Pillow/blob/c5d9223a8b5e9295d15b5a9b1ef1dae44c8499f3/src/path.c#L331">https://github.com/python-pillow/Pillow/blob/c5d9223a8b5e9295d15b5a9b1ef1dae44c8499f3/src/path.c#L331</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html">https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5053">https://www.debian.org/security/2022/dsa-5053</a></li>
<li><a href="https://security.gentoo.org/glsa/202211-10">https://security.gentoo.org/glsa/202211-10</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/5920">https://github.com/python-pillow/Pillow/pull/5920</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/5543e4e2d409cd9e409bc64cdc77be0af007a31f">https://github.com/python-pillow/Pillow/commit/5543e4e2d409cd9e409bc64cdc77be0af007a31f</a></li>
<li><a href="https://github.com/advisories/GHSA-xrcv-f9gm-v42c">https://github.com/advisories/GHSA-xrcv-f9gm-v42c</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-9.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-9.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xrcv-f9gm-v42c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-12T20:07:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pipreqs] pipreqs vulnerable to Dependency Confusion]]></title>
        <id>https://github.com/advisories/GHSA-v4f4-23wc-99mh</id>
        <link href="https://github.com/advisories/GHSA-v4f4-23wc-99mh"/>
        <updated>2024-10-11T21:25:17.000Z</updated>
        <content type="html"><![CDATA[<p>A dependency confusion in pipreqs v0.3.0 to v0.4.11 allows attackers to execute arbitrary code via uploading a crafted PyPI package to the chosen repository server.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31543">https://nvd.nist.gov/vuln/detail/CVE-2023-31543</a></li>
<li><a href="https://github.com/bndr/pipreqs/pull/364">https://github.com/bndr/pipreqs/pull/364</a></li>
<li><a href="https://gist.github.com/adeadfed/ccc834440af354a5638f889bee34bafe">https://gist.github.com/adeadfed/ccc834440af354a5638f889bee34bafe</a></li>
<li><a href="https://github.com/bndr/pipreqs/commit/3f5964fcb90ec6eb6df46d78e651a1b73538d0ba">https://github.com/bndr/pipreqs/commit/3f5964fcb90ec6eb6df46d78e651a1b73538d0ba</a></li>
<li><a href="https://github.com/bndr/pipreqs/blob/master/pipreqs/pipreqs.py#L447-L449">https://github.com/bndr/pipreqs/blob/master/pipreqs/pipreqs.py#L447-L449</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pipreqs/PYSEC-2023-99.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pipreqs/PYSEC-2023-99.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-v4f4-23wc-99mh">https://github.com/advisories/GHSA-v4f4-23wc-99mh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v4f4-23wc-99mh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-30T21:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Pillow] Improper Initialization in Pillow]]></title>
        <id>https://github.com/advisories/GHSA-pw3c-h7wp-cvhx</id>
        <link href="https://github.com/advisories/GHSA-pw3c-h7wp-cvhx"/>
        <updated>2024-10-11T21:09:06.000Z</updated>
        <content type="html"><![CDATA[<p>Pillow is the friendly PIL (Python Imaging Library) fork. <code>path_getbbox</code> in <code>path.c</code> in Pillow before 9.0.0 improperly initializes <code>ImagePath.Path</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-22815">https://nvd.nist.gov/vuln/detail/CVE-2022-22815</a></li>
<li><a href="https://github.com/python-pillow/Pillow/blob/c5d9223a8b5e9295d15b5a9b1ef1dae44c8499f3/src/path.c#L331">https://github.com/python-pillow/Pillow/blob/c5d9223a8b5e9295d15b5a9b1ef1dae44c8499f3/src/path.c#L331</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html#fixed-imagepath-path-array-handling</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html">https://lists.debian.org/debian-lts-announce/2022/01/msg00018.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5053">https://www.debian.org/security/2022/dsa-5053</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/c48271ab354db49cdbd740bc45e13be4f0f7993c">https://github.com/python-pillow/Pillow/commit/c48271ab354db49cdbd740bc45e13be4f0f7993c</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/5920">https://github.com/python-pillow/Pillow/pull/5920</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/1e092419b6806495c683043ab3feb6ce264f3b9c">https://github.com/python-pillow/Pillow/commit/1e092419b6806495c683043ab3feb6ce264f3b9c</a></li>
<li><a href="https://github.com/python-pillow/Pillow/blob/e8ab5640774716c5486d3cb05167f74f742ad6ef/CHANGES.rst?plain=1#L1187">https://github.com/python-pillow/Pillow/blob/e8ab5640774716c5486d3cb05167f74f742ad6ef/CHANGES.rst?plain=1#L1187</a></li>
<li><a href="https://github.com/advisories/GHSA-pw3c-h7wp-cvhx">https://github.com/advisories/GHSA-pw3c-h7wp-cvhx</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-8.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-8.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pw3c-h7wp-cvhx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-01-12T20:07:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Information Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-cq5g-924m-7fxh</id>
        <link href="https://github.com/advisories/GHSA-cq5g-924m-7fxh"/>
        <updated>2024-10-11T21:00:45.000Z</updated>
        <content type="html"><![CDATA[<p><code>atat.py</code> in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read private data structures via a request for a view without a name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-5505">https://nvd.nist.gov/vuln/detail/CVE-2012-5505</a></li>
<li><a href="https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt">https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt</a></li>
<li><a href="https://plone.org/products/plone-hotfix/releases/20121106">https://plone.org/products/plone-hotfix/releases/20121106</a></li>
<li><a href="https://plone.org/products/plone/security/advisories/20121106/21">https://plone.org/products/plone/security/advisories/20121106/21</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/11/10/1">http://www.openwall.com/lists/oss-security/2012/11/10/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-47.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-cq5g-924m-7fxh">https://github.com/advisories/GHSA-cq5g-924m-7fxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cq5g-924m-7fxh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T04:32:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h6hq-c896-w882</id>
        <link href="https://github.com/advisories/GHSA-h6hq-c896-w882"/>
        <updated>2024-10-11T20:51:01.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2011-1949">https://nvd.nist.gov/vuln/detail/CVE-2011-1949</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/67694">https://exchange.xforce.ibmcloud.com/vulnerabilities/67694</a></li>
<li><a href="https://github.com/advisories/GHSA-h6hq-c896-w882">https://github.com/advisories/GHSA-h6hq-c896-w882</a></li>
<li><a href="http://plone.org/products/plone/security/advisories/CVE-2011-1949">http://plone.org/products/plone/security/advisories/CVE-2011-1949</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2011-15.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2011-15.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6hq-c896-w882</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-07-23T21:01:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h6hq-c896-w882</id>
        <link href="https://github.com/advisories/GHSA-h6hq-c896-w882"/>
        <updated>2024-10-11T20:51:01.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2011-1949">https://nvd.nist.gov/vuln/detail/CVE-2011-1949</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/67694">https://exchange.xforce.ibmcloud.com/vulnerabilities/67694</a></li>
<li><a href="https://github.com/advisories/GHSA-h6hq-c896-w882">https://github.com/advisories/GHSA-h6hq-c896-w882</a></li>
<li><a href="http://plone.org/products/plone/security/advisories/CVE-2011-1949">http://plone.org/products/plone/security/advisories/CVE-2011-1949</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2011-15.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2011-15.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6hq-c896-w882</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2018-07-23T21:01:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Sandbox Bypass]]></title>
        <id>https://github.com/advisories/GHSA-9m4g-f42q-vrrh</id>
        <link href="https://github.com/advisories/GHSA-9m4g-f42q-vrrh"/>
        <updated>2024-10-11T20:47:04.000Z</updated>
        <content type="html"><![CDATA[<p>The sandbox whitelisting function (<code>allowmodule.py</code>) in Plone before 4.2.3 and 4.3 before beta 1 allows remote authenticated users with certain privileges to bypass the Python sandbox restriction and execute arbitrary Python code via vectors related to importing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-5487">https://nvd.nist.gov/vuln/detail/CVE-2012-5487</a></li>
<li><a href="https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt">https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt</a></li>
<li><a href="https://plone.org/products/plone-hotfix/releases/20121106">https://plone.org/products/plone-hotfix/releases/20121106</a></li>
<li><a href="https://plone.org/products/plone/security/advisories/20121106/03">https://plone.org/products/plone/security/advisories/20121106/03</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/11/10/1">http://www.openwall.com/lists/oss-security/2012/11/10/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-29.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-29.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-9m4g-f42q-vrrh">https://github.com/advisories/GHSA-9m4g-f42q-vrrh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m4g-f42q-vrrh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T04:32:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Information Disclosure]]></title>
        <id>https://github.com/advisories/GHSA-f8pg-wp5j-rjxx</id>
        <link href="https://github.com/advisories/GHSA-f8pg-wp5j-rjxx"/>
        <updated>2024-10-11T20:45:58.000Z</updated>
        <content type="html"><![CDATA[<p><code>z3c.form</code>, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote attackers to obtain the default form field values by leveraging knowledge of the form location and the element id.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-5491">https://nvd.nist.gov/vuln/detail/CVE-2012-5491</a></li>
<li><a href="https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt">https://github.com/plone/Products.CMFPlone/blob/4.2.3/docs/CHANGES.txt</a></li>
<li><a href="https://plone.org/products/plone-hotfix/releases/20121106">https://plone.org/products/plone-hotfix/releases/20121106</a></li>
<li><a href="https://plone.org/products/plone/security/advisories/20121106/07">https://plone.org/products/plone/security/advisories/20121106/07</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/11/10/1">http://www.openwall.com/lists/oss-security/2012/11/10/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-33.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2014-33.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-f8pg-wp5j-rjxx">https://github.com/advisories/GHSA-f8pg-wp5j-rjxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f8pg-wp5j-rjxx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T04:32:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pillow] Pillow subject to DoS via SAMPLESPERPIXEL tag]]></title>
        <id>https://github.com/advisories/GHSA-q4mp-jvh2-76fj</id>
        <link href="https://github.com/advisories/GHSA-q4mp-jvh2-76fj"/>
        <updated>2024-10-11T20:42:02.000Z</updated>
        <content type="html"><![CDATA[<p>Pillow starting with 9.2.0 and prior to 9.3.0 allows denial of service via SAMPLESPERPIXEL. A large value in the SAMPLESPERPIXEL tag could lead to a memory and runtime DOS in TiffImagePlugin.py when setting up the context for image decoding. This issue has been patched in version 9.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45199">https://nvd.nist.gov/vuln/detail/CVE-2022-45199</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/6700">https://github.com/python-pillow/Pillow/pull/6700</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3">https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3</a></li>
<li><a href="https://bugs.gentoo.org/878769">https://bugs.gentoo.org/878769</a></li>
<li><a href="https://github.com/python-pillow/Pillow/releases/tag/9.3.0">https://github.com/python-pillow/Pillow/releases/tag/9.3.0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-42980.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-42980.yaml</a></li>
<li><a href="https://security.gentoo.org/glsa/202211-10">https://security.gentoo.org/glsa/202211-10</a></li>
<li><a href="https://github.com/advisories/GHSA-q4mp-jvh2-76fj">https://github.com/advisories/GHSA-q4mp-jvh2-76fj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4mp-jvh2-76fj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-14T12:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lollms] Lord of Large Language Models (LoLLMs)  path traversal vulnerability in the api open_personality_folder endpoint]]></title>
        <id>https://github.com/advisories/GHSA-6h64-g7cj-hj56</id>
        <link href="https://github.com/advisories/GHSA-6h64-g7cj-hj56"/>
        <updated>2024-10-11T19:44:05.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the api open_personality_folder endpoint of parisneo/lollms. This vulnerability allows an attacker to read any folder in the personality_folder on the victim's computer, even though sanitize_path is set. The issue arises due to improper sanitization of the personality_folder parameter, which can be exploited to traverse directories and access arbitrary files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6985">https://nvd.nist.gov/vuln/detail/CVE-2024-6985</a></li>
<li><a href="https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620">https://github.com/parisneo/lollms/commit/28ee567a9a120967215ff19b96ab7515ce469620</a></li>
<li><a href="https://huntr.com/bounties/79c11579-47d8-4e68-8466-b47c3bf5ef6a">https://huntr.com/bounties/79c11579-47d8-4e68-8466-b47c3bf5ef6a</a></li>
<li><a href="https://github.com/advisories/GHSA-6h64-g7cj-hj56">https://github.com/advisories/GHSA-6h64-g7cj-hj56</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h64-g7cj-hj56</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-11T18:32:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lollms] Lord of Large Language Models (LoLLMs) Server path traversal vulnerability in lollms_file_system.py]]></title>
        <id>https://github.com/advisories/GHSA-7pgr-32fx-c6x9</id>
        <link href="https://github.com/advisories/GHSA-7pgr-32fx-c6x9"/>
        <updated>2024-10-11T17:47:40.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the ParisNeo/lollms repository, specifically in the <code>lollms_file_system.py</code> file. The functions <code>add_rag_database</code>, <code>toggle_mount_rag_database</code>, and <code>vectorize_folder</code> do not implement security measures such as <code>sanitize_path_from_endpoint</code> or <code>sanitize_path</code>. This allows an attacker to perform vectorize operations on <code>.sqlite</code> files in any directory on the victim's computer, potentially installing multiple packages and causing a crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6971">https://nvd.nist.gov/vuln/detail/CVE-2024-6971</a></li>
<li><a href="https://huntr.com/bounties/fbfe7cd0-99fb-4305-bd07-8b573364109e">https://huntr.com/bounties/fbfe7cd0-99fb-4305-bd07-8b573364109e</a></li>
<li><a href="https://github.com/ParisNeo/lollms/commit/aeace796d861e922133b769710019608a6363264">https://github.com/ParisNeo/lollms/commit/aeace796d861e922133b769710019608a6363264</a></li>
<li><a href="https://github.com/advisories/GHSA-7pgr-32fx-c6x9">https://github.com/advisories/GHSA-7pgr-32fx-c6x9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7pgr-32fx-c6x9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-11T15:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio's dropdown component pre-process step does not limit the values to those in the dropdown list]]></title>
        <id>https://github.com/advisories/GHSA-26jh-r8g2-6fpr</id>
        <link href="https://github.com/advisories/GHSA-26jh-r8g2-6fpr"/>
        <updated>2024-10-11T15:48:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability is a <strong>data validation issue</strong> in the Gradio <code>Dropdown</code> component's pre-processing step. Even if the <code>allow_custom_value</code> parameter is set to <code>False</code>, attackers can bypass this restriction by sending custom requests with arbitrary values, effectively breaking the developer’s intended input constraints. While this alone is not a severe vulnerability, it can lead to more critical security issues, particularly when paired with other vulnerabilities like file downloads from the user's machine.</p>
<h3 id="patches">Patches</h3>
<p>Yes, this issue is addressed in <code>gradio&gt;=5.0</code>. Please upgrade to the latest version to resolve the problem.</p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>
<p>To mitigate the issue without upgrading, developers can add manual validation in their prediction function to check the received values against the allowed dropdown values before processing them.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-26jh-r8g2-6fpr">https://github.com/gradio-app/gradio/security/advisories/GHSA-26jh-r8g2-6fpr</a></li>
<li><a href="https://github.com/advisories/GHSA-26jh-r8g2-6fpr">https://github.com/advisories/GHSA-26jh-r8g2-6fpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-26jh-r8g2-6fpr</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-10T22:11:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio has an XSS on every Gradio server via upload of HTML files, JS files, or SVG files]]></title>
        <id>https://github.com/advisories/GHSA-gvv6-33j7-884g</id>
        <link href="https://github.com/advisories/GHSA-gvv6-33j7-884g"/>
        <updated>2024-10-11T15:46:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability involves <strong>Cross-Site Scripting (XSS)</strong> on any Gradio server that allows file uploads. Authenticated users can upload files such as HTML, JavaScript, or SVG files containing malicious scripts. When other users download or view these files, the scripts will execute in their browser, allowing attackers to perform unauthorized actions or steal sensitive information from their sessions. This impacts any Gradio server that allows file uploads, particularly those using components that process or display user-uploaded files.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>
<p>As a workaround, users can restrict the types of files that can be uploaded to the Gradio server by limiting uploads to non-executable file types such as images or text. Additionally, developers can implement server-side validation to sanitize uploaded files, ensuring that HTML, JavaScript, and SVG files are properly handled or rejected before being stored or displayed to users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-gvv6-33j7-884g">https://github.com/gradio-app/gradio/security/advisories/GHSA-gvv6-33j7-884g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47872">https://nvd.nist.gov/vuln/detail/CVE-2024-47872</a></li>
<li><a href="https://github.com/advisories/GHSA-gvv6-33j7-884g">https://github.com/advisories/GHSA-gvv6-33j7-884g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvv6-33j7-884g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-10T22:09:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio uses insecure communication between the FRP client and server]]></title>
        <id>https://github.com/advisories/GHSA-279j-x4gx-hfrh</id>
        <link href="https://github.com/advisories/GHSA-279j-x4gx-hfrh"/>
        <updated>2024-10-11T15:45:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability involves <strong>insecure communication</strong> between the FRP (Fast Reverse Proxy) client and server when Gradio's <code>share=True</code> option is used. HTTPS is not enforced on the connection, allowing attackers to intercept and read files uploaded to the Gradio server, as well as modify responses or data sent between the client and server. This impacts users who are sharing Gradio demos publicly over the internet using <code>share=True</code> without proper encryption, exposing sensitive data to potential eavesdroppers.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>
<p>As a workaround, users can avoid using <code>share=True</code> in production environments and instead host their Gradio applications on servers with HTTPS enabled to ensure secure communication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-279j-x4gx-hfrh">https://github.com/gradio-app/gradio/security/advisories/GHSA-279j-x4gx-hfrh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47871">https://nvd.nist.gov/vuln/detail/CVE-2024-47871</a></li>
<li><a href="https://github.com/advisories/GHSA-279j-x4gx-hfrh">https://github.com/advisories/GHSA-279j-x4gx-hfrh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-279j-x4gx-hfrh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-10T22:08:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio has a race condition in update_root_in_config may redirect user traffic]]></title>
        <id>https://github.com/advisories/GHSA-xh2x-3mrm-fwqm</id>
        <link href="https://github.com/advisories/GHSA-xh2x-3mrm-fwqm"/>
        <updated>2024-10-11T15:48:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability involves a <strong>race condition</strong> in the <code>update_root_in_config</code> function, allowing an attacker to modify the <code>root</code> URL used by the Gradio frontend to communicate with the backend. By exploiting this flaw, an attacker can redirect user traffic to a malicious server. This could lead to the interception of sensitive data such as authentication credentials or uploaded files. This impacts all users who connect to a Gradio server, especially those exposed to the internet, where malicious actors could exploit this race condition.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-xh2x-3mrm-fwqm">https://github.com/gradio-app/gradio/security/advisories/GHSA-xh2x-3mrm-fwqm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47870">https://nvd.nist.gov/vuln/detail/CVE-2024-47870</a></li>
<li><a href="https://github.com/advisories/GHSA-xh2x-3mrm-fwqm">https://github.com/advisories/GHSA-xh2x-3mrm-fwqm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xh2x-3mrm-fwqm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-10T22:04:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio performs a non-constant-time comparison when comparing hashes]]></title>
        <id>https://github.com/advisories/GHSA-j757-pf57-f8r4</id>
        <link href="https://github.com/advisories/GHSA-j757-pf57-f8r4"/>
        <updated>2024-10-11T15:47:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability involves a <strong>timing attack</strong> in the way Gradio compares hashes for the <code>analytics_dashboard</code> function. Since the comparison is not done in constant time, an attacker could exploit this by measuring the response time of different requests to infer the correct hash byte-by-byte. This can lead to unauthorized access to the analytics dashboard, especially if the attacker can repeatedly query the system with different keys.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;4.44</code> to mitigate this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>
<p>To mitigate the risk before applying the patch, developers can manually patch the <code>analytics_dashboard</code> dashboard to use a <strong>constant-time comparison</strong> function for comparing sensitive values, such as hashes. Alternatively, access to the analytics dashboard can be disabled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-j757-pf57-f8r4">https://github.com/gradio-app/gradio/security/advisories/GHSA-j757-pf57-f8r4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47869">https://nvd.nist.gov/vuln/detail/CVE-2024-47869</a></li>
<li><a href="https://github.com/advisories/GHSA-j757-pf57-f8r4">https://github.com/advisories/GHSA-j757-pf57-f8r4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j757-pf57-f8r4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-10T22:03:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio has several components with post-process steps allow arbitrary file leaks]]></title>
        <id>https://github.com/advisories/GHSA-4q3c-cj7g-jcwf</id>
        <link href="https://github.com/advisories/GHSA-4q3c-cj7g-jcwf"/>
        <updated>2024-10-11T15:47:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This is a <strong>data validation vulnerability</strong> affecting several Gradio components, which allows arbitrary file leaks through the post-processing step. Attackers can exploit these components by crafting requests that bypass expected input constraints. This issue could lead to sensitive files being exposed to unauthorized users, especially when combined with other vulnerabilities, such as issue TOB-GRADIO-15. The components most at risk are those that return or handle file data.</p>
<h3 id="vulnerable-components">Vulnerable Components:</h3>
<ol>
<li><strong>String to FileData:</strong> DownloadButton, Audio, ImageEditor, Video, Model3D, File, UploadButton.</li>
<li><strong>Complex data to FileData:</strong> Chatbot, MultimodalTextbox.</li>
<li><strong>Direct file read in preprocess:</strong> Code.</li>
<li><strong>Dictionary converted to FileData:</strong> ParamViewer, Dataset.</li>
</ol>
<h3 id="exploit-scenarios">Exploit Scenarios:</h3>
<ol>
<li>A developer creates a Dropdown list that passes values to a DownloadButton. An attacker bypasses the allowed inputs, sends an arbitrary file path (like <code>/etc/passwd</code>), and downloads sensitive files.</li>
<li>An attacker crafts a malicious payload in a ParamViewer component, leaking sensitive files from a server through the arbitrary file leak.</li>
</ol>
<h3 id="patches">Patches</h3>
<p>Yes, the issue has been resolved in <code>gradio&gt;5.0</code>. Upgrading to the latest version will mitigate this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-4q3c-cj7g-jcwf">https://github.com/gradio-app/gradio/security/advisories/GHSA-4q3c-cj7g-jcwf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47868">https://nvd.nist.gov/vuln/detail/CVE-2024-47868</a></li>
<li><a href="https://github.com/advisories/GHSA-4q3c-cj7g-jcwf">https://github.com/advisories/GHSA-4q3c-cj7g-jcwf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4q3c-cj7g-jcwf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-10T22:03:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio lacks integrity checking on the downloaded FRP client]]></title>
        <id>https://github.com/advisories/GHSA-8c87-gvhj-xm8m</id>
        <link href="https://github.com/advisories/GHSA-8c87-gvhj-xm8m"/>
        <updated>2024-10-11T15:47:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability is a <strong>lack of integrity check</strong> on the downloaded FRP client, which could potentially allow attackers to introduce malicious code. If an attacker gains access to the remote URL from which the FRP client is downloaded, they could modify the binary without detection, as the Gradio server does not verify the file's checksum or signature. </p>
<p><strong>Who is impacted?</strong><br>Any users utilizing the Gradio server's sharing mechanism that downloads the FRP client could be affected by this vulnerability, especially those relying on the executable binary for secure data tunneling.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;=5.0</code>, which includes a fix to verify the integrity of the downloaded binary.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no direct workaround for this issue without upgrading. However, users can manually validate the integrity of the downloaded FRP client by implementing checksum or signature verification in their own environment to ensure the binary hasn't been tampered with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-8c87-gvhj-xm8m">https://github.com/gradio-app/gradio/security/advisories/GHSA-8c87-gvhj-xm8m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47867">https://nvd.nist.gov/vuln/detail/CVE-2024-47867</a></li>
<li><a href="https://github.com/advisories/GHSA-8c87-gvhj-xm8m">https://github.com/advisories/GHSA-8c87-gvhj-xm8m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8c87-gvhj-xm8m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-10T22:02:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] In Gradio, the `enable_monitoring` flag set to `False` does not disable monitoring]]></title>
        <id>https://github.com/advisories/GHSA-hm3c-93pg-4cxw</id>
        <link href="https://github.com/advisories/GHSA-hm3c-93pg-4cxw"/>
        <updated>2024-10-11T15:46:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>This vulnerability involves data exposure due to the enable_monitoring flag not properly disabling monitoring when set to False. Even when monitoring is supposedly disabled, an attacker or unauthorized user can still access the monitoring dashboard by directly requesting the /monitoring endpoint. This means that sensitive application analytics may still be exposed, particularly in environments where monitoring is expected to be disabled. Users who set enable_monitoring=False to prevent unauthorized access to monitoring data are impacted.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to gradio&gt;=4.44 to address this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-hm3c-93pg-4cxw">https://github.com/gradio-app/gradio/security/advisories/GHSA-hm3c-93pg-4cxw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47168">https://nvd.nist.gov/vuln/detail/CVE-2024-47168</a></li>
<li><a href="https://github.com/advisories/GHSA-hm3c-93pg-4cxw">https://github.com/advisories/GHSA-hm3c-93pg-4cxw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hm3c-93pg-4cxw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-10T22:02:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio vulnerable to SSRF in the path parameter of /queue/join]]></title>
        <id>https://github.com/advisories/GHSA-576c-3j53-r9jj</id>
        <link href="https://github.com/advisories/GHSA-576c-3j53-r9jj"/>
        <updated>2024-10-11T15:46:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><strong>What kind of vulnerability is it? Who is impacted?</strong></p>
<p>This vulnerability relates to <strong>Server-Side Request Forgery (SSRF)</strong> in the <code>/queue/join</code> endpoint. Gradio’s <code>async_save_url_to_cache</code> function allows attackers to force the Gradio server to send HTTP requests to user-controlled URLs. This could enable attackers to target internal servers or services within a local network and possibly exfiltrate data or cause unwanted internal requests. Additionally, the content from these URLs is stored locally, making it easier for attackers to upload potentially malicious files to the server. This impacts users deploying Gradio servers that use components like the Video component which involve URL fetching.</p>
<h3 id="patches">Patches</h3>
<p>Yes, please upgrade to <code>gradio&gt;=5</code> to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>Is there a way for users to fix or remediate the vulnerability without upgrading?</strong></p>
<p>As a workaround, users can disable or heavily restrict URL-based inputs in their Gradio applications to trusted domains only. Additionally, implementing stricter URL validation (such as allowinglist-based validation) and ensuring that local or internal network addresses cannot be requested via the <code>/queue/join</code> endpoint can help mitigate the risk of SSRF attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-576c-3j53-r9jj">https://github.com/gradio-app/gradio/security/advisories/GHSA-576c-3j53-r9jj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47167">https://nvd.nist.gov/vuln/detail/CVE-2024-47167</a></li>
<li><a href="https://github.com/advisories/GHSA-576c-3j53-r9jj">https://github.com/advisories/GHSA-576c-3j53-r9jj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-576c-3j53-r9jj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-10T22:01:44.000Z</published>
    </entry>
</feed>