<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-04-18T02:08:00.176Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[gunicorn] Request smuggling leading to endpoint restriction bypass in Gunicorn]]></title>
        <id>https://github.com/advisories/GHSA-w3h3-4rj7-4ph4</id>
        <link href="https://github.com/advisories/GHSA-w3h3-4rj7-4ph4"/>
        <updated>2024-04-16T23:24:40.000Z</updated>
        <content type="html"><![CDATA[<p>Gunicorn fails to properly validate Transfer-Encoding headers, leading to HTTP Request Smuggling (HRS) vulnerabilities. By crafting requests with conflicting Transfer-Encoding headers, attackers can bypass security restrictions and access restricted endpoints. This issue is due to Gunicorn's handling of Transfer-Encoding headers, where it incorrectly processes requests with multiple, conflicting Transfer-Encoding headers, treating them as chunked regardless of the final encoding specified. This vulnerability has been shown to allow access to endpoints restricted by gunicorn. This issue has been addressed in version 22.0.0.</p>
<p>To be affected users must have a network path which does not filter out invalid requests. These users are advised to block access to restricted endpoints via a firewall or other mechanism if they are unable to update. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1135">https://nvd.nist.gov/vuln/detail/CVE-2024-1135</a></li>
<li><a href="https://huntr.com/bounties/22158e34-cfd5-41ad-97e0-a780773d96c1">https://huntr.com/bounties/22158e34-cfd5-41ad-97e0-a780773d96c1</a></li>
<li><a href="https://github.com/benoitc/gunicorn/commit/ac29c9b0a758d21f1e0fb3b3457239e523fa9f1d">https://github.com/benoitc/gunicorn/commit/ac29c9b0a758d21f1e0fb3b3457239e523fa9f1d</a></li>
<li><a href="https://github.com/benoitc/gunicorn/releases/tag/22.0.0">https://github.com/benoitc/gunicorn/releases/tag/22.0.0</a></li>
<li><a href="https://github.com/advisories/GHSA-w3h3-4rj7-4ph4">https://github.com/advisories/GHSA-w3h3-4rj7-4ph4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3h3-4rj7-4ph4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mindsdb] Cross-site Scripting (XSS) in mindsdb/mindsdb]]></title>
        <id>https://github.com/advisories/GHSA-93c5-rj2p-w52x</id>
        <link href="https://github.com/advisories/GHSA-93c5-rj2p-w52x"/>
        <updated>2024-04-16T18:27:27.000Z</updated>
        <content type="html"><![CDATA[<p>When a user uploads a csv file that contains an javascript payload a Cross-site Scripting (XSS) is triggered when the file is viewed. This is true for both cloud version and OSS version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3575">https://nvd.nist.gov/vuln/detail/CVE-2024-3575</a></li>
<li><a href="https://huntr.com/bounties/5f720b48-ddeb-4f2a-830f-a3dd15d5daa2">https://huntr.com/bounties/5f720b48-ddeb-4f2a-830f-a3dd15d5daa2</a></li>
<li><a href="https://github.com/advisories/GHSA-93c5-rj2p-w52x">https://github.com/advisories/GHSA-93c5-rj2p-w52x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93c5-rj2p-w52x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] langchain vulnerable to path traversal]]></title>
        <id>https://github.com/advisories/GHSA-rgp8-pm28-3759</id>
        <link href="https://github.com/advisories/GHSA-rgp8-pm28-3759"/>
        <updated>2024-04-16T18:26:57.000Z</updated>
        <content type="html"><![CDATA[<p>langchain-ai/langchain is vulnerable to path traversal due to improper limitation of a pathname to a restricted directory ('Path Traversal') in its LocalFileStore functionality. An attacker can leverage this vulnerability to read or write files anywhere on the filesystem, potentially leading to information disclosure or remote code execution. The issue lies in the handling of file paths in the mset and mget methods, where user-supplied input is not adequately sanitized, allowing directory traversal sequences to reach unintended directories.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3571">https://nvd.nist.gov/vuln/detail/CVE-2024-3571</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/aad3d8bd47d7f5598156ff2bdcc8f736f24a7412">https://github.com/langchain-ai/langchain/commit/aad3d8bd47d7f5598156ff2bdcc8f736f24a7412</a></li>
<li><a href="https://huntr.com/bounties/2df3acdc-ee4f-4257-bbf8-a7de3870a9d8">https://huntr.com/bounties/2df3acdc-ee4f-4257-bbf8-a7de3870a9d8</a></li>
<li><a href="https://github.com/advisories/GHSA-rgp8-pm28-3759">https://github.com/advisories/GHSA-rgp8-pm28-3759</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgp8-pm28-3759</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[llama-index-core] llama-index-core Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r6gp-rff2-p3hf</id>
        <link href="https://github.com/advisories/GHSA-r6gp-rff2-p3hf"/>
        <updated>2024-04-16T18:26:17.000Z</updated>
        <content type="html"><![CDATA[<p>A command injection vulnerability exists in the run-llama/llama_index repository, specifically within the safe_eval function. Attackers can bypass the intended security mechanism, which checks for the presence of underscores in code generated by LLM, to execute arbitrary code. This is achieved by crafting input that does not contain an underscore but still results in the execution of OS commands. The vulnerability allows for remote code execution (RCE) on the server hosting the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3271">https://nvd.nist.gov/vuln/detail/CVE-2024-3271</a></li>
<li><a href="https://github.com/run-llama/llama_index/commit/5fbcb5a8b9f20f81b791c7fc8849e352613ab475">https://github.com/run-llama/llama_index/commit/5fbcb5a8b9f20f81b791c7fc8849e352613ab475</a></li>
<li><a href="https://huntr.com/bounties/9b32490e-7cf9-470e-8d49-ba083ae7a279">https://huntr.com/bounties/9b32490e-7cf9-470e-8d49-ba083ae7a279</a></li>
<li><a href="https://github.com/run-llama/llama_index/commit/2c92e88838a5f481d50840240b1dd3180066c6f5">https://github.com/run-llama/llama_index/commit/2c92e88838a5f481d50840240b1dd3180066c6f5</a></li>
<li><a href="https://github.com/advisories/GHSA-r6gp-rff2-p3hf">https://github.com/advisories/GHSA-r6gp-rff2-p3hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6gp-rff2-p3hf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bentoml] Insecure deserialization in BentoML]]></title>
        <id>https://github.com/advisories/GHSA-hvj5-mvw9-93j3</id>
        <link href="https://github.com/advisories/GHSA-hvj5-mvw9-93j3"/>
        <updated>2024-04-16T18:24:37.000Z</updated>
        <content type="html"><![CDATA[<p>An insecure deserialization vulnerability exists in the BentoML framework, allowing remote code execution (RCE) by sending a specially crafted POST request. By exploiting this vulnerability, attackers can execute arbitrary commands on the server hosting the BentoML application. The vulnerability is triggered when a serialized object, crafted to execute OS commands upon deserialization, is sent to any valid BentoML endpoint. This issue poses a significant security risk, enabling attackers to compromise the server and potentially gain unauthorized access or control.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2912">https://nvd.nist.gov/vuln/detail/CVE-2024-2912</a></li>
<li><a href="https://github.com/bentoml/bentoml/commit/fd70379733c57c6368cc022ac1f841b7b426db7b">https://github.com/bentoml/bentoml/commit/fd70379733c57c6368cc022ac1f841b7b426db7b</a></li>
<li><a href="https://huntr.com/bounties/349a1cce-6bb5-4345-82a5-bf7041b65a68">https://huntr.com/bounties/349a1cce-6bb5-4345-82a5-bf7041b65a68</a></li>
<li><a href="https://github.com/advisories/GHSA-hvj5-mvw9-93j3">https://github.com/advisories/GHSA-hvj5-mvw9-93j3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hvj5-mvw9-93j3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] zenml Session Fixation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g3r5-72hf-p7p2</id>
        <link href="https://github.com/advisories/GHSA-g3r5-72hf-p7p2"/>
        <updated>2024-04-16T18:23:37.000Z</updated>
        <content type="html"><![CDATA[<p>A session fixation vulnerability exists in the zenml-io/zenml application, where JWT tokens used for user authentication are not invalidated upon logout. This flaw allows an attacker to bypass authentication mechanisms by reusing a victim's JWT token.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2260">https://nvd.nist.gov/vuln/detail/CVE-2024-2260</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e">https://github.com/zenml-io/zenml/commit/68bcb3ba60cba9729c9713a49c39502d40fb945e</a></li>
<li><a href="https://huntr.com/bounties/2d0856ec-ed73-477a-8ea2-d5d4f15cf167">https://huntr.com/bounties/2d0856ec-ed73-477a-8ea2-d5d4f15cf167</a></li>
<li><a href="https://github.com/advisories/GHSA-g3r5-72hf-p7p2">https://github.com/advisories/GHSA-g3r5-72hf-p7p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g3r5-72hf-p7p2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Directory traversal in zenml]]></title>
        <id>https://github.com/advisories/GHSA-6h3f-43vq-53hj</id>
        <link href="https://github.com/advisories/GHSA-6h3f-43vq-53hj"/>
        <updated>2024-04-16T18:22:22.000Z</updated>
        <content type="html"><![CDATA[<p>A directory traversal vulnerability exists in the zenml-io/zenml repository, specifically within the /api/v1/steps endpoint. Attackers can exploit this vulnerability by manipulating the 'logs' URI path in the request to fetch arbitrary file content, bypassing intended access restrictions. The vulnerability arises due to the lack of validation for directory traversal patterns, allowing attackers to access files outside of the restricted directory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2083">https://nvd.nist.gov/vuln/detail/CVE-2024-2083</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/00e934f33a243a554f5f65b80eefd5ea5117367b">https://github.com/zenml-io/zenml/commit/00e934f33a243a554f5f65b80eefd5ea5117367b</a></li>
<li><a href="https://huntr.com/bounties/f24b2216-6a4b-42a1-becb-9b47e6cf117f">https://huntr.com/bounties/f24b2216-6a4b-42a1-becb-9b47e6cf117f</a></li>
<li><a href="https://github.com/advisories/GHSA-6h3f-43vq-53hj">https://github.com/advisories/GHSA-6h3f-43vq-53hj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h3f-43vq-53hj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] gradio vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-g9cj-cfpp-4g2x</id>
        <link href="https://github.com/advisories/GHSA-g9cj-cfpp-4g2x"/>
        <updated>2024-04-16T18:21:42.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in gradio-app/gradio, where the <code>/component_server</code> endpoint improperly allows the invocation of any method on a <code>Component</code> class with attacker-controlled arguments. Specifically, by exploiting the <code>move_resource_to_block_cache()</code> method of the <code>Block</code> class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via <code>launch(share=True)</code>, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on <code>huggingface.co</code> are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1561">https://nvd.nist.gov/vuln/detail/CVE-2024-1561</a></li>
<li><a href="https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2">https://github.com/gradio-app/gradio/commit/24a583688046867ca8b8b02959c441818bdb34a2</a></li>
<li><a href="https://huntr.com/bounties/4acf584e-2fe8-490e-878d-2d9bf2698338">https://huntr.com/bounties/4acf584e-2fe8-490e-878d-2d9bf2698338</a></li>
<li><a href="https://github.com/advisories/GHSA-g9cj-cfpp-4g2x">https://github.com/advisories/GHSA-g9cj-cfpp-4g2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9cj-cfpp-4g2x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-hq88-wg7q-gp4g</id>
        <link href="https://github.com/advisories/GHSA-hq88-wg7q-gp4g"/>
        <updated>2024-04-16T18:20:37.000Z</updated>
        <content type="html"><![CDATA[<p>mlflow/mlflow is vulnerable to Local File Inclusion (LFI) due to improper parsing of URIs, allowing attackers to bypass checks and read arbitrary files on the system. The issue arises from the 'is_local_uri' function's failure to properly handle URIs with empty or 'file' schemes, leading to the misclassification of URIs as non-local. Attackers can exploit this by crafting malicious model versions with specially crafted 'source' parameters, enabling the reading of sensitive files within at least two directory levels from the server's root.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3573">https://nvd.nist.gov/vuln/detail/CVE-2024-3573</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/438a450714a3ca06285eeea34bdc6cf79d7f6cbc">https://github.com/mlflow/mlflow/commit/438a450714a3ca06285eeea34bdc6cf79d7f6cbc</a></li>
<li><a href="https://huntr.com/bounties/8ea058a7-4ef8-4baf-9198-bc0147fc543c">https://huntr.com/bounties/8ea058a7-4ef8-4baf-9198-bc0147fc543c</a></li>
<li><a href="https://github.com/advisories/GHSA-hq88-wg7q-gp4g">https://github.com/advisories/GHSA-hq88-wg7q-gp4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hq88-wg7q-gp4g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-m49c-5c52-6696</id>
        <link href="https://github.com/advisories/GHSA-m49c-5c52-6696"/>
        <updated>2024-04-16T18:19:41.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the mlflow/mlflow repository, specifically within the handling of the <code>artifact_location</code> parameter when creating an experiment. Attackers can exploit this vulnerability by using a fragment component <code>#</code> in the artifact location URI to read arbitrary files on the server in the context of the server's process. This issue is similar to CVE-2023-6909 but utilizes a different component of the URI to achieve the same effect. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1594">https://nvd.nist.gov/vuln/detail/CVE-2024-1594</a></li>
<li><a href="https://huntr.com/bounties/424b6f6b-e778-4a2b-b860-39730d396f3e">https://huntr.com/bounties/424b6f6b-e778-4a2b-b860-39730d396f3e</a></li>
<li><a href="https://github.com/mlflow/mlflow/blob/b929a3e727dc48a1eb19b7e954b7897ac09ad3ec/mlflow/utils/uri.py#L246">https://github.com/mlflow/mlflow/blob/b929a3e727dc48a1eb19b7e954b7897ac09ad3ec/mlflow/utils/uri.py#L246</a></li>
<li><a href="https://github.com/advisories/GHSA-m49c-5c52-6696">https://github.com/advisories/GHSA-m49c-5c52-6696</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m49c-5c52-6696</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-f42m-mvfv-cgw5</id>
        <link href="https://github.com/advisories/GHSA-f42m-mvfv-cgw5"/>
        <updated>2024-04-16T18:18:31.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the mlflow/mlflow repository due to improper handling of URL parameters. By smuggling path traversal sequences using the ';' character in URLs, attackers can manipulate the 'params' portion of the URL to gain unauthorized access to files or directories. This vulnerability allows for arbitrary data smuggling into the 'params' part of the URL, enabling attacks similar to those described in previous reports but utilizing the ';' character for parameter smuggling. Successful exploitation could lead to unauthorized information disclosure or server compromise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1593">https://nvd.nist.gov/vuln/detail/CVE-2024-1593</a></li>
<li><a href="https://huntr.com/bounties/dbdc6bd6-d09a-46f2-9d9c-5138a14b6e31">https://huntr.com/bounties/dbdc6bd6-d09a-46f2-9d9c-5138a14b6e31</a></li>
<li><a href="https://github.com/advisories/GHSA-f42m-mvfv-cgw5">https://github.com/advisories/GHSA-f42m-mvfv-cgw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f42m-mvfv-cgw5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-5mvj-wmgj-7q8c</id>
        <link href="https://github.com/advisories/GHSA-5mvj-wmgj-7q8c"/>
        <updated>2024-04-16T18:18:03.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the mlflow/mlflow repository, specifically within the artifact deletion functionality. Attackers can bypass path validation by exploiting the double decoding process in the <code>_delete_artifact_mlflow_artifacts</code> handler and <code>local_file_uri_to_path</code> function, allowing for the deletion of arbitrary directories on the server's filesystem. This vulnerability is due to an extra unquote operation in the <code>delete_artifacts</code> function of <code>local_artifact_repo.py</code>, which fails to properly sanitize user-supplied paths. The issue is present up to version 2.9.2, despite attempts to fix a similar issue in CVE-2023-6831.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1560">https://nvd.nist.gov/vuln/detail/CVE-2024-1560</a></li>
<li><a href="https://huntr.com/bounties/4a34259c-3c8f-4872-b178-f27fbc876b98">https://huntr.com/bounties/4a34259c-3c8f-4872-b178-f27fbc876b98</a></li>
<li><a href="https://github.com/advisories/GHSA-5mvj-wmgj-7q8c">https://github.com/advisories/GHSA-5mvj-wmgj-7q8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mvj-wmgj-7q8c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f82r-jj5r-6g97</id>
        <link href="https://github.com/advisories/GHSA-f82r-jj5r-6g97"/>
        <updated>2024-04-16T18:06:16.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in mlflow/mlflow version 2.9.2, allowing attackers to access arbitrary files on the server. By crafting a series of HTTP POST requests with specially crafted 'artifact_location' and 'source' parameters, using a local URI with '#' instead of '?', an attacker can traverse the server's directory structure. The issue occurs due to insufficient validation of user-supplied input in the server's handlers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1483">https://nvd.nist.gov/vuln/detail/CVE-2024-1483</a></li>
<li><a href="https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d">https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d</a></li>
<li><a href="https://github.com/advisories/GHSA-f82r-jj5r-6g97">https://github.com/advisories/GHSA-f82r-jj5r-6g97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f82r-jj5r-6g97</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] gradio Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qh6x-j82h-vpf9</id>
        <link href="https://github.com/advisories/GHSA-qh6x-j82h-vpf9"/>
        <updated>2024-04-16T18:05:46.000Z</updated>
        <content type="html"><![CDATA[<p>An SSRF (Server-Side Request Forgery) vulnerability exists in the gradio-app/gradio repository, allowing attackers to scan and identify open ports within an internal network. By manipulating the 'file' parameter in a GET request, an attacker can discern the status of internal ports based on the presence of a 'Location' header or a 'File not allowed' error in the response.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1183">https://nvd.nist.gov/vuln/detail/CVE-2024-1183</a></li>
<li><a href="https://github.com/gradio-app/gradio/commit/2ad3d9e7ec6c8eeea59774265b44f11df7394bb4">https://github.com/gradio-app/gradio/commit/2ad3d9e7ec6c8eeea59774265b44f11df7394bb4</a></li>
<li><a href="https://huntr.com/bounties/103434f9-87d2-42ea-9907-194a3c25007c">https://huntr.com/bounties/103434f9-87d2-42ea-9907-194a3c25007c</a></li>
<li><a href="https://github.com/gradio-app/gradio/commit/7ba8c5da45b004edd12c0460be9222f5b5f5f055">https://github.com/gradio-app/gradio/commit/7ba8c5da45b004edd12c0460be9222f5b5f5f055</a></li>
<li><a href="https://github.com/advisories/GHSA-qh6x-j82h-vpf9">https://github.com/advisories/GHSA-qh6x-j82h-vpf9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh6x-j82h-vpf9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-16T00:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Duplicate Advisory: ReDos vulnerability of XMLFeedSpider]]></title>
        <id>https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</id>
        <link href="https://github.com/advisories/GHSA-7c9g-vj9m-8pm6"/>
        <updated>2024-04-16T16:10:40.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-cc65-xxvf-f7r9. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Parts of the Scrapy API were found to be vulnerable to a ReDoS attack. Handling a malicious response could cause extreme CPU and memory usage during the parsing of its content, due to the use of vulnerable regular expressions for that parsing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1892">https://nvd.nist.gov/vuln/detail/CVE-2024-1892</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/479619b340f197a8f24c5db45bc068fb8755f2c5">https://github.com/scrapy/scrapy/commit/479619b340f197a8f24c5db45bc068fb8755f2c5</a></li>
<li><a href="https://huntr.com/bounties/271f94f2-1e05-4616-ac43-41752389e26b">https://huntr.com/bounties/271f94f2-1e05-4616-ac43-41752389e26b</a></li>
<li><a href="https://github.com/advisories/GHSA-7c9g-vj9m-8pm6">https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-28T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Duplicate Advisory: ReDos vulnerability of XMLFeedSpider]]></title>
        <id>https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</id>
        <link href="https://github.com/advisories/GHSA-7c9g-vj9m-8pm6"/>
        <updated>2024-04-16T16:10:40.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-cc65-xxvf-f7r9. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Parts of the Scrapy API were found to be vulnerable to a ReDoS attack. Handling a malicious response could cause extreme CPU and memory usage during the parsing of its content, due to the use of vulnerable regular expressions for that parsing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1892">https://nvd.nist.gov/vuln/detail/CVE-2024-1892</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/479619b340f197a8f24c5db45bc068fb8755f2c5">https://github.com/scrapy/scrapy/commit/479619b340f197a8f24c5db45bc068fb8755f2c5</a></li>
<li><a href="https://huntr.com/bounties/271f94f2-1e05-4616-ac43-41752389e26b">https://huntr.com/bounties/271f94f2-1e05-4616-ac43-41752389e26b</a></li>
<li><a href="https://github.com/advisories/GHSA-7c9g-vj9m-8pm6">https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7c9g-vj9m-8pm6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-28T00:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Duplicate Advisory: Scrapy authorization header leakage on cross-domain redirect]]></title>
        <id>https://github.com/advisories/GHSA-4q82-j5c2-g2c5</id>
        <link href="https://github.com/advisories/GHSA-4q82-j5c2-g2c5"/>
        <updated>2024-04-16T14:05:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-cw9j-q3vf-hrrv. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>In scrapy versions before 2.11.1, an issue was identified where the Authorization header, containing credentials for server authentication, is leaked to a third-party site during a cross-domain redirect. This vulnerability arises from the failure to remove the Authorization header when redirecting across domains. The exposure of the Authorization header to unauthorized actors could potentially allow for account hijacking.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3574">https://nvd.nist.gov/vuln/detail/CVE-2024-3574</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/5bcb8fd5019c72d05c4a96da78a7fcb6ecb55b75">https://github.com/scrapy/scrapy/commit/5bcb8fd5019c72d05c4a96da78a7fcb6ecb55b75</a></li>
<li><a href="https://huntr.com/bounties/49974321-2718-43e3-a152-62b16eed72a9">https://huntr.com/bounties/49974321-2718-43e3-a152-62b16eed72a9</a></li>
<li><a href="https://github.com/advisories/GHSA-cw9j-q3vf-hrrv">https://github.com/advisories/GHSA-cw9j-q3vf-hrrv</a></li>
<li><a href="https://github.com/advisories/GHSA-4q82-j5c2-g2c5">https://github.com/advisories/GHSA-4q82-j5c2-g2c5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4q82-j5c2-g2c5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Duplicate Advisory: Scrapy decompression bomb vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rmqv-7v3j-mr7p</id>
        <link href="https://github.com/advisories/GHSA-rmqv-7v3j-mr7p"/>
        <updated>2024-04-16T14:04:36.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-7j7m-v7m3-jqm7. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>The scrapy/scrapy project is vulnerable to XML External Entity (XXE) attacks due to the use of lxml.etree.fromstring for parsing untrusted XML data without proper validation. This vulnerability allows attackers to perform denial of service attacks, access local files, generate network connections, or circumvent firewalls by submitting specially crafted XML data. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3572">https://nvd.nist.gov/vuln/detail/CVE-2024-3572</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/809bfac4890f75fc73607318a04d2ccba71b3d9f">https://github.com/scrapy/scrapy/commit/809bfac4890f75fc73607318a04d2ccba71b3d9f</a></li>
<li><a href="https://huntr.com/bounties/c4a0fac9-0c5a-4718-9ee4-2d06d58adabb">https://huntr.com/bounties/c4a0fac9-0c5a-4718-9ee4-2d06d58adabb</a></li>
<li><a href="https://github.com/advisories/GHSA-rmqv-7v3j-mr7p">https://github.com/advisories/GHSA-rmqv-7v3j-mr7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rmqv-7v3j-mr7p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sqlparse] sqlparse parsing heavily nested list leads to Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-2m57-hf25-phgg</id>
        <link href="https://github.com/advisories/GHSA-2m57-hf25-phgg"/>
        <updated>2024-04-15T20:21:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Passing a heavily nested list to sqlparse.parse() leads to a Denial of Service due to RecursionError.</p>
<h3 id="details--poc">Details + PoC</h3>
<p>Running the following code will raise Maximum recursion limit exceeded exception:</p>
<pre><code class="language-py">import sqlparse
sqlparse.parse('[' * 10000 + ']' * 10000)
</code></pre>
<p>We expect a traceback of RecursionError:</p>
<pre><code class="language-py">Traceback (most recent call last):
  File "trigger_sqlparse_nested_list.py", line 3, in &lt;module&gt;
    sqlparse.parse('[' * 10000 + ']' * 10000)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/__init__.py", line 30, in parse
    return tuple(parsestream(sql, encoding))
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/filter_stack.py", line 36, in run
    stmt = grouping.group(stmt)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py", line 428, in group
    func(stmt)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py", line 53, in group_brackets
    _group_matching(tlist, sql.SquareBrackets)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/engine/grouping.py", line 48, in _group_matching
    tlist.group_tokens(cls, open_idx, close_idx)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 328, in group_tokens
    grp = grp_cls(subtokens)
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 161, in __init__
    super().__init__(None, str(self))
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 165, in __str__
    return ''.join(token.value for token in self.flatten())
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 165, in &lt;genexpr&gt;
    return ''.join(token.value for token in self.flatten())
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 214, in flatten
    yield from token.flatten()
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 214, in flatten
    yield from token.flatten()
  File "/home/uriya/.local/lib/python3.10/site-packages/sqlparse/sql.py", line 214, in flatten
    yield from token.flatten()
  [Previous line repeated 983 more times]
RecursionError: maximum recursion depth exceeded
</code></pre>
<h3 id="fix-suggestion">Fix suggestion</h3>
<p>The <a href="https://github.com/andialbrecht/sqlparse/blob/master/sqlparse/sql.py#L207">flatten()</a> function of TokenList class should limit the recursion to a maximal depth:</p>
<pre><code class="language-py">from sqlparse.exceptions import SQLParseError

MAX_DEPTH = 100

    def flatten(self, depth=1):
        """Generator yielding ungrouped tokens.

        This method is recursively called for all child tokens.
        """
    if depth &gt;= MAX_DEPTH:
        raise SQLParseError('Maximal depth reached')
        for token in self.tokens:
            if token.is_group:
                yield from token.flatten(depth + 1)
            else:
                yield token
</code></pre>
<h3 id="impact">Impact</h3>
<p>Denial of Service (the impact depends on the use).
Anyone parsing a user input with sqlparse.parse() is affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-2m57-hf25-phgg">https://github.com/andialbrecht/sqlparse/security/advisories/GHSA-2m57-hf25-phgg</a></li>
<li><a href="https://github.com/andialbrecht/sqlparse/commit/b4a39d9850969b4e1d6940d32094ee0b42a2cf03">https://github.com/andialbrecht/sqlparse/commit/b4a39d9850969b4e1d6940d32094ee0b42a2cf03</a></li>
<li><a href="https://github.com/advisories/GHSA-2m57-hf25-phgg">https://github.com/advisories/GHSA-2m57-hf25-phgg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2m57-hf25-phgg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-15T20:21:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dnspython] Potential DoS via the Tudoor mechanism in eventlet and dnspython]]></title>
        <id>https://github.com/advisories/GHSA-3rq5-2g8h-59hc</id>
        <link href="https://github.com/advisories/GHSA-3rq5-2g8h-59hc"/>
        <updated>2024-04-12T21:25:54.000Z</updated>
        <content type="html"><![CDATA[<p>eventlet before 0.35.2, as used in dnspython before 2.6.0, allows remote attackers to interfere with DNS name resolution by quickly sending an invalid packet from the expected IP address and source port, aka a "TuDoor" attack. In other words, dnspython does not have the preferred behavior in which the DNS name resolution algorithm would proceed, within the full time window, in order to wait for a valid packet. NOTE: dnspython 2.6.0 is unusable for a different reason that was addressed in 2.6.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29483">https://nvd.nist.gov/vuln/detail/CVE-2023-29483</a></li>
<li><a href="https://github.com/eventlet/eventlet/issues/913">https://github.com/eventlet/eventlet/issues/913</a></li>
<li><a href="https://github.com/rthalley/dnspython/issues/1045">https://github.com/rthalley/dnspython/issues/1045</a></li>
<li><a href="https://github.com/eventlet/eventlet/releases/tag/v0.35.2">https://github.com/eventlet/eventlet/releases/tag/v0.35.2</a></li>
<li><a href="https://github.com/rthalley/dnspython/releases/tag/v2.6.0">https://github.com/rthalley/dnspython/releases/tag/v2.6.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-DNSPYTHON-6241713">https://security.snyk.io/vuln/SNYK-PYTHON-DNSPYTHON-6241713</a></li>
<li><a href="https://github.com/eventlet/eventlet/commit/51e3c4928d4938beb576eff34f3bf97e6e64e6b4">https://github.com/eventlet/eventlet/commit/51e3c4928d4938beb576eff34f3bf97e6e64e6b4</a></li>
<li><a href="https://github.com/rthalley/dnspython/commit/0ea5ad0a4583e1f519b9bcc67cfac381230d9cf2">https://github.com/rthalley/dnspython/commit/0ea5ad0a4583e1f519b9bcc67cfac381230d9cf2</a></li>
<li><a href="https://github.com/advisories/GHSA-3rq5-2g8h-59hc">https://github.com/advisories/GHSA-3rq5-2g8h-59hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3rq5-2g8h-59hc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-11T15:30:48.000Z</published>
    </entry>
</feed>