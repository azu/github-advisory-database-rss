<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-09-23T17:01:28.828Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ihatemoney] Authorization Bypass in I hate money]]></title>
        <id>https://github.com/advisories/GHSA-67j9-c52g-w2q9</id>
        <link href="https://github.com/advisories/GHSA-67j9-c52g-w2q9"/>
        <updated>2024-09-23T17:00:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated member of one project can modify and delete members of another project, without knowledge of this other project's private code. This can be further exploited to access all bills of another project without knowledge of this other project's private code.</p>
<p>With the default configuration, anybody is allowed to create a new project. An attacker can create a new project and then use it to become authenticated and exploit this flaw. As such, the exposure is similar to an unauthenticated attack, because it is trivial to become authenticated.</p>
<h3 id="patches">Patches</h3>
<pre><code class="language-diff"> ihatemoney/models.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/ihatemoney/models.py b/ihatemoney/models.py
index fe7b519..5691c75 100644
--- a/ihatemoney/models.py
+++ b/ihatemoney/models.py
@@ -380,7 +380,7 @@ class Person(db.Model):
         def get_by_name(self, name, project):
             return (
                 Person.query.filter(Person.name == name)
-                .filter(Project.id == project.id)
+                .filter(Person.project_id == project.id)
                 .one()
             )
 
@@ -389,7 +389,7 @@ class Person(db.Model):
                 project = g.project
             return (
                 Person.query.filter(Person.id == id)
-                .filter(Project.id == project.id)
+                .filter(Person.project_id == project.id)
                 .one()
             )
 
</code></pre>
<h3 id="workarounds">Workarounds</h3>
<p>To limit the impact, it is possible to disable public project creation by setting <code>ALLOW_PUBLIC_PROJECT_CREATION = False</code> in the configuration (see <a href="https://ihatemoney.readthedocs.io/en/latest/configuration.html">documentation</a>). Existing users will still be able to exploit the flaw, but this will prevent an external attacker from creating a new project.</p>
<h3 id="for-more-information">For more information</h3>
<p><code>Person.query.get()</code> and <code>Person.query.get_by_name()</code> were mistakenly running a database join on the Project table without constraining the result.</p>
<p>As a result, <code>Person.query.get(42, "projectfoo")</code> would return the Person with id=42, even if it is not associated to the project "projectfoo".  The only condition is that "projectfoo" must exist.</p>
<p>This flaw can be exploited in several places:</p>
<ol>
<li><p>API: PUT requests to <code>/api/projects/&lt;project&gt;/members/&lt;personID&gt;</code> will succeed even though <code>&lt;personID&gt;</code> is not a member of <code>&lt;project&gt;</code>.</p>
<p>This allows an authenticated attacker to alter the state of a member (name, weight, activated) in any project.  In addition, the altered member will no longer be associated with its original project but will be associated to the attacker project instead, breaking many features of IHateMoney.  For instance, bills referencing the altered member will no longer be visible in the original project.</p>
<p>This causes an additional information disclosure and loss of integrity on bills: the attacker will now be able to see, edit and delete bills belonging to the altered member, because IHateMoney now believes that these bills are associated to the attacker project through the altered member.</p>
<p>For instance, assume that <code>Person(id=42)</code> is a member of project "targetProject", and that the attacker has access to another project "attackerProject" with the private code "attackerPassword".  The attacker can modify <code>Person(id=42)</code> with this command:</p>
<p>  $ curl -X PUT -d "name=Pwn3d&amp;activated=1" --basic -u attackerProject:attackerPassword http://$SERVER/api/projects/attackerProject/members/42</p>
<p>The attacker can now see, edit and delete bills paid by <code>Person(id=42)</code> by simply browsing to http://$SERVER/attackerProject/</p>
</li>
<li><p>Editing a member through the web interface at <code>/&lt;project&gt;/members/&lt;personID&gt;/edit</code> will succeed even though <code>&lt;personID&gt;</code> is not a member of <code>&lt;project&gt;</code>.</p>
<p>This is very similar to the PUT exploit.  Reusing the same example, the attacker needs to login to its "attackerProject" project with the private code "attackerPassword".  It can then alter the state of <code>Person(id=42)</code> by accessing the edit form at the following URL:</p>
<p>  http://$SERVER/attackerProject/members/42/edit</p>
<p>Again, as a result of the alteration, the altered member will become associated to the project "attackerProject", resulting in the same information disclosure and loss of integrity on bills.</p>
</li>
<li><p>API: DELETE requests to <code>/api/projects/&lt;project&gt;/members/&lt;personID&gt;</code> will similarly allow to delete the member <code>&lt;personID&gt;</code> even if it belongs to a different project than <code>&lt;project&gt;</code>.</p>
<p>  $ curl -X DELETE --basic -u attackerProject:attackerPassword http://$SERVER/api/projects/attackerProject/members/42</p>
<p>The impact is less serious than with PUT, because DELETE only deactivates a member (it does not really delete it).</p>
</li>
</ol>
<p>All these exploits require authentication: an attacker needs to know a valid project name and its associated "private code".  Once this requirement is fullfilled, the attacker can exploit this flaw to alter the state of members in any other project, without needing to know the target project name or its private code.</p>
<p><code>Person.query.get_by_name()</code> suffers from the same issue as <code>Person.query.get()</code>.  It has an additional issue: if multiple Person objects with the same name exist (this is possible if they are associated to different projects), <code>get_by_name()</code> will crash with <code>MultipleResultsFound</code> because of the call to <code>one()</code>.</p>
<p>However, since <code>Person.query.get_by_name()</code> is currently not used anywhere in IHateMoney, the bug affecting this function has no impact and is not exploitable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiral-project/ihatemoney/security/advisories/GHSA-67j9-c52g-w2q9">https://github.com/spiral-project/ihatemoney/security/advisories/GHSA-67j9-c52g-w2q9</a></li>
<li><a href="https://github.com/spiral-project/ihatemoney/commit/8d77cf5d5646e1d2d8ded13f0660638f57e98471">https://github.com/spiral-project/ihatemoney/commit/8d77cf5d5646e1d2d8ded13f0660638f57e98471</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15120">https://nvd.nist.gov/vuln/detail/CVE-2020-15120</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ihatemoney/PYSEC-2020-264.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ihatemoney/PYSEC-2020-264.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-67j9-c52g-w2q9">https://github.com/advisories/GHSA-67j9-c52g-w2q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67j9-c52g-w2q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-07-27T17:47:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ipython] Improper Neutralization of Input During Web Page Generation in IPython]]></title>
        <id>https://github.com/advisories/GHSA-q326-jhw3-699g</id>
        <link href="https://github.com/advisories/GHSA-q326-jhw3-699g"/>
        <updated>2024-09-23T16:46:29.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in IPython 3.x before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/contents path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-4706">https://nvd.nist.gov/vuln/detail/CVE-2015-4706</a></li>
<li><a href="https://github.com/ipython/ipython/commit/7222bd53ad089a65fd610fab4626f9d0ab47dfce">https://github.com/ipython/ipython/commit/7222bd53ad089a65fd610fab4626f9d0ab47dfce</a></li>
<li><a href="https://github.com/ipython/ipython/commit/c2078a53543ed502efd968649fee1125e0eb549c">https://github.com/ipython/ipython/commit/c2078a53543ed502efd968649fee1125e0eb549c</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1235688">https://bugzilla.redhat.com/show_bug.cgi?id=1235688</a></li>
<li><a href="https://ipython.org/ipython-doc/3/whatsnew/version3.html">https://ipython.org/ipython-doc/3/whatsnew/version3.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/06/22/7">http://www.openwall.com/lists/oss-security/2015/06/22/7</a></li>
<li><a href="https://github.com/advisories/GHSA-q326-jhw3-699g">https://github.com/advisories/GHSA-q326-jhw3-699g</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2017-45.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2017-45.yaml</a></li>
<li><a href="https://web.archive.org/web/20200516112656/http://www.securityfocus.com/bid/75328">https://web.archive.org/web/20200516112656/http://www.securityfocus.com/bid/75328</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q326-jhw3-699g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:36:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ipython] Improper Neutralization of Input During Web Page Generation in Jupyter Notebook]]></title>
        <id>https://github.com/advisories/GHSA-4vwq-x64q-j4cj</id>
        <link href="https://github.com/advisories/GHSA-4vwq-x64q-j4cj"/>
        <updated>2024-09-23T16:44:05.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6938">https://nvd.nist.gov/vuln/detail/CVE-2015-6938</a></li>
<li><a href="https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892">https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892</a></li>
<li><a href="https://github.com/jupyter/notebook/commit/35f32dd2da804d108a3a3585b69ec3295b2677ed">https://github.com/jupyter/notebook/commit/35f32dd2da804d108a3a3585b69ec3295b2677ed</a></li>
<li><a href="https://github.com/jupyter/notebook/commit/dd9876381f0ef09873d8c5f6f2063269172331e3">https://github.com/jupyter/notebook/commit/dd9876381f0ef09873d8c5f6f2063269172331e3</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1259405">https://bugzilla.redhat.com/show_bug.cgi?id=1259405</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166460.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166460.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166471.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166471.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/167670.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/167670.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00016.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00016.html</a></li>
<li><a href="http://seclists.org/oss-sec/2015/q3/474">http://seclists.org/oss-sec/2015/q3/474</a></li>
<li><a href="http://seclists.org/oss-sec/2015/q3/544">http://seclists.org/oss-sec/2015/q3/544</a></li>
<li><a href="https://github.com/advisories/GHSA-4vwq-x64q-j4cj">https://github.com/advisories/GHSA-4vwq-x64q-j4cj</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2015-24.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2015-24.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2015-26.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2015-26.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vwq-x64q-j4cj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:04:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[notebook] Improper Neutralization of Input During Web Page Generation in Jupyter Notebook]]></title>
        <id>https://github.com/advisories/GHSA-4vwq-x64q-j4cj</id>
        <link href="https://github.com/advisories/GHSA-4vwq-x64q-j4cj"/>
        <updated>2024-09-23T16:44:05.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the file browser in notebook/notebookapp.py in IPython Notebook before 3.2.2 and Jupyter Notebook 4.0.x before 4.0.5 allows remote attackers to inject arbitrary web script or HTML via a folder name.  NOTE: this was originally reported as a cross-site request forgery (CSRF) vulnerability, but this may be inaccurate.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-6938">https://nvd.nist.gov/vuln/detail/CVE-2015-6938</a></li>
<li><a href="https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892">https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892</a></li>
<li><a href="https://github.com/jupyter/notebook/commit/35f32dd2da804d108a3a3585b69ec3295b2677ed">https://github.com/jupyter/notebook/commit/35f32dd2da804d108a3a3585b69ec3295b2677ed</a></li>
<li><a href="https://github.com/jupyter/notebook/commit/dd9876381f0ef09873d8c5f6f2063269172331e3">https://github.com/jupyter/notebook/commit/dd9876381f0ef09873d8c5f6f2063269172331e3</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1259405">https://bugzilla.redhat.com/show_bug.cgi?id=1259405</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166460.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166460.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166471.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/166471.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-September/167670.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-September/167670.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00016.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00016.html</a></li>
<li><a href="http://seclists.org/oss-sec/2015/q3/474">http://seclists.org/oss-sec/2015/q3/474</a></li>
<li><a href="http://seclists.org/oss-sec/2015/q3/544">http://seclists.org/oss-sec/2015/q3/544</a></li>
<li><a href="https://github.com/advisories/GHSA-4vwq-x64q-j4cj">https://github.com/advisories/GHSA-4vwq-x64q-j4cj</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2015-24.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2015-24.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2015-26.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/notebook/PYSEC-2015-26.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vwq-x64q-j4cj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:04:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[HyperKitty] Exposure of sensitive information to an unauthorized actor in HyperKitty]]></title>
        <id>https://github.com/advisories/GHSA-h39g-q63v-4h9p</id>
        <link href="https://github.com/advisories/GHSA-h39g-q63v-4h9p"/>
        <updated>2024-09-23T16:25:28.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in management/commands/hyperkitty_import.py in HyperKitty prior to 1.3.5. When importing a private mailing list's archives, these archives are publicly visible for the duration of the import. For example, sensitive information might be available on the web for an hour during a large migration from Mailman 2 to Mailman 3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33038">https://nvd.nist.gov/vuln/detail/CVE-2021-33038</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/commit/9025324597d60b2dff740e49b70b15589d6804fa">https://gitlab.com/mailman/hyperkitty/-/commit/9025324597d60b2dff740e49b70b15589d6804fa</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/issues/380">https://gitlab.com/mailman/hyperkitty/-/issues/380</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4922">https://www.debian.org/security/2021/dsa-4922</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/blob/master/doc/news.rst#L83-L87">https://gitlab.com/mailman/hyperkitty/-/blob/master/doc/news.rst#L83-L87</a></li>
<li><a href="https://github.com/advisories/GHSA-h39g-q63v-4h9p">https://github.com/advisories/GHSA-h39g-q63v-4h9p</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/hyperkitty/PYSEC-2021-77.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/hyperkitty/PYSEC-2021-77.yaml</a></li>
<li><a href="https://techblog.wikimedia.org/2021/06/11/discovering-and-fixing-cve-2021-33038-in-mailman3">https://techblog.wikimedia.org/2021/06/11/discovering-and-fixing-cve-2021-33038-in-mailman3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h39g-q63v-4h9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-01T21:56:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[indy-node] Indy's NODE_UPGRADE transaction vulnerable to remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-r6v9-p59m-gj2p</id>
        <link href="https://github.com/advisories/GHSA-r6v9-p59m-gj2p"/>
        <updated>2024-09-23T16:24:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>pool-upgrade</code> request handler in Indy-Node <code>&lt;=1.12.4</code> allows an improperly authenticated attacker to remotely execute code on nodes within the network.</p>
<p>Network operators are strongly encouraged to upgrade to the latest Indy-Node release <code>&gt;=1.12.5</code> as soon as possible.</p>
<h3 id="patches">Patches</h3>
<p>The <code>pool-upgrade</code> request handler in Indy-Node <code>&gt;=1.12.5</code> has been updated to properly authenticate <code>pool-upgrade</code> transactions before any processing is performed by the request handler.  The transactions are further sanitized to prevent remote code execution.</p>
<h3 id="mitigations">Mitigations</h3>
<p>Network operators are strongly encouraged to upgrade to the latest Indy-Node release <code>&gt;=1.12.5</code> as soon as possible.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Thank you to @shakreiner at CyberArk Labs for finding and responsibly disclosing this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/hyperledger/indy-node/security/advisories/GHSA-r6v9-p59m-gj2p">https://github.com/hyperledger/indy-node/security/advisories/GHSA-r6v9-p59m-gj2p</a></li>
<li><a href="https://github.com/hyperledger/indy-node/commit/fe507474f77084faef4539101e2bbb4d508a97f5">https://github.com/hyperledger/indy-node/commit/fe507474f77084faef4539101e2bbb4d508a97f5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31020">https://nvd.nist.gov/vuln/detail/CVE-2022-31020</a></li>
<li><a href="https://github.com/hyperledger/indy-node/releases/tag/v1.12.5">https://github.com/hyperledger/indy-node/releases/tag/v1.12.5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/indy-node/PYSEC-2022-265.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/indy-node/PYSEC-2022-265.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r6v9-p59m-gj2p">https://github.com/advisories/GHSA-r6v9-p59m-gj2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6v9-p59m-gj2p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-02T21:55:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[httplib2] Regular Expression Denial of Service (REDoS) in httplib2]]></title>
        <id>https://github.com/advisories/GHSA-93xj-8mrv-444m</id>
        <link href="https://github.com/advisories/GHSA-93xj-8mrv-444m"/>
        <updated>2024-09-23T16:13:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious server which responds with long series of <code>\xa0</code> characters in the <code>www-authenticate</code> header may cause Denial of Service (CPU burn while parsing header) of the httplib2 client accessing said server.</p>
<h3 id="patches">Patches</h3>
<p>Version 0.19.0 contains new implementation of auth headers parsing, using pyparsing library.
<a href="https://github.com/httplib2/httplib2/pull/182">https://github.com/httplib2/httplib2/pull/182</a></p>
<h3 id="workarounds">Workarounds</h3>
<pre><code class="language-py">import httplib2
httplib2.USE_WWW_AUTH_STRICT_PARSING = True
</code></pre>
<h3 id="technical-details">Technical Details</h3>
<p>The vulnerable regular expression is <a href="https://github.com/httplib2/httplib2/blob/595e248d0958c00e83cb28f136a2a54772772b50/python3/httplib2/__init__.py#L336-L338">https://github.com/httplib2/httplib2/blob/595e248d0958c00e83cb28f136a2a54772772b50/python3/httplib2/__init__.py#L336-L338</a></p>
<p>The section before the equals sign contains multiple overlapping groups. Ignoring the optional part containing a comma, we have:</p>
<pre><code>\s*[^ \t\r\n=]+\s*=
</code></pre>
<p>Since all three infinitely repeating groups accept the non-breaking space character <code>\xa0</code>, a long string of <code>\xa0</code> causes catastrophic backtracking.</p>
<p>The complexity is cubic, so doubling the length of the malicious string of <code>\xa0</code> makes processing take 8 times as long.</p>
<h3 id="reproduction-steps">Reproduction Steps</h3>
<p>Run a malicious server which responds with</p>
<pre><code>www-authenticate: x \xa0\xa0\xa0\xa0x
</code></pre>
<p>but with many more <code>\xa0</code> characters.</p>
<p>An example malicious python server is below:</p>
<pre><code class="language-py">from http.server import BaseHTTPRequestHandler, HTTPServer

def make_header_value(n_spaces):
    repeat = "\xa0" * n_spaces
    return f"x {repeat}x"

class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.log_request(401)
        self.send_response_only(401)  # Don't bother sending Server and Date
        n_spaces = (
            int(self.path[1:])  # Can GET e.g. /100 to test shorter sequences
            if len(self.path) &gt; 1 else
            65512  # Max header line length 65536
        )
        value = make_header_value(n_spaces)
        self.send_header("www-authenticate", value)  # This header can actually be sent multiple times
        self.end_headers()

if __name__ == "__main__":
    HTTPServer(("", 1337), Handler).serve_forever()
</code></pre>
<p>Connect to the server with httplib2:</p>
<pre><code class="language-py">import httplib2
httplib2.Http(".cache").request("http://localhost:1337", "GET")
</code></pre>
<p>To benchmark performance with shorter strings, you can set the path to a number e.g. <a href="http://localhost:1337/1000">http://localhost:1337/1000</a></p>
<h3 id="references">References</h3>
<p>Thanks to <a href="https://github.com/b-c-ds">Ben Caller</a> (<a href="https://doyensec.com">Doyensec</a>) for finding vulnerability and discrete notification.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/httplib2/httplib2/issues/new">httplib2</a></li>
<li>Email <a href="mailto:temotor@gmail.com">current maintainer at 2021-01</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/httplib2/httplib2/security/advisories/GHSA-93xj-8mrv-444m">https://github.com/httplib2/httplib2/security/advisories/GHSA-93xj-8mrv-444m</a></li>
<li><a href="https://github.com/httplib2/httplib2/pull/182">https://github.com/httplib2/httplib2/pull/182</a></li>
<li><a href="https://github.com/httplib2/httplib2/commit/bd9ee252c8f099608019709e22c0d705e98d26bc">https://github.com/httplib2/httplib2/commit/bd9ee252c8f099608019709e22c0d705e98d26bc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21240">https://nvd.nist.gov/vuln/detail/CVE-2021-21240</a></li>
<li><a href="https://pypi.org/project/httplib2">https://pypi.org/project/httplib2</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/httplib2/PYSEC-2021-16.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/httplib2/PYSEC-2021-16.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-93xj-8mrv-444m">https://github.com/advisories/GHSA-93xj-8mrv-444m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93xj-8mrv-444m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-02-08T19:41:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-records] Cross-site scripting invenio-records]]></title>
        <id>https://github.com/advisories/GHSA-vxh3-mvv7-265j</id>
        <link href="https://github.com/advisories/GHSA-vxh3-mvv7-265j"/>
        <updated>2024-09-23T16:09:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="cross-site-scripting-xss-vulnerability-in-administration-interface">Cross-Site Scripting (XSS) vulnerability in administration interface</h2>
<h3 id="impact">Impact</h3>
<p>A Cross-Site Scripting (XSS) vulnerability was discovered when rendering JSON for a record in the administration interface. The vulnerability could be exploited by e.g. a user who had access to upload a new record, that an admin user would then later view in the admin interface.</p>
<h3 id="patches">Patches</h3>
<p>All supported versions of Invenio-Records have been patched. You should upgrade to either v1.0.1, v1.1.1 or v1.2.2</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:info@inveniosoftware.org">info@inveniosoftware.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j">https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1020003">https://nvd.nist.gov/vuln/detail/CVE-2019-1020003</a></li>
<li><a href="https://github.com/advisories/GHSA-vxh3-mvv7-265j">https://github.com/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxh3-mvv7-265j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-07-16T00:52:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-records] Cross-site scripting invenio-records]]></title>
        <id>https://github.com/advisories/GHSA-vxh3-mvv7-265j</id>
        <link href="https://github.com/advisories/GHSA-vxh3-mvv7-265j"/>
        <updated>2024-09-23T16:09:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="cross-site-scripting-xss-vulnerability-in-administration-interface">Cross-Site Scripting (XSS) vulnerability in administration interface</h2>
<h3 id="impact">Impact</h3>
<p>A Cross-Site Scripting (XSS) vulnerability was discovered when rendering JSON for a record in the administration interface. The vulnerability could be exploited by e.g. a user who had access to upload a new record, that an admin user would then later view in the admin interface.</p>
<h3 id="patches">Patches</h3>
<p>All supported versions of Invenio-Records have been patched. You should upgrade to either v1.0.1, v1.1.1 or v1.2.2</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:info@inveniosoftware.org">info@inveniosoftware.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j">https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1020003">https://nvd.nist.gov/vuln/detail/CVE-2019-1020003</a></li>
<li><a href="https://github.com/advisories/GHSA-vxh3-mvv7-265j">https://github.com/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxh3-mvv7-265j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-07-16T00:52:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-records] Cross-site scripting invenio-records]]></title>
        <id>https://github.com/advisories/GHSA-vxh3-mvv7-265j</id>
        <link href="https://github.com/advisories/GHSA-vxh3-mvv7-265j"/>
        <updated>2024-09-23T16:09:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="cross-site-scripting-xss-vulnerability-in-administration-interface">Cross-Site Scripting (XSS) vulnerability in administration interface</h2>
<h3 id="impact">Impact</h3>
<p>A Cross-Site Scripting (XSS) vulnerability was discovered when rendering JSON for a record in the administration interface. The vulnerability could be exploited by e.g. a user who had access to upload a new record, that an admin user would then later view in the admin interface.</p>
<h3 id="patches">Patches</h3>
<p>All supported versions of Invenio-Records have been patched. You should upgrade to either v1.0.1, v1.1.1 or v1.2.2</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:info@inveniosoftware.org">info@inveniosoftware.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j">https://github.com/inveniosoftware/invenio-records/security/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1020003">https://nvd.nist.gov/vuln/detail/CVE-2019-1020003</a></li>
<li><a href="https://github.com/advisories/GHSA-vxh3-mvv7-265j">https://github.com/advisories/GHSA-vxh3-mvv7-265j</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-records/PYSEC-2019-27.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vxh3-mvv7-265j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-07-16T00:52:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ipython] Improper Neutralization of Input During Web Page Generation in IPython]]></title>
        <id>https://github.com/advisories/GHSA-66gw-5xpf-gfp5</id>
        <link href="https://github.com/advisories/GHSA-66gw-5xpf-gfp5"/>
        <updated>2024-09-23T16:09:37.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the /api/notebooks path.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-4707">https://nvd.nist.gov/vuln/detail/CVE-2015-4707</a></li>
<li><a href="https://github.com/ipython/ipython/commit/7222bd53ad089a65fd610fab4626f9d0ab47dfce">https://github.com/ipython/ipython/commit/7222bd53ad089a65fd610fab4626f9d0ab47dfce</a></li>
<li><a href="https://github.com/ipython/ipython/commit/c2078a53543ed502efd968649fee1125e0eb549c">https://github.com/ipython/ipython/commit/c2078a53543ed502efd968649fee1125e0eb549c</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1235688">https://bugzilla.redhat.com/show_bug.cgi?id=1235688</a></li>
<li><a href="https://ipython.org/ipython-doc/3/whatsnew/version3.html">https://ipython.org/ipython-doc/3/whatsnew/version3.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/06/22/7">http://www.openwall.com/lists/oss-security/2015/06/22/7</a></li>
<li><a href="https://github.com/advisories/GHSA-66gw-5xpf-gfp5">https://github.com/advisories/GHSA-66gw-5xpf-gfp5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2017-46.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ipython/PYSEC-2017-46.yaml</a></li>
<li><a href="https://web.archive.org/web/20200227150022/https://www.securityfocus.com/bid/75328">https://web.archive.org/web/20200227150022/https://www.securityfocus.com/bid/75328</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66gw-5xpf-gfp5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-13T01:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-app-rdm] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-rdm-records] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-drafts-resources] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-rdm-records] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-app-rdm] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-drafts-resources] Permissions not properly checked in Invenio-Drafts-Resources]]></title>
        <id>https://github.com/advisories/GHSA-xr38-w74q-r8jv</id>
        <link href="https://github.com/advisories/GHSA-xr38-w74q-r8jv"/>
        <updated>2024-09-23T16:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Invenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. <em>cannot</em> change a record from restricted to public.</p>
<h3 id="details">Details</h3>
<p>The service's <code>publish()</code> method contains the following permission check:</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish")
</code></pre>
<p>However, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.</p>
<pre><code class="language-python">def publish(..):
    self.require_permission(identity, "publish", record=record)
</code></pre>
<p>The bug is activated in Invenio-RDM-Records which has a need generator called <code>RecordOwners()</code>, which when no record is passed in defaults to allow any authenticated user:</p>
<pre><code class="language-python">class RecordOwners(Generator):
    def needs(self, record=None, **kwargs):
        if record is None:
            return [authenticated_user]
    # ...
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.</p>
<p>You can verify the version installed of Invenio-Drafts-Resources via PIP:</p>
<pre><code class="language-console">cd ~/src/my-site
pipenv run pip freeze | grep invenio-drafts-resources
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://invenio.readthedocs.io/en/latest/community/security-policy.html">Security policy</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Chat with us on Discord: <a href="https://discord.gg/8qatqBC">https://discord.gg/8qatqBC</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv">https://github.com/inveniosoftware/invenio-drafts-resources/security/advisories/GHSA-xr38-w74q-r8jv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43781">https://nvd.nist.gov/vuln/detail/CVE-2021-43781</a></li>
<li><a href="https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626">https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app-rdm/PYSEC-2021-837.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-drafts-resources/PYSEC-2021-836.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr38-w74q-r8jv">https://github.com/advisories/GHSA-xr38-w74q-r8jv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr38-w74q-r8jv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-06T23:57:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-app] Invenio-App vulnerable to host header injection attack]]></title>
        <id>https://github.com/advisories/GHSA-94mf-xfg5-r247</id>
        <link href="https://github.com/advisories/GHSA-94mf-xfg5-r247"/>
        <updated>2024-09-23T16:00:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="app_allowed_hosts-not-always-preventing-host-header-injection">APP_ALLOWED_HOSTS not always preventing host header injection</h2>
<h3 id="impact">Impact</h3>
<p>A possible host header injection attack have been identified in Invenio-App.  For an attack to be possible, all conditions below must be met:</p>
<ol>
<li>Your webserver must have been configured to route all requests to your application. </li>
<li>You must have relied on <code>APP_ALLOWED_HOSTS</code> configuration variable to whitelist allowed host headers.</li>
<li>Flask's <code>request.host</code> must not have been evaluated during request handling.</li>
</ol>
<p>An example of a view which does not evalute <code>request.host</code> is a simple view using just <code>url_for</code> to generate an external URL (similar is possible when rendering just a Jinja template):</p>
<pre><code class="language-python">@app.route('/')
def index():
    return url_for('index_url', _external=True)
</code></pre>
<p>This happens, because Werkzeug's trusted host feature, which <code>APP_ALLOWED_HOSTS</code> rely on, does not check the the list of trusted hosts in it's routing system that <code>url_for</code> is relying on.</p>
<h3 id="patches">Patches</h3>
<p>Invenio-App v1.0.6 and v1.1.1 fully fix the issue. </p>
<p>Note, we strongly recommend (see <a href="https://invenio.readthedocs.io/en/latest/deployment/securing-your-instance.html#allowed-hosts">Securing your instance</a>) that you never route requests to your application with a wrong host header.  The <code>APP_ALLOWED_HOSTS</code> configuration variable exists as an extra protective measure because it is easy to misconfigure your web server to allow requests with any host header. </p>
<h3 id="workaround-1---configure-your-webserver">Workaround 1 - Configure your webserver</h3>
<p>You should ensure that you never route requests with a wrong host header to your application. The workaround depends on which web server you are using to proxy requests to your application. In general it involves ensuring that the web server has two virtual hosts defined:</p>
<ol>
<li><strong>Default virtual host</strong>: a dummy default virtual host that by default is used unless the webserver can match the host header to another virtual host (i.e. a catch-all).</li>
<li><strong>Application virtual host</strong>: the application virtual host responsible for proxing requests to the application, and configured to only reply to a whitelist of host headers.</li>
</ol>
<p>Note, for instance in Nginx if you only configure the application virtual host, by default, it will also act as the default virtual host despite you having configured a whitelist of host headers.</p>
<p>Below is an example for Nginx. Note for clarity we have only included the virtual host for port 443, but this also extends to virtual hosts running on any other port.</p>
<pre><code># etc/nginx/nginx.conf
http {
  # ...
  include /etc/nginx/conf.d/*.conf;
}
</code></pre>
<p><strong>Default virtual host</strong></p>
<p>Notice, the <code>server_name</code> is <code>_</code> and the <code>listen</code> directive has it marked as <code>default_server</code>.</p>
<pre><code># etc/nginx/conf.d/default.conf
server {
  listen 443 default_server;
  listen [::]:443 default_server;
  server_name _;

  # ... 

  return 301 https://www.example.com;
}
</code></pre>
<p><strong>Application virtual host</strong></p>
<p>Notice, the <code>server_name</code> is set to the host header whitelist.</p>
<pre><code># etc/nginx/conf.d/app.conf
server {
  listen 443;
  listen [::]:443;
  server_name www.example.com;

  # ...
}
</code></pre>
<h3 id="workaround-2---include-application-snippet">Workaround 2 - Include application snippet</h3>
<p>We strongly recommend that you use the method described in Workaround 1.</p>
<p>If you are not able to upgrade to the patched versions of Invenio-App, you can include the following code snippet in your application to force evaluation of <code>request.hosts</code>.</p>
<pre><code class="language-python">@app.before_request
def before_request():
    request.host
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:info@inveniosoftware.org">info@inveniosoftware.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-app/security/advisories/GHSA-94mf-xfg5-r247">https://github.com/inveniosoftware/invenio-app/security/advisories/GHSA-94mf-xfg5-r247</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1020006">https://nvd.nist.gov/vuln/detail/CVE-2019-1020006</a></li>
<li><a href="https://github.com/advisories/GHSA-94mf-xfg5-r247">https://github.com/advisories/GHSA-94mf-xfg5-r247</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app/PYSEC-2019-24.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app/PYSEC-2019-24.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94mf-xfg5-r247</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-07-16T00:52:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[invenio-app] Invenio-App vulnerable to host header injection attack]]></title>
        <id>https://github.com/advisories/GHSA-94mf-xfg5-r247</id>
        <link href="https://github.com/advisories/GHSA-94mf-xfg5-r247"/>
        <updated>2024-09-23T16:00:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="app_allowed_hosts-not-always-preventing-host-header-injection">APP_ALLOWED_HOSTS not always preventing host header injection</h2>
<h3 id="impact">Impact</h3>
<p>A possible host header injection attack have been identified in Invenio-App.  For an attack to be possible, all conditions below must be met:</p>
<ol>
<li>Your webserver must have been configured to route all requests to your application. </li>
<li>You must have relied on <code>APP_ALLOWED_HOSTS</code> configuration variable to whitelist allowed host headers.</li>
<li>Flask's <code>request.host</code> must not have been evaluated during request handling.</li>
</ol>
<p>An example of a view which does not evalute <code>request.host</code> is a simple view using just <code>url_for</code> to generate an external URL (similar is possible when rendering just a Jinja template):</p>
<pre><code class="language-python">@app.route('/')
def index():
    return url_for('index_url', _external=True)
</code></pre>
<p>This happens, because Werkzeug's trusted host feature, which <code>APP_ALLOWED_HOSTS</code> rely on, does not check the the list of trusted hosts in it's routing system that <code>url_for</code> is relying on.</p>
<h3 id="patches">Patches</h3>
<p>Invenio-App v1.0.6 and v1.1.1 fully fix the issue. </p>
<p>Note, we strongly recommend (see <a href="https://invenio.readthedocs.io/en/latest/deployment/securing-your-instance.html#allowed-hosts">Securing your instance</a>) that you never route requests to your application with a wrong host header.  The <code>APP_ALLOWED_HOSTS</code> configuration variable exists as an extra protective measure because it is easy to misconfigure your web server to allow requests with any host header. </p>
<h3 id="workaround-1---configure-your-webserver">Workaround 1 - Configure your webserver</h3>
<p>You should ensure that you never route requests with a wrong host header to your application. The workaround depends on which web server you are using to proxy requests to your application. In general it involves ensuring that the web server has two virtual hosts defined:</p>
<ol>
<li><strong>Default virtual host</strong>: a dummy default virtual host that by default is used unless the webserver can match the host header to another virtual host (i.e. a catch-all).</li>
<li><strong>Application virtual host</strong>: the application virtual host responsible for proxing requests to the application, and configured to only reply to a whitelist of host headers.</li>
</ol>
<p>Note, for instance in Nginx if you only configure the application virtual host, by default, it will also act as the default virtual host despite you having configured a whitelist of host headers.</p>
<p>Below is an example for Nginx. Note for clarity we have only included the virtual host for port 443, but this also extends to virtual hosts running on any other port.</p>
<pre><code># etc/nginx/nginx.conf
http {
  # ...
  include /etc/nginx/conf.d/*.conf;
}
</code></pre>
<p><strong>Default virtual host</strong></p>
<p>Notice, the <code>server_name</code> is <code>_</code> and the <code>listen</code> directive has it marked as <code>default_server</code>.</p>
<pre><code># etc/nginx/conf.d/default.conf
server {
  listen 443 default_server;
  listen [::]:443 default_server;
  server_name _;

  # ... 

  return 301 https://www.example.com;
}
</code></pre>
<p><strong>Application virtual host</strong></p>
<p>Notice, the <code>server_name</code> is set to the host header whitelist.</p>
<pre><code># etc/nginx/conf.d/app.conf
server {
  listen 443;
  listen [::]:443;
  server_name www.example.com;

  # ...
}
</code></pre>
<h3 id="workaround-2---include-application-snippet">Workaround 2 - Include application snippet</h3>
<p>We strongly recommend that you use the method described in Workaround 1.</p>
<p>If you are not able to upgrade to the patched versions of Invenio-App, you can include the following code snippet in your application to force evaluation of <code>request.hosts</code>.</p>
<pre><code class="language-python">@app.before_request
def before_request():
    request.host
</code></pre>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:info@inveniosoftware.org">info@inveniosoftware.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/inveniosoftware/invenio-app/security/advisories/GHSA-94mf-xfg5-r247">https://github.com/inveniosoftware/invenio-app/security/advisories/GHSA-94mf-xfg5-r247</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-1020006">https://nvd.nist.gov/vuln/detail/CVE-2019-1020006</a></li>
<li><a href="https://github.com/advisories/GHSA-94mf-xfg5-r247">https://github.com/advisories/GHSA-94mf-xfg5-r247</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app/PYSEC-2019-24.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/invenio-app/PYSEC-2019-24.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-94mf-xfg5-r247</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-07-16T00:52:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[indy-node] Uncontrolled Resource Consumption in Indy Node]]></title>
        <id>https://github.com/advisories/GHSA-3gw4-m5w7-v89c</id>
        <link href="https://github.com/advisories/GHSA-3gw4-m5w7-v89c"/>
        <updated>2024-09-23T15:59:17.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>Indy Node has a bug in TAA handling code. The current primary can be crashed with a malformed transaction from a client, which leads to a view change. Repeated rapid view changes have the potential of bringing down the network.</p>
<h1 id="discovery">Discovery</h1>
<p>On May 18, Evernym's monitoring of Sovrin StagingNet showed a report of StagingNet losing sufficient consensus to validate write transactions. The problem resolved itself within a few minutes. On May 20th we saw the alert multiple times, and we began analyzing the logs of our steward node. On May 21st we continued to see the alerts with increasing frequency.</p>
<p>It appears that someone is unknowingly sending a malformed transaction, and retrying when the transaction fails. The cause of the errors appear to be the TAA acceptance.</p>
<h1 id="proposed-actions">Proposed actions</h1>
<ul>
<li>Reproduce problem in integration tests and create a fix</li>
<li>Do a hotfix release branching from last stable (current master have some things merged that are too risky)</li>
<li>Upgrade BuilderNet, StagingNet and MainNet as soon as possible</li>
<li>Improve testing strategy on Indy Node to reduce probability of such bugs</li>
</ul>
<h1 id="notes">Notes</h1>
<ul>
<li>The journalctl logs also show an out-of-memory problem on the Australia node. We need to evaluate if this should be raised as a separate issue.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/hyperledger/indy-node/security/advisories/GHSA-3gw4-m5w7-v89c">https://github.com/hyperledger/indy-node/security/advisories/GHSA-3gw4-m5w7-v89c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11090">https://nvd.nist.gov/vuln/detail/CVE-2020-11090</a></li>
<li><a href="https://github.com/hyperledger/indy-node/blob/master/CHANGELOG.md#1123">https://github.com/hyperledger/indy-node/blob/master/CHANGELOG.md#1123</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/indy-node/PYSEC-2020-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/indy-node/PYSEC-2020-47.yaml</a></li>
<li><a href="https://pypi.org/project/indy-node/1.12.3">https://pypi.org/project/indy-node/1.12.3</a></li>
<li><a href="https://github.com/advisories/GHSA-3gw4-m5w7-v89c">https://github.com/advisories/GHSA-3gw4-m5w7-v89c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gw4-m5w7-v89c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2020-06-11T00:04:15.000Z</published>
    </entry>
</feed>