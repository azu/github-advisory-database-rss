<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-11-08T05:01:26.602Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[jefferson] sviehb/jefferson vulnerable to path traversal]]></title>
        <id>https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</id>
        <link href="https://github.com/advisories/GHSA-7jrw-p8jc-v6qw"/>
        <updated>2023-11-07T23:14:25.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in the sviehb/jefferson JFFS2 filesystem extraction tool. This vulnerability affects unknown code of the file <code>src/scripts/jefferson</code>. The manipulation leads to path traversal. The attack can be initiated remotely. Upgrading to version 0.4 is able to address this issue as it includes <a href="https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87">https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4885">https://nvd.nist.gov/vuln/detail/CVE-2022-4885</a></li>
<li><a href="https://github.com/sviehb/jefferson/pull/36">https://github.com/sviehb/jefferson/pull/36</a></li>
<li><a href="https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87">https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87</a></li>
<li><a href="https://github.com/sviehb/jefferson/releases/tag/v0.4">https://github.com/sviehb/jefferson/releases/tag/v0.4</a></li>
<li><a href="https://vuldb.com/?ctiid.218020">https://vuldb.com/?ctiid.218020</a></li>
<li><a href="https://vuldb.com/?id.218020">https://vuldb.com/?id.218020</a></li>
<li><a href="https://github.com/advisories/GHSA-7jrw-p8jc-v6qw">https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-photologue] django-photologue vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-287q-jfcp-9vhv</id>
        <link href="https://github.com/advisories/GHSA-287q-jfcp-9vhv"/>
        <updated>2023-11-07T22:16:58.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in django-photologue up to 3.15.1 and classified as problematic. Affected by this issue is some unknown functionality of the file photologue/templates/photologue/photo_detail.html of the component Default Template Handler. The manipulation of the argument object.caption leads to cross site scripting. The attack may be launched remotely. Upgrading to version 3.16 is able to address this issue. The name of the patch is 960cb060ce5e2964e6d716ff787c72fc18a371e7. It is recommended to apply a patch to fix this issue. VDB-215906 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4526">https://nvd.nist.gov/vuln/detail/CVE-2022-4526</a></li>
<li><a href="https://github.com/richardbarran/django-photologue/issues/223">https://github.com/richardbarran/django-photologue/issues/223</a></li>
<li><a href="https://github.com/richardbarran/django-photologue/commit/960cb060ce5e2964e6d716ff787c72fc18a371e7">https://github.com/richardbarran/django-photologue/commit/960cb060ce5e2964e6d716ff787c72fc18a371e7</a></li>
<li><a href="https://vuldb.com/?id.215906">https://vuldb.com/?id.215906</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django-photologue/PYSEC-2022-43061.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django-photologue/PYSEC-2022-43061.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-287q-jfcp-9vhv">https://github.com/advisories/GHSA-287q-jfcp-9vhv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-287q-jfcp-9vhv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-15T21:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PaddlePaddle] PaddlePaddle vulnerable to Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-gcjf-29m9-888q</id>
        <link href="https://github.com/advisories/GHSA-gcjf-29m9-888q"/>
        <updated>2023-11-07T22:15:17.000Z</updated>
        <content type="html"><![CDATA[<p>Code injection in <code>paddle.audio.functional.get_window</code> in PaddlePaddle 2.4.0-rc0 allows arbitrary code execution. A <a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">patch</a> is available on the <code>develop</code> branch of the repository and anticipated to be part of a 2.4 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46742">https://nvd.nist.gov/vuln/detail/CVE-2022-46742</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/pull/47386">https://github.com/PaddlePaddle/Paddle/pull/47386</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gcjf-29m9-888q">https://github.com/advisories/GHSA-gcjf-29m9-888q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcjf-29m9-888q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-07T09:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mkdocs] Directory traversal in mkdocs]]></title>
        <id>https://github.com/advisories/GHSA-qh9q-34h6-hcv9</id>
        <link href="https://github.com/advisories/GHSA-qh9q-34h6-hcv9"/>
        <updated>2023-11-07T22:12:37.000Z</updated>
        <content type="html"><![CDATA[<p>The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40978">https://nvd.nist.gov/vuln/detail/CVE-2021-40978</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/issues/2601">https://github.com/mkdocs/mkdocs/issues/2601</a></li>
<li><a href="https://github.com/mkdocs/mkdocs">https://github.com/mkdocs/mkdocs</a></li>
<li><a href="https://github.com/nisdn/CVE-2021-40978/issues/1">https://github.com/nisdn/CVE-2021-40978/issues/1</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/pull/2604">https://github.com/mkdocs/mkdocs/pull/2604</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/releases/tag/1.2.3">https://github.com/mkdocs/mkdocs/releases/tag/1.2.3</a></li>
<li><a href="https://github.com/nisdn/CVE-2021-40978">https://github.com/nisdn/CVE-2021-40978</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b">https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qh9q-34h6-hcv9">https://github.com/advisories/GHSA-qh9q-34h6-hcv9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh9q-34h6-hcv9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T18:48:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Chameleon in Plone allows Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</id>
        <link href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9"/>
        <updated>2023-11-07T18:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>Chameleon (five.pt) in Plone 5.0rc1 through 5.1a1 allows remote authenticated users to bypass Restricted Python by leveraging permissions to create or edit templates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4043">https://nvd.nist.gov/vuln/detail/CVE-2016-4043</a></li>
<li><a href="https://plone.org/security/hotfix/20160419/bypass-restricted-python">https://plone.org/security/hotfix/20160419/bypass-restricted-python</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/04/20/3">http://www.openwall.com/lists/oss-security/2016/04/20/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9">https://github.com/advisories/GHSA-6h8x-73fx-q2h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:57:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Chameleon in Plone allows Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</id>
        <link href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9"/>
        <updated>2023-11-07T18:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>Chameleon (five.pt) in Plone 5.0rc1 through 5.1a1 allows remote authenticated users to bypass Restricted Python by leveraging permissions to create or edit templates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4043">https://nvd.nist.gov/vuln/detail/CVE-2016-4043</a></li>
<li><a href="https://plone.org/security/hotfix/20160419/bypass-restricted-python">https://plone.org/security/hotfix/20160419/bypass-restricted-python</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/04/20/3">http://www.openwall.com/lists/oss-security/2016/04/20/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9">https://github.com/advisories/GHSA-6h8x-73fx-q2h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:57:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] aiohttp.web.Application vulnerable to HTTP request smuggling via llhttp HTTP request parser]]></title>
        <id>https://github.com/advisories/GHSA-45c4-8wx5-qw6w</id>
        <link href="https://github.com/advisories/GHSA-45c4-8wx5-qw6w"/>
        <updated>2023-11-06T16:34:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>aiohttp v3.8.4 and earlier are <a href="https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules">bundled with llhttp v6.0.6</a> which is vulnerable to CVE-2023-30589. The vulnerable code is used by aiohttp for its HTTP request parser when available which is the default case when installing from a wheel.</p>
<p>This vulnerability only affects users of aiohttp as an HTTP server (ie <code>aiohttp.Application</code>), you are not affected by this vulnerability if you are using aiohttp as an HTTP client library (ie <code>aiohttp.ClientSession</code>).</p>
<h3 id="reproducer">Reproducer</h3>
<pre><code class="language-python">from aiohttp import web

async def example(request: web.Request):
    headers = dict(request.headers)
    body = await request.content.read()
    return web.Response(text=f"headers: {headers} body: {body}")

app = web.Application()
app.add_routes([web.post('/', example)])
web.run_app(app)
</code></pre>
<p>Sending a crafted HTTP request will cause the server to misinterpret one of the HTTP header values leading to HTTP request smuggling.</p>
<pre><code class="language-console">$ printf "POST / HTTP/1.1\r\nHost: localhost:8080\r\nX-Abc: \rxTransfer-Encoding: chunked\r\n\r\n1\r\nA\r\n0\r\n\r\n" \
  | nc localhost 8080

Expected output:
  headers: {'Host': 'localhost:8080', 'X-Abc': '\rxTransfer-Encoding: chunked'} body: b''

Actual output (note that 'Transfer-Encoding: chunked' is an HTTP header now and body is treated differently)
  headers: {'Host': 'localhost:8080', 'X-Abc': '', 'Transfer-Encoding': 'chunked'} body: b'A'
</code></pre>
<h3 id="patches">Patches</h3>
<p>Upgrade to the latest version of aiohttp to resolve this vulnerability. It has been fixed in v3.8.5: <a href="https://pypi.org/project/aiohttp/3.8.5/"><code>pip install aiohttp &gt;= 3.8.5</code></a></p>
<h3 id="workarounds">Workarounds</h3>
<p>If you aren't able to upgrade you can reinstall aiohttp using <code>AIOHTTP_NO_EXTENSIONS=1</code> as an environment variable to disable the llhttp HTTP request parser implementation. The pure Python implementation isn't vulnerable to request smuggling:</p>
<pre><code class="language-console">$ python -m pip uninstall --yes aiohttp
$ AIOHTTP_NO_EXTENSIONS=1 python -m pip install --no-binary=aiohttp --no-cache aiohttp
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30589">https://nvd.nist.gov/vuln/detail/CVE-2023-30589</a></li>
<li><a href="https://hackerone.com/reports/2001873">https://hackerone.com/reports/2001873</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37276">https://nvd.nist.gov/vuln/detail/CVE-2023-37276</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40">https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/9c13a52c21c23dfdb49ed89418d28a5b116d0681">https://github.com/aio-libs/aiohttp/commit/9c13a52c21c23dfdb49ed89418d28a5b116d0681</a></li>
<li><a href="https://hackerone.com/reports/2001873">https://hackerone.com/reports/2001873</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules">https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules</a></li>
<li><a href="https://github.com/aio-libs/aiohttp">https://github.com/aio-libs/aiohttp</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-120.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-120.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-45c4-8wx5-qw6w">https://github.com/advisories/GHSA-45c4-8wx5-qw6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45c4-8wx5-qw6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T14:52:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pillow] Pillow Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8ghj-p4vj-mr35</id>
        <link href="https://github.com/advisories/GHSA-8ghj-p4vj-mr35"/>
        <updated>2023-11-03T19:39:44.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44271">https://nvd.nist.gov/vuln/detail/CVE-2023-44271</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/7244">https://github.com/python-pillow/Pillow/pull/7244</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7">https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7</a></li>
<li><a href="https://devhub.checkmarx.com/cve-details/CVE-2023-44271/">https://devhub.checkmarx.com/cve-details/CVE-2023-44271/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2023-227.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2023-227.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8ghj-p4vj-mr35">https://github.com/advisories/GHSA-8ghj-p4vj-mr35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8ghj-p4vj-mr35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pip] Command Injection in pip when used with Mercurial]]></title>
        <id>https://github.com/advisories/GHSA-mq26-g339-26xf</id>
        <link href="https://github.com/advisories/GHSA-mq26-g339-26xf"/>
        <updated>2023-11-06T16:28:06.000Z</updated>
        <content type="html"><![CDATA[<p>When installing a package from a Mercurial VCS URL, e.g. <code>pip install hg+...</code>, with pip prior to v23.3, the specified Mercurial revision could be used to inject arbitrary configuration options to the <code>hg clone</code> call (e.g. <code>--config</code>). Controlling the Mercurial configuration can modify how and which repository is installed. This vulnerability does not affect users who aren't installing from Mercurial.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-5752">https://nvd.nist.gov/vuln/detail/CVE-2023-5752</a></li>
<li><a href="https://github.com/pypa/pip/pull/12306">https://github.com/pypa/pip/pull/12306</a></li>
<li><a href="https://mail.python.org/archives/list/security-announce@python.org/thread/F4PL35U6X4VVHZ5ILJU3PWUWN7H7LZXL/">https://mail.python.org/archives/list/security-announce@python.org/thread/F4PL35U6X4VVHZ5ILJU3PWUWN7H7LZXL/</a></li>
<li><a href="https://github.com/pypa/pip/commit/389cb799d0da9a840749fcd14878928467ed49b4">https://github.com/pypa/pip/commit/389cb799d0da9a840749fcd14878928467ed49b4</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pip/PYSEC-2023-228.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pip/PYSEC-2023-228.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-mq26-g339-26xf">https://github.com/advisories/GHSA-mq26-g339-26xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq26-g339-26xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-25T18:32:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[transmute-core] transmute-core unsafe YAML deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w9cp-3x79-2p8p</id>
        <link href="https://github.com/advisories/GHSA-w9cp-3x79-2p8p"/>
        <updated>2023-11-02T21:01:56.000Z</updated>
        <content type="html"><![CDATA[<p>Unsafe YAML deserialization in yaml.Loader in transmute-core before 1.13.5 allows attackers to execute arbitrary Python code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47204">https://nvd.nist.gov/vuln/detail/CVE-2023-47204</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/pull/58">https://github.com/toumorokoshi/transmute-core/pull/58</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/releases/tag/v1.13.5">https://github.com/toumorokoshi/transmute-core/releases/tag/v1.13.5</a></li>
<li><a href="https://github.com/toumorokoshi/transmute-core/commit/29bf82eb8ed9926d31eec90aec482ecc0dcb23f0">https://github.com/toumorokoshi/transmute-core/commit/29bf82eb8ed9926d31eec90aec482ecc0dcb23f0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/transmute-core/PYSEC-2023-223.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/transmute-core/PYSEC-2023-223.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-w9cp-3x79-2p8p">https://github.com/advisories/GHSA-w9cp-3x79-2p8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w9cp-3x79-2p8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone XSS]]></title>
        <id>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</id>
        <link href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc"/>
        <updated>2023-11-02T20:05:09.000Z</updated>
        <content type="html"><![CDATA[<p>z3c.form in Plone CMS 5.x through 5.0.6 and 4.x through 4.3.11 allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted GET request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-7136">https://nvd.nist.gov/vuln/detail/CVE-2016-7136</a></li>
<li><a href="https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms">https://plone.org/security/hotfix/20160830/non-persistent-xss-in-plone-forms</a></li>
<li><a href="http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html">http://packetstormsecurity.com/files/139110/Plone-CMS-4.3.11-5.0.6-XSS-Traversal-Open-Redirection.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2016/Oct/80">http://seclists.org/fulldisclosure/2016/Oct/80</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/4">http://www.openwall.com/lists/oss-security/2016/09/05/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/09/05/5">http://www.openwall.com/lists/oss-security/2016/09/05/5</a></li>
<li><a href="https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752">https://web.archive.org/web/20210625091607/http://www.securityfocus.com/bid/92752</a></li>
<li><a href="https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded">https://web.archive.org/web/20210625092107/http://www.securityfocus.com/archive/1/539572/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-22jm-p2vv-j2hc">https://github.com/advisories/GHSA-22jm-p2vv-j2hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22jm-p2vv-j2hc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:46:11.000Z</published>
    </entry>
</feed>