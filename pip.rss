<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-05-02T00:20:09.584Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[httpx] Improper Input Validation in httpx]]></title>
        <id>https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</id>
        <link href="https://github.com/advisories/GHSA-h8pj-cxx2-jfg2"/>
        <updated>2022-04-29T22:55:39.000Z</updated>
        <content type="html"><![CDATA[<p>Encode OSS httpx &lt;=1.0.0.beta0 is affected by improper input validation in <code>httpx.URL</code>, <code>httpx.Client</code> and some functions using <code>httpx.URL.copy_with</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41945">https://nvd.nist.gov/vuln/detail/CVE-2021-41945</a></li>
<li><a href="https://github.com/encode/httpx/issues/2184">https://github.com/encode/httpx/issues/2184</a></li>
<li><a href="https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571">https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571</a></li>
<li><a href="https://github.com/encode/httpx/discussions/1831">https://github.com/encode/httpx/discussions/1831</a></li>
<li><a href="https://github.com/encode/httpx/pull/2185">https://github.com/encode/httpx/pull/2185</a></li>
<li><a href="https://github.com/advisories/GHSA-h8pj-cxx2-jfg2">https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</uri>
        </author>
        <published>2022-04-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flask-session-captcha] Potential Captcha Validate Bypass in flask-session-captcha]]></title>
        <id>https://github.com/advisories/GHSA-7r87-cj48-wj45</id>
        <link href="https://github.com/advisories/GHSA-7r87-cj48-wj45"/>
        <updated>2022-04-27T18:18:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>flask-session-captcha is a package which allows users to extend Flask by adding an image based captcha stored in a server side session.</p>
<p>The <code>captcha.validate()</code> function would return <code>None</code> if passed no value (e.g. by submitting a request with an empty form).</p>
<p>If implementing users were checking the return value to be <strong>False</strong>, the captcha verification check could be bypassed.</p>
<p>Sample vulnerable code:</p>
<pre><code class="language-python">if captcha.validate() == False:
    ... # abort
else:
   ... # do stuff
</code></pre>
<h3 id="patches">Patches</h3>
<p>A new version (1.2.1) is available that fixes the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can workaround the issue by not explicitly checking that the value is False. </p>
<p>Checking the return value less explicitly should still work. </p>
<pre><code class="language-python">if not captcha.validate():
    ... # abort
else:
   ... # do stuff
</code></pre>
<pre><code class="language-python">if captcha.validate():
    ... # do stuff
else:
   ... # abort
</code></pre>
<h3 id="references">References</h3>
<p><a href="https://github.com/Tethik/flask-session-captcha/pull/27">https://github.com/Tethik/flask-session-captcha/pull/27</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/Tethik/flask-session-captcha">the github repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Tethik/flask-session-captcha/security/advisories/GHSA-7r87-cj48-wj45">https://github.com/Tethik/flask-session-captcha/security/advisories/GHSA-7r87-cj48-wj45</a></li>
<li><a href="https://github.com/Tethik/flask-session-captcha/pull/27">https://github.com/Tethik/flask-session-captcha/pull/27</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24880">https://nvd.nist.gov/vuln/detail/CVE-2022-24880</a></li>
<li><a href="https://github.com/Tethik/flask-session-captcha/commit/2811ae23a38d33b620fb7a07de8837c6d65c13e4">https://github.com/Tethik/flask-session-captcha/commit/2811ae23a38d33b620fb7a07de8837c6d65c13e4</a></li>
<li><a href="https://github.com/Tethik/flask-session-captcha/releases/tag/v1.2.1">https://github.com/Tethik/flask-session-captcha/releases/tag/v1.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-7r87-cj48-wj45">https://github.com/advisories/GHSA-7r87-cj48-wj45</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7r87-cj48-wj45</uri>
        </author>
        <published>2022-04-26T21:19:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[roundup] Multiple cross-site scripting (XSS) vulnerabilities in Roundup]]></title>
        <id>https://github.com/advisories/GHSA-5jq3-8437-x35p</id>
        <link href="https://github.com/advisories/GHSA-5jq3-8437-x35p"/>
        <updated>2022-04-26T20:47:41.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in Roundup before 1.4.20 allow remote attackers to inject arbitrary web script or HTML via the (1) @ok_message or (2) @error_message parameter to issue*.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2012-6133">https://nvd.nist.gov/vuln/detail/CVE-2012-6133</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=722672">https://bugzilla.redhat.com/show_bug.cgi?id=722672</a></li>
<li><a href="https://pypi.python.org/pypi/roundup/1.4.20">https://pypi.python.org/pypi/roundup/1.4.20</a></li>
<li><a href="http://issues.roundup-tracker.org/issue2550724">http://issues.roundup-tracker.org/issue2550724</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2012/11/10/2">http://www.openwall.com/lists/oss-security/2012/11/10/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/02/13/8">http://www.openwall.com/lists/oss-security/2013/02/13/8</a></li>
<li><a href="https://github.com/advisories/GHSA-5jq3-8437-x35p">https://github.com/advisories/GHSA-5jq3-8437-x35p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jq3-8437-x35p</uri>
        </author>
        <published>2022-04-23T00:40:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[markdown2] Cross-site scripting in markdown2 for python]]></title>
        <id>https://github.com/advisories/GHSA-72cx-5ff9-4hhc</id>
        <link href="https://github.com/advisories/GHSA-72cx-5ff9-4hhc"/>
        <updated>2022-04-26T20:29:03.000Z</updated>
        <content type="html"><![CDATA[<p>python-markdown2 before 1.0.1.14 has multiple cross-site scripting (XSS) issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-3724">https://nvd.nist.gov/vuln/detail/CVE-2009-3724</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2009/10/29/5">https://www.openwall.com/lists/oss-security/2009/10/29/5</a></li>
<li><a href="https://github.com/advisories/GHSA-72cx-5ff9-4hhc">https://github.com/advisories/GHSA-72cx-5ff9-4hhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72cx-5ff9-4hhc</uri>
        </author>
        <published>2022-04-21T01:54:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nltk] Inefficient Regular Expression in nltk]]></title>
        <id>https://github.com/advisories/GHSA-2ww3-fxvq-293j</id>
        <link href="https://github.com/advisories/GHSA-2ww3-fxvq-293j"/>
        <updated>2022-04-26T18:03:42.000Z</updated>
        <content type="html"><![CDATA[<p>nltk is contains an Inefficient Regular Expression and is vulnerable to regular expression denial of service attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3828">https://nvd.nist.gov/vuln/detail/CVE-2021-3828</a></li>
<li><a href="https://github.com/nltk/nltk/pull/2816">https://github.com/nltk/nltk/pull/2816</a></li>
<li><a href="https://github.com/nltk/nltk/commit/277711ab1dec729e626b27aab6fa35ea5efbd7e6">https://github.com/nltk/nltk/commit/277711ab1dec729e626b27aab6fa35ea5efbd7e6</a></li>
<li><a href="https://huntr.dev/bounties/d19aed43-75bc-4a03-91a0-4d0bb516bc32">https://huntr.dev/bounties/d19aed43-75bc-4a03-91a0-4d0bb516bc32</a></li>
<li><a href="https://github.com/advisories/GHSA-2ww3-fxvq-293j">https://github.com/advisories/GHSA-2ww3-fxvq-293j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2ww3-fxvq-293j</uri>
        </author>
        <published>2021-09-29T17:14:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible] OS Command Injection and Improper Input Validation in ansible]]></title>
        <id>https://github.com/advisories/GHSA-gwr8-5j83-483c</id>
        <link href="https://github.com/advisories/GHSA-gwr8-5j83-483c"/>
        <updated>2022-04-26T17:59:52.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the solaris_zone module from the Ansible Community modules. When setting the name for the zone on the Solaris host, the zone name is checked by listing the process with the 'ps' bare command on the remote machine. An attacker could take advantage of this flaw by crafting the name of the zone and executing arbitrary commands in the remote host. Ansible Engine 2.7.15, 2.8.7, and 2.9.2 as well as previous versions are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14904">https://nvd.nist.gov/vuln/detail/CVE-2019-14904</a></li>
<li><a href="https://github.com/ansible/ansible/pull/65686">https://github.com/ansible/ansible/pull/65686</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1776944">https://bugzilla.redhat.com/show_bug.cgi?id=1776944</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html">https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4950">https://www.debian.org/security/2021/dsa-4950</a></li>
<li><a href="https://github.com/advisories/GHSA-gwr8-5j83-483c">https://github.com/advisories/GHSA-gwr8-5j83-483c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwr8-5j83-483c</uri>
        </author>
        <published>2021-04-20T16:44:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Pillow] Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-f5g8-5qq7-938w</id>
        <link href="https://github.com/advisories/GHSA-f5g8-5qq7-938w"/>
        <updated>2022-04-25T23:38:57.000Z</updated>
        <content type="html"><![CDATA[<p>In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35653">https://nvd.nist.gov/vuln/detail/CVE-2020-35653</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD/</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/index.html">https://pillow.readthedocs.io/en/stable/releasenotes/index.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html">https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f5g8-5qq7-938w">https://github.com/advisories/GHSA-f5g8-5qq7-938w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5g8-5qq7-938w</uri>
        </author>
        <published>2021-03-18T19:55:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: Invalid whitespace characters in headers in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</id>
        <link href="https://github.com/advisories/GHSA-m5ff-3wj3-8ph4"/>
        <updated>2022-04-25T23:09:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.</p>
<pre><code>Content-Length: 10
Transfer-Encoding: [\x0b]chunked
</code></pre>
<p>For clarity:</p>
<pre><code>0x0b == vertical tab
</code></pre>
<p>Would get parsed by Waitress as being a <code>chunked</code> request, but a front-end server would use the <code>Content-Length</code> instead as the <code>Transfer-Encoding</code> header is considered invalid due to containing invalid characters.</p>
<p>If a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.</p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.</p>
<p>Waitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.</p>
<p>Waitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.</p>
<h3 id="references">References</h3>
<p>This was mentioned in <a href="https://portswigger.net/research/http-desync-attacks-what-happened-next">https://portswigger.net/research/http-desync-attacks-what-happened-next</a> and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: <a href="https://nathandavison.com/blog/haproxy-http-request-smuggling">https://nathandavison.com/blog/haproxy-http-request-smuggling</a></p>
<h3 id="thanks">Thanks</h3>
<p>The Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a></li>
<li><a href="https://github.com/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</uri>
        </author>
        <published>2019-12-26T16:34:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling in Waitress: Invalid whitespace characters in headers (Follow-up)]]></title>
        <id>https://github.com/advisories/GHSA-968f-66r5-5v74</id>
        <link href="https://github.com/advisories/GHSA-968f-66r5-5v74"/>
        <updated>2022-04-25T23:09:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The patches introduced to fix <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.</p>
<p>This updates the existing CVE with ID: CVE-2019-16789</p>
<h3 id="patches">Patches</h3>
<p>Waitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> for more information on the security issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74">https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16789">https://nvd.nist.gov/vuln/detail/CVE-2019-16789</a></li>
<li><a href="https://github.com/github/advisory-review/pull/14604">https://github.com/github/advisory-review/pull/14604</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017">https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-968f-66r5-5v74">https://github.com/advisories/GHSA-968f-66r5-5v74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-968f-66r5-5v74</uri>
        </author>
        <published>2020-01-06T18:44:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyPDF2] Manipulated inline images can cause Infinite Loop in PyPDF2]]></title>
        <id>https://github.com/advisories/GHSA-xcjx-m2pj-8g79</id>
        <link href="https://github.com/advisories/GHSA-xcjx-m2pj-8g79"/>
        <updated>2022-04-22T20:54:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 user wrote the following code:</p>
<pre><code class="language-python">from PyPDF2 import PdfFileReader, PdfFileWriter
from PyPDF2.pdf import ContentStream

reader = PdfFileReader("malicious.pdf", strict=False)
for page in reader.pages:
    ContentStream(page.getContents(), reader)
</code></pre>
<h3 id="patches">Patches</h3>
<p><a href="https://pypi.org/project/PyPDF2"><code>PyPDF2==1.27.5</code></a> and later are patched.</p>
<p>Credits to <a href="https://github.com/sekrause">Sebastian Krause</a> for finding (<a href="https://github.com/py-pdf/PyPDF2/issues/329">issue</a>) and fixing (<a href="https://github.com/py-pdf/PyPDF2/pull/740">PR</a>) it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79">https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24859">https://nvd.nist.gov/vuln/detail/CVE-2022-24859</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/issues/329">https://github.com/py-pdf/PyPDF2/issues/329</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/pull/740">https://github.com/py-pdf/PyPDF2/pull/740</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5">https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5</a></li>
<li><a href="https://github.com/advisories/GHSA-xcjx-m2pj-8g79">https://github.com/advisories/GHSA-xcjx-m2pj-8g79</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcjx-m2pj-8g79</uri>
        </author>
        <published>2022-04-22T20:54:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-mfa3] Improper Authentication in django-mfa3]]></title>
        <id>https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</id>
        <link href="https://github.com/advisories/GHSA-3r7g-wrpr-j5g4"/>
        <updated>2022-04-22T20:48:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>django-mfa3 is a library that implements multi factor authentication for the django web framework. It achieves this by modifying the regular login view. Django however has a second login view for its admin area. This second login view was not modified, so the multi factor authentication can be bypassed.</p>
<p>You are affected if you have activated both django-mfa3 (&lt; 0.5.0) and django.contrib.admin and have not taken any other measures to prevent users from accessing the admin login view.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in django-mfa3 0.5.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is possible to work around the issue by overwriting the admin login route, e.g. by adding the following URL definition <em>before</em> the admin routes:</p>
<pre><code>url('admin/login/', lambda request: redirect(settings.LOGIN_URL)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15">django-mfa3 changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4">https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24857">https://nvd.nist.gov/vuln/detail/CVE-2022-24857</a></li>
<li><a href="https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de">https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de</a></li>
<li><a href="https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15">https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15</a></li>
<li><a href="https://github.com/advisories/GHSA-3r7g-wrpr-j5g4">https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</uri>
        </author>
        <published>2022-04-22T20:48:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xml2rfc] SVG with embedded scripts can lead to cross-site scripting attacks in xml2rfc]]></title>
        <id>https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</id>
        <link href="https://github.com/advisories/GHSA-cf4q-4cqr-7g7w"/>
        <updated>2022-04-22T20:25:55.000Z</updated>
        <content type="html"><![CDATA[<p>xml2rfc allows <code>script</code> elements in SVG sources.
In HTML output having these script elements can lead to XSS attacks.</p>
<p>Sample XML snippet:</p>
<pre><code>&lt;artwork type="svg" src="data:image/svg+xml,%3Csvg viewBox='0 0 10 10' xmlns='http://www.w3.org/2000/svg'%3E%3Cscript%3E window.alert('Test Alert'); %3C/script%3E%3C/svg%3E"&gt;
&lt;/artwork&gt;
</code></pre>
<h3 id="impact">Impact</h3>
<p>This vulnerability impacts website that publish HTML drafts and RFCs.</p>
<h3 id="patches">Patches</h3>
<p>This has been fixed in version <a href="https://github.com/ietf-tools/xml2rfc/releases/tag/v3.12.4">3.12.4</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If SVG source is self-contained within the XML, scraping <code>script</code> elements from SVG files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ietf-tools/xml2rfc/">xml2rfc</a></li>
<li>Email us at <a href="mailto:operational-vulnerability@ietf.org">operational-vulnerability@ietf.org</a></li>
<li><a href="https://www.ietf.org/about/administration/policies-procedures/vulnerability-disclosure/">Infrastructure and Services Vulnerability Disclosure</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w">https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w</a></li>
<li><a href="https://github.com/advisories/GHSA-cf4q-4cqr-7g7w">https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</uri>
        </author>
        <published>2022-04-22T20:25:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Integer bounds error in Vyper]]></title>
        <id>https://github.com/advisories/GHSA-j2x6-9323-fp7h</id>
        <link href="https://github.com/advisories/GHSA-j2x6-9323-fp7h"/>
        <updated>2022-04-22T20:24:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>in the following code, the return of <code>&lt;iface&gt;.returns_int128()</code> is not validated to fall within the bounds of <code>int128</code>. as of v0.3.0, <code>&lt;iface&gt;.returns_int128()</code> is validated in simple expressions, but not complex expressions.</p>
<pre><code class="language-vyper">interface iface:
    def returns_int128() -&gt; int128: view
    def returns_Bytes33() -&gt; Bytes[33]: view

x: iface
 
@external
def call_out():
    x: int128 = self.x.returns_int128()  # affected, &lt;0.3.0
    y: uint256 = convert(self.x.returns_int128(), uint256)  # affected, &lt;0.3.2
    z: Bytes[33] = concat(self.x.returns_Bytes33(), b"")  # affected &gt;= 0.3.0, &lt;0.3.2
</code></pre>
<h3 id="patches">Patches</h3>
<p>0.3.2 (as of <a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>
<h3 id="workarounds">Workarounds</h3>
<p>Break up operations involving external calls into multiple statements. For instance, instead of the example above, use</p>
<pre><code>x: int128 = self.x.returns_int128()
y: uint256 = convert(x, uint256)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h">https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24845">https://nvd.nist.gov/vuln/detail/CVE-2022-24845</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>
<li><a href="https://github.com/advisories/GHSA-j2x6-9323-fp7h">https://github.com/advisories/GHSA-j2x6-9323-fp7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2x6-9323-fp7h</uri>
        </author>
        <published>2022-04-22T20:24:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Buffer Overflow in vyper]]></title>
        <id>https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</id>
        <link href="https://github.com/advisories/GHSA-4mrx-6fxm-8jpg"/>
        <updated>2022-04-22T19:54:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Importing a function from a JSON interface which returns <code>bytes</code> generates bytecode which does not clamp bytes length, potentially resulting in a buffer overrun.</p>
<h3 id="patches">Patches</h3>
<p>0.3.2 (as of <a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use .vy interfaces.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg">https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24788">https://nvd.nist.gov/vuln/detail/CVE-2022-24788</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>
<li><a href="https://github.com/advisories/GHSA-4mrx-6fxm-8jpg">https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</uri>
        </author>
        <published>2022-04-20T20:31:44.000Z</published>
    </entry>
</feed>