<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-03-02T21:01:24.381Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[powerline-gitstatus] Powerline Gitstatus vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-w67g-6gjv-c599</id>
        <link href="https://github.com/advisories/GHSA-w67g-6gjv-c599"/>
        <updated>2023-03-02T18:17:42.000Z</updated>
        <content type="html"><![CDATA[<p>powerline-gitstatus (aka Powerline Gitstatus) before 1.3.2 allows arbitrary code execution. git repositories can contain per-repository configuration that changes the behavior of git, including running arbitrary commands. When using powerline-gitstatus, changing to a directory automatically runs git commands in order to display information about the current repository in the prompt. If an attacker can convince a user to change their current directory to one controlled by the attacker, such as in a shared filesystem or extracted archive, powerline-gitstatus will run arbitrary commands under the attacker's control. NOTE: this is similar to CVE-2022-20001.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42906">https://nvd.nist.gov/vuln/detail/CVE-2022-42906</a></li>
<li><a href="https://github.com/jaspernbrouwer/powerline-gitstatus/issues/45">https://github.com/jaspernbrouwer/powerline-gitstatus/issues/45</a></li>
<li><a href="https://github.com/jaspernbrouwer/powerline-gitstatus/releases/tag/v1.3.2">https://github.com/jaspernbrouwer/powerline-gitstatus/releases/tag/v1.3.2</a></li>
<li><a href="https://github.com/jaspernbrouwer/powerline-gitstatus/commit/fe8e963b3489e4cceaa2c1f26f2bcc2ef405364c">https://github.com/jaspernbrouwer/powerline-gitstatus/commit/fe8e963b3489e4cceaa2c1f26f2bcc2ef405364c</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/01/msg00017.html">https://lists.debian.org/debian-lts-announce/2023/01/msg00017.html</a></li>
<li><a href="https://github.com/advisories/GHSA-w67g-6gjv-c599">https://github.com/advisories/GHSA-w67g-6gjv-c599</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w67g-6gjv-c599</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-13T12:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mxnet] Apache MXNet vulnerable to potential denial-of-service by excessive resource consumption]]></title>
        <id>https://github.com/advisories/GHSA-xxj3-55p6-xg3h</id>
        <link href="https://github.com/advisories/GHSA-xxj3-55p6-xg3h"/>
        <updated>2023-03-01T20:32:46.000Z</updated>
        <content type="html"><![CDATA[<p>A regular expression used in Apache MXNet (incubating) is vulnerable to a potential denial-of-service by excessive resource consumption. The bug could be exploited when loading a model in Apache MXNet that has a specially crafted operator name that would cause the regular expression evaluation to use excessive resources to attempt a match. This issue affects Apache MXNet versions prior to 1.9.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24294">https://nvd.nist.gov/vuln/detail/CVE-2022-24294</a></li>
<li><a href="https://lists.apache.org/thread/b1fbfmvzlr2bbp95lqoh3mtovclfcl3o">https://lists.apache.org/thread/b1fbfmvzlr2bbp95lqoh3mtovclfcl3o</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/07/24/2">http://www.openwall.com/lists/oss-security/2022/07/24/2</a></li>
<li><a href="https://github.com/apache/mxnet/releases/tag/1.9.1">https://github.com/apache/mxnet/releases/tag/1.9.1</a></li>
<li><a href="https://github.com/advisories/GHSA-xxj3-55p6-xg3h">https://github.com/advisories/GHSA-xxj3-55p6-xg3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xxj3-55p6-xg3h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-25T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lemur] Lemur subject to insecure random generation]]></title>
        <id>https://github.com/advisories/GHSA-5fqv-mpj8-h7gm</id>
        <link href="https://github.com/advisories/GHSA-5fqv-mpj8-h7gm"/>
        <updated>2023-03-01T18:05:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Lemur was using insecure random generation for its example configuration file, as well as for some utilities.</p>
<h3 id="impact">Impact</h3>
<p>The potentially affected generated items include:</p>
<table>
<thead>
<tr>
<th>Configuration item</th>
<th>Config option name (if applicable)</th>
<th>Documentation link (if applicable)</th>
<th>Rotation option</th>
<th>Code reference(s)</th>
</tr>
</thead>
<tbody><tr>
<td>Flask session secret</td>
<td><code>SECRET_KEY</code></td>
<td><a href="https://flask.palletsprojects.com/en/2.2.x/config/#SECRET_KEY">Flask documentation</a></td>
<td>Generate a new secret and place in config; all existing sessions will be invalidated</td>
<td>N/A, internal to Flask</td>
</tr>
<tr>
<td>Lemur token secret</td>
<td><code>LEMUR_TOKEN_SECRET</code></td>
<td><a href="https://lemur.readthedocs.io/en/latest/administration.html#configuration">Lemur's configuration documentation</a></td>
<td>Generate a new secret and place in config; all existing JWTs will be invalidated and must be regenerated (including API keys)</td>
<td><a href="https://github.com/Netflix/lemur/blob/1b61194a936240103f3c23299f9512c2b7e0fd36/lemur/auth/service.py#L79">1</a>, <a href="https://github.com/Netflix/lemur/blob/1b61194a936240103f3c23299f9512c2b7e0fd36/lemur/auth/service.py#L105">2</a></td>
</tr>
<tr>
<td>Lemur database encryption key</td>
<td><code>LEMUR_ENCRYPTION_KEYS</code></td>
<td><a href="https://lemur.readthedocs.io/en/latest/administration.html#configuration">Lemur's configuration documentation</a></td>
<td>A new key can be generated and added to this list, but existing data encrypted with prior keys cannot be re-encrypted unless you write a custom re-encryption process</td>
<td><a href="https://github.com/Netflix/lemur/blob/3783fbeaa1645bbee022827f4f53ffb12dd65a61/lemur/utils.py#L58">1</a></td>
</tr>
<tr>
<td>OAuth2 state token secret key</td>
<td><code>OAUTH_STATE_TOKEN_SECRET</code></td>
<td><a href="https://lemur.readthedocs.io/en/latest/administration.html#configuration">Lemur's configuration documentation</a></td>
<td>Generate a new secret and place in config</td>
<td><a href="https://github.com/Netflix/lemur/blob/4b03baaf5544f167e78055bab15a903b1badf22b/lemur/auth/views.py#L267">1</a></td>
</tr>
<tr>
<td>Randomly generated passphrases for openssl keystores</td>
<td>N/A, generated at runtime but persisted</td>
<td>N/A</td>
<td>Re-export all openssl keystores and replace them wherever they're in use</td>
<td><a href="https://github.com/Netflix/lemur/blob/2603776e5c0ac25fa0103ff1357dea391d880160/lemur/plugins/lemur_openssl/plugin.py#L129">1</a></td>
</tr>
<tr>
<td>Initial password for LDAP users</td>
<td>N/A, generated at runtime but persisted</td>
<td>N/A</td>
<td>N/A, cannot be rotated*</td>
<td><a href="https://github.com/Netflix/lemur/blob/3783fbeaa1645bbee022827f4f53ffb12dd65a61/lemur/auth/ldap.py#L66">1</a></td>
</tr>
<tr>
<td>Initial password for Ping/OAuth2 users</td>
<td>N/A, generated at runtime but persisted</td>
<td>N/A</td>
<td>N/A, cannot be rotated*</td>
<td><a href="https://github.com/Netflix/lemur/blob/4b03baaf5544f167e78055bab15a903b1badf22b/lemur/auth/views.py#L234">1</a></td>
</tr>
<tr>
<td>Oauth2 nonce</td>
<td>N/A, short-lived runtime secret</td>
<td>N/A</td>
<td>N/A, rotation is not required (these are short-lived)</td>
<td><a href="https://github.com/Netflix/lemur/blob/4b03baaf5544f167e78055bab15a903b1badf22b/lemur/auth/views.py#L668">1</a></td>
</tr>
<tr>
<td>Verisign certificate enrollment challenges</td>
<td>N/A, short-lived runtime secret</td>
<td>N/A</td>
<td>N/A, rotation is not required (these are short-lived)</td>
<td><a href="https://github.com/Netflix/lemur/blob/d4af5af99cd51016579f015d79df649c68a6ad15/lemur/plugins/lemur_verisign/plugin.py#L107">1</a></td>
</tr>
</tbody></table>
<p>If your deployment of Lemur is using any of the above config secrets that were <em>generated by Lemur's example config</em> (i.e., generated using insecure randomness), you should rotate those config secrets. If you generated your config secrets in a more secure way, they are not known to be compromised, but you should still upgrade Lemur to ensure that you receive code fixes for the runtime-generated secrets.</p>
<p>For general information and guidance on Lemur secret configuration, see <a href="https://lemur.readthedocs.io/en/latest/administration.html#configuration">Lemur's configuration documentation</a>, which includes information on many of the configuration options listed above.</p>
<p>*For the user passwords: Even though these users are configured to use SSO, they do get generated with valid database passwords that can be used to log in. Since Lemur doesn't have an option to change passwords (#3888), one option for rotating them would be to directly modify the value in the database to some other unguessable string (you do not need to know the plaintext password since it won't be used).</p>
<h3 id="patches">Patches</h3>
<p>The patch is available in v1.3.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds are available.</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Netflix/lemur/security/advisories/GHSA-5fqv-mpj8-h7gm">https://github.com/Netflix/lemur/security/advisories/GHSA-5fqv-mpj8-h7gm</a></li>
<li><a href="https://github.com/Netflix/lemur/issues/3888">https://github.com/Netflix/lemur/issues/3888</a></li>
<li><a href="https://github.com/Netflix/lemur/commit/666d853212174ee7f4e6f8b3b4b389ede1872238">https://github.com/Netflix/lemur/commit/666d853212174ee7f4e6f8b3b4b389ede1872238</a></li>
<li><a href="https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2023-001.md">https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2023-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-5fqv-mpj8-h7gm">https://github.com/advisories/GHSA-5fqv-mpj8-h7gm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5fqv-mpj8-h7gm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-01T18:05:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6 refresh tokens do not expire]]></title>
        <id>https://github.com/advisories/GHSA-4w59-c3gc-rrhp</id>
        <link href="https://github.com/advisories/GHSA-4w59-c3gc-rrhp"/>
        <updated>2023-02-28T23:20:05.000Z</updated>
        <content type="html"><![CDATA[<p>From issue: </p>
<p>Problem description
Currently, the refresh token is valid indefinitely. This is bad security practice.</p>
<p>Desired solution
The refresh token should get a validity of 24-48 hours.</p>
<p>Additional context</p>
<p>When implementing this, also check that the refresh token returns a new refresh token
When implementing this, also adapt the UI so that it logs out if refresh token is no longer valid.
When implementing this, ensure that nodes refresh their token periodically so that they do not have to be restarted manually.</p>
<h3 id="impact">Impact</h3>
<h3 id="patches">Patches</h3>
<p>None available </p>
<h3 id="workarounds">Workarounds</h3>
<p>None available</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-4w59-c3gc-rrhp">https://github.com/vantage6/vantage6/security/advisories/GHSA-4w59-c3gc-rrhp</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/48ebfca42359e9a6743e9598684585e2522cdce8">https://github.com/vantage6/vantage6/commit/48ebfca42359e9a6743e9598684585e2522cdce8</a></li>
<li><a href="https://github.com/advisories/GHSA-4w59-c3gc-rrhp">https://github.com/advisories/GHSA-4w59-c3gc-rrhp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4w59-c3gc-rrhp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-28T23:20:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6 vulnerable to Improper Preservation of Permissions]]></title>
        <id>https://github.com/advisories/GHSA-vvjv-97j8-94xh</id>
        <link href="https://github.com/advisories/GHSA-vvjv-97j8-94xh"/>
        <updated>2023-03-02T20:04:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Assigning existing users to a different organization is currently possible. It may lead to unintended access: if a user from organization A is accidentally assigned to organization B, they will retain their permissions and therefore might be able to access stuff they should not be allowed to access.</p>
<h3 id="patches">Patches</h3>
<p>Update to 3.8.0</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<p>None</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:vantage6@iknl.nl">vantage6@iknl.nl</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-vvjv-97j8-94xh">https://github.com/vantage6/vantage6/security/advisories/GHSA-vvjv-97j8-94xh</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/798aca1de142a4eca175ef51112e2235642f4f24">https://github.com/vantage6/vantage6/commit/798aca1de142a4eca175ef51112e2235642f4f24</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22738">https://nvd.nist.gov/vuln/detail/CVE-2023-22738</a></li>
<li><a href="https://github.com/advisories/GHSA-vvjv-97j8-94xh">https://github.com/advisories/GHSA-vvjv-97j8-94xh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vvjv-97j8-94xh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-28T23:19:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vantage6] vantage6 vulnerable to Observable Response Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-36gx-9q6h-g429</id>
        <link href="https://github.com/advisories/GHSA-36gx-9q6h-g429"/>
        <updated>2023-02-28T23:18:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>We are incorporating the password policies listed in <a href="https://github.com/vantage6/vantage6/issues/59">https://github.com/vantage6/vantage6/issues/59</a>. One measure is that we don't let the user know in case of wrong username/password combination if the username actually exists, to prevent that bots can guess usernames. However, if a wrong password is entered a number of times, the user account is blocked temporarily. This way you could still find out which usernames exist.</p>
<h3 id="patches">Patches</h3>
<p>Update to 3.8.0+</p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/vantage6/vantage6/issues/59">https://github.com/vantage6/vantage6/issues/59</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:vantage6@iknl.nl">vantage6@iknl.nl</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vantage6/vantage6/security/advisories/GHSA-36gx-9q6h-g429">https://github.com/vantage6/vantage6/security/advisories/GHSA-36gx-9q6h-g429</a></li>
<li><a href="https://github.com/vantage6/vantage6/issues/59">https://github.com/vantage6/vantage6/issues/59</a></li>
<li><a href="https://github.com/vantage6/vantage6/pull/281">https://github.com/vantage6/vantage6/pull/281</a></li>
<li><a href="https://github.com/vantage6/vantage6/commit/ab4381c35d24add06f75d5a8a284321f7a340bd2">https://github.com/vantage6/vantage6/commit/ab4381c35d24add06f75d5a8a284321f7a340bd2</a></li>
<li><a href="https://github.com/advisories/GHSA-36gx-9q6h-g429">https://github.com/advisories/GHSA-36gx-9q6h-g429</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36gx-9q6h-g429</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-28T23:18:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-libnmap] Argument injection in python-libnmap]]></title>
        <id>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</id>
        <link href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6"/>
        <updated>2023-02-27T14:49:06.000Z</updated>
        <content type="html"><![CDATA[<p>In the python-libnmap package through 0.7.2 for Python, remote command execution can occur (if used in a client application that does not validate arguments).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30284">https://nvd.nist.gov/vuln/detail/CVE-2022-30284</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases">https://github.com/savon-noir/python-libnmap/releases</a></li>
<li><a href="https://pypi.org/project/python-libnmap/">https://pypi.org/project/python-libnmap/</a></li>
<li><a href="https://www.swascan.com/security-advisory-libnmap-2/">https://www.swascan.com/security-advisory-libnmap-2/</a></li>
<li><a href="https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process">https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64">https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3">https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3</a></li>
<li><a href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6">https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-06T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-google] Apache Airflow Google Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8g23-2q5p-8866</id>
        <link href="https://github.com/advisories/GHSA-8g23-2q5p-8866"/>
        <updated>2023-02-24T16:25:48.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in the Apache Airflow Google Provider. This issue affects Apache Airflow Google Provider versions before 8.10.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25691">https://nvd.nist.gov/vuln/detail/CVE-2023-25691</a></li>
<li><a href="https://github.com/apache/airflow/pull/29497">https://github.com/apache/airflow/pull/29497</a></li>
<li><a href="https://lists.apache.org/thread/zdr8ovfttbh7kj0lydgcw88tbt2nmkcy">https://lists.apache.org/thread/zdr8ovfttbh7kj0lydgcw88tbt2nmkcy</a></li>
<li><a href="https://github.com/advisories/GHSA-8g23-2q5p-8866">https://github.com/advisories/GHSA-8g23-2q5p-8866</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8g23-2q5p-8866</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-24T12:31:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-google] Apache Airflow Google Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h8p2-8g72-qpgh</id>
        <link href="https://github.com/advisories/GHSA-h8p2-8g72-qpgh"/>
        <updated>2023-02-24T16:25:38.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in the Apache Airflow Google Provider. This issue affects Apache Airflow Google Provider versions before 8.10.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25692">https://nvd.nist.gov/vuln/detail/CVE-2023-25692</a></li>
<li><a href="https://github.com/apache/airflow/pull/29499">https://github.com/apache/airflow/pull/29499</a></li>
<li><a href="https://lists.apache.org/thread/ks4l78l5rwdpmvfn7y7yhs179nyxtlsh">https://lists.apache.org/thread/ks4l78l5rwdpmvfn7y7yhs179nyxtlsh</a></li>
<li><a href="https://github.com/advisories/GHSA-h8p2-8g72-qpgh">https://github.com/advisories/GHSA-h8p2-8g72-qpgh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8p2-8g72-qpgh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-24T12:31:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-hive] Apache Airflow Hive Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9mwf-mw74-9cv5</id>
        <link href="https://github.com/advisories/GHSA-9mwf-mw74-9cv5"/>
        <updated>2023-02-24T16:25:29.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in the Apache Airflow Hive Provider. This issue affects Apache Airflow Hive Provider versions before 5.1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25696">https://nvd.nist.gov/vuln/detail/CVE-2023-25696</a></li>
<li><a href="https://github.com/apache/airflow/pull/29502">https://github.com/apache/airflow/pull/29502</a></li>
<li><a href="https://lists.apache.org/thread/99g0qm56wmgdxmbtdsvhj4rdnxhpzpml">https://lists.apache.org/thread/99g0qm56wmgdxmbtdsvhj4rdnxhpzpml</a></li>
<li><a href="https://github.com/advisories/GHSA-9mwf-mw74-9cv5">https://github.com/advisories/GHSA-9mwf-mw74-9cv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9mwf-mw74-9cv5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-24T12:31:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-sqoop] Apache Airflow Sqoop Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j69x-v4wc-3fpf</id>
        <link href="https://github.com/advisories/GHSA-j69x-v4wc-3fpf"/>
        <updated>2023-02-24T16:25:18.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in the Apache Airflow Sqoop Provider. This issue affects Apache Airflow Sqoop Provider versions before 3.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25693">https://nvd.nist.gov/vuln/detail/CVE-2023-25693</a></li>
<li><a href="https://github.com/apache/airflow/pull/29500">https://github.com/apache/airflow/pull/29500</a></li>
<li><a href="https://lists.apache.org/thread/79qn8g5xbq036f8crb115obvr22l52q4">https://lists.apache.org/thread/79qn8g5xbq036f8crb115obvr22l52q4</a></li>
<li><a href="https://github.com/advisories/GHSA-j69x-v4wc-3fpf">https://github.com/advisories/GHSA-j69x-v4wc-3fpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j69x-v4wc-3fpf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-24T12:31:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-amazon] Apache Airflow AWS Provider Generates Error Message Containing Sensitive Information]]></title>
        <id>https://github.com/advisories/GHSA-w695-p3j5-hrj9</id>
        <link href="https://github.com/advisories/GHSA-w695-p3j5-hrj9"/>
        <updated>2023-02-24T16:25:00.000Z</updated>
        <content type="html"><![CDATA[<p>Generation of Error Message Containing Sensitive Information vulnerability in the Apache Airflow AWS Provider. This issue affects Apache Airflow AWS Provider versions before 7.2.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25956">https://nvd.nist.gov/vuln/detail/CVE-2023-25956</a></li>
<li><a href="https://github.com/apache/airflow/pull/29587">https://github.com/apache/airflow/pull/29587</a></li>
<li><a href="https://lists.apache.org/thread/07pl9y4gdpw2c6rzqm77dvkm2z2kb5gv">https://lists.apache.org/thread/07pl9y4gdpw2c6rzqm77dvkm2z2kb5gv</a></li>
<li><a href="https://github.com/advisories/GHSA-w695-p3j5-hrj9">https://github.com/advisories/GHSA-w695-p3j5-hrj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w695-p3j5-hrj9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-24T12:31:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Code Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</id>
        <link href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm"/>
        <updated>2023-02-23T23:29:52.000Z</updated>
        <content type="html"><![CDATA[<p>The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a "dotted Python path."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0472">https://nvd.nist.gov/vuln/detail/CVE-2014-0472</a></li>
<li><a href="https://www.djangoproject.com/weblog/2014/apr/21/security/">https://www.djangoproject.com/weblog/2014/apr/21/security/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html">http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0456.html">http://rhn.redhat.com/errata/RHSA-2014-0456.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0457.html">http://rhn.redhat.com/errata/RHSA-2014-0457.html</a></li>
<li><a href="http://secunia.com/advisories/61281">http://secunia.com/advisories/61281</a></li>
<li><a href="http://www.debian.org/security/2014/dsa-2934">http://www.debian.org/security/2014/dsa-2934</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2169-1">http://www.ubuntu.com/usn/USN-2169-1</a></li>
<li><a href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm">https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:07:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Code Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</id>
        <link href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm"/>
        <updated>2023-02-23T23:29:52.000Z</updated>
        <content type="html"><![CDATA[<p>The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a "dotted Python path."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0472">https://nvd.nist.gov/vuln/detail/CVE-2014-0472</a></li>
<li><a href="https://www.djangoproject.com/weblog/2014/apr/21/security/">https://www.djangoproject.com/weblog/2014/apr/21/security/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html">http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0456.html">http://rhn.redhat.com/errata/RHSA-2014-0456.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0457.html">http://rhn.redhat.com/errata/RHSA-2014-0457.html</a></li>
<li><a href="http://secunia.com/advisories/61281">http://secunia.com/advisories/61281</a></li>
<li><a href="http://www.debian.org/security/2014/dsa-2934">http://www.debian.org/security/2014/dsa-2934</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2169-1">http://www.ubuntu.com/usn/USN-2169-1</a></li>
<li><a href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm">https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:07:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Code Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</id>
        <link href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm"/>
        <updated>2023-02-23T23:29:52.000Z</updated>
        <content type="html"><![CDATA[<p>The django.core.urlresolvers.reverse function in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 allows remote attackers to import and execute arbitrary Python modules by leveraging a view that constructs URLs using user input and a "dotted Python path."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0472">https://nvd.nist.gov/vuln/detail/CVE-2014-0472</a></li>
<li><a href="https://www.djangoproject.com/weblog/2014/apr/21/security/">https://www.djangoproject.com/weblog/2014/apr/21/security/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html">http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0456.html">http://rhn.redhat.com/errata/RHSA-2014-0456.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0457.html">http://rhn.redhat.com/errata/RHSA-2014-0457.html</a></li>
<li><a href="http://secunia.com/advisories/61281">http://secunia.com/advisories/61281</a></li>
<li><a href="http://www.debian.org/security/2014/dsa-2934">http://www.debian.org/security/2014/dsa-2934</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2169-1">http://www.ubuntu.com/usn/USN-2169-1</a></li>
<li><a href="https://github.com/advisories/GHSA-rvq6-mrpv-m6rm">https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvq6-mrpv-m6rm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:07:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Update share links to use FRP instead of SSH tunneling]]></title>
        <id>https://github.com/advisories/GHSA-3x5j-9vwr-8rr5</id>
        <link href="https://github.com/advisories/GHSA-3x5j-9vwr-8rr5"/>
        <updated>2023-03-02T00:56:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This is a vulnerability which affects anyone using Gradio's share links (i.e. creating a Gradio app and then setting <code>share=True</code>) with Gradio versions older than 3.13.1. In these older versions of Gradio, a private SSH key is sent to any user that connects to the Gradio machine, which means that a user could access other users' shared Gradio demos. From there, other exploits are possible depending on the level of access/exposure the Gradio app provides. </p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched. Ideally, users should upgrade to <code>gradio==3.19.1</code> or later where the FRP solution has been properly tested. </p>
<h3 id="credit">Credit</h3>
<p>Credit to Greg Sadetsky and Samuel Tremblay-Cossette for alerting the team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gradio-app/gradio/security/advisories/GHSA-3x5j-9vwr-8rr5">https://github.com/gradio-app/gradio/security/advisories/GHSA-3x5j-9vwr-8rr5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25823">https://nvd.nist.gov/vuln/detail/CVE-2023-25823</a></li>
<li><a href="https://github.com/advisories/GHSA-3x5j-9vwr-8rr5">https://github.com/advisories/GHSA-3x5j-9vwr-8rr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3x5j-9vwr-8rr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-23T22:10:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[markdown-it-py] markdown-it-py Denial of Service vulnerability in the command line interface]]></title>
        <id>https://github.com/advisories/GHSA-jrwr-5x3p-hvc3</id>
        <link href="https://github.com/advisories/GHSA-jrwr-5x3p-hvc3"/>
        <updated>2023-02-23T19:40:56.000Z</updated>
        <content type="html"><![CDATA[<p>Denial of service could be caused to the command line interface of markdown-it-py, before v2.2.0, if an attacker was allowed to use invalid UTF-8 characters as input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26302">https://nvd.nist.gov/vuln/detail/CVE-2023-26302</a></li>
<li><a href="https://github.com/executablebooks/markdown-it-py/commit/53ca3e9c2b9e9b295f6abf7f4ad2730a9b70f68c">https://github.com/executablebooks/markdown-it-py/commit/53ca3e9c2b9e9b295f6abf7f4ad2730a9b70f68c</a></li>
<li><a href="https://github.com/executablebooks/markdown-it-py/pull/247">https://github.com/executablebooks/markdown-it-py/pull/247</a></li>
<li><a href="https://github.com/executablebooks/markdown-it-py/releases/tag/v2.2.0">https://github.com/executablebooks/markdown-it-py/releases/tag/v2.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-jrwr-5x3p-hvc3">https://github.com/advisories/GHSA-jrwr-5x3p-hvc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrwr-5x3p-hvc3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-02-23T00:30:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[OpenCC] Open Chinese Convert subject to Denial of Service via Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</id>
        <link href="https://github.com/advisories/GHSA-9qh2-6fxg-9m4g"/>
        <updated>2023-02-22T23:27:41.000Z</updated>
        <content type="html"><![CDATA[<p>Open Chinese Convert (OpenCC) 1.0.5 allows attackers to cause a denial of service (segmentation fault) because BinaryDict::NewFromFile in BinaryDict.cpp may have out-of-bounds keyOffset and valueOffset values via a crafted .ocd file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16982">https://nvd.nist.gov/vuln/detail/CVE-2018-16982</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/issues/303">https://github.com/BYVoid/OpenCC/issues/303</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/309">https://github.com/BYVoid/OpenCC/pull/309</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/560">https://github.com/BYVoid/OpenCC/pull/560</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4">https://github.com/BYVoid/OpenCC/pull/560/commits/e1b8c7949738100e4747dd4109ef1f16e1bd99c4</a></li>
<li><a href="https://github.com/BYVoid/OpenCC/commit/4a4f9e58e505fca93605f22363c133df66a91a5e">https://github.com/BYVoid/OpenCC/commit/4a4f9e58e505fca93605f22363c133df66a91a5e</a></li>
<li><a href="https://github.com/advisories/GHSA-9qh2-6fxg-9m4g">https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qh2-6fxg-9m4g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:55:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[modoboa] modoboa Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mgmm-cmhj-2h5f</id>
        <link href="https://github.com/advisories/GHSA-mgmm-cmhj-2h5f"/>
        <updated>2023-02-22T19:16:33.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting (XSS) - Reflected in GitHub repository modoboa/modoboa prior to 2.0.4. A patch is available and anticipated to be part of version 2.0.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0949">https://nvd.nist.gov/vuln/detail/CVE-2023-0949</a></li>
<li><a href="https://github.com/modoboa/modoboa/commit/aa74e9a4a870162eea169e0a6a2eab841f8811b7">https://github.com/modoboa/modoboa/commit/aa74e9a4a870162eea169e0a6a2eab841f8811b7</a></li>
<li><a href="https://huntr.dev/bounties/ef87be4e-493b-4ee9-9738-44c55b8acc19">https://huntr.dev/bounties/ef87be4e-493b-4ee9-9738-44c55b8acc19</a></li>
<li><a href="https://github.com/advisories/GHSA-mgmm-cmhj-2h5f">https://github.com/advisories/GHSA-mgmm-cmhj-2h5f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mgmm-cmhj-2h5f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-22T09:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Nautobot vulnerable to remote code execution via Jinja2 template rendering]]></title>
        <id>https://github.com/advisories/GHSA-8mfq-f5wj-vw5m</id>
        <link href="https://github.com/advisories/GHSA-8mfq-f5wj-vw5m"/>
        <updated>2023-02-22T00:04:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>All users of Nautobot versions earlier than 1.5.7 are impacted.</p>
<p>In Nautobot 1.5.7 we have enabled sandboxed environments for the Jinja2 template engine used internally for template rendering for the following objects:</p>
<ul>
<li><code>extras.ComputedField</code></li>
<li><code>extras.CustomLink</code></li>
<li><code>extras.ExportTemplate</code> </li>
<li><code>extras.Secret</code></li>
<li><code>extras.Webhook</code></li>
</ul>
<p>While we are not aware of any active exploits, we have made this change as a preventative measure to protect against any potential remote code execution attacks utilizing maliciously crafted template code.</p>
<p>This change forces the Jinja2 template engine to use a <a href="https://jinja.palletsprojects.com/en/3.0.x/sandbox/#sandbox"><code>SandboxedEnvironment</code></a> on all new installations of Nautobot.</p>
<p>This addresses any potential unsafe code execution everywhere the helper function <code>nautobot.utilities.utils.render_jinja2</code> is called. Additionally, our documentation that was previously suggesting the direct use of <code>jinja2.Template</code> has been revised to utilize <code>render_jinja2</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>Yes. Users should upgrade to Nautobot 1.5.7 or newer.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h5 id="enabling-sandboxed-environments">Enabling Sandboxed Environments</h5>
<p>For users that are unable to upgrade to the latest release of Nautobot, you may add the following setting to your <code>nautobot_config.py</code> to apply the sandbox environment enforcement:</p>
<pre><code class="language-python">TEMPLATES[1]["OPTIONS"]["environment"] = "jinja2.sandbox.SandboxedEnvironment"
</code></pre>
<p>After applying this change, you must restart all Nautobot services, including any Celery worker processes.</p>
<p><strong>Note:</strong> <em>Nautobot specifies two template engines by default, the first being “django” for the Django built-in template engine, and the second being “jinja” for the Jinja2 template engine. This recommended setting will update the second item in the list of template engines, which is the Jinja2 engine.</em></p>
<h5 id="restricting-jinja2-using-access-controls">Restricting Jinja2 using Access Controls</h5>
<p>For users that are unable to immediately update their configuration such as if a Nautobot service restart is too disruptive to operations, access to provide custom Jinja2 template values may be mitigated using permissions to restrict “change” (write) actions to the affected object types listed in the first section.</p>
<p><strong>Note:</strong> <em>This solution is intended to be stopgap until you can successfully update your <code>nautobot_config.py</code> or upgrade your Nautobot instance to apply the sandboxed environment enforcement.</em></p>
<h4 id="updating-existing-app-or-job-code">Updating Existing App or Job Code</h4>
<p>For Nautobot App (formerly plugin) authors or Job authors, additionally we recommend that if you have any custom code that may for example be using <code>jinaj2.Template</code> that you no longer use that. Instead, please always use our <code>nautobot.utilities.utils.render_jinja2</code> function which will make sure that the centrally-provided Jinja2 template engine with sandboxing enforced is being utilized.</p>
<p>Anywhere you’ve been using this pattern:</p>
<pre><code class="language-python">from jinja2 import Template

my_template = Template(template_code)
config = my_template.render(context)
</code></pre>
<p>We recommend that you replace it with this pattern:</p>
<pre><code class="language-python">from nautobot.utilities.utils import render_jinja2
    
config = render_jinja2(template_code, context)
</code></pre>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>Please see the Nautobot 1.5.7 release notes. </p>
<p><a href="https://docs.nautobot.com/projects/core/en/stable/release-notes/version-1.5/#v157-2023-01-04">https://docs.nautobot.com/projects/core/en/stable/release-notes/version-1.5/#v157-2023-01-04</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-8mfq-f5wj-vw5m">https://github.com/nautobot/nautobot/security/advisories/GHSA-8mfq-f5wj-vw5m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25657">https://nvd.nist.gov/vuln/detail/CVE-2023-25657</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/d47f157e83b0c353bb2b697f911882c71cf90ca0">https://github.com/nautobot/nautobot/commit/d47f157e83b0c353bb2b697f911882c71cf90ca0</a></li>
<li><a href="https://docs.nautobot.com/projects/core/en/stable/release-notes/version-1.5/#v157-2023-01-04">https://docs.nautobot.com/projects/core/en/stable/release-notes/version-1.5/#v157-2023-01-04</a></li>
<li><a href="https://jinja.palletsprojects.com/en/3.0.x/sandbox/#sandbox">https://jinja.palletsprojects.com/en/3.0.x/sandbox/#sandbox</a></li>
<li><a href="https://github.com/advisories/GHSA-8mfq-f5wj-vw5m">https://github.com/advisories/GHSA-8mfq-f5wj-vw5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8mfq-f5wj-vw5m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-22T00:04:02.000Z</published>
    </entry>
</feed>