<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-03-24T22:01:28.846Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[mlflow] Remote file existence check vulnerability in `mlflow server` and `mlflow ui` CLIs]]></title>
        <id>https://github.com/advisories/GHSA-wp72-7hj9-5265</id>
        <link href="https://github.com/advisories/GHSA-wp72-7hj9-5265"/>
        <updated>2023-03-24T22:01:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of the MLflow Open Source Project who are hosting the MLflow Model Registry using the <code>mlflow server</code> or <code>mlflow ui</code> commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file existence check exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication / authorization middleware).</p>
<p>This issue only affects users and integrations that run the <code>mlflow server</code> and <code>mlflow ui</code> commands. Integrations that do not make use of <code>mlflow server</code> or <code>mlflow ui</code> are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.</p>
<p>The vulnerability detailed in <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1176">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a> enables an actor to check the existence of arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using <code>mlflow server</code> or <code>mlflow ui</code> with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication / authorization middleware, or another access restriction mechanism of your choosing.</p>
<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.</p>
<h3 id="references">References</h3>
<p>More information about the vulnerability is available at <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1176">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265">https://github.com/mlflow/mlflow/security/advisories/GHSA-wp72-7hj9-5265</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1176">https://nvd.nist.gov/vuln/detail/CVE-2023-1176</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d">https://github.com/mlflow/mlflow/commit/63ef72aa4334a6473ce7f889573c92fcae0b3c0d</a></li>
<li><a href="https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085">https://huntr.dev/bounties/ae92f814-6a08-435c-8445-eec0ef4f1085</a></li>
<li><a href="https://github.com/advisories/GHSA-wp72-7hj9-5265">https://github.com/advisories/GHSA-wp72-7hj9-5265</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wp72-7hj9-5265</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T22:01:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Remote file access vulnerability in `mlflow server` and `mlflow ui` CLIs]]></title>
        <id>https://github.com/advisories/GHSA-xg73-94fp-g449</id>
        <link href="https://github.com/advisories/GHSA-xg73-94fp-g449"/>
        <updated>2023-03-24T22:01:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of the MLflow Open Source Project who are hosting the MLflow Model Registry using the <code>mlflow server</code> or <code>mlflow ui</code> commands using an MLflow version older than MLflow 2.2.1 may be vulnerable to a remote file access exploit if they are not limiting who can query their server (for example, by using a cloud VPC, an IP allowlist for inbound requests, or authentication / authorization middleware).</p>
<p>This issue only affects users and integrations that run the <code>mlflow server</code> and <code>mlflow ui</code> commands. Integrations that do not make use of <code>mlflow server</code> or <code>mlflow ui</code> are unaffected; for example, the Databricks Managed MLflow product and MLflow on Azure Machine Learning do not make use of these commands and are not impacted by these vulnerabilities in any way.</p>
<p>The vulnerability detailed in <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1177">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a> enables an actor to download arbitrary files unrelated to MLflow from the host server, including any files stored in remote locations to which the host server has access.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in MLflow 2.2.1, which was released to PyPI on March 2nd, 2023. If you are using <code>mlflow server</code> or <code>mlflow ui</code> with the MLflow Model Registry, we recommend upgrading to MLflow 2.2.1 as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we strongly recommend limiting who can access your MLflow Model Registry and MLflow Tracking servers using a cloud VPC, an IP allowlist for inbound requests, authentication / authorization middleware, or another access restriction mechanism of your choosing.</p>
<p>If you are using the MLflow open source <code>mlflow server</code> or <code>mlflow ui</code> commands, we also strongly recommend limiting the remote files to which your MLflow Model Registry and MLflow Tracking servers have access. For example, if your MLflow Model Registry or MLflow Tracking server uses cloud-hosted blob storage for MLflow artifacts, make sure to restrict the scope of your server's cloud credentials such that it can only access files and directories related to MLflow.</p>
<h3 id="references">References</h3>
<p>More information about the vulnerability is available at <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1177">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449">https://github.com/mlflow/mlflow/security/advisories/GHSA-xg73-94fp-g449</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1177">https://nvd.nist.gov/vuln/detail/CVE-2023-1177</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/7162a50c654792c21f3e4a160eb1a0e6a34f6e6e">https://github.com/mlflow/mlflow/commit/7162a50c654792c21f3e4a160eb1a0e6a34f6e6e</a></li>
<li><a href="https://huntr.dev/bounties/1fe8f21a-c438-4cba-9add-e8a5dab94e28">https://huntr.dev/bounties/1fe8f21a-c438-4cba-9add-e8a5dab94e28</a></li>
<li><a href="https://github.com/advisories/GHSA-xg73-94fp-g449">https://github.com/advisories/GHSA-xg73-94fp-g449</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xg73-94fp-g449</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-03-24T22:01:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch]]></title>
        <id>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</id>
        <link href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p"/>
        <updated>2023-03-24T21:58:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>
<pre><code class="language-python">import tensorflow as tf
func = tf.raw_ops.DynamicStitch
para={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}
y = func(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This has been reported via Google OSS VRP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>
<li><a href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch]]></title>
        <id>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</id>
        <link href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p"/>
        <updated>2023-03-24T21:58:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>
<pre><code class="language-python">import tensorflow as tf
func = tf.raw_ops.DynamicStitch
para={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}
y = func(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This has been reported via Google OSS VRP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>
<li><a href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to Out-of-Bounds Read in DynamicStitch]]></title>
        <id>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</id>
        <link href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p"/>
        <updated>2023-03-24T21:58:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If the parameter <code>indices</code> for <code>DynamicStitch</code> does not match the shape of the parameter <code>data</code>, it can trigger an stack OOB read.</p>
<pre><code class="language-python">import tensorflow as tf
func = tf.raw_ops.DynamicStitch
para={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}
y = func(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">ee004b18b976eeb5a758020af8880236cd707d05</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This has been reported via Google OSS VRP.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-93vr-9q9m-pj8p</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05">https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05</a></li>
<li><a href="https://github.com/advisories/GHSA-93vr-9q9m-pj8p">https://github.com/advisories/GHSA-93vr-9q9m-pj8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93vr-9q9m-pj8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`]]></title>
        <id>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</id>
        <link href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"/>
        <updated>2023-03-24T21:58:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>
<pre><code class="language-python">import tensorflow as tf

tf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),
                            data =  [[False, False, False, False], [False], [False, False, False]],
                            message =  'tmp/I',
                            first_n = 100,
                            summarize = 0)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-24T21:58:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`]]></title>
        <id>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</id>
        <link href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"/>
        <updated>2023-03-24T21:58:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>
<pre><code class="language-python">import tensorflow as tf

tf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),
                            data =  [[False, False, False, False], [False], [False, False, False]],
                            message =  'tmp/I',
                            first_n = 100,
                            summarize = 0)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-24T21:58:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to seg fault in `tf.raw_ops.Print`]]></title>
        <id>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</id>
        <link href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj"/>
        <updated>2023-03-24T21:58:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the parameter <code>summarize</code> of <code>tf.raw_ops.Print</code> is zero, the new method <code>SummarizeArray&lt;bool&gt;</code> will reference to a nullptr, leading to a seg fault.</p>
<pre><code class="language-python">import tensorflow as tf

tf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),
                            data =  [[False, False, False, False], [False], [False, False, False]],
                            message =  'tmp/I',
                            first_n = 100,
                            summarize = 0)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1">https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1</a></li>
<li><a href="https://github.com/advisories/GHSA-qjqc-vqcf-5qvj">https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjqc-vqcf-5qvj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-03-24T21:58:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to integer overflow in EditDistance]]></title>
        <id>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</id>
        <link href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"/>
        <updated>2023-03-24T21:58:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>
<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>
<pre><code class="language-python">import tensorflow as tf
para={
    'hypothesis_indices': [[]],
    'hypothesis_values': ['tmp/'],
    'hypothesis_shape': [],
    'truth_indices': [[]],
    'truth_values': [''],
    'truth_shape': [],
    'normalize': False
    }
tf.raw_ops.EditDistance(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by r3pwnx</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>
<li><a href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to integer overflow in EditDistance]]></title>
        <id>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</id>
        <link href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"/>
        <updated>2023-03-24T21:58:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>
<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>
<pre><code class="language-python">import tensorflow as tf
para={
    'hypothesis_indices': [[]],
    'hypothesis_values': ['tmp/'],
    'hypothesis_shape': [],
    'truth_indices': [[]],
    'truth_values': [''],
    'truth_shape': [],
    'normalize': False
    }
tf.raw_ops.EditDistance(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by r3pwnx</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>
<li><a href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to integer overflow in EditDistance]]></title>
        <id>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</id>
        <link href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw"/>
        <updated>2023-03-24T21:58:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c-&gt;input_tensor(2); std::vector dims(hypothesis_shape_t-&gt;NumElements() - 1); for (int i = 0; i &lt; dims.size(); ++i) { dims[i] = c-&gt;MakeDim(std::max(h_values(i), t_values(i))); }</p>
<p>if hypothesis_shape_t is empty, hypothesis_shape_t-&gt;NumElements() - 1 will be integer overflow, and the it will deadlock</p>
<pre><code class="language-python">import tensorflow as tf
para={
    'hypothesis_indices': [[]],
    'hypothesis_values': ['tmp/'],
    'hypothesis_shape': [],
    'truth_indices': [[]],
    'truth_values': [''],
    'truth_shape': [],
    'normalize': False
    }
tf.raw_ops.EditDistance(**para)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">08b8e18643d6dcde00890733b270ff8d9960c56c</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by r3pwnx</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c">https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c</a></li>
<li><a href="https://github.com/advisories/GHSA-7jvm-xxmr-v5cw">https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jvm-xxmr-v5cw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow has Null Pointer Error in TensorArrayConcatV2]]></title>
        <id>https://github.com/advisories/GHSA-64jg-wjww-7c5w</id>
        <link href="https://github.com/advisories/GHSA-64jg-wjww-7c5w"/>
        <updated>2023-03-24T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When ctx-&gt;step_containter() is a null ptr, the Lookup function will be executed with a null pointer.</p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">239139d2ae6a81ae9ba499ad78b56d9b2931538a</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a</a></li>
<li><a href="https://github.com/advisories/GHSA-64jg-wjww-7c5w">https://github.com/advisories/GHSA-64jg-wjww-7c5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64jg-wjww-7c5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow has Null Pointer Error in TensorArrayConcatV2]]></title>
        <id>https://github.com/advisories/GHSA-64jg-wjww-7c5w</id>
        <link href="https://github.com/advisories/GHSA-64jg-wjww-7c5w"/>
        <updated>2023-03-24T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When ctx-&gt;step_containter() is a null ptr, the Lookup function will be executed with a null pointer.</p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">239139d2ae6a81ae9ba499ad78b56d9b2931538a</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a</a></li>
<li><a href="https://github.com/advisories/GHSA-64jg-wjww-7c5w">https://github.com/advisories/GHSA-64jg-wjww-7c5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64jg-wjww-7c5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow has Null Pointer Error in TensorArrayConcatV2]]></title>
        <id>https://github.com/advisories/GHSA-64jg-wjww-7c5w</id>
        <link href="https://github.com/advisories/GHSA-64jg-wjww-7c5w"/>
        <updated>2023-03-24T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When ctx-&gt;step_containter() is a null ptr, the Lookup function will be executed with a null pointer.</p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">239139d2ae6a81ae9ba499ad78b56d9b2931538a</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-64jg-wjww-7c5w</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a">https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a</a></li>
<li><a href="https://github.com/advisories/GHSA-64jg-wjww-7c5w">https://github.com/advisories/GHSA-64jg-wjww-7c5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-64jg-wjww-7c5w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow has Heap-buffer-overflow in AvgPoolGrad ]]></title>
        <id>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</id>
        <link href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr"/>
        <updated>2023-03-24T21:58:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<pre><code class="language-python">import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
import tensorflow as tf
print(tf.__version__)
with tf.device("CPU"):
    ksize = [1, 40, 128, 1]
    strides = [1, 128, 128, 30]
    padding = "SAME"
    data_format = "NHWC"
    orig_input_shape = [11, 9, 78, 9]
    grad = tf.saturate_cast(tf.random.uniform([16, 16, 16, 16], minval=-128, maxval=129, dtype=tf.int64), dtype=tf.float32)
    res = tf.raw_ops.AvgPoolGrad(
        ksize=ksize,
        strides=strides,
        padding=padding,
        data_format=data_format,
        orig_input_shape=orig_input_shape,
        grad=grad,
    )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">ddaac2bdd099bec5d7923dea45276a7558217e5b</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by <a href="mailto:evn@google.com">evn@google.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b</a></li>
<li><a href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow has Heap-buffer-overflow in AvgPoolGrad ]]></title>
        <id>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</id>
        <link href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr"/>
        <updated>2023-03-24T21:58:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<pre><code class="language-python">import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
import tensorflow as tf
print(tf.__version__)
with tf.device("CPU"):
    ksize = [1, 40, 128, 1]
    strides = [1, 128, 128, 30]
    padding = "SAME"
    data_format = "NHWC"
    orig_input_shape = [11, 9, 78, 9]
    grad = tf.saturate_cast(tf.random.uniform([16, 16, 16, 16], minval=-128, maxval=129, dtype=tf.int64), dtype=tf.float32)
    res = tf.raw_ops.AvgPoolGrad(
        ksize=ksize,
        strides=strides,
        padding=padding,
        data_format=data_format,
        orig_input_shape=orig_input_shape,
        grad=grad,
    )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">ddaac2bdd099bec5d7923dea45276a7558217e5b</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by <a href="mailto:evn@google.com">evn@google.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b</a></li>
<li><a href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow has Heap-buffer-overflow in AvgPoolGrad ]]></title>
        <id>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</id>
        <link href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr"/>
        <updated>2023-03-24T21:58:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<pre><code class="language-python">import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
import tensorflow as tf
print(tf.__version__)
with tf.device("CPU"):
    ksize = [1, 40, 128, 1]
    strides = [1, 128, 128, 30]
    padding = "SAME"
    data_format = "NHWC"
    orig_input_shape = [11, 9, 78, 9]
    grad = tf.saturate_cast(tf.random.uniform([16, 16, 16, 16], minval=-128, maxval=129, dtype=tf.int64), dtype=tf.float32)
    res = tf.raw_ops.AvgPoolGrad(
        ksize=ksize,
        strides=strides,
        padding=padding,
        data_format=data_format,
        orig_input_shape=orig_input_shape,
        grad=grad,
    )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">ddaac2bdd099bec5d7923dea45276a7558217e5b</a>.</p>
<p>The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by <a href="mailto:evn@google.com">evn@google.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b">https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b</a></li>
<li><a href="https://github.com/advisories/GHSA-6hg6-5c2q-7rcr">https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6hg6-5c2q-7rcr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:58:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow has Null Pointer Error in SparseSparseMaximum]]></title>
        <id>https://github.com/advisories/GHSA-558h-mq8x-7q9g</id>
        <link href="https://github.com/advisories/GHSA-558h-mq8x-7q9g"/>
        <updated>2023-03-24T21:57:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>SparseSparseMaximum</code> is given invalid sparse tensors as inputs, it can give an NPE. </p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.SparseSparseMaximum(
 a_indices=[[1]],
 a_values =[ 0.1 ],
 a_shape = [2],
 b_indices=[[]],
 b_values =[2 ],
 b_shape = [2],
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a></li>
<li><a href="https://github.com/advisories/GHSA-558h-mq8x-7q9g">https://github.com/advisories/GHSA-558h-mq8x-7q9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-558h-mq8x-7q9g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:57:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow has Null Pointer Error in SparseSparseMaximum]]></title>
        <id>https://github.com/advisories/GHSA-558h-mq8x-7q9g</id>
        <link href="https://github.com/advisories/GHSA-558h-mq8x-7q9g"/>
        <updated>2023-03-24T21:57:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>SparseSparseMaximum</code> is given invalid sparse tensors as inputs, it can give an NPE. </p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.SparseSparseMaximum(
 a_indices=[[1]],
 a_values =[ 0.1 ],
 a_shape = [2],
 b_indices=[[]],
 b_values =[2 ],
 b_shape = [2],
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a></li>
<li><a href="https://github.com/advisories/GHSA-558h-mq8x-7q9g">https://github.com/advisories/GHSA-558h-mq8x-7q9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-558h-mq8x-7q9g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:57:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow has Null Pointer Error in SparseSparseMaximum]]></title>
        <id>https://github.com/advisories/GHSA-558h-mq8x-7q9g</id>
        <link href="https://github.com/advisories/GHSA-558h-mq8x-7q9g"/>
        <updated>2023-03-24T21:57:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>SparseSparseMaximum</code> is given invalid sparse tensors as inputs, it can give an NPE. </p>
<pre><code class="language-python">import tensorflow as tf
tf.raw_ops.SparseSparseMaximum(
 a_indices=[[1]],
 a_values =[ 0.1 ],
 a_shape = [2],
 b_indices=[[]],
 b_values =[2 ],
 b_shape = [2],
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a>.</p>
<p>The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-558h-mq8x-7q9g</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04">https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04</a></li>
<li><a href="https://github.com/advisories/GHSA-558h-mq8x-7q9g">https://github.com/advisories/GHSA-558h-mq8x-7q9g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-558h-mq8x-7q9g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-24T21:57:25.000Z</published>
    </entry>
</feed>