<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-09-07T17:01:29.551Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[webargs] Cross-Site Request Forgery in Webargs]]></title>
        <id>https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</id>
        <link href="https://github.com/advisories/GHSA-fjq3-5pxw-4wj4"/>
        <updated>2023-09-07T15:55:33.000Z</updated>
        <content type="html"><![CDATA[<p>flaskparser.py in Webargs 5.x through 5.5.2 doesn't check that the Content-Type header is application/json when receiving JSON input. If the request body is valid JSON, it will accept it even if the content type is application/x-www-form-urlencoded. This allows for JSON POST requests to be made across domains, leading to CSRF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7965">https://nvd.nist.gov/vuln/detail/CVE-2020-7965</a></li>
<li><a href="https://github.com/marshmallow-code/webargs/commit/b9ee8b0aa668207a363d9fd21d967eeadb975c3e">https://github.com/marshmallow-code/webargs/commit/b9ee8b0aa668207a363d9fd21d967eeadb975c3e</a></li>
<li><a href="https://webargs.readthedocs.io/en/latest/changelog.html#b4-2020-01-28">https://webargs.readthedocs.io/en/latest/changelog.html#b4-2020-01-28</a></li>
<li><a href="https://webargs.readthedocs.io/en/latest/changelog.html#id11">https://webargs.readthedocs.io/en/latest/changelog.html#id11</a></li>
<li><a href="https://github.com/advisories/GHSA-fjq3-5pxw-4wj4">https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-04-07T21:06:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webargs] Cross-Site Request Forgery in Webargs]]></title>
        <id>https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</id>
        <link href="https://github.com/advisories/GHSA-fjq3-5pxw-4wj4"/>
        <updated>2023-09-07T15:55:33.000Z</updated>
        <content type="html"><![CDATA[<p>flaskparser.py in Webargs 5.x through 5.5.2 doesn't check that the Content-Type header is application/json when receiving JSON input. If the request body is valid JSON, it will accept it even if the content type is application/x-www-form-urlencoded. This allows for JSON POST requests to be made across domains, leading to CSRF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7965">https://nvd.nist.gov/vuln/detail/CVE-2020-7965</a></li>
<li><a href="https://github.com/marshmallow-code/webargs/commit/b9ee8b0aa668207a363d9fd21d967eeadb975c3e">https://github.com/marshmallow-code/webargs/commit/b9ee8b0aa668207a363d9fd21d967eeadb975c3e</a></li>
<li><a href="https://webargs.readthedocs.io/en/latest/changelog.html#b4-2020-01-28">https://webargs.readthedocs.io/en/latest/changelog.html#b4-2020-01-28</a></li>
<li><a href="https://webargs.readthedocs.io/en/latest/changelog.html#id11">https://webargs.readthedocs.io/en/latest/changelog.html#id11</a></li>
<li><a href="https://github.com/advisories/GHSA-fjq3-5pxw-4wj4">https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fjq3-5pxw-4wj4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-04-07T21:06:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mpxj] Temporary File Information Disclosure vulnerability in MPXJ]]></title>
        <id>https://github.com/advisories/GHSA-jf2p-4gqj-849g</id>
        <link href="https://github.com/advisories/GHSA-jf2p-4gqj-849g"/>
        <updated>2023-09-07T14:54:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Unix-like operating systems (not Windows or macos), MPXJ's use of <code>File.createTempFile(..)</code> results in temporary files being created with the permissions <code>-rw-r--r--</code>. This means that any other user on the system can read the contents of this file. When MPXJ is reading a type of schedule file which requires the creation of a temporary file or directory, a knowledgeable local user could locate these transient files while they are in use and would then be able to read the schedule being processed by MPXJ.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched, MPXJ version 10.14.1 and later includes the necessary changes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Setting <code>java.io.tmpdir</code> to a directory to which only the user running the application has access will prevent other users from accessing these temporary files.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory</p>
<ul>
<li>Open an issue in <a href="https://github.com/joniles/mpxj">https://github.com/joniles/mpxj</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g">https://github.com/joniles/mpxj/security/advisories/GHSA-jf2p-4gqj-849g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41954">https://nvd.nist.gov/vuln/detail/CVE-2022-41954</a></li>
<li><a href="https://github.com/joniles/mpxj/commit/ae0af24345d79ad45705265d9927fe55e94a5721">https://github.com/joniles/mpxj/commit/ae0af24345d79ad45705265d9927fe55e94a5721</a></li>
<li><a href="https://github.com/advisories/GHSA-jf2p-4gqj-849g">https://github.com/advisories/GHSA-jf2p-4gqj-849g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf2p-4gqj-849g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-28T22:09:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset has incorrect authorization check]]></title>
        <id>https://github.com/advisories/GHSA-95ch-p3gw-23qg</id>
        <link href="https://github.com/advisories/GHSA-95ch-p3gw-23qg"/>
        <updated>2023-09-07T13:59:31.000Z</updated>
        <content type="html"><![CDATA[<p>An Incorrect authorisation check in SQLLab in Apache Superset versions up to and including 2.1.0. This vulnerability allows an authenticated user to query tables that they do not have proper access to within Superset. The vulnerability can be exploited by leveraging a SQL parsing vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32672">https://nvd.nist.gov/vuln/detail/CVE-2023-32672</a></li>
<li><a href="https://lists.apache.org/thread/ococ6nlj80f0okkwfwpjczy3q84j3wkp">https://lists.apache.org/thread/ococ6nlj80f0okkwfwpjczy3q84j3wkp</a></li>
<li><a href="https://github.com/advisories/GHSA-95ch-p3gw-23qg">https://github.com/advisories/GHSA-95ch-p3gw-23qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-95ch-p3gw-23qg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-06T15:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset vulnerable to improper data authorization]]></title>
        <id>https://github.com/advisories/GHSA-v594-2c97-hx38</id>
        <link href="https://github.com/advisories/GHSA-v594-2c97-hx38"/>
        <updated>2023-09-07T13:59:25.000Z</updated>
        <content type="html"><![CDATA[<p>Improper data authorization check on Jinja templated queries in Apache Superset&nbsp;up to and including 2.1.0 allows for an authenticated user to issue queries on database tables they may not have access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27523">https://nvd.nist.gov/vuln/detail/CVE-2023-27523</a></li>
<li><a href="https://lists.apache.org/thread/3y97nmwm956b6zg3l8dh9oj0w7dj945h">https://lists.apache.org/thread/3y97nmwm956b6zg3l8dh9oj0w7dj945h</a></li>
<li><a href="https://github.com/advisories/GHSA-v594-2c97-hx38">https://github.com/advisories/GHSA-v594-2c97-hx38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v594-2c97-hx38</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-06T15:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Remote Code Execution in Custom Integration Upload]]></title>
        <id>https://github.com/advisories/GHSA-p6p2-qq95-vq5h</id>
        <link href="https://github.com/advisories/GHSA-p6p2-qq95-vq5h"/>
        <updated>2023-09-07T12:59:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Fides webserver API allows custom integrations to be uploaded as a ZIP file. This ZIP file must contain YAML files, but Fides can be configured to also accept the inclusion of custom Python code in it. The custom code is executed in a restricted, sandboxed environment, but the sandbox can be bypassed to execute any arbitrary code.</p>
<p>The vulnerability allows the execution of arbitrary code on the target system within the context of the webserver python process owner on the webserver container, which by default is <code>root</code>, and leverage that access to attack underlying infrastructure and integrated systems.</p>
<p>This vulnerability affects Fides versions <code>2.11.0</code> through <code>2.18.0</code>.</p>
<p>Exploitation is limited to API clients with the <code>CONNECTOR_TEMPLATE_REGISTER</code> authorization scope. In the Fides Admin UI this scope is restricted to highly privileged users, specifically root users and users with the owner role. </p>
<p>Exploitation is only possible if the security configuration parameter <code>allow_custom_connector_functions</code> is enabled by the user deploying the Fides webserver container, either in <code>fides.toml</code> or by setting the env var <code>FIDES__SECURITY__ALLOW_CUSTOM_CONNECTOR_FUNCTIONS=True</code>. By default this configuration parameter is disabled.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.19.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that <code>allow_custom_connector_functions</code> in <code>fides.toml</code> and the <code>FIDES__SECURITY__ALLOW_CUSTOM_CONNECTOR_FUNCTIONS</code> are both either unset or explicit set to <code>False</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-p6p2-qq95-vq5h">https://github.com/ethyca/fides/security/advisories/GHSA-p6p2-qq95-vq5h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41319">https://nvd.nist.gov/vuln/detail/CVE-2023-41319</a></li>
<li><a href="https://github.com/ethyca/fides/commit/5989b5fa744c8d8c340963b895a054883549358a">https://github.com/ethyca/fides/commit/5989b5fa744c8d8c340963b895a054883549358a</a></li>
<li><a href="https://github.com/advisories/GHSA-p6p2-qq95-vq5h">https://github.com/advisories/GHSA-p6p2-qq95-vq5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6p2-qq95-vq5h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-07T12:59:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Zope] Information disclosure in AccessControl]]></title>
        <id>https://github.com/advisories/GHSA-8xv7-89vj-q48c</id>
        <link href="https://github.com/advisories/GHSA-8xv7-89vj-q48c"/>
        <updated>2023-09-07T12:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown <code>getattr</code> and <code>getitem</code>, not the policy restricted <code>AccessControl</code> variants <code>_getattr_</code> and <code>_getitem_</code>. This can lead to critical information disclosure.</p>
<p><code>AccessControl</code> already provides a safe variant for <code>str.format</code> and denies access to <code>string.Formatter</code>. However, <code>str.format_map</code> is still unsafe.</p>
<p>Affected are all users who allow untrusted users to create <code>AccessControl</code> controlled Python code and execute it.</p>
<h3 id="patches">Patches</h3>
<p>A fix will be introduced in the versions 4.4, 5.8 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a> describes the corresponding problem for <code>RestrictedPython</code>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41050">https://nvd.nist.gov/vuln/detail/CVE-2023-41050</a></li>
<li><a href="https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9">https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-8xv7-89vj-q48c">https://github.com/advisories/GHSA-8xv7-89vj-q48c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xv7-89vj-q48c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[AccessControl] Information disclosure in AccessControl]]></title>
        <id>https://github.com/advisories/GHSA-8xv7-89vj-q48c</id>
        <link href="https://github.com/advisories/GHSA-8xv7-89vj-q48c"/>
        <updated>2023-09-07T12:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown <code>getattr</code> and <code>getitem</code>, not the policy restricted <code>AccessControl</code> variants <code>_getattr_</code> and <code>_getitem_</code>. This can lead to critical information disclosure.</p>
<p><code>AccessControl</code> already provides a safe variant for <code>str.format</code> and denies access to <code>string.Formatter</code>. However, <code>str.format_map</code> is still unsafe.</p>
<p>Affected are all users who allow untrusted users to create <code>AccessControl</code> controlled Python code and execute it.</p>
<h3 id="patches">Patches</h3>
<p>A fix will be introduced in the versions 4.4, 5.8 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a> describes the corresponding problem for <code>RestrictedPython</code>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41050">https://nvd.nist.gov/vuln/detail/CVE-2023-41050</a></li>
<li><a href="https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9">https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-8xv7-89vj-q48c">https://github.com/advisories/GHSA-8xv7-89vj-q48c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xv7-89vj-q48c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[AccessControl] Information disclosure in AccessControl]]></title>
        <id>https://github.com/advisories/GHSA-8xv7-89vj-q48c</id>
        <link href="https://github.com/advisories/GHSA-8xv7-89vj-q48c"/>
        <updated>2023-09-07T12:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown <code>getattr</code> and <code>getitem</code>, not the policy restricted <code>AccessControl</code> variants <code>_getattr_</code> and <code>_getitem_</code>. This can lead to critical information disclosure.</p>
<p><code>AccessControl</code> already provides a safe variant for <code>str.format</code> and denies access to <code>string.Formatter</code>. However, <code>str.format_map</code> is still unsafe.</p>
<p>Affected are all users who allow untrusted users to create <code>AccessControl</code> controlled Python code and execute it.</p>
<h3 id="patches">Patches</h3>
<p>A fix will be introduced in the versions 4.4, 5.8 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a> describes the corresponding problem for <code>RestrictedPython</code>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41050">https://nvd.nist.gov/vuln/detail/CVE-2023-41050</a></li>
<li><a href="https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9">https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-8xv7-89vj-q48c">https://github.com/advisories/GHSA-8xv7-89vj-q48c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xv7-89vj-q48c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Zope] Information disclosure in AccessControl]]></title>
        <id>https://github.com/advisories/GHSA-8xv7-89vj-q48c</id>
        <link href="https://github.com/advisories/GHSA-8xv7-89vj-q48c"/>
        <updated>2023-09-07T12:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown <code>getattr</code> and <code>getitem</code>, not the policy restricted <code>AccessControl</code> variants <code>_getattr_</code> and <code>_getitem_</code>. This can lead to critical information disclosure.</p>
<p><code>AccessControl</code> already provides a safe variant for <code>str.format</code> and denies access to <code>string.Formatter</code>. However, <code>str.format_map</code> is still unsafe.</p>
<p>Affected are all users who allow untrusted users to create <code>AccessControl</code> controlled Python code and execute it.</p>
<h3 id="patches">Patches</h3>
<p>A fix will be introduced in the versions 4.4, 5.8 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a> describes the corresponding problem for <code>RestrictedPython</code>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41050">https://nvd.nist.gov/vuln/detail/CVE-2023-41050</a></li>
<li><a href="https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9">https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-8xv7-89vj-q48c">https://github.com/advisories/GHSA-8xv7-89vj-q48c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xv7-89vj-q48c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[AccessControl] Information disclosure in AccessControl]]></title>
        <id>https://github.com/advisories/GHSA-8xv7-89vj-q48c</id>
        <link href="https://github.com/advisories/GHSA-8xv7-89vj-q48c"/>
        <updated>2023-09-07T12:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown <code>getattr</code> and <code>getitem</code>, not the policy restricted <code>AccessControl</code> variants <code>_getattr_</code> and <code>_getitem_</code>. This can lead to critical information disclosure.</p>
<p><code>AccessControl</code> already provides a safe variant for <code>str.format</code> and denies access to <code>string.Formatter</code>. However, <code>str.format_map</code> is still unsafe.</p>
<p>Affected are all users who allow untrusted users to create <code>AccessControl</code> controlled Python code and execute it.</p>
<h3 id="patches">Patches</h3>
<p>A fix will be introduced in the versions 4.4, 5.8 and 6.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67">https://github.com/zopefoundation/RestrictedPython/security/advisories/GHSA-xjw2-6jm9-rf67</a> describes the corresponding problem for <code>RestrictedPython</code>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c">https://github.com/zopefoundation/AccessControl/security/advisories/GHSA-8xv7-89vj-q48c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41050">https://nvd.nist.gov/vuln/detail/CVE-2023-41050</a></li>
<li><a href="https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9">https://github.com/zopefoundation/AccessControl/commit/6bc32692e0d4b8d5cf64eae3d19de987c7375bc9</a></li>
<li><a href="https://github.com/advisories/GHSA-8xv7-89vj-q48c">https://github.com/advisories/GHSA-8xv7-89vj-q48c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8xv7-89vj-q48c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:56:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[starlette] Duplicate Advisory: Starlette vulnerable to directory traversal]]></title>
        <id>https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</id>
        <link href="https://github.com/advisories/GHSA-qj8w-rv5x-2v9h"/>
        <updated>2023-09-07T05:07:10.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-v5gw-mw7f-84px. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Directory traversal vulnerability in Starlette versions 0.13.5 and later and prior to 0.27.0 allows a remote unauthenticated attacker to view files in a web service which was built using Starlette.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px">https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29159">https://nvd.nist.gov/vuln/detail/CVE-2023-29159</a></li>
<li><a href="https://github.com/encode/starlette/releases/tag/0.27.0">https://github.com/encode/starlette/releases/tag/0.27.0</a></li>
<li><a href="https://jvn.jp/en/jp/JVN95981715/">https://jvn.jp/en/jp/JVN95981715/</a></li>
<li><a href="https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3">https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3</a></li>
<li><a href="https://github.com/advisories/GHSA-qj8w-rv5x-2v9h">https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-01T03:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django bypasses validation when using one form field to upload multiple files]]></title>
        <id>https://github.com/advisories/GHSA-r3xc-prgr-mg9p</id>
        <link href="https://github.com/advisories/GHSA-r3xc-prgr-mg9p"/>
        <updated>2023-09-07T05:06:34.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's "Uploading multiple files" documentation suggested otherwise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31047">https://nvd.nist.gov/vuln/detail/CVE-2023-31047</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/may/03/security-releases/">https://www.djangoproject.com/weblog/2023/may/03/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd">https://github.com/django/django/commit/21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd</a></li>
<li><a href="https://github.com/django/django/commit/e7c3a2ccc3a562328600be05068ed9149e12ce64">https://github.com/django/django/commit/e7c3a2ccc3a562328600be05068ed9149e12ce64</a></li>
<li><a href="https://github.com/django/django/commit/eed53d0011622e70b936e203005f0e6f4ac48965">https://github.com/django/django/commit/eed53d0011622e70b936e203005f0e6f4ac48965</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A45VKTUVQ2BN6D5ZLZGCM774R6QGFOHW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A45VKTUVQ2BN6D5ZLZGCM774R6QGFOHW/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DNEHD6N435OE2XUFGDAAVAXSYWLCUBFD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DNEHD6N435OE2XUFGDAAVAXSYWLCUBFD/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-61.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-61.yaml</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230609-0008/">https://security.netapp.com/advisory/ntap-20230609-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-r3xc-prgr-mg9p">https://github.com/advisories/GHSA-r3xc-prgr-mg9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3xc-prgr-mg9p</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-05-07T03:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-drill] apache-airflow-providers-apache-drill Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mq4v-6vg4-796c</id>
        <link href="https://github.com/advisories/GHSA-mq4v-6vg4-796c"/>
        <updated>2023-09-07T05:05:40.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.</p>
<p>Apache Airflow Drill Provider is affected by a vulnerability that allows an attacker to pass in malicious parameters when establishing a connection with DrillHook giving an opportunity to read files on the Airflow server.
This issue affects Apache Airflow Drill Provider before 2.4.3.
It is recommended to upgrade to a version that is not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39553">https://nvd.nist.gov/vuln/detail/CVE-2023-39553</a></li>
<li><a href="https://github.com/apache/airflow/pull/33074">https://github.com/apache/airflow/pull/33074</a></li>
<li><a href="https://lists.apache.org/thread/ozpl0opmob49rkcz8svo8wkxyw1395sf">https://lists.apache.org/thread/ozpl0opmob49rkcz8svo8wkxyw1395sf</a></li>
<li><a href="https://github.com/apache/airflow/commit/394a727ac2c18d58978bf186a7a92923460ec110">https://github.com/apache/airflow/commit/394a727ac2c18d58978bf186a7a92923460ec110</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/11/1">http://www.openwall.com/lists/oss-security/2023/08/11/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-136.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-136.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-mq4v-6vg4-796c">https://github.com/advisories/GHSA-mq4v-6vg4-796c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq4v-6vg4-796c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-11T09:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Fides Webserver Vulnerable to Zip Bomb File Uploads]]></title>
        <id>https://github.com/advisories/GHSA-g95c-2jgm-hqc6</id>
        <link href="https://github.com/advisories/GHSA-g95c-2jgm-hqc6"/>
        <updated>2023-09-07T05:05:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Fides webserver is vulnerable to a type of Denial of Service (DoS) attack. Attackers can exploit a weakness in the connector template upload feature to upload a malicious zip bomb file, resulting in resource exhaustion and service unavailability for all users of the Fides webserver.</p>
<p>This vulnerability affects Fides versions <code>2.11.0</code> through <code>2.15.1</code>. Exploitation is limited to users with elevated privileges with the <code>CONNECTOR_TEMPLATE_REGISTER</code> scope, which includes root users and users with the owner role.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.16.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround to remediate this vulnerability without upgrading. If an attack occurs, the impact can be mitigated by manually or automatically restarting the affected container.</p>
<h3 id="references">References</h3>
<p>More information about this type of vulnerability can be found at the following links:</p>
<ul>
<li><a href="https://www.bamsoftware.com/hacks/zipbomb/">https://www.bamsoftware.com/hacks/zipbomb/</a></li>
<li><a href="https://python-security.readthedocs.io/security.html#archives-and-zip-bomb-cve-2019-9674">https://python-security.readthedocs.io/security.html#archives-and-zip-bomb-cve-2019-9674</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-g95c-2jgm-hqc6">https://github.com/ethyca/fides/security/advisories/GHSA-g95c-2jgm-hqc6</a></li>
<li><a href="https://github.com/ethyca/fides/commit/5aea738463960d81821c11ae7ade1d627a46bf32">https://github.com/ethyca/fides/commit/5aea738463960d81821c11ae7ade1d627a46bf32</a></li>
<li><a href="https://github.com/ethyca/fides/releases/tag/2.16.0">https://github.com/ethyca/fides/releases/tag/2.16.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37480">https://nvd.nist.gov/vuln/detail/CVE-2023-37480</a></li>
<li><a href="https://github.com/advisories/GHSA-g95c-2jgm-hqc6">https://github.com/advisories/GHSA-g95c-2jgm-hqc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g95c-2jgm-hqc6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-18T19:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flask] Flask vulnerable to possible disclosure of permanent session cookie due to missing Vary: Cookie header]]></title>
        <id>https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</id>
        <link href="https://github.com/advisories/GHSA-m2qf-hxjv-5gpq"/>
        <updated>2023-09-07T05:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by a proxy to other clients. If the proxy also caches <code>Set-Cookie</code> headers, it may send one client's <code>session</code> cookie to other clients. The severity depends on the application's use of the session, and the proxy's behavior regarding cookies. The risk depends on <em>all</em> these conditions being met.</p>
<ol>
<li>The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.</li>
<li>The application sets <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.session.permanent"><code>session.permanent = True</code></a>.</li>
<li>The application does not access or modify the session at any point during a request.</li>
<li><a href="https://flask.palletsprojects.com/en/2.3.x/config/#SESSION_REFRESH_EACH_REQUEST"><code>SESSION_REFRESH_EACH_REQUEST</code></a> is enabled (the default).</li>
<li>The application does not set a <code>Cache-Control</code> header to indicate that a page is private or should not be cached.</li>
</ol>
<p>This happens because vulnerable versions of Flask only set the <code>Vary: Cookie</code> header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq">https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq</a></li>
<li><a href="https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b">https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b</a></li>
<li><a href="https://github.com/pallets/flask/releases/tag/2.3.2">https://github.com/pallets/flask/releases/tag/2.3.2</a></li>
<li><a href="https://github.com/pallets/flask/commit/afd63b16170b7c047f5758eb910c416511e9c965">https://github.com/pallets/flask/commit/afd63b16170b7c047f5758eb910c416511e9c965</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30861">https://nvd.nist.gov/vuln/detail/CVE-2023-30861</a></li>
<li><a href="https://github.com/pallets/flask/releases/tag/2.2.5">https://github.com/pallets/flask/releases/tag/2.2.5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/flask/PYSEC-2023-62.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/flask/PYSEC-2023-62.yaml</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5442">https://www.debian.org/security/2023/dsa-5442</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230818-0006/">https://security.netapp.com/advisory/ntap-20230818-0006/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/08/msg00024.html">https://lists.debian.org/debian-lts-announce/2023/08/msg00024.html</a></li>
<li><a href="https://github.com/advisories/GHSA-m2qf-hxjv-5gpq">https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-01T19:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Cross-site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6565-fg86-6jcx</id>
        <link href="https://github.com/advisories/GHSA-6565-fg86-6jcx"/>
        <updated>2023-09-07T05:03:40.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the contents function in <code>admin/helpers.py</code> in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in <code>ModelAdmin.readonly_fields</code>, as demonstrated by an <code>@property</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-2241">https://nvd.nist.gov/vuln/detail/CVE-2015-2241</a></li>
<li><a href="https://code.djangoproject.com/ticket/24461">https://code.djangoproject.com/ticket/24461</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/mar/09/security-releases/">https://www.djangoproject.com/weblog/2015/mar/09/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/2654e1b93923bac55f12b4e66c5e39b16695ace5">https://github.com/django/django/commit/2654e1b93923bac55f12b4e66c5e39b16695ace5</a></li>
<li><a href="https://github.com/django/django/commit/82c9169077a066995e3b00aac551bf1c8a89d98a">https://github.com/django/django/commit/82c9169077a066995e3b00aac551bf1c8a89d98a</a></li>
<li><a href="https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109">https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109</a></li>
<li><a href="https://web.archive.org/web/20171112005349/http://www.securityfocus.com/bid/73095">https://web.archive.org/web/20171112005349/http://www.securityfocus.com/bid/73095</a></li>
<li><a href="https://github.com/advisories/GHSA-6565-fg86-6jcx">https://github.com/advisories/GHSA-6565-fg86-6jcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6565-fg86-6jcx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:34:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django has regular expression denial of service vulnerability in EmailValidator/URLValidator]]></title>
        <id>https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</id>
        <link href="https://github.com/advisories/GHSA-jh3w-4vvf-mjgr"/>
        <updated>2023-09-07T05:03:22.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, <code>EmailValidator</code> and <code>URLValidator</code> are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36053">https://nvd.nist.gov/vuln/detail/CVE-2023-36053</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/jul/03/security-releases/">https://www.djangoproject.com/weblog/2023/jul/03/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/454f2fb93437f98917283336201b4048293f7582">https://github.com/django/django/commit/454f2fb93437f98917283336201b4048293f7582</a></li>
<li><a href="https://github.com/django/django/commit/ad0410ec4f458aa39803e5f6b9a3736527062dcd">https://github.com/django/django/commit/ad0410ec4f458aa39803e5f6b9a3736527062dcd</a></li>
<li><a href="https://github.com/django/django/commit/b7c5feb35a31799de6e582ad6a5a91a9de74e0f9">https://github.com/django/django/commit/b7c5feb35a31799de6e582ad6a5a91a9de74e0f9</a></li>
<li><a href="https://github.com/django/django/commit/beb3f3d55940d9aa7198bf9d424ab74e873aec3d">https://github.com/django/django/commit/beb3f3d55940d9aa7198bf9d424ab74e873aec3d</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-100.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-100.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/07/msg00022.html">https://lists.debian.org/debian-lts-announce/2023/07/msg00022.html</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5465">https://www.debian.org/security/2023/dsa-5465</a></li>
<li><a href="https://github.com/advisories/GHSA-jh3w-4vvf-mjgr">https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-03T15:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-markupfield] django-markupfield Arbitrary File Read]]></title>
        <id>https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</id>
        <link href="https://github.com/advisories/GHSA-wxmr-7xjv-8xqw"/>
        <updated>2023-09-07T05:03:14.000Z</updated>
        <content type="html"><![CDATA[<p>django-markupfield before 1.3.2 uses the default docutils <code>RESTRUCTUREDTEXT_FILTER_SETTINGS</code> settings, which allows remote attackers to include and read arbitrary files via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-0846">https://nvd.nist.gov/vuln/detail/CVE-2015-0846</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3230">http://www.debian.org/security/2015/dsa-3230</a></li>
<li><a href="https://github.com/jamesturk/django-markupfield/commit/b45734ea1d206abc1ed2a90bdc779708066d49f3">https://github.com/jamesturk/django-markupfield/commit/b45734ea1d206abc1ed2a90bdc779708066d49f3</a></li>
<li><a href="https://github.com/jamesturk/django-markupfield/blob/1.3.3/CHANGELOG">https://github.com/jamesturk/django-markupfield/blob/1.3.3/CHANGELOG</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/apr/21/docutils-security-advisory/">https://www.djangoproject.com/weblog/2015/apr/21/docutils-security-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-wxmr-7xjv-8xqw">https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T04:13:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Vulnerable to HTTP Response Splitting Attack]]></title>
        <id>https://github.com/advisories/GHSA-q5qw-4364-5hhm</id>
        <link href="https://github.com/advisories/GHSA-q5qw-4364-5hhm"/>
        <updated>2023-09-07T05:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-5144">https://nvd.nist.gov/vuln/detail/CVE-2015-5144</a></li>
<li><a href="https://security.gentoo.org/glsa/201510-06">https://security.gentoo.org/glsa/201510-06</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/jul/08/security-releases/">https://www.djangoproject.com/weblog/2015/jul/08/security-releases/</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3305">http://www.debian.org/security/2015/dsa-3305</a></li>
<li><a href="http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html">http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2671-1">http://www.ubuntu.com/usn/USN-2671-1</a></li>
<li><a href="https://github.com/django/django/commit/1ba1cdce7d58e6740fe51955d945b56ae51d072a">https://github.com/django/django/commit/1ba1cdce7d58e6740fe51955d945b56ae51d072a</a></li>
<li><a href="https://github.com/django/django/commit/574dd5e0b0fbb877ae5827b1603d298edc9bb2a0">https://github.com/django/django/commit/574dd5e0b0fbb877ae5827b1603d298edc9bb2a0</a></li>
<li><a href="https://github.com/django/django/commit/ae49b4d994656bc037513dcd064cb9ce5bb85649">https://github.com/django/django/commit/ae49b4d994656bc037513dcd064cb9ce5bb85649</a></li>
<li><a href="https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.4.21.txt#L30-L54">https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.4.21.txt#L30-L54</a></li>
<li><a href="https://web.archive.org/web/20150924150801/http://www.securitytracker.com/id/1032820">https://web.archive.org/web/20150924150801/http://www.securitytracker.com/id/1032820</a></li>
<li><a href="https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/75665">https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/75665</a></li>
<li><a href="https://github.com/advisories/GHSA-q5qw-4364-5hhm">https://github.com/advisories/GHSA-q5qw-4364-5hhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q5qw-4364-5hhm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:48:30.000Z</published>
    </entry>
</feed>