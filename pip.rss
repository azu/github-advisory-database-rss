<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-04-26T00:21:13.061Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[Pillow] Out-of-bounds Read]]></title>
        <id>https://github.com/advisories/GHSA-f5g8-5qq7-938w</id>
        <link href="https://github.com/advisories/GHSA-f5g8-5qq7-938w"/>
        <updated>2022-04-25T23:38:57.000Z</updated>
        <content type="html"><![CDATA[<p>In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35653">https://nvd.nist.gov/vuln/detail/CVE-2020-35653</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6BYVI5G44MRIPERKYDQEL3S3YQCZTVHE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BF553AMNNNBW7SH4IM4MNE4M6GNZQ7YD/</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/index.html">https://pillow.readthedocs.io/en/stable/releasenotes/index.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html">https://lists.debian.org/debian-lts-announce/2021/07/msg00018.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f5g8-5qq7-938w">https://github.com/advisories/GHSA-f5g8-5qq7-938w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5g8-5qq7-938w</uri>
        </author>
        <published>2021-03-18T19:55:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: Invalid whitespace characters in headers in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</id>
        <link href="https://github.com/advisories/GHSA-m5ff-3wj3-8ph4"/>
        <updated>2022-04-25T23:09:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.</p>
<pre><code>Content-Length: 10
Transfer-Encoding: [\x0b]chunked
</code></pre>
<p>For clarity:</p>
<pre><code>0x0b == vertical tab
</code></pre>
<p>Would get parsed by Waitress as being a <code>chunked</code> request, but a front-end server would use the <code>Content-Length</code> instead as the <code>Transfer-Encoding</code> header is considered invalid due to containing invalid characters.</p>
<p>If a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.</p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.</p>
<p>Waitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.</p>
<h3 id="workarounds">Workarounds</h3>
<p>You may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.</p>
<p>Waitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.</p>
<h3 id="references">References</h3>
<p>This was mentioned in <a href="https://portswigger.net/research/http-desync-attacks-what-happened-next">https://portswigger.net/research/http-desync-attacks-what-happened-next</a> and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: <a href="https://nathandavison.com/blog/haproxy-http-request-smuggling">https://nathandavison.com/blog/haproxy-http-request-smuggling</a></p>
<h3 id="thanks">Thanks</h3>
<p>The Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a></li>
<li><a href="https://github.com/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5ff-3wj3-8ph4</uri>
        </author>
        <published>2019-12-26T16:34:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling in Waitress: Invalid whitespace characters in headers (Follow-up)]]></title>
        <id>https://github.com/advisories/GHSA-968f-66r5-5v74</id>
        <link href="https://github.com/advisories/GHSA-968f-66r5-5v74"/>
        <updated>2022-04-25T23:09:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The patches introduced to fix <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.</p>
<p>This updates the existing CVE with ID: CVE-2019-16789</p>
<h3 id="patches">Patches</h3>
<p>Waitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4">https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4</a> for more information on the security issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74">https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16789">https://nvd.nist.gov/vuln/detail/CVE-2019-16789</a></li>
<li><a href="https://github.com/github/advisory-review/pull/14604">https://github.com/github/advisory-review/pull/14604</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017">https://github.com/Pylons/waitress/commit/11d9e138125ad46e951027184b13242a3c1de017</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-968f-66r5-5v74">https://github.com/advisories/GHSA-968f-66r5-5v74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-968f-66r5-5v74</uri>
        </author>
        <published>2020-01-06T18:44:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</id>
        <link href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28347">https://nvd.nist.gov/vuln/detail/CVE-2022-28347</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81">https://github.com/django/django/commit/6723a26e59b0b5429a0c5873941e01a2e1bdbb81</a></li>
<li><a href="https://github.com/advisories/GHSA-w24h-v9qh-8gxj">https://github.com/advisories/GHSA-w24h-v9qh-8gxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w24h-v9qh-8gxj</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</id>
        <link href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r"/>
        <updated>2022-04-22T23:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-28346">https://nvd.nist.gov/vuln/detail/CVE-2022-28346</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/apr/11/security-releases/">https://www.djangoproject.com/weblog/2022/apr/11/security-releases/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/11/1">http://www.openwall.com/lists/oss-security/2022/04/11/1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html">https://lists.debian.org/debian-lts-announce/2022/04/msg00013.html</a></li>
<li><a href="https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200">https://github.com/django/django/commit/93cae5cb2f9a4ef1514cf1a41f714fef08005200</a></li>
<li><a href="https://github.com/advisories/GHSA-2gwj-7jmv-h26r">https://github.com/advisories/GHSA-2gwj-7jmv-h26r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2gwj-7jmv-h26r</uri>
        </author>
        <published>2022-04-13T00:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyPDF2] Manipulated inline images can cause Infinite Loop in PyPDF2]]></title>
        <id>https://github.com/advisories/GHSA-xcjx-m2pj-8g79</id>
        <link href="https://github.com/advisories/GHSA-xcjx-m2pj-8g79"/>
        <updated>2022-04-22T20:54:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 user wrote the following code:</p>
<pre><code class="language-python">from PyPDF2 import PdfFileReader, PdfFileWriter
from PyPDF2.pdf import ContentStream

reader = PdfFileReader("malicious.pdf", strict=False)
for page in reader.pages:
    ContentStream(page.getContents(), reader)
</code></pre>
<h3 id="patches">Patches</h3>
<p><a href="https://pypi.org/project/PyPDF2"><code>PyPDF2==1.27.5</code></a> and later are patched.</p>
<p>Credits to <a href="https://github.com/sekrause">Sebastian Krause</a> for finding (<a href="https://github.com/py-pdf/PyPDF2/issues/329">issue</a>) and fixing (<a href="https://github.com/py-pdf/PyPDF2/pull/740">PR</a>) it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79">https://github.com/py-pdf/PyPDF2/security/advisories/GHSA-xcjx-m2pj-8g79</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24859">https://nvd.nist.gov/vuln/detail/CVE-2022-24859</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/issues/329">https://github.com/py-pdf/PyPDF2/issues/329</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/pull/740">https://github.com/py-pdf/PyPDF2/pull/740</a></li>
<li><a href="https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5">https://github.com/py-pdf/PyPDF2/releases/tag/1.27.5</a></li>
<li><a href="https://github.com/advisories/GHSA-xcjx-m2pj-8g79">https://github.com/advisories/GHSA-xcjx-m2pj-8g79</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcjx-m2pj-8g79</uri>
        </author>
        <published>2022-04-22T20:54:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-mfa3] Improper Authentication in django-mfa3]]></title>
        <id>https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</id>
        <link href="https://github.com/advisories/GHSA-3r7g-wrpr-j5g4"/>
        <updated>2022-04-22T20:48:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>django-mfa3 is a library that implements multi factor authentication for the django web framework. It achieves this by modifying the regular login view. Django however has a second login view for its admin area. This second login view was not modified, so the multi factor authentication can be bypassed.</p>
<p>You are affected if you have activated both django-mfa3 (&lt; 0.5.0) and django.contrib.admin and have not taken any other measures to prevent users from accessing the admin login view.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in django-mfa3 0.5.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is possible to work around the issue by overwriting the admin login route, e.g. by adding the following URL definition <em>before</em> the admin routes:</p>
<pre><code>url('admin/login/', lambda request: redirect(settings.LOGIN_URL)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15">django-mfa3 changelog</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4">https://github.com/xi/django-mfa3/security/advisories/GHSA-3r7g-wrpr-j5g4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24857">https://nvd.nist.gov/vuln/detail/CVE-2022-24857</a></li>
<li><a href="https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de">https://github.com/xi/django-mfa3/commit/32f656e22df120b84bdf010e014bb19bd97971de</a></li>
<li><a href="https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15">https://github.com/xi/django-mfa3/blob/main/CHANGES.md#050-2022-04-15</a></li>
<li><a href="https://github.com/advisories/GHSA-3r7g-wrpr-j5g4">https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r7g-wrpr-j5g4</uri>
        </author>
        <published>2022-04-22T20:48:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[xml2rfc] SVG with embedded scripts can lead to cross-site scripting attacks in xml2rfc]]></title>
        <id>https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</id>
        <link href="https://github.com/advisories/GHSA-cf4q-4cqr-7g7w"/>
        <updated>2022-04-22T20:25:55.000Z</updated>
        <content type="html"><![CDATA[<p>xml2rfc allows <code>script</code> elements in SVG sources.
In HTML output having these script elements can lead to XSS attacks.</p>
<p>Sample XML snippet:</p>
<pre><code>&lt;artwork type="svg" src="data:image/svg+xml,%3Csvg viewBox='0 0 10 10' xmlns='http://www.w3.org/2000/svg'%3E%3Cscript%3E window.alert('Test Alert'); %3C/script%3E%3C/svg%3E"&gt;
&lt;/artwork&gt;
</code></pre>
<h3 id="impact">Impact</h3>
<p>This vulnerability impacts website that publish HTML drafts and RFCs.</p>
<h3 id="patches">Patches</h3>
<p>This has been fixed in version <a href="https://github.com/ietf-tools/xml2rfc/releases/tag/v3.12.4">3.12.4</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If SVG source is self-contained within the XML, scraping <code>script</code> elements from SVG files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ietf-tools/xml2rfc/">xml2rfc</a></li>
<li>Email us at <a href="mailto:operational-vulnerability@ietf.org">operational-vulnerability@ietf.org</a></li>
<li><a href="https://www.ietf.org/about/administration/policies-procedures/vulnerability-disclosure/">Infrastructure and Services Vulnerability Disclosure</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w">https://github.com/ietf-tools/xml2rfc/security/advisories/GHSA-cf4q-4cqr-7g7w</a></li>
<li><a href="https://github.com/advisories/GHSA-cf4q-4cqr-7g7w">https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cf4q-4cqr-7g7w</uri>
        </author>
        <published>2022-04-22T20:25:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Integer bounds error in Vyper]]></title>
        <id>https://github.com/advisories/GHSA-j2x6-9323-fp7h</id>
        <link href="https://github.com/advisories/GHSA-j2x6-9323-fp7h"/>
        <updated>2022-04-22T20:24:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>in the following code, the return of <code>&lt;iface&gt;.returns_int128()</code> is not validated to fall within the bounds of <code>int128</code>. as of v0.3.0, <code>&lt;iface&gt;.returns_int128()</code> is validated in simple expressions, but not complex expressions.</p>
<pre><code class="language-vyper">interface iface:
    def returns_int128() -&gt; int128: view
    def returns_Bytes33() -&gt; Bytes[33]: view

x: iface
 
@external
def call_out():
    x: int128 = self.x.returns_int128()  # affected, &lt;0.3.0
    y: uint256 = convert(self.x.returns_int128(), uint256)  # affected, &lt;0.3.2
    z: Bytes[33] = concat(self.x.returns_Bytes33(), b"")  # affected &gt;= 0.3.0, &lt;0.3.2
</code></pre>
<h3 id="patches">Patches</h3>
<p>0.3.2 (as of <a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>
<h3 id="workarounds">Workarounds</h3>
<p>Break up operations involving external calls into multiple statements. For instance, instead of the example above, use</p>
<pre><code>x: int128 = self.x.returns_int128()
y: uint256 = convert(x, uint256)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h">https://github.com/vyperlang/vyper/security/advisories/GHSA-j2x6-9323-fp7h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24845">https://nvd.nist.gov/vuln/detail/CVE-2022-24845</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>
<li><a href="https://github.com/advisories/GHSA-j2x6-9323-fp7h">https://github.com/advisories/GHSA-j2x6-9323-fp7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2x6-9323-fp7h</uri>
        </author>
        <published>2022-04-22T20:24:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Buffer Overflow in vyper]]></title>
        <id>https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</id>
        <link href="https://github.com/advisories/GHSA-4mrx-6fxm-8jpg"/>
        <updated>2022-04-22T19:54:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Importing a function from a JSON interface which returns <code>bytes</code> generates bytecode which does not clamp bytes length, potentially resulting in a buffer overrun.</p>
<h3 id="patches">Patches</h3>
<p>0.3.2 (as of <a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a>)</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use .vy interfaces.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg">https://github.com/vyperlang/vyper/security/advisories/GHSA-4mrx-6fxm-8jpg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24788">https://nvd.nist.gov/vuln/detail/CVE-2022-24788</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b">https://github.com/vyperlang/vyper/commit/049dbdc647b2ce838fae7c188e6bb09cf16e470b</a></li>
<li><a href="https://github.com/advisories/GHSA-4mrx-6fxm-8jpg">https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mrx-6fxm-8jpg</uri>
        </author>
        <published>2022-04-20T20:31:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Incorrect Comparison in Vyper]]></title>
        <id>https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</id>
        <link href="https://github.com/advisories/GHSA-7vrm-3jc8-5wwm"/>
        <updated>2022-04-06T17:39:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>bytestrings can have dirty bytes in them, resulting in the word-for-word comparison to give incorrect results, e.g.</p>
<pre><code class="language-vyper">b1: Bytes[32] = b"abcdef"
b1 = slice(b1, 0, 1)
b2: Bytes[32] = b"abcdef"
t: bool = b1 == b2  # incorrectly evaluates to True
</code></pre>
<p>even without dirty nonzero bytes, because there is no comparison of the length, two bytestrings can compare to equal if one ends with <code>"\x00"</code>.</p>
<pre><code class="language-vyper">b1: Bytes[32] = b"abc\0"
b2: Bytes[32] = b"abc"
t: bool = b1 == b2  # incorrectly evaluates to True
</code></pre>
<h3 id="patches">Patches</h3>
<p>fixed in <a href="https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm">https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></li>
<li><a href="https://github.com/advisories/GHSA-7vrm-3jc8-5wwm">https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</uri>
        </author>
        <published>2022-04-04T21:40:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[consoleme] Use of Externally-Controlled Format String in consoleme]]></title>
        <id>https://github.com/advisories/GHSA-74w3-2r77-fw5h</id>
        <link href="https://github.com/advisories/GHSA-74w3-2r77-fw5h"/>
        <updated>2022-04-18T22:21:19.000Z</updated>
        <content type="html"><![CDATA[<p>A Python format string issue leading to information disclosure and potentially remote code execution in ConsoleMe for all versions prior to 1.2.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27177">https://nvd.nist.gov/vuln/detail/CVE-2022-27177</a></li>
<li><a href="https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2022-001.md">https://github.com/Netflix/security-bulletins/blob/master/advisories/nflx-2022-001.md</a></li>
<li><a href="https://github.com/advisories/GHSA-74w3-2r77-fw5h">https://github.com/advisories/GHSA-74w3-2r77-fw5h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74w3-2r77-fw5h</uri>
        </author>
        <published>2022-04-03T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[notebook] Sensitive Auth & Cookie data stored in Jupyter server logs]]></title>
        <id>https://github.com/advisories/GHSA-m87f-39q9-6f55</id>
        <link href="https://github.com/advisories/GHSA-m87f-39q9-6f55"/>
        <updated>2022-04-06T18:41:46.000Z</updated>
        <content type="html"><![CDATA[<p>Anytime a 5xx error is triggered, the auth cookie and other header values are recorded in Jupyter server logs by default. Considering these logs do not require root access, an attacker can monitor these logs, steal sensitive auth/cookie information, and gain access to the Jupyter server.</p>
<p>Upgrade to notebook version 6.4.10</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list <a href="mailto:security@ipython.org">security@ipython.org</a>.</p>
<p>Credit: @3coins for reporting. Thank you!</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyter/notebook/security/advisories/GHSA-m87f-39q9-6f55">https://github.com/jupyter/notebook/security/advisories/GHSA-m87f-39q9-6f55</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24758">https://nvd.nist.gov/vuln/detail/CVE-2022-24758</a></li>
<li><a href="https://github.com/advisories/GHSA-m87f-39q9-6f55">https://github.com/advisories/GHSA-m87f-39q9-6f55</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m87f-39q9-6f55</uri>
        </author>
        <published>2022-04-05T17:47:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[horovod] Use of insecure temporary file in Horovod]]></title>
        <id>https://github.com/advisories/GHSA-47wv-vhj2-g66m</id>
        <link href="https://github.com/advisories/GHSA-47wv-vhj2-g66m"/>
        <updated>2022-04-05T00:10:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The insecure <code>tempfile.mktemp()</code> is used when Horovod is run in an LSF job with <code>jsrun</code>. In that situation, a jsrun rank file is created with <code>mktemp</code>, which could be hijacked by another process to read or manipulate the content.</p>
<p>This issue does not impact the use of MPI, Gloo, Spark or Ray.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been fixed in <a href="https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41">b96ecae4</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The rank file is not created when <code>binding_args</code> are provided in the <code>Settings</code> instance.</p>
<h3 id="references">References</h3>
<p>Please see <a href="https://github.com/horovod/horovod/pull/3358">https://github.com/horovod/horovod/pull/3358</a> for details.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/horovod/horovod/issues/new/choose">https://github.com/horovod/horovod</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/horovod/horovod/security/advisories/GHSA-47wv-vhj2-g66m">https://github.com/horovod/horovod/security/advisories/GHSA-47wv-vhj2-g66m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0315">https://nvd.nist.gov/vuln/detail/CVE-2022-0315</a></li>
<li><a href="https://github.com/horovod/horovod/pull/3358">https://github.com/horovod/horovod/pull/3358</a></li>
<li><a href="https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41">https://github.com/horovod/horovod/commit/b96ecae4dc69fc0a83c7c2d3f1dde600c20a1b41</a></li>
<li><a href="https://huntr.dev/bounties/7e50397b-dd63-4bb5-b56d-704094a7da45">https://huntr.dev/bounties/7e50397b-dd63-4bb5-b56d-704094a7da45</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/horovod/PYSEC-2022-175.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/horovod/PYSEC-2022-175.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-47wv-vhj2-g66m">https://github.com/advisories/GHSA-47wv-vhj2-g66m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47wv-vhj2-g66m</uri>
        </author>
        <published>2022-03-29T19:18:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twisted] Inconsistent Interpretation of HTTP Requests in twisted.web]]></title>
        <id>https://github.com/advisories/GHSA-c2jg-hw38-jrqq</id>
        <link href="https://github.com/advisories/GHSA-c2jg-hw38-jrqq"/>
        <updated>2022-04-06T17:31:37.000Z</updated>
        <content type="html"><![CDATA[<p>The Twisted Web HTTP 1.1 server, located in the <code>twisted.web.http</code> module, parsed several HTTP request constructs more leniently than permitted by RFC 7230:</p>
<ol>
<li>The Content-Length header value could have a <code>+</code> or <code>-</code> prefix.</li>
<li>Illegal characters were permitted in chunked extensions, such as the LF (<code>\n</code>) character.</li>
<li>Chunk lengths, which are expressed in hexadecimal format, could have a prefix of <code>0x</code>.</li>
<li>HTTP headers were stripped of all leading and trailing ASCII whitespace, rather than only space and HTAB (<code>\t</code>).</li>
</ol>
<p>This non-conformant parsing can lead to desync if requests pass through multiple HTTP parsers, potentially resulting in HTTP request smuggling.</p>
<h3 id="impact">Impact</h3>
<p>You may be affected if:</p>
<ol>
<li>You use Twisted Web's HTTP 1.1 server and/or proxy</li>
<li>You also pass requests through a different HTTP server and/or proxy</li>
</ol>
<p>The specifics of the other HTTP parser matter. The original report notes that some versions of Apache Traffic Server and HAProxy have been vulnerable in the past. HTTP request smuggling may be a serious concern if you use a proxy to perform request validation or access control.</p>
<p>The Twisted Web client is not affected. The HTTP 2.0 server uses a different parser, so it is not affected.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been addressed in Twisted 22.4.0rc1 and later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than upgrading Twisted, you could:</p>
<ul>
<li>Ensure any vulnerabilities in upstream proxies have been addressed, such as by upgrading them</li>
<li>Filter malformed requests by other means, such as configuration of an upstream proxy</li>
</ul>
<h3 id="credits">Credits</h3>
<p>This issue was initially reported by <a href="https://github.com/zeyu2001">Zhang Zeyu</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq">https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24801">https://nvd.nist.gov/vuln/detail/CVE-2022-24801</a></li>
<li><a href="https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac">https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac</a></li>
<li><a href="https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1">https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1</a></li>
<li><a href="https://github.com/advisories/GHSA-c2jg-hw38-jrqq">https://github.com/advisories/GHSA-c2jg-hw38-jrqq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2jg-hw38-jrqq</uri>
        </author>
        <published>2022-04-04T21:29:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] Uncontrolled Resource Consumption in Matrix Synapse]]></title>
        <id>https://github.com/advisories/GHSA-4822-jvwx-w47h</id>
        <link href="https://github.com/advisories/GHSA-4822-jvwx-w47h"/>
        <updated>2022-04-05T22:01:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Synapse before 1.52.0 with URL preview functionality enabled will attempt to generate URL previews for media stream URLs without properly limiting connection time. Connections will only be terminated after <code>max_spider_size</code> (default: 10M) bytes have been downloaded, which can in some cases lead to long-lived connections towards the streaming media server (for instance, Icecast).</p>
<p>This can cause excessive traffic and connections toward such servers if their stream URL is, for example, posted to a large room with many Synapse instances with URL preview enabled.</p>
<h3 id="patches">Patches</h3>
<p>1.52.0 implements a timeout mechanism which will terminate URL preview connections after 30 seconds. Since generating URL previews for media streams is not supported and always fails, 1.53.0 additionally implements an allow list for content types for which Synapse will even attempt to generate a URL preview.</p>
<p>We recommend upgrading to 1.53.0 to fully resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Turn off URL preview functionality by setting <code>url_preview_enabled: false</code> in the Synapse configuration file.</p>
<h3 id="references">References</h3>
<ul>
<li>Patch (timeout): <a href="https://github.com/matrix-org/synapse/pull/11784">https://github.com/matrix-org/synapse/pull/11784</a></li>
<li>Patch (content type allow list): <a href="https://github.com/matrix-org/synapse/pull/11936">https://github.com/matrix-org/synapse/pull/11936</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/synapse/security/advisories/GHSA-4822-jvwx-w47h">https://github.com/matrix-org/synapse/security/advisories/GHSA-4822-jvwx-w47h</a></li>
<li><a href="https://github.com/matrix-org/synapse/pull/11784">https://github.com/matrix-org/synapse/pull/11784</a></li>
<li><a href="https://github.com/matrix-org/synapse/pull/11936">https://github.com/matrix-org/synapse/pull/11936</a></li>
<li><a href="https://github.com/matrix-org/synapse/releases/tag/v1.52.0">https://github.com/matrix-org/synapse/releases/tag/v1.52.0</a></li>
<li><a href="https://github.com/matrix-org/synapse/releases/tag/v1.53.0">https://github.com/matrix-org/synapse/releases/tag/v1.53.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4822-jvwx-w47h">https://github.com/advisories/GHSA-4822-jvwx-w47h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4822-jvwx-w47h</uri>
        </author>
        <published>2022-04-01T18:16:42.000Z</published>
    </entry>
</feed>