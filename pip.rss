<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-12-16T19:01:22.414Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[homeassistant] User accounts disclosed to unauthenticated actors on the LAN]]></title>
        <id>https://github.com/advisories/GHSA-jqpc-rc7g-vf83</id>
        <link href="https://github.com/advisories/GHSA-jqpc-rc7g-vf83"/>
        <updated>2023-12-15T23:19:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The login page discloses all active user accounts to any unauthenticated browsing request originating on the Local Area Network.</p>
<h3 id="details">Details</h3>
<p>Starting the <a href="https://www.home-assistant.io/blog/2023/12/06/release-202312/">Home Assistant 2023.12 release</a>, the login page returns all currently active user accounts to browsing requests from the Local Area Network. Tests showed that this occurs when:</p>
<ul>
<li>The request is not authenticated and</li>
<li>The request originated locally, meaning on the Home Assistant host local subnet or any other private subnet (<code>10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, fd00::/8, ::ffff:10.0.0.0/104, ::ffff:172.16.0.0/108, ::ffff:192.168.0.0/112</code>)</li>
</ul>
<p>The rationale behind this is to make the login more user-friendly (see <a href="https://www.home-assistant.io/blog/2023/12/06/release-202312/">release blog post</a>) and an experience better aligned with other applications that have multiple user-profiles.</p>
<p>However, as a result, all accounts are displayed regardless of them having logged in or not and for any device that navigates to the server. This disclosure is mitigated by the fact that it only occurs for requests originating from a LAN address. But note that this applies to the local subnet where Home Assistant resides and to any private subnet that can reach it.</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Place a Home Assistant instance on a private subnet, i.e., 192.168.1.0/24.</li>
<li>Create a few users, let's say, three.</li>
<li>From any (or another) private subnet on the LAN, like 192.168.2.0/24, open an incognito browser window (to ensure that the browser has no cookies from Home Assistant and therefore is demonstrably unauthenticated) and navigate to the Home Assistant URL.</li>
<li>The login page will display all three users, including their profile photo.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>The following CVSS string could be shaped to describe the overall impact of this issue:
AV:A/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N</p>
<p>As seen, the Exploitability metrics are high, and the Impact metrics are low. This is fitting because the problem does not constitute a critical one, but at the same time, it is trivial to exploit. Still, since the mitigation can be so easily implemented in code to eliminate a typical case of information disclosure, it would certainly be worth pursuing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/home-assistant/core/security/advisories/GHSA-jqpc-rc7g-vf83">https://github.com/home-assistant/core/security/advisories/GHSA-jqpc-rc7g-vf83</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50715">https://nvd.nist.gov/vuln/detail/CVE-2023-50715</a></li>
<li><a href="https://github.com/home-assistant/core/commit/dbfc5ea8f96bde6cd165892f5a6a6f9a65731c76">https://github.com/home-assistant/core/commit/dbfc5ea8f96bde6cd165892f5a6a6f9a65731c76</a></li>
<li><a href="https://github.com/advisories/GHSA-jqpc-rc7g-vf83">https://github.com/advisories/GHSA-jqpc-rc7g-vf83</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jqpc-rc7g-vf83</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-15T23:19:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Path traversal in MLflow]]></title>
        <id>https://github.com/advisories/GHSA-554w-xh4j-8w64</id>
        <link href="https://github.com/advisories/GHSA-554w-xh4j-8w64"/>
        <updated>2023-12-15T23:01:10.000Z</updated>
        <content type="html"><![CDATA[<p>Path Traversal: '..\filename' in GitHub repository mlflow/mlflow prior to 2.9.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6831">https://nvd.nist.gov/vuln/detail/CVE-2023-6831</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1">https://github.com/mlflow/mlflow/commit/1da75dfcecd4d169e34809ade55748384e8af6c1</a></li>
<li><a href="https://huntr.com/bounties/0acdd745-0167-4912-9d5c-02035fe5b314">https://huntr.com/bounties/0acdd745-0167-4912-9d5c-02035fe5b314</a></li>
<li><a href="https://github.com/advisories/GHSA-554w-xh4j-8w64">https://github.com/advisories/GHSA-554w-xh4j-8w64</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-554w-xh4j-8w64</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-15T03:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mindsdb] GitHub Security Lab (GHSL) Vulnerability Report: Arbitary write GHSL-2023-182 ]]></title>
        <id>https://github.com/advisories/GHSA-j8w6-2r9h-cxhj</id>
        <link href="https://github.com/advisories/GHSA-j8w6-2r9h-cxhj"/>
        <updated>2023-12-15T04:02:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Issue: Arbitrary file write in file.py (GHSL-2023-183)</p>
<h3 id="patches">Patches</h3>
<p>Use mindsdb staging branch or v23.11.4.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mindsdb/mindsdb/security/advisories/GHSA-j8w6-2r9h-cxhj">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-j8w6-2r9h-cxhj</a></li>
<li><a href="https://github.com/advisories/GHSA-j8w6-2r9h-cxhj">https://github.com/advisories/GHSA-j8w6-2r9h-cxhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8w6-2r9h-cxhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-15T04:02:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sap-xssec] Privilege escalation in sap-xssec]]></title>
        <id>https://github.com/advisories/GHSA-p99h-pfg6-qrfg</id>
        <link href="https://github.com/advisories/GHSA-p99h-pfg6-qrfg"/>
        <updated>2023-12-15T03:18:45.000Z</updated>
        <content type="html"><![CDATA[<p>SAP&nbsp;BTP&nbsp;Security Services Integration Library ([Python]&nbsp;sap-xssec) - versions &lt; 4.1.0, allow under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50423">https://nvd.nist.gov/vuln/detail/CVE-2023-50423</a></li>
<li><a href="https://me.sap.com/notes/3411067">https://me.sap.com/notes/3411067</a></li>
<li><a href="https://pypi.org/project/sap-xssec/">https://pypi.org/project/sap-xssec/</a></li>
<li><a href="https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html">https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html</a></li>
<li><a href="https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5">https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5</a></li>
<li><a href="https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/">https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/</a></li>
<li><a href="https://github.com/SAP/cloud-pysec/">https://github.com/SAP/cloud-pysec/</a></li>
<li><a href="https://github.com/advisories/GHSA-p99h-pfg6-qrfg">https://github.com/advisories/GHSA-p99h-pfg6-qrfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p99h-pfg6-qrfg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-12T03:31:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[h2o] External Control of File Name or Path in h2oai/h2o-3]]></title>
        <id>https://github.com/advisories/GHSA-gqrq-j6pm-98c2</id>
        <link href="https://github.com/advisories/GHSA-gqrq-j6pm-98c2"/>
        <updated>2023-12-15T03:12:44.000Z</updated>
        <content type="html"><![CDATA[<p>Remote unauthenticated attackers can overwrite arbitrary server files with attacker-controllable data. The data that the attacker can control is not entirely arbitrary. h2o writes a CSV/XLS/etc file to disk, so the attacker data is wrapped in quotations and starts with "C1", if they're exporting as CSV.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6569">https://nvd.nist.gov/vuln/detail/CVE-2023-6569</a></li>
<li><a href="https://huntr.com/bounties/a5d003dc-c23e-4c98-8dcf-35ba9252fa3c">https://huntr.com/bounties/a5d003dc-c23e-4c98-8dcf-35ba9252fa3c</a></li>
<li><a href="https://github.com/advisories/GHSA-gqrq-j6pm-98c2">https://github.com/advisories/GHSA-gqrq-j6pm-98c2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gqrq-j6pm-98c2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-14T15:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckan] Out of memory error when submitting the dataset form with a specially-crafted field]]></title>
        <id>https://github.com/advisories/GHSA-7fgc-89cx-w8j5</id>
        <link href="https://github.com/advisories/GHSA-7fgc-89cx-w8j5"/>
        <updated>2023-12-13T23:08:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When submitting a POST request to the <code>/dataset/new</code> endpoint (including either the auth cookie or the <code>Authorization</code> header) with a specially-crafted field, an attacker can create an out-of-memory error in the hosting server.</p>
<p>To trigger this error the user needs to have permissions to create or edit datasets.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in CKAN 2.10.3 and 2.9.10</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5">https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50248">https://nvd.nist.gov/vuln/detail/CVE-2023-50248</a></li>
<li><a href="https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be">https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be</a></li>
<li><a href="https://github.com/advisories/GHSA-7fgc-89cx-w8j5">https://github.com/advisories/GHSA-7fgc-89cx-w8j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fgc-89cx-w8j5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-13T23:08:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckan] Out of memory error when submitting the dataset form with a specially-crafted field]]></title>
        <id>https://github.com/advisories/GHSA-7fgc-89cx-w8j5</id>
        <link href="https://github.com/advisories/GHSA-7fgc-89cx-w8j5"/>
        <updated>2023-12-13T23:08:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When submitting a POST request to the <code>/dataset/new</code> endpoint (including either the auth cookie or the <code>Authorization</code> header) with a specially-crafted field, an attacker can create an out-of-memory error in the hosting server.</p>
<p>To trigger this error the user needs to have permissions to create or edit datasets.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in CKAN 2.10.3 and 2.9.10</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5">https://github.com/ckan/ckan/security/advisories/GHSA-7fgc-89cx-w8j5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50248">https://nvd.nist.gov/vuln/detail/CVE-2023-50248</a></li>
<li><a href="https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be">https://github.com/ckan/ckan/commit/bd02018b65c5b81d7ede195d00d0fcbac3aa33be</a></li>
<li><a href="https://github.com/advisories/GHSA-7fgc-89cx-w8j5">https://github.com/advisories/GHSA-7fgc-89cx-w8j5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fgc-89cx-w8j5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-13T23:08:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Path traversal in MLflow]]></title>
        <id>https://github.com/advisories/GHSA-v945-r3rc-6fjm</id>
        <link href="https://github.com/advisories/GHSA-v945-r3rc-6fjm"/>
        <updated>2023-12-15T22:12:36.000Z</updated>
        <content type="html"><![CDATA[<p>Path Traversal in GitHub repository mlflow/mlflow prior to 2.9.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6753">https://nvd.nist.gov/vuln/detail/CVE-2023-6753</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/1c6309f884798fbf56017a3cc808016869ee8de4">https://github.com/mlflow/mlflow/commit/1c6309f884798fbf56017a3cc808016869ee8de4</a></li>
<li><a href="https://huntr.com/bounties/b397b83a-527a-47e7-b912-a12a17a6cfb4">https://huntr.com/bounties/b397b83a-527a-47e7-b912-a12a17a6cfb4</a></li>
<li><a href="https://github.com/advisories/GHSA-v945-r3rc-6fjm">https://github.com/advisories/GHSA-v945-r3rc-6fjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v945-r3rc-6fjm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-13T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Unauthenticated db-file-storage views]]></title>
        <id>https://github.com/advisories/GHSA-75mc-3pjc-727q</id>
        <link href="https://github.com/advisories/GHSA-75mc-3pjc-727q"/>
        <updated>2023-12-13T13:35:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p> In Nautobot 1.x and 2.0.x, the URLs <code>/files/get/?name=...</code> and <code>/files/download/?name=...</code> are used to provide admin access to files that have been uploaded as part of a run request for a Job that has FileVar inputs. Under normal operation these files are ephemeral and are deleted once the Job in question runs. </p>
<p>It was reported by @kircheneer that in the default implementation used in Nautobot, as provided by <code>django-db-file-storage</code>, these URLs do not by default require any user authentication to access; they should instead be restricted to only users who have permissions to view Nautobot's <code>FileProxy</code> model instances.</p>
<p>Note that no URL mechanism is provided for listing or traversal of the available file <code>name</code> values, so in practice an unauthenticated user would have to guess names to discover arbitrary files for download, but if a user knows the file name/path value, they can access it without authenticating, so we are considering this a vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Fixes will be included in Nautobot 1.6.7 and Nautobot 2.0.6.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround other than applying the patches included in <a href="https://github.com/nautobot/nautobot/pull/4959/files">https://github.com/nautobot/nautobot/pull/4959/files</a> (2.0.x) or <a href="https://github.com/nautobot/nautobot/pull/4964/files">https://github.com/nautobot/nautobot/pull/4964/files</a> (1.6.x)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q">https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50263">https://nvd.nist.gov/vuln/detail/CVE-2023-50263</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4959">https://github.com/nautobot/nautobot/pull/4959</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4964">https://github.com/nautobot/nautobot/pull/4964</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee">https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80">https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee">https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee</a></li>
<li><a href="https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>
<li><a href="https://github.com/advisories/GHSA-75mc-3pjc-727q">https://github.com/advisories/GHSA-75mc-3pjc-727q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75mc-3pjc-727q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-13T13:35:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Unauthenticated db-file-storage views]]></title>
        <id>https://github.com/advisories/GHSA-75mc-3pjc-727q</id>
        <link href="https://github.com/advisories/GHSA-75mc-3pjc-727q"/>
        <updated>2023-12-13T13:35:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p> In Nautobot 1.x and 2.0.x, the URLs <code>/files/get/?name=...</code> and <code>/files/download/?name=...</code> are used to provide admin access to files that have been uploaded as part of a run request for a Job that has FileVar inputs. Under normal operation these files are ephemeral and are deleted once the Job in question runs. </p>
<p>It was reported by @kircheneer that in the default implementation used in Nautobot, as provided by <code>django-db-file-storage</code>, these URLs do not by default require any user authentication to access; they should instead be restricted to only users who have permissions to view Nautobot's <code>FileProxy</code> model instances.</p>
<p>Note that no URL mechanism is provided for listing or traversal of the available file <code>name</code> values, so in practice an unauthenticated user would have to guess names to discover arbitrary files for download, but if a user knows the file name/path value, they can access it without authenticating, so we are considering this a vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Fixes will be included in Nautobot 1.6.7 and Nautobot 2.0.6.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround other than applying the patches included in <a href="https://github.com/nautobot/nautobot/pull/4959/files">https://github.com/nautobot/nautobot/pull/4959/files</a> (2.0.x) or <a href="https://github.com/nautobot/nautobot/pull/4964/files">https://github.com/nautobot/nautobot/pull/4964/files</a> (1.6.x)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q">https://github.com/nautobot/nautobot/security/advisories/GHSA-75mc-3pjc-727q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50263">https://nvd.nist.gov/vuln/detail/CVE-2023-50263</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4959">https://github.com/nautobot/nautobot/pull/4959</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4964">https://github.com/nautobot/nautobot/pull/4964</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee">https://github.com/nautobot/nautobot/commit/458280c359a4833a20da294eaf4b8d55edc91cee</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80">https://github.com/nautobot/nautobot/commit/5e2ba9e8ac0840b1c44eb1a8ea3c0bd2c68e4f80</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee">https://github.com/nautobot/nautobot/commit/7c4cf3137f45f1541f09f2f6a7f8850cd3a2eaee</a></li>
<li><a href="https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py">https://github.com/victor-o-silva/db_file_storage/blob/master/db_file_storage/views.py</a></li>
<li><a href="https://github.com/advisories/GHSA-75mc-3pjc-727q">https://github.com/advisories/GHSA-75mc-3pjc-727q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75mc-3pjc-727q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-13T13:35:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[meraki] Improper validation in meraki]]></title>
        <id>https://github.com/advisories/GHSA-6x4h-9622-fqr6</id>
        <link href="https://github.com/advisories/GHSA-6x4h-9622-fqr6"/>
        <updated>2023-12-13T13:35:17.000Z</updated>
        <content type="html"><![CDATA[<p>aiohttp is an asynchronous HTTP client/server framework for asyncio and Python. Improper validation made it possible for an attacker to modify the HTTP request (e.g. to insert a new header) or create a new HTTP request if the attacker controls the HTTP version. The vulnerability only occurs if the attacker can control the HTTP version of the request. This issue has been patched in version 3.9.0.</p>
<p>meraki from version 1.40.1 requires aiohttp 3.9.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/meraki/dashboard-api-python/security/advisories/GHSA-6x4h-9622-fqr6">https://github.com/meraki/dashboard-api-python/security/advisories/GHSA-6x4h-9622-fqr6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49081">https://nvd.nist.gov/vuln/detail/CVE-2023-49081</a></li>
<li><a href="https://github.com/meraki/dashboard-api-python/releases/tag/1.40.1">https://github.com/meraki/dashboard-api-python/releases/tag/1.40.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6x4h-9622-fqr6">https://github.com/advisories/GHSA-6x4h-9622-fqr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x4h-9622-fqr6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-13T13:35:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sap-xssec] Improper Privilege Management in sap-xssec]]></title>
        <id>https://github.com/advisories/GHSA-6mjg-37cp-42x5</id>
        <link href="https://github.com/advisories/GHSA-6mjg-37cp-42x5"/>
        <updated>2023-12-13T13:34:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SAP BTP Security Services Integration Library ([Python] sap-xssec) allows under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to patched version &gt;= 4.1.0
We always recommend to upgrade to the latest released version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds</p>
<h3 id="references">References</h3>
<p><a href="https://www.cve.org/CVERecord?id=CVE-2023-50423">https://www.cve.org/CVERecord?id=CVE-2023-50423</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5">https://github.com/SAP/cloud-pysec/security/advisories/GHSA-6mjg-37cp-42x5</a></li>
<li><a href="https://github.com/SAP/cloud-pysec/commit/d90c9e0733fa9af68bd8ea0b1cf023cf482163ef">https://github.com/SAP/cloud-pysec/commit/d90c9e0733fa9af68bd8ea0b1cf023cf482163ef</a></li>
<li><a href="https://github.com/advisories/GHSA-6mjg-37cp-42x5">https://github.com/advisories/GHSA-6mjg-37cp-42x5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mjg-37cp-42x5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-13T13:34:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Jinja2 template injection in mlflow]]></title>
        <id>https://github.com/advisories/GHSA-cxfr-5q3r-2rc2</id>
        <link href="https://github.com/advisories/GHSA-cxfr-5q3r-2rc2"/>
        <updated>2023-12-13T13:33:31.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository mlflow/mlflow prior to 2.9.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6709">https://nvd.nist.gov/vuln/detail/CVE-2023-6709</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/432b8ccf27fd3a76df4ba79bb1bec62118a85625">https://github.com/mlflow/mlflow/commit/432b8ccf27fd3a76df4ba79bb1bec62118a85625</a></li>
<li><a href="https://huntr.com/bounties/9e4cc07b-6fff-421b-89bd-9445ef61d34d">https://huntr.com/bounties/9e4cc07b-6fff-421b-89bd-9445ef61d34d</a></li>
<li><a href="https://github.com/advisories/GHSA-cxfr-5q3r-2rc2">https://github.com/advisories/GHSA-cxfr-5q3r-2rc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxfr-5q3r-2rc2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-12T06:30:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] incorrect storage layout for contracts containing large arrays]]></title>
        <id>https://github.com/advisories/GHSA-6m97-7527-mh74</id>
        <link href="https://github.com/advisories/GHSA-6m97-7527-mh74"/>
        <updated>2023-12-13T21:33:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>contracts containing large arrays might underallocate the number of slots they need. prior to v0.3.8, the calculation to determine how many slots a storage variable needed used <code>math.ceil(type_.size_in_bytes / 32)</code>:</p>
<p><a href="https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197">https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197</a></p>
<p>the intermediate floating point step can produce a rounding error if there are enough bits set in the IEEE-754 mantissa. roughly speaking, if <code>type_.size_in_bytes</code> is large (&gt; 2**46), and slightly less than a power of 2, the calculation can overestimate how many slots are needed. if <code>type_.size_in_bytes</code> is slightly more than a power of 2, the calculation can underestimate how many slots are needed.</p>
<p>the following two example contracts can result in overwriting of the variable <code>vulnerable</code>:</p>
<pre><code class="language-vyper">large_array: address[2**64 + 1]  # type_.size_in_bytes == 32 * (2**64 + 1); math.ceil(type_.size_in_bytes / 32) &lt; 2**64 + 1
vulnerable: uint256

# writing to self.large_array[2**64] will overwrite self.vulnerable
</code></pre>
<pre><code class="language-vyper">large_dynarray: DynArray[address, 2**64]  # Dynarray has a length word in front, its size in bytes is 32 * (2**64 + 1)
vulnerable: uint256

# writing to self.large_dynarray[2**64 - 1] will overwrite self.vulnerable
</code></pre>
<p>note that in the latter case, the risk of <code>vulnerable</code> being overwritten is relatively small, since it would cost roughly $1.45 million trillion USD at today's gas prices (gas price 20gwei, ETH ~= $1800) in order to extend the DynArray to its full container size.</p>
<h3 id="patches">Patches</h3>
<p>patched by v0.3.8, specifically in commit <a href="https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb">https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-6m97-7527-mh74">https://github.com/vyperlang/vyper/security/advisories/GHSA-6m97-7527-mh74</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46247">https://nvd.nist.gov/vuln/detail/CVE-2023-46247</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb">https://github.com/vyperlang/vyper/commit/0bb7203b584e771b23536ba065a6efda457161bb</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197">https://github.com/vyperlang/vyper/blob/6020b8bbf66b062d299d87bc7e4eddc4c9d1c157/vyper/semantics/validation/data_positions.py#L197</a></li>
<li><a href="https://github.com/advisories/GHSA-6m97-7527-mh74">https://github.com/advisories/GHSA-6m97-7527-mh74</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6m97-7527-mh74</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-13T13:18:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Cross-site Scripting in MLflow]]></title>
        <id>https://github.com/advisories/GHSA-vwhf-3v6x-wff8</id>
        <link href="https://github.com/advisories/GHSA-vwhf-3v6x-wff8"/>
        <updated>2023-12-12T00:57:44.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site Scripting (XSS) - Reflected in GitHub repository mlflow/mlflow prior to 2.9.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6568">https://nvd.nist.gov/vuln/detail/CVE-2023-6568</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/28ff3f94994941e038f2172c6484b65dc4db6ca1">https://github.com/mlflow/mlflow/commit/28ff3f94994941e038f2172c6484b65dc4db6ca1</a></li>
<li><a href="https://huntr.com/bounties/816bdaaa-8153-4732-951e-b0d92fddf709">https://huntr.com/bounties/816bdaaa-8153-4732-951e-b0d92fddf709</a></li>
<li><a href="https://github.com/advisories/GHSA-vwhf-3v6x-wff8">https://github.com/advisories/GHSA-vwhf-3v6x-wff8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwhf-3v6x-wff8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-07T06:30:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mindsdb] Improper Input Validation in mindsdb]]></title>
        <id>https://github.com/advisories/GHSA-crhp-7c74-cg4c</id>
        <link href="https://github.com/advisories/GHSA-crhp-7c74-cg4c"/>
        <updated>2023-12-12T00:49:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The put method in <code>mindsdb/mindsdb/api/http/namespaces/file.py</code> does not validate the user-controlled <code>name</code> value, which is used in a temporary file name, which is afterwards opened for writing on lines 122-125, which leads to path injection. This issue may lead to arbitrary file write. This vulnerability allows for writing files anywhere on the server that the filesystem permissions that the running server has access to.</p>
<h3 id="patches">Patches</h3>
<p>Use mindsdb staging branch or v23.11.4.1</p>
<h3 id="references">References</h3>
<ul>
<li>GHSL-2023-184 </li>
<li>See <a href="https://codeql.github.com/codeql-query-help/python/py-path-injection/">CodeQL path injection prevention guidelines</a> and <a href="https://owasp.org/www-community/attacks/Path_Traversal">OWASP guidelines</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mindsdb/mindsdb/security/advisories/GHSA-crhp-7c74-cg4c">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-crhp-7c74-cg4c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49796">https://nvd.nist.gov/vuln/detail/CVE-2023-49796</a></li>
<li><a href="https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe">https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe</a></li>
<li><a href="https://github.com/mindsdb/mindsdb/blob/1821da719f34c022890c9ff25810218e71c5abbc/mindsdb/api/http/namespaces/file.py#L122-L125">https://github.com/mindsdb/mindsdb/blob/1821da719f34c022890c9ff25810218e71c5abbc/mindsdb/api/http/namespaces/file.py#L122-L125</a></li>
<li><a href="https://github.com/advisories/GHSA-crhp-7c74-cg4c">https://github.com/advisories/GHSA-crhp-7c74-cg4c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crhp-7c74-cg4c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T00:49:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mindsdb] Server-Side Request Forgery in mindsdb]]></title>
        <id>https://github.com/advisories/GHSA-34mr-6q8x-g9r6</id>
        <link href="https://github.com/advisories/GHSA-34mr-6q8x-g9r6"/>
        <updated>2023-12-12T00:48:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The put method in <code>mindsdb/mindsdb/api/http/namespaces/file.py</code> does not validate the user-controlled URL in the source variable and uses it to create arbitrary requests on line 115, which allows Server-side request forgery (SSRF). This issue may lead to Information Disclosure. The SSRF allows for forging arbitrary network requests from the MindsDB server. It can be used to scan nodes in internal networks for open ports that may not be accessible externally, as well as scan for existing files on the internal network. It allows for retrieving files with csv, xls, xlsx, json or parquet extensions, which will be viewable via MindsDB GUI. For any other existing files, it is a blind SSRF.</p>
<h3 id="patches">Patches</h3>
<p>Use mindsdb staging branch or v23.11.4.1</p>
<h3 id="references">References</h3>
<ul>
<li>GHSL-2023-182
<a href="https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html">SSRF prevention cheatsheet</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mindsdb/mindsdb/security/advisories/GHSA-34mr-6q8x-g9r6">https://github.com/mindsdb/mindsdb/security/advisories/GHSA-34mr-6q8x-g9r6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49795">https://nvd.nist.gov/vuln/detail/CVE-2023-49795</a></li>
<li><a href="https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe">https://github.com/mindsdb/mindsdb/commit/8d13c9c28ebcf3b36509eb679378004d4648d8fe</a></li>
<li><a href="https://github.com/advisories/GHSA-34mr-6q8x-g9r6">https://github.com/advisories/GHSA-34mr-6q8x-g9r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-34mr-6q8x-g9r6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T00:48:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Information exposure in MLflow]]></title>
        <id>https://github.com/advisories/GHSA-wqxf-447m-6f5f</id>
        <link href="https://github.com/advisories/GHSA-wqxf-447m-6f5f"/>
        <updated>2023-12-11T21:45:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in MLFlow versions 2.8.1 and before allows a remote attacker to obtain sensitive information via a crafted request to REST API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43472">https://nvd.nist.gov/vuln/detail/CVE-2023-43472</a></li>
<li><a href="https://www.contrastsecurity.com/security-influencers/discovering-mlflow-framework-zero-day-vulnerability-machine-language-model-security-contrast-security">https://www.contrastsecurity.com/security-influencers/discovering-mlflow-framework-zero-day-vulnerability-machine-language-model-security-contrast-security</a></li>
<li><a href="https://mlflow.org/news/2023/12/06/2.9.0-release/index.html">https://mlflow.org/news/2023/12/06/2.9.0-release/index.html</a></li>
<li><a href="https://github.com/advisories/GHSA-wqxf-447m-6f5f">https://github.com/advisories/GHSA-wqxf-447m-6f5f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wqxf-447m-6f5f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T09:33:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyinstaller] Local Privilege Escalation in Windows]]></title>
        <id>https://github.com/advisories/GHSA-9w2p-rh8c-v9g5</id>
        <link href="https://github.com/advisories/GHSA-9w2p-rh8c-v9g5"/>
        <updated>2023-12-13T00:50:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A PyInstaller built application, elevated as a privileged process, may be tricked by an unprivileged attacker into deleting files the unprivileged user does not otherwise have access to.</p>
<p>A user is affected if <strong>all</strong> the following are satisfied:</p>
<ul>
<li>The user runs an application containing either <code>matplotlib</code> or <code>win32com</code>.</li>
<li>The application is ran as administrator (or at least a user with higher privileges than the attacker).</li>
<li>The user's temporary directory is not locked to that specific user (most likely due to <code>TMP</code>/<code>TEMP</code> environment variables pointing to an unprotected, arbitrary, non default location).</li>
<li>Either:<ul>
<li>The attacker is able to very carefully time the replacement of a temporary file with a symlink. This switch must occur exactly between <a href="https://github.com/python/cpython/blob/0fb18b02c8ad56299d6a2910be0bab8ad601ef24/Lib/shutil.py#L623"><code>shutil.rmtree()</code>'s builtin symlink check</a> and the deletion itself</li>
<li>The application was built with Python 3.7.x or earlier which has no protection against Directory Junctions links</li>
</ul>
</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been addressed in <a href="https://github.com/pyinstaller/pyinstaller/pull/7827">https://github.com/pyinstaller/pyinstaller/pull/7827</a> which corresponds to <code>pyinstaller &gt;= 5.13.1</code></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>No workaround, although the attack complexity becomes much higher if the application is built with Python &gt;= 3.8.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pyinstaller/pyinstaller/security/advisories/GHSA-9w2p-rh8c-v9g5">https://github.com/pyinstaller/pyinstaller/security/advisories/GHSA-9w2p-rh8c-v9g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49797">https://nvd.nist.gov/vuln/detail/CVE-2023-49797</a></li>
<li><a href="https://github.com/pyinstaller/pyinstaller/pull/7827">https://github.com/pyinstaller/pyinstaller/pull/7827</a></li>
<li><a href="https://github.com/python/cpython/blob/0fb18b02c8ad56299d6a2910be0bab8ad601ef24/Lib/shutil.py#L623">https://github.com/python/cpython/blob/0fb18b02c8ad56299d6a2910be0bab8ad601ef24/Lib/shutil.py#L623</a></li>
<li><a href="https://github.com/advisories/GHSA-9w2p-rh8c-v9g5">https://github.com/advisories/GHSA-9w2p-rh8c-v9g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w2p-rh8c-v9g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-09T00:39:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[dbt-core] dbt-core's secret env vars written to package-lock.json in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-j4g3-3q8x-jxqp</id>
        <link href="https://github.com/advisories/GHSA-j4g3-3q8x-jxqp"/>
        <updated>2023-12-08T18:47:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When used to pull source code from a private repository using a Personal Access Token (PAT), some versions of dbt-core write a URL with the PAT in plaintext to the <code>package-lock.yml</code> file.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been fixed in <a href="https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.3">dbt-core v1.7.3</a>.</p>
<h3 id="mitigations">Mitigations</h3>
<p>Remove any git URLs with plaintext secrets from <code>package-lock.yml</code> file(s) on servers, workstations, or in source control. Rotate any tokens that have been written to version-controlled files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-j4g3-3q8x-jxqp">https://github.com/dbt-labs/dbt-core/security/advisories/GHSA-j4g3-3q8x-jxqp</a></li>
<li><a href="https://github.com/dbt-labs/dbt-core/commit/09f5bb3dcffeda7a60ad2b22c2891f237628ecd1">https://github.com/dbt-labs/dbt-core/commit/09f5bb3dcffeda7a60ad2b22c2891f237628ecd1</a></li>
<li><a href="https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.3">https://github.com/dbt-labs/dbt-core/releases/tag/v1.7.3</a></li>
<li><a href="https://github.com/advisories/GHSA-j4g3-3q8x-jxqp">https://github.com/advisories/GHSA-j4g3-3q8x-jxqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j4g3-3q8x-jxqp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-08T15:38:37.000Z</published>
    </entry>
</feed>