<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-11-28T04:01:18.294Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</id>
        <link href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr"/>
        <updated>2023-11-27T23:21:42.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's /static/ directory allows attackers to read any file on the server without authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6020">https://nvd.nist.gov/vuln/detail/CVE-2023-6020</a></li>
<li><a href="https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6">https://huntr.com/bounties/83dd8619-6dc3-4c98-8f1b-e620fedcd1f6</a></li>
<li><a href="https://github.com/advisories/GHSA-6cxr-8q3m-jwrr">https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cxr-8q3m-jwrr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T21:30:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray OS Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h3xg-wv58-5p43</id>
        <link href="https://github.com/advisories/GHSA-h3xg-wv58-5p43"/>
        <updated>2023-11-27T23:21:37.000Z</updated>
        <content type="html"><![CDATA[<p>A command injection exists in Ray's cpu_profile URL parameter allowing attackers to execute os commands on the system running the ray dashboard remotely without authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6019">https://nvd.nist.gov/vuln/detail/CVE-2023-6019</a></li>
<li><a href="https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe">https://huntr.com/bounties/d0290f3c-b302-4161-89f2-c13bb28b4cfe</a></li>
<li><a href="https://github.com/advisories/GHSA-h3xg-wv58-5p43">https://github.com/advisories/GHSA-h3xg-wv58-5p43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3xg-wv58-5p43</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[prefect] Cross-Site Request Forgery vulnerability in Prefect]]></title>
        <id>https://github.com/advisories/GHSA-4hh5-2678-83fx</id>
        <link href="https://github.com/advisories/GHSA-4hh5-2678-83fx"/>
        <updated>2023-11-27T23:21:29.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker is able to steal secrets and potentially gain remote code execution via CSRF using the Prefect API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6022">https://nvd.nist.gov/vuln/detail/CVE-2023-6022</a></li>
<li><a href="https://huntr.com/bounties/dab47d99-551c-4355-9ab1-c99cb90235af">https://huntr.com/bounties/dab47d99-551c-4355-9ab1-c99cb90235af</a></li>
<li><a href="https://github.com/advisories/GHSA-4hh5-2678-83fx">https://github.com/advisories/GHSA-4hh5-2678-83fx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hh5-2678-83fx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ray] Ray Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</id>
        <link href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp"/>
        <updated>2023-11-27T23:20:41.000Z</updated>
        <content type="html"><![CDATA[<p>LFI in Ray's log API endpoint allows attackers to read any file on the server without authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6021">https://nvd.nist.gov/vuln/detail/CVE-2023-6021</a></li>
<li><a href="https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8">https://huntr.com/bounties/5039c045-f986-4cbc-81ac-370fe4b0d3f8</a></li>
<li><a href="https://github.com/advisories/GHSA-3pww-qvr8-6mhp">https://github.com/advisories/GHSA-3pww-qvr8-6mhp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3pww-qvr8-6mhp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] aiohttp's ClientSession is vulnerable to CRLF injection via version]]></title>
        <id>https://github.com/advisories/GHSA-q3qx-c6g2-7pw2</id>
        <link href="https://github.com/advisories/GHSA-q3qx-c6g2-7pw2"/>
        <updated>2023-11-27T23:17:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Improper validation make it possible for an attacker to modify the HTTP request (e.g. to insert a new header) or even create a new HTTP request if the attacker controls the HTTP version.</p>
<h3 id="details">Details</h3>
<p>The vulnerability only occurs if the attacker can control the HTTP version of the request (including its type).
For example if an unvalidated JSON value is used as a version and the attacker is then able to pass an array as the <code>version</code> parameter.
Furthermore, the vulnerability only occurs when the <code>Connection</code> header is passed to the <code>headers</code> parameter.</p>
<p>At this point, the library will use the parsed value to create the request. If a list is passed, then it bypasses validation and it is possible to perform CRLF injection.</p>
<h3 id="poc">PoC</h3>
<p>The POC below shows an example of providing an unvalidated array as a version:
<a href="https://gist.github.com/jnovikov/184afb593d9c2114d77f508e0ccd508e">https://gist.github.com/jnovikov/184afb593d9c2114d77f508e0ccd508e</a></p>
<h3 id="impact">Impact</h3>
<p>CRLF injection leading to Request Smuggling.</p>
<h3 id="workaround">Workaround</h3>
<p>If these specific conditions are met and you are unable to upgrade, then validate the user input to the <code>version</code> parameter to ensure it is a <code>str</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-q3qx-c6g2-7pw2">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-q3qx-c6g2-7pw2</a></li>
<li><a href="https://gist.github.com/jnovikov/184afb593d9c2114d77f508e0ccd508e">https://gist.github.com/jnovikov/184afb593d9c2114d77f508e0ccd508e</a></li>
<li><a href="https://github.com/advisories/GHSA-q3qx-c6g2-7pw2">https://github.com/advisories/GHSA-q3qx-c6g2-7pw2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3qx-c6g2-7pw2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-11-27T23:17:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] aiohttp's ClientSession is vulnerable to CRLF injection via method]]></title>
        <id>https://github.com/advisories/GHSA-qvrw-v9rv-5rjx</id>
        <link href="https://github.com/advisories/GHSA-qvrw-v9rv-5rjx"/>
        <updated>2023-11-27T23:17:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Improper validation makes it possible for an attacker to modify the HTTP request (e.g. insert a new header) or even create a new HTTP request if the attacker controls the HTTP method.</p>
<h3 id="details">Details</h3>
<p>The vulnerability occurs only if the attacker can control the HTTP method (GET, POST etc.) of the request.</p>
<p>Previous releases performed no validation on the provided value. If an attacker controls the HTTP method it will be used as is and can lead to HTTP request smuggling.</p>
<h3 id="poc">PoC</h3>
<p>A minimal example can be found here:
<a href="https://gist.github.com/jnovikov/7f411ae9fe6a9a7804cf162a3bdbb44b">https://gist.github.com/jnovikov/7f411ae9fe6a9a7804cf162a3bdbb44b</a></p>
<h3 id="impact">Impact</h3>
<p>If the attacker can control the HTTP version of the request it will be able to modify the request (request smuggling).</p>
<h3 id="workaround">Workaround</h3>
<p>If unable to upgrade and using user-provided values for the request method, perform manual validation of the user value (e.g. by restricting it to a few known values like GET, POST etc.).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-qvrw-v9rv-5rjx">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-qvrw-v9rv-5rjx</a></li>
<li><a href="https://gist.github.com/jnovikov/7f411ae9fe6a9a7804cf162a3bdbb44b">https://gist.github.com/jnovikov/7f411ae9fe6a9a7804cf162a3bdbb44b</a></li>
<li><a href="https://github.com/advisories/GHSA-qvrw-v9rv-5rjx">https://github.com/advisories/GHSA-qvrw-v9rv-5rjx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvrw-v9rv-5rjx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-11-27T23:17:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] aiohttp has vulnerable dependency that is vulnerable to request smuggling]]></title>
        <id>https://github.com/advisories/GHSA-pjjw-qhg8-p2p9</id>
        <link href="https://github.com/advisories/GHSA-pjjw-qhg8-p2p9"/>
        <updated>2023-11-27T23:15:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>llhttp 8.1.1 is vulnerable to two request smuggling vulnerabilities.
Details have not been disclosed yet, so refer to llhttp for future information.
The issue is resolved by using llhttp 9+ (which is included in aiohttp 3.8.6+).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-pjjw-qhg8-p2p9">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-pjjw-qhg8-p2p9</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/996de2629ef6b4c2934a7c04dfd49d0950d4c43b">https://github.com/aio-libs/aiohttp/commit/996de2629ef6b4c2934a7c04dfd49d0950d4c43b</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/bcc416e533796d04fb8124ef1e7686b1f338767a">https://github.com/aio-libs/aiohttp/commit/bcc416e533796d04fb8124ef1e7686b1f338767a</a></li>
<li><a href="https://github.com/advisories/GHSA-pjjw-qhg8-p2p9">https://github.com/advisories/GHSA-pjjw-qhg8-p2p9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pjjw-qhg8-p2p9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-27T23:15:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspark] Authentication Bypass by Capture-replay in Apache Spark]]></title>
        <id>https://github.com/advisories/GHSA-9rr6-jpg7-9jg6</id>
        <link href="https://github.com/advisories/GHSA-9rr6-jpg7-9jg6"/>
        <updated>2023-11-27T22:56:21.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Spark supports end-to-end encryption of RPC connections via "spark.authenticate" and "spark.network.crypto.enabled". In versions 3.1.2 and earlier, it uses a bespoke mutual authentication protocol that allows for full encryption key recovery. After an initial interactive attack, this would allow someone to decrypt plaintext traffic offline. Note that this does not affect security mechanisms controlled by "spark.authenticate.enableSaslEncryption", "spark.io.encryption.enabled", "spark.ssl", "spark.ui.strictTransportSecurity". Update to Apache Spark 3.1.3 or later</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-38296">https://nvd.nist.gov/vuln/detail/CVE-2021-38296</a></li>
<li><a href="https://lists.apache.org/thread/70x8fw2gx3g9ty7yk0f2f1dlpqml2smd">https://lists.apache.org/thread/70x8fw2gx3g9ty7yk0f2f1dlpqml2smd</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-186.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2022-186.yaml</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9rr6-jpg7-9jg6">https://github.com/advisories/GHSA-9rr6-jpg7-9jg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9rr6-jpg7-9jg6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-11T00:02:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eth-abi] Ethereum ABI decoder DoS when parsing ZST]]></title>
        <id>https://github.com/advisories/GHSA-rqr8-pxh7-cq3g</id>
        <link href="https://github.com/advisories/GHSA-rqr8-pxh7-cq3g"/>
        <updated>2023-11-24T16:54:12.000Z</updated>
        <content type="html"><![CDATA[<p>With this notification I would like to inform about a DoS vector in the Ethereum ABI decoder. 
We have not yet found a way to exploit this with high impact, still the bug could potentially lead to a DoS in server systems.</p>
<p>Feel free to ask about an extension of the embargo period.</p>
<p>Trail of Bits is informing you and other vendors as a community service, and so we do not seek a bug bounty on these issues.</p>
<h2 id="bug-description">BUG DESCRIPTION</h2>
<p>Parsers must be written in a robust way, which avoids for example unrecoverable crashes, misinterpretation, hangs, or excessive resource consumption. The recent news about the aCropalypse bug also highlights that more subtle bugs like blind spots in file formats can lead to serious implications. Sometimes the specifications are at fault and sometimes the implementations.</p>
<p>In the case of the Ethereum ABI, I have to blame the specification more than the vulnerable implementations. The specification allows zero-sized-types (ZST), which can cause denial-of-service upon parsing a malicious payload and schema. If a ZST takes zero bytes when stored on disk, but after parsing occupies memory, then there is the possibility for a denial of service.</p>
<p>For instance, what will happen if a parser expects an array of ZST? It will try to parse as many ZST as the byte array claims to contain. The following figure first shows a payload of 20 bytes which will deserialize to an array of the numbers 2, 1, 3. The second payload will deserialize to 232 elements of a ZST like an empty tuple or empty array. </p>
<p>20 bytes of data:</p>
<pre><code>length=0x3u64 2u32 1u32 3u32
</code></pre>
<p>8 bytes of data</p>
<pre><code>length=0xFFFFFFFu64
</code></pre>
<p>Now, this is not a problem if the individual elements take zero memory after parsing. Though, a common flaw is at least during serialization a large amount of memory will be required. If this case is not handled explicitly in the implementation then we are facing a DoS vector. For example, an implementation could decide to represent an array of ZST differently than a normal array and parse it in constant time, instead of looping and naively adding elements to an in-memory array.</p>
<p>I mentioned that I believe this is a flaw in the specification. The reason for this is that the Ethereum ABI could have decided to disallow ZST completely. Actually, it turned out that in the latest versions of Solidity and Vyper it is not possible to define ZST like empty tuples or empty arrays. Even though the languages do not allow it, it is still allowed in the ABI specification.</p>
<h2 id="poc">POC</h2>
<p>We define the data payload as <code>0x0000000000000000000000000000000000000000000000000000000000000020 00000000000000000000000000000000000000000000000000000000FFFFFFFF</code>. It consists of two 32-byte blocks, which describe a serialized array of ZST. The first block defines an offset to the array’s elements. The second block defines the length of the array. Independent of the programming language we will reference it always as payload.</p>
<p>We will try to decode this payload using the ABI schemata ()[] and uint32[0][]. The former represents a dynamic array of empty tuples and the latter a dynamic array of empty static arrays. The distinction between dynamic and static is important here, because an empty static array takes zero bytes, whereas a dynamic one takes a few bytes because it serializes the length of the array.</p>
<p>The following Python program uses the official eth_abi library and will hang and eventually cause an out-of-memory error.</p>
<pre><code>from eth_abi import decode
data = bytearray.fromhex(payload)
decode(['()[]'], data)
</code></pre>
<h2 id="suggested-remediation">SUGGESTED REMEDIATION</h2>
<p>We suggest to disallow the parsing of ZST.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/eth-abi/security/advisories/GHSA-rqr8-pxh7-cq3g">https://github.com/ethereum/eth-abi/security/advisories/GHSA-rqr8-pxh7-cq3g</a></li>
<li><a href="https://github.com/advisories/GHSA-rqr8-pxh7-cq3g">https://github.com/advisories/GHSA-rqr8-pxh7-cq3g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rqr8-pxh7-cq3g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-24T16:54:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tqdm] TDQM Arbitrary Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</id>
        <link href="https://github.com/advisories/GHSA-r7q7-xcjw-qx8q"/>
        <updated>2023-11-22T22:16:18.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>tqdm._version</code> module in tqdm versions 4.4.1 and 4.10 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10075">https://nvd.nist.gov/vuln/detail/CVE-2016-10075</a></li>
<li><a href="https://github.com/tqdm/tqdm/issues/328">https://github.com/tqdm/tqdm/issues/328</a></li>
<li><a href="https://security.gentoo.org/glsa/201807-01">https://security.gentoo.org/glsa/201807-01</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/12/28/8">http://www.openwall.com/lists/oss-security/2016/12/28/8</a></li>
<li><a href="https://github.com/tqdm/tqdm/pull/330">https://github.com/tqdm/tqdm/pull/330</a></li>
<li><a href="https://web.archive.org/web/20170214023533/http://www.securityfocus.com/bid/95143">https://web.archive.org/web/20170214023533/http://www.securityfocus.com/bid/95143</a></li>
<li><a href="https://github.com/advisories/GHSA-r7q7-xcjw-qx8q">https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:19:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tqdm] TDQM Arbitrary Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</id>
        <link href="https://github.com/advisories/GHSA-r7q7-xcjw-qx8q"/>
        <updated>2023-11-22T22:16:18.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>tqdm._version</code> module in tqdm versions 4.4.1 and 4.10 allows local users to execute arbitrary code via a crafted repo with a malicious git log in the current working directory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-10075">https://nvd.nist.gov/vuln/detail/CVE-2016-10075</a></li>
<li><a href="https://github.com/tqdm/tqdm/issues/328">https://github.com/tqdm/tqdm/issues/328</a></li>
<li><a href="https://security.gentoo.org/glsa/201807-01">https://security.gentoo.org/glsa/201807-01</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/12/28/8">http://www.openwall.com/lists/oss-security/2016/12/28/8</a></li>
<li><a href="https://github.com/tqdm/tqdm/pull/330">https://github.com/tqdm/tqdm/pull/330</a></li>
<li><a href="https://web.archive.org/web/20170214023533/http://www.securityfocus.com/bid/95143">https://web.archive.org/web/20170214023533/http://www.securityfocus.com/bid/95143</a></li>
<li><a href="https://github.com/advisories/GHSA-r7q7-xcjw-qx8q">https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7q7-xcjw-qx8q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:19:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Salt Improper Access Control]]></title>
        <id>https://github.com/advisories/GHSA-vqh4-crjf-jjxx</id>
        <link href="https://github.com/advisories/GHSA-vqh4-crjf-jjxx"/>
        <updated>2023-11-22T21:59:32.000Z</updated>
        <content type="html"><![CDATA[<p>Salt 2015.8.x before 2015.8.4 does not properly handle clear messages on the minion, which allows man-in-the-middle attackers to execute arbitrary code by inserting packets into the minion-master data stream.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1866">https://nvd.nist.gov/vuln/detail/CVE-2016-1866</a></li>
<li><a href="https://docs.saltstack.com/en/latest/topics/releases/2015.8.4.html">https://docs.saltstack.com/en/latest/topics/releases/2015.8.4.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2016-03/msg00034.html">http://lists.opensuse.org/opensuse-updates/2016-03/msg00034.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vqh4-crjf-jjxx">https://github.com/advisories/GHSA-vqh4-crjf-jjxx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vqh4-crjf-jjxx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:11:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[web2py] web2py exposure of sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-jr83-vr4j-mp6p</id>
        <link href="https://github.com/advisories/GHSA-jr83-vr4j-mp6p"/>
        <updated>2023-11-22T21:57:06.000Z</updated>
        <content type="html"><![CDATA[<p>web2py before 2.14.2 allows remote attackers to obtain the session_cookie_key value via a direct request to examples/simple_examples/status.  NOTE: this issue can be leveraged by remote attackers to execute arbitrary code using CVE-2016-3957.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-3954">https://nvd.nist.gov/vuln/detail/CVE-2016-3954</a></li>
<li><a href="https://devco.re/blog/2017/01/03/web2py-unserialize-code-execution-CVE-2016-3957/">https://devco.re/blog/2017/01/03/web2py-unserialize-code-execution-CVE-2016-3957/</a></li>
<li><a href="https://usn.ubuntu.com/4030-1/">https://usn.ubuntu.com/4030-1/</a></li>
<li><a href="https://github.com/web2py/web2py/commit/0820926b500a321060ef6a76ce89fd35a252f8b0">https://github.com/web2py/web2py/commit/0820926b500a321060ef6a76ce89fd35a252f8b0</a></li>
<li><a href="https://github.com/advisories/GHSA-jr83-vr4j-mp6p">https://github.com/advisories/GHSA-jr83-vr4j-mp6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr83-vr4j-mp6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T00:57:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-muranoclient] OpenStack Murano Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-87r7-q54j-f9qg</id>
        <link href="https://github.com/advisories/GHSA-87r7-q54j-f9qg"/>
        <updated>2023-11-22T21:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4972">https://nvd.nist.gov/vuln/detail/CVE-2016-4972</a></li>
<li><a href="https://bugs.launchpad.net/murano/+bug/1586079">https://bugs.launchpad.net/murano/+bug/1586079</a></li>
<li><a href="https://bugs.launchpad.net/python-muranoclient/+bug/1586078">https://bugs.launchpad.net/python-muranoclient/+bug/1586078</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/06/23/8">http://www.openwall.com/lists/oss-security/2016/06/23/8</a></li>
<li><a href="https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b">https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po</a></li>
<li><a href="https://github.com/advisories/GHSA-87r7-q54j-f9qg">https://github.com/advisories/GHSA-87r7-q54j-f9qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87r7-q54j-f9qg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T03:48:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[murano-dashboard] OpenStack Murano Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-87r7-q54j-f9qg</id>
        <link href="https://github.com/advisories/GHSA-87r7-q54j-f9qg"/>
        <updated>2023-11-22T21:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4972">https://nvd.nist.gov/vuln/detail/CVE-2016-4972</a></li>
<li><a href="https://bugs.launchpad.net/murano/+bug/1586079">https://bugs.launchpad.net/murano/+bug/1586079</a></li>
<li><a href="https://bugs.launchpad.net/python-muranoclient/+bug/1586078">https://bugs.launchpad.net/python-muranoclient/+bug/1586078</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/06/23/8">http://www.openwall.com/lists/oss-security/2016/06/23/8</a></li>
<li><a href="https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b">https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po</a></li>
<li><a href="https://github.com/advisories/GHSA-87r7-q54j-f9qg">https://github.com/advisories/GHSA-87r7-q54j-f9qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87r7-q54j-f9qg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T03:48:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-muranoclient] OpenStack Murano Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-87r7-q54j-f9qg</id>
        <link href="https://github.com/advisories/GHSA-87r7-q54j-f9qg"/>
        <updated>2023-11-22T21:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4972">https://nvd.nist.gov/vuln/detail/CVE-2016-4972</a></li>
<li><a href="https://bugs.launchpad.net/murano/+bug/1586079">https://bugs.launchpad.net/murano/+bug/1586079</a></li>
<li><a href="https://bugs.launchpad.net/python-muranoclient/+bug/1586078">https://bugs.launchpad.net/python-muranoclient/+bug/1586078</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/06/23/8">http://www.openwall.com/lists/oss-security/2016/06/23/8</a></li>
<li><a href="https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b">https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po</a></li>
<li><a href="https://github.com/advisories/GHSA-87r7-q54j-f9qg">https://github.com/advisories/GHSA-87r7-q54j-f9qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87r7-q54j-f9qg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T03:48:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[murano-dashboard] OpenStack Murano Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-87r7-q54j-f9qg</id>
        <link href="https://github.com/advisories/GHSA-87r7-q54j-f9qg"/>
        <updated>2023-11-22T21:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4972">https://nvd.nist.gov/vuln/detail/CVE-2016-4972</a></li>
<li><a href="https://bugs.launchpad.net/murano/+bug/1586079">https://bugs.launchpad.net/murano/+bug/1586079</a></li>
<li><a href="https://bugs.launchpad.net/python-muranoclient/+bug/1586078">https://bugs.launchpad.net/python-muranoclient/+bug/1586078</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/06/23/8">http://www.openwall.com/lists/oss-security/2016/06/23/8</a></li>
<li><a href="https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b">https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po</a></li>
<li><a href="https://github.com/advisories/GHSA-87r7-q54j-f9qg">https://github.com/advisories/GHSA-87r7-q54j-f9qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87r7-q54j-f9qg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T03:48:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[murano] OpenStack Murano Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-87r7-q54j-f9qg</id>
        <link href="https://github.com/advisories/GHSA-87r7-q54j-f9qg"/>
        <updated>2023-11-22T21:21:33.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Murano before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), Murano-dashboard before 1.0.3 (liberty) and 2.x before 2.0.1 (mitaka), and python-muranoclient before 0.7.3 (liberty) and 0.8.x before 0.8.5 (mitaka) improperly use loaders inherited from yaml.Loader when parsing MuranoPL and UI files, which allows remote attackers to create arbitrary Python objects and execute arbitrary code via crafted extended YAML tags in UI definitions in packages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4972">https://nvd.nist.gov/vuln/detail/CVE-2016-4972</a></li>
<li><a href="https://bugs.launchpad.net/murano/+bug/1586079">https://bugs.launchpad.net/murano/+bug/1586079</a></li>
<li><a href="https://bugs.launchpad.net/python-muranoclient/+bug/1586078">https://bugs.launchpad.net/python-muranoclient/+bug/1586078</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/06/23/8">http://www.openwall.com/lists/oss-security/2016/06/23/8</a></li>
<li><a href="https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b">https://github.com/openstack/murano/commit/28de8c36c9dbe4aaf4d062e6fb6099afd437f49b</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/notes/safeloader-cve-2016-4972-19035a2a091ec30a.yaml</a></li>
<li><a href="https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po">https://github.com/openstack/murano/blob/c898a310afbc27f12190446ef75d8b0bd12115eb/releasenotes/source/locale/en_GB/LC_MESSAGES/releasenotes.po</a></li>
<li><a href="https://github.com/advisories/GHSA-87r7-q54j-f9qg">https://github.com/advisories/GHSA-87r7-q54j-f9qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87r7-q54j-f9qg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-17T03:48:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-submarine] SQL injection in Apache Submarine]]></title>
        <id>https://github.com/advisories/GHSA-v5gj-fx3g-hcpw</id>
        <link href="https://github.com/advisories/GHSA-v5gj-fx3g-hcpw"/>
        <updated>2023-11-27T22:02:03.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Software Foundation Apache Submarine has an SQL injection vulnerability when a user logs in. This issue can result in unauthorized login.</p>
<p>Now we have fixed this issue and now user must have the correct login to access workbench. This issue affects Apache Submarine: from 0.7.0 before 0.8.0.&nbsp;We recommend that all submarine users with 0.7.0 upgrade to 0.8.0, which not only fixes the issue, supports the oidc authentication mode, but also removes the case of unauthenticated logins.</p>
<p>If using the version lower than 0.8.0 and not want to upgrade, you can try cherry-pick PR  <a href="https://github.com/apache/submarine/pull/1037">https://github.com/apache/submarine/pull/1037</a> <a href="https://github.com/apache/submarine/pull/1054">https://github.com/apache/submarine/pull/1054</a>  and rebuild the submarine-server image to fix this.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37924">https://nvd.nist.gov/vuln/detail/CVE-2023-37924</a></li>
<li><a href="https://github.com/apache/submarine/pull/1037">https://github.com/apache/submarine/pull/1037</a></li>
<li><a href="https://issues.apache.org/jira/browse/SUBMARINE-1361">https://issues.apache.org/jira/browse/SUBMARINE-1361</a></li>
<li><a href="https://lists.apache.org/thread/g99h773vd49n1wyghdq1llv2f83w1b3r">https://lists.apache.org/thread/g99h773vd49n1wyghdq1llv2f83w1b3r</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-submarine/PYSEC-2023-244.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-submarine/PYSEC-2023-244.yaml</a></li>
<li><a href="https://github.com/apache/submarine/commit/4cd2af10499ac6dc4f82bda179d9f414a522abef">https://github.com/apache/submarine/commit/4cd2af10499ac6dc4f82bda179d9f414a522abef</a></li>
<li><a href="https://github.com/advisories/GHSA-v5gj-fx3g-hcpw">https://github.com/advisories/GHSA-v5gj-fx3g-hcpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5gj-fx3g-hcpw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-22T12:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nautobot] Cross-site Scripting potential in custom links, job buttons, and computed fields]]></title>
        <id>https://github.com/advisories/GHSA-cf9f-wmhp-v4pr</id>
        <link href="https://github.com/advisories/GHSA-cf9f-wmhp-v4pr"/>
        <updated>2023-11-22T20:55:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All users of Nautobot versions earlier than 1.6.6 or 2.0.5 are potentially affected.</p>
<p>Due to incorrect usage of Django's <code>mark_safe()</code> API when rendering certain types of user-authored content, including:</p>
<ul>
<li>custom links</li>
<li>job buttons</li>
<li>computed fields</li>
</ul>
<p>it is possible that users with permission to create or edit these types of content could craft a malicious payload (such as JavaScript code) that would be executed when rendering pages containing this content.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>We have fixed the incorrect uses of <code>mark_safe()</code> (generally by replacing them with appropriate use of <code>format_html()</code> instead) to prevent such malicious data from being executed.</p>
<p>Users on Nautobot 1.6.x LTM should upgrade to v1.6.6 and users on Nautobot 2.0.x should upgrade to v2.0.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>Appropriate object permissions can and should be applied to restrict which users are permitted to create or edit the aforementioned types of user-authored content. Other than that, there is no direct fix available.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li><a href="https://github.com/nautobot/nautobot/pull/4832">https://github.com/nautobot/nautobot/pull/4832</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4833">https://github.com/nautobot/nautobot/pull/4833</a></li>
<li><a href="https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.html.format_html">https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.html.format_html</a></li>
<li><a href="https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.safestring.mark_safe">https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.safestring.mark_safe</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nautobot/nautobot/security/advisories/GHSA-cf9f-wmhp-v4pr">https://github.com/nautobot/nautobot/security/advisories/GHSA-cf9f-wmhp-v4pr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48705">https://nvd.nist.gov/vuln/detail/CVE-2023-48705</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4832">https://github.com/nautobot/nautobot/pull/4832</a></li>
<li><a href="https://github.com/nautobot/nautobot/pull/4833">https://github.com/nautobot/nautobot/pull/4833</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/362850f5a94689a4c75e3188bf6de826c3b012b2">https://github.com/nautobot/nautobot/commit/362850f5a94689a4c75e3188bf6de826c3b012b2</a></li>
<li><a href="https://github.com/nautobot/nautobot/commit/54abe23331b6c3d0d82bf1b028c679b1d200920d">https://github.com/nautobot/nautobot/commit/54abe23331b6c3d0d82bf1b028c679b1d200920d</a></li>
<li><a href="https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.html.format_html">https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.html.format_html</a></li>
<li><a href="https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.safestring.mark_safe">https://docs.djangoproject.com/en/3.2/ref/utils/#django.utils.safestring.mark_safe</a></li>
<li><a href="https://github.com/advisories/GHSA-cf9f-wmhp-v4pr">https://github.com/advisories/GHSA-cf9f-wmhp-v4pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cf9f-wmhp-v4pr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-22T20:55:54.000Z</published>
    </entry>
</feed>