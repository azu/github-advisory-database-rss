<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-09-16T20:01:32.059Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[oslo-utils] python-oslo-utils has improper password parsing]]></title>
        <id>https://github.com/advisories/GHSA-wmqq-r32m-87c5</id>
        <link href="https://github.com/advisories/GHSA-wmqq-r32m-87c5"/>
        <updated>2022-09-16T19:32:40.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in python-oslo-utils. Due to improper parsing, passwords with a double quote ( " ) in them cause incorrect masking in debug logs, causing any part of the password after the double quote to be plaintext.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0718">https://nvd.nist.gov/vuln/detail/CVE-2022-0718</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0718">https://access.redhat.com/security/cve/CVE-2022-0718</a></li>
<li><a href="https://bugs.launchpad.net/oslo.utils/+bug/1949623">https://bugs.launchpad.net/oslo.utils/+bug/1949623</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2056850">https://bugzilla.redhat.com/show_bug.cgi?id=2056850</a></li>
<li><a href="https://opendev.org/openstack/oslo.utils/commit/6e17ae1f7959c64dfd20a5f67edf422e702426aa">https://opendev.org/openstack/oslo.utils/commit/6e17ae1f7959c64dfd20a5f67edf422e702426aa</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2022-0718">https://security-tracker.debian.org/tracker/CVE-2022-0718</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/oslo-utils/PYSEC-2022-258.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/oslo-utils/PYSEC-2022-258.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/09/msg00015.html">https://lists.debian.org/debian-lts-announce/2022/09/msg00015.html</a></li>
<li><a href="https://github.com/advisories/GHSA-wmqq-r32m-87c5">https://github.com/advisories/GHSA-wmqq-r32m-87c5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmqq-r32m-87c5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-29T20:06:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[poetry] Poetry Argument Injection can lead to Local Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-9xgj-fcgf-x6mw</id>
        <link href="https://github.com/advisories/GHSA-9xgj-fcgf-x6mw"/>
        <updated>2022-09-16T19:27:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="observation">Observation</h3>
<p>When handling dependencies that come from a Git repository instead of a registry, Poetry uses various commands, such as <code>git clone</code>. These commands are being constructed using user input (e.g. the repository URL). When building the commands, Poetry correctly avoids Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (<code>-</code>) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables.</p>
<p>To clone a repository, Poetry builds a git clone command, but fails to validate or sanitize the repository location properly:</p>
<p><a href="https://github.com/python-poetry/poetry-core/blob/ad33bc2f92be03dc5b31a666664903c439fb1173/poetry/core/vcs/git.py#L207"><code>poetry/core/vcs/git.py</code></a>:</p>
<pre><code class="language-python">def clone(self, repository: str, dest: Path) -&gt; str:
    return self.run("clone", "--recurse-submodules", repository, str(dest))
</code></pre>
<p>Since this value comes from the <code>pyproject.toml</code> file, it can contain any character, including a leading dash.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to Arbitrary Code Execution, which would lead to the takeover of the system. If a developer is exploited, the attacker could steal credentials or persist their access. If the exploit happens on a server, the attackers could use their access to attack other internal systems.
Since this vulnerability requires a fair amount of user interaction, it is not as dangerous as a remotely exploitable one. However, it still puts developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by vetting any Git or Poetry config files that might be present in the directory.
This kind of attack vector has been used in the past to target security researchers by sending them projects to collaborate on, so we believe that there is a non-negligible risk.</p>
<h3 id="patches">Patches</h3>
<p>1.1.8 || 1.2.0b1</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to version 1.1.9, 1.2.0b1 or later</p>
<h3 id="references">References</h3>
<ul>
<li>PR link</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, email us at <a href="mailto:security@python-poetry.org">security@python-poetry.org</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw">https://github.com/python-poetry/poetry/security/advisories/GHSA-9xgj-fcgf-x6mw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36069">https://nvd.nist.gov/vuln/detail/CVE-2022-36069</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-266.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-266.yaml</a></li>
<li><a href="https://github.com/python-poetry/poetry/releases/tag/1.1.9">https://github.com/python-poetry/poetry/releases/tag/1.1.9</a></li>
<li><a href="https://github.com/python-poetry/poetry/releases/tag/1.2.0b1">https://github.com/python-poetry/poetry/releases/tag/1.2.0b1</a></li>
<li><a href="https://github.com/advisories/GHSA-9xgj-fcgf-x6mw">https://github.com/advisories/GHSA-9xgj-fcgf-x6mw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xgj-fcgf-x6mw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-16T19:26:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `tf.sparse.cross`]]></title>
        <id>https://github.com/advisories/GHSA-p7hr-f446-x6qf</id>
        <link href="https://github.com/advisories/GHSA-p7hr-f446-x6qf"/>
        <updated>2022-09-16T19:25:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>tf.sparse.cross</code> receives an input <code>separator</code> that is not a scalar, it gives a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

tf.sparse.cross(inputs=[],name='a',separator=tf.constant(['a', 'b'],dtype=tf.string))
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Kang Hong Jin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p7hr-f446-x6qf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf">https://github.com/tensorflow/tensorflow/commit/83dcb4dbfa094e33db084e97c4d0531a559e0ebf</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p7hr-f446-x6qf">https://github.com/advisories/GHSA-p7hr-f446-x6qf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p7hr-f446-x6qf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:25:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Conv2DBackpropInput`]]></title>
        <id>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</id>
        <link href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw"/>
        <updated>2022-09-16T19:24:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <code>Conv2DBackpropInput</code> receives empty <code>out_backprop</code> inputs (e.g. <code>[3, 1, 0, 1]</code>), the current CPU/GPU kernels <code>CHECK</code> fail (one with dnnl, the other with cudnn). This can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
import numpy as np
input_sizes = [3, 1, 1, 2]
filter = np.ones([1, 3, 2, 3])
out_backprop = np.ones([3, 1, 0, 3])
strides = [1, 1, 2, 1]
padding = 'VALID'

tf.raw_ops.Conv2DBackpropInput(
   input_sizes = input_sizes,
   filter = filter,
   out_backprop = out_backprop,
   strides = strides,
   padding = padding
)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Jingyi Shi.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-37jf-mjv6-xfqw</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346">https://github.com/tensorflow/tensorflow/commit/27a65a43cf763897fecfa5cdb5cc653fc5dd0346</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-37jf-mjv6-xfqw">https://github.com/advisories/GHSA-37jf-mjv6-xfqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37jf-mjv6-xfqw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T19:24:49.000Z</published>
    </entry>
</feed>