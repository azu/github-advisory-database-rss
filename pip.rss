<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-06-05T18:01:28.501Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[pymongo] PyMongo Out-of-bounds Read in the bson module ]]></title>
        <id>https://github.com/advisories/GHSA-m87m-mmvp-v9qm</id>
        <link href="https://github.com/advisories/GHSA-m87m-mmvp-v9qm"/>
        <updated>2024-06-05T17:11:00.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pymongo before 4.6.3 are vulnerable to Out-of-bounds Read in the bson module. Using the crafted payload the attacker could force the parser to deserialize unmanaged memory. The parser tries to interpret bytes next to buffer and throws an exception with string. If the following bytes are not printable UTF-8 the parser throws an exception with a single byte.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5629">https://nvd.nist.gov/vuln/detail/CVE-2024-5629</a></li>
<li><a href="https://jira.mongodb.org/browse/PYTHON-4305">https://jira.mongodb.org/browse/PYTHON-4305</a></li>
<li><a href="https://github.com/mongodb/mongo-python-driver/commit/56b6b6dbc267d365d97c037082369dabf37405d2">https://github.com/mongodb/mongo-python-driver/commit/56b6b6dbc267d365d97c037082369dabf37405d2</a></li>
<li><a href="https://gist.github.com/keltecc/62a7c2bf74a997d0a7b48a0ff3853a03">https://gist.github.com/keltecc/62a7c2bf74a997d0a7b48a0ff3853a03</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PYMONGO-6370597">https://security.snyk.io/vuln/SNYK-PYTHON-PYMONGO-6370597</a></li>
<li><a href="https://github.com/advisories/GHSA-m87m-mmvp-v9qm">https://github.com/advisories/GHSA-m87m-mmvp-v9qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m87m-mmvp-v9qm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-05T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pypqc] Observable Timing Discrepancy in pypqc]]></title>
        <id>https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</id>
        <link href="https://github.com/advisories/GHSA-hvh4-5qr6-3v7r"/>
        <updated>2024-06-05T16:56:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>kyber512</code>, <code>kyber768</code>, and <code>kyber1024</code> on Mac OS (or when compiled with clang) only: An attacker able to submit many decapsulation requests against a single private key, and to gain timing information about the decapsulation, could recover the private key. Proof-of-concept exploit exists for a local attacker.</p>
<p>CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N/E:P/RL:U/RC:C  </p>
<h3 id="patches">Patches</h3>
<p>No patch is currently available / pending upstream <a href="https://github.com/PQClean/PQClean/issues/556">PQClean#556</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds have been reported. The 0.0.7 -&gt; 0.0.7.1 upgrade, when available, should be a drop-in replacement.</p>
<h3 id="references">References</h3>
<p><a href="https://pqshield.com/pqshield-plugs-timing-leaks-in-kyber-ml-kem-to-improve-pqc-implementation-maturity/">https://pqshield.com/pqshield-plugs-timing-leaks-in-kyber-ml-kem-to-improve-pqc-implementation-maturity/</a></p>
<p><a href="https://github.com/antoonpurnal/clangover">https://github.com/antoonpurnal/clangover</a></p>
<p><a href="https://www.github.com/PQClean/PQClean/issues/556">https://www.github.com/PQClean/PQClean/issues/556</a></p>
<p><a href="https://www.github.com/pq-crystals/kyber/commit/9b8d30698a3e7449aeb34e62339d4176f11e3c6c">https://www.github.com/pq-crystals/kyber/commit/9b8d30698a3e7449aeb34e62339d4176f11e3c6c</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/JamesTheAwesomeDude/pypqc/security/advisories/GHSA-hvh4-5qr6-3v7r">https://github.com/JamesTheAwesomeDude/pypqc/security/advisories/GHSA-hvh4-5qr6-3v7r</a></li>
<li><a href="https://github.com/PQClean/PQClean/issues/556">https://github.com/PQClean/PQClean/issues/556</a></li>
<li><a href="https://github.com/advisories/GHSA-hvh4-5qr6-3v7r">https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hvh4-5qr6-3v7r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-05T16:56:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio_pdf] Arbitrary JavaScript execution due to using outdated libraries]]></title>
        <id>https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</id>
        <link href="https://github.com/advisories/GHSA-4m3g-6r7g-jv4f"/>
        <updated>2024-06-05T14:15:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>gradio-pdf projects with dependencies on the pdf.js library are vulnerable to CVE-2024-4367, which allows arbitrary JavaScript execution.</p>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Generate a pdf file with a malicious script in the fontmatrix. (This will run <code>alert(‘XSS’)</code>.)
<a href="https://github.com/user-attachments/files/15516798/poc.pdf">poc.pdf</a></p>
</li>
<li><p>Run the app. In this PoC, I've used the demo for a simple proof.
<img alt="1" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/d1bb7626-3d0f-4984-8873-297658d6e77e"></p>
</li>
<li><p>Upload a PDF file containing the script.
<img alt="2" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/803d8080-c946-446e-bb34-cf5640e1b4de"></p>
</li>
<li><p>Check that the script is running.
<img alt="3" src="https://github.com/freddyaboulton/gradio-pdf/assets/114328108/4956b95f-acca-4bb1-a3c2-7dfc96adf890"></p>
</li>
</ol>
<h3 id="impact">Impact</h3>
<p>Malicious scripts can be injected into the code, and when linked with vulnerabilities such as CSRF, it can cause even greater damage. In particular, It can become a source of further attacks, especially when linked to social engineering.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Upgrade the pdf.js to v4.2.67, which removes the vulnerability. (or set the option <code>isEvalSupported</code> to <code>false</code>.)</p>
<h3 id="reference">Reference</h3>
<ol>
<li><a href="https://codeanlabs.com/blog/research/cve-2024-4367-arbitrary-js-execution-in-pdf-js/">https://codeanlabs.com/blog/research/cve-2024-4367-arbitrary-js-execution-in-pdf-js/</a></li>
<li><a href="https://github.com/mozilla/pdf.js/pull/18015">https://github.com/mozilla/pdf.js/pull/18015</a></li>
</ol>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/freddyaboulton/gradio-pdf/security/advisories/GHSA-4m3g-6r7g-jv4f">https://github.com/freddyaboulton/gradio-pdf/security/advisories/GHSA-4m3g-6r7g-jv4f</a></li>
<li><a href="https://github.com/freddyaboulton/gradio-pdf/commit/67edd0c625fae7b855186727ee9678297602ee45">https://github.com/freddyaboulton/gradio-pdf/commit/67edd0c625fae7b855186727ee9678297602ee45</a></li>
<li><a href="https://github.com/advisories/GHSA-4m3g-6r7g-jv4f">https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4m3g-6r7g-jv4f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-05T14:15:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[skops] Skops unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-q49c-6v6g-wgq3</id>
        <link href="https://github.com/advisories/GHSA-q49c-6v6g-wgq3"/>
        <updated>2024-06-05T13:27:17.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions 0.6 or newer of the skops python library, enabling a maliciously crafted model to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37065">https://nvd.nist.gov/vuln/detail/CVE-2024-37065</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/skops-june2024">https://hiddenlayer.com/sai-security-advisory/skops-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-q49c-6v6g-wgq3">https://github.com/advisories/GHSA-q49c-6v6g-wgq3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q49c-6v6g-wgq3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-2r57-2mrh-ggjv</id>
        <link href="https://github.com/advisories/GHSA-2r57-2mrh-ggjv"/>
        <updated>2024-06-05T13:26:58.000Z</updated>
        <content type="html"><![CDATA[<p>A cross-site scripting (XSS) vulnerability in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library allows for payloads to be run when a maliocusly crafted report is viewed in the browser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37063">https://nvd.nist.gov/vuln/detail/CVE-2024-37063</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-2r57-2mrh-ggjv">https://github.com/advisories/GHSA-2r57-2mrh-ggjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r57-2mrh-ggjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cg49-hrj4-3rpr</id>
        <link href="https://github.com/advisories/GHSA-cg49-hrj4-3rpr"/>
        <updated>2024-06-05T13:26:29.000Z</updated>
        <content type="html"><![CDATA[<p>Deseriliazation of untrusted data can occur in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library, enabling a maliciously crafted dataset to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37064">https://nvd.nist.gov/vuln/detail/CVE-2024-37064</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cg49-hrj4-3rpr">https://github.com/advisories/GHSA-cg49-hrj4-3rpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg49-hrj4-3rpr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ydata-profiling] ydata unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</id>
        <link href="https://github.com/advisories/GHSA-fpvj-m2h6-6wc5"/>
        <updated>2024-06-05T13:25:57.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions 3.7.0 or newer of Ydata's ydata-profiling open-source library, enabling a malicously crafted report to run arbitrary code on an end user's system when loaded.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37062">https://nvd.nist.gov/vuln/detail/CVE-2024-37062</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/ydata-june2024">https://hiddenlayer.com/sai-security-advisory/ydata-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-fpvj-m2h6-6wc5">https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpvj-m2h6-6wc5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow improper input validation]]></title>
        <id>https://github.com/advisories/GHSA-pqcv-qw2r-r859</id>
        <link href="https://github.com/advisories/GHSA-pqcv-qw2r-r859"/>
        <updated>2024-06-05T13:25:36.000Z</updated>
        <content type="html"><![CDATA[<p>Remote Code Execution can occur in versions of the MLflow platform running version 1.11.0 or newer, enabling a maliciously crafted MLproject to execute arbitrary code on an end user’s system when run due to unfiltered input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37061">https://nvd.nist.gov/vuln/detail/CVE-2024-37061</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-pqcv-qw2r-r859">https://github.com/advisories/GHSA-pqcv-qw2r-r859</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqcv-qw2r-r859</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cv6c-7963-wxcg</id>
        <link href="https://github.com/advisories/GHSA-cv6c-7963-wxcg"/>
        <updated>2024-06-05T13:22:41.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.27.0 or newer, enabling a maliciously crafted Recipe to execute arbitrary code on an end user’s system when run.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37060">https://nvd.nist.gov/vuln/detail/CVE-2024-37060</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cv6c-7963-wxcg">https://github.com/advisories/GHSA-cv6c-7963-wxcg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cv6c-7963-wxcg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</id>
        <link href="https://github.com/advisories/GHSA-wf7f-8fxf-xfxc"/>
        <updated>2024-06-05T13:21:56.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 0.5.0 or newer, enabling a maliciously uploaded PyTorch model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37059">https://nvd.nist.gov/vuln/detail/CVE-2024-37059</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-wf7f-8fxf-xfxc">https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf7f-8fxf-xfxc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</id>
        <link href="https://github.com/advisories/GHSA-cwgg-w6mp-w9hg"/>
        <updated>2024-06-05T13:21:40.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 2.5.0 or newer, enabling a maliciously uploaded Langchain AgentExecutor model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37058">https://nvd.nist.gov/vuln/detail/CVE-2024-37058</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-cwgg-w6mp-w9hg">https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwgg-w6mp-w9hg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</id>
        <link href="https://github.com/advisories/GHSA-j8mg-pqc5-x9gj"/>
        <updated>2024-06-05T13:18:40.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 2.0.0rc0 or newer, enabling a maliciously uploaded Tensorflow model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37057">https://nvd.nist.gov/vuln/detail/CVE-2024-37057</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-j8mg-pqc5-x9gj">https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8mg-pqc5-x9gj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-76cg-cfhx-373f</id>
        <link href="https://github.com/advisories/GHSA-76cg-cfhx-373f"/>
        <updated>2024-06-05T13:18:30.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.1.0 or newer, enabling a maliciously uploaded scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37052">https://nvd.nist.gov/vuln/detail/CVE-2024-37052</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-76cg-cfhx-373f">https://github.com/advisories/GHSA-76cg-cfhx-373f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-76cg-cfhx-373f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</id>
        <link href="https://github.com/advisories/GHSA-7p8j-qv6x-f4g4"/>
        <updated>2024-06-05T13:18:19.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.23.0 or newer, enabling a maliciously uploaded LightGBM scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37056">https://nvd.nist.gov/vuln/detail/CVE-2024-37056</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-7p8j-qv6x-f4g4">https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7p8j-qv6x-f4g4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-x38x-g6gr-jqff</id>
        <link href="https://github.com/advisories/GHSA-x38x-g6gr-jqff"/>
        <updated>2024-06-05T13:18:08.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.24.0 or newer, enabling a maliciously uploaded pmdarima model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37055">https://nvd.nist.gov/vuln/detail/CVE-2024-37055</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-x38x-g6gr-jqff">https://github.com/advisories/GHSA-x38x-g6gr-jqff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x38x-g6gr-jqff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</id>
        <link href="https://github.com/advisories/GHSA-ghv6-9r9j-wh4j"/>
        <updated>2024-06-05T13:17:58.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 0.9.0 or newer, enabling a maliciously uploaded PyFunc model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37054">https://nvd.nist.gov/vuln/detail/CVE-2024-37054</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-ghv6-9r9j-wh4j">https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghv6-9r9j-wh4j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow unsafe deserialization]]></title>
        <id>https://github.com/advisories/GHSA-43c4-9qgj-x742</id>
        <link href="https://github.com/advisories/GHSA-43c4-9qgj-x742"/>
        <updated>2024-06-05T13:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>Deserialization of untrusted data can occur in versions of the MLflow platform running version 1.1.0 or newer, enabling a maliciously uploaded scikit-learn model to run arbitrary code on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37053">https://nvd.nist.gov/vuln/detail/CVE-2024-37053</a></li>
<li><a href="https://hiddenlayer.com/sai-security-advisory/mlflow-june2024">https://hiddenlayer.com/sai-security-advisory/mlflow-june2024</a></li>
<li><a href="https://github.com/advisories/GHSA-43c4-9qgj-x742">https://github.com/advisories/GHSA-43c4-9qgj-x742</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43c4-9qgj-x742</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-04T12:31:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[qdrant-client] qdrant input validation failure ]]></title>
        <id>https://github.com/advisories/GHSA-7m75-x27w-r52r</id>
        <link href="https://github.com/advisories/GHSA-7m75-x27w-r52r"/>
        <updated>2024-06-04T17:50:59.000Z</updated>
        <content type="html"><![CDATA[<p>qdrant/qdrant version 1.9.0-dev is vulnerable to arbitrary file read and write during the snapshot recovery process. Attackers can exploit this vulnerability by manipulating snapshot files to include symlinks, leading to arbitrary file read by adding a symlink that points to a desired file on the filesystem and arbitrary file write by including a symlink and a payload file in the snapshot's directory structure. This vulnerability allows for the reading and writing of arbitrary files on the server, which could potentially lead to a full takeover of the system. The issue is fixed in version v1.9.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3829">https://nvd.nist.gov/vuln/detail/CVE-2024-3829</a></li>
<li><a href="https://github.com/qdrant/qdrant/commit/ee7a31ec3459a6a4219200234615c1817ab82260">https://github.com/qdrant/qdrant/commit/ee7a31ec3459a6a4219200234615c1817ab82260</a></li>
<li><a href="https://huntr.com/bounties/abd9c906-75ee-4d84-b76d-ce1386401e08">https://huntr.com/bounties/abd9c906-75ee-4d84-b76d-ce1386401e08</a></li>
<li><a href="https://github.com/advisories/GHSA-7m75-x27w-r52r">https://github.com/advisories/GHSA-7m75-x27w-r52r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7m75-x27w-r52r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-06-03T12:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vanna] Vanna prompt injection code execution]]></title>
        <id>https://github.com/advisories/GHSA-7735-w2jp-gvg6</id>
        <link href="https://github.com/advisories/GHSA-7735-w2jp-gvg6"/>
        <updated>2024-06-04T15:15:52.000Z</updated>
        <content type="html"><![CDATA[<p>The Vanna library uses a prompt function to present the user with visualized results, it is possible to alter the prompt using prompt injection and run arbitrary Python code instead of the intended visualization code. Specifically - allowing external input to the library’s “ask” method with "visualize" set to True (default behavior) leads to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5565">https://nvd.nist.gov/vuln/detail/CVE-2024-5565</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/vanna-prompt-injection-rce-jfsa-2024-001034449">https://research.jfrog.com/vulnerabilities/vanna-prompt-injection-rce-jfsa-2024-001034449</a></li>
<li><a href="https://github.com/advisories/GHSA-7735-w2jp-gvg6">https://github.com/advisories/GHSA-7735-w2jp-gvg6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7735-w2jp-gvg6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-31T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper sha3 codegen bug]]></title>
        <id>https://github.com/advisories/GHSA-6845-xw22-ffxv</id>
        <link href="https://github.com/advisories/GHSA-6845-xw22-ffxv"/>
        <updated>2024-06-03T18:39:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is an error in the stack management when compiling the <code>IR</code> for <code>sha3_64</code>. Concretely, the <code>height</code> variable is miscalculated.
The vulnerability can't be triggered without writing the <code>IR</code> by hand. That is, it cannot be triggered from regular vyper code, it can only be triggered by using the <code>fang</code> binary directly (this binary used to be called <code>vyper-ir</code> prior to v0.3.4).</p>
<h3 id="details">Details</h3>
<p>To compile <code>sha3_64</code>, the <code>arg[0]</code> and <code>arg[1]</code> have to be compiled:
<a href="https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/ir/compile_ir.py#L585-L586">https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/ir/compile_ir.py#L585-L586</a></p>
<p>As can be seen, after compiling the 0th arg, the <code>height</code> variable isn't increased. If new <code>withargs</code> are defined in the inner scope, they are manipulated correctly, because both their <code>height</code> is off and also the global <code>height</code> is off and thus their placement on the stack is computed correctly.</p>
<p><code>sha3_64</code> is used for retrieval in mappings. No flow that would cache the <code>key</code> was found, the issue shouldn't be possible to trigger when compiling the compiler-generated <code>IR</code>.</p>
<h3 id="poc">PoC</h3>
<p>Suppose the following hand-written IR:</p>
<pre><code class="language-lisp">(with _loc
    (with val 1 
        (with key 2 
            (sha3_64 val key))) 
                (seq 
                    (sstore _loc 
                    (with x (sload _loc) 
                        (with ans (add x 1) (seq (assert (ge ans x)) ans))))))
</code></pre>
<p>after compilation:</p>
<pre><code>the generated bytecode: 6001600281806020525f5260405f2090509050805460018101818110610026579050815550005b5f80fd

0000    60  PUSH1 0x01
0002    60  PUSH1 0x02
0004    81  DUP2
0005    80  DUP1       *********** bad code here!!!!!!
0006    60  PUSH1 0x20
0008    52  MSTORE
</code></pre>
<p>It can be seen that the second <code>DUP</code> will dup the item on the top of the stack which is incorrect.</p>
<p>tracking in <a href="https://github.com/vyperlang/vyper/issues/4062">https://github.com/vyperlang/vyper/issues/4062</a></p>
<h3 id="impact">Impact</h3>
<p>Versions v0.2.0-v0.3.10 were evaluated, and access of the variable with the invalid height is not reachable from IR generated by the vyper front-end. Because the issue isn't triggered during normal compilation of vyper code, the impact is considered low.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-6845-xw22-ffxv">https://github.com/vyperlang/vyper/security/advisories/GHSA-6845-xw22-ffxv</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/ir/compile_ir.py#L585-L586">https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/ir/compile_ir.py#L585-L586</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24559">https://nvd.nist.gov/vuln/detail/CVE-2024-24559</a></li>
<li><a href="https://github.com/vyperlang/vyper/pull/4063">https://github.com/vyperlang/vyper/pull/4063</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/d9f9fdadd81a148cbc68f02dbbbcdc0c92fad652">https://github.com/vyperlang/vyper/commit/d9f9fdadd81a148cbc68f02dbbbcdc0c92fad652</a></li>
<li><a href="https://github.com/advisories/GHSA-6845-xw22-ffxv">https://github.com/advisories/GHSA-6845-xw22-ffxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6845-xw22-ffxv</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-05T19:21:52.000Z</published>
    </entry>
</feed>