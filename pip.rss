<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-02-29T04:01:19.187Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[Mezzanine] Mezzanine allows attackers to bypass access control mechanisms]]></title>
        <id>https://github.com/advisories/GHSA-qp56-82vp-xqgv</id>
        <link href="https://github.com/advisories/GHSA-qp56-82vp-xqgv"/>
        <updated>2024-02-28T22:58:37.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Mezzanine v6.0.0 allows attackers to bypass access control mechanisms in the admin panel via a crafted request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25169">https://nvd.nist.gov/vuln/detail/CVE-2024-25169</a></li>
<li><a href="https://github.com/shenhav12/CVE-2024-25169-Mezzanine-v6.0.0">https://github.com/shenhav12/CVE-2024-25169-Mezzanine-v6.0.0</a></li>
<li><a href="https://ibb.co/JKh4hmD">https://ibb.co/JKh4hmD</a></li>
<li><a href="https://ibb.co/Pt9qd8t">https://ibb.co/Pt9qd8t</a></li>
<li><a href="https://ibb.co/hLLPTVp">https://ibb.co/hLLPTVp</a></li>
<li><a href="https://ibb.co/rfrKj3r">https://ibb.co/rfrKj3r</a></li>
<li><a href="https://github.com/advisories/GHSA-qp56-82vp-xqgv">https://github.com/advisories/GHSA-qp56-82vp-xqgv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qp56-82vp-xqgv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T21:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gradio] Gradio Exposure of Sensitive Information to an Unauthorized Actor vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gqvf-3hgp-5hxv</id>
        <link href="https://github.com/advisories/GHSA-gqvf-3hgp-5hxv"/>
        <updated>2024-02-28T19:07:06.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository gradio-app/gradio prior to main.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6572">https://nvd.nist.gov/vuln/detail/CVE-2023-6572</a></li>
<li><a href="https://github.com/gradio-app/gradio/commit/5b5af1899dd98d63e1f9b48a93601c2db1f56520">https://github.com/gradio-app/gradio/commit/5b5af1899dd98d63e1f9b48a93601c2db1f56520</a></li>
<li><a href="https://huntr.com/bounties/21d2ff0c-d43a-4afd-bb4d-049ee8da5b5c">https://huntr.com/bounties/21d2ff0c-d43a-4afd-bb4d-049ee8da5b5c</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/gradio/PYSEC-2023-255.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/gradio/PYSEC-2023-255.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gqvf-3hgp-5hxv">https://github.com/advisories/GHSA-gqvf-3hgp-5hxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gqvf-3hgp-5hxv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-14T15:30:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper data authorization when creating a new dataset]]></title>
        <id>https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</id>
        <link href="https://github.com/advisories/GHSA-wr6g-9wcr-cmqj"/>
        <updated>2024-02-28T18:57:03.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Superset with custom roles that include <code>can write on dataset</code> and without all data access permissions, allows for users to create virtual datasets to data they don't have access to. These users could then use those virtual datasets to get access to unauthorized data.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24779">https://nvd.nist.gov/vuln/detail/CVE-2024-24779</a></li>
<li><a href="https://lists.apache.org/thread/xzhz1m5bb9zxhyqgoy4q2d689b3zp4pq">https://lists.apache.org/thread/xzhz1m5bb9zxhyqgoy4q2d689b3zp4pq</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/6">http://www.openwall.com/lists/oss-security/2024/02/28/6</a></li>
<li><a href="https://github.com/advisories/GHSA-wr6g-9wcr-cmqj">https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper data authorization when creating a new dataset]]></title>
        <id>https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</id>
        <link href="https://github.com/advisories/GHSA-wr6g-9wcr-cmqj"/>
        <updated>2024-02-28T18:57:03.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Superset with custom roles that include <code>can write on dataset</code> and without all data access permissions, allows for users to create virtual datasets to data they don't have access to. These users could then use those virtual datasets to get access to unauthorized data.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24779">https://nvd.nist.gov/vuln/detail/CVE-2024-24779</a></li>
<li><a href="https://lists.apache.org/thread/xzhz1m5bb9zxhyqgoy4q2d689b3zp4pq">https://lists.apache.org/thread/xzhz1m5bb9zxhyqgoy4q2d689b3zp4pq</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/6">http://www.openwall.com/lists/oss-security/2024/02/28/6</a></li>
<li><a href="https://github.com/advisories/GHSA-wr6g-9wcr-cmqj">https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr6g-9wcr-cmqj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Flask-AppBuilder] Flask-AppBuilder vulnerable to incorrect authentication when using auth type OpenID ]]></title>
        <id>https://github.com/advisories/GHSA-j2pw-vp55-fqqj</id>
        <link href="https://github.com/advisories/GHSA-j2pw-vp55-fqqj"/>
        <updated>2024-02-28T18:37:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When Flask-AppBuilder is set to AUTH_TYPE AUTH_OID, allows an attacker to forge an HTTP request, that could deceive the backend into using any requested OpenID service. This vulnerability could grant an attacker unauthorised privilege access if a custom OpenID service is deployed by the attacker and accessible by the backend. </p>
<p>This vulnerability is only exploitable when the application is using the old (deprecated 10 years ago) OpenID 2.0 authorization protocol (which is very different from the popular OIDC - Open ID Connect - popular protocol used today). Currently, this protocol is regarded as legacy, with significantly reduced usage and not supported for several years by major authorization providers.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Flask-AppBuilder 4.3.11</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrade is not possible add the following to your config:</p>
<pre><code>from flask import flash, redirect
from flask_appbuilder import expose
from flask_appbuilder.security.sqla.manager import SecurityManager
from flask_appbuilder.security.views import AuthOIDView
from flask_appbuilder.security.forms import LoginForm_oid

basedir = os.path.abspath(os.path.dirname(__file__))


class FixedOIDView(AuthOIDView):
    @expose("/login/", methods=["GET", "POST"])
    def login(self, flag=True):
        form = LoginForm_oid()
        if form.validate_on_submit():
            identity_url = None
            for provider in self.appbuilder.sm.openid_providers:
                if provider.get("url") == form.openid.data:
                    identity_url = form.openid.data
            if identity_url is None:
                flash(self.invalid_login_message, "warning")
                return redirect(self.appbuilder.get_url_for_login)
        return super().login(flag=flag)

class FixedSecurityManager(SecurityManager):
    authoidview = FixedOIDView


FAB_SECURITY_MANAGER_CLASS = "config.FixedSecurityManager"
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-j2pw-vp55-fqqj">https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-j2pw-vp55-fqqj</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/commit/6336456d83f8f111c842b2b53d1e89627f2502c8">https://github.com/dpgaspar/Flask-AppBuilder/commit/6336456d83f8f111c842b2b53d1e89627f2502c8</a></li>
<li><a href="https://github.com/advisories/GHSA-j2pw-vp55-fqqj">https://github.com/advisories/GHSA-j2pw-vp55-fqqj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2pw-vp55-fqqj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-28T18:37:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Flask-AppBuilder] Flask-AppBuilder's OAuth login page subject to Cross Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-fqxj-46wg-9v84</id>
        <link href="https://github.com/advisories/GHSA-fqxj-46wg-9v84"/>
        <updated>2024-02-28T18:37:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A Cross-Site Scripting (XSS) vulnerability has been discovered on the OAuth login page. An attacker could trick a user to follow a specially crafted URL to the OAuth login page. This URL could inject and execute malicious javascript code that would get executed on the user's browser.</p>
<p>Impacted versions:
Flask-AppBuilder version 4.1.4 up to and including 4.2.0</p>
<h3 id="patches">Patches</h3>
<p>This issue was introduced on 4.1.4 and patched on 4.2.1, user's should upgrade to 4.2.1 or newer versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-fqxj-46wg-9v84">https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-fqxj-46wg-9v84</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/commit/3d17741886e4b3c384d0570de69689e4117aa812">https://github.com/dpgaspar/Flask-AppBuilder/commit/3d17741886e4b3c384d0570de69689e4117aa812</a></li>
<li><a href="https://github.com/advisories/GHSA-fqxj-46wg-9v84">https://github.com/advisories/GHSA-fqxj-46wg-9v84</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fqxj-46wg-9v84</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T18:37:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper validation of SQL statements allows for unauthorized access to data]]></title>
        <id>https://github.com/advisories/GHSA-5474-f7g5-273q</id>
        <link href="https://github.com/advisories/GHSA-5474-f7g5-273q"/>
        <updated>2024-02-28T18:36:22.000Z</updated>
        <content type="html"><![CDATA[<p>Improper parsing of nested SQL statements on SQLLab would allow authenticated users to surpass their data authorization scope.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24773">https://nvd.nist.gov/vuln/detail/CVE-2024-24773</a></li>
<li><a href="https://lists.apache.org/thread/h66fy6nj41cfx07zh7l552w6dmtjh501">https://lists.apache.org/thread/h66fy6nj41cfx07zh7l552w6dmtjh501</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/4">http://www.openwall.com/lists/oss-security/2024/02/28/4</a></li>
<li><a href="https://github.com/advisories/GHSA-5474-f7g5-273q">https://github.com/advisories/GHSA-5474-f7g5-273q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5474-f7g5-273q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper validation of SQL statements allows for unauthorized access to data]]></title>
        <id>https://github.com/advisories/GHSA-5474-f7g5-273q</id>
        <link href="https://github.com/advisories/GHSA-5474-f7g5-273q"/>
        <updated>2024-02-28T18:36:22.000Z</updated>
        <content type="html"><![CDATA[<p>Improper parsing of nested SQL statements on SQLLab would allow authenticated users to surpass their data authorization scope.
This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24773">https://nvd.nist.gov/vuln/detail/CVE-2024-24773</a></li>
<li><a href="https://lists.apache.org/thread/h66fy6nj41cfx07zh7l552w6dmtjh501">https://lists.apache.org/thread/h66fy6nj41cfx07zh7l552w6dmtjh501</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/4">http://www.openwall.com/lists/oss-security/2024/02/28/4</a></li>
<li><a href="https://github.com/advisories/GHSA-5474-f7g5-273q">https://github.com/advisories/GHSA-5474-f7g5-273q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5474-f7g5-273q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper Neutralization of custom SQL on embedded context]]></title>
        <id>https://github.com/advisories/GHSA-m6jm-3v38-76j4</id>
        <link href="https://github.com/advisories/GHSA-m6jm-3v38-76j4"/>
        <updated>2024-02-28T18:36:19.000Z</updated>
        <content type="html"><![CDATA[<p>A guest user could exploit a chart data REST API and send arbitrary SQL statements that on error could leak information from the underlying analytics database.This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24772">https://nvd.nist.gov/vuln/detail/CVE-2024-24772</a></li>
<li><a href="https://lists.apache.org/thread/gfl3ckwy6y9tpz9jmpv62orh2q346sn5">https://lists.apache.org/thread/gfl3ckwy6y9tpz9jmpv62orh2q346sn5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/5">http://www.openwall.com/lists/oss-security/2024/02/28/5</a></li>
<li><a href="https://github.com/advisories/GHSA-m6jm-3v38-76j4">https://github.com/advisories/GHSA-m6jm-3v38-76j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6jm-3v38-76j4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper Neutralization of custom SQL on embedded context]]></title>
        <id>https://github.com/advisories/GHSA-m6jm-3v38-76j4</id>
        <link href="https://github.com/advisories/GHSA-m6jm-3v38-76j4"/>
        <updated>2024-02-28T18:36:19.000Z</updated>
        <content type="html"><![CDATA[<p>A guest user could exploit a chart data REST API and send arbitrary SQL statements that on error could leak information from the underlying analytics database.This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24772">https://nvd.nist.gov/vuln/detail/CVE-2024-24772</a></li>
<li><a href="https://lists.apache.org/thread/gfl3ckwy6y9tpz9jmpv62orh2q346sn5">https://lists.apache.org/thread/gfl3ckwy6y9tpz9jmpv62orh2q346sn5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/5">http://www.openwall.com/lists/oss-security/2024/02/28/5</a></li>
<li><a href="https://github.com/advisories/GHSA-m6jm-3v38-76j4">https://github.com/advisories/GHSA-m6jm-3v38-76j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6jm-3v38-76j4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper error handling on alerts]]></title>
        <id>https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</id>
        <link href="https://github.com/advisories/GHSA-h7r6-8qmm-hj5r"/>
        <updated>2024-02-28T18:36:13.000Z</updated>
        <content type="html"><![CDATA[<p>An authenticated user with privileges to create Alerts on Alerts &amp; Reports has the capability to generate a specially crafted SQL statement that triggers an error on the database. This error is not properly handled by Apache Superset and may inadvertently surface in the error log of the Alert exposing possibly sensitive data.</p>
<p>This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27315">https://nvd.nist.gov/vuln/detail/CVE-2024-27315</a></li>
<li><a href="https://lists.apache.org/thread/qcwbx7q2s3ynsd405895bx3wcwq32j7z">https://lists.apache.org/thread/qcwbx7q2s3ynsd405895bx3wcwq32j7z</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/3">http://www.openwall.com/lists/oss-security/2024/02/28/3</a></li>
<li><a href="https://github.com/advisories/GHSA-h7r6-8qmm-hj5r">https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset: Improper error handling on alerts]]></title>
        <id>https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</id>
        <link href="https://github.com/advisories/GHSA-h7r6-8qmm-hj5r"/>
        <updated>2024-02-28T18:36:13.000Z</updated>
        <content type="html"><![CDATA[<p>An authenticated user with privileges to create Alerts on Alerts &amp; Reports has the capability to generate a specially crafted SQL statement that triggers an error on the database. This error is not properly handled by Apache Superset and may inadvertently surface in the error log of the Alert exposing possibly sensitive data.</p>
<p>This issue affects Apache Superset: before 3.0.4, from 3.1.0 before 3.1.1.</p>
<p>Users are recommended to upgrade to version 3.1.1 or 3.0.4, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27315">https://nvd.nist.gov/vuln/detail/CVE-2024-27315</a></li>
<li><a href="https://lists.apache.org/thread/qcwbx7q2s3ynsd405895bx3wcwq32j7z">https://lists.apache.org/thread/qcwbx7q2s3ynsd405895bx3wcwq32j7z</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/02/28/3">http://www.openwall.com/lists/oss-security/2024/02/28/3</a></li>
<li><a href="https://github.com/advisories/GHSA-h7r6-8qmm-hj5r">https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h7r6-8qmm-hj5r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-28T12:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] MLFlow Cross-site Scripting vulnerability leads to client-side Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-3v79-q7ph-j75h</id>
        <link href="https://github.com/advisories/GHSA-3v79-q7ph-j75h"/>
        <updated>2024-02-27T21:57:35.000Z</updated>
        <content type="html"><![CDATA[<p>Insufficient sanitization in MLflow leads to XSS when running a recipe that uses an untrusted dataset. This issue leads to a client-side RCE when running the recipe in Jupyter Notebook. The vulnerability stems from lack of sanitization over dataset table fields.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27133">https://nvd.nist.gov/vuln/detail/CVE-2024-27133</a></li>
<li><a href="https://github.com/mlflow/mlflow/pull/10893">https://github.com/mlflow/mlflow/pull/10893</a></li>
<li><a href="https://research.jfrog.com/vulnerabilities/mlflow-untrusted-dataset-xss-jfsa-2024-000631932">https://research.jfrog.com/vulnerabilities/mlflow-untrusted-dataset-xss-jfsa-2024-000631932</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/c43823750bffa5b6abcc086683b15a068513b67b">https://github.com/mlflow/mlflow/commit/c43823750bffa5b6abcc086683b15a068513b67b</a></li>
<li><a href="https://github.com/advisories/GHSA-3v79-q7ph-j75h">https://github.com/advisories/GHSA-3v79-q7ph-j75h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v79-q7ph-j75h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-24T00:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[diffoscope] diffoscope Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-33w6-hvmq-gh4x</id>
        <link href="https://github.com/advisories/GHSA-33w6-hvmq-gh4x"/>
        <updated>2024-02-27T21:48:55.000Z</updated>
        <content type="html"><![CDATA[<p>diffoscope before 256 allows directory traversal via an embedded filename in a GPG file. Contents of any file, such as ../.ssh/id_rsa, may be disclosed to an attacker. This occurs because the value of the gpg --use-embedded-filenames option is trusted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25711">https://nvd.nist.gov/vuln/detail/CVE-2024-25711</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OUNBANAWD6TZH2NRRV4YUIAXEHLUJQ47">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/OUNBANAWD6TZH2NRRV4YUIAXEHLUJQ47</a></li>
<li><a href="https://salsa.debian.org/reproducible-builds/diffoscope/-/commit/dfed769904c27d66a14a5903823d9c8c5aae860e">https://salsa.debian.org/reproducible-builds/diffoscope/-/commit/dfed769904c27d66a14a5903823d9c8c5aae860e</a></li>
<li><a href="https://salsa.debian.org/reproducible-builds/diffoscope/-/issues/361">https://salsa.debian.org/reproducible-builds/diffoscope/-/issues/361</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/diffoscope/PYSEC-2024-41.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/diffoscope/PYSEC-2024-41.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-33w6-hvmq-gh4x">https://github.com/advisories/GHSA-33w6-hvmq-gh4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-33w6-hvmq-gh4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-27T03:31:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pretix] pretix mishandles file validation]]></title>
        <id>https://github.com/advisories/GHSA-672r-97r7-vx2q</id>
        <link href="https://github.com/advisories/GHSA-672r-97r7-vx2q"/>
        <updated>2024-02-26T22:14:45.000Z</updated>
        <content type="html"><![CDATA[<p>pretix before 2024.1.1 mishandles file validation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27447">https://nvd.nist.gov/vuln/detail/CVE-2024-27447</a></li>
<li><a href="https://github.com/pretix/pretix/compare/v2023.10.2...v2024.1.1">https://github.com/pretix/pretix/compare/v2023.10.2...v2024.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-672r-97r7-vx2q">https://github.com/advisories/GHSA-672r-97r7-vx2q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-672r-97r7-vx2q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-26T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[orjson] orjson does not limit recursion for deeply nested JSON documents]]></title>
        <id>https://github.com/advisories/GHSA-pwr2-4v36-6qpr</id>
        <link href="https://github.com/advisories/GHSA-pwr2-4v36-6qpr"/>
        <updated>2024-02-26T22:06:17.000Z</updated>
        <content type="html"><![CDATA[<p>orjson.loads in orjson before 3.9.15 does not limit recursion for deeply nested JSON documents.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27454">https://nvd.nist.gov/vuln/detail/CVE-2024-27454</a></li>
<li><a href="https://github.com/ijl/orjson/issues/458">https://github.com/ijl/orjson/issues/458</a></li>
<li><a href="https://github.com/ijl/orjson/commit/b0e4d2c06ce06c6e63981bf0276e4b7c74e5845e">https://github.com/ijl/orjson/commit/b0e4d2c06ce06c6e63981bf0276e4b7c74e5845e</a></li>
<li><a href="https://github.com/ijl/orjson/blob/master/CHANGELOG.md#3915">https://github.com/ijl/orjson/blob/master/CHANGELOG.md#3915</a></li>
<li><a href="https://monicz.dev/CVE-2024-27454">https://monicz.dev/CVE-2024-27454</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/orjson/PYSEC-2024-40.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/orjson/PYSEC-2024-40.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pwr2-4v36-6qpr">https://github.com/advisories/GHSA-pwr2-4v36-6qpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwr2-4v36-6qpr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-26T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain-experimental] LangChain Experimental vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-v8vj-cv27-hjv8</id>
        <link href="https://github.com/advisories/GHSA-v8vj-cv27-hjv8"/>
        <updated>2024-02-26T21:00:13.000Z</updated>
        <content type="html"><![CDATA[<p>langchain_experimental (aka LangChain Experimental) before 0.0.52, part of LangChain before 0.1.8, allows an attacker to bypass the CVE-2023-44467 fix and execute arbitrary code via the <code>__import__</code>, <code>__subclasses__</code>, <code>__builtins__</code>, <code>__globals__</code>, <code>__getattribute__</code>, <code>__bases__</code>, <code>__mro__</code>, or <code>__base__</code> attribute in Python code. These are not prohibited by <code>pal_chain/base.py</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27444">https://nvd.nist.gov/vuln/detail/CVE-2024-27444</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7">https://github.com/langchain-ai/langchain/commit/de9a6cdf163ed00adaf2e559203ed0a9ca2f1de7</a></li>
<li><a href="https://github.com/advisories/GHSA-v8vj-cv27-hjv8">https://github.com/advisories/GHSA-v8vj-cv27-hjv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v8vj-cv27-hjv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-26T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] langchain Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h9j7-5xvc-qhg5</id>
        <link href="https://github.com/advisories/GHSA-h9j7-5xvc-qhg5"/>
        <updated>2024-02-26T20:56:22.000Z</updated>
        <content type="html"><![CDATA[<p>With the following crawler configuration:</p>
<pre><code class="language-python">from bs4 import BeautifulSoup as Soup

url = "https://example.com"
loader = RecursiveUrlLoader(
    url=url, max_depth=2, extractor=lambda x: Soup(x, "html.parser").text
)
docs = loader.load()
</code></pre>
<p>An attacker in control of the contents of <code>https://example.com</code> could place a malicious HTML file in there with links like "<a href="https://example.completely.different/my_file.html">https://example.completely.different/my_file.html</a>" and the crawler would proceed to download that file as well even though <code>prevent_outside=True</code>.</p>
<p><a href="https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51">https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51</a></p>
<p>Resolved in <a href="https://github.com/langchain-ai/langchain/pull/15559">https://github.com/langchain-ai/langchain/pull/15559</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-0243">https://nvd.nist.gov/vuln/detail/CVE-2024-0243</a></li>
<li><a href="https://github.com/langchain-ai/langchain/commit/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22">https://github.com/langchain-ai/langchain/commit/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22</a></li>
<li><a href="https://huntr.com/bounties/370904e7-10ac-40a4-a8d4-e2d16e1ca861">https://huntr.com/bounties/370904e7-10ac-40a4-a8d4-e2d16e1ca861</a></li>
<li><a href="https://github.com/langchain-ai/langchain/pull/15559">https://github.com/langchain-ai/langchain/pull/15559</a></li>
<li><a href="https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51">https://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51</a></li>
<li><a href="https://github.com/advisories/GHSA-h9j7-5xvc-qhg5">https://github.com/advisories/GHSA-h9j7-5xvc-qhg5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h9j7-5xvc-qhg5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-26T18:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper's `extract32` can ready dirty memory]]></title>
        <id>https://github.com/advisories/GHSA-4hwq-4cpm-8vmx</id>
        <link href="https://github.com/advisories/GHSA-4hwq-4cpm-8vmx"/>
        <updated>2024-02-26T22:06:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When using the built-in <code>extract32(b, start)</code>, if the <code>start</code> index provided has for side effect to update <code>b</code>, the byte array to extract <code>32</code> bytes from, it could be that some dirty memory is read and returned by <code>extract32</code>.</p>
<h3 id="details">Details</h3>
<p>Before evaluating <code>start</code>, the function <code>Extract32.build_IR</code> caches only:</p>
<ul>
<li>The pointer in memory/storage to <code>b</code>: <a href="https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918</a></li>
<li>The length of <code>b</code>: <a href="https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922</a></li>
</ul>
<p>but do not cache the actual content of <code>b</code>. This means that if the evaluation of <code>start</code> changes <code>b</code>'s content and length, an outdated length will be used with the new content when extracting 32 bytes from <code>b</code>.</p>
<h3 id="poc">PoC</h3>
<p>Calling the function <code>foo</code> of the following contract returns <code>b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\x00\x00789'</code> meaning that <code>extract32</code> accessed some dirty memory.</p>
<pre><code class="language-Vyper">var:Bytes[96]

@internal
def bar() -&gt; uint256:
    self.var = b'uuuuuuuuuuuuuuuuuuuuuuuuuuuuuu'
    self.var = b''
    return 3

@external
def foo() -&gt; bytes32:
    self.var = b'abcdefghijklmnopqrstuvwxyz123456789'
    return extract32(self.var, self.bar(), output_type=bytes32)
    # returns b'uuuuuuuuuuuuuuuuuuuuuuuuuuu\x00\x00789'
</code></pre>
<h3 id="impact">Impact</h3>
<p>For contracts that are affected, it means that calling <code>extract32</code> returns dirty memory bytes instead of some expected output.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-4hwq-4cpm-8vmx">https://github.com/vyperlang/vyper/security/advisories/GHSA-4hwq-4cpm-8vmx</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L916-L918</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922">https://github.com/vyperlang/vyper/blob/10564dcc37756f3d3684b7a91fd8f4325a38c4d8/vyper/builtins/functions.py#L920-L922</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24564">https://nvd.nist.gov/vuln/detail/CVE-2024-24564</a></li>
<li><a href="https://github.com/advisories/GHSA-4hwq-4cpm-8vmx">https://github.com/advisories/GHSA-4hwq-4cpm-8vmx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hwq-4cpm-8vmx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-26T20:11:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper's `_abi_decode` vulnerable to Memory Overflow]]></title>
        <id>https://github.com/advisories/GHSA-9p8r-4xp4-gw5w</id>
        <link href="https://github.com/advisories/GHSA-9p8r-4xp4-gw5w"/>
        <updated>2024-02-26T22:06:28.000Z</updated>
        <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>If an excessively large value is specified as the starting index for an array in <code>_abi_decode</code>, it can cause the read position to overflow. This results in the decoding of values outside the intended array bounds, potentially leading to bugs in contracts that use arrays within <code>_abi_decode</code>. The advisory has been assigned low severity, because it is only observable if there is a memory write between two invocations of <code>abi_decode</code> on the same input.</p>
<h2 id="proof-of-concept">Proof of Concept</h2>
<pre><code class="language-vyper">event Pwn:
    pass

@external
def f(x: Bytes[32 * 3]):
    a: Bytes[32] = b"foo"
    y: Bytes[32 * 3] = x

    decoded_y1: Bytes[32] = _abi_decode(y, Bytes[32])
    a = b"bar"
    decoded_y2: Bytes[32] = _abi_decode(y, Bytes[32])

    if decoded_y1 != decoded_y2:
        log Pwn()
</code></pre>
<p>Sending the following calldata results in <code>Pwn</code> being emitted. </p>
<pre><code>0xd45754f8
0000000000000000000000000000000000000000000000000000000000000020
0000000000000000000000000000000000000000000000000000000000000060
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-9p8r-4xp4-gw5w">https://github.com/vyperlang/vyper/security/advisories/GHSA-9p8r-4xp4-gw5w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-26149">https://nvd.nist.gov/vuln/detail/CVE-2024-26149</a></li>
<li><a href="https://github.com/advisories/GHSA-9p8r-4xp4-gw5w">https://github.com/advisories/GHSA-9p8r-4xp4-gw5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p8r-4xp4-gw5w</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-26T20:11:07.000Z</published>
    </entry>
</feed>