<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-08-30T06:01:41.221Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[tensorflow] FPE in `ParallelConcat`]]></title>
        <id>https://github.com/advisories/GHSA-7v94-64hj-m82h</id>
        <link href="https://github.com/advisories/GHSA-7v94-64hj-m82h"/>
        <updated>2024-08-29T22:09:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">implementation of <code>ParallelConcat</code></a> misses some input validation and can produce a division by 0:</p>
<pre><code class="language-python">import tensorflow as tf

@tf.function
def test():
  y = tf.raw_ops.ParallelConcat(values=[['tf']],shape=0)
  return y

test()
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">f2c3931113eaafe9ef558faaddd48e00a6606235</a>.</p>
<p>The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41207">https://nvd.nist.gov/vuln/detail/CVE-2021-41207</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c">https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0">https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a">https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97</a></li>
<li><a href="https://github.com/advisories/GHSA-7v94-64hj-m82h">https://github.com/advisories/GHSA-7v94-64hj-m82h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v94-64hj-m82h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T19:02:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] FPE in `ParallelConcat`]]></title>
        <id>https://github.com/advisories/GHSA-7v94-64hj-m82h</id>
        <link href="https://github.com/advisories/GHSA-7v94-64hj-m82h"/>
        <updated>2024-08-29T22:09:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">implementation of <code>ParallelConcat</code></a> misses some input validation and can produce a division by 0:</p>
<pre><code class="language-python">import tensorflow as tf

@tf.function
def test():
  y = tf.raw_ops.ParallelConcat(values=[['tf']],shape=0)
  return y

test()
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">f2c3931113eaafe9ef558faaddd48e00a6606235</a>.</p>
<p>The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41207">https://nvd.nist.gov/vuln/detail/CVE-2021-41207</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c">https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0">https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a">https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97</a></li>
<li><a href="https://github.com/advisories/GHSA-7v94-64hj-m82h">https://github.com/advisories/GHSA-7v94-64hj-m82h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v94-64hj-m82h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T19:02:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] FPE in `ParallelConcat`]]></title>
        <id>https://github.com/advisories/GHSA-7v94-64hj-m82h</id>
        <link href="https://github.com/advisories/GHSA-7v94-64hj-m82h"/>
        <updated>2024-08-29T22:09:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">implementation of <code>ParallelConcat</code></a> misses some input validation and can produce a division by 0:</p>
<pre><code class="language-python">import tensorflow as tf

@tf.function
def test():
  y = tf.raw_ops.ParallelConcat(values=[['tf']],shape=0)
  return y

test()
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">f2c3931113eaafe9ef558faaddd48e00a6606235</a>.</p>
<p>The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by members of the Aivul Team from Qihoo 360.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-7v94-64hj-m82h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41207">https://nvd.nist.gov/vuln/detail/CVE-2021-41207</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235">https://github.com/tensorflow/tensorflow/commit/f2c3931113eaafe9ef558faaddd48e00a6606235</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c">https://github.com/tensorflow/tensorflow/commit/9de11bdc2cf1284b2f635419bd3e6bbc7643eb2c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0">https://github.com/tensorflow/tensorflow/commit/d11f21bbdfa54f3576ae860fc927bf23c675ebc0</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a">https://github.com/tensorflow/tensorflow/commit/e67caccea81167402c62977b5c521f2a8b261d6a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97">https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/inplace_ops.cc#L72-L97</a></li>
<li><a href="https://github.com/advisories/GHSA-7v94-64hj-m82h">https://github.com/advisories/GHSA-7v94-64hj-m82h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7v94-64hj-m82h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T19:02:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Null pointer dereference in TFLite MLIR optimizations]]></title>
        <id>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</id>
        <link href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh"/>
        <updated>2024-08-29T22:06:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<p>This is caused by the MLIR optimization of <code>L2NormalizeReduceAxis</code> operator. The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">implementation</a> unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:</p>
<pre><code class="language-cc">bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast&lt;ShapedType&gt;().getRank() - 1 ==
          *axis.getValues&lt;int&gt;().begin() ||
      *axis.getValues&lt;int&gt;().begin() == -1) {
      // ...
  }
  // ...
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">d6b57f461b39fd1aa8c1b870f1b974aac3554955</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wf5p-c75w-w3wh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37689">https://nvd.nist.gov/vuln/detail/CVE-2021-37689</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955">https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70</a></li>
<li><a href="https://github.com/advisories/GHSA-wf5p-c75w-w3wh">https://github.com/advisories/GHSA-wf5p-c75w-w3wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wf5p-c75w-w3wh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Null pointer dereference in TFLite]]></title>
        <id>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</id>
        <link href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68"/>
        <updated>2024-08-29T22:03:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:</p>
<pre><code class="language-python">import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.Input(shape=(1, 2, 3)))
model.add(tf.keras.layers.Dense(0, activation='relu'))

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(model_content=tflite_model)
interpreter.allocate_tensors()

interpreter.invoke()
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">implementation</a> unconditionally dereferences a pointer.</p>
<pre><code class="language-cc">  if (y4 &gt; 1) {
    // ...
  } else {
    for (int i0 = 0; i0 &lt; y0; ++i0) {
      const T* input2_data_ptr = nullptr;
      for (int i1 = 0; i1 &lt; y1; ++i1) {
        input2_data_ptr = input2_data_reset;
        for (int i2 = 0; i2 &lt; y2; ++i2) {
          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,
                             output_data_ptr);
        }
      }
    }
  }
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">15691e456c7dc9bd6be203b09765b063bf4a380c</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Yakun Zhang of Baidu Security.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vcjj-9vg7-vf68</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37688">https://nvd.nist.gov/vuln/detail/CVE-2021-37688</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c">https://github.com/tensorflow/tensorflow/commit/15691e456c7dc9bd6be203b09765b063bf4a380c</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285">https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/lite/kernels/internal/optimized/optimized_ops.h#L268-L285</a></li>
<li><a href="https://github.com/advisories/GHSA-vcjj-9vg7-vf68">https://github.com/advisories/GHSA-vcjj-9vg7-vf68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vcjj-9vg7-vf68</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T14:39:54.000Z</published>
    </entry>
</feed>