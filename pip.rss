<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-10-22T12:02:17.953Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[rsa] Python RSA allows attackers to spoof signatures]]></title>
        <id>https://github.com/advisories/GHSA-8rjr-6qq5-pj9p</id>
        <link href="https://github.com/advisories/GHSA-8rjr-6qq5-pj9p"/>
        <updated>2024-10-21T21:53:43.000Z</updated>
        <content type="html"><![CDATA[<p>The verify function in the RSA package for Python (Python-RSA) before 3.3 allows attackers to spoof signatures with a small public exponent via crafted signature padding, aka a BERserk attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-1494">https://nvd.nist.gov/vuln/detail/CVE-2016-1494</a></li>
<li><a href="https://bitbucket.org/sybren/python-rsa/pull-requests/14/security-fix-bb06-attack-in-verify-by/diff">https://bitbucket.org/sybren/python-rsa/pull-requests/14/security-fix-bb06-attack-in-verify-by/diff</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2016-January/175897.html">http://lists.fedoraproject.org/pipermail/package-announce/2016-January/175897.html</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2016-January/175942.html">http://lists.fedoraproject.org/pipermail/package-announce/2016-January/175942.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2016-01/msg00032.html">http://lists.opensuse.org/opensuse-updates/2016-01/msg00032.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/01/05/1">http://www.openwall.com/lists/oss-security/2016/01/05/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/01/05/3">http://www.openwall.com/lists/oss-security/2016/01/05/3</a></li>
<li><a href="https://github.com/sybrenstuvel/python-rsa/commit/ab5d21c3b554f926d51ff3ad9c794bcf32e95b3c">https://github.com/sybrenstuvel/python-rsa/commit/ab5d21c3b554f926d51ff3ad9c794bcf32e95b3c</a></li>
<li><a href="https://web.archive.org/web/20210123020914/http://www.securityfocus.com/bid/79829">https://web.archive.org/web/20210123020914/http://www.securityfocus.com/bid/79829</a></li>
<li><a href="https://blog.filippo.io/bleichenbacher-06-signature-forgery-in-python-rsa">https://blog.filippo.io/bleichenbacher-06-signature-forgery-in-python-rsa</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/rsa/PYSEC-2016-10.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/rsa/PYSEC-2016-10.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8rjr-6qq5-pj9p">https://github.com/advisories/GHSA-8rjr-6qq5-pj9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rjr-6qq5-pj9p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T00:59:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[roundup] Moderate severity vulnerability that affects roundup]]></title>
        <id>https://github.com/advisories/GHSA-926q-wxr6-3crq</id>
        <link href="https://github.com/advisories/GHSA-926q-wxr6-3crq"/>
        <updated>2024-10-21T21:43:43.000Z</updated>
        <content type="html"><![CDATA[<p>Roundup 1.6 allows XSS via the URI because frontends/roundup.cgi and roundup/cgi/wsgi_handler.py mishandle 404 errors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10904">https://nvd.nist.gov/vuln/detail/CVE-2019-10904</a></li>
<li><a href="https://github.com/python/bugs.python.org/issues/34">https://github.com/python/bugs.python.org/issues/34</a></li>
<li><a href="https://bugs.python.org/issue36391">https://bugs.python.org/issue36391</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/04/msg00009.html">https://lists.debian.org/debian-lts-announce/2019/04/msg00009.html</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2019/04/05/1">https://www.openwall.com/lists/oss-security/2019/04/05/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/04/07/1">http://www.openwall.com/lists/oss-security/2019/04/07/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2019-201.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/roundup/PYSEC-2019-201.yaml</a></li>
<li><a href="https://pypi.org/project/roundup/2.0.0alpha0">https://pypi.org/project/roundup/2.0.0alpha0</a></li>
<li><a href="https://github.com/advisories/GHSA-926q-wxr6-3crq">https://github.com/advisories/GHSA-926q-wxr6-3crq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-926q-wxr6-3crq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-04-09T19:47:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rope] Code injection in rope]]></title>
        <id>https://github.com/advisories/GHSA-r38r-qp28-2m63</id>
        <link href="https://github.com/advisories/GHSA-r38r-qp28-2m63"/>
        <updated>2024-10-21T21:29:56.000Z</updated>
        <content type="html"><![CDATA[<p>base/oi/doa.py in the Rope library in CPython (aka Python) allows remote attackers to execute arbitrary code by leveraging an unsafe call to pickle.load.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-3539">https://nvd.nist.gov/vuln/detail/CVE-2014-3539</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1116485">https://bugzilla.redhat.com/show_bug.cgi?id=1116485</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2015/02/07/1">http://www.openwall.com/lists/oss-security/2015/02/07/1</a></li>
<li><a href="https://github.com/python-rope/rope/commit/b01da7aab5cd02129941d2a900e6e5e3b5f7d4fb">https://github.com/python-rope/rope/commit/b01da7aab5cd02129941d2a900e6e5e3b5f7d4fb</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/rope/PYSEC-2018-100.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/rope/PYSEC-2018-100.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-r38r-qp28-2m63">https://github.com/advisories/GHSA-r38r-qp28-2m63</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r38r-qp28-2m63</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-07-26T16:08:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rtslib-fb] rtslib-fb weak permissions for /etc/target/saveconfig.json file]]></title>
        <id>https://github.com/advisories/GHSA-cpcw-p965-wpqx</id>
        <link href="https://github.com/advisories/GHSA-cpcw-p965-wpqx"/>
        <updated>2024-10-21T21:25:21.000Z</updated>
        <content type="html"><![CDATA[<p>Python rtslib-fb through 2.1.72 has weak permissions for <code>/etc/target/saveconfig.json</code> because shutil.copyfile (instead of shutil.copy) is used, and thus permissions are not preserved.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-14019">https://nvd.nist.gov/vuln/detail/CVE-2020-14019</a></li>
<li><a href="https://github.com/open-iscsi/rtslib-fb/pull/162">https://github.com/open-iscsi/rtslib-fb/pull/162</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-08/msg00012.html">http://lists.opensuse.org/opensuse-security-announce/2020-08/msg00012.html</a></li>
<li><a href="https://github.com/open-iscsi/rtslib-fb/commit/b23d061ee0fa7924d2cdce6194c313b9ee06c468">https://github.com/open-iscsi/rtslib-fb/commit/b23d061ee0fa7924d2cdce6194c313b9ee06c468</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/rtslib-fb/PYSEC-2020-250.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/rtslib-fb/PYSEC-2020-250.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TNMCV2DJJTX345YYBXAMJBXNNVUZQ5UH">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TNMCV2DJJTX345YYBXAMJBXNNVUZQ5UH</a></li>
<li><a href="https://github.com/advisories/GHSA-cpcw-p965-wpqx">https://github.com/advisories/GHSA-cpcw-p965-wpqx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpcw-p965-wpqx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:21:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspark] Exposure of Sensitive Information to an Unauthorized Actor in Apache Spark]]></title>
        <id>https://github.com/advisories/GHSA-6mqq-8r44-vmjc</id>
        <link href="https://github.com/advisories/GHSA-6mqq-8r44-vmjc"/>
        <updated>2024-10-21T21:07:40.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1334">https://nvd.nist.gov/vuln/detail/CVE-2018-1334</a></li>
<li><a href="https://github.com/advisories/GHSA-6mqq-8r44-vmjc">https://github.com/advisories/GHSA-6mqq-8r44-vmjc</a></li>
<li><a href="https://lists.apache.org/thread.html/4d6d210e319a501b740293daaeeeadb51927111fb8261a3e4cd60060@%3Cdev.spark.apache.org%3E">https://lists.apache.org/thread.html/4d6d210e319a501b740293daaeeeadb51927111fb8261a3e4cd60060@%3Cdev.spark.apache.org%3E</a></li>
<li><a href="https://spark.apache.org/security.html#CVE-2018-1334">https://spark.apache.org/security.html#CVE-2018-1334</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2018-25.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2018-25.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mqq-8r44-vmjc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-03-14T15:41:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyspark] Exposure of Sensitive Information to an Unauthorized Actor in Apache Spark]]></title>
        <id>https://github.com/advisories/GHSA-6mqq-8r44-vmjc</id>
        <link href="https://github.com/advisories/GHSA-6mqq-8r44-vmjc"/>
        <updated>2024-10-21T21:07:40.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1334">https://nvd.nist.gov/vuln/detail/CVE-2018-1334</a></li>
<li><a href="https://github.com/advisories/GHSA-6mqq-8r44-vmjc">https://github.com/advisories/GHSA-6mqq-8r44-vmjc</a></li>
<li><a href="https://lists.apache.org/thread.html/4d6d210e319a501b740293daaeeeadb51927111fb8261a3e4cd60060@%3Cdev.spark.apache.org%3E">https://lists.apache.org/thread.html/4d6d210e319a501b740293daaeeeadb51927111fb8261a3e4cd60060@%3Cdev.spark.apache.org%3E</a></li>
<li><a href="https://spark.apache.org/security.html#CVE-2018-1334">https://spark.apache.org/security.html#CVE-2018-1334</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2018-25.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyspark/PYSEC-2018-25.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6mqq-8r44-vmjc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-03-14T15:41:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[poetry] Poetry before v1.1.9 contains Untrusted Search Path]]></title>
        <id>https://github.com/advisories/GHSA-xr2c-5w89-63pv</id>
        <link href="https://github.com/advisories/GHSA-xr2c-5w89-63pv"/>
        <updated>2024-10-21T20:59:45.000Z</updated>
        <content type="html"><![CDATA[<p>Poetry prior to v1.1.9 was discovered to contain an untrusted search path which causes the application to behave in unexpected ways when users execute Poetry commands in a directory containing malicious content. This vulnerability occurs when the application is ran on Windows OS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26184">https://nvd.nist.gov/vuln/detail/CVE-2022-26184</a></li>
<li><a href="https://github.com/python-poetry/poetry-core/pull/205/commits/fa9cb6f358ae840885c700f954317f34838caba7">https://github.com/python-poetry/poetry-core/pull/205/commits/fa9cb6f358ae840885c700f954317f34838caba7</a></li>
<li><a href="https://github.com/python-poetry/poetry/releases/tag/1.1.9">https://github.com/python-poetry/poetry/releases/tag/1.1.9</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-234.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-234.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr2c-5w89-63pv">https://github.com/advisories/GHSA-xr2c-5w89-63pv</a></li>
<li><a href="https://github.com/python-poetry/poetry-core/commit/1e1a109a1009daaab2367ce90c997f0cbbb0c1d1">https://github.com/python-poetry/poetry-core/commit/1e1a109a1009daaab2367ce90c997f0cbbb0c1d1</a></li>
<li><a href="https://www.sonarsource.com/blog/securing-developer-tools-package-managers">https://www.sonarsource.com/blog/securing-developer-tools-package-managers</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr2c-5w89-63pv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-03-23T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyanyapi] Unsafe pyyaml load usage in PyAnyAPI]]></title>
        <id>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</id>
        <link href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r"/>
        <updated>2024-10-21T20:51:44.000Z</updated>
        <content type="html"><![CDATA[<p>An exploitable vulnerability exists in the YAML parsing functionality in the YAMLParser method in Interfaces.py in PyAnyAPI before 0.6.1. A YAML parser can execute arbitrary Python commands resulting in command execution because <code>load</code> is used where <code>safe_load</code> should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16616">https://nvd.nist.gov/vuln/detail/CVE-2017-16616</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/issues/41">https://github.com/Stranger6667/pyanyapi/issues/41</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1">https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1</a></li>
<li><a href="https://pypi.python.org/pypi/pyanyapi/0.6.1">https://pypi.python.org/pypi/pyanyapi/0.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r">https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyanyapi/PYSEC-2017-23.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyanyapi/PYSEC-2017-23.yaml</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/commit/810db626c18ebc261d5f4299d0f0eac38d5eb3cf">https://github.com/Stranger6667/pyanyapi/commit/810db626c18ebc261d5f4299d0f0eac38d5eb3cf</a></li>
<li><a href="https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi">https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:44:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pycsw] SQL Injection in pycsw]]></title>
        <id>https://github.com/advisories/GHSA-hg4c-rgvm-964g</id>
        <link href="https://github.com/advisories/GHSA-hg4c-rgvm-964g"/>
        <updated>2024-10-21T20:20:56.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8640">https://nvd.nist.gov/vuln/detail/CVE-2016-8640</a></li>
<li><a href="https://github.com/geopython/pycsw/pull/474/files">https://github.com/geopython/pycsw/pull/474/files</a></li>
<li><a href="https://github.com/advisories/GHSA-hg4c-rgvm-964g">https://github.com/advisories/GHSA-hg4c-rgvm-964g</a></li>
<li><a href="https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch">https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch</a></li>
<li><a href="http://seclists.org/oss-sec/2016/q4/406">http://seclists.org/oss-sec/2016/q4/406</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222">https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2">https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753">https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg4c-rgvm-964g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-08-15T20:02:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pycsw] SQL Injection in pycsw]]></title>
        <id>https://github.com/advisories/GHSA-hg4c-rgvm-964g</id>
        <link href="https://github.com/advisories/GHSA-hg4c-rgvm-964g"/>
        <updated>2024-10-21T20:20:56.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8640">https://nvd.nist.gov/vuln/detail/CVE-2016-8640</a></li>
<li><a href="https://github.com/geopython/pycsw/pull/474/files">https://github.com/geopython/pycsw/pull/474/files</a></li>
<li><a href="https://github.com/advisories/GHSA-hg4c-rgvm-964g">https://github.com/advisories/GHSA-hg4c-rgvm-964g</a></li>
<li><a href="https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch">https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch</a></li>
<li><a href="http://seclists.org/oss-sec/2016/q4/406">http://seclists.org/oss-sec/2016/q4/406</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222">https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2">https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753">https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg4c-rgvm-964g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-08-15T20:02:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pycsw] SQL Injection in pycsw]]></title>
        <id>https://github.com/advisories/GHSA-hg4c-rgvm-964g</id>
        <link href="https://github.com/advisories/GHSA-hg4c-rgvm-964g"/>
        <updated>2024-10-21T20:20:56.000Z</updated>
        <content type="html"><![CDATA[<p>A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8640">https://nvd.nist.gov/vuln/detail/CVE-2016-8640</a></li>
<li><a href="https://github.com/geopython/pycsw/pull/474/files">https://github.com/geopython/pycsw/pull/474/files</a></li>
<li><a href="https://github.com/advisories/GHSA-hg4c-rgvm-964g">https://github.com/advisories/GHSA-hg4c-rgvm-964g</a></li>
<li><a href="https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch">https://patch-diff.githubusercontent.com/raw/geopython/pycsw/pull/474.patch</a></li>
<li><a href="http://seclists.org/oss-sec/2016/q4/406">http://seclists.org/oss-sec/2016/q4/406</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222">https://github.com/geopython/pycsw/commit/522873e5ce48bb9cbd4e7e8168ca881ce709c222</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2">https://github.com/geopython/pycsw/commit/69546e13527c82e4f9191769215490381ad511b2</a></li>
<li><a href="https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753">https://github.com/geopython/pycsw/commit/daaf09b4b920708a415be3c7f446739661ba3753</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pycsw/PYSEC-2018-98.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg4c-rgvm-964g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2018-08-15T20:02:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pydantic] Use of "infinity" as an input to datetime and date fields causes infinite loop in pydantic]]></title>
        <id>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</id>
        <link href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh"/>
        <updated>2024-10-21T20:16:11.000Z</updated>
        <content type="html"><![CDATA[<p>Impact</p>
<p>Passing either 'infinity', 'inf' or float('inf') (or their negatives) to datetime or date fields causes validation to run forever with 100% CPU usage (on one CPU).
Patches</p>
<p>Pydantic is be patched with fixes available in the following versions:</p>
<pre><code>v1.8.2
v1.7.4
v1.6.2
</code></pre>
<p>All these versions are available on pypi, and will be available on conda-forge soon.</p>
<p>See the changelog for details.
Workarounds</p>
<p>If you absolutely can't upgrade, you can work around this risk using a validator to catch these values, brief demo:</p>
<p>from datetime import date
from pydantic import BaseModel, validator</p>
<p>class DemoModel(BaseModel):
    date_of_birth: date</p>
<pre><code>@validator('date_of_birth', pre=True)
def skip_infinite_values(cls, v):
    try:
        seconds = float(v)
    except (ValueError, TypeError):
        return v
    else:
        if seconds == float('inf'):
            return date.max
        elif seconds == float('-inf'):
            return date.min
        else:
            return seconds
</code></pre>
<p>Note: this is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic.</p>
<p>If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.
References</p>
<p>This was fixed in commit 7e83fdd.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
<li><a href="https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468">https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29510">https://nvd.nist.gov/vuln/detail/CVE-2021-29510</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa">https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47">https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520">https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV</a></li>
<li><a href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-13T20:23:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pydantic] Use of "infinity" as an input to datetime and date fields causes infinite loop in pydantic]]></title>
        <id>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</id>
        <link href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh"/>
        <updated>2024-10-21T20:16:11.000Z</updated>
        <content type="html"><![CDATA[<p>Impact</p>
<p>Passing either 'infinity', 'inf' or float('inf') (or their negatives) to datetime or date fields causes validation to run forever with 100% CPU usage (on one CPU).
Patches</p>
<p>Pydantic is be patched with fixes available in the following versions:</p>
<pre><code>v1.8.2
v1.7.4
v1.6.2
</code></pre>
<p>All these versions are available on pypi, and will be available on conda-forge soon.</p>
<p>See the changelog for details.
Workarounds</p>
<p>If you absolutely can't upgrade, you can work around this risk using a validator to catch these values, brief demo:</p>
<p>from datetime import date
from pydantic import BaseModel, validator</p>
<p>class DemoModel(BaseModel):
    date_of_birth: date</p>
<pre><code>@validator('date_of_birth', pre=True)
def skip_infinite_values(cls, v):
    try:
        seconds = float(v)
    except (ValueError, TypeError):
        return v
    else:
        if seconds == float('inf'):
            return date.max
        elif seconds == float('-inf'):
            return date.min
        else:
            return seconds
</code></pre>
<p>Note: this is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic.</p>
<p>If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.
References</p>
<p>This was fixed in commit 7e83fdd.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
<li><a href="https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468">https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29510">https://nvd.nist.gov/vuln/detail/CVE-2021-29510</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa">https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47">https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520">https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV</a></li>
<li><a href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-13T20:23:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pydantic] Use of "infinity" as an input to datetime and date fields causes infinite loop in pydantic]]></title>
        <id>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</id>
        <link href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh"/>
        <updated>2024-10-21T20:16:11.000Z</updated>
        <content type="html"><![CDATA[<p>Impact</p>
<p>Passing either 'infinity', 'inf' or float('inf') (or their negatives) to datetime or date fields causes validation to run forever with 100% CPU usage (on one CPU).
Patches</p>
<p>Pydantic is be patched with fixes available in the following versions:</p>
<pre><code>v1.8.2
v1.7.4
v1.6.2
</code></pre>
<p>All these versions are available on pypi, and will be available on conda-forge soon.</p>
<p>See the changelog for details.
Workarounds</p>
<p>If you absolutely can't upgrade, you can work around this risk using a validator to catch these values, brief demo:</p>
<p>from datetime import date
from pydantic import BaseModel, validator</p>
<p>class DemoModel(BaseModel):
    date_of_birth: date</p>
<pre><code>@validator('date_of_birth', pre=True)
def skip_infinite_values(cls, v):
    try:
        seconds = float(v)
    except (ValueError, TypeError):
        return v
    else:
        if seconds == float('inf'):
            return date.max
        elif seconds == float('-inf'):
            return date.min
        else:
            return seconds
</code></pre>
<p>Note: this is not an ideal solution (in particular you'll need a slightly different function for datetimes), instead of a hack like this you should upgrade pydantic.</p>
<p>If you are not using v1.8.x, v1.7.x or v1.6.x and are unable to upgrade to a fixed version of pydantic, please create an issue requesting a back-port, and we will endeavour to release a patch for earlier versions of pydantic.
References</p>
<p>This was fixed in commit 7e83fdd.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
<li><a href="https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468">https://github.com/samuelcolvin/pydantic/commit/7e83fdd2563ffac081db7ecdf1affa65ef38c468</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29510">https://nvd.nist.gov/vuln/detail/CVE-2021-29510</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa">https://github.com/pydantic/pydantic/commit/1c24f1d74ba95ea985b50bdc001ce96c813229aa</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47">https://github.com/pydantic/pydantic/commit/80e0dd3f752bef145dce12f160d262bb40ec8d47</a></li>
<li><a href="https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520">https://github.com/pydantic/pydantic/commit/bdde15b7b947c94ca00fd6eb92da8db390a13520</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pydantic/PYSEC-2021-47.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/S2HT266L6Q7H6ICP7DFGXOGBJHNNKMKB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UEFWM7DYKD2ZHE7R5YT5EQWJPV4ZKYRB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UMKAJX4O6IGBBCE32CO2G7PZQCCQSBLV</a></li>
<li><a href="https://github.com/advisories/GHSA-5jqp-qgf6-3pvh">https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jqp-qgf6-3pvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-13T20:23:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pretalx] pretalx allows path traversal in HTML export]]></title>
        <id>https://github.com/advisories/GHSA-23fx-92m6-4f2g</id>
        <link href="https://github.com/advisories/GHSA-23fx-92m6-4f2g"/>
        <updated>2024-10-21T20:08:40.000Z</updated>
        <content type="html"><![CDATA[<p>pretalx 2.3.1 before 2.3.2 allows path traversal in HTML export (a non-default feature). Organizers can trigger the overwriting (with the standard pretalx 404 page content) of an arbitrary file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28458">https://nvd.nist.gov/vuln/detail/CVE-2023-28458</a></li>
<li><a href="https://github.com/pretalx/pretalx/commit/60722c43cf975f319e94102e6bff320723776890">https://github.com/pretalx/pretalx/commit/60722c43cf975f319e94102e6bff320723776890</a></li>
<li><a href="https://github.com/pretalx/pretalx/releases/tag/v2.3.2">https://github.com/pretalx/pretalx/releases/tag/v2.3.2</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pretalx/PYSEC-2023-40.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pretalx/PYSEC-2023-40.yaml</a></li>
<li><a href="https://pretalx.com/p/news/security-release-232">https://pretalx.com/p/news/security-release-232</a></li>
<li><a href="https://www.sonarsource.com/blog/pretalx-vulnerabilities-how-to-get-accepted-at-every-conference">https://www.sonarsource.com/blog/pretalx-vulnerabilities-how-to-get-accepted-at-every-conference</a></li>
<li><a href="https://github.com/advisories/GHSA-23fx-92m6-4f2g">https://github.com/advisories/GHSA-23fx-92m6-4f2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23fx-92m6-4f2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-20T21:33:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[projen] Rebuild-bot workflow may allow unauthorised repository modifications]]></title>
        <id>https://github.com/advisories/GHSA-gg2g-m5wc-vccq</id>
        <link href="https://github.com/advisories/GHSA-gg2g-m5wc-vccq"/>
        <updated>2024-10-21T20:05:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>projen</code> is a project generation tool that synthesizes project configuration files such as <code>package.json</code>, <code>tsconfig.json</code>, <code>.gitignore</code>, GitHub Workflows, <code>eslint</code>, <code>jest</code>, and more, from a well-typed definition written in JavaScript. Users of projen's <code>NodeProject</code> project type (including any project type derived from it) include a <code>.github/workflows/rebuild-bot.yml</code> workflow that may allow any GitHub user to trigger execution of un-trusted code in the context of the "main" repository (as opposed to that of a fork). In some situations, such untrusted code may potentially be able to commit to the "main" repository.</p>
<p>The rebuild-bot workflow is triggered by comments including <code>@projen rebuild</code> on pull-request to trigger a re-build of the projen project, and updating the pull request with the updated files. This workflow is triggered by an <code>issue_comment</code> event, and thus always executes with a <code>GITHUB_TOKEN</code> belonging to the repository into which the pull-request is made (this is in contrast with workflows triggered by <code>pull_request</code> events, which always execute with a <code>GITHUB_TOKEN</code> belonging to the repository from which the pull-request is made).</p>
<p>Repositories that do not have branch protection configured on their default branch (typically <code>main</code> or <code>master</code>) could possibly allow an untrusted user to gain access to secrets configured on the repository (such as NPM tokens, etc). Branch protection prohibits this escalation, as the managed <code>GITHUB_TOKEN</code> would not be able to modify the contents of a protected branch and affected workflows must be defined on the default branch. </p>
<h3 id="patches">Patches</h3>
<p>The issue was mitigated in version <code>0.16.41</code> of the <code>projen</code> tool, which removes the <code>issue_comment</code> trigger from this workflow. Version <code>0.17.0</code> of projen completely removes the <code>rebuild-bot.yml</code> workflow.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The recommended way to address the vulnerability is to upgrade <code>projen</code>. Users who cannot upgrade <code>projen</code> may also remove the <code>.github/workflows/rebuild-bot.yml</code> file and add it to their <code>.gitignore</code> file (via <code>projenrc.js</code>) to mitigate the issue.</p>
<h3 id="references">References</h3>
<p>The <code>rebuild-bot.yml</code> workflow managed by <code>projen</code> is only one occurrence of a GitHub Workflows mis-configuration, but it may also be present in other workflows not managed by <code>projen</code> (either hand-written, or managed by other tools). For more information on this class of issues, the <a href="https://securitylab.github.com/research/github-actions-preventing-pwn-requests">Keeping your GitHub Actions and workflows secure: Preventing pwn requests</a> article provides a great overview of the problem.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/projen/projen/security/advisories/GHSA-gg2g-m5wc-vccq">https://github.com/projen/projen/security/advisories/GHSA-gg2g-m5wc-vccq</a></li>
<li><a href="https://github.com/projen/projen/commit/36030c6a4b1acd0054673322612e7c70e9446643">https://github.com/projen/projen/commit/36030c6a4b1acd0054673322612e7c70e9446643</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21423">https://nvd.nist.gov/vuln/detail/CVE-2021-21423</a></li>
<li><a href="https://www.npmjs.com/package/projen">https://www.npmjs.com/package/projen</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/projen/PYSEC-2021-111.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/projen/PYSEC-2021-111.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gg2g-m5wc-vccq">https://github.com/advisories/GHSA-gg2g-m5wc-vccq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gg2g-m5wc-vccq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-04-06T18:36:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[py] ReDoS in py library when used with subversion ]]></title>
        <id>https://github.com/advisories/GHSA-w596-4wvx-j9j6</id>
        <link href="https://github.com/advisories/GHSA-w596-4wvx-j9j6"/>
        <updated>2024-10-21T19:58:29.000Z</updated>
        <content type="html"><![CDATA[<p>The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled.</p>
<p>The particular codepath in question is the regular expression at <code>py._path.svnurl.InfoSvnCommand.lspattern</code> and is only relevant when dealing with subversion (svn) projects. Notably the codepath is not used in the popular pytest project. The developers of the pytest package have released version <code>7.2.0</code> which removes their dependency on <code>py</code>. Users of <code>pytest</code> seeing alerts relating to this advisory may update to version <code>7.2.0</code> of <code>pytest</code> to resolve this issue. See <a href="https://github.com/pytest-dev/py/issues/287#issuecomment-1290407715">https://github.com/pytest-dev/py/issues/287#issuecomment-1290407715</a> for additional context.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42969">https://nvd.nist.gov/vuln/detail/CVE-2022-42969</a></li>
<li><a href="https://github.com/pytest-dev/py/issues/287">https://github.com/pytest-dev/py/issues/287</a></li>
<li><a href="https://github.com/pytest-dev/py/blob/cb87a83960523a2367d0f19226a73aed4ce4291d/py/_path/svnurl.py#L316">https://github.com/pytest-dev/py/blob/cb87a83960523a2367d0f19226a73aed4ce4291d/py/_path/svnurl.py#L316</a></li>
<li><a href="https://github.com/pytest-dev/py/issues/288">https://github.com/pytest-dev/py/issues/288</a></li>
<li><a href="https://github.com/pytest-dev/pytest/issues/10392">https://github.com/pytest-dev/pytest/issues/10392</a></li>
<li><a href="https://news.ycombinator.com/item?id=34163710">https://news.ycombinator.com/item?id=34163710</a></li>
<li><a href="https://pypi.org/project/py">https://pypi.org/project/py</a></li>
<li><a href="https://github.com/advisories/GHSA-w596-4wvx-j9j6">https://github.com/advisories/GHSA-w596-4wvx-j9j6</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/py/PYSEC-2022-42969.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/py/PYSEC-2022-42969.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w596-4wvx-j9j6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-16T12:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[py7zr] py7zr directory traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</id>
        <link href="https://github.com/advisories/GHSA-m8xw-9x5x-6vh3"/>
        <updated>2024-10-18T22:00:27.000Z</updated>
        <content type="html"><![CDATA[<p>A directory traversal vulnerability in the SevenZipFile.extractall() function of the python library py7zr v0.20.0 and earlier allows attackers to write arbitrary files via extracting a crafted 7z file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44900">https://nvd.nist.gov/vuln/detail/CVE-2022-44900</a></li>
<li><a href="https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406">https://github.com/miurahr/py7zr/commit/1bb43f17515c7f69673a1c88ab9cc72a7bbef406</a></li>
<li><a href="http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html">http://packetstormsecurity.com/files/170127/py7zr-0.20.0-Directory-Traversal.html</a></li>
<li><a href="https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-m8xw-9x5x-6vh3">https://advisory-inbox.githubapp.com/advisory_reviews/GHSA-m8xw-9x5x-6vh3</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/py7zr/PYSEC-2022-42998.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/py7zr/PYSEC-2022-42998.yaml</a></li>
<li><a href="https://lessonsec.com/cve/cve-2022-44900">https://lessonsec.com/cve/cve-2022-44900</a></li>
<li><a href="https://github.com/advisories/GHSA-m8xw-9x5x-6vh3">https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8xw-9x5x-6vh3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-06T21:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pwntools] pwntools Server-Side Template Injection (SSTI) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7xc5-ggpp-g249</id>
        <link href="https://github.com/advisories/GHSA-7xc5-ggpp-g249"/>
        <updated>2024-10-18T21:58:02.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package pwntools before 4.3.1. The shellcraft generator for affected versions of this module are vulnerable to Server-Side Template Injection (SSTI), which can lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28468">https://nvd.nist.gov/vuln/detail/CVE-2020-28468</a></li>
<li><a href="https://github.com/Gallopsled/pwntools/issues/1427">https://github.com/Gallopsled/pwntools/issues/1427</a></li>
<li><a href="https://github.com/Gallopsled/pwntools/pull/1732">https://github.com/Gallopsled/pwntools/pull/1732</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-PWNTOOLS-1047345">https://snyk.io/vuln/SNYK-PYTHON-PWNTOOLS-1047345</a></li>
<li><a href="https://github.com/Gallopsled/pwntools/commit/138188eb1c027a2d0ffa4151511c407d3a001660">https://github.com/Gallopsled/pwntools/commit/138188eb1c027a2d0ffa4151511c407d3a001660</a></li>
<li><a href="https://github.com/advisories/GHSA-7xc5-ggpp-g249">https://github.com/advisories/GHSA-7xc5-ggpp-g249</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pwntools/PYSEC-2021-72.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pwntools/PYSEC-2021-72.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xc5-ggpp-g249</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-04-20T16:13:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Open Redirect]]></title>
        <id>https://github.com/advisories/GHSA-xvwv-6wvx-px9x</id>
        <link href="https://github.com/advisories/GHSA-xvwv-6wvx-px9x"/>
        <updated>2024-10-18T21:54:06.000Z</updated>
        <content type="html"><![CDATA[<p>By linking to a specific url in Plone 2.5-5.1rc1 with a parameter, an attacker could send you to his own website. On its own this is not so bad: the attacker could more easily link directly to his own website instead. But in combination with another attack, you could be sent to the Plone login form and login, then get redirected to the specific url, and then get a second redirect to the attacker website. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000484">https://nvd.nist.gov/vuln/detail/CVE-2017-1000484</a></li>
<li><a href="https://github.com/advisories/GHSA-xvwv-6wvx-px9x">https://github.com/advisories/GHSA-xvwv-6wvx-px9x</a></li>
<li><a href="https://plone.org/security/hotfix/20171128/an-open-redirection-when-calling-a-specific-url">https://plone.org/security/hotfix/20171128/an-open-redirection-when-calling-a-specific-url</a></li>
<li><a href="https://github.com/plone/Products.CMFPlone/issues/2232">https://github.com/plone/Products.CMFPlone/issues/2232</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2018-73.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/plone/PYSEC-2018-73.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvwv-6wvx-px9x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2019-01-04T17:47:21.000Z</published>
    </entry>
</feed>