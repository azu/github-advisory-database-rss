<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-06-02T00:26:01.307Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Open Redirect in Apache Superset]]></title>
        <id>https://github.com/advisories/GHSA-pfwg-rxf4-97c3</id>
        <link href="https://github.com/advisories/GHSA-pfwg-rxf4-97c3"/>
        <updated>2022-06-01T22:01:46.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Superset prior to 1.1.0 allowed for the creation of an external URL that could be malicious. By not checking user input for open redirects the URL shortener functionality would allow for a malicious user to create a short URL for a dashboard that could convince the user to click the link.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28125">https://nvd.nist.gov/vuln/detail/CVE-2021-28125</a></li>
<li><a href="https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/27/2">http://www.openwall.com/lists/oss-security/2021/04/27/2</a></li>
<li><a href="https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029">https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029</a></li>
<li><a href="https://github.com/advisories/GHSA-pfwg-rxf4-97c3">https://github.com/advisories/GHSA-pfwg-rxf4-97c3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfwg-rxf4-97c3</uri>
        </author>
        <published>2021-10-06T17:47:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[superset] Open Redirect in Apache Superset]]></title>
        <id>https://github.com/advisories/GHSA-pfwg-rxf4-97c3</id>
        <link href="https://github.com/advisories/GHSA-pfwg-rxf4-97c3"/>
        <updated>2022-06-01T22:01:46.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Superset prior to 1.1.0 allowed for the creation of an external URL that could be malicious. By not checking user input for open redirects the URL shortener functionality would allow for a malicious user to create a short URL for a dashboard that could convince the user to click the link.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28125">https://nvd.nist.gov/vuln/detail/CVE-2021-28125</a></li>
<li><a href="https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434%40%3Cdev.superset.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E">https://lists.apache.org/thread.html/r89b5d0dd35c1adc9624b48d6247729c73b2641b32754226661368434@%3Cdev.superset.apache.org%3E</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/04/27/2">http://www.openwall.com/lists/oss-security/2021/04/27/2</a></li>
<li><a href="https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029">https://github.com/apache/superset/commit/eb35b804acf4d84cb70d02743e04b8afebbee029</a></li>
<li><a href="https://github.com/advisories/GHSA-pfwg-rxf4-97c3">https://github.com/advisories/GHSA-pfwg-rxf4-97c3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfwg-rxf4-97c3</uri>
        </author>
        <published>2021-10-06T17:47:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openapi-python-client] Arbitrary Code Generation]]></title>
        <id>https://github.com/advisories/GHSA-9x4c-63pf-525f</id>
        <link href="https://github.com/advisories/GHSA-9x4c-63pf-525f"/>
        <updated>2022-06-01T21:58:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Clients generated with a maliciously crafted OpenAPI Document can generate arbitrary Python code. Subsequent execution of this malicious client is arbitrary code execution.</p>
<p>Giving this a CVSS of 8.0 (high) with CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H/E:P/RL:U/RC:C .</p>
<h3 id="patches">Patches</h3>
<p>Fix will be included in version 0.5.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>Inspect OpenAPI documents before generating, or inspect generated code before executing.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/triaxtec/openapi-python-client/issues">openapi-python-client</a></li>
<li>Email us at <a href="mailto:danthony@triaxtec.com">danthony@triaxtec.com</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-9x4c-63pf-525f">https://github.com/triaxtec/openapi-python-client/security/advisories/GHSA-9x4c-63pf-525f</a></li>
<li><a href="https://github.com/triaxtec/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a">https://github.com/triaxtec/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a</a></li>
<li><a href="https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13">https://github.com/triaxtec/openapi-python-client/blob/main/CHANGELOG.md#053---2020-08-13</a></li>
<li><a href="https://pypi.org/project/openapi-python-client/">https://pypi.org/project/openapi-python-client/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15142">https://nvd.nist.gov/vuln/detail/CVE-2020-15142</a></li>
<li><a href="https://github.com/openapi-generators/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a">https://github.com/openapi-generators/openapi-python-client/commit/f7a56aae32cba823a77a84a1f10400799b19c19a</a></li>
<li><a href="https://github.com/openapi-generators/openapi-python-client/releases/tag/v.0.5.3">https://github.com/openapi-generators/openapi-python-client/releases/tag/v.0.5.3</a></li>
<li><a href="https://github.com/advisories/GHSA-9x4c-63pf-525f">https://github.com/advisories/GHSA-9x4c-63pf-525f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x4c-63pf-525f</uri>
        </author>
        <published>2020-08-20T14:38:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[httpx] Improper Input Validation in httpx]]></title>
        <id>https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</id>
        <link href="https://github.com/advisories/GHSA-h8pj-cxx2-jfg2"/>
        <updated>2022-06-01T21:35:35.000Z</updated>
        <content type="html"><![CDATA[<p>Encode OSS httpx &lt;=1.0.0.beta0 is affected by improper input validation in <code>httpx.URL</code>, <code>httpx.Client</code> and some functions using <code>httpx.URL.copy_with</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41945">https://nvd.nist.gov/vuln/detail/CVE-2021-41945</a></li>
<li><a href="https://github.com/encode/httpx/issues/2184">https://github.com/encode/httpx/issues/2184</a></li>
<li><a href="https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571">https://gist.github.com/lebr0nli/4edb76bbd3b5ff993cf44f2fbce5e571</a></li>
<li><a href="https://github.com/encode/httpx/discussions/1831">https://github.com/encode/httpx/discussions/1831</a></li>
<li><a href="https://github.com/encode/httpx/pull/2185">https://github.com/encode/httpx/pull/2185</a></li>
<li><a href="https://github.com/encode/httpx">https://github.com/encode/httpx</a></li>
<li><a href="https://github.com/advisories/GHSA-h8pj-cxx2-jfg2">https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</a></li>
<li><a href="https://github.com/encode/httpx/releases/tag/0.23.0">https://github.com/encode/httpx/releases/tag/0.23.0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/httpx/PYSEC-2022-183.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/httpx/PYSEC-2022-183.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8pj-cxx2-jfg2</uri>
        </author>
        <published>2022-04-29T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Pillow] Buffer over-flow in Pillow]]></title>
        <id>https://github.com/advisories/GHSA-hr8g-f6r6-mr22</id>
        <link href="https://github.com/advisories/GHSA-hr8g-f6r6-mr22"/>
        <updated>2022-06-01T21:22:06.000Z</updated>
        <content type="html"><![CDATA[<p>When reading a TGA file with RLE packets that cross scan lines, Pillow reads the information past the end of the first line without deducting that from the length of the remaining file data. This vulnerability was introduced in Pillow 9.1.0, and can cause a heap buffer overflow.</p>
<p>Opening an image with a zero or negative height has been found to bypass a decompression bomb check. This will now raise a SyntaxError instead, in turn raising a PIL.UnidentifiedImageError.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30595">https://nvd.nist.gov/vuln/detail/CVE-2022-30595</a></li>
<li><a href="https://github.com/python-pillow/Pillow/blob/main/src/libImaging/TgaRleDecode.c">https://github.com/python-pillow/Pillow/blob/main/src/libImaging/TgaRleDecode.c</a></li>
<li><a href="https://pillow.readthedocs.io/en/stable/releasenotes/9.1.1.html">https://pillow.readthedocs.io/en/stable/releasenotes/9.1.1.html</a></li>
<li><a href="https://github.com/advisories/GHSA-hr8g-f6r6-mr22">https://github.com/advisories/GHSA-hr8g-f6r6-mr22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr8g-f6r6-mr22</uri>
        </author>
        <published>2022-05-26T00:01:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[archivy] archivy is vulnerable to Cross-Site Request Forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-9236-8w7q-rmrv</id>
        <link href="https://github.com/advisories/GHSA-9236-8w7q-rmrv"/>
        <updated>2022-06-01T20:17:15.000Z</updated>
        <content type="html"><![CDATA[<p>archivy is vulnerable to Cross-Site Request Forgery (CSRF). There is <a href="https://github.com/archivy/archivy/commit/796c3ae318eea183fc88c87ec5a27355b0f6a99d">a fix</a> available in the master branch.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4162">https://nvd.nist.gov/vuln/detail/CVE-2021-4162</a></li>
<li><a href="https://github.com/archivy/archivy/commit/796c3ae318eea183fc88c87ec5a27355b0f6a99d">https://github.com/archivy/archivy/commit/796c3ae318eea183fc88c87ec5a27355b0f6a99d</a></li>
<li><a href="https://huntr.dev/bounties/e204a768-2129-4b6f-abad-e436309c7c32">https://huntr.dev/bounties/e204a768-2129-4b6f-abad-e436309c7c32</a></li>
<li><a href="https://github.com/archivy/archivy/releases/tag/v1.6.2">https://github.com/archivy/archivy/releases/tag/v1.6.2</a></li>
<li><a href="https://github.com/advisories/GHSA-9236-8w7q-rmrv">https://github.com/advisories/GHSA-9236-8w7q-rmrv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9236-8w7q-rmrv</uri>
        </author>
        <published>2022-01-06T21:59:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[HyperKitty] Exposure of sensitive information to an unauthorized actor in HyperKitty]]></title>
        <id>https://github.com/advisories/GHSA-h39g-q63v-4h9p</id>
        <link href="https://github.com/advisories/GHSA-h39g-q63v-4h9p"/>
        <updated>2022-06-01T20:15:32.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in management/commands/hyperkitty_import.py in HyperKitty prior to 1.3.5. When importing a private mailing list's archives, these archives are publicly visible for the duration of the import. For example, sensitive information might be available on the web for an hour during a large migration from Mailman 2 to Mailman 3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33038">https://nvd.nist.gov/vuln/detail/CVE-2021-33038</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/commit/9025324597d60b2dff740e49b70b15589d6804fa">https://gitlab.com/mailman/hyperkitty/-/commit/9025324597d60b2dff740e49b70b15589d6804fa</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/issues/380">https://gitlab.com/mailman/hyperkitty/-/issues/380</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4922">https://www.debian.org/security/2021/dsa-4922</a></li>
<li><a href="https://techblog.wikimedia.org/2021/06/11/discovering-and-fixing-cve-2021-33038-in-mailman3/">https://techblog.wikimedia.org/2021/06/11/discovering-and-fixing-cve-2021-33038-in-mailman3/</a></li>
<li><a href="https://gitlab.com/mailman/hyperkitty/-/blob/master/doc/news.rst#L83-L87">https://gitlab.com/mailman/hyperkitty/-/blob/master/doc/news.rst#L83-L87</a></li>
<li><a href="https://github.com/advisories/GHSA-h39g-q63v-4h9p">https://github.com/advisories/GHSA-h39g-q63v-4h9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h39g-q63v-4h9p</uri>
        </author>
        <published>2021-06-01T21:56:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyamf] PyAMF vulnerable to XML external entity (XXE)]]></title>
        <id>https://github.com/advisories/GHSA-m7m4-4vm8-55wg</id>
        <link href="https://github.com/advisories/GHSA-m7m4-4vm8-55wg"/>
        <updated>2022-05-31T21:54:26.000Z</updated>
        <content type="html"><![CDATA[<p>PyAMF provides Action Message Format (AMF) support for Python that is compatible with the Adobe Flash Player. It includes integration with Python web frameworks like Django, Pylons, Twisted, SQLAlchemy, web2py and more. XML external entity (XXE) vulnerability in PyAMF before 0.8.0 allows remote attackers to cause a denial of service or read arbitrary files via a crafted Action Message Format (AMF) payload.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-8549">https://nvd.nist.gov/vuln/detail/CVE-2015-8549</a></li>
<li><a href="https://github.com/hydralabs/pyamf/pull/58">https://github.com/hydralabs/pyamf/pull/58</a></li>
<li><a href="https://github.com/hydralabs/pyamf/releases/tag/v0.8.0">https://github.com/hydralabs/pyamf/releases/tag/v0.8.0</a></li>
<li><a href="http://www.ocert.org/advisories/ocert-2015-011.html">http://www.ocert.org/advisories/ocert-2015-011.html</a></li>
<li><a href="http://www.securityfocus.com/archive/1/archive/1/537151/100/0/threaded">http://www.securityfocus.com/archive/1/archive/1/537151/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-m7m4-4vm8-55wg">https://github.com/advisories/GHSA-m7m4-4vm8-55wg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7m4-4vm8-55wg</uri>
        </author>
        <published>2022-05-24T17:06:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bottle] bottle.py vulnerable to CRLF Injection]]></title>
        <id>https://github.com/advisories/GHSA-j6f7-hghw-g437</id>
        <link href="https://github.com/advisories/GHSA-j6f7-hghw-g437"/>
        <updated>2022-05-31T15:43:49.000Z</updated>
        <content type="html"><![CDATA[<p>bottle.py is a fast and simple micro-framework for python web-applications. redirect() in bottle.py in bottle 0.12.10 doesn't filter a "\r\n" sequence, which leads to a CRLF attack, as demonstrated by a redirect("233\r\nSet-Cookie: name=salt") call.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-9964">https://nvd.nist.gov/vuln/detail/CVE-2016-9964</a></li>
<li><a href="https://github.com/bottlepy/bottle/issues/913">https://github.com/bottlepy/bottle/issues/913</a></li>
<li><a href="https://github.com/bottlepy/bottle/commit/6d7e13da0f998820800ecb3fe9ccee4189aefb54">https://github.com/bottlepy/bottle/commit/6d7e13da0f998820800ecb3fe9ccee4189aefb54</a></li>
<li><a href="http://www.debian.org/security/2016/dsa-3743">http://www.debian.org/security/2016/dsa-3743</a></li>
<li><a href="http://www.securityfocus.com/bid/94961">http://www.securityfocus.com/bid/94961</a></li>
<li><a href="https://github.com/advisories/GHSA-j6f7-hghw-g437">https://github.com/advisories/GHSA-j6f7-hghw-g437</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6f7-hghw-g437</uri>
        </author>
        <published>2022-05-17T03:05:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twisted] Inconsistent Interpretation of HTTP Requests in twisted.web]]></title>
        <id>https://github.com/advisories/GHSA-c2jg-hw38-jrqq</id>
        <link href="https://github.com/advisories/GHSA-c2jg-hw38-jrqq"/>
        <updated>2022-05-26T20:29:01.000Z</updated>
        <content type="html"><![CDATA[<p>The Twisted Web HTTP 1.1 server, located in the <code>twisted.web.http</code> module, parsed several HTTP request constructs more leniently than permitted by RFC 7230:</p>
<ol>
<li>The Content-Length header value could have a <code>+</code> or <code>-</code> prefix.</li>
<li>Illegal characters were permitted in chunked extensions, such as the LF (<code>\n</code>) character.</li>
<li>Chunk lengths, which are expressed in hexadecimal format, could have a prefix of <code>0x</code>.</li>
<li>HTTP headers were stripped of all leading and trailing ASCII whitespace, rather than only space and HTAB (<code>\t</code>).</li>
</ol>
<p>This non-conformant parsing can lead to desync if requests pass through multiple HTTP parsers, potentially resulting in HTTP request smuggling.</p>
<h3 id="impact">Impact</h3>
<p>You may be affected if:</p>
<ol>
<li>You use Twisted Web's HTTP 1.1 server and/or proxy</li>
<li>You also pass requests through a different HTTP server and/or proxy</li>
</ol>
<p>The specifics of the other HTTP parser matter. The original report notes that some versions of Apache Traffic Server and HAProxy have been vulnerable in the past. HTTP request smuggling may be a serious concern if you use a proxy to perform request validation or access control.</p>
<p>The Twisted Web client is not affected. The HTTP 2.0 server uses a different parser, so it is not affected.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been addressed in Twisted 22.4.0rc1 and later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than upgrading Twisted, you could:</p>
<ul>
<li>Ensure any vulnerabilities in upstream proxies have been addressed, such as by upgrading them</li>
<li>Filter malformed requests by other means, such as configuration of an upstream proxy</li>
</ul>
<h3 id="credits">Credits</h3>
<p>This issue was initially reported by <a href="https://github.com/zeyu2001">Zhang Zeyu</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq">https://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24801">https://nvd.nist.gov/vuln/detail/CVE-2022-24801</a></li>
<li><a href="https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac">https://github.com/twisted/twisted/commit/592217e951363d60e9cd99c5bbfd23d4615043ac</a></li>
<li><a href="https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1">https://github.com/twisted/twisted/releases/tag/twisted-22.4.0rc1</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/05/msg00003.html">https://lists.debian.org/debian-lts-announce/2022/05/msg00003.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/twisted/PYSEC-2022-195.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/twisted/PYSEC-2022-195.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-c2jg-hw38-jrqq">https://github.com/advisories/GHSA-c2jg-hw38-jrqq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2jg-hw38-jrqq</uri>
        </author>
        <published>2022-04-04T21:29:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Incorrect Comparison in Vyper]]></title>
        <id>https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</id>
        <link href="https://github.com/advisories/GHSA-7vrm-3jc8-5wwm"/>
        <updated>2022-05-26T20:17:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>bytestrings can have dirty bytes in them, resulting in the word-for-word comparison to give incorrect results, e.g.</p>
<pre><code class="language-vyper">b1: Bytes[32] = b"abcdef"
b1 = slice(b1, 0, 1)
b2: Bytes[32] = b"abcdef"
t: bool = b1 == b2  # incorrectly evaluates to True
</code></pre>
<p>even without dirty nonzero bytes, because there is no comparison of the length, two bytestrings can compare to equal if one ends with <code>"\x00"</code>.</p>
<pre><code class="language-vyper">b1: Bytes[32] = b"abc\0"
b2: Bytes[32] = b"abc"
t: bool = b1 == b2  # incorrectly evaluates to True
</code></pre>
<h3 id="patches">Patches</h3>
<p>fixed in <a href="https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm">https://github.com/vyperlang/vyper/security/advisories/GHSA-7vrm-3jc8-5wwm</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508">https://github.com/vyperlang/vyper/commit/2c73f8352635c0a433423a5b94740de1a118e508</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-196.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2022-196.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7vrm-3jc8-5wwm">https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7vrm-3jc8-5wwm</uri>
        </author>
        <published>2022-04-04T21:40:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Crash due to erroneous `StatusOr` in TensorFlow]]></title>
        <id>https://github.com/advisories/GHSA-pqrv-8r2f-7278</id>
        <link href="https://github.com/advisories/GHSA-pqrv-8r2f-7278"/>
        <updated>2022-05-26T20:07:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <code>GraphDef</code> from a TensorFlow <code>SavedModel</code> can be maliciously altered to cause a TensorFlow process to crash due to encountering <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">a <code>StatusOr</code> value that is an error and forcibly extracting the value from it</a>:</p>
<pre><code class="language-cc">  if (op_reg_data-&gt;type_ctor != nullptr) {
    VLOG(3) &lt;&lt; "AddNode: found type constructor for " &lt;&lt; node_def.name();
    const auto ctor_type =
        full_type::SpecializeType(AttrSlice(node_def), op_reg_data-&gt;op_def);
    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();
    if (ctor_typedef.type_id() != TFT_UNSET) {
      *(node_def.mutable_experimental_type()) = ctor_typedef;
    }
  }
</code></pre>
<p>If <code>ctor_type</code> is an error status, <code>ValueOrDie</code> results in a crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">955059813cc325dc1db5e2daa6221271406d4439</a>.</p>
<p>We have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23590">https://nvd.nist.gov/vuln/detail/CVE-2022-23590</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pqrv-8r2f-7278">https://github.com/advisories/GHSA-pqrv-8r2f-7278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqrv-8r2f-7278</uri>
        </author>
        <published>2022-02-09T23:29:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Crash due to erroneous `StatusOr` in TensorFlow]]></title>
        <id>https://github.com/advisories/GHSA-pqrv-8r2f-7278</id>
        <link href="https://github.com/advisories/GHSA-pqrv-8r2f-7278"/>
        <updated>2022-05-26T20:07:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <code>GraphDef</code> from a TensorFlow <code>SavedModel</code> can be maliciously altered to cause a TensorFlow process to crash due to encountering <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">a <code>StatusOr</code> value that is an error and forcibly extracting the value from it</a>:</p>
<pre><code class="language-cc">  if (op_reg_data-&gt;type_ctor != nullptr) {
    VLOG(3) &lt;&lt; "AddNode: found type constructor for " &lt;&lt; node_def.name();
    const auto ctor_type =
        full_type::SpecializeType(AttrSlice(node_def), op_reg_data-&gt;op_def);
    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();
    if (ctor_typedef.type_id() != TFT_UNSET) {
      *(node_def.mutable_experimental_type()) = ctor_typedef;
    }
  }
</code></pre>
<p>If <code>ctor_type</code> is an error status, <code>ValueOrDie</code> results in a crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">955059813cc325dc1db5e2daa6221271406d4439</a>.</p>
<p>We have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23590">https://nvd.nist.gov/vuln/detail/CVE-2022-23590</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pqrv-8r2f-7278">https://github.com/advisories/GHSA-pqrv-8r2f-7278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqrv-8r2f-7278</uri>
        </author>
        <published>2022-02-09T23:29:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Crash due to erroneous `StatusOr` in TensorFlow]]></title>
        <id>https://github.com/advisories/GHSA-pqrv-8r2f-7278</id>
        <link href="https://github.com/advisories/GHSA-pqrv-8r2f-7278"/>
        <updated>2022-05-26T20:07:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <code>GraphDef</code> from a TensorFlow <code>SavedModel</code> can be maliciously altered to cause a TensorFlow process to crash due to encountering <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">a <code>StatusOr</code> value that is an error and forcibly extracting the value from it</a>:</p>
<pre><code class="language-cc">  if (op_reg_data-&gt;type_ctor != nullptr) {
    VLOG(3) &lt;&lt; "AddNode: found type constructor for " &lt;&lt; node_def.name();
    const auto ctor_type =
        full_type::SpecializeType(AttrSlice(node_def), op_reg_data-&gt;op_def);
    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();
    if (ctor_typedef.type_id() != TFT_UNSET) {
      *(node_def.mutable_experimental_type()) = ctor_typedef;
    }
  }
</code></pre>
<p>If <code>ctor_type</code> is an error status, <code>ValueOrDie</code> results in a crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">955059813cc325dc1db5e2daa6221271406d4439</a>.</p>
<p>We have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-pqrv-8r2f-7278</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439">https://github.com/tensorflow/tensorflow/commit/955059813cc325dc1db5e2daa6221271406d4439</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L560-L567</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23590">https://nvd.nist.gov/vuln/detail/CVE-2022-23590</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-cpu/PYSEC-2022-99.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tensorflow-gpu/PYSEC-2022-154.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-pqrv-8r2f-7278">https://github.com/advisories/GHSA-pqrv-8r2f-7278</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pqrv-8r2f-7278</uri>
        </author>
        <published>2022-02-09T23:29:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tkvideoplayer] tkvideo has a memory issue in playing videos]]></title>
        <id>https://github.com/advisories/GHSA-jmhj-vh4q-hhmq</id>
        <link href="https://github.com/advisories/GHSA-jmhj-vh4q-hhmq"/>
        <updated>2022-05-26T19:39:52.000Z</updated>
        <content type="html"><![CDATA[<p>Huge memory consumption even when playing small files. This issue has been patched in 2.0.0. Please upgrade to version 2.0.0 or above.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/PaulleDemon/tkVideoPlayer/security/advisories/GHSA-jmhj-vh4q-hhmq">https://github.com/PaulleDemon/tkVideoPlayer/security/advisories/GHSA-jmhj-vh4q-hhmq</a></li>
<li><a href="https://github.com/PaulleDemon/tkVideoPlayer/issues/3">https://github.com/PaulleDemon/tkVideoPlayer/issues/3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24902">https://nvd.nist.gov/vuln/detail/CVE-2022-24902</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/tkvideoplayer/PYSEC-2022-187.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/tkvideoplayer/PYSEC-2022-187.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jmhj-vh4q-hhmq">https://github.com/advisories/GHSA-jmhj-vh4q-hhmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmhj-vh4q-hhmq</uri>
        </author>
        <published>2022-05-03T03:47:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyanyapi] Unsafe pyyaml load usage in PyAnyAPI]]></title>
        <id>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</id>
        <link href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r"/>
        <updated>2022-05-26T18:46:03.000Z</updated>
        <content type="html"><![CDATA[<p>An exploitable vulnerability exists in the YAML parsing functionality in the YAMLParser method in Interfaces.py in PyAnyAPI before 0.6.1. A YAML parser can execute arbitrary Python commands resulting in command execution because <code>load</code> is used where <code>safe_load</code> should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16616">https://nvd.nist.gov/vuln/detail/CVE-2017-16616</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/issues/41">https://github.com/Stranger6667/pyanyapi/issues/41</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1">https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1</a></li>
<li><a href="https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/">https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/</a></li>
<li><a href="https://pypi.python.org/pypi/pyanyapi/0.6.1">https://pypi.python.org/pypi/pyanyapi/0.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r">https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</uri>
        </author>
        <published>2022-05-13T01:44:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ctx] Malware in ctx]]></title>
        <id>https://github.com/advisories/GHSA-4g82-3jcr-q52w</id>
        <link href="https://github.com/advisories/GHSA-4g82-3jcr-q52w"/>
        <updated>2022-05-26T00:01:00.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>ctx</code> hosted project on <a href="https://pypi.org/project/ctx/">PyPI</a> was taken over via user account compromise and replaced with a malicious project which contained runtime code that collected the content of <code>os.environ.items()</code> when instantiating <code>Ctx</code> objects. The captured environment variables were sent as a base64 encoded query parameter to a heroku application running at <code>https://anti-theft-web.herokuapp.com</code>.</p>
<p>If you installed the package between May 14, 2022 and May 24, 2022, and your environment variables contain sensitive data like passwords and API keys (like <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code>), we advise you to rotate your passwords and keys, then perform an audit to determine if they were exploited.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/figlief/ctx">https://github.com/figlief/ctx</a></li>
<li><a href="https://isc.sans.edu/forums/diary/ctx+Python+Library+Updated+with+Extra+Features/28678/">https://isc.sans.edu/forums/diary/ctx+Python+Library+Updated+with+Extra+Features/28678/</a></li>
<li><a href="https://portswigger.net/daily-swig/malicious-python-library-ctx-removed-from-pypi-repo">https://portswigger.net/daily-swig/malicious-python-library-ctx-removed-from-pypi-repo</a></li>
<li><a href="https://python-security.readthedocs.io/pypi-vuln/index-2022-05-24-ctx-domain-takeover.html">https://python-security.readthedocs.io/pypi-vuln/index-2022-05-24-ctx-domain-takeover.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4g82-3jcr-q52w">https://github.com/advisories/GHSA-4g82-3jcr-q52w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4g82-3jcr-q52w</uri>
        </author>
        <published>2022-05-25T23:09:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ujson] Out-of-bounds Write in ujson]]></title>
        <id>https://github.com/advisories/GHSA-fh56-85cw-5pq6</id>
        <link href="https://github.com/advisories/GHSA-fh56-85cw-5pq6"/>
        <updated>2022-05-25T22:11:53.000Z</updated>
        <content type="html"><![CDATA[<p>UltraJSON (aka ujson) 1.34 through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-45958">https://nvd.nist.gov/vuln/detail/CVE-2021-45958</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=36009">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=36009</a></li>
<li><a href="https://github.com/google/oss-fuzz-vulns/blob/main/vulns/ujson/OSV-2021-955.yaml">https://github.com/google/oss-fuzz-vulns/blob/main/vulns/ujson/OSV-2021-955.yaml</a></li>
<li><a href="https://github.com/ultrajson/ultrajson/issues/501">https://github.com/ultrajson/ultrajson/issues/501</a></li>
<li><a href="https://github.com/ultrajson/ultrajson/issues/502#issuecomment-1031747284">https://github.com/ultrajson/ultrajson/issues/502#issuecomment-1031747284</a></li>
<li><a href="https://github.com/ultrajson/ultrajson/pull/504">https://github.com/ultrajson/ultrajson/pull/504</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/02/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/02/msg00023.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CN7W3GOXALINKFUUE7ICQIC2EF5HNKUQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CN7W3GOXALINKFUUE7ICQIC2EF5HNKUQ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O6JUWQTJLA2CMG4CJN7DCUVSOXLZIIXL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/O6JUWQTJLA2CMG4CJN7DCUVSOXLZIIXL/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULX35TSWLBBIMEH44MUORPXYYRZKEDC6/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ULX35TSWLBBIMEH44MUORPXYYRZKEDC6/</a></li>
<li><a href="https://github.com/ultrajson/ultrajson/pull/519">https://github.com/ultrajson/ultrajson/pull/519</a></li>
<li><a href="https://github.com/advisories/GHSA-fh56-85cw-5pq6">https://github.com/advisories/GHSA-fh56-85cw-5pq6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh56-85cw-5pq6</uri>
        </author>
        <published>2022-01-21T23:27:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pysaml2] Moderate severity vulnerability that affects pysaml2]]></title>
        <id>https://github.com/advisories/GHSA-cq94-qf6q-mf2h</id>
        <link href="https://github.com/advisories/GHSA-cq94-qf6q-mf2h"/>
        <updated>2022-05-25T21:43:44.000Z</updated>
        <content type="html"><![CDATA[<p>Python package pysaml2 version 4.5.0 and earlier reuses the initialization vector across encryptions in the IDP server, resulting in weak encryption of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000246">https://nvd.nist.gov/vuln/detail/CVE-2017-1000246</a></li>
<li><a href="https://github.com/rohe/pysaml2/issues/417">https://github.com/rohe/pysaml2/issues/417</a></li>
<li><a href="https://github.com/advisories/GHSA-cq94-qf6q-mf2h">https://github.com/advisories/GHSA-cq94-qf6q-mf2h</a></li>
<li><a href="https://github.com/IdentityPython/pysaml2/pull/519/commits/7323f5c20efb59424d853c822e7a26d1aa3e84aa">https://github.com/IdentityPython/pysaml2/pull/519/commits/7323f5c20efb59424d853c822e7a26d1aa3e84aa</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cq94-qf6q-mf2h</uri>
        </author>
        <published>2018-07-16T16:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[url_regex] Regular expression denial of service in url_regex]]></title>
        <id>https://github.com/advisories/GHSA-hg3w-7hj9-m3f7</id>
        <link href="https://github.com/advisories/GHSA-hg3w-7hj9-m3f7"/>
        <updated>2022-05-25T20:35:05.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of package url-regex are vulnerable to Regular Expression Denial of Service (ReDoS) which can cause the CPU usage to crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21195">https://nvd.nist.gov/vuln/detail/CVE-2022-21195</a></li>
<li><a href="https://github.com/AlexFlipnote/url_regex/blob/master/url_regex/url_regex.py">https://github.com/AlexFlipnote/url_regex/blob/master/url_regex/url_regex.py</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-URLREGEX-2347643">https://snyk.io/vuln/SNYK-PYTHON-URLREGEX-2347643</a></li>
<li><a href="https://github.com/advisories/GHSA-hg3w-7hj9-m3f7">https://github.com/advisories/GHSA-hg3w-7hj9-m3f7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg3w-7hj9-m3f7</uri>
        </author>
        <published>2022-05-21T00:00:25.000Z</published>
    </entry>
</feed>