<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-03-29T00:21:16.325Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Segfault in `simplifyBroadcast` in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</id>
        <link href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2"/>
        <updated>2022-03-28T19:30:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205"><code>simplifyBroadcast</code> function in the MLIR-TFRT infrastructure in TensorFlow</a> is vulnerable to a segfault (hence, denial of service), if called with scalar shapes.</p>
<pre><code class="language-cc">  size_t maxRank = 0;
  for (auto shape : llvm::enumerate(shapes)) {
    auto found_shape = analysis.dimensionsForShapeTensor(shape.value());
    if (!found_shape) return {};
    shapes_found.push_back(*found_shape);
    maxRank = std::max(maxRank, found_shape-&gt;size());
  }   

  SmallVector&lt;const ShapeComponentAnalysis::SymbolicDimension*&gt;
      joined_dimensions(maxRank);
</code></pre>
<p>If all shapes are scalar, then <code>maxRank</code> is 0, so we build an empty <code>SmallVector</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">35f0fabb4c178253a964d7aabdbb15c6a398b69a</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23593">https://nvd.nist.gov/vuln/detail/CVE-2022-23593</a></li>
<li><a href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/advisories/GHSA-gwcx-jrx4-92w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</uri>
        </author>
        <published>2022-02-09T23:32:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Segfault in `simplifyBroadcast` in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</id>
        <link href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2"/>
        <updated>2022-03-28T19:30:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205"><code>simplifyBroadcast</code> function in the MLIR-TFRT infrastructure in TensorFlow</a> is vulnerable to a segfault (hence, denial of service), if called with scalar shapes.</p>
<pre><code class="language-cc">  size_t maxRank = 0;
  for (auto shape : llvm::enumerate(shapes)) {
    auto found_shape = analysis.dimensionsForShapeTensor(shape.value());
    if (!found_shape) return {};
    shapes_found.push_back(*found_shape);
    maxRank = std::max(maxRank, found_shape-&gt;size());
  }   

  SmallVector&lt;const ShapeComponentAnalysis::SymbolicDimension*&gt;
      joined_dimensions(maxRank);
</code></pre>
<p>If all shapes are scalar, then <code>maxRank</code> is 0, so we build an empty <code>SmallVector</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">35f0fabb4c178253a964d7aabdbb15c6a398b69a</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23593">https://nvd.nist.gov/vuln/detail/CVE-2022-23593</a></li>
<li><a href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/advisories/GHSA-gwcx-jrx4-92w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</uri>
        </author>
        <published>2022-02-09T23:32:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Segfault in `simplifyBroadcast` in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</id>
        <link href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2"/>
        <updated>2022-03-28T19:30:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205"><code>simplifyBroadcast</code> function in the MLIR-TFRT infrastructure in TensorFlow</a> is vulnerable to a segfault (hence, denial of service), if called with scalar shapes.</p>
<pre><code class="language-cc">  size_t maxRank = 0;
  for (auto shape : llvm::enumerate(shapes)) {
    auto found_shape = analysis.dimensionsForShapeTensor(shape.value());
    if (!found_shape) return {};
    shapes_found.push_back(*found_shape);
    maxRank = std::max(maxRank, found_shape-&gt;size());
  }   

  SmallVector&lt;const ShapeComponentAnalysis::SymbolicDimension*&gt;
      joined_dimensions(maxRank);
</code></pre>
<p>If all shapes are scalar, then <code>maxRank</code> is 0, so we build an empty <code>SmallVector</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">35f0fabb4c178253a964d7aabdbb15c6a398b69a</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-gwcx-jrx4-92w2</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a">https://github.com/tensorflow/tensorflow/commit/35f0fabb4c178253a964d7aabdbb15c6a398b69a</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/compiler/mlir/tfrt/jit/transforms/tf_cpurt_symbolic_shape_optimization.cc#L149-L205</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23593">https://nvd.nist.gov/vuln/detail/CVE-2022-23593</a></li>
<li><a href="https://github.com/advisories/GHSA-gwcx-jrx4-92w2">https://github.com/advisories/GHSA-gwcx-jrx4-92w2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwcx-jrx4-92w2</uri>
        </author>
        <published>2022-02-09T23:32:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Out of bounds read in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-vq36-27g6-p492</id>
        <link href="https://github.com/advisories/GHSA-vq36-27g6-p492"/>
        <updated>2022-03-28T19:30:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">type inference</a> can cause a heap OOB read as the bounds checking is done in a <code>DCHECK</code> (which is a no-op during production):</p>
<pre><code class="language-cc">if (node_t.type_id() != TFT_UNSET) {
  int ix = input_idx[i];
  DCHECK(ix &lt; node_t.args_size())
      &lt;&lt; "input " &lt;&lt; i &lt;&lt; " should have an output " &lt;&lt; ix
      &lt;&lt; " but instead only has " &lt;&lt; node_t.args_size()
      &lt;&lt; " outputs: " &lt;&lt; node_t.DebugString();
  input_types.emplace_back(node_t.args(ix));
  // ...
}       
</code></pre>
<p>An attacker can control <code>input_idx</code> such that <code>ix</code> would be larger than the number of values in <code>node_t.args</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">c99d98cd189839dcf51aee94e7437b54b31f8abd</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23592">https://nvd.nist.gov/vuln/detail/CVE-2022-23592</a></li>
<li><a href="https://github.com/advisories/GHSA-vq36-27g6-p492">https://github.com/advisories/GHSA-vq36-27g6-p492</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq36-27g6-p492</uri>
        </author>
        <published>2022-02-09T23:31:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] Out of bounds read in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-vq36-27g6-p492</id>
        <link href="https://github.com/advisories/GHSA-vq36-27g6-p492"/>
        <updated>2022-03-28T19:30:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">type inference</a> can cause a heap OOB read as the bounds checking is done in a <code>DCHECK</code> (which is a no-op during production):</p>
<pre><code class="language-cc">if (node_t.type_id() != TFT_UNSET) {
  int ix = input_idx[i];
  DCHECK(ix &lt; node_t.args_size())
      &lt;&lt; "input " &lt;&lt; i &lt;&lt; " should have an output " &lt;&lt; ix
      &lt;&lt; " but instead only has " &lt;&lt; node_t.args_size()
      &lt;&lt; " outputs: " &lt;&lt; node_t.DebugString();
  input_types.emplace_back(node_t.args(ix));
  // ...
}       
</code></pre>
<p>An attacker can control <code>input_idx</code> such that <code>ix</code> would be larger than the number of values in <code>node_t.args</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">c99d98cd189839dcf51aee94e7437b54b31f8abd</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23592">https://nvd.nist.gov/vuln/detail/CVE-2022-23592</a></li>
<li><a href="https://github.com/advisories/GHSA-vq36-27g6-p492">https://github.com/advisories/GHSA-vq36-27g6-p492</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq36-27g6-p492</uri>
        </author>
        <published>2022-02-09T23:31:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] Out of bounds read in Tensorflow]]></title>
        <id>https://github.com/advisories/GHSA-vq36-27g6-p492</id>
        <link href="https://github.com/advisories/GHSA-vq36-27g6-p492"/>
        <updated>2022-03-28T19:30:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow's <a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">type inference</a> can cause a heap OOB read as the bounds checking is done in a <code>DCHECK</code> (which is a no-op during production):</p>
<pre><code class="language-cc">if (node_t.type_id() != TFT_UNSET) {
  int ix = input_idx[i];
  DCHECK(ix &lt; node_t.args_size())
      &lt;&lt; "input " &lt;&lt; i &lt;&lt; " should have an output " &lt;&lt; ix
      &lt;&lt; " but instead only has " &lt;&lt; node_t.args_size()
      &lt;&lt; " outputs: " &lt;&lt; node_t.DebugString();
  input_types.emplace_back(node_t.args(ix));
  // ...
}       
</code></pre>
<p>An attacker can control <code>input_idx</code> such that <code>ix</code> would be larger than the number of values in <code>node_t.args</code>.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">c99d98cd189839dcf51aee94e7437b54b31f8abd</a>.</p>
<p>The fix will be included in TensorFlow 2.8.0. This is the only affected version.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-vq36-27g6-p492</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd">https://github.com/tensorflow/tensorflow/commit/c99d98cd189839dcf51aee94e7437b54b31f8abd</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229">https://github.com/tensorflow/tensorflow/blob/274df9b02330b790aa8de1cee164b70f72b9b244/tensorflow/core/graph/graph.cc#L223-L229</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23592">https://nvd.nist.gov/vuln/detail/CVE-2022-23592</a></li>
<li><a href="https://github.com/advisories/GHSA-vq36-27g6-p492">https://github.com/advisories/GHSA-vq36-27g6-p492</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vq36-27g6-p492</uri>
        </author>
        <published>2022-02-09T23:31:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flask-admin] Cross site scripting in flask-admin]]></title>
        <id>https://github.com/advisories/GHSA-894g-6j7q-2hx6</id>
        <link href="https://github.com/advisories/GHSA-894g-6j7q-2hx6"/>
        <updated>2022-03-26T00:47:38.000Z</updated>
        <content type="html"><![CDATA[<p>helpers.py in Flask-Admin 1.5.2 has Reflected XSS via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-16516">https://nvd.nist.gov/vuln/detail/CVE-2018-16516</a></li>
<li><a href="https://github.com/flask-admin/flask-admin/pull/1699">https://github.com/flask-admin/flask-admin/pull/1699</a></li>
<li><a href="https://github.com/advisories/GHSA-894g-6j7q-2hx6">https://github.com/advisories/GHSA-894g-6j7q-2hx6</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJIYCWIH3BRLI2QNC53CQXLKVP27X7EH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UJIYCWIH3BRLI2QNC53CQXLKVP27X7EH/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZU2VKULURVXEU4YFTLMBQGYMPSXQ4MBN/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZU2VKULURVXEU4YFTLMBQGYMPSXQ4MBN/</a></li>
<li><a href="https://github.com/flask-admin/flask-admin/commit/8af10e0b022464fdcb2da3d0ea5bbd2f11c0acd1">https://github.com/flask-admin/flask-admin/commit/8af10e0b022464fdcb2da3d0ea5bbd2f11c0acd1</a></li>
<li><a href="https://github.com/flask-admin/flask-admin/releases/tag/v1.5.3">https://github.com/flask-admin/flask-admin/releases/tag/v1.5.3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-894g-6j7q-2hx6</uri>
        </author>
        <published>2018-12-19T19:23:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ymlref] Code injection in ymlref]]></title>
        <id>https://github.com/advisories/GHSA-8r8j-xvfj-36f9</id>
        <link href="https://github.com/advisories/GHSA-8r8j-xvfj-36f9"/>
        <updated>2022-03-24T22:06:30.000Z</updated>
        <content type="html"><![CDATA[<p>ymlref allows code injection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20133">https://nvd.nist.gov/vuln/detail/CVE-2018-20133</a></li>
<li><a href="https://github.com/dexter2206/ymlref/issues/2">https://github.com/dexter2206/ymlref/issues/2</a></li>
<li><a href="https://github.com/advisories/GHSA-8r8j-xvfj-36f9">https://github.com/advisories/GHSA-8r8j-xvfj-36f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r8j-xvfj-36f9</uri>
        </author>
        <published>2018-12-19T19:25:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-g2xc-35jw-c63p</id>
        <link href="https://github.com/advisories/GHSA-g2xc-35jw-c63p"/>
        <updated>2022-03-24T22:03:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Waitress would parse the <code>Transfer-Encoding</code> header and only look for a single string value, if that value was not <code>chunked</code> it would fall through and use the <code>Content-Length</code> header instead.</p>
<p>According to the HTTP standard <code>Transfer-Encoding</code> should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with <code>chunked</code>.</p>
<p>Requests sent with:</p>
<pre><code>Transfer-Encoding: gzip, chunked
</code></pre>
<p>Would incorrectly get ignored, and the request would use a <code>Content-Length</code> header instead to determine the body size of the HTTP message.</p>
<p>This could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>
<p>Waitress will now return a 501 Not Implemented error if the <code>Transfer-Encoding</code> is not <code>chunked</code> or contains multiple elements. Waitress does not support any transfer codings such as <code>gzip</code> or <code>deflate</code>.</p>
<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>
<h3 id="issuesmore-security-issues">Issues/more security issues:</h3>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p">https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16786">https://nvd.nist.gov/vuln/detail/CVE-2019-16786</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3">https://github.com/Pylons/waitress/commit/f11093a6b3240fc26830b6111e826128af7771c3</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://github.com/advisories/GHSA-g2xc-35jw-c63p">https://github.com/advisories/GHSA-g2xc-35jw-c63p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g2xc-35jw-c63p</uri>
        </author>
        <published>2019-12-20T23:04:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: LF vs CRLF handling in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-pg36-wpm5-g57p</id>
        <link href="https://github.com/advisories/GHSA-pg36-wpm5-g57p"/>
        <updated>2022-03-24T21:53:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Waitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (<a href="https://tools.ietf.org/html/rfc7230#section-3.5">https://tools.ietf.org/html/rfc7230#section-3.5</a>) which states:</p>
<pre><code>  Although the line terminator for the start-line and header fields is
  the sequence CRLF, a recipient MAY recognize a single LF as a line
  terminator and ignore any preceding CR.
</code></pre>
<p>Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.</p>
<p>Example:</p>
<pre><code>Content-Length: 100[CRLF]
X-Header: x[LF]Content-Length: 0[CRLF]
</code></pre>
<p>Would get treated by Waitress as if it were:</p>
<pre><code>Content-Length: 100
X-Header: x
Content-Length: 0
</code></pre>
<p>This could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>
<p>Waitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.</p>
<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)</p>
<h3 id="issuesmore-security-issues">Issues/more security issues:</h3>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p">https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16785">https://nvd.nist.gov/vuln/detail/CVE-2019-16785</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba">https://github.com/Pylons/waitress/commit/8eba394ad75deaf9e5cd15b78a3d16b12e6b0eba</a></li>
<li><a href="https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes">https://docs.pylonsproject.org/projects/waitress/en/latest/#security-fixes</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GVDHR2DNKCNQ7YQXISJ45NT4IQDX3LJ7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYEOTGWJZVKPRXX2HBNVIYWCX73QYPM5/</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0720">https://access.redhat.com/errata/RHSA-2020:0720</a></li>
<li><a href="https://github.com/advisories/GHSA-pg36-wpm5-g57p">https://github.com/advisories/GHSA-pg36-wpm5-g57p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pg36-wpm5-g57p</uri>
        </author>
        <published>2019-12-20T23:03:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] Catastrophic backtracking in regex allows Denial of Service in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-73m2-3pwg-5fgc</id>
        <link href="https://github.com/advisories/GHSA-73m2-3pwg-5fgc"/>
        <updated>2022-03-24T19:27:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When waitress receives a header that contains invalid characters it will cause the regular expression engine to catastrophically backtrack causing the process to use 100% CPU time and blocking any other interactions.</p>
<p>This would allow an attacker to send a single request with an invalid header and take the service offline.</p>
<p>Invalid header example:</p>
<pre><code>Bad-header: xxxxxxxxxxxxxxx\x10
</code></pre>
<p>Increasing the number of <code>x</code>'s in the header will increase the amount of time Waitress spends in the regular expression engine.</p>
<p>This issue was introduced in version 1.4.2 when the regular expression was updated to attempt to match the behaviour required by errata associated with RFC7230.</p>
<h3 id="patches">Patches</h3>
<p>The regular expression that is used to validate incoming headers has been updated in version 1.4.3, it is recommended that people upgrade to the new version of Waitress as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you have deployed a reverse proxy in front of Waitress it may already be rejecting requests that include invalid headers.</p>
<h3 id="thanks">Thanks</h3>
<p>The Pylons Project would like to thank <a href="https://github.com/fzembow">Fil Zembowicz</a> for reaching out and disclosing this vulnerability!</p>
<h3 id="references">References</h3>
<p>Catastrophic backtracking explained: <a href="https://www.regular-expressions.info/catastrophic.html">https://www.regular-expressions.info/catastrophic.html</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><p>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</p>
</li>
<li><p>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)</p>
<h3 id="references-1">References</h3>
</li>
<li><p><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc">https://github.com/Pylons/waitress/security/advisories/GHSA-73m2-3pwg-5fgc</a></p>
</li>
<li><p><a href="https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f">https://github.com/Pylons/waitress/commit/6e46f9e3f014d64dd7d1e258eaf626e39870ee1f</a></p>
</li>
<li><p><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-5236">https://nvd.nist.gov/vuln/detail/CVE-2020-5236</a></p>
</li>
<li><p><a href="https://github.com/advisories/GHSA-73m2-3pwg-5fgc">https://github.com/advisories/GHSA-73m2-3pwg-5fgc</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-73m2-3pwg-5fgc</uri>
        </author>
        <published>2020-02-04T03:07:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[waitress] HTTP Request Smuggling: Content-Length Sent Twice in Waitress]]></title>
        <id>https://github.com/advisories/GHSA-4ppp-gpcr-7qf6</id>
        <link href="https://github.com/advisories/GHSA-4ppp-gpcr-7qf6"/>
        <updated>2022-03-24T17:52:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Waitress would header fold a double <code>Content-Length</code> header and due to being unable to cast the now comma separated value to an integer would set the <code>Content-Length</code> to 0 internally.</p>
<p>So a request with:</p>
<pre><code>Content-Length: 10
Content-Length: 10
</code></pre>
<p>would get transformed to:</p>
<pre><code>Content-Length: 10, 10
</code></pre>
<p>Which would Waitress would then internally set to <code>Content-Lenght: 0</code>.</p>
<p>Waitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. </p>
<p>The Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Various reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).</p>
<h3 id="issuesmore-security-issues">Issues/more security issues:</h3>
<ul>
<li>open an issue at <a href="https://github.com/Pylons/waitress/issues">https://github.com/Pylons/waitress/issues</a> (if not sensitive or security related)</li>
<li>email the Pylons Security mailing list: <a href="mailto:pylons-project-security@googlegroups.com">pylons-project-security@googlegroups.com</a> (if security related)<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6">https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6</a></li>
<li><a href="https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65">https://github.com/Pylons/waitress/commit/575994cd42e83fd772a5f7ec98b2c56751bd3f65</a></li>
<li><a href="https://github.com/advisories/GHSA-4ppp-gpcr-7qf6">https://github.com/advisories/GHSA-4ppp-gpcr-7qf6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4ppp-gpcr-7qf6</uri>
        </author>
        <published>2019-12-20T23:04:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urllib3] High severity vulnerability that affects urllib3]]></title>
        <id>https://github.com/advisories/GHSA-www2-v7xj-xrc6</id>
        <link href="https://github.com/advisories/GHSA-www2-v7xj-xrc6"/>
        <updated>2022-03-24T16:43:20.000Z</updated>
        <content type="html"><![CDATA[<p>urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20060">https://nvd.nist.gov/vuln/detail/CVE-2018-20060</a></li>
<li><a href="https://github.com/urllib3/urllib3/issues/1316">https://github.com/urllib3/urllib3/issues/1316</a></li>
<li><a href="https://github.com/urllib3/urllib3/pull/1346">https://github.com/urllib3/urllib3/pull/1346</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:2272">https://access.redhat.com/errata/RHSA-2019:2272</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1649153">https://bugzilla.redhat.com/show_bug.cgi?id=1649153</a></li>
<li><a href="https://github.com/advisories/GHSA-www2-v7xj-xrc6">https://github.com/advisories/GHSA-www2-v7xj-xrc6</a></li>
<li><a href="https://github.com/urllib3/urllib3/blob/master/CHANGES.rst">https://github.com/urllib3/urllib3/blob/master/CHANGES.rst</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/06/msg00015.html">https://lists.debian.org/debian-lts-announce/2021/06/msg00015.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5SJERZEJDSUYQP7BNBXMBHRHGY26HRZD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5SJERZEJDSUYQP7BNBXMBHRHGY26HRZD/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BXLAXHM3Z6DUCXZ7ZXZ2EAYJXWDCZFCT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BXLAXHM3Z6DUCXZ7ZXZ2EAYJXWDCZFCT/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWP36YW3KSVLXDBY3QJKDYEPCIMN3VQZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XWP36YW3KSVLXDBY3QJKDYEPCIMN3VQZ/</a></li>
<li><a href="https://usn.ubuntu.com/3990-1/">https://usn.ubuntu.com/3990-1/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00039.html">http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00039.html</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-www2-v7xj-xrc6</uri>
        </author>
        <published>2018-12-12T15:52:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Twisted] Improper Input Validation in Twisted]]></title>
        <id>https://github.com/advisories/GHSA-h96w-mmrf-2h6v</id>
        <link href="https://github.com/advisories/GHSA-h96w-mmrf-2h6v"/>
        <updated>2022-03-23T23:18:09.000Z</updated>
        <content type="html"><![CDATA[<p>In Twisted Web through 20.3.0, there was an HTTP request splitting vulnerability. When presented with two content-length headers, it ignored the first header. When the second content-length value was set to zero, the request body was interpreted as a pipelined request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10108">https://nvd.nist.gov/vuln/detail/CVE-2020-10108</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>
<li><a href="https://usn.ubuntu.com/4308-1/">https://usn.ubuntu.com/4308-1/</a></li>
<li><a href="https://security.gentoo.org/glsa/202007-24">https://security.gentoo.org/glsa/202007-24</a></li>
<li><a href="https://usn.ubuntu.com/4308-2/">https://usn.ubuntu.com/4308-2/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>
<li><a href="https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>
<li><a href="https://github.com/advisories/GHSA-h96w-mmrf-2h6v">https://github.com/advisories/GHSA-h96w-mmrf-2h6v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h96w-mmrf-2h6v</uri>
        </author>
        <published>2020-03-31T15:42:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Twisted] HTTP Request Smuggling in Twisted]]></title>
        <id>https://github.com/advisories/GHSA-p5xh-vx83-mxcj</id>
        <link href="https://github.com/advisories/GHSA-p5xh-vx83-mxcj"/>
        <updated>2022-03-23T23:16:27.000Z</updated>
        <content type="html"><![CDATA[<p>In Twisted Web through 20.3.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10109">https://nvd.nist.gov/vuln/detail/CVE-2020-10109</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6ISMZFZBWW4EV6ETJGXAYIXN3AT7GBPL/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YW3NIL7VXSGJND2Q4BSXM3CFTAFU6T7D/</a></li>
<li><a href="https://usn.ubuntu.com/4308-1/">https://usn.ubuntu.com/4308-1/</a></li>
<li><a href="https://security.gentoo.org/glsa/202007-24">https://security.gentoo.org/glsa/202007-24</a></li>
<li><a href="https://usn.ubuntu.com/4308-2/">https://usn.ubuntu.com/4308-2/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html">https://lists.debian.org/debian-lts-announce/2022/02/msg00021.html</a></li>
<li><a href="https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281">https://github.com/twisted/twisted/commit/4a7d22e490bb8ff836892cc99a1f54b85ccb0281</a></li>
<li><a href="https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13">https://github.com/twisted/twisted/blob/6ff2c40e42416c83203422ff70dfc49d2681c8e2/NEWS.rst#twisted-2030-2020-03-13</a></li>
<li><a href="https://github.com/advisories/GHSA-p5xh-vx83-mxcj">https://github.com/advisories/GHSA-p5xh-vx83-mxcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p5xh-vx83-mxcj</uri>
        </author>
        <published>2020-03-31T15:40:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tuf] Incorrect threshold signature computation in TUF]]></title>
        <id>https://github.com/advisories/GHSA-pwqf-9h7j-7mv8</id>
        <link href="https://github.com/advisories/GHSA-pwqf-9h7j-7mv8"/>
        <updated>2022-03-23T23:02:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Metadadata signature verification, as used in <code>tuf.client.updater</code>, counted each of multiple signatures with identical authorized keyids  separately towards the threshold. Therefore, an attacker with access to a valid signing key could create multiple valid signatures in order to meet the minimum threshold of keys before the metadata was considered valid.</p>
<p>The tuf maintainers would like to thank Erik MacLean of Analog Devices, Inc. for reporting this issue.</p>
<h3 id="patches">Patches</h3>
<p>A <a href="https://github.com/theupdateframework/tuf/pull/974">fix</a> is available in version <a href="https://github.com/theupdateframework/tuf/releases/tag/v0.12.2">0.12.2</a> or newer.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds are known for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-6174">CVE-2020-6174</a></li>
<li>Pull request resolving the issue <a href="https://github.com/theupdateframework/tuf/pull/974">PR 974</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/theupdateframework/tuf/security/advisories/GHSA-pwqf-9h7j-7mv8">https://github.com/theupdateframework/tuf/security/advisories/GHSA-pwqf-9h7j-7mv8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-6174">https://nvd.nist.gov/vuln/detail/CVE-2020-6174</a></li>
<li><a href="https://github.com/theupdateframework/tuf/pull/974/commits/a0397c7c820ec1c30ebc793cc9469b61c8d3f50e">https://github.com/theupdateframework/tuf/pull/974/commits/a0397c7c820ec1c30ebc793cc9469b61c8d3f50e</a></li>
<li><a href="https://github.com/theupdateframework/tuf/pull/974">https://github.com/theupdateframework/tuf/pull/974</a></li>
<li><a href="https://github.com/advisories/GHSA-pwqf-9h7j-7mv8">https://github.com/advisories/GHSA-pwqf-9h7j-7mv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwqf-9h7j-7mv8</uri>
        </author>
        <published>2020-08-21T16:25:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[thefuck] Path traversal]]></title>
        <id>https://github.com/advisories/GHSA-8wwf-2644-f8x4</id>
        <link href="https://github.com/advisories/GHSA-8wwf-2644-f8x4"/>
        <updated>2022-03-23T22:58:01.000Z</updated>
        <content type="html"><![CDATA[<p>The thefuck (aka The Fuck) package before 3.31 for Python allows Path Traversal that leads to arbitrary file deletion via the "undo archive operation" feature.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-34363">https://nvd.nist.gov/vuln/detail/CVE-2021-34363</a></li>
<li><a href="https://github.com/nvbn/thefuck/commit/e343c577cd7da4d304b837d4a07ab4df1e023092">https://github.com/nvbn/thefuck/commit/e343c577cd7da4d304b837d4a07ab4df1e023092</a></li>
<li><a href="https://github.com/nvbn/thefuck/releases/tag/3.31">https://github.com/nvbn/thefuck/releases/tag/3.31</a></li>
<li><a href="https://vuln.ryotak.me/advisories/48">https://vuln.ryotak.me/advisories/48</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MEDDLBFVRUQHPYIBJ4MFM3M4NUJUXL5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4MEDDLBFVRUQHPYIBJ4MFM3M4NUJUXL5/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YA6UNQSOY6M3NJDZLS6YJXTS4WGDMEEJ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YA6UNQSOY6M3NJDZLS6YJXTS4WGDMEEJ/</a></li>
<li><a href="https://github.com/advisories/GHSA-8wwf-2644-f8x4">https://github.com/advisories/GHSA-8wwf-2644-f8x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8wwf-2644-f8x4</uri>
        </author>
        <published>2021-06-15T15:49:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Arbitrary code execution due to YAML deserialization]]></title>
        <id>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</id>
        <link href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r"/>
        <updated>2022-03-23T22:52:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format.</p>
<pre><code class="language-python">from tensorflow.keras import models

payload = '''
!!python/object/new:type
args: ['z', !!python/tuple [], {'extend': !!python/name:exec }]
listitems: "__import__('os').system('cat /etc/passwd')"
'''
  
models.model_from_yaml(payload)
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104">implementation</a> uses <code>yaml.unsafe_load</code> which can perform arbitrary code execution on the input.</p>
<h3 id="patches">Patches</h3>
<p>Given that YAML format support requires a significant amount of work, we have removed it for now.</p>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">23d6383eb6c14084a8fc3bdf164043b974818012</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Arjun Shibu.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37678">https://nvd.nist.gov/vuln/detail/CVE-2021-37678</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012</a></li>
<li><a href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/advisories/GHSA-r6jx-9g48-2r5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</uri>
        </author>
        <published>2021-08-25T14:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Arbitrary code execution due to YAML deserialization]]></title>
        <id>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</id>
        <link href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r"/>
        <updated>2022-03-23T22:52:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format.</p>
<pre><code class="language-python">from tensorflow.keras import models

payload = '''
!!python/object/new:type
args: ['z', !!python/tuple [], {'extend': !!python/name:exec }]
listitems: "__import__('os').system('cat /etc/passwd')"
'''
  
models.model_from_yaml(payload)
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104">implementation</a> uses <code>yaml.unsafe_load</code> which can perform arbitrary code execution on the input.</p>
<h3 id="patches">Patches</h3>
<p>Given that YAML format support requires a significant amount of work, we have removed it for now.</p>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">23d6383eb6c14084a8fc3bdf164043b974818012</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Arjun Shibu.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37678">https://nvd.nist.gov/vuln/detail/CVE-2021-37678</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012</a></li>
<li><a href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/advisories/GHSA-r6jx-9g48-2r5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</uri>
        </author>
        <published>2021-08-25T14:41:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] Arbitrary code execution due to YAML deserialization]]></title>
        <id>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</id>
        <link href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r"/>
        <updated>2022-03-23T22:52:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TensorFlow and Keras can be tricked to perform arbitrary code execution when deserializing a Keras model from YAML format.</p>
<pre><code class="language-python">from tensorflow.keras import models

payload = '''
!!python/object/new:type
args: ['z', !!python/tuple [], {'extend': !!python/name:exec }]
listitems: "__import__('os').system('cat /etc/passwd')"
'''
  
models.model_from_yaml(payload)
</code></pre>
<p>The <a href="https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/python/keras/saving/model_config.py#L66-L104">implementation</a> uses <code>yaml.unsafe_load</code> which can perform arbitrary code execution on the input.</p>
<h3 id="patches">Patches</h3>
<p>Given that YAML format support requires a significant amount of work, we have removed it for now.</p>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">23d6383eb6c14084a8fc3bdf164043b974818012</a>.</p>
<p>The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Arjun Shibu.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-r6jx-9g48-2r5r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37678">https://nvd.nist.gov/vuln/detail/CVE-2021-37678</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012">https://github.com/tensorflow/tensorflow/commit/23d6383eb6c14084a8fc3bdf164043b974818012</a></li>
<li><a href="https://github.com/advisories/GHSA-r6jx-9g48-2r5r">https://github.com/advisories/GHSA-r6jx-9g48-2r5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r6jx-9g48-2r5r</uri>
        </author>
        <published>2021-08-25T14:41:12.000Z</published>
    </entry>
</feed>