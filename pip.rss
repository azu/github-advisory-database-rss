<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-07-21T00:24:41.917Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[OctoBot] Octobot before 0.4.4 mishandles Tentacles upload]]></title>
        <id>https://github.com/advisories/GHSA-fr75-x856-q6j8</id>
        <link href="https://github.com/advisories/GHSA-fr75-x856-q6j8"/>
        <updated>2022-07-20T01:31:36.000Z</updated>
        <content type="html"><![CDATA[<p>WebInterface in OctoBot before 0.4.4 allows remote code execution because Tentacles upload is mishandled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-36711">https://nvd.nist.gov/vuln/detail/CVE-2021-36711</a></li>
<li><a href="https://github.com/Drakkar-Software/OctoBot/issues/1966">https://github.com/Drakkar-Software/OctoBot/issues/1966</a></li>
<li><a href="https://github.com/Drakkar-Software/OctoBot/blob/master/CHANGELOG.md">https://github.com/Drakkar-Software/OctoBot/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/Nwqda/Sashimi-Evil-OctoBot-Tentacle">https://github.com/Nwqda/Sashimi-Evil-OctoBot-Tentacle</a></li>
<li><a href="https://packetstormsecurity.com/files/167721/Sashimi-Evil-OctoBot-Tentacle.html">https://packetstormsecurity.com/files/167721/Sashimi-Evil-OctoBot-Tentacle.html</a></li>
<li><a href="https://www.octobot.online/">https://www.octobot.online/</a></li>
<li><a href="https://github.com/Drakkar-Software/OctoBot/blob/master/CHANGELOG.md#044---2022-06-01">https://github.com/Drakkar-Software/OctoBot/blob/master/CHANGELOG.md#044---2022-06-01</a></li>
<li><a href="https://github.com/advisories/GHSA-fr75-x856-q6j8">https://github.com/advisories/GHSA-fr75-x856-q6j8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fr75-x856-q6j8</uri>
        </author>
        <published>2022-07-17T00:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[distributed] Workers for local Dask clusters mistakenly listened on public interfaces]]></title>
        <id>https://github.com/advisories/GHSA-hwqr-f3v9-hwxr</id>
        <link href="https://github.com/advisories/GHSA-hwqr-f3v9-hwxr"/>
        <updated>2022-07-15T21:56:09.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of <code>distributed</code> earlier than <code>2021.10.0</code> had a potential security vulnerability relating to single-machine Dask clusters.</p>
<p>Clusters started with <code>dask.distributed.LocalCluster</code> or <code>dask.distributed.Client()</code> (which defaults to using <code>LocalCluster</code>) would mistakenly configure their respective Dask workers to listen on external interfaces (typically with a randomly selected high port) rather than only on <code>localhost</code>. A Dask cluster created using this method AND running on a machine that has these ports exposed could be used by a sophisticated attacker to enable remote code execution. Users running on machines with standard firewalls in place, or using clusters created via cluster objects other than <code>LocalCluster</code> (e.g. <code>dask_kubernetes.KubeCluster</code>) should not be affected. This vulnerability is documented in CVE-2021-42343, and was fixed in version <code>2021.10.0</code> (PR #5427).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dask/distributed/security/advisories/GHSA-hwqr-f3v9-hwxr">https://github.com/dask/distributed/security/advisories/GHSA-hwqr-f3v9-hwxr</a></li>
<li><a href="https://docs.dask.org/en/latest/changelog.html">https://docs.dask.org/en/latest/changelog.html</a></li>
<li><a href="https://github.com/dask/dask/tags">https://github.com/dask/dask/tags</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/distributed/PYSEC-2021-871.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/distributed/PYSEC-2021-871.yaml</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/distributed/PYSEC-2021-872.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/distributed/PYSEC-2021-872.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-hwqr-f3v9-hwxr">https://github.com/advisories/GHSA-hwqr-f3v9-hwxr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hwqr-f3v9-hwxr</uri>
        </author>
        <published>2022-07-15T21:56:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset before 1.5.1 allows authenticated users to access metadata for datasets they have no permission on]]></title>
        <id>https://github.com/advisories/GHSA-748r-5r8q-273m</id>
        <link href="https://github.com/advisories/GHSA-748r-5r8q-273m"/>
        <updated>2022-07-15T21:31:24.000Z</updated>
        <content type="html"><![CDATA[<p>Apache Superset up to 1.5.1 allowed for authenticated users to access metadata information related to datasets they have no permission on. This metadata included the dataset name, columns and metrics.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-37839">https://nvd.nist.gov/vuln/detail/CVE-2021-37839</a></li>
<li><a href="https://lists.apache.org/thread/pwqyxxmn5gh7cnw3qsp66v0lt4xojt82">https://lists.apache.org/thread/pwqyxxmn5gh7cnw3qsp66v0lt4xojt82</a></li>
<li><a href="https://github.com/apache/superset/commit/2bd89d1705347da5446902a3f65eb8d0a6353503">https://github.com/apache/superset/commit/2bd89d1705347da5446902a3f65eb8d0a6353503</a></li>
<li><a href="https://github.com/advisories/GHSA-748r-5r8q-273m">https://github.com/advisories/GHSA-748r-5r8q-273m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-748r-5r8q-273m</uri>
        </author>
        <published>2022-07-07T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Minion identity not validated in saltstack]]></title>
        <id>https://github.com/advisories/GHSA-jmv9-5gx8-7xpf</id>
        <link href="https://github.com/advisories/GHSA-jmv9-5gx8-7xpf"/>
        <updated>2022-07-15T20:57:55.000Z</updated>
        <content type="html"><![CDATA[<p>Salt (aka SaltStack) before 0.15.0 through 0.17.0 allows remote authenticated minions to impersonate arbitrary minions via a crafted minion with a valid key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-4439">https://nvd.nist.gov/vuln/detail/CVE-2013-4439</a></li>
<li><a href="https://github.com/saltstack/salt/pull/7356">https://github.com/saltstack/salt/pull/7356</a></li>
<li><a href="http://docs.saltstack.com/topics/releases/0.17.1.html">http://docs.saltstack.com/topics/releases/0.17.1.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/10/18/3">http://www.openwall.com/lists/oss-security/2013/10/18/3</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/salt/PYSEC-2013-14.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/salt/PYSEC-2013-14.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-jmv9-5gx8-7xpf">https://github.com/advisories/GHSA-jmv9-5gx8-7xpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmv9-5gx8-7xpf</uri>
        </author>
        <published>2022-05-17T04:58:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-celery-results] django-celery-results vulnerable to Cleartext Storage of Sensitive Information]]></title>
        <id>https://github.com/advisories/GHSA-fvx8-v524-8579</id>
        <link href="https://github.com/advisories/GHSA-fvx8-v524-8579"/>
        <updated>2022-07-15T20:29:32.000Z</updated>
        <content type="html"><![CDATA[<p>django-celery-results prior to 2.4.0 stores task results in the database. Among the data it stores are the variables passed into the tasks. The variables may contain sensitive cleartext information that does not belong unencrypted in the database.</p>
<p>In version 2.4.0 this is no longer the default behaviour but can be re-enabled with the <code>result_extended</code> flag in which case care should be taken to ensure any sensitive variables are scrubbed - see <a href="https://github.com/celery/django-celery-results/issues/154#issuecomment-734706270">here</a> for an example.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-17495">https://nvd.nist.gov/vuln/detail/CVE-2020-17495</a></li>
<li><a href="https://github.com/celery/django-celery-results/issues/142">https://github.com/celery/django-celery-results/issues/142</a></li>
<li><a href="https://github.com/celery/django-celery-results/issues/154">https://github.com/celery/django-celery-results/issues/154</a></li>
<li><a href="https://github.com/celery/django-celery-results/pull/316">https://github.com/celery/django-celery-results/pull/316</a></li>
<li><a href="https://github.com/advisories/GHSA-fvx8-v524-8579">https://github.com/advisories/GHSA-fvx8-v524-8579</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fvx8-v524-8579</uri>
        </author>
        <published>2021-06-04T21:46:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[codecov] Codecov prior to 2.0.16 does not sanitize gcov arguments]]></title>
        <id>https://github.com/advisories/GHSA-h3qr-fjhm-jphw</id>
        <link href="https://github.com/advisories/GHSA-h3qr-fjhm-jphw"/>
        <updated>2022-07-15T18:40:10.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package codecov before 2.0.16. The vulnerability occurs due to not sanitizing gcov arguments before being being provided to the popen method.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10800">https://nvd.nist.gov/vuln/detail/CVE-2019-10800</a></li>
<li><a href="https://github.com/codecov/codecov-python/commit/2a80aa434f74feb31242b6f213b75ce63ae97902">https://github.com/codecov/codecov-python/commit/2a80aa434f74feb31242b6f213b75ce63ae97902</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-CODECOV-552149">https://snyk.io/vuln/SNYK-PYTHON-CODECOV-552149</a></li>
<li><a href="https://github.com/advisories/GHSA-h3qr-fjhm-jphw">https://github.com/advisories/GHSA-h3qr-fjhm-jphw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3qr-fjhm-jphw</uri>
        </author>
        <published>2022-07-14T00:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible] Ansible is vulnerable to an improper input validation in Ansible's handling of data sent from client systems]]></title>
        <id>https://github.com/advisories/GHSA-m956-frf4-m2wr</id>
        <link href="https://github.com/advisories/GHSA-m956-frf4-m2wr"/>
        <updated>2022-07-15T18:33:53.000Z</updated>
        <content type="html"><![CDATA[<p>Ansible before versions 2.1.4, 2.2.1 is vulnerable to an improper input validation in Ansible's handling of data sent from client systems. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server using the Ansible server privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-9587">https://nvd.nist.gov/vuln/detail/CVE-2016-9587</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:0448">https://access.redhat.com/errata/RHSA-2017:0448</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:0515">https://access.redhat.com/errata/RHSA-2017:0515</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:1685">https://access.redhat.com/errata/RHSA-2017:1685</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9587">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9587</a></li>
<li><a href="https://github.com/advisories/GHSA-m956-frf4-m2wr">https://github.com/advisories/GHSA-m956-frf4-m2wr</a></li>
<li><a href="https://security.gentoo.org/glsa/201701-77">https://security.gentoo.org/glsa/201701-77</a></li>
<li><a href="https://www.exploit-db.com/exploits/41013/">https://www.exploit-db.com/exploits/41013/</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-0195.html">http://rhn.redhat.com/errata/RHSA-2017-0195.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-0260.html">http://rhn.redhat.com/errata/RHSA-2017-0260.html</a></li>
<li><a href="http://www.securityfocus.com/bid/95352">http://www.securityfocus.com/bid/95352</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-39.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-39.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m956-frf4-m2wr</uri>
        </author>
        <published>2018-10-10T17:22:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible] Ansible is vulnerable to an improper input validation in Ansible's handling of data sent from client systems]]></title>
        <id>https://github.com/advisories/GHSA-m956-frf4-m2wr</id>
        <link href="https://github.com/advisories/GHSA-m956-frf4-m2wr"/>
        <updated>2022-07-15T18:33:53.000Z</updated>
        <content type="html"><![CDATA[<p>Ansible before versions 2.1.4, 2.2.1 is vulnerable to an improper input validation in Ansible's handling of data sent from client systems. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server using the Ansible server privileges.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-9587">https://nvd.nist.gov/vuln/detail/CVE-2016-9587</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:0448">https://access.redhat.com/errata/RHSA-2017:0448</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:0515">https://access.redhat.com/errata/RHSA-2017:0515</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2017:1685">https://access.redhat.com/errata/RHSA-2017:1685</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9587">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-9587</a></li>
<li><a href="https://github.com/advisories/GHSA-m956-frf4-m2wr">https://github.com/advisories/GHSA-m956-frf4-m2wr</a></li>
<li><a href="https://security.gentoo.org/glsa/201701-77">https://security.gentoo.org/glsa/201701-77</a></li>
<li><a href="https://www.exploit-db.com/exploits/41013/">https://www.exploit-db.com/exploits/41013/</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-0195.html">http://rhn.redhat.com/errata/RHSA-2017-0195.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2017-0260.html">http://rhn.redhat.com/errata/RHSA-2017-0260.html</a></li>
<li><a href="http://www.securityfocus.com/bid/95352">http://www.securityfocus.com/bid/95352</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-39.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ansible/PYSEC-2018-39.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m956-frf4-m2wr</uri>
        </author>
        <published>2018-10-10T17:22:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openzeppelin-cairo-contracts] OpenZeppelin Contracts for Cairo account cannot process transactions on Goerli]]></title>
        <id>https://github.com/advisories/GHSA-8mjr-jr5h-q2xr</id>
        <link href="https://github.com/advisories/GHSA-8mjr-jr5h-q2xr"/>
        <updated>2022-07-19T18:29:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability affects all accounts (vanilla and ethereum flavors) in the <a href="https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.2.0">v0.2.0 release of OpenZeppelin Contracts for Cairo</a>, which are not whitelisted on StarkNet mainnet, so only goerli deployments of v0.2.0 accounts are affected.</p>
<p>This faulty behavior is not observed in <a href="https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/testing/starknet.py">StarkNet's testing framework</a>, so don't rely on it passing to detect this issue on custom accounts.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been patched in <a href="https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.2.1">v0.2.1</a>.</p>
<h3 id="references">References</h3>
<p>The issue is detailed in <a href="https://github.com/OpenZeppelin/cairo-contracts/issues/386">https://github.com/OpenZeppelin/cairo-contracts/issues/386</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/OpenZeppelin/cairo-contracts/issues/new/choose">the Contracts for Cairo repo</a></li>
<li>Email us at <a href="mailto:security@openzeppelin.com">security@openzeppelin.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/security/advisories/GHSA-8mjr-jr5h-q2xr">https://github.com/OpenZeppelin/cairo-contracts/security/advisories/GHSA-8mjr-jr5h-q2xr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31153">https://nvd.nist.gov/vuln/detail/CVE-2022-31153</a></li>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/issues/386">https://github.com/OpenZeppelin/cairo-contracts/issues/386</a></li>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/pull/387">https://github.com/OpenZeppelin/cairo-contracts/pull/387</a></li>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/commit/2cd60279c3332285d47edf9ee3888b71257acdc9">https://github.com/OpenZeppelin/cairo-contracts/commit/2cd60279c3332285d47edf9ee3888b71257acdc9</a></li>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/blob/release-0.2.0/src/openzeppelin/account/library.cairo#L203">https://github.com/OpenZeppelin/cairo-contracts/blob/release-0.2.0/src/openzeppelin/account/library.cairo#L203</a></li>
<li><a href="https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.2.1">https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.2.1</a></li>
<li><a href="https://github.com/advisories/GHSA-8mjr-jr5h-q2xr">https://github.com/advisories/GHSA-8mjr-jr5h-q2xr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8mjr-jr5h-q2xr</uri>
        </author>
        <published>2022-07-15T18:17:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[whoogle-search] Whoogle Search cross-site scripting via string parameter]]></title>
        <id>https://github.com/advisories/GHSA-mxvc-fwgx-j778</id>
        <link href="https://github.com/advisories/GHSA-mxvc-fwgx-j778"/>
        <updated>2022-07-15T15:37:40.000Z</updated>
        <content type="html"><![CDATA[<p>The package whoogle-search before 0.7.2 is vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the <a href="https://flask.palletsprojects.com/en/2.1.x/api/flask.render_template">flask.render_template</a> function. However, the error_message is rendered using the <a href="https://jinja.palletsprojects.com/en/3.1.x/templates/working-with-automatic-escaping">| safe filter</a>, meaning the user input is not escaped.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25303">https://nvd.nist.gov/vuln/detail/CVE-2022-25303</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/commit/abc30d7da3b5c67be7ce84d4699f327442d44606">https://github.com/benbusby/whoogle-search/commit/abc30d7da3b5c67be7ce84d4699f327442d44606</a></li>
<li><a href="https://github.com/benbusby/whoogle-search/blob/6d362ca5c7a00d2f691a2512461c5dfbfc01cbb3/app/routes.py%23L448">https://github.com/benbusby/whoogle-search/blob/6d362ca5c7a00d2f691a2512461c5dfbfc01cbb3/app/routes.py%23L448</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2022-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/whoogle-search/PYSEC-2022-226.yaml</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-WHOOGLESEARCH-2803306">https://snyk.io/vuln/SNYK-PYTHON-WHOOGLESEARCH-2803306</a></li>
<li><a href="https://github.com/advisories/GHSA-mxvc-fwgx-j778">https://github.com/advisories/GHSA-mxvc-fwgx-j778</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxvc-fwgx-j778</uri>
        </author>
        <published>2022-07-15T15:37:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nvflare] Unsafe deserialisation in the PKI implementation scheme of NVFlare]]></title>
        <id>https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</id>
        <link href="https://github.com/advisories/GHSA-rcxc-3w2m-mp8h"/>
        <updated>2022-07-14T21:38:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>NVFLARE contains a vulnerability in its PKI implementation module, where The CA credentials are transported via pickle and no safe deserialization. The deserialization of Untrusted Data may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.
All versions before 2.1.2 are affected.</p>
<p>CVSS Score = 9.8
<a href="https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&amp;data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&amp;reserved=0">AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</a></p>
<h3 id="patches">Patches</h3>
<p>The patch will be included in nvflare==2.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Replace pickle serialization with JSON and change the code accordingly</p>
<p>Additional information
Issue Found by: Oliver Sellwood (@Nintorac)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-rcxc-3w2m-mp8h">https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-rcxc-3w2m-mp8h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31604">https://nvd.nist.gov/vuln/detail/CVE-2022-31604</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-231.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-231.yaml</a></li>
<li><a href="https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67">https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67</a></li>
<li><a href="https://github.com/advisories/GHSA-rcxc-3w2m-mp8h">https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</uri>
        </author>
        <published>2022-06-22T21:22:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nvflare] Unsafe yaml deserialization in NVFlare]]></title>
        <id>https://github.com/advisories/GHSA-hrf3-622q-8366</id>
        <link href="https://github.com/advisories/GHSA-hrf3-622q-8366"/>
        <updated>2022-07-14T19:58:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>NVFLARE contains a vulnerability in its utils module, where YAML files are loaded via yaml.load() instead of yaml.safe_load(). The deserialization of Untrusted Data, may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.</p>
<p>All versions before 2.1.2 are affected.
CVSS Score = 9.8
<a href="https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&amp;data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&amp;reserved=0">AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</a></p>
<h3 id="patches">Patches</h3>
<p>The patch will be included in nvflare==2.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Change yaml.load() to yaml.safe_load()</p>
<h3 id="additional-information">Additional information</h3>
<p>Issue Found by: Oliver Sellwood (@Nintorac)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-hrf3-622q-8366">https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-hrf3-622q-8366</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31605">https://nvd.nist.gov/vuln/detail/CVE-2022-31605</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-232.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-232.yaml</a></li>
<li><a href="https://github.com/NVIDIA/NVFlare/commit/4de9782697ecb12f39bcae83221bd8d3498959be">https://github.com/NVIDIA/NVFlare/commit/4de9782697ecb12f39bcae83221bd8d3498959be</a></li>
<li><a href="https://github.com/advisories/GHSA-hrf3-622q-8366">https://github.com/advisories/GHSA-hrf3-622q-8366</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrf3-622q-8366</uri>
        </author>
        <published>2022-06-22T21:22:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-p64x-8rxx-wf6q</id>
        <link href="https://github.com/advisories/GHSA-p64x-8rxx-wf6q"/>
        <updated>2022-07-14T17:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34265">https://nvd.nist.gov/vuln/detail/CVE-2022-34265</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/jul/04/security-releases/">https://www.djangoproject.com/weblog/2022/jul/04/security-releases/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-213.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-213.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p64x-8rxx-wf6q">https://github.com/advisories/GHSA-p64x-8rxx-wf6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p64x-8rxx-wf6q</uri>
        </author>
        <published>2022-07-05T00:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] SQL Injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-p64x-8rxx-wf6q</id>
        <link href="https://github.com/advisories/GHSA-p64x-8rxx-wf6q"/>
        <updated>2022-07-14T17:17:50.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.14 and 4.0 before 4.0.6. The Trunc() and Extract() database functions are subject to SQL injection if untrusted data is used as a kind/lookup_name value. Applications that constrain the lookup name and kind choice to a known safe list are unaffected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34265">https://nvd.nist.gov/vuln/detail/CVE-2022-34265</a></li>
<li><a href="https://docs.djangoproject.com/en/4.0/releases/security/">https://docs.djangoproject.com/en/4.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2022/jul/04/security-releases/">https://www.djangoproject.com/weblog/2022/jul/04/security-releases/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-213.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2022-213.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-p64x-8rxx-wf6q">https://github.com/advisories/GHSA-p64x-8rxx-wf6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p64x-8rxx-wf6q</uri>
        </author>
        <published>2022-07-05T00:00:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-s3file] Path Traversal in django-s3file]]></title>
        <id>https://github.com/advisories/GHSA-4w8f-hjm9-xwgf</id>
        <link href="https://github.com/advisories/GHSA-4w8f-hjm9-xwgf"/>
        <updated>2022-07-14T17:07:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It was possible to traverse the entire AWS S3 bucket and in most cases to access or delete files.
The issue was discovered by the maintainer. There were no reports of the vulnerability
being known to or exploited by a third party, before the release of the patch.</p>
<p>If the <code>AWS_LOCATION</code> setting was set, traversal was limited to that location only.
If all your files handling views (like form views) require authentication or special permission, the thread is limited to privileged users.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in version 5.5.1 and above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no feasible workaround. We must urge all users to immediately updated to a patched version.</p>
<h3 id="detailed-attack-vector-description">Detailed attack vector description</h3>
<p>An attacker may use a request with malicious form data to traverse the entire AWS S3 bucket and perform destructive operations.</p>
<p>An attack could look as follows:</p>
<pre><code class="language-bash">curl -X POST -F "s3file=file" -F "file=/priviliged/location/secrets.txt" https://www.example.com/any/path/will/work/
</code></pre>
<p>This will result in a request with files set and opened:</p>
<pre><code class="language-python">&gt;&gt;&gt; request.FILES.getlist("file")
[File("/priviliged/location/secrets.txt")]
</code></pre>
<p>Since this behavior is injected via a middleware, any view can be called this way and will carry any files defined by the attacker.</p>
<p>Via the <code>s3file</code> form field, any input name can be specified, including multiple inputs. For each input, multiple files can be freely
picked of the S3 bucket.</p>
<h4 id="scenarios-and-their-practicality">Scenarios and their practicality</h4>
<p>There are four scenarios that would be considered practical in most setups:</p>
<ol>
<li>Illegal file injection,</li>
<li>file deletion,</li>
<li>file retrieval &amp; tree traversal.</li>
<li>code injection &amp; remote code execution.</li>
</ol>
<h5 id="file-deletion">File deletion</h5>
<p>An attacker knows the location of a privileged file, like a static asset. Next, the file is injected into a form view. The upload to function will move the file to a new location. This is effectively deleting the file, since the previous references to it are invalid, and will cause S3 to return a 404. Furthermore, the new location is unknown to the site operator.</p>
<h5 id="file-retrieval--tree-traversal">File retrieval &amp; tree traversal</h5>
<p>An attacker knows the URL of a secret file and injects it into a form view. The view will move the file to a public location, making it accessible to the attacker. Since most form views will not be rate limited, this could also be used to guess files and traverse the file tree.</p>
<h5 id="illegal-file-injection">Illegal file injection</h5>
<p>An attacker uses any form to upload a file to the temporary upload location. Next, the attacker injects that file into a request, does not validate the contents or is not equipped to handle the mime type. The latter could be used as a potential DOS vector.</p>
<p>In practice, this is not a practical risk in most hardened setup. Files should always be sanitized before processing, since files can be included in a request even without this security issues.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue on <a href="https://github.com/codingjoe/django-s3file/issues">GitHub</a></li>
<li>Email us at <a href="mailto:johannes@maron.family">johannes@maron.family</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codingjoe/django-s3file/security/advisories/GHSA-4w8f-hjm9-xwgf">https://github.com/codingjoe/django-s3file/security/advisories/GHSA-4w8f-hjm9-xwgf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24840">https://nvd.nist.gov/vuln/detail/CVE-2022-24840</a></li>
<li><a href="https://github.com/codingjoe/django-s3file/commit/68ccd2c621a40eb66fdd6af2be9d5fcc9c373318">https://github.com/codingjoe/django-s3file/commit/68ccd2c621a40eb66fdd6af2be9d5fcc9c373318</a></li>
<li><a href="https://github.com/codingjoe/django-s3file/releases/tag/5.5.1">https://github.com/codingjoe/django-s3file/releases/tag/5.5.1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django-s3file/PYSEC-2022-208.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django-s3file/PYSEC-2022-208.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-4w8f-hjm9-xwgf">https://github.com/advisories/GHSA-4w8f-hjm9-xwgf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4w8f-hjm9-xwgf</uri>
        </author>
        <published>2022-06-06T21:24:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ganga] ganga before 8.5.10 allows absolute path traversal because the Flask send_file function is used unsafely]]></title>
        <id>https://github.com/advisories/GHSA-7488-6x3r-23w5</id>
        <link href="https://github.com/advisories/GHSA-7488-6x3r-23w5"/>
        <updated>2022-07-20T14:25:26.000Z</updated>
        <content type="html"><![CDATA[<p>The ganga-devs/ganga repository before 8.5.10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31507">https://nvd.nist.gov/vuln/detail/CVE-2022-31507</a></li>
<li><a href="https://github.com/github/securitylab/issues/669#issuecomment-1117265726">https://github.com/github/securitylab/issues/669#issuecomment-1117265726</a></li>
<li><a href="https://github.com/ganga-devs/ganga/commit/730e7aba192407d35eb37dd7938d49071124be8c">https://github.com/ganga-devs/ganga/commit/730e7aba192407d35eb37dd7938d49071124be8c</a></li>
<li><a href="https://github.com/ganga-devs/ganga/releases/tag/8.5.10">https://github.com/ganga-devs/ganga/releases/tag/8.5.10</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/ganga/PYSEC-2022-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/ganga/PYSEC-2022-225.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-7488-6x3r-23w5">https://github.com/advisories/GHSA-7488-6x3r-23w5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7488-6x3r-23w5</uri>
        </author>
        <published>2022-07-13T15:43:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mat2] mat2 before 0.13.0 allows directory traversal during the ZIP archive cleaning process.]]></title>
        <id>https://github.com/advisories/GHSA-f33p-9287-h552</id>
        <link href="https://github.com/advisories/GHSA-f33p-9287-h552"/>
        <updated>2022-07-20T16:51:41.000Z</updated>
        <content type="html"><![CDATA[<p>mat2 (aka metadata anonymisation toolkit) before 0.13.0 allows ../ directory traversal during the ZIP archive cleaning process. This primarily affects mat2 web instances, in which clients could obtain sensitive information via a crafted archive.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35410">https://nvd.nist.gov/vuln/detail/CVE-2022-35410</a></li>
<li><a href="https://0xacab.org/jvoisin/mat2/-/commit/beebca4bf1cd3b935824c966ce077e7bcf610385">https://0xacab.org/jvoisin/mat2/-/commit/beebca4bf1cd3b935824c966ce077e7bcf610385</a></li>
<li><a href="https://0xacab.org/jvoisin/mat2/-/issues/174">https://0xacab.org/jvoisin/mat2/-/issues/174</a></li>
<li><a href="https://dustri.org/b/mat2-0130.html">https://dustri.org/b/mat2-0130.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/mat2/PYSEC-2022-223.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/mat2/PYSEC-2022-223.yaml</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5185">https://www.debian.org/security/2022/dsa-5185</a></li>
<li><a href="https://github.com/advisories/GHSA-f33p-9287-h552">https://github.com/advisories/GHSA-f33p-9287-h552</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f33p-9287-h552</uri>
        </author>
        <published>2022-07-12T18:15:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rpc.py] rpc.py 0.6.0 vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-8rq8-f485-7v8x</id>
        <link href="https://github.com/advisories/GHSA-8rq8-f485-7v8x"/>
        <updated>2022-07-20T16:58:13.000Z</updated>
        <content type="html"><![CDATA[<p>rpc.py through 0.6.0 allows Remote Code Execution because an unpickle occurs when the "serializer: pickle" HTTP header is sent. In other words, although JSON (not Pickle) is the default data format, an unauthenticated client can cause the data to be processed with unpickle.</p>
<p><a href="https://github.com/abersheeran/rpc.py/issues/22">Per the maintainer</a>, rpc.py is not designed for an API that is open to the outside world, and external requests cannot reach rpc.py in real world use.</p>
<p>A <a href="https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd">fix</a> exists on the <code>master</code> branch. As a workaround, use the following code to turn off pickle in older versions:</p>
<p>```
del SERIALIZER_NAMES[PickleSerializer.name]
del SERIALIZER_TYPES[PickleSerializer.content_type]</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35411">https://nvd.nist.gov/vuln/detail/CVE-2022-35411</a></li>
<li><a href="https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd">https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd</a></li>
<li><a href="https://github.com/ehtec/rpcpy-exploit">https://github.com/ehtec/rpcpy-exploit</a></li>
<li><a href="https://medium.com/@elias.hohl/remote-code-execution-0-day-in-rpc-py-709c76690c30">https://medium.com/@elias.hohl/remote-code-execution-0-day-in-rpc-py-709c76690c30</a></li>
<li><a href="https://github.com/abersheeran/rpc.py/issues/22">https://github.com/abersheeran/rpc.py/issues/22</a></li>
<li><a href="https://github.com/advisories/GHSA-8rq8-f485-7v8x">https://github.com/advisories/GHSA-8rq8-f485-7v8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rq8-f485-7v8x</uri>
        </author>
        <published>2022-07-09T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[suds] Improper Link Resolution Before File Access in Suds]]></title>
        <id>https://github.com/advisories/GHSA-vpqp-hx68-p2wx</id>
        <link href="https://github.com/advisories/GHSA-vpqp-hx68-p2wx"/>
        <updated>2022-07-08T19:12:30.000Z</updated>
        <content type="html"><![CDATA[<p>cache.py in Suds 0.4, when tempdir is set to None, allows local users to redirect SOAP queries and possibly have other unspecified impact via a symlink attack on a cache file with a predictable name in /tmp/suds/.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-2217">https://nvd.nist.gov/vuln/detail/CVE-2013-2217</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=978696">https://bugzilla.redhat.com/show_bug.cgi?id=978696</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2013-07/msg00062.html">http://lists.opensuse.org/opensuse-updates/2013-07/msg00062.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2013/06/27/8">http://www.openwall.com/lists/oss-security/2013/06/27/8</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2008-1">http://www.ubuntu.com/usn/USN-2008-1</a></li>
<li><a href="https://github.com/advisories/GHSA-vpqp-hx68-p2wx">https://github.com/advisories/GHSA-vpqp-hx68-p2wx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpqp-hx68-p2wx</uri>
        </author>
        <published>2022-05-14T01:08:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pymongo] Use of NullPointerException Catch to Detect NULL Pointer Dereference in Pymongo]]></title>
        <id>https://github.com/advisories/GHSA-x33v-f3gp-gw2c</id>
        <link href="https://github.com/advisories/GHSA-x33v-f3gp-gw2c"/>
        <updated>2022-07-08T19:07:52.000Z</updated>
        <content type="html"><![CDATA[<p>bson/_cbsonmodule.c in the mongo-python-driver (aka. pymongo) before 2.5.2, as used in MongoDB, allows context-dependent attackers to cause a denial of service (NULL pointer dereference and crash) via vectors related to decoding of an "invalid DBRef."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-2132">https://nvd.nist.gov/vuln/detail/CVE-2013-2132</a></li>
<li><a href="https://github.com/mongodb/mongo-python-driver/commit/a060c15ef87e0f0e72974c7c0e57fe811bbd06a2">https://github.com/mongodb/mongo-python-driver/commit/a060c15ef87e0f0e72974c7c0e57fe811bbd06a2</a></li>
<li><a href="https://jira.mongodb.org/browse/PYTHON-532">https://jira.mongodb.org/browse/PYTHON-532</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=710597">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=710597</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2013-06/msg00180.html">http://lists.opensuse.org/opensuse-updates/2013-06/msg00180.html</a></li>
<li><a href="http://seclists.org/oss-sec/2013/q2/447">http://seclists.org/oss-sec/2013/q2/447</a></li>
<li><a href="http://ubuntu.com/usn/usn-1897-1">http://ubuntu.com/usn/usn-1897-1</a></li>
<li><a href="http://www.debian.org/security/2013/dsa-2705">http://www.debian.org/security/2013/dsa-2705</a></li>
<li><a href="http://www.osvdb.org/93804">http://www.osvdb.org/93804</a></li>
<li><a href="http://www.securityfocus.com/bid/60252">http://www.securityfocus.com/bid/60252</a></li>
<li><a href="https://github.com/advisories/GHSA-x33v-f3gp-gw2c">https://github.com/advisories/GHSA-x33v-f3gp-gw2c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x33v-f3gp-gw2c</uri>
        </author>
        <published>2022-05-14T02:10:10.000Z</published>
    </entry>
</feed>