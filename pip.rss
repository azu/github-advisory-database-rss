<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-09-02T12:01:41.722Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[jupyter-core] Execution with Unnecessary Privileges in JupyterApp]]></title>
        <id>https://github.com/advisories/GHSA-m678-f26j-3hrp</id>
        <link href="https://github.com/advisories/GHSA-m678-f26j-3hrp"/>
        <updated>2023-09-02T05:06:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em>
Weâ€™d like to disclose an arbitrary code execution vulnerability in <code>jupyter_core</code> that stems from <code>jupyter_core</code> executing untrusted files in the current working directory. This vulnerability allows one user to run code as another.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em>
Users should upgrade to <code>jupyter_core&gt;=4.11.2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
No</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em>
Similar advisory in <a href="https://github.com/advisories/GHSA-pq7m-3gw7-gq5x">IPython</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jupyter/jupyter_core/security/advisories/GHSA-m678-f26j-3hrp">https://github.com/jupyter/jupyter_core/security/advisories/GHSA-m678-f26j-3hrp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39286">https://nvd.nist.gov/vuln/detail/CVE-2022-39286</a></li>
<li><a href="https://github.com/jupyter/jupyter_core/commit/1118c8ce01800cb689d51f655f5ccef19516e283">https://github.com/jupyter/jupyter_core/commit/1118c8ce01800cb689d51f655f5ccef19516e283</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-core/PYSEC-2022-42974.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/jupyter-core/PYSEC-2022-42974.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/11/msg00022.html">https://lists.debian.org/debian-lts-announce/2022/11/msg00022.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202301-04">https://security.gentoo.org/glsa/202301-04</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KKMP5OXXIX2QAUNVNJZ5UEQFKDYYJVBA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KKMP5OXXIX2QAUNVNJZ5UEQFKDYYJVBA/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YIDN7JMLK6AOMBQI4QPSW4MBQGWQ5NIN/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/YIDN7JMLK6AOMBQI4QPSW4MBQGWQ5NIN/</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5422">https://www.debian.org/security/2023/dsa-5422</a></li>
<li><a href="https://github.com/advisories/GHSA-m678-f26j-3hrp">https://github.com/advisories/GHSA-m678-f26j-3hrp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m678-f26j-3hrp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-26T22:07:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mistune] Cross-site Scripting in Mistune]]></title>
        <id>https://github.com/advisories/GHSA-hpv5-v8g5-c864</id>
        <link href="https://github.com/advisories/GHSA-hpv5-v8g5-c864"/>
        <updated>2023-09-02T05:06:12.000Z</updated>
        <content type="html"><![CDATA[<p>mistune.py in Mistune 0.7.4 allows XSS via an unexpected newline (such as in java\nscript:) or a crafted email address, related to the escape and autolink functions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-15612">https://nvd.nist.gov/vuln/detail/CVE-2017-15612</a></li>
<li><a href="https://github.com/lepture/mistune/pull/140">https://github.com/lepture/mistune/pull/140</a></li>
<li><a href="https://github.com/advisories/GHSA-hpv5-v8g5-c864">https://github.com/advisories/GHSA-hpv5-v8g5-c864</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/mistune/PYSEC-2017-80.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/mistune/PYSEC-2017-80.yaml</a></li>
<li><a href="https://github.com/lepture/mistune/commit/d6f0b6402299bf5a380e7b4e77bd80e8736630fe">https://github.com/lepture/mistune/commit/d6f0b6402299bf5a380e7b4e77bd80e8736630fe</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hpv5-v8g5-c864</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:26:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Vulnerable to MySQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-wqjj-hx84-v449</id>
        <link href="https://github.com/advisories/GHSA-wqjj-hx84-v449"/>
        <updated>2023-09-02T05:05:44.000Z</updated>
        <content type="html"><![CDATA[<p>The (1) FilePathField, (2) GenericIPAddressField, and (3) IPAddressField model field classes in Django before 1.4.11, 1.5.x before 1.5.6, 1.6.x before 1.6.3, and 1.7.x before 1.7 beta 2 do not properly perform type conversion, which allows remote attackers to have unspecified impact and vectors, related to "MySQL typecasting."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0474">https://nvd.nist.gov/vuln/detail/CVE-2014-0474</a></li>
<li><a href="https://www.djangoproject.com/weblog/2014/apr/21/security/">https://www.djangoproject.com/weblog/2014/apr/21/security/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html">http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0456.html">http://rhn.redhat.com/errata/RHSA-2014-0456.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2014-0457.html">http://rhn.redhat.com/errata/RHSA-2014-0457.html</a></li>
<li><a href="http://www.debian.org/security/2014/dsa-2934">http://www.debian.org/security/2014/dsa-2934</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2169-1">http://www.ubuntu.com/usn/USN-2169-1</a></li>
<li><a href="https://github.com/django/django/commit/5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292">https://github.com/django/django/commit/5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292</a></li>
<li><a href="https://github.com/django/django/commit/985434fb1d6bf2335bf96c6ebf91c3674f1f399f">https://github.com/django/django/commit/985434fb1d6bf2335bf96c6ebf91c3674f1f399f</a></li>
<li><a href="https://github.com/django/django/commit/aa80f498de6d687e613860933ac58433ab71ea4b">https://github.com/django/django/commit/aa80f498de6d687e613860933ac58433ab71ea4b</a></li>
<li><a href="https://github.com/advisories/GHSA-wqjj-hx84-v449">https://github.com/advisories/GHSA-wqjj-hx84-v449</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wqjj-hx84-v449</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-17T03:07:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Middleware Enables Session Hijacking]]></title>
        <id>https://github.com/advisories/GHSA-625g-gx8c-xcmg</id>
        <link href="https://github.com/advisories/GHSA-625g-gx8c-xcmg"/>
        <updated>2023-09-02T05:05:05.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>contrib.auth.middleware.RemoteUserMiddleware</code> middleware in Django before 1.4.14, 1.5.x before 1.5.9, 1.6.x before 1.6.6, and 1.7 before release candidate 3, when using the <code>contrib.auth.backends.RemoteUserBackend</code> backend, allows remote authenticated users to hijack web sessions via vectors related to the <code>REMOTE_USER</code> header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-0482">https://nvd.nist.gov/vuln/detail/CVE-2014-0482</a></li>
<li><a href="https://www.djangoproject.com/weblog/2014/aug/20/security/">https://www.djangoproject.com/weblog/2014/aug/20/security/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html">http://lists.opensuse.org/opensuse-updates/2014-09/msg00023.html</a></li>
<li><a href="http://www.debian.org/security/2014/dsa-3010">http://www.debian.org/security/2014/dsa-3010</a></li>
<li><a href="https://github.com/django/django/commit/0268b855f9eab3377f2821164ef3e66037789e09">https://github.com/django/django/commit/0268b855f9eab3377f2821164ef3e66037789e09</a></li>
<li><a href="https://github.com/django/django/commit/5307ce565fbedb9cc27cbe7c757b41a00438d37c">https://github.com/django/django/commit/5307ce565fbedb9cc27cbe7c757b41a00438d37c</a></li>
<li><a href="https://github.com/django/django/commit/c9e3b9949cd55f090591fbdc4a114fcb8368b6d9">https://github.com/django/django/commit/c9e3b9949cd55f090591fbdc4a114fcb8368b6d9</a></li>
<li><a href="https://github.com/django/django/commit/dd68f319b365f6cb38c5a6c106faf4f6142d7d88">https://github.com/django/django/commit/dd68f319b365f6cb38c5a6c106faf4f6142d7d88</a></li>
<li><a href="https://github.com/django/django/blob/aa3cb3f37265be37d892e2b391ff023e9caee2a4/docs/releases/1.5.9.txt#L42">https://github.com/django/django/blob/aa3cb3f37265be37d892e2b391ff023e9caee2a4/docs/releases/1.5.9.txt#L42</a></li>
<li><a href="https://github.com/advisories/GHSA-625g-gx8c-xcmg">https://github.com/advisories/GHSA-625g-gx8c-xcmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-625g-gx8c-xcmg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:09:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyxdg] pyxdg Arbitrary File Overwrite via Race Condition]]></title>
        <id>https://github.com/advisories/GHSA-7372-q459-jxhr</id>
        <link href="https://github.com/advisories/GHSA-7372-q459-jxhr"/>
        <updated>2023-09-02T05:04:51.000Z</updated>
        <content type="html"><![CDATA[<p>Race condition in the <code>xdg.BaseDirectory.get_runtime_dir</code> function in pyxdg 0.25 allows local users to overwrite arbitrary files by pre-creating <code>/tmp/pyxdg-runtime-dir-fallback-victim</code> to point to a victim-owned location, then replacing it with a symlink to an attacker-controlled location once the <code>get_runtime_dir</code> function is called.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-1624">https://nvd.nist.gov/vuln/detail/CVE-2014-1624</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/90618">https://exchange.xforce.ibmcloud.com/vulnerabilities/90618</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736247">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=736247</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2014/01/21/3">http://www.openwall.com/lists/oss-security/2014/01/21/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2014/01/21/4">http://www.openwall.com/lists/oss-security/2014/01/21/4</a></li>
<li><a href="https://github.com/takluyver/pyxdg/commit/bd999c1c3fe7ee5f30ede2cf704cf03e400347b4">https://github.com/takluyver/pyxdg/commit/bd999c1c3fe7ee5f30ede2cf704cf03e400347b4</a></li>
<li><a href="https://web.archive.org/web/20200227194825/http://www.securityfocus.com/bid/65042">https://web.archive.org/web/20200227194825/http://www.securityfocus.com/bid/65042</a></li>
<li><a href="https://github.com/advisories/GHSA-7372-q459-jxhr">https://github.com/advisories/GHSA-7372-q459-jxhr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7372-q459-jxhr</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-17T01:27:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[starlette] Starlette has Path Traversal vulnerability in StaticFiles]]></title>
        <id>https://github.com/advisories/GHSA-v5gw-mw7f-84px</id>
        <link href="https://github.com/advisories/GHSA-v5gw-mw7f-84px"/>
        <updated>2023-09-02T05:04:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When using <code>StaticFiles</code>, if there's a file or directory that starts with the same name as the <code>StaticFiles</code> directory, that file or directory is also exposed via <code>StaticFiles</code> which is a path traversal vulnerability.</p>
<h3 id="details">Details</h3>
<p>The root cause of this issue is the usage of <code>os.path.commonprefix()</code>:
<a href="https://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174">https://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174</a></p>
<p>As stated in the Python documentation (<a href="https://docs.python.org/3/library/os.path.html#os.path.commonprefix">https://docs.python.org/3/library/os.path.html#os.path.commonprefix</a>) this function returns the longest prefix common to paths.</p>
<p>When passing a path like <code>/static/../static1.txt</code>, <code>os.path.commonprefix([full_path, directory])</code> returns <code>./static</code> which is the common part of <code>./static1.txt</code> and <code>./static</code>, It refers to <code>/static/../static1.txt</code> because it is considered in the staticfiles directory. As a result, it becomes possible to view files that should not be open to the public.</p>
<p>The solution is to use <code>os.path.commonpath</code> as the Python documentation explains that <code>os.path.commonprefix</code> works a character at a time, it does not treat the arguments as paths.</p>
<h3 id="poc">PoC</h3>
<p>In order to reproduce the issue, you need to create the following structure:</p>
<pre><code>â”œâ”€â”€ static
â”‚   â”œâ”€â”€ index.html
â”œâ”€â”€ static_disallow
â”‚   â”œâ”€â”€ index.html
â””â”€â”€ static1.txt
</code></pre>
<p>And run the <code>Starlette</code> app with:</p>
<pre><code class="language-py">import uvicorn
from starlette.applications import Starlette
from starlette.routing import Mount
from starlette.staticfiles import StaticFiles


routes = [
    Mount("/static", app=StaticFiles(directory="static", html=True), name="static"),
]

app = Starlette(routes=routes)


if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)
</code></pre>
<p>And running the commands:</p>
<pre><code class="language-shell">curl --path-as-is 'localhost:8000/static/../static_disallow/'
curl --path-as-is 'localhost:8000/static/../static1.txt'
</code></pre>
<p>The <code>static1.txt</code> and the directory <code>static_disallow</code> are exposed.</p>
<h3 id="impact">Impact</h3>
<p>Confidentiality is breached: An attacker may obtain files that should not be open to the public.</p>
<h3 id="credits">Credits</h3>
<p>Security researcher <strong>Masashi Yamane of LAC Co., Ltd</strong> reported this vulnerability to <strong>JPCERT/CC Vulnerability Coordination Group</strong> and they contacted us to coordinate a patch for the security issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px">https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px</a></li>
<li><a href="https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3">https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3</a></li>
<li><a href="https://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174">https://github.com/encode/starlette/blob/4bab981d9e870f6cee1bd4cd59b87ddaf355b2dc/starlette/staticfiles.py#L172-L174</a></li>
<li><a href="https://github.com/encode/starlette/releases/tag/0.27.0">https://github.com/encode/starlette/releases/tag/0.27.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29159">https://nvd.nist.gov/vuln/detail/CVE-2023-29159</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/starlette/PYSEC-2023-83.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/starlette/PYSEC-2023-83.yaml</a></li>
<li><a href="https://jvn.jp/en/jp/JVN95981715/">https://jvn.jp/en/jp/JVN95981715/</a></li>
<li><a href="https://github.com/advisories/GHSA-v5gw-mw7f-84px">https://github.com/advisories/GHSA-v5gw-mw7f-84px</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5gw-mw7f-84px</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-17T03:49:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[requests] Unintended leak of Proxy-Authorization header in requests]]></title>
        <id>https://github.com/advisories/GHSA-j8r2-6x86-q33q</id>
        <link href="https://github.com/advisories/GHSA-j8r2-6x86-q33q"/>
        <updated>2023-09-02T05:03:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Since Requests v2.3.0, Requests has been vulnerable to potentially leaking <code>Proxy-Authorization</code> headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how <code>rebuild_proxies</code> is used to recompute and <a href="https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328">reattach the <code>Proxy-Authorization</code> header</a> to requests when redirected. Note this behavior has <em>only</em> been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. <code>https://username:password@proxy:8080</code>).</p>
<p><strong>Current vulnerable behavior(s):</strong></p>
<ol>
<li>HTTP â†’ HTTPS: <strong>leak</strong></li>
<li>HTTPS â†’ HTTP: <strong>no leak</strong></li>
<li>HTTPS â†’ HTTPS: <strong>leak</strong></li>
<li>HTTP â†’ HTTP: <strong>no leak</strong></li>
</ol>
<p>For HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the <code>Proxy-Authorization</code> header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.</p>
<p>The reason this currently works for HTTPS connections in Requests is the <code>Proxy-Authorization</code> header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with <a href="https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235"><code>proxy_manager_for</code></a>. This will compute the required proxy headers in <code>proxy_headers</code> and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.</p>
<h3 id="patches">Patches</h3>
<p>Starting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3's ProxyManager.</p>
<p>For users with custom adapters, this <em>may</em> be potentially breaking if you were already working around this behavior. The previous functionality of <code>rebuild_proxies</code> doesn't make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.</p>
<h3 id="workarounds">Workarounds</h3>
<p>For users who are not able to update Requests immediately, there is one potential workaround.</p>
<p>You may disable redirects by setting <code>allow_redirects</code> to <code>False</code> on all calls through Requests top-level APIs. Note that if you're currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.</p>
<pre><code>import requests
r = requests.get('http://github.com/', allow_redirects=False)
</code></pre>
<h3 id="credits">Credits</h3>
<p>This vulnerability was discovered and disclosed by the following individuals.</p>
<p>Dennis Brinkrolf, Haxolot (<a href="https://haxolot.com/">https://haxolot.com/</a>)
Tobias Funke, (<a href="mailto:tobiasfunke93@gmail.com">tobiasfunke93@gmail.com</a>)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q">https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q</a></li>
<li><a href="https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5">https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32681">https://nvd.nist.gov/vuln/detail/CVE-2023-32681</a></li>
<li><a href="https://github.com/psf/requests/releases/tag/v2.31.0">https://github.com/psf/requests/releases/tag/v2.31.0</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AW7HNFGYP44RT3DUDQXG2QT3OEV2PJ7Y/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AW7HNFGYP44RT3DUDQXG2QT3OEV2PJ7Y/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/requests/PYSEC-2023-74.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/requests/PYSEC-2023-74.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KOYASTZDGQG2BWLSNBPL3TQRL2G7QYNZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KOYASTZDGQG2BWLSNBPL3TQRL2G7QYNZ/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/06/msg00018.html">https://lists.debian.org/debian-lts-announce/2023/06/msg00018.html</a></li>
<li><a href="https://github.com/advisories/GHSA-j8r2-6x86-q33q">https://github.com/advisories/GHSA-j8r2-6x86-q33q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8r2-6x86-q33q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T20:36:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pymdown-extensions] Any file can be included with the pymdown-snippets extension]]></title>
        <id>https://github.com/advisories/GHSA-jh85-wwv9-24hv</id>
        <link href="https://github.com/advisories/GHSA-jh85-wwv9-24hv"/>
        <updated>2023-09-02T05:03:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Arbitrary file read when using include file syntax.</p>
<h3 id="details">Details</h3>
<p>By using the syntax <code>--8&lt;--"/etc/passwd"</code> or <code>--8&lt;--"/proc/self/environ"</code> the content of these files will be rendered in the generated documentation. Additionally, a path relative to a specified, allowed base path can also be used to render the content of a file outside the specified base paths: <code>--8&lt;-- "../../../../etc/passwd"</code>.</p>
<p>Within the Snippets extension, there exists a <code>base_path</code> option but the implementation is vulnerable to Directory Traversal.
The vulnerable section exists in <code>get_snippet_path(self, path)</code> lines 155 to 174 in snippets.py.</p>
<pre><code>base = "docs"
path = "/etc/passwd"
filename = os.path.join(base,path) # Filename is now /etc/passwd
</code></pre>
<h3 id="poc">PoC</h3>
<pre><code class="language-py">import markdown

payload = "--8&lt;-- \"/etc/passwd\""
html = markdown.markdown(payload, extensions=['pymdownx.snippets'])

print(html)
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any readable file on the host where the plugin is executing may have its content exposed. This can impact any use of Snippets that exposes the use of Snippets to external users. </p>
<p>It is never recommended to use Snippets to process user-facing, dynamic content. It is designed to process known content on the backend under the control of the host, but if someone were to accidentally enable it for user-facing content, undesired information could be exposed.</p>
<h3 id="suggestion">Suggestion</h3>
<p>Specified snippets should be restricted to the configured, specified base paths as a safe default. Allowing relative or absolute paths that escape the specified base paths would need to be behind a feature switch that must be opt-in and would be at the developer's own risk.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/facelessuser/pymdown-extensions/security/advisories/GHSA-jh85-wwv9-24hv">https://github.com/facelessuser/pymdown-extensions/security/advisories/GHSA-jh85-wwv9-24hv</a></li>
<li><a href="https://github.com/facelessuser/pymdown-extensions/commit/b7bb4878d6017c03c8dc97c42d8d3bb6ee81db9d">https://github.com/facelessuser/pymdown-extensions/commit/b7bb4878d6017c03c8dc97c42d8d3bb6ee81db9d</a></li>
<li><a href="https://github.com/facelessuser/pymdown-extensions/releases/tag/10.0">https://github.com/facelessuser/pymdown-extensions/releases/tag/10.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32309">https://nvd.nist.gov/vuln/detail/CVE-2023-32309</a></li>
<li><a href="https://github.com/advisories/GHSA-jh85-wwv9-24hv">https://github.com/advisories/GHSA-jh85-wwv9-24hv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh85-wwv9-24hv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-15T20:50:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nvflare] Unsafe deserialisation in the PKI implementation scheme of NVFlare]]></title>
        <id>https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</id>
        <link href="https://github.com/advisories/GHSA-rcxc-3w2m-mp8h"/>
        <updated>2023-09-02T05:03:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>NVFLARE contains a vulnerability in its PKI implementation module, where The CA credentials are transported via pickle and no safe deserialization. The deserialization of Untrusted Data may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.
All versions before 2.1.2 are affected.</p>
<p>CVSS Score = 9.8
<a href="https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&amp;data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&amp;reserved=0">AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</a></p>
<h3 id="patches">Patches</h3>
<p>The patch will be included in nvflare==2.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Replace pickle serialization with JSON and change the code accordingly</p>
<p>Additional information
Issue Found by: Oliver Sellwood (@Nintorac)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-rcxc-3w2m-mp8h">https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-rcxc-3w2m-mp8h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31604">https://nvd.nist.gov/vuln/detail/CVE-2022-31604</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-231.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-231.yaml</a></li>
<li><a href="https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67">https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67</a></li>
<li><a href="https://github.com/advisories/GHSA-rcxc-3w2m-mp8h">https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcxc-3w2m-mp8h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-06-22T21:22:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-libnmap] Argument injection in python-libnmap]]></title>
        <id>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</id>
        <link href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6"/>
        <updated>2023-09-02T05:03:15.000Z</updated>
        <content type="html"><![CDATA[<p>In the python-libnmap package through 0.7.2 for Python, remote command execution can occur (if used in a client application that does not validate arguments).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30284">https://nvd.nist.gov/vuln/detail/CVE-2022-30284</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases">https://github.com/savon-noir/python-libnmap/releases</a></li>
<li><a href="https://pypi.org/project/python-libnmap/">https://pypi.org/project/python-libnmap/</a></li>
<li><a href="https://www.swascan.com/security-advisory-libnmap-2/">https://www.swascan.com/security-advisory-libnmap-2/</a></li>
<li><a href="https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process">https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64">https://github.com/savon-noir/python-libnmap/commit/c36fecde90017befeb4853396d0e2aac93c95b64</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3">https://github.com/savon-noir/python-libnmap/releases/tag/v0.7.3</a></li>
<li><a href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6">https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-06T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[IPython] IPython vulnerable to command injection via set_term_title]]></title>
        <id>https://github.com/advisories/GHSA-29gw-9793-fvw7</id>
        <link href="https://github.com/advisories/GHSA-29gw-9793-fvw7"/>
        <updated>2023-09-02T05:03:05.000Z</updated>
        <content type="html"><![CDATA[<p>IPython provides an interactive Python shell and Jupyter kernel to use Python interactively. Versions prior to 8.10.0 are vulnerable to command injection in the <code>set_term_title</code> <a href="https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117">function</a> under specific conditions. This has been patched in version 8.10.0.</p>
<h3 id="impact">Impact</h3>
<p>Users are only vulnerable when calling this function in Windows in a Python environment where <a href="https://docs.python.org/3/library/ctypes.html">ctypes</a> is not available. The dependency on ctypes in <code>IPython.utils._process_win32</code> prevents the vulnerable code from ever being reached (making it effectively dead code). However, as a library that could be used by another tool, <code>set_term_title</code> could introduce a vulnerability for dependencies. Currently <code>set_term_title</code> is only called with (semi-)trusted input that contain the current working directory of the current IPython session. If an attacker can control directory names, and manage to get a user to <code>cd</code> into this directory, then the attacker can execute arbitrary commands contained in the folder names.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7">https://github.com/ipython/ipython/security/advisories/GHSA-29gw-9793-fvw7</a></li>
<li><a href="https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f">https://github.com/ipython/ipython/commit/385d69325319a5972ee9b5983638e3617f21cb1f</a></li>
<li><a href="https://github.com/ipython/ipython/commit/991849c247fc208628879e7ca2923b3c218a5a75">https://github.com/ipython/ipython/commit/991849c247fc208628879e7ca2923b3c218a5a75</a></li>
<li><a href="https://github.com/Carreau/ipython/blob/7557ade0ed927475d5ab5b573d0ea4febfb22683/docs/source/whatsnew/version8.rst#ipython-810">https://github.com/Carreau/ipython/blob/7557ade0ed927475d5ab5b573d0ea4febfb22683/docs/source/whatsnew/version8.rst#ipython-810</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-24816">https://nvd.nist.gov/vuln/detail/CVE-2023-24816</a></li>
<li><a href="https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117">https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117</a></li>
<li><a href="https://github.com/ipython/ipython/blob/56e6925dfa50e2c7f4a6471547b8176275db7c25/IPython/utils/_process_win32.py#L20">https://github.com/ipython/ipython/blob/56e6925dfa50e2c7f4a6471547b8176275db7c25/IPython/utils/_process_win32.py#L20</a></li>
<li><a href="https://github.com/advisories/GHSA-29gw-9793-fvw7">https://github.com/advisories/GHSA-29gw-9793-fvw7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29gw-9793-fvw7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-10T19:55:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ubi-reader] Path traversal in ubi-reader]]></title>
        <id>https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</id>
        <link href="https://github.com/advisories/GHSA-vp2x-3mc3-3cj4"/>
        <updated>2023-09-02T05:03:05.000Z</updated>
        <content type="html"><![CDATA[<p>ubireader_extract_files is vulnerable to path traversal when run against specifically crafted UBIFS files, allowing the attacker to overwrite files outside of the extraction directory (provided the process has write access to that file or directory). This is due to the fact that a node name (dent_node.name) is considered trusted and joined to the extraction directory path during processing, then the node content is written to that joined path. By crafting a malicious UBIFS file with node names holding path traversal payloads (e.g. ../../tmp/outside.txt), it's possible to force ubi_reader to write outside of the extraction directory. This issue affects ubi-reader before 0.8.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-0591">https://nvd.nist.gov/vuln/detail/CVE-2023-0591</a></li>
<li><a href="https://github.com/jrspruitt/ubi_reader/pull/57">https://github.com/jrspruitt/ubi_reader/pull/57</a></li>
<li><a href="https://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk/">https://onekey.com/blog/security-advisory-remote-command-execution-in-binwalk/</a></li>
<li><a href="https://github.com/jrspruitt/ubi_reader/commit/d5d68e6b1b9f7070c29df5f67fc060f579ae9139">https://github.com/jrspruitt/ubi_reader/commit/d5d68e6b1b9f7070c29df5f67fc060f579ae9139</a></li>
<li><a href="https://github.com/advisories/GHSA-vp2x-3mc3-3cj4">https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp2x-3mc3-3cj4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-31T12:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pillow] Pillow subject to DoS via SAMPLESPERPIXEL tag]]></title>
        <id>https://github.com/advisories/GHSA-q4mp-jvh2-76fj</id>
        <link href="https://github.com/advisories/GHSA-q4mp-jvh2-76fj"/>
        <updated>2023-09-02T05:03:04.000Z</updated>
        <content type="html"><![CDATA[<p>Pillow starting with 9.2.0 and prior to 9.3.0 allows denial of service via SAMPLESPERPIXEL. A large value in the SAMPLESPERPIXEL tag could lead to a memory and runtime DOS in TiffImagePlugin.py when setting up the context for image decoding. This issue has been patched in version 9.3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45199">https://nvd.nist.gov/vuln/detail/CVE-2022-45199</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/6700">https://github.com/python-pillow/Pillow/pull/6700</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3">https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3</a></li>
<li><a href="https://bugs.gentoo.org/878769">https://bugs.gentoo.org/878769</a></li>
<li><a href="https://github.com/python-pillow/Pillow/releases/tag/9.3.0">https://github.com/python-pillow/Pillow/releases/tag/9.3.0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-42980.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2022-42980.yaml</a></li>
<li><a href="https://security.gentoo.org/glsa/202211-10">https://security.gentoo.org/glsa/202211-10</a></li>
<li><a href="https://github.com/advisories/GHSA-q4mp-jvh2-76fj">https://github.com/advisories/GHSA-q4mp-jvh2-76fj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q4mp-jvh2-76fj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-14T12:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keylime] Tenant and Verifier might not use the same registrar data]]></title>
        <id>https://github.com/advisories/GHSA-jf66-3q76-h5p5</id>
        <link href="https://github.com/advisories/GHSA-jf66-3q76-h5p5"/>
        <updated>2023-09-02T05:02:56.000Z</updated>
        <content type="html"><![CDATA[<p>Keylime does not enforce that the agent registrar data is the same when the tenant uses it for validation of the EK and identity quote and the verifier for validating the integrity quote. This allows an attacker to use one AK, EK pair from a real TPM to pass EK validation and give the verifier an AK of a software TPM. A successful attack breaks the entire chain of trust because a not validated AK is used by the verifier. This issue is worse if the validation happens first and then the agent gets added to the verifier because the timing is easier and the verifier does not validate the regcount entry being equal to 1. At this time, there are no known workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/keylime/keylime/security/advisories/GHSA-jf66-3q76-h5p5">https://github.com/keylime/keylime/security/advisories/GHSA-jf66-3q76-h5p5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1053">https://nvd.nist.gov/vuln/detail/CVE-2022-1053</a></li>
<li><a href="https://github.com/keylime/keylime/commit/bd5de712acdd77860e7dc58969181e16c7a8dc5d">https://github.com/keylime/keylime/commit/bd5de712acdd77860e7dc58969181e16c7a8dc5d</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2065024,">https://bugzilla.redhat.com/show_bug.cgi?id=2065024,</a></li>
<li><a href="https://github.com/advisories/GHSA-jf66-3q76-h5p5">https://github.com/advisories/GHSA-jf66-3q76-h5p5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2022-184.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2022-184.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A7WAKVXM7L5D2DUACV6EHA6EJNAX2GVL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A7WAKVXM7L5D2DUACV6EHA6EJNAX2GVL/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RF6QHU4UGSBATC3HOOE7OP66CYVTR7CV/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RF6QHU4UGSBATC3HOOE7OP66CYVTR7CV/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WEW2PAXO5YGLDLPG45YV2OPLJXJSCECQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WEW2PAXO5YGLDLPG45YV2OPLJXJSCECQ/</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jf66-3q76-h5p5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-05T15:59:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyanyapi] Unsafe pyyaml load usage in PyAnyAPI]]></title>
        <id>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</id>
        <link href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r"/>
        <updated>2023-09-02T05:02:55.000Z</updated>
        <content type="html"><![CDATA[<p>An exploitable vulnerability exists in the YAML parsing functionality in the YAMLParser method in Interfaces.py in PyAnyAPI before 0.6.1. A YAML parser can execute arbitrary Python commands resulting in command execution because <code>load</code> is used where <code>safe_load</code> should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16616">https://nvd.nist.gov/vuln/detail/CVE-2017-16616</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/issues/41">https://github.com/Stranger6667/pyanyapi/issues/41</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1">https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1</a></li>
<li><a href="https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/">https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/</a></li>
<li><a href="https://pypi.python.org/pypi/pyanyapi/0.6.1">https://pypi.python.org/pypi/pyanyapi/0.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r">https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pyanyapi/PYSEC-2017-23.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pyanyapi/PYSEC-2017-23.yaml</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/commit/810db626c18ebc261d5f4299d0f0eac38d5eb3cf">https://github.com/Stranger6667/pyanyapi/commit/810db626c18ebc261d5f4299d0f0eac38d5eb3cf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:44:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cryptography] cryptography mishandles SSH certificates]]></title>
        <id>https://github.com/advisories/GHSA-cf7p-gm2m-833m</id>
        <link href="https://github.com/advisories/GHSA-cf7p-gm2m-833m"/>
        <updated>2023-09-02T05:02:51.000Z</updated>
        <content type="html"><![CDATA[<p>The cryptography package before 41.0.2 for Python mishandles SSH certificates that have critical options.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38325">https://nvd.nist.gov/vuln/detail/CVE-2023-38325</a></li>
<li><a href="https://github.com/pyca/cryptography/issues/9207">https://github.com/pyca/cryptography/issues/9207</a></li>
<li><a href="https://github.com/pyca/cryptography/pull/9208">https://github.com/pyca/cryptography/pull/9208</a></li>
<li><a href="https://github.com/pyca/cryptography/compare/41.0.1...41.0.2">https://github.com/pyca/cryptography/compare/41.0.1...41.0.2</a></li>
<li><a href="https://pypi.org/project/cryptography/#history">https://pypi.org/project/cryptography/#history</a></li>
<li><a href="https://github.com/pyca/cryptography/commit/1ca7adc97b76a9dfbd3d850628b613eb93b78fc3">https://github.com/pyca/cryptography/commit/1ca7adc97b76a9dfbd3d850628b613eb93b78fc3</a></li>
<li><a href="https://github.com/pyca/cryptography/pull/7960">https://github.com/pyca/cryptography/pull/7960</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/cryptography/PYSEC-2023-112.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/cryptography/PYSEC-2023-112.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NMCCTYY3CSNQBFFYYC5DAV6KATHWCUZK/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NMCCTYY3CSNQBFFYYC5DAV6KATHWCUZK/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230824-0010/">https://security.netapp.com/advisory/ntap-20230824-0010/</a></li>
<li><a href="https://github.com/advisories/GHSA-cf7p-gm2m-833m">https://github.com/advisories/GHSA-cf7p-gm2m-833m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cf7p-gm2m-833m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-14T21:31:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[urllib3] Catastrophic backtracking in URL authority parser when passed URL containing many @ characters]]></title>
        <id>https://github.com/advisories/GHSA-q2q7-5pp4-w6pg</id>
        <link href="https://github.com/advisories/GHSA-q2q7-5pp4-w6pg"/>
        <updated>2023-09-02T05:02:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When provided with a URL containing many <code>@</code> characters in the authority component the authority regular expression exhibits catastrophic backtracking causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in urllib3 v1.26.5.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33503">CVE-2021-33503</a></li>
<li><a href="https://jvn.jp/en/vu/JVNVU92413403/">JVNVU#92413403 (English)</a></li>
<li><a href="https://jvn.jp/vu/JVNVU92413403/">JVNVU#92413403 (Japanese)</a></li>
<li><a href="https://github.com/urllib3/urllib3/releases/tag/1.26.5">urllib3 v1.26.5</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Ask in our <a href="https://discord.gg/urllib3">community Discord</a></li>
<li>Email <a href="mailto:sethmichaellarson@gmail.com">sethmichaellarson@gmail.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/urllib3/urllib3/security/advisories/GHSA-q2q7-5pp4-w6pg">https://github.com/urllib3/urllib3/security/advisories/GHSA-q2q7-5pp4-w6pg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-33503">https://nvd.nist.gov/vuln/detail/CVE-2021-33503</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec">https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec</a></li>
<li><a href="https://github.com/advisories/GHSA-q2q7-5pp4-w6pg">https://github.com/advisories/GHSA-q2q7-5pp4-w6pg</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMUGWEAUYGGHTPPXT6YBD53WYXQGVV73/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FMUGWEAUYGGHTPPXT6YBD53WYXQGVV73/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6SCV7ZNAHS3E6PBFLJGENCDRDRWRZZ6W/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6SCV7ZNAHS3E6PBFLJGENCDRDRWRZZ6W/</a></li>
<li><a href="https://security.gentoo.org/glsa/202107-36">https://security.gentoo.org/glsa/202107-36</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://github.com/urllib3/urllib3/commit/5b047b645f5f93900d5e2fc31230848c25eb1f5f#diff-52026d639119bf1e0364836b4e8a18bd9ed3c95c6ba39b26534a5057a65e35bbR65">https://github.com/urllib3/urllib3/commit/5b047b645f5f93900d5e2fc31230848c25eb1f5f#diff-52026d639119bf1e0364836b4e8a18bd9ed3c95c6ba39b26534a5057a65e35bbR65</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q2q7-5pp4-w6pg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-01T21:19:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[opendiamond] SatyaLab opendiamond 10.1.1 vulnerable to path traversal because Flask send_file function used unsafely]]></title>
        <id>https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</id>
        <link href="https://github.com/advisories/GHSA-x2pc-fqrw-hc7f"/>
        <updated>2023-09-02T05:02:49.000Z</updated>
        <content type="html"><![CDATA[<p>The cmusatyalab/opendiamond repository through 10.1.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely. A patch is available on the <code>master</code> branch of the repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31506">https://nvd.nist.gov/vuln/detail/CVE-2022-31506</a></li>
<li><a href="https://github.com/github/securitylab/issues/669#issuecomment-1117265726">https://github.com/github/securitylab/issues/669#issuecomment-1117265726</a></li>
<li><a href="https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56">https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56</a></li>
<li><a href="https://github.com/cmusatyalab/opendiamond/issues/52">https://github.com/cmusatyalab/opendiamond/issues/52</a></li>
<li><a href="https://github.com/advisories/GHSA-x2pc-fqrw-hc7f">https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-07-12T00:00:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nvflare] Unsafe yaml deserialization in NVFlare]]></title>
        <id>https://github.com/advisories/GHSA-hrf3-622q-8366</id>
        <link href="https://github.com/advisories/GHSA-hrf3-622q-8366"/>
        <updated>2023-09-02T05:02:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>NVFLARE contains a vulnerability in its utils module, where YAML files are loaded via yaml.load() instead of yaml.safe_load(). The deserialization of Untrusted Data, may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.</p>
<p>All versions before 2.1.2 are affected.
CVSS Score = 9.8
<a href="https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&amp;data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&amp;sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&amp;reserved=0">AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H</a></p>
<h3 id="patches">Patches</h3>
<p>The patch will be included in nvflare==2.1.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Change yaml.load() to yaml.safe_load()</p>
<h3 id="additional-information">Additional information</h3>
<p>Issue Found by: Oliver Sellwood (@Nintorac)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-hrf3-622q-8366">https://github.com/NVIDIA/NVFlare/security/advisories/GHSA-hrf3-622q-8366</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31605">https://nvd.nist.gov/vuln/detail/CVE-2022-31605</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-232.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/nvflare/PYSEC-2022-232.yaml</a></li>
<li><a href="https://github.com/NVIDIA/NVFlare/commit/4de9782697ecb12f39bcae83221bd8d3498959be">https://github.com/NVIDIA/NVFlare/commit/4de9782697ecb12f39bcae83221bd8d3498959be</a></li>
<li><a href="https://github.com/advisories/GHSA-hrf3-622q-8366">https://github.com/advisories/GHSA-hrf3-622q-8366</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrf3-622q-8366</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-06-22T21:22:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bottle] Denial of service in bottle]]></title>
        <id>https://github.com/advisories/GHSA-xhp9-4947-rq78</id>
        <link href="https://github.com/advisories/GHSA-xhp9-4947-rq78"/>
        <updated>2023-09-02T05:02:49.000Z</updated>
        <content type="html"><![CDATA[<p>Bottle before 0.12.20 mishandles errors during early request binding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31799">https://nvd.nist.gov/vuln/detail/CVE-2022-31799</a></li>
<li><a href="https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c">https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c</a></li>
<li><a href="https://github.com/bottlepy/bottle/commit/e140e1b54da721a660f2eb9d58a106b7b3ff2f00">https://github.com/bottlepy/bottle/commit/e140e1b54da721a660f2eb9d58a106b7b3ff2f00</a></li>
<li><a href="https://github.com/bottlepy/bottle/compare/0.12.19...0.12.20">https://github.com/bottlepy/bottle/compare/0.12.19...0.12.20</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/06/msg00010.html">https://lists.debian.org/debian-lts-announce/2022/06/msg00010.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5159">https://www.debian.org/security/2022/dsa-5159</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IE7U6J45PUEXIYYVWJKPM6QXIRKDK4HD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IE7U6J45PUEXIYYVWJKPM6QXIRKDK4HD/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KTLOQGMDZEPIYTFC2G53OQV2ULCGYS3F/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KTLOQGMDZEPIYTFC2G53OQV2ULCGYS3F/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/bottle/PYSEC-2022-227.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/bottle/PYSEC-2022-227.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xhp9-4947-rq78">https://github.com/advisories/GHSA-xhp9-4947-rq78</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xhp9-4947-rq78</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-06-03T00:01:15.000Z</published>
    </entry>
</feed>