<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-06-30T22:01:38.289Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-jdbc] Apache Airflow JDBC Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mm87-c3x2-6f89</id>
        <link href="https://github.com/advisories/GHSA-mm87-c3x2-6f89"/>
        <updated>2023-06-30T20:40:05.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow JDBC Provider. Airflow JDBC Provider Connectionâ€™s [Connection URL] parameters had no restrictions, which made it possible to implement RCE attacks via different type JDBC drivers, obtain airflow server permission. This issue affects Apache Airflow JDBC Provider: before 4.0.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22886">https://nvd.nist.gov/vuln/detail/CVE-2023-22886</a></li>
<li><a href="https://lists.apache.org/thread/ynbjwp4n0vzql0xzhog1gkp1ovncf8j3">https://lists.apache.org/thread/ynbjwp4n0vzql0xzhog1gkp1ovncf8j3</a></li>
<li><a href="https://github.com/advisories/GHSA-mm87-c3x2-6f89">https://github.com/advisories/GHSA-mm87-c3x2-6f89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mm87-c3x2-6f89</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T12:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[easy-parse] easy-parse XML External Entity Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-vv6q-6hwp-vrgp</id>
        <link href="https://github.com/advisories/GHSA-vv6q-6hwp-vrgp"/>
        <updated>2023-06-30T20:36:48.000Z</updated>
        <content type="html"><![CDATA[<p>easy-parse v0.1.1 was discovered to contain a XML External Entity Injection (XXE) vulnerability which allows attackers to execute arbitrary code via a crafted XML file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26710">https://nvd.nist.gov/vuln/detail/CVE-2020-26710</a></li>
<li><a href="https://github.com/uncmath25/easy-parse/issues/3">https://github.com/uncmath25/easy-parse/issues/3</a></li>
<li><a href="https://github.com/advisories/GHSA-vv6q-6hwp-vrgp">https://github.com/advisories/GHSA-vv6q-6hwp-vrgp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vv6q-6hwp-vrgp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[py-xml] py-xml XML External Entity Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-j6v2-mwxm-f952</id>
        <link href="https://github.com/advisories/GHSA-j6v2-mwxm-f952"/>
        <updated>2023-06-30T20:36:38.000Z</updated>
        <content type="html"><![CDATA[<p>py-xml v1.0 was discovered to contain an XML External Entity Injection (XXE) vulnerability which allows attackers to execute arbitrary code via a crafted XML file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26709">https://nvd.nist.gov/vuln/detail/CVE-2020-26709</a></li>
<li><a href="https://github.com/PinaeOS/py-xml/issues/2">https://github.com/PinaeOS/py-xml/issues/2</a></li>
<li><a href="https://github.com/advisories/GHSA-j6v2-mwxm-f952">https://github.com/advisories/GHSA-j6v2-mwxm-f952</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j6v2-mwxm-f952</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[requests-xml] requests-xml XML External Entity Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-ccrc-9x59-3vc4</id>
        <link href="https://github.com/advisories/GHSA-ccrc-9x59-3vc4"/>
        <updated>2023-06-30T20:36:28.000Z</updated>
        <content type="html"><![CDATA[<p>requests-xml v0.2.3 was discovered to contain an XML External Entity Injection (XXE) vulnerability which allows attackers to execute arbitrary code via a crafted XML file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26708">https://nvd.nist.gov/vuln/detail/CVE-2020-26708</a></li>
<li><a href="https://github.com/erinxocon/requests-xml/issues/7">https://github.com/erinxocon/requests-xml/issues/7</a></li>
<li><a href="https://github.com/advisories/GHSA-ccrc-9x59-3vc4">https://github.com/advisories/GHSA-ccrc-9x59-3vc4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ccrc-9x59-3vc4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-29T21:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyPDF2] pypdf and PyPDF2 possible Infinite Loop when a comment isn't followed by a character]]></title>
        <id>https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</id>
        <link href="https://github.com/advisories/GHSA-4vvm-4w3v-6mr8"/>
        <updated>2023-06-30T20:33:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if <code>__parse_content_stream</code> is executed. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted text from such a PDF.</p>
<p>Example Code and a PDF that causes the issue:</p>
<pre><code class="language-python">from pypdf import PdfReader

# https://objects.githubusercontent.com/github-production-repository-file-5c1aeb/3119517/11367871?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230627%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230627T201018Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=d71c8fd9181c4875f0c04d563b6d32f1d4da6e7b2e6be2f14479ce4ecdc9c8b2&amp;X-Amz-SignedHeaders=host&amp;actor_id=1658117&amp;key_id=0&amp;repo_id=3119517&amp;response-content-disposition=attachment%3Bfilename%3DMiFO_LFO_FEIS_NOA_Published.3.pdf&amp;response-content-type=application%2Fpdf
reader = PdfReader("MiFO_LFO_FEIS_NOA_Published.3.pdf")
page = reader.pages[0]
page.extract_text()
</code></pre>
<p>The issue was introduced with <a href="https://github.com/py-pdf/pypdf/pull/969">https://github.com/py-pdf/pypdf/pull/969</a></p>
<h3 id="patches">Patches</h3>
<p>The issue was fixed with <a href="https://github.com/py-pdf/pypdf/pull/1828">https://github.com/py-pdf/pypdf/pull/1828</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot update your version of pypdf, you should modify <code>pypdf/generic/_data_structures.py</code>:</p>
<pre><code>OLD: while peek not in (b"\r", b"\n"):
NEW: while peek not in (b"\r", b"\n", b""):
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/pypdf/security/advisories/GHSA-4vvm-4w3v-6mr8">https://github.com/py-pdf/pypdf/security/advisories/GHSA-4vvm-4w3v-6mr8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36464">https://nvd.nist.gov/vuln/detail/CVE-2023-36464</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/1828">https://github.com/py-pdf/pypdf/pull/1828</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/969">https://github.com/py-pdf/pypdf/pull/969</a></li>
<li><a href="https://github.com/py-pdf/pypdf/commit/b0e5c689df689ab173df84dacd77b6fc3c161932">https://github.com/py-pdf/pypdf/commit/b0e5c689df689ab173df84dacd77b6fc3c161932</a></li>
<li><a href="https://github.com/py-pdf/pypdf/releases/tag/3.9.0">https://github.com/py-pdf/pypdf/releases/tag/3.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4vvm-4w3v-6mr8">https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T20:33:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pypdf] pypdf and PyPDF2 possible Infinite Loop when a comment isn't followed by a character]]></title>
        <id>https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</id>
        <link href="https://github.com/advisories/GHSA-4vvm-4w3v-6mr8"/>
        <updated>2023-06-30T20:33:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if <code>__parse_content_stream</code> is executed. This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted text from such a PDF.</p>
<p>Example Code and a PDF that causes the issue:</p>
<pre><code class="language-python">from pypdf import PdfReader

# https://objects.githubusercontent.com/github-production-repository-file-5c1aeb/3119517/11367871?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230627%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230627T201018Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=d71c8fd9181c4875f0c04d563b6d32f1d4da6e7b2e6be2f14479ce4ecdc9c8b2&amp;X-Amz-SignedHeaders=host&amp;actor_id=1658117&amp;key_id=0&amp;repo_id=3119517&amp;response-content-disposition=attachment%3Bfilename%3DMiFO_LFO_FEIS_NOA_Published.3.pdf&amp;response-content-type=application%2Fpdf
reader = PdfReader("MiFO_LFO_FEIS_NOA_Published.3.pdf")
page = reader.pages[0]
page.extract_text()
</code></pre>
<p>The issue was introduced with <a href="https://github.com/py-pdf/pypdf/pull/969">https://github.com/py-pdf/pypdf/pull/969</a></p>
<h3 id="patches">Patches</h3>
<p>The issue was fixed with <a href="https://github.com/py-pdf/pypdf/pull/1828">https://github.com/py-pdf/pypdf/pull/1828</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot update your version of pypdf, you should modify <code>pypdf/generic/_data_structures.py</code>:</p>
<pre><code>OLD: while peek not in (b"\r", b"\n"):
NEW: while peek not in (b"\r", b"\n", b""):
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/pypdf/security/advisories/GHSA-4vvm-4w3v-6mr8">https://github.com/py-pdf/pypdf/security/advisories/GHSA-4vvm-4w3v-6mr8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36464">https://nvd.nist.gov/vuln/detail/CVE-2023-36464</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/1828">https://github.com/py-pdf/pypdf/pull/1828</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/969">https://github.com/py-pdf/pypdf/pull/969</a></li>
<li><a href="https://github.com/py-pdf/pypdf/commit/b0e5c689df689ab173df84dacd77b6fc3c161932">https://github.com/py-pdf/pypdf/commit/b0e5c689df689ab173df84dacd77b6fc3c161932</a></li>
<li><a href="https://github.com/py-pdf/pypdf/releases/tag/3.9.0">https://github.com/py-pdf/pypdf/releases/tag/3.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-4vvm-4w3v-6mr8">https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4vvm-4w3v-6mr8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T20:33:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pgadmin4] pgAdmin 4 Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cr8c-972v-rmp3</id>
        <link href="https://github.com/advisories/GHSA-cr8c-972v-rmp3"/>
        <updated>2023-06-30T20:26:43.000Z</updated>
        <content type="html"><![CDATA[<p>When run in server mode, pgAdmin 4 allows users to store files on the server under individual storage directories. Files such as SQL scripts may be uploaded through the user interface. The URI to which upload requests are made fails to validate the upload path to prevent path traversal techniques being used to store files outside of the storage directory. A malicious, but authorised and authenticated user can construct an HTTP request using their existing CSRF token and session cookie to manually upload files to any location that the operating system user account under which pgAdmin is running has permission to write.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0959">https://nvd.nist.gov/vuln/detail/CVE-2022-0959</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2063759">https://bugzilla.redhat.com/show_bug.cgi?id=2063759</a></li>
<li><a href="https://github.com/pgadmin-org/pgadmin4/commit/dccd4f0bbaafa783d9f0360c7592b128d5cc3928">https://github.com/pgadmin-org/pgadmin4/commit/dccd4f0bbaafa783d9f0360c7592b128d5cc3928</a></li>
<li><a href="https://github.com/advisories/GHSA-cr8c-972v-rmp3">https://github.com/advisories/GHSA-cr8c-972v-rmp3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cr8c-972v-rmp3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-03-17T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-microsoft-mssql] Apache Airflow ODBC Provider, Apache Airflow MSSQL Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q57w-826p-46jr</id>
        <link href="https://github.com/advisories/GHSA-q57w-826p-46jr"/>
        <updated>2023-06-30T20:26:35.000Z</updated>
        <content type="html"><![CDATA[<p>Input Validation vulnerability in Apache Software Foundation Apache Airflow ODBC Provider, Apache Software Foundation Apache Airflow MSSQL Provider.This&nbsp;vulnerability is considered low since it requires DAG code to use <code>get_sqlalchemy_connection</code> and someone with access to connection resources specifically&nbsp;updating the connection to exploit it.</p>
<p>This issue affects Apache Airflow ODBC Provider: before 4.0.0; Apache Airflow MSSQL Provider: before 3.4.1.</p>
<p>It is recommended to&nbsp;upgrade to a version that is not affected</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35798">https://nvd.nist.gov/vuln/detail/CVE-2023-35798</a></li>
<li><a href="https://github.com/apache/airflow/pull/31984">https://github.com/apache/airflow/pull/31984</a></li>
<li><a href="https://lists.apache.org/thread/951rb9m7wwox5p30tdvcfjxq8j1mp4pj">https://lists.apache.org/thread/951rb9m7wwox5p30tdvcfjxq8j1mp4pj</a></li>
<li><a href="https://github.com/apache/airflow/commit/b6836986846058e9e5fa271fb7b22ae721020787">https://github.com/apache/airflow/commit/b6836986846058e9e5fa271fb7b22ae721020787</a></li>
<li><a href="https://github.com/advisories/GHSA-q57w-826p-46jr">https://github.com/advisories/GHSA-q57w-826p-46jr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q57w-826p-46jr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-27T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-odbc] Apache Airflow ODBC Provider, Apache Airflow MSSQL Provider Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-q57w-826p-46jr</id>
        <link href="https://github.com/advisories/GHSA-q57w-826p-46jr"/>
        <updated>2023-06-30T20:26:35.000Z</updated>
        <content type="html"><![CDATA[<p>Input Validation vulnerability in Apache Software Foundation Apache Airflow ODBC Provider, Apache Software Foundation Apache Airflow MSSQL Provider.This&nbsp;vulnerability is considered low since it requires DAG code to use <code>get_sqlalchemy_connection</code> and someone with access to connection resources specifically&nbsp;updating the connection to exploit it.</p>
<p>This issue affects Apache Airflow ODBC Provider: before 4.0.0; Apache Airflow MSSQL Provider: before 3.4.1.</p>
<p>It is recommended to&nbsp;upgrade to a version that is not affected</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35798">https://nvd.nist.gov/vuln/detail/CVE-2023-35798</a></li>
<li><a href="https://github.com/apache/airflow/pull/31984">https://github.com/apache/airflow/pull/31984</a></li>
<li><a href="https://lists.apache.org/thread/951rb9m7wwox5p30tdvcfjxq8j1mp4pj">https://lists.apache.org/thread/951rb9m7wwox5p30tdvcfjxq8j1mp4pj</a></li>
<li><a href="https://github.com/apache/airflow/commit/b6836986846058e9e5fa271fb7b22ae721020787">https://github.com/apache/airflow/commit/b6836986846058e9e5fa271fb7b22ae721020787</a></li>
<li><a href="https://github.com/advisories/GHSA-q57w-826p-46jr">https://github.com/advisories/GHSA-q57w-826p-46jr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q57w-826p-46jr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-27T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-odbc] Apache Airflow ODBC Provider Argument Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9766-v29c-4vm7</id>
        <link href="https://github.com/advisories/GHSA-9766-v29c-4vm7"/>
        <updated>2023-06-30T20:26:05.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') vulnerability in Apache Software Foundation Apache Airflow ODBC Provider.
In OdbcHook, A privilege escalation vulnerability exists in a system due to controllable ODBC driver parameters that allow the loading of arbitrary dynamic-link libraries, resulting in command execution.
Starting version 4.0.0 driver can be set only from the hook constructor.
This issue affects Apache Airflow ODBC Provider: before 4.0.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34395">https://nvd.nist.gov/vuln/detail/CVE-2023-34395</a></li>
<li><a href="https://github.com/apache/airflow/pull/31713">https://github.com/apache/airflow/pull/31713</a></li>
<li><a href="https://lists.apache.org/thread/l26yykftzbhc9tgcph8cso88bc2lqwwd">https://lists.apache.org/thread/l26yykftzbhc9tgcph8cso88bc2lqwwd</a></li>
<li><a href="https://github.com/apache/airflow/commit/2844dad1c762f5c7dd1271866d3661bf66657300">https://github.com/apache/airflow/commit/2844dad1c762f5c7dd1271866d3661bf66657300</a></li>
<li><a href="https://github.com/advisories/GHSA-9766-v29c-4vm7">https://github.com/advisories/GHSA-9766-v29c-4vm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9766-v29c-4vm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-27T12:30:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[SafeURL-Python] SafeURL-Python's hostname blocklist does not block FQDNs]]></title>
        <id>https://github.com/advisories/GHSA-373w-rj84-pv6x</id>
        <link href="https://github.com/advisories/GHSA-373w-rj84-pv6x"/>
        <updated>2023-06-29T15:02:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>If a hostname was blacklisted, it was possible to bypass the blacklist by requesting the FQDN of the host (e.g. adding <code>.</code> to the end).</p>
<h3 id="impact">Impact</h3>
<p>The main purpose of this library is to block requests to internal/private IPs and these cannot be bypassed using this finding. But if a library user had specifically set certain hostnames as blocked, then an attacker would be able to circumvent that block to cause SSRFs to request those hostnames.</p>
<h3 id="patches">Patches</h3>
<p>Fixed by <a href="https://github.com/IncludeSecurity/safeurl-python/pull/6">https://github.com/IncludeSecurity/safeurl-python/pull/6</a></p>
<h3 id="credit">Credit</h3>
<p><a href="https://github.com/Sim4n6">https://github.com/Sim4n6</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/IncludeSecurity/safeurl-python/security/advisories/GHSA-373w-rj84-pv6x">https://github.com/IncludeSecurity/safeurl-python/security/advisories/GHSA-373w-rj84-pv6x</a></li>
<li><a href="https://github.com/IncludeSecurity/safeurl-python/pull/6">https://github.com/IncludeSecurity/safeurl-python/pull/6</a></li>
<li><a href="https://github.com/IncludeSecurity/safeurl-python/commit/c4f9677f8790a58eaa1953bac286cca75a5f580e">https://github.com/IncludeSecurity/safeurl-python/commit/c4f9677f8790a58eaa1953bac286cca75a5f580e</a></li>
<li><a href="https://github.com/advisories/GHSA-373w-rj84-pv6x">https://github.com/advisories/GHSA-373w-rj84-pv6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-373w-rj84-pv6x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-29T15:02:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jcvi] jcvi vulnerable to Configuration Injection due to unsanitized user input ]]></title>
        <id>https://github.com/advisories/GHSA-x49m-3cw7-gq5q</id>
        <link href="https://github.com/advisories/GHSA-x49m-3cw7-gq5q"/>
        <updated>2023-06-27T23:07:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A configuration injection happens when user input is considered by the application in an unsanitized format and can reach the configuration file. A malicious user may craft a special payload that may lead to a command injection.</p>
<h3 id="poc">PoC</h3>
<p>The vulnerable code snippet is <a href="https://github.com/tanghaibao/jcvi/blob/cede6c65c8e7603cb266bc3395ac8f915ea9eac7/jcvi/apps/base.py#LL2227C1-L2228C41">/jcvi/apps/base.py#LL2227C1-L2228C41</a>. Under some circumstances a user input is retrieved and stored within the <code>fullpath</code> variable which reaches the configuration file <code>~/.jcvirc</code>.</p>
<pre><code class="language-python">        fullpath = input(msg).strip()
        config.set(PATH, name, fullpath)
</code></pre>
<p>I ripped a part of the codebase into a runnable PoC as follows. All the PoC does is call the <code>getpath()</code> function under some circumstances.</p>
<pre><code class="language-python">from configparser import (
    ConfigParser,
    RawConfigParser,
    NoOptionError,
    NoSectionError,
    ParsingError,
)

import errno
import os
import sys
import os.path as op
import shutil
import signal
import sys
import logging


def is_exe(fpath):
    return op.isfile(fpath) and os.access(fpath, os.X_OK)


def which(program):
    """
    Emulates the unix which command.

    &gt;&gt;&gt; which("cat")
    "/bin/cat"
    &gt;&gt;&gt; which("nosuchprogram")
    """
    fpath, fname = op.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            exe_file = op.join(path, program)
            if is_exe(exe_file):
                return exe_file

    return None


def getpath(cmd, name=None, url=None, cfg="~/.jcvirc", warn="exit"):
    """
    Get install locations of common binaries
    First, check ~/.jcvirc file to get the full path
    If not present, ask on the console and store
    """
    p = which(cmd)  # if in PATH, just returns it
    if p:
        return p

    PATH = "Path"
    config = RawConfigParser()
    cfg = op.expanduser(cfg)
    changed = False
    if op.exists(cfg):
        config.read(cfg)

    assert name is not None, "Need a program name"

    try:
        fullpath = config.get(PATH, name)
    except NoSectionError:
        config.add_section(PATH)
        changed = True

    try:
        fullpath = config.get(PATH, name)
    except NoOptionError:
        msg = "=== Configure path for {0} ===\n".format(name, cfg)
        if url:
            msg += "URL: {0}\n".format(url)
        msg += "[Directory that contains `{0}`]: ".format(cmd)
        fullpath = input(msg).strip()
        config.set(PATH, name, fullpath)
        changed = True

    path = op.join(op.expanduser(fullpath), cmd)
    if warn == "exit":
        try:
            assert is_exe(path), "***ERROR: Cannot execute binary `{0}`. ".format(path)
        except AssertionError as e:
            sys.exit("{0!s}Please verify and rerun.".format(e))

    if changed:
        configfile = open(cfg, "w")
        config.write(configfile)
        logging.debug("Configuration written to `{0}`.".format(cfg))

    return path


# Call to getpath
path = getpath("not-part-of-path", name="CLUSTALW2", warn="warn")
print(path)
</code></pre>
<p>To run the PoC, you need to remove the config file <code>~/.jcvirc</code> to emulate the first run, </p>
<pre><code class="language-bash"># Run the PoC with the payload
echo -e "e\rvvvvvvvv = zzzzzzzz\n" | python3 poc.py
</code></pre>
<p><img alt="image" src="https://user-images.githubusercontent.com/13036531/247852364-f8a384a3-fc62-41ca-b467-877d197ac6ff.png"></p>
<p>You can notice the random key/value characters <code>vvvvvvvv = zzzzzzzz</code> were successfully injected.</p>
<h3 id="impact">Impact</h3>
<p>The impact of a configuration injection may vary. Under some conditions, it may lead to command injection if there is for instance shell code execution from the configuration file values.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tanghaibao/jcvi/security/advisories/GHSA-x49m-3cw7-gq5q">https://github.com/tanghaibao/jcvi/security/advisories/GHSA-x49m-3cw7-gq5q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35932">https://nvd.nist.gov/vuln/detail/CVE-2023-35932</a></li>
<li><a href="https://github.com/tanghaibao/jcvi/blob/cede6c65c8e7603cb266bc3395ac8f915ea9eac7/jcvi/apps/base.py#LL2227C1-L2228C41">https://github.com/tanghaibao/jcvi/blob/cede6c65c8e7603cb266bc3395ac8f915ea9eac7/jcvi/apps/base.py#LL2227C1-L2228C41</a></li>
<li><a href="https://github.com/advisories/GHSA-x49m-3cw7-gq5q">https://github.com/advisories/GHSA-x49m-3cw7-gq5q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x49m-3cw7-gq5q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-23T21:44:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[fief-server] fief-server Server-Side Template Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hj8m-9fhf-v7jp</id>
        <link href="https://github.com/advisories/GHSA-hj8m-9fhf-v7jp"/>
        <updated>2023-06-27T23:07:54.000Z</updated>
        <content type="html"><![CDATA[<h1 id="server-side-template-injection">Server-Side Template Injection</h1>
<h2 id="overview-of-the-vulnerability">Overview of the Vulnerability</h2>
<p>Server-Side Template Injection (SSTI) is a vulnerability within application templating engines where user input is improperly handled and is embedded into the template, possibly leading code being executed.</p>
<p>An attacker can use SSTI to execute code on the underlying system by manipulating values within the embedded template. When code is executed within the underlying system, it can allow an attacker to run permissioned commands under the exploited process, or exploit Cross-Site Scripting (XSS) to run code within the user's browser.</p>
<h2 id="business-impact">Business Impact</h2>
<p>SSTI can lead to reputational damage for the business due to a loss in confidence and trust by users. If an attacker successfully executes code within the underlying system, it can result in data theft and indirect financial losses.</p>
<h2 id="steps-to-reproduce">Steps to Reproduce</h2>
<ol>
<li><a href="https://fief.fief.dev/register">Sign up</a> and login to your account</li>
<li>Use a browser to navigate to: email-templates {{<a href="https://test.fief.dev/admin/customization/email-templates/">URL</a>}}</li>
<li>put your payload in Edit Base template <code>{{ cycler.__init__.__globals__.os.popen('id').read() }}</code> and you will se it will execute.</li>
</ol>
<p>Payload:
<code>{{ cycler.__init__.__globals__.os.popen('id').read() }}</code></p>
<h2 id="proof-of-concept-poc">Proof of Concept (PoC)</h2>
<p>The screenshot(s) below demonstrates the SSTI:</p>
<p><img alt="SSTI" src="https://user-images.githubusercontent.com/42150485/248214990-854c2272-4f34-4c49-9759-d49ce8ce3d12.png"></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/fief-dev/fief/security/advisories/GHSA-hj8m-9fhf-v7jp">https://github.com/fief-dev/fief/security/advisories/GHSA-hj8m-9fhf-v7jp</a></li>
<li><a href="https://github.com/fief-dev/fief/commit/91e56625b641fa419e2985772266774bae18382b">https://github.com/fief-dev/fief/commit/91e56625b641fa419e2985772266774bae18382b</a></li>
<li><a href="https://github.com/fief-dev/fief/releases/tag/v0.25.3">https://github.com/fief-dev/fief/releases/tag/v0.25.3</a></li>
<li><a href="https://github.com/advisories/GHSA-hj8m-9fhf-v7jp">https://github.com/advisories/GHSA-hj8m-9fhf-v7jp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj8m-9fhf-v7jp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-23T21:46:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Flask-AppBuilder] Flask-AppBuilder vulnerable to possible disclosure of sensitive information on user error]]></title>
        <id>https://github.com/advisories/GHSA-jhpr-j7cq-3jp3</id>
        <link href="https://github.com/advisories/GHSA-jhpr-j7cq-3jp3"/>
        <updated>2023-06-23T13:56:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated malicious actor with Admin privileges, could by adding a special character on the add, edit User forms trigger a database error, this error is surfaced back to this actor on the UI. On certain database engines this error can include the entire user row including the pbkdf2:sha256 hashed password.</p>
<h3 id="patches">Patches</h3>
<p>Fixed on 4.3.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-jhpr-j7cq-3jp3">https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-jhpr-j7cq-3jp3</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/pull/2045">https://github.com/dpgaspar/Flask-AppBuilder/pull/2045</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/commit/ae25ad4c87a9051ebe4a4e8f02aee73232642626">https://github.com/dpgaspar/Flask-AppBuilder/commit/ae25ad4c87a9051ebe4a4e8f02aee73232642626</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/releases/tag/v4.3.2">https://github.com/dpgaspar/Flask-AppBuilder/releases/tag/v4.3.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34110">https://nvd.nist.gov/vuln/detail/CVE-2023-34110</a></li>
<li><a href="https://github.com/advisories/GHSA-jhpr-j7cq-3jp3">https://github.com/advisories/GHSA-jhpr-j7cq-3jp3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhpr-j7cq-3jp3</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-22T19:59:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Langchain vulnerable to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-6643-h7h5-x9wh</id>
        <link href="https://github.com/advisories/GHSA-6643-h7h5-x9wh"/>
        <updated>2023-06-27T22:31:39.000Z</updated>
        <content type="html"><![CDATA[<p>Langchain 0.0.171 is vulnerable to Arbitrary code execution in <code>load_prompt</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34541">https://nvd.nist.gov/vuln/detail/CVE-2023-34541</a></li>
<li><a href="https://github.com/hwchase17/langchain/issues/4849">https://github.com/hwchase17/langchain/issues/4849</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-92.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/langchain/PYSEC-2023-92.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-6643-h7h5-x9wh">https://github.com/advisories/GHSA-6643-h7h5-x9wh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6643-h7h5-x9wh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-20T15:31:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyyaml] Improper Input Validation in PyYAML]]></title>
        <id>https://github.com/advisories/GHSA-6757-jp84-gxfx</id>
        <link href="https://github.com/advisories/GHSA-6757-jp84-gxfx"/>
        <updated>2023-06-20T19:26:09.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was discovered in the PyYAML library in versions before 5.3.1, where it is susceptible to arbitrary code execution when it processes untrusted YAML files through the full_load method or with the FullLoader loader. Applications that use the library to process untrusted input may be vulnerable to this flaw. An attacker could use this flaw to execute arbitrary code on the system by abusing the python/object/new constructor.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1747">https://nvd.nist.gov/vuln/detail/CVE-2020-1747</a></li>
<li><a href="https://github.com/yaml/pyyaml/pull/386">https://github.com/yaml/pyyaml/pull/386</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1747">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1747</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7PPAS6C4SZRDQLR7C22A5U3QOLXY33JX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7PPAS6C4SZRDQLR7C22A5U3QOLXY33JX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/K5HEPD7LEVDPCITY5IMDYWXUMX37VFMY/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/K5HEPD7LEVDPCITY5IMDYWXUMX37VFMY/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MMQXSZXNJT6ERABJZAAICI3DQSQLCP3D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MMQXSZXNJT6ERABJZAAICI3DQSQLCP3D/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WORRFHPQVAFKKXXWLSSW6XKUYLWM6CSH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WORRFHPQVAFKKXXWLSSW6XKUYLWM6CSH/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZBJA3SGNJKCAYPSHOHWY3KBCWNM5NYK2/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZBJA3SGNJKCAYPSHOHWY3KBCWNM5NYK2/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00017.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00017.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-05/msg00017.html">http://lists.opensuse.org/opensuse-security-announce/2020-05/msg00017.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/yaml/pyyaml/commit/5080ba513377b6355a0502104846ee804656f1e0">https://github.com/yaml/pyyaml/commit/5080ba513377b6355a0502104846ee804656f1e0</a></li>
<li><a href="https://github.com/advisories/GHSA-6757-jp84-gxfx">https://github.com/advisories/GHSA-6757-jp84-gxfx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6757-jp84-gxfx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-04-20T16:14:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Apache Airflow vulnerable to exposure of sensitive information]]></title>
        <id>https://github.com/advisories/GHSA-mjff-wv85-hmcj</id>
        <link href="https://github.com/advisories/GHSA-mjff-wv85-hmcj"/>
        <updated>2023-06-27T20:31:29.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Airflow, some potentially sensitive values were being shown to the user in certain situations.</p>
<p>This vulnerability is mitigated by the fact configuration is not shown in the UI by default (only if <code>[webserver] expose_config</code> is set to <code>non-sensitive-only</code>), and not all uncensored values are actually sentitive.</p>
<p>This issue affects Apache Airflow: from 2.5.0 before 2.6.2. Users are recommended to update to version 2.6.2 or later.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35005">https://nvd.nist.gov/vuln/detail/CVE-2023-35005</a></li>
<li><a href="https://github.com/apache/airflow/pull/31788">https://github.com/apache/airflow/pull/31788</a></li>
<li><a href="https://github.com/apache/airflow/pull/31820">https://github.com/apache/airflow/pull/31820</a></li>
<li><a href="https://lists.apache.org/thread/o4f2cxh0054m9tlxpb81c1yhylor5gjd">https://lists.apache.org/thread/o4f2cxh0054m9tlxpb81c1yhylor5gjd</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-89.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-89.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-mjff-wv85-hmcj">https://github.com/advisories/GHSA-mjff-wv85-hmcj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjff-wv85-hmcj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-19T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[langchain] Langchain OS Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-x32c-59v5-h7fg</id>
        <link href="https://github.com/advisories/GHSA-x32c-59v5-h7fg"/>
        <updated>2023-06-14T21:14:50.000Z</updated>
        <content type="html"><![CDATA[<p>Langchain 0.0.171 is vulnerable to Arbitrary Code Execution via command injection in the <code>jira.run()</code> command</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34540">https://nvd.nist.gov/vuln/detail/CVE-2023-34540</a></li>
<li><a href="https://github.com/hwchase17/langchain/issues/4833">https://github.com/hwchase17/langchain/issues/4833</a></li>
<li><a href="https://github.com/advisories/GHSA-x32c-59v5-h7fg">https://github.com/advisories/GHSA-x32c-59v5-h7fg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x32c-59v5-h7fg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-14T15:30:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[arrayfire] Potential memory corruption in arrayfire]]></title>
        <id>https://github.com/advisories/GHSA-69fv-gw6g-8ccg</id>
        <link href="https://github.com/advisories/GHSA-69fv-gw6g-8ccg"/>
        <updated>2023-06-13T16:50:04.000Z</updated>
        <content type="html"><![CDATA[<p>The attribute repr() added to enums to be compatible with C-FFI caused memory corruption on MSVC toolchain.</p>
<p>arrayfire crates &lt;= version 3.5.0 do not have this issue when used with Rust versions 1.27 or earlier. The issue only started to appear since Rust version 1.28.</p>
<p>The issue seems to be interlinked with which version of Rust is being used.</p>
<p>The issue was fixed in crate 3.6.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20998">https://nvd.nist.gov/vuln/detail/CVE-2018-20998</a></li>
<li><a href="https://github.com/arrayfire/arrayfire-rust/pull/177">https://github.com/arrayfire/arrayfire-rust/pull/177</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2018-0011.html">https://rustsec.org/advisories/RUSTSEC-2018-0011.html</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/arrayfire/PYSEC-2019-144.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/arrayfire/PYSEC-2019-144.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-69fv-gw6g-8ccg">https://github.com/advisories/GHSA-69fv-gw6g-8ccg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69fv-gw6g-8ccg</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:43:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[changedetection.io] Stored cross site scripting in changedetection.io]]></title>
        <id>https://github.com/advisories/GHSA-68wj-c2jw-5pp9</id>
        <link href="https://github.com/advisories/GHSA-68wj-c2jw-5pp9"/>
        <updated>2023-06-12T23:33:03.000Z</updated>
        <content type="html"><![CDATA[<p>Changedetection.io before 0.40.2 was discovered to contain a stored cross-site scripting (XSS) vulnerability in the main page. This vulnerability allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the URL parameter under the "Add a new change detection watch" function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-24769">https://nvd.nist.gov/vuln/detail/CVE-2023-24769</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/issues/1358">https://github.com/dgtlmoon/changedetection.io/issues/1358</a></li>
<li><a href="https://www.edoardoottavianelli.it/CVE-2023-24769">https://www.edoardoottavianelli.it/CVE-2023-24769</a></li>
<li><a href="https://github.com/dgtlmoon/changedetection.io/pull/1359">https://github.com/dgtlmoon/changedetection.io/pull/1359</a></li>
<li><a href="https://github.com/advisories/GHSA-68wj-c2jw-5pp9">https://github.com/advisories/GHSA-68wj-c2jw-5pp9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-68wj-c2jw-5pp9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-18T00:31:59.000Z</published>
    </entry>
</feed>