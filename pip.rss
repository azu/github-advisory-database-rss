<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-08-04T06:01:22.588Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[Flask-AppBuilder] Flask-AppBuilder before v4.1.3 allows inference of sensitive information through query strings]]></title>
        <id>https://github.com/advisories/GHSA-32ff-4g79-vgfc</id>
        <link href="https://github.com/advisories/GHSA-32ff-4g79-vgfc"/>
        <updated>2022-07-29T22:28:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated Admin user could craft HTTP requests to filter users by their salted and hashed passwords strings. These filters could be made by using partial hashed password strings. The response would not include the hashed passwords, but an attacker could infer partial password hashes and their respective users.</p>
<p>Only when using <code>AUTH_DB</code> database authentication option.</p>
<h3 id="patches">Patches</h3>
<p>Fixed on 4.1.3</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://example.com">example link to repo</a></li>
<li>Email us at <a href="mailto:example@example.com">example email address</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-32ff-4g79-vgfc">https://github.com/dpgaspar/Flask-AppBuilder/security/advisories/GHSA-32ff-4g79-vgfc</a></li>
<li><a href="https://github.com/dpgaspar/Flask-AppBuilder/releases/tag/v4.1.3">https://github.com/dpgaspar/Flask-AppBuilder/releases/tag/v4.1.3</a></li>
<li><a href="https://github.com/advisories/GHSA-32ff-4g79-vgfc">https://github.com/advisories/GHSA-32ff-4g79-vgfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32ff-4g79-vgfc</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-29T22:28:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Scrapy before v2.6.2 and v1.8.3 vulnerable to one proxy sending credentials to another]]></title>
        <id>https://github.com/advisories/GHSA-9x8m-2xpf-crp3</id>
        <link href="https://github.com/advisories/GHSA-9x8m-2xpf-crp3"/>
        <updated>2022-07-29T22:26:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the <a href="https://docs.scrapy.org/en/2.6/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.httpproxy">built-in HTTP proxy downloader middleware</a> processes a request with <code>proxy</code> metadata, and that <code>proxy</code> metadata includes proxy credentials, the built-in HTTP proxy downloader middleware sets the <code>Proxy-Authentication</code> header, but only if that header is not already set.</p>
<p>There are third-party proxy-rotation downloader middlewares that set different <code>proxy</code> metadata every time they process a request.</p>
<p>Because of request retries and redirects, the same request can be processed by downloader middlewares more than once, including both the built-in HTTP proxy downloader middleware and any third-party proxy-rotation downloader middleware.</p>
<p>These third-party proxy-rotation downloader middlewares could change the <code>proxy</code> metadata of a request to a new value, but fail to remove the <code>Proxy-Authentication</code> header from the previous value of the <code>proxy</code> metadata, causing the credentials of one proxy to be leaked to a different proxy.</p>
<p>If you rotate proxies from different proxy providers, and any of those proxies requires credentials, you are affected, unless you are handling proxy rotation as described under <strong>Workarounds</strong> below. If you use a third-party downloader middleware for proxy rotation, the same applies to that downloader middleware, and installing a patched version of Scrapy may not be enough; patching that downloader middlware may be necessary as well.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Scrapy 2.6.2.</p>
<p>If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.6.2 is not an option, you may upgrade to Scrapy 1.8.3 instead.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade, make sure that any code that changes the value of the <code>proxy</code> request meta also removes the <code>Proxy-Authorization</code> header from the request if present.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/scrapy/scrapy/issues">Open an issue</a></li>
<li><a href="mailto:opensource@zyte.com">Email us</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/scrapy/scrapy/security/advisories/GHSA-9x8m-2xpf-crp3">https://github.com/scrapy/scrapy/security/advisories/GHSA-9x8m-2xpf-crp3</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/af7dd16d8ded3e6cb2946603688f4f4a5212e80f">https://github.com/scrapy/scrapy/commit/af7dd16d8ded3e6cb2946603688f4f4a5212e80f</a></li>
<li><a href="https://github.com/advisories/GHSA-9x8m-2xpf-crp3">https://github.com/advisories/GHSA-9x8m-2xpf-crp3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x8m-2xpf-crp3</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-29T22:26:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[scrapy] Scrapy before v2.6.2 and v1.8.3 vulnerable to one proxy sending credentials to another]]></title>
        <id>https://github.com/advisories/GHSA-9x8m-2xpf-crp3</id>
        <link href="https://github.com/advisories/GHSA-9x8m-2xpf-crp3"/>
        <updated>2022-07-29T22:26:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the <a href="https://docs.scrapy.org/en/2.6/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.httpproxy">built-in HTTP proxy downloader middleware</a> processes a request with <code>proxy</code> metadata, and that <code>proxy</code> metadata includes proxy credentials, the built-in HTTP proxy downloader middleware sets the <code>Proxy-Authentication</code> header, but only if that header is not already set.</p>
<p>There are third-party proxy-rotation downloader middlewares that set different <code>proxy</code> metadata every time they process a request.</p>
<p>Because of request retries and redirects, the same request can be processed by downloader middlewares more than once, including both the built-in HTTP proxy downloader middleware and any third-party proxy-rotation downloader middleware.</p>
<p>These third-party proxy-rotation downloader middlewares could change the <code>proxy</code> metadata of a request to a new value, but fail to remove the <code>Proxy-Authentication</code> header from the previous value of the <code>proxy</code> metadata, causing the credentials of one proxy to be leaked to a different proxy.</p>
<p>If you rotate proxies from different proxy providers, and any of those proxies requires credentials, you are affected, unless you are handling proxy rotation as described under <strong>Workarounds</strong> below. If you use a third-party downloader middleware for proxy rotation, the same applies to that downloader middleware, and installing a patched version of Scrapy may not be enough; patching that downloader middlware may be necessary as well.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Scrapy 2.6.2.</p>
<p>If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.6.2 is not an option, you may upgrade to Scrapy 1.8.3 instead.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade, make sure that any code that changes the value of the <code>proxy</code> request meta also removes the <code>Proxy-Authorization</code> header from the request if present.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/scrapy/scrapy/issues">Open an issue</a></li>
<li><a href="mailto:opensource@zyte.com">Email us</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/scrapy/scrapy/security/advisories/GHSA-9x8m-2xpf-crp3">https://github.com/scrapy/scrapy/security/advisories/GHSA-9x8m-2xpf-crp3</a></li>
<li><a href="https://github.com/scrapy/scrapy/commit/af7dd16d8ded3e6cb2946603688f4f4a5212e80f">https://github.com/scrapy/scrapy/commit/af7dd16d8ded3e6cb2946603688f4f4a5212e80f</a></li>
<li><a href="https://github.com/advisories/GHSA-9x8m-2xpf-crp3">https://github.com/advisories/GHSA-9x8m-2xpf-crp3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x8m-2xpf-crp3</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-29T22:26:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mistune] Mistune v2.0.2 vulnerable to catastrophic backtracking]]></title>
        <id>https://github.com/advisories/GHSA-fw3v-x4f2-v673</id>
        <link href="https://github.com/advisories/GHSA-fw3v-x4f2-v673"/>
        <updated>2022-07-29T22:24:58.000Z</updated>
        <content type="html"><![CDATA[<p>In Mistune through 2.0.2, support of inline markup is implemented by using regular expressions that can involve a high amount of backtracking on certain edge cases. This behavior is commonly named catastrophic backtracking.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34749">https://nvd.nist.gov/vuln/detail/CVE-2022-34749</a></li>
<li><a href="https://github.com/lepture/mistune/commit/a6d43215132fe4f3d93f8d7e90ba83b16a0838b2">https://github.com/lepture/mistune/commit/a6d43215132fe4f3d93f8d7e90ba83b16a0838b2</a></li>
<li><a href="https://github.com/lepture/mistune/releases">https://github.com/lepture/mistune/releases</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/mistune/PYSEC-2022-237.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/mistune/PYSEC-2022-237.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-fw3v-x4f2-v673">https://github.com/advisories/GHSA-fw3v-x4f2-v673</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fw3v-x4f2-v673</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-07-26T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[nnabla] Sony Neural Network Libraries reliance on untrusted inputs prior to v1.0.10]]></title>
        <id>https://github.com/advisories/GHSA-4q2w-rw7m-xqw6</id>
        <link href="https://github.com/advisories/GHSA-4q2w-rw7m-xqw6"/>
        <updated>2022-07-28T22:05:42.000Z</updated>
        <content type="html"><![CDATA[<p>nbla/logger.cpp in libnnabla.a in Sony Neural Network Libraries (aka nnabla) prior to v1.0.10 relies on the HOME environment variable, which might be untrusted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10844">https://nvd.nist.gov/vuln/detail/CVE-2019-10844</a></li>
<li><a href="https://github.com/sony/nnabla/issues/209">https://github.com/sony/nnabla/issues/209</a></li>
<li><a href="https://github.com/sony/nnabla/pull/299">https://github.com/sony/nnabla/pull/299</a></li>
<li><a href="https://github.com/sony/nnabla/commit/e87347648ab7210529a0e60f0849680de8e9b63a">https://github.com/sony/nnabla/commit/e87347648ab7210529a0e60f0849680de8e9b63a</a></li>
<li><a href="https://github.com/sony/nnabla/releases/tag/v1.0.10">https://github.com/sony/nnabla/releases/tag/v1.0.10</a></li>
<li><a href="https://github.com/advisories/GHSA-4q2w-rw7m-xqw6">https://github.com/advisories/GHSA-4q2w-rw7m-xqw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4q2w-rw7m-xqw6</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-05-13T01:07:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[MISP-maltego] Maltego incorrectly shares a MISP connection across users in a remote-transform use case]]></title>
        <id>https://github.com/advisories/GHSA-fj35-m94r-9h4c</id>
        <link href="https://github.com/advisories/GHSA-fj35-m94r-9h4c"/>
        <updated>2022-07-28T22:05:27.000Z</updated>
        <content type="html"><![CDATA[<p>MISP MISP-maltego 1.4.4 incorrectly shares a MISP connection across users in a remote-transform use case. Version 1.4.5 contains a patch.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-12889">https://nvd.nist.gov/vuln/detail/CVE-2020-12889</a></li>
<li><a href="https://github.com/MISP/MISP-maltego/commit/3ccde66dab4096ab5663e69f352992cc73e1160b">https://github.com/MISP/MISP-maltego/commit/3ccde66dab4096ab5663e69f352992cc73e1160b</a></li>
<li><a href="https://github.com/advisories/GHSA-fj35-m94r-9h4c">https://github.com/advisories/GHSA-fj35-m94r-9h4c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fj35-m94r-9h4c</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-05-24T17:17:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[simplejson] simplejson before 2.6.1 vulnerable to array index error]]></title>
        <id>https://github.com/advisories/GHSA-9772-cwx9-r4cj</id>
        <link href="https://github.com/advisories/GHSA-9772-cwx9-r4cj"/>
        <updated>2022-07-27T21:35:22.000Z</updated>
        <content type="html"><![CDATA[<p>Array index error in the scanstring function in the _json module in Python 2.7 through 3.5 and simplejson before 2.6.1 allows context-dependent attackers to read arbitrary process memory via a negative index value in the idx argument to the raw_decode function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-4616">https://nvd.nist.gov/vuln/detail/CVE-2014-4616</a></li>
<li><a href="https://hackerone.com/reports/12297">https://hackerone.com/reports/12297</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=752395">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=752395</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1112285">https://bugzilla.redhat.com/show_bug.cgi?id=1112285</a></li>
<li><a href="https://security.gentoo.org/glsa/201503-10">https://security.gentoo.org/glsa/201503-10</a></li>
<li><a href="http://bugs.python.org/issue21529">http://bugs.python.org/issue21529</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2014-07/msg00015.html">http://lists.opensuse.org/opensuse-updates/2014-07/msg00015.html</a></li>
<li><a href="http://openwall.com/lists/oss-security/2014/06/24/7">http://openwall.com/lists/oss-security/2014/06/24/7</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2015-1064.html">http://rhn.redhat.com/errata/RHSA-2015-1064.html</a></li>
<li><a href="http://www.securityfocus.com/bid/68119">http://www.securityfocus.com/bid/68119</a></li>
<li><a href="https://github.com/advisories/GHSA-9772-cwx9-r4cj">https://github.com/advisories/GHSA-9772-cwx9-r4cj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9772-cwx9-r4cj</uri>
        </author>
        <category label="MODERATE" term="severity"/>
        <published>2022-05-14T02:05:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] matrix-sydent and matrix-synapse Use Cryptographically Weak PRNG]]></title>
        <id>https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</id>
        <link href="https://github.com/advisories/GHSA-gwf7-vfjf-wf6x"/>
        <updated>2022-07-27T21:34:47.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Matrix Sydent before 1.0.3 and Synapse before 0.99.3.1. Random number generation is mishandled, which makes it easier for attackers to predict a Sydent authentication token or a Synapse random ID.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11842">https://nvd.nist.gov/vuln/detail/CVE-2019-11842</a></li>
<li><a href="https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28-a/">https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28-a/</a></li>
<li><a href="https://github.com/advisories/GHSA-gwf7-vfjf-wf6x">https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2022-05-24T16:45:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-sydent] matrix-sydent and matrix-synapse Use Cryptographically Weak PRNG]]></title>
        <id>https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</id>
        <link href="https://github.com/advisories/GHSA-gwf7-vfjf-wf6x"/>
        <updated>2022-07-27T21:34:47.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Matrix Sydent before 1.0.3 and Synapse before 0.99.3.1. Random number generation is mishandled, which makes it easier for attackers to predict a Sydent authentication token or a Synapse random ID.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11842">https://nvd.nist.gov/vuln/detail/CVE-2019-11842</a></li>
<li><a href="https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28-a/">https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28-a/</a></li>
<li><a href="https://github.com/advisories/GHSA-gwf7-vfjf-wf6x">https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwf7-vfjf-wf6x</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2022-05-24T16:45:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-anymail] django-anymail Includes Sensitive Information in Log Files]]></title>
        <id>https://github.com/advisories/GHSA-qh9x-mc42-vg4g</id>
        <link href="https://github.com/advisories/GHSA-qh9x-mc42-vg4g"/>
        <updated>2022-07-27T21:33:53.000Z</updated>
        <content type="html"><![CDATA[<p>Anymail django-anymail version version 0.2 through 1.3 contains a CWE-532, CWE-209 vulnerability in WEBHOOK_AUTHORIZATION setting value that can result in An attacker with access to error logs could fabricate email tracking events. This attack appear to be exploitable via If you have exposed your Django error reports, an attacker could discover your ANYMAIL_WEBHOOK setting and use this to post fabricated or malicious Anymail tracking/inbound events to your app. This vulnerability appears to have been fixed in v1.4.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000089">https://nvd.nist.gov/vuln/detail/CVE-2018-1000089</a></li>
<li><a href="https://github.com/anymail/django-anymail/commit/1a6086f2b58478d71f89bf27eb034ed81aefe5ef">https://github.com/anymail/django-anymail/commit/1a6086f2b58478d71f89bf27eb034ed81aefe5ef</a></li>
<li><a href="https://github.com/anymail/django-anymail/releases/tag/v1.4">https://github.com/anymail/django-anymail/releases/tag/v1.4</a></li>
<li><a href="https://github.com/advisories/GHSA-qh9x-mc42-vg4g">https://github.com/advisories/GHSA-qh9x-mc42-vg4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh9x-mc42-vg4g</uri>
        </author>
        <category label="HIGH" term="severity"/>
        <published>2022-05-14T03:32:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[twisted] HTTP/2 DoS Attacks: Ping, Reset, and Settings Floods]]></title>
        <id>https://github.com/advisories/GHSA-32gv-6cf3-wcmq</id>
        <link href="https://github.com/advisories/GHSA-32gv-6cf3-wcmq"/>
        <updated>2022-07-26T22:21:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Twisted web servers that utilize the optional HTTP/2 support suffer from the following flow-control related vulnerabilities:</p>
<p>Ping flood: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9512">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9512</a>
Reset flood: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9514">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9514</a>
Settings flood: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9515">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9515</a></p>
<p>A Twisted web server supports HTTP/2 requests if you've installed the <a href="https://twistedmatrix.com/documents/19.2.0/installation/howto/optional.html"><code>http2</code> optional dependency set</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There are no workarounds.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md">https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://twistedmatrix.com/trac/">Twisted's Trac</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/twisted/twisted/security/advisories/GHSA-32gv-6cf3-wcmq">https://github.com/twisted/twisted/security/advisories/GHSA-32gv-6cf3-wcmq</a></li>
<li><a href="https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d">https://github.com/twisted/twisted/commit/a40ab1ce5210f231abe7a448a54d7e88e48f2d5d</a></li>
<li><a href="https://github.com/advisories/GHSA-32gv-6cf3-wcmq">https://github.com/advisories/GHSA-32gv-6cf3-wcmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-32gv-6cf3-wcmq</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-03-14T22:45:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[shiva] Tooxie Shiva 0.10.0 allows absolute path traversal because Flask send_file function used unsafely]]></title>
        <id>https://github.com/advisories/GHSA-qp72-96p2-g644</id>
        <link href="https://github.com/advisories/GHSA-qp72-96p2-g644"/>
        <updated>2022-07-26T22:12:55.000Z</updated>
        <content type="html"><![CDATA[<p>The tooxie/shiva-server repository through 0.10.0 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31558">https://nvd.nist.gov/vuln/detail/CVE-2022-31558</a></li>
<li><a href="https://github.com/tooxie/shiva-server/issues/189">https://github.com/tooxie/shiva-server/issues/189</a></li>
<li><a href="https://github.com/advisories/GHSA-qp72-96p2-g644">https://github.com/advisories/GHSA-qp72-96p2-g644</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qp72-96p2-g644</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-07-12T00:00:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rpc.py] rpc.py 0.6.0 vulnerable to Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-8rq8-f485-7v8x</id>
        <link href="https://github.com/advisories/GHSA-8rq8-f485-7v8x"/>
        <updated>2022-07-26T22:09:28.000Z</updated>
        <content type="html"><![CDATA[<p>rpc.py through 0.6.0 allows Remote Code Execution because an unpickle occurs when the "serializer: pickle" HTTP header is sent. In other words, although JSON (not Pickle) is the default data format, an unauthenticated client can cause the data to be processed with unpickle.</p>
<p><a href="https://github.com/abersheeran/rpc.py/issues/22">Per the maintainer</a>, rpc.py is not designed for an API that is open to the outside world, and external requests cannot reach rpc.py in real world use.</p>
<p>A <a href="https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd">fix</a> exists on the <code>master</code> branch. As a workaround, use the following code to turn off pickle in older versions:</p>
<p>```
del SERIALIZER_NAMES[PickleSerializer.name]
del SERIALIZER_TYPES[PickleSerializer.content_type]</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35411">https://nvd.nist.gov/vuln/detail/CVE-2022-35411</a></li>
<li><a href="https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd">https://github.com/abersheeran/rpc.py/commit/491e7a841ed9a754796d6ab047a9fb16e23bf8bd</a></li>
<li><a href="https://github.com/ehtec/rpcpy-exploit">https://github.com/ehtec/rpcpy-exploit</a></li>
<li><a href="https://medium.com/@elias.hohl/remote-code-execution-0-day-in-rpc-py-709c76690c30">https://medium.com/@elias.hohl/remote-code-execution-0-day-in-rpc-py-709c76690c30</a></li>
<li><a href="https://github.com/abersheeran/rpc.py/issues/22">https://github.com/abersheeran/rpc.py/issues/22</a></li>
<li><a href="https://github.com/advisories/GHSA-8rq8-f485-7v8x">https://github.com/advisories/GHSA-8rq8-f485-7v8x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rq8-f485-7v8x</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-07-09T00:00:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[reportlab] XML Injection in ReportLab]]></title>
        <id>https://github.com/advisories/GHSA-qpg2-vx7j-3869</id>
        <link href="https://github.com/advisories/GHSA-qpg2-vx7j-3869"/>
        <updated>2022-07-26T22:07:07.000Z</updated>
        <content type="html"><![CDATA[<p>ReportLab through 3.5.26 allows remote code execution because of toColor(eval(arg)) in colors.py, as demonstrated by a crafted XML document with '&lt;span color="' followed by arbitrary Python code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-17626">https://nvd.nist.gov/vuln/detail/CVE-2019-17626</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0195">https://access.redhat.com/errata/RHSA-2020:0195</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0197">https://access.redhat.com/errata/RHSA-2020:0197</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0201">https://access.redhat.com/errata/RHSA-2020:0201</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0230">https://access.redhat.com/errata/RHSA-2020:0230</a></li>
<li><a href="https://bitbucket.org/rptlab/reportlab/issues/199/eval-in-colorspy-leads-to-remote-code">https://bitbucket.org/rptlab/reportlab/issues/199/eval-in-colorspy-leads-to-remote-code</a></li>
<li><a href="https://bitbucket.org/rptlab/reportlab/src/default/CHANGES.md">https://bitbucket.org/rptlab/reportlab/src/default/CHANGES.md</a></li>
<li><a href="https://hg.reportlab.com/hg-public/reportlab/rev/51a521ad7dd3">https://hg.reportlab.com/hg-public/reportlab/rev/51a521ad7dd3</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2020/02/msg00019.html">https://lists.debian.org/debian-lts-announce/2020/02/msg00019.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NSCTOE3DITFICY2XKBYZ5WAF5TSQ52DM/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NSCTOE3DITFICY2XKBYZ5WAF5TSQ52DM/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZZPHP2BJSTP4IYCSJRQINP763IHO6ASL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZZPHP2BJSTP4IYCSJRQINP763IHO6ASL/</a></li>
<li><a href="https://security.gentoo.org/glsa/202007-35">https://security.gentoo.org/glsa/202007-35</a></li>
<li><a href="https://usn.ubuntu.com/4273-1/">https://usn.ubuntu.com/4273-1/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4663">https://www.debian.org/security/2020/dsa-4663</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-02/msg00002.html">http://lists.opensuse.org/opensuse-security-announce/2020-02/msg00002.html</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2019-17626">https://access.redhat.com/security/cve/cve-2019-17626</a></li>
<li><a href="https://web.archive.org/web/20191016111823/https://bitbucket.org/rptlab/reportlab/issues/199/eval-in-colorspy-leads-to-remote-code">https://web.archive.org/web/20191016111823/https://bitbucket.org/rptlab/reportlab/issues/199/eval-in-colorspy-leads-to-remote-code</a></li>
<li><a href="https://github.com/advisories/GHSA-qpg2-vx7j-3869">https://github.com/advisories/GHSA-qpg2-vx7j-3869</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpg2-vx7j-3869</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-05-24T22:00:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pytorch-lightning] Code Injection in PyTorch Lightning]]></title>
        <id>https://github.com/advisories/GHSA-r5qj-cvf9-p85h</id>
        <link href="https://github.com/advisories/GHSA-r5qj-cvf9-p85h"/>
        <updated>2022-07-26T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<p>PyTorch Lightning version 1.5.10 and prior is vulnerable to code injection. An attacker could execute commands on the target OS running the operating system by setting the <code>PL_TRAINER_GPUS</code> when using the <code>Trainer</code> module. A <a href="https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae">patch</a> is included in the <code>1.6.0</code> release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0845">https://nvd.nist.gov/vuln/detail/CVE-2022-0845</a></li>
<li><a href="https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae">https://github.com/pytorchlightning/pytorch-lightning/commit/8b7a12c52e52a06408e9231647839ddb4665e8ae</a></li>
<li><a href="https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a">https://huntr.dev/bounties/a795bf93-c91e-4c79-aae8-f7d8bda92e2a</a></li>
<li><a href="https://github.com/PyTorchLightning/pytorch-lightning/pull/12212">https://github.com/PyTorchLightning/pytorch-lightning/pull/12212</a></li>
<li><a href="https://github.com/advisories/GHSA-r5qj-cvf9-p85h">https://github.com/advisories/GHSA-r5qj-cvf9-p85h</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pytorch-lightning/PYSEC-2022-181.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pytorch-lightning/PYSEC-2022-181.yaml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5qj-cvf9-p85h</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-03-06T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[python-libnmap] Argument injection in python-libnmap]]></title>
        <id>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</id>
        <link href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6"/>
        <updated>2022-07-26T21:57:50.000Z</updated>
        <content type="html"><![CDATA[<p>In the python-libnmap package through 0.7.2 for Python, remote command execution can occur (if used in a client application that does not validate arguments).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-30284">https://nvd.nist.gov/vuln/detail/CVE-2022-30284</a></li>
<li><a href="https://github.com/savon-noir/python-libnmap/releases">https://github.com/savon-noir/python-libnmap/releases</a></li>
<li><a href="https://pypi.org/project/python-libnmap/">https://pypi.org/project/python-libnmap/</a></li>
<li><a href="https://www.swascan.com/security-advisory-libnmap-2/">https://www.swascan.com/security-advisory-libnmap-2/</a></li>
<li><a href="https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process">https://libnmap.readthedocs.io/en/latest/process.html#using-libnmap-process</a></li>
<li><a href="https://github.com/advisories/GHSA-qwqv-j7jr-4hp6">https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qwqv-j7jr-4hp6</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-05-06T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyanyapi] Unsafe pyyaml load usage in PyAnyAPI]]></title>
        <id>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</id>
        <link href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r"/>
        <updated>2022-07-26T21:26:26.000Z</updated>
        <content type="html"><![CDATA[<p>An exploitable vulnerability exists in the YAML parsing functionality in the YAMLParser method in Interfaces.py in PyAnyAPI before 0.6.1. A YAML parser can execute arbitrary Python commands resulting in command execution because <code>load</code> is used where <code>safe_load</code> should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16616">https://nvd.nist.gov/vuln/detail/CVE-2017-16616</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/issues/41">https://github.com/Stranger6667/pyanyapi/issues/41</a></li>
<li><a href="https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1">https://github.com/Stranger6667/pyanyapi/releases/tag/0.6.1</a></li>
<li><a href="https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/">https://joel-malwarebenchmark.github.io/blog/2017/11/08/cve-2017-16616-yamlparser-in-pyanyapi/</a></li>
<li><a href="https://pypi.python.org/pypi/pyanyapi/0.6.1">https://pypi.python.org/pypi/pyanyapi/0.6.1</a></li>
<li><a href="https://github.com/advisories/GHSA-vg8g-jpm9-jh8r">https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vg8g-jpm9-jh8r</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-05-13T01:44:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pwntools] Server-Side Template Injection in pwntools]]></title>
        <id>https://github.com/advisories/GHSA-7xc5-ggpp-g249</id>
        <link href="https://github.com/advisories/GHSA-7xc5-ggpp-g249"/>
        <updated>2022-07-26T21:23:23.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package pwntools before 4.3.1. The shellcraft generator for affected versions of this module are vulnerable to Server-Side Template Injection (SSTI), which can lead to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28468">https://nvd.nist.gov/vuln/detail/CVE-2020-28468</a></li>
<li><a href="https://github.com/Gallopsled/pwntools/issues/1427">https://github.com/Gallopsled/pwntools/issues/1427</a></li>
<li><a href="https://github.com/Gallopsled/pwntools/pull/1732">https://github.com/Gallopsled/pwntools/pull/1732</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-PWNTOOLS-1047345">https://snyk.io/vuln/SNYK-PYTHON-PWNTOOLS-1047345</a></li>
<li><a href="https://github.com/advisories/GHSA-7xc5-ggpp-g249">https://github.com/advisories/GHSA-7xc5-ggpp-g249</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7xc5-ggpp-g249</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2021-04-20T16:13:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[poetry] Untrusted Search Path in Poetry]]></title>
        <id>https://github.com/advisories/GHSA-xr2c-5w89-63pv</id>
        <link href="https://github.com/advisories/GHSA-xr2c-5w89-63pv"/>
        <updated>2022-07-26T21:06:11.000Z</updated>
        <content type="html"><![CDATA[<p>Poetry prior to v1.1.9 was discovered to contain an untrusted search path which causes the application to behave in unexpected ways when users execute Poetry commands in a directory containing malicious content. This vulnerability occurs when the application is ran on Windows OS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26184">https://nvd.nist.gov/vuln/detail/CVE-2022-26184</a></li>
<li><a href="https://github.com/python-poetry/poetry-core/pull/205/commits/fa9cb6f358ae840885c700f954317f34838caba7">https://github.com/python-poetry/poetry-core/pull/205/commits/fa9cb6f358ae840885c700f954317f34838caba7</a></li>
<li><a href="https://github.com/python-poetry/poetry/releases/tag/1.1.9">https://github.com/python-poetry/poetry/releases/tag/1.1.9</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-234.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/poetry/PYSEC-2022-234.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xr2c-5w89-63pv">https://github.com/advisories/GHSA-xr2c-5w89-63pv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr2c-5w89-63pv</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-03-23T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[opendiamond] SatyaLab opendiamond 10.1.1 vulnerable to path traversal because Flask send_file function used unsafely]]></title>
        <id>https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</id>
        <link href="https://github.com/advisories/GHSA-x2pc-fqrw-hc7f"/>
        <updated>2022-07-26T21:01:58.000Z</updated>
        <content type="html"><![CDATA[<p>The cmusatyalab/opendiamond repository through 10.1.1 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely. A patch is available on the <code>master</code> branch of the repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31506">https://nvd.nist.gov/vuln/detail/CVE-2022-31506</a></li>
<li><a href="https://github.com/github/securitylab/issues/669#issuecomment-1117265726">https://github.com/github/securitylab/issues/669#issuecomment-1117265726</a></li>
<li><a href="https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56">https://github.com/cmusatyalab/opendiamond/commit/398049c187ee644beabab44d6fece82251c1ea56</a></li>
<li><a href="https://github.com/cmusatyalab/opendiamond/issues/52">https://github.com/cmusatyalab/opendiamond/issues/52</a></li>
<li><a href="https://github.com/advisories/GHSA-x2pc-fqrw-hc7f">https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x2pc-fqrw-hc7f</uri>
        </author>
        <category label="CRITICAL" term="severity"/>
        <published>2022-07-12T00:00:57.000Z</published>
    </entry>
</feed>