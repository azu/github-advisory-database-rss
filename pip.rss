<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-09-26T20:01:22.173Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[keystone] OpenStack Keystone Credential Leakage]]></title>
        <id>https://github.com/advisories/GHSA-2j23-fwqm-mgwr</id>
        <link href="https://github.com/advisories/GHSA-2j23-fwqm-mgwr"/>
        <updated>2023-09-26T19:59:21.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Keystone 15.0.0 and 16.0.0 is affected by Data Leakage in the list credentials API. Any user with a role on a project is able to list any credentials with the <code>/v3/credentials</code> API when <code>enforce_scope</code> is false. Users with a role on a project are able to view any other users' credentials, which could (for example) leak sign-on information for Time-based One Time Passwords (TOTP). Deployments with enforce_scope set to false are affected. (There will be a slight performance impact for the list credentials API once this issue is fixed.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19687">https://nvd.nist.gov/vuln/detail/CVE-2019-19687</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:4358">https://access.redhat.com/errata/RHSA-2019:4358</a></li>
<li><a href="https://bugs.launchpad.net/keystone/+bug/1855080">https://bugs.launchpad.net/keystone/+bug/1855080</a></li>
<li><a href="https://review.opendev.org/#/c/697355/">https://review.opendev.org/#/c/697355/</a></li>
<li><a href="https://review.opendev.org/#/c/697611/">https://review.opendev.org/#/c/697611/</a></li>
<li><a href="https://review.opendev.org/#/c/697731/">https://review.opendev.org/#/c/697731/</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2019-006.html">https://security.openstack.org/ossa/OSSA-2019-006.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/11/8">http://www.openwall.com/lists/oss-security/2019/12/11/8</a></li>
<li><a href="https://github.com/openstack/keystone/commit/17c337dbdbfb9d548ad531c2ad0483c9bce5b98f">https://github.com/openstack/keystone/commit/17c337dbdbfb9d548ad531c2ad0483c9bce5b98f</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1781470">https://bugzilla.redhat.com/show_bug.cgi?id=1781470</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=17947516b0095c51da5cff94771247f2e7c44ee6">https://git.openstack.org/cgit/openstack/keystone/commit/?id=17947516b0095c51da5cff94771247f2e7c44ee6</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=17c337dbdbfb9d548ad531c2ad0483c9bce5b98f">https://git.openstack.org/cgit/openstack/keystone/commit/?id=17c337dbdbfb9d548ad531c2ad0483c9bce5b98f</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=bd3f63787151183f4daa43578aa491856fefae5b">https://git.openstack.org/cgit/openstack/keystone/commit/?id=bd3f63787151183f4daa43578aa491856fefae5b</a></li>
<li><a href="https://github.com/advisories/GHSA-2j23-fwqm-mgwr">https://github.com/advisories/GHSA-2j23-fwqm-mgwr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j23-fwqm-mgwr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:02:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keystone] OpenStack Keystone Credential Leakage]]></title>
        <id>https://github.com/advisories/GHSA-2j23-fwqm-mgwr</id>
        <link href="https://github.com/advisories/GHSA-2j23-fwqm-mgwr"/>
        <updated>2023-09-26T19:59:21.000Z</updated>
        <content type="html"><![CDATA[<p>OpenStack Keystone 15.0.0 and 16.0.0 is affected by Data Leakage in the list credentials API. Any user with a role on a project is able to list any credentials with the <code>/v3/credentials</code> API when <code>enforce_scope</code> is false. Users with a role on a project are able to view any other users' credentials, which could (for example) leak sign-on information for Time-based One Time Passwords (TOTP). Deployments with enforce_scope set to false are affected. (There will be a slight performance impact for the list credentials API once this issue is fixed.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19687">https://nvd.nist.gov/vuln/detail/CVE-2019-19687</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:4358">https://access.redhat.com/errata/RHSA-2019:4358</a></li>
<li><a href="https://bugs.launchpad.net/keystone/+bug/1855080">https://bugs.launchpad.net/keystone/+bug/1855080</a></li>
<li><a href="https://review.opendev.org/#/c/697355/">https://review.opendev.org/#/c/697355/</a></li>
<li><a href="https://review.opendev.org/#/c/697611/">https://review.opendev.org/#/c/697611/</a></li>
<li><a href="https://review.opendev.org/#/c/697731/">https://review.opendev.org/#/c/697731/</a></li>
<li><a href="https://security.openstack.org/ossa/OSSA-2019-006.html">https://security.openstack.org/ossa/OSSA-2019-006.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/12/11/8">http://www.openwall.com/lists/oss-security/2019/12/11/8</a></li>
<li><a href="https://github.com/openstack/keystone/commit/17c337dbdbfb9d548ad531c2ad0483c9bce5b98f">https://github.com/openstack/keystone/commit/17c337dbdbfb9d548ad531c2ad0483c9bce5b98f</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1781470">https://bugzilla.redhat.com/show_bug.cgi?id=1781470</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=17947516b0095c51da5cff94771247f2e7c44ee6">https://git.openstack.org/cgit/openstack/keystone/commit/?id=17947516b0095c51da5cff94771247f2e7c44ee6</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=17c337dbdbfb9d548ad531c2ad0483c9bce5b98f">https://git.openstack.org/cgit/openstack/keystone/commit/?id=17c337dbdbfb9d548ad531c2ad0483c9bce5b98f</a></li>
<li><a href="https://git.openstack.org/cgit/openstack/keystone/commit/?id=bd3f63787151183f4daa43578aa491856fefae5b">https://git.openstack.org/cgit/openstack/keystone/commit/?id=bd3f63787151183f4daa43578aa491856fefae5b</a></li>
<li><a href="https://github.com/advisories/GHSA-2j23-fwqm-mgwr">https://github.com/advisories/GHSA-2j23-fwqm-mgwr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j23-fwqm-mgwr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:02:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper's `_abi_decode` input not validated in complex expressions]]></title>
        <id>https://github.com/advisories/GHSA-cx2q-hfxr-rj97</id>
        <link href="https://github.com/advisories/GHSA-cx2q-hfxr-rj97"/>
        <updated>2023-09-26T19:34:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><code>_abi_decode()</code> does not validate input when it is nested in an expression. the following example gets correctly validated (bounds checked):</p>
<pre><code class="language-vyper">x: int128 = _abi_decode(slice(msg.data, 4, 32), int128)
</code></pre>
<p>however, the following example is not bounds checked</p>
<pre><code class="language-vyper">@external
def abi_decode(x: uint256) -&gt; uint256:
    a: uint256 = convert(_abi_decode(slice(msg.data, 4, 32), (uint8)), uint256) + 1
    return a  # abi_decode(256) returns: 257
</code></pre>
<p>the issue can be triggered by constructing an example where the output of <code>_abi_decode</code> is not internally passed to <code>make_setter</code> (an internal codegen routine) or other input validating routine.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/vyperlang/vyper/pull/3626">https://github.com/vyperlang/vyper/pull/3626</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-cx2q-hfxr-rj97">https://github.com/vyperlang/vyper/security/advisories/GHSA-cx2q-hfxr-rj97</a></li>
<li><a href="https://github.com/advisories/GHSA-cx2q-hfxr-rj97">https://github.com/advisories/GHSA-cx2q-hfxr-rj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx2q-hfxr-rj97</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-26T19:34:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] matrix-synapse vulnerable to improper validation of receipts allows forged read receipts]]></title>
        <id>https://github.com/advisories/GHSA-7565-cq32-vx2x</id>
        <link href="https://github.com/advisories/GHSA-7565-cq32-vx2x"/>
        <updated>2023-09-26T19:20:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users were able to forge read receipts for any event (if they knew the room ID and event ID). Note that the users were not able to view the events, but simply mark it as read. This could be confusing as clients will show the event as read by the user, even if they are not in the room.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/matrix-org/synapse/pull/16327">https://github.com/matrix-org/synapse/pull/16327</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/synapse/security/advisories/GHSA-7565-cq32-vx2x">https://github.com/matrix-org/synapse/security/advisories/GHSA-7565-cq32-vx2x</a></li>
<li><a href="https://github.com/matrix-org/synapse/pull/16327">https://github.com/matrix-org/synapse/pull/16327</a></li>
<li><a href="https://github.com/matrix-org/synapse/commit/63d28a88c1d18c64ea7e23b6dd7483e6d5dcf881">https://github.com/matrix-org/synapse/commit/63d28a88c1d18c64ea7e23b6dd7483e6d5dcf881</a></li>
<li><a href="https://github.com/advisories/GHSA-7565-cq32-vx2x">https://github.com/advisories/GHSA-7565-cq32-vx2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7565-cq32-vx2x</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-26T19:20:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-synapse] matrix-synapse vulnerable to temporary storage of plaintext passwords during password changes]]></title>
        <id>https://github.com/advisories/GHSA-4f74-84v3-j9q5</id>
        <link href="https://github.com/advisories/GHSA-4f74-84v3-j9q5"/>
        <updated>2023-09-26T18:56:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When users update their passwords, the new credentials may be briefly held in the server database. While this doesn't grant the server any added capabilities—it already learns the users' passwords as part of the authentication process—it does disrupt the expectation that passwords won't be stored in the database. As a result, these passwords could inadvertently be captured in database backups for a longer duration.</p>
<p>These temporarily stored passwords are automatically erased after a 48-hour window.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/matrix-org/synapse/pull/16272">https://github.com/matrix-org/synapse/pull/16272</a></p>
<h3 id="references">References</h3>
<p>This bug was due to a regression in <a href="https://github.com/matrix-org/synapse/pull/13188">https://github.com/matrix-org/synapse/pull/13188</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/synapse/security/advisories/GHSA-4f74-84v3-j9q5">https://github.com/matrix-org/synapse/security/advisories/GHSA-4f74-84v3-j9q5</a></li>
<li><a href="https://github.com/matrix-org/synapse/pull/13188">https://github.com/matrix-org/synapse/pull/13188</a></li>
<li><a href="https://github.com/matrix-org/synapse/pull/16272">https://github.com/matrix-org/synapse/pull/16272</a></li>
<li><a href="https://github.com/matrix-org/synapse/commit/69b74d9330e42fc91a9c7423d00a06cd6d3732bf">https://github.com/matrix-org/synapse/commit/69b74d9330e42fc91a9c7423d00a06cd6d3732bf</a></li>
<li><a href="https://github.com/advisories/GHSA-4f74-84v3-j9q5">https://github.com/advisories/GHSA-4f74-84v3-j9q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f74-84v3-j9q5</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-26T18:55:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[numpy] Numpy Deserialization of Untrusted Data]]></title>
        <id>https://github.com/advisories/GHSA-9fq2-x9r6-wfmf</id>
        <link href="https://github.com/advisories/GHSA-9fq2-x9r6-wfmf"/>
        <updated>2023-09-26T16:36:16.000Z</updated>
        <content type="html"><![CDATA[<p>** DISPUTED **   An issue was discovered in NumPy 1.16.0 and earlier. It uses the pickle Python module unsafely, which allows remote attackers to execute arbitrary code via a crafted serialized object, as demonstrated by a numpy.load call. NOTE: third parties dispute this issue because it is  a behavior that might have legitimate applications in (for example)  loading serialized Python object arrays from trusted and authenticated  sources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-6446">https://nvd.nist.gov/vuln/detail/CVE-2019-6446</a></li>
<li><a href="https://github.com/numpy/numpy/issues/12759">https://github.com/numpy/numpy/issues/12759</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1122208">https://bugzilla.suse.com/show_bug.cgi?id=1122208</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7ZZAYIQNUUYXGMKHSPEEXS4TRYFOUYE4/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7ZZAYIQNUUYXGMKHSPEEXS4TRYFOUYE4/</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00091.html">http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00091.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00092.html">http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00092.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00015.html">http://lists.opensuse.org/opensuse-security-announce/2019-10/msg00015.html</a></li>
<li><a href="https://github.com/numpy/numpy/pull/12889">https://github.com/numpy/numpy/pull/12889</a></li>
<li><a href="https://web.archive.org/web/20210124234613/https://www.securityfocus.com/bid/106670/">https://web.archive.org/web/20210124234613/https://www.securityfocus.com/bid/106670/</a></li>
<li><a href="https://github.com/advisories/GHSA-9fq2-x9r6-wfmf">https://github.com/advisories/GHSA-9fq2-x9r6-wfmf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fq2-x9r6-wfmf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T22:00:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible-core] Ansible Uses Plugins That Disclose Credentials]]></title>
        <id>https://github.com/advisories/GHSA-pm48-cvv2-29q5</id>
        <link href="https://github.com/advisories/GHSA-pm48-cvv2-29q5"/>
        <updated>2023-09-25T19:40:08.000Z</updated>
        <content type="html"><![CDATA[<p>Ansible, all ansible_engine-2.x versions and ansible_engine-3.x up to ansible_engine-3.5, was logging at the DEBUG level which lead to a disclosure of credentials if a plugin used a library that logged credentials at the DEBUG level. This flaw does not affect Ansible modules, as those are executed in a separate process.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14846">https://nvd.nist.gov/vuln/detail/CVE-2019-14846</a></li>
<li><a href="https://github.com/ansible/ansible/pull/63366">https://github.com/ansible/ansible/pull/63366</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3201">https://access.redhat.com/errata/RHSA-2019:3201</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3202">https://access.redhat.com/errata/RHSA-2019:3202</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3203">https://access.redhat.com/errata/RHSA-2019:3203</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:3207">https://access.redhat.com/errata/RHSA-2019:3207</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0756">https://access.redhat.com/errata/RHSA-2020:0756</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14846">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14846</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2020/05/msg00005.html">https://lists.debian.org/debian-lts-announce/2020/05/msg00005.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html">https://lists.debian.org/debian-lts-announce/2021/01/msg00023.html</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4950">https://www.debian.org/security/2021/dsa-4950</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00021.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00021.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00026.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00026.html</a></li>
<li><a href="https://github.com/advisories/GHSA-pm48-cvv2-29q5">https://github.com/advisories/GHSA-pm48-cvv2-29q5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pm48-cvv2-29q5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:58:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wolfcrypt] wolfCrypt leaks cryptographic information via timing side channel]]></title>
        <id>https://github.com/advisories/GHSA-q95h-vc86-hv77</id>
        <link href="https://github.com/advisories/GHSA-q95h-vc86-hv77"/>
        <updated>2023-09-25T19:35:51.000Z</updated>
        <content type="html"><![CDATA[<p>wolfSSL and wolfCrypt 4.0.0 and earlier (when configured without <code>--enable-fpecc</code>, <code>--enable-sp</code>, or<code> --enable-sp-math</code>) contain a timing side channel in ECDSA signature generation. This allows a local attacker, able to precisely measure the duration of signature operations, to infer information about the nonces used and potentially mount a lattice attack to recover the private key used. The issue occurs because ecc.c scalar multiplication might leak the bit length.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-13628">https://nvd.nist.gov/vuln/detail/CVE-2019-13628</a></li>
<li><a href="https://eprint.iacr.org/2011/232.pdf">https://eprint.iacr.org/2011/232.pdf</a></li>
<li><a href="https://minerva.crocs.fi.muni.cz/">https://minerva.crocs.fi.muni.cz/</a></li>
<li><a href="https://tches.iacr.org/index.php/TCHES/article/view/7337">https://tches.iacr.org/index.php/TCHES/article/view/7337</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/10/02/2">http://www.openwall.com/lists/oss-security/2019/10/02/2</a></li>
<li><a href="https://github.com/advisories/GHSA-q95h-vc86-hv77">https://github.com/advisories/GHSA-q95h-vc86-hv77</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q95h-vc86-hv77</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T16:57:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] XSS in Django]]></title>
        <id>https://github.com/advisories/GHSA-2m34-jcjv-45xf</id>
        <link href="https://github.com/advisories/GHSA-2m34-jcjv-45xf"/>
        <updated>2023-09-25T18:53:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django version 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13596">https://nvd.nist.gov/vuln/detail/CVE-2020-13596</a></li>
<li><a href="https://docs.djangoproject.com/en/3.0/releases/security/">https://docs.djangoproject.com/en/3.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!msg/django-announce/pPEmb2ot4Fo/X-SMalYSBAAJ">https://groups.google.com/forum/#!msg/django-announce/pPEmb2ot4Fo/X-SMalYSBAAJ</a></li>
<li><a href="https://www.djangoproject.com/weblog/2020/jun/03/security-releases/">https://www.djangoproject.com/weblog/2020/jun/03/security-releases/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200611-0002/">https://security.netapp.com/advisory/ntap-20200611-0002/</a></li>
<li><a href="https://usn.ubuntu.com/4381-1/">https://usn.ubuntu.com/4381-1/</a></li>
<li><a href="https://usn.ubuntu.com/4381-2/">https://usn.ubuntu.com/4381-2/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4705">https://www.debian.org/security/2020/dsa-4705</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38">https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38</a></li>
<li><a href="https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815">https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815</a></li>
<li><a href="https://github.com/advisories/GHSA-2m34-jcjv-45xf">https://github.com/advisories/GHSA-2m34-jcjv-45xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2m34-jcjv-45xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-06-05T16:24:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] XSS in Django]]></title>
        <id>https://github.com/advisories/GHSA-2m34-jcjv-45xf</id>
        <link href="https://github.com/advisories/GHSA-2m34-jcjv-45xf"/>
        <updated>2023-09-25T18:53:52.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django version 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-13596">https://nvd.nist.gov/vuln/detail/CVE-2020-13596</a></li>
<li><a href="https://docs.djangoproject.com/en/3.0/releases/security/">https://docs.djangoproject.com/en/3.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!msg/django-announce/pPEmb2ot4Fo/X-SMalYSBAAJ">https://groups.google.com/forum/#!msg/django-announce/pPEmb2ot4Fo/X-SMalYSBAAJ</a></li>
<li><a href="https://www.djangoproject.com/weblog/2020/jun/03/security-releases/">https://www.djangoproject.com/weblog/2020/jun/03/security-releases/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200611-0002/">https://security.netapp.com/advisory/ntap-20200611-0002/</a></li>
<li><a href="https://usn.ubuntu.com/4381-1/">https://usn.ubuntu.com/4381-1/</a></li>
<li><a href="https://usn.ubuntu.com/4381-2/">https://usn.ubuntu.com/4381-2/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4705">https://www.debian.org/security/2020/dsa-4705</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38">https://github.com/django/django/commit/1f2dd37f6fcefdd10ed44cb233b2e62b520afb38</a></li>
<li><a href="https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815">https://github.com/django/django/commit/6d61860b22875f358fac83d903dc629897934815</a></li>
<li><a href="https://github.com/advisories/GHSA-2m34-jcjv-45xf">https://github.com/advisories/GHSA-2m34-jcjv-45xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2m34-jcjv-45xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2020-06-05T16:24:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gevent] Gevent allows remote attacker to escalate privileges]]></title>
        <id>https://github.com/advisories/GHSA-x7m3-jprg-wc5g</id>
        <link href="https://github.com/advisories/GHSA-x7m3-jprg-wc5g"/>
        <updated>2023-09-26T13:58:45.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in Gevent Gevent before version 23.9.1 allows a remote attacker to escalate privileges via a crafted script to the WSGIServer component.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41419">https://nvd.nist.gov/vuln/detail/CVE-2023-41419</a></li>
<li><a href="https://github.com/gevent/gevent/issues/1989">https://github.com/gevent/gevent/issues/1989</a></li>
<li><a href="https://github.com/gevent/gevent/commit/2f53c851eaf926767fbac62385615efd4886221c">https://github.com/gevent/gevent/commit/2f53c851eaf926767fbac62385615efd4886221c</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/gevent/PYSEC-2023-177.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/gevent/PYSEC-2023-177.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-x7m3-jprg-wc5g">https://github.com/advisories/GHSA-x7m3-jprg-wc5g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x7m3-jprg-wc5g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-25T12:30:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[searchor] Searchor CLI's Search vulnerable to Arbitrary Code using Eval]]></title>
        <id>https://github.com/advisories/GHSA-66m2-493m-crh2</id>
        <link href="https://github.com/advisories/GHSA-66m2-493m-crh2"/>
        <updated>2023-09-25T18:37:57.000Z</updated>
        <content type="html"><![CDATA[<p> An issue in Arjun Sharda's Searchor before version v.2.4.2 allows an attacker to
 execute arbitrary code via a crafted script to the eval() function in Searchor's src/searchor/main.py file, affecting the search feature in Searchor's CLI (Command Line Interface).</p>
<h3 id="impact">Impact</h3>
<p>Versions equal to, or below 2.4.1 are affected.</p>
<h3 id="patches">Patches</h3>
<p>Versions above, or equal to 2.4.2 have patched the vulnerability.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection">https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection</a>
<a href="https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-">https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-</a>
<a href="https://github.com/jonnyzar/POC-Searchor-2.4.2">https://github.com/jonnyzar/POC-Searchor-2.4.2</a>
<a href="https://github.com/ArjunSharda/Searchor/pull/130">https://github.com/ArjunSharda/Searchor/pull/130</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ArjunSharda/Searchor/security/advisories/GHSA-66m2-493m-crh2">https://github.com/ArjunSharda/Searchor/security/advisories/GHSA-66m2-493m-crh2</a></li>
<li><a href="https://github.com/ArjunSharda/Searchor/pull/130">https://github.com/ArjunSharda/Searchor/pull/130</a></li>
<li><a href="https://github.com/ArjunSharda/Searchor/commit/16016506f7bf92b0f21f51841d599126d6fcd15b">https://github.com/ArjunSharda/Searchor/commit/16016506f7bf92b0f21f51841d599126d6fcd15b</a></li>
<li><a href="https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-">https://github.com/nexis-nexis/Searchor-2.4.0-POC-Exploit-</a></li>
<li><a href="https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection">https://github.com/nikn0laty/Exploit-for-Searchor-2.4.0-Arbitrary-CMD-Injection</a></li>
<li><a href="https://github.com/advisories/GHSA-66m2-493m-crh2">https://github.com/advisories/GHSA-66m2-493m-crh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66m2-493m-crh2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-25T18:37:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[barbican] OpenStack Barbican information disclosure vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6rx9-c2rh-3qv4</id>
        <link href="https://github.com/advisories/GHSA-6rx9-c2rh-3qv4"/>
        <updated>2023-09-25T18:34:33.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in OpenStack Barbican containers. This vulnerability is only applicable to deployments that utilize an all-in-one configuration. Barbican containers share the same CGROUP, USER, and NET namespace with the host system and other OpenStack services. If any service is compromised, it could gain access to the data transmitted to and from Barbican.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1636">https://nvd.nist.gov/vuln/detail/CVE-2023-1636</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1636">https://access.redhat.com/security/cve/CVE-2023-1636</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2181765">https://bugzilla.redhat.com/show_bug.cgi?id=2181765</a></li>
<li><a href="https://github.com/advisories/GHSA-6rx9-c2rh-3qv4">https://github.com/advisories/GHSA-6rx9-c2rh-3qv4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6rx9-c2rh-3qv4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-24T03:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[barbican] OpenStack Barbican credential leak flaw]]></title>
        <id>https://github.com/advisories/GHSA-6qqp-4vm3-359v</id>
        <link href="https://github.com/advisories/GHSA-6qqp-4vm3-359v"/>
        <updated>2023-09-26T18:42:36.000Z</updated>
        <content type="html"><![CDATA[<p>A credentials leak flaw was found in OpenStack Barbican. This flaw allows a local authenticated attacker to read the configuration file, gaining access to sensitive credentials.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1633">https://nvd.nist.gov/vuln/detail/CVE-2023-1633</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-1633">https://access.redhat.com/security/cve/CVE-2023-1633</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2181761">https://bugzilla.redhat.com/show_bug.cgi?id=2181761</a></li>
<li><a href="https://github.com/advisories/GHSA-6qqp-4vm3-359v">https://github.com/advisories/GHSA-6qqp-4vm3-359v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6qqp-4vm3-359v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-24T03:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[yt-dlp]  yt-dlp on Windows vulnerable to `--exec` command injection when using `%q`]]></title>
        <id>https://github.com/advisories/GHSA-42h4-v29r-42qg</id>
        <link href="https://github.com/advisories/GHSA-42h4-v29r-42qg"/>
        <updated>2023-09-26T13:57:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><a href="https://github.com/yt-dlp/yt-dlp"><code>yt-dlp</code></a> allows the user to provide shell commands to be executed at various stages in its download process through the <code>--exec</code> flag. This flag allows output template expansion in its argument, so that video metadata values may be used in the shell commands. The metadata fields can be combined with the <code>%q</code> conversion, which is intended to quote/escape these values so they can be safely passed to the shell.</p>
<p>However, the escaping used for <code>cmd</code> (the shell used by Python's <code>subprocess</code> on Windows) did not properly escape special characters, which can allow for remote code execution if <code>--exec</code> is used directly with maliciously crafted remote data. This vulnerability only impacts <code>yt-dlp</code> on Windows, and the vulnerability is present regardless of whether <code>yt-dlp</code> is run from <code>cmd</code> or from <code>PowerShell</code>.</p>
<p>Support for output template expansion in <code>--exec</code>, along with this vulnerable behavior, was added to <code>yt-dlp</code> in version <a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11">2021.04.11</a>.</p>
<pre><code class="language-shell">&gt; yt-dlp https://youtu.be/Jo66yyCpHcQ --exec "echo %(title)q"
[youtube] Extracting URL: https://youtu.be/Jo66yyCpHcQ
[youtube] Jo66yyCpHcQ: Downloading webpage
[youtube] Jo66yyCpHcQ: Downloading ios player API JSON
[youtube] Jo66yyCpHcQ: Downloading android player API JSON
[youtube] Jo66yyCpHcQ: Downloading m3u8 information
[info] Jo66yyCpHcQ: Downloading 1 format(s): 135+251
[download] Destination: ＂&amp;echo(&amp;echo(pwned&amp;rem( [Jo66yyCpHcQ].f135.mp4
[download] 100% of    4.85KiB in 00:00:00 at 60.20KiB/s
[download] Destination: ＂&amp;echo(&amp;echo(pwned&amp;rem( [Jo66yyCpHcQ].f251.webm
[download] 100% of    4.80KiB in 00:00:00 at 31.58KiB/s
[Merger] Merging formats into "＂&amp;echo(&amp;echo(pwned&amp;rem( [Jo66yyCpHcQ].mkv"
Deleting original file ＂&amp;echo(&amp;echo(pwned&amp;rem( [Jo66yyCpHcQ].f135.mp4 (pass -k to keep)
Deleting original file ＂&amp;echo(&amp;echo(pwned&amp;rem( [Jo66yyCpHcQ].f251.webm (pass -k to keep)
[Exec] Executing command: echo "\"&amp;echo(&amp;echo(pwned&amp;rem("
"\"

pwned
</code></pre>
<h3 id="patches">Patches</h3>
<p>yt-dlp version 2023.09.24 fixes this issue by properly escaping each special character.
<code>\n</code> will be replaced by <code>\r</code>, as no way of escaping it has been found.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade yt-dlp to version 2023.09.24 as soon as possible. Also, always be careful when using <code>--exec</code>, because while this specific vulnerability has been patched, using unvalidated input in shell commands is inherently dangerous.</p>
<p>For Windows users who are not able to upgrade:</p>
<ul>
<li>Avoid using any output template expansion in <code>--exec</code> other than <code>{}</code> (filepath).</li>
<li>If expansion in <code>--exec</code> is needed, verify the fields you are using do not contain <code>"</code>, <code>|</code> or <code>&amp;</code>.</li>
<li>Instead of using <code>--exec</code>, write the info json and load the fields from it instead.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg">https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40581">https://nvd.nist.gov/vuln/detail/CVE-2023-40581</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24">https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044">https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e">https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg">https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-42h4-v29r-42qg</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e">https://github.com/yt-dlp/yt-dlp/commit/de015e930747165dbb8fcd360f8775fd973b7d6e</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24">https://github.com/yt-dlp/yt-dlp/releases/tag/2023.09.24</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40581">https://nvd.nist.gov/vuln/detail/CVE-2023-40581</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044">https://github.com/yt-dlp/yt-dlp-nightly-builds/releases/tag/2023.09.24.003044</a></li>
<li><a href="https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11">https://github.com/yt-dlp/yt-dlp/releases/tag/2021.04.11</a></li>
<li><a href="https://github.com/advisories/GHSA-42h4-v29r-42qg">https://github.com/advisories/GHSA-42h4-v29r-42qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-42h4-v29r-42qg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-25T17:33:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper vulnerable to memory corruption in certain builtins utilizing `msize`]]></title>
        <id>https://github.com/advisories/GHSA-c647-pxm2-c52w</id>
        <link href="https://github.com/advisories/GHSA-c647-pxm2-c52w"/>
        <updated>2023-09-25T16:55:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In certain conditions, the memory used by the builtins <code>raw_call</code>, <code>create_from_blueprint</code> and <code>create_copy_of</code> can be corrupted.</p>
<ul>
<li>For <code>raw_call</code>, the argument buffer of the call can be corrupted, leading to incorrect <code>calldata</code> in the sub-context.</li>
<li>For  <code>create_from_blueprint</code> and <code>create_copy_of</code>, the buffer for the to-be-deployed bytecode can be corrupted, leading to deploying incorrect bytecode.</li>
</ul>
<p>Below are the conditions that must be fulfilled for the corruption to happen for each builtin:</p>
<h4 id="raw_call"><code>raw_call</code></h4>
<ul>
<li>memory is not fully initialized, ex. all parameters to an external function live in calldata
and</li>
<li>The <code>data</code> argument of the builtin is <code>msg.data</code>.
and</li>
<li>The <code>to</code>, <code>value</code> or <code>gas</code> passed to the builtin is some complex expression that results in writing to uninitialized memory (e.g. calling an internal function)</li>
</ul>
<h4 id="create_copy_of"><code>create_copy_of</code></h4>
<ul>
<li>memory is not fully initialized, ex. all parameters to an external function live in calldata
and</li>
<li>The <code>value</code> or <code>salt</code> passed to the builtin is some complex expression that results in writing to  uninitialized memory (e.g. calling an internal function)</li>
</ul>
<h4 id="create_from_blueprint"><code>create_from_blueprint</code></h4>
<ul>
<li>memory is not fully initialized, ex. all parameters to an external function live in calldata
and</li>
<li>Either no constructor parameters are passed to the builtin or <code>raw_args</code> is set to True.
and</li>
<li>The <code>value</code> or <code>salt</code> passed to the builtin is some complex expression that results in writing to uninitialized memory (e.g. calling an internal function)</li>
</ul>
<p>Note: When the builtin is being called from an <code>internal</code> function <code>f</code> from a function <code>g</code>, the issue is not present provided that <code>g</code> has written to memory before calling <code>f</code>.</p>
<h4 id="examples">Examples</h4>
<h5 id="raw_call-1"><code>raw_call</code></h5>
<p>In the following contract, calling <code>bar(1,1)</code> will return:</p>
<pre><code class="language-Python">ae42e95100000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000001
</code></pre>
<p>instead of:</p>
<pre><code class="language-Python">ae42e95100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001
</code></pre>
<pre><code class="language-Python">identity: constant(address) = 0x0000000000000000000000000000000000000004

@external
def foo():
    pass

@internal
@view
def get_address()-&gt;address:
    a:uint256 = max_value(uint256) # 0xfff...fff
    return identity
@external
def bar(f:uint256, u:uint256) -&gt; Bytes[100]:
    a: Bytes[100] = raw_call(self.get_address(), msg.data, max_outsize=100)
    return a
</code></pre>
<h5 id="create_copy_of-1"><code>create_copy_of</code></h5>
<p>In the following contract, after calling <code>test()</code>, the code deployed at <code>self.created_address</code> does not match the bytecode at <code>target</code>.</p>
<pre><code class="language-Vyper">created_address: public(address)

@external
def test(target: address) -&gt; address:
    # The expression in salt= is complex and will require to store to memory
    self.created_address = create_copy_of(target, salt = keccak256(_abi_encode(target)))
    return self.created_address
</code></pre>
<h5 id="create_from_blueprint-1"><code>create_from_blueprint</code></h5>
<p>In the following contract, after calling <code>test()</code>, the init bytecode used to create the contract deployed at the address <code>self.created_address</code> will not match the blueprint bytecode stored at <code>target</code>.</p>
<pre><code class="language-Vyper">created_address: public(address)

salt: constant(bytes32) = keccak256("kebab")

@external
@payable
def test(target: address):
    # The expression in salt= is complex and will require to store to memory
    self.created_address = create_from_blueprint(target, code_offset=0, salt=keccak256(_abi_encode(target)))
</code></pre>
<h3 id="patches">Patches</h3>
<p>issue tracking in <a href="https://github.com/vyperlang/vyper/issues/3609">https://github.com/vyperlang/vyper/issues/3609</a>, patched in #3610 </p>
<h3 id="workarounds">Workarounds</h3>
<p>The complex expressions that are being passed as kwargs to the builtin should be cached in memory prior to the call to the builtin. For the last example above, it would be:</p>
<pre><code class="language-Vyper">created_address: public(address)

salt: constant(bytes32) = keccak256("kebab")

@external
@payable
def test(target: address):
    salt: bytes32 = keccak256(_abi_encode(target))
    self.created_address = create_from_blueprint(target, code_offset=0, salt=salt)
</code></pre>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-c647-pxm2-c52w">https://github.com/vyperlang/vyper/security/advisories/GHSA-c647-pxm2-c52w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42443">https://nvd.nist.gov/vuln/detail/CVE-2023-42443</a></li>
<li><a href="https://github.com/vyperlang/vyper/issues/3609">https://github.com/vyperlang/vyper/issues/3609</a></li>
<li><a href="https://github.com/vyperlang/vyper/pull/3610">https://github.com/vyperlang/vyper/pull/3610</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/79303fc4fcba06994ee5c6a7baef57bdb185006c">https://github.com/vyperlang/vyper/commit/79303fc4fcba06994ee5c6a7baef57bdb185006c</a></li>
<li><a href="https://github.com/advisories/GHSA-c647-pxm2-c52w">https://github.com/advisories/GHSA-c647-pxm2-c52w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c647-pxm2-c52w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-20T23:05:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[plone] Plone credentials stored in session cookie]]></title>
        <id>https://github.com/advisories/GHSA-hjp5-hv33-q58g</id>
        <link href="https://github.com/advisories/GHSA-hjp5-hv33-q58g"/>
        <updated>2023-09-22T23:41:41.000Z</updated>
        <content type="html"><![CDATA[<p>Plone CMS 3.1.x uses invariant data (a client username and a server secret) when calculating an HMAC-SHA1 value for an authentication cookie, which makes it easier for remote attackers to gain permanent access to an account by sniffing the network.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2008-1396">https://nvd.nist.gov/vuln/detail/CVE-2008-1396</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/41421">https://exchange.xforce.ibmcloud.com/vulnerabilities/41421</a></li>
<li><a href="http://securityreason.com/securityalert/3754">http://securityreason.com/securityalert/3754</a></li>
<li><a href="http://www.procheckup.com/Hacking_Plone_CMS.pdf">http://www.procheckup.com/Hacking_Plone_CMS.pdf</a></li>
<li><a href="http://www.securityfocus.com/archive/1/489544/100/0/threaded">http://www.securityfocus.com/archive/1/489544/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-hjp5-hv33-q58g">https://github.com/advisories/GHSA-hjp5-hv33-q58g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjp5-hv33-q58g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-01T23:39:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54qj-48vx-cr9f</id>
        <link href="https://github.com/advisories/GHSA-54qj-48vx-cr9f"/>
        <updated>2023-09-22T23:12:27.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the login form in the administration application in Django 0.91 before 0.91.2, 0.95 before 0.95.3, and 0.96 before 0.96.2 allows remote attackers to inject arbitrary web script or HTML via the URI of a certain previous request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2008-2302">https://nvd.nist.gov/vuln/detail/CVE-2008-2302</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/42396">https://exchange.xforce.ibmcloud.com/vulnerabilities/42396</a></li>
<li><a href="http://secunia.com/advisories/30250">http://secunia.com/advisories/30250</a></li>
<li><a href="http://secunia.com/advisories/30291">http://secunia.com/advisories/30291</a></li>
<li><a href="http://securitytracker.com/id?1020028">http://securitytracker.com/id?1020028</a></li>
<li><a href="http://www.djangoproject.com/weblog/2008/may/14/security/">http://www.djangoproject.com/weblog/2008/may/14/security/</a></li>
<li><a href="http://www.securityfocus.com/bid/29209">http://www.securityfocus.com/bid/29209</a></li>
<li><a href="http://www.vupen.com/english/advisories/2008/1618">http://www.vupen.com/english/advisories/2008/1618</a></li>
<li><a href="https://github.com/advisories/GHSA-54qj-48vx-cr9f">https://github.com/advisories/GHSA-54qj-48vx-cr9f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54qj-48vx-cr9f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-01T23:48:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54qj-48vx-cr9f</id>
        <link href="https://github.com/advisories/GHSA-54qj-48vx-cr9f"/>
        <updated>2023-09-22T23:12:27.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the login form in the administration application in Django 0.91 before 0.91.2, 0.95 before 0.95.3, and 0.96 before 0.96.2 allows remote attackers to inject arbitrary web script or HTML via the URI of a certain previous request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2008-2302">https://nvd.nist.gov/vuln/detail/CVE-2008-2302</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/42396">https://exchange.xforce.ibmcloud.com/vulnerabilities/42396</a></li>
<li><a href="http://secunia.com/advisories/30250">http://secunia.com/advisories/30250</a></li>
<li><a href="http://secunia.com/advisories/30291">http://secunia.com/advisories/30291</a></li>
<li><a href="http://securitytracker.com/id?1020028">http://securitytracker.com/id?1020028</a></li>
<li><a href="http://www.djangoproject.com/weblog/2008/may/14/security/">http://www.djangoproject.com/weblog/2008/may/14/security/</a></li>
<li><a href="http://www.securityfocus.com/bid/29209">http://www.securityfocus.com/bid/29209</a></li>
<li><a href="http://www.vupen.com/english/advisories/2008/1618">http://www.vupen.com/english/advisories/2008/1618</a></li>
<li><a href="https://github.com/advisories/GHSA-54qj-48vx-cr9f">https://github.com/advisories/GHSA-54qj-48vx-cr9f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54qj-48vx-cr9f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-01T23:48:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-54qj-48vx-cr9f</id>
        <link href="https://github.com/advisories/GHSA-54qj-48vx-cr9f"/>
        <updated>2023-09-22T23:12:27.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the login form in the administration application in Django 0.91 before 0.91.2, 0.95 before 0.95.3, and 0.96 before 0.96.2 allows remote attackers to inject arbitrary web script or HTML via the URI of a certain previous request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2008-2302">https://nvd.nist.gov/vuln/detail/CVE-2008-2302</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/42396">https://exchange.xforce.ibmcloud.com/vulnerabilities/42396</a></li>
<li><a href="http://secunia.com/advisories/30250">http://secunia.com/advisories/30250</a></li>
<li><a href="http://secunia.com/advisories/30291">http://secunia.com/advisories/30291</a></li>
<li><a href="http://securitytracker.com/id?1020028">http://securitytracker.com/id?1020028</a></li>
<li><a href="http://www.djangoproject.com/weblog/2008/may/14/security/">http://www.djangoproject.com/weblog/2008/may/14/security/</a></li>
<li><a href="http://www.securityfocus.com/bid/29209">http://www.securityfocus.com/bid/29209</a></li>
<li><a href="http://www.vupen.com/english/advisories/2008/1618">http://www.vupen.com/english/advisories/2008/1618</a></li>
<li><a href="https://github.com/advisories/GHSA-54qj-48vx-cr9f">https://github.com/advisories/GHSA-54qj-48vx-cr9f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-54qj-48vx-cr9f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-01T23:48:43.000Z</published>
    </entry>
</feed>