<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-03-22T00:18:37.703Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[gerapy] Command injection in Gerapy]]></title>
        <id>https://github.com/advisories/GHSA-g57j-q48p-9vm2</id>
        <link href="https://github.com/advisories/GHSA-g57j-q48p-9vm2"/>
        <updated>2022-03-21T22:49:53.000Z</updated>
        <content type="html"><![CDATA[<p>This affects the package Gerapy from 0 and before 0.9.3. The input being passed to Popen, via the project_configure endpoint, isnâ€™t being sanitized.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7698">https://nvd.nist.gov/vuln/detail/CVE-2020-7698</a></li>
<li><a href="https://github.com/Gerapy/Gerapy/commit/e8446605eb2424717418eae199ec7aad573da2d2">https://github.com/Gerapy/Gerapy/commit/e8446605eb2424717418eae199ec7aad573da2d2</a></li>
<li><a href="https://snyk.io/vuln/SNYK-PYTHON-GERAPY-572470">https://snyk.io/vuln/SNYK-PYTHON-GERAPY-572470</a></li>
<li><a href="https://github.com/advisories/GHSA-g57j-q48p-9vm2">https://github.com/advisories/GHSA-g57j-q48p-9vm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g57j-q48p-9vm2</uri>
        </author>
        <published>2021-05-06T18:52:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow] Command injection via Celery broker in Apache Airflow]]></title>
        <id>https://github.com/advisories/GHSA-976r-qfjj-c24w</id>
        <link href="https://github.com/advisories/GHSA-976r-qfjj-c24w"/>
        <updated>2022-03-21T22:48:38.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11981">https://nvd.nist.gov/vuln/detail/CVE-2020-11981</a></li>
<li><a href="https://lists.apache.org/thread.html/r7255cf0be3566f23a768e2a04b40fb09e52fcd1872695428ba9afe91%40%3Cusers.airflow.apache.org%3E">https://lists.apache.org/thread.html/r7255cf0be3566f23a768e2a04b40fb09e52fcd1872695428ba9afe91%40%3Cusers.airflow.apache.org%3E</a></li>
<li><a href="https://github.com/apache/airflow/commit/afa4b11fddfdbadb048f742cf66d5c21c675a5c8">https://github.com/apache/airflow/commit/afa4b11fddfdbadb048f742cf66d5c21c675a5c8</a></li>
<li><a href="https://issues.apache.org/jira/browse/AIRFLOW-6351">https://issues.apache.org/jira/browse/AIRFLOW-6351</a></li>
<li><a href="https://github.com/advisories/GHSA-976r-qfjj-c24w">https://github.com/advisories/GHSA-976r-qfjj-c24w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-976r-qfjj-c24w</uri>
        </author>
        <published>2020-07-27T16:57:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ansible] Command Injection in ansible]]></title>
        <id>https://github.com/advisories/GHSA-jg4f-jqm5-4mgq</id>
        <link href="https://github.com/advisories/GHSA-jg4f-jqm5-4mgq"/>
        <updated>2022-03-21T22:48:13.000Z</updated>
        <content type="html"><![CDATA[<p>Ansible before version 2.2.0 fails to properly sanitize fact variables sent from the Ansible controller. An attacker with the ability to create special variables on the controller could execute arbitrary commands on Ansible clients as the user Ansible runs as.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-8628">https://nvd.nist.gov/vuln/detail/CVE-2016-8628</a></li>
<li><a href="https://github.com/advisories/GHSA-jg4f-jqm5-4mgq">https://github.com/advisories/GHSA-jg4f-jqm5-4mgq</a></li>
<li><a href="https://github.com/ansible/ansible/commit/35938b907dfcd1106ca40b794f0db446bdb8cf09">https://github.com/ansible/ansible/commit/35938b907dfcd1106ca40b794f0db446bdb8cf09</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2016:2778">https://access.redhat.com/errata/RHSA-2016:2778</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-8628">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-8628</a></li>
<li><a href="http://www.securityfocus.com/bid/94109">http://www.securityfocus.com/bid/94109</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jg4f-jqm5-4mgq</uri>
        </author>
        <published>2018-10-10T17:23:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eve] High severity vulnerability that affects eve]]></title>
        <id>https://github.com/advisories/GHSA-8jxq-75rw-fhj9</id>
        <link href="https://github.com/advisories/GHSA-8jxq-75rw-fhj9"/>
        <updated>2022-03-21T22:44:08.000Z</updated>
        <content type="html"><![CDATA[<p>io/mongo/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-8097">https://nvd.nist.gov/vuln/detail/CVE-2018-8097</a></li>
<li><a href="https://github.com/pyeve/eve/issues/1101">https://github.com/pyeve/eve/issues/1101</a></li>
<li><a href="https://github.com/pyeve/eve/commit/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98">https://github.com/pyeve/eve/commit/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98</a></li>
<li><a href="https://github.com/advisories/GHSA-8jxq-75rw-fhj9">https://github.com/advisories/GHSA-8jxq-75rw-fhj9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jxq-75rw-fhj9</uri>
        </author>
        <published>2018-07-12T20:29:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ecdsa] Improper Verification of Cryptographic Signature in Pure-Python ECDSA]]></title>
        <id>https://github.com/advisories/GHSA-8qxj-f9rh-9fg2</id>
        <link href="https://github.com/advisories/GHSA-8qxj-f9rh-9fg2"/>
        <updated>2022-03-21T22:37:12.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14859">https://nvd.nist.gov/vuln/detail/CVE-2019-14859</a></li>
<li><a href="https://github.com/warner/python-ecdsa/issues/114">https://github.com/warner/python-ecdsa/issues/114</a></li>
<li><a href="https://github.com/warner/python-ecdsa/pull/115">https://github.com/warner/python-ecdsa/pull/115</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14859">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-14859</a></li>
<li><a href="https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3">https://github.com/warner/python-ecdsa/releases/tag/python-ecdsa-0.13.3</a></li>
<li><a href="https://pypi.org/project/ecdsa/0.13.3/">https://pypi.org/project/ecdsa/0.13.3/</a></li>
<li><a href="https://github.com/advisories/GHSA-8qxj-f9rh-9fg2">https://github.com/advisories/GHSA-8qxj-f9rh-9fg2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qxj-f9rh-9fg2</uri>
        </author>
        <published>2020-04-01T16:35:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[easy-xml] XML External Entity vulnerability in Easy-XML]]></title>
        <id>https://github.com/advisories/GHSA-v899-28g4-qmh8</id>
        <link href="https://github.com/advisories/GHSA-v899-28g4-qmh8"/>
        <updated>2022-03-21T22:23:04.000Z</updated>
        <content type="html"><![CDATA[<p>The parseXML function in Easy-XML 0.5.0 was discovered to have a XML External Entity (XXE) vulnerability which allows for an attacker to expose sensitive data or perform a denial of service (DOS) via a crafted external entity entered into the XML content as input.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26705">https://nvd.nist.gov/vuln/detail/CVE-2020-26705</a></li>
<li><a href="https://github.com/darkfoxprime/python-easy_xml/issues/1">https://github.com/darkfoxprime/python-easy_xml/issues/1</a></li>
<li><a href="https://github.com/advisories/GHSA-v899-28g4-qmh8">https://github.com/advisories/GHSA-v899-28g4-qmh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v899-28g4-qmh8</uri>
        </author>
        <published>2021-11-01T19:19:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[drf-jwt] Django Rest Framework jwt allows obtaining new token from notionally invalidated token]]></title>
        <id>https://github.com/advisories/GHSA-fpjm-rp2g-3r4c</id>
        <link href="https://github.com/advisories/GHSA-fpjm-rp2g-3r4c"/>
        <updated>2022-03-21T22:21:38.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in drf-jwt 1.15.x before 1.15.1. It allows attackers with access to a notionally invalidated token to obtain a new, working token via the refresh endpoint, because the blacklist protection mechanism is incompatible with the token-refresh feature. NOTE: drf-jwt is a fork of jpadilla/django-rest-framework-jwt, which is unmaintained.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-10594">https://nvd.nist.gov/vuln/detail/CVE-2020-10594</a></li>
<li><a href="https://github.com/Styria-Digital/django-rest-framework-jwt/issues/36">https://github.com/Styria-Digital/django-rest-framework-jwt/issues/36</a></li>
<li><a href="https://github.com/jpadilla/django-rest-framework-jwt/issues/484">https://github.com/jpadilla/django-rest-framework-jwt/issues/484</a></li>
<li><a href="https://github.com/Styria-Digital/django-rest-framework-jwt/commit/868b5c22ddad59772b447080183e7c7101bb18e0">https://github.com/Styria-Digital/django-rest-framework-jwt/commit/868b5c22ddad59772b447080183e7c7101bb18e0</a></li>
<li><a href="https://pypi.org/project/drf-jwt/1.15.1/#history">https://pypi.org/project/drf-jwt/1.15.1/#history</a></li>
<li><a href="https://github.com/advisories/GHSA-fpjm-rp2g-3r4c">https://github.com/advisories/GHSA-fpjm-rp2g-3r4c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpjm-rp2g-3r4c</uri>
        </author>
        <published>2020-06-05T16:09:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[docutils] python-docutils allows insecure usage of temporary files]]></title>
        <id>https://github.com/advisories/GHSA-cg75-6938-wx58</id>
        <link href="https://github.com/advisories/GHSA-cg75-6938-wx58"/>
        <updated>2022-03-21T21:52:59.000Z</updated>
        <content type="html"><![CDATA[<p>python-docutils allows insecure usage of temporary files</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-5042">https://nvd.nist.gov/vuln/detail/CVE-2009-5042</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2009-5042">https://security-tracker.debian.org/tracker/CVE-2009-5042</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=560755">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=560755</a></li>
<li><a href="https://github.com/advisories/GHSA-cg75-6938-wx58">https://github.com/advisories/GHSA-cg75-6938-wx58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg75-6938-wx58</uri>
        </author>
        <published>2020-03-13T20:04:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-rest-registration] High severity vulnerability that affects django-rest-registration]]></title>
        <id>https://github.com/advisories/GHSA-p3w6-jcg4-52xh</id>
        <link href="https://github.com/advisories/GHSA-p3w6-jcg4-52xh"/>
        <updated>2022-03-21T21:29:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="misusing-the-django-signer-api-leads-to-predictable-signatures-used-in-verification-emails">Misusing the Django Signer API leads to predictable signatures used in verification emails</h2>
<h3 id="impact">Impact</h3>
<p>The vulnerability is a high severity one. Anyone using Django REST Registration library versions <code>0.2.*</code> - <code>0.4.*</code> with e-mail verification option (which is recommended, but needs <a href="https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#preferred-configuration">additional configuration</a>) is affected.
In the worst case, the attacker can take over any Django user by resetting his/her password without even receiving the reset password verification link, just by guessing the signature from publicly available data (more detailed description below).</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in version <code>0.5.0</code>. All library users should upgrade to version <code>0.5.0</code> or higher.
The fix will invalidate all previously generated signatures , and in consequence, all verification links in previously sent verification e-mails. Therefore semi-major version <code>0.5.0</code> was released instead of version <code>0.4.6</code> to mark that incompatibility.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The easiest way way is to disable the verification options by using something like the minimal configuration described <a href="https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#minimal-configuration">here</a>. This will unfortunately disable checking whether the given e-mail is valid and make unable to users who registered an account but didn't verify it before config change.</p>
<p>Less harsh way is to temporarily disable just the the reset password functionality:</p>
<pre><code class="language-python">REST_REGISTRATION = {
    # ...
    'RESET_PASSWORD_VERIFICATION_ENABLED': False,
    # ...
}
</code></pre>
<p>Which should disallow the worst case, which is account takeover by an attacker. The attacker can still use the register-email endpoint to change the email to its own (but it is less critical than resetting the password in this case).</p>
<p>If one already set <code>'RESET_PASSWORD_VERIFICATION_ONE_TIME_USE'</code> setting key to <code>True</code> in <code>REST_REGISTRATION</code> Django setting (which is not the default setting) then it should mitigate the security issue in case of password reset (in this case, the signature is much harder to guess by the attacker). But even in this case upgrade to newest version is highly recommended.</p>
<h3 id="technical-description">Technical description</h3>
<p>After the code <a href="https://github.com/apragacz/django-rest-registration/commit/b6d921e9decc9bb36a4c6d58bc607471aa824a2e">was refactored</a> to use the <a href="https://docs.djangoproject.com/en/dev/topics/signing/">official Signer class</a> the salt
was passed wrongly as secret key, replacing the <code>SECRET_KEY</code> set in
Django settings file. This leads to the Django <code>SECRET_KEY</code> not being used by the signer object. The secret key of the signer ends to be the salt which in most cases is a static string which is publicly available.</p>
<p>In consequence this allows, with verification enabled, to guess
the signature contained in the verification link (which is sent in a verification e-mail) by a potential attacker very easily.</p>
<p>The bug went unnoticed for very long time so multiple versions are affected:
this bug affects versions <code>0.2.*</code>, <code>0.3.*</code>, <code>0.4.*</code>; version <code>0.1.*</code> is not affected.</p>
<p>Recently released version <code>0.5.0</code> contains the <a href="https://github.com/apragacz/django-rest-registration/commit/26d094fab65ea8c2694fdfb6a3ab95a7808b62d5">fix</a> which correctly passes the salt to the Signer constructor as keyword argument instead as a positonal argument. It also contains additonal test so this problem should not reappear in the future.</p>
<h3 id="thanks">Thanks</h3>
<p>I'd like to thank @peterthomassen from <a href="https://desec.io">https://desec.io</a> DNS security project for finding the bug. I'd like also to thank his employer, SSE (<a href="https://www.securesystems.de">https://www.securesystems.de</a>) for funding his work.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/apragacz/django-rest-registration/issues">GitHub issues project page</a></li>
<li>Email @apragacz, author of the library <h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/apragacz/django-rest-registration/security/advisories/GHSA-p3w6-jcg4-52xh">https://github.com/apragacz/django-rest-registration/security/advisories/GHSA-p3w6-jcg4-52xh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-13177">https://nvd.nist.gov/vuln/detail/CVE-2019-13177</a></li>
<li><a href="https://github.com/advisories/GHSA-p3w6-jcg4-52xh">https://github.com/advisories/GHSA-p3w6-jcg4-52xh</a></li>
<li><a href="https://github.com/apragacz/django-rest-registration/releases/tag/0.5.0">https://github.com/apragacz/django-rest-registration/releases/tag/0.5.0</a></li>
<li><a href="https://github.com/apragacz/django-rest-registration/commit/26d094fab65ea8c2694fdfb6a3ab95a7808b62d5">https://github.com/apragacz/django-rest-registration/commit/26d094fab65ea8c2694fdfb6a3ab95a7808b62d5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p3w6-jcg4-52xh</uri>
        </author>
        <published>2019-07-02T15:43:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-anymail] Moderate severity vulnerability that affects django-anymail]]></title>
        <id>https://github.com/advisories/GHSA-hxf9-7h4c-f5jv</id>
        <link href="https://github.com/advisories/GHSA-hxf9-7h4c-f5jv"/>
        <updated>2022-03-21T21:23:04.000Z</updated>
        <content type="html"><![CDATA[<p>webhooks/base.py in Anymail (aka django-anymail) before 1.2.1 is prone to a timing attack vulnerability on the WEBHOOK_AUTHORIZATION secret, which allows remote attackers to post arbitrary e-mail tracking events.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6596">https://nvd.nist.gov/vuln/detail/CVE-2018-6596</a></li>
<li><a href="https://github.com/anymail/django-anymail/commit/c07998304b4a31df4c61deddcb03d3607a04691b">https://github.com/anymail/django-anymail/commit/c07998304b4a31df4c61deddcb03d3607a04691b</a></li>
<li><a href="https://github.com/anymail/django-anymail/commit/db586ede1fbb41dce21310ea28ae15a1cf1286c5">https://github.com/anymail/django-anymail/commit/db586ede1fbb41dce21310ea28ae15a1cf1286c5</a></li>
<li><a href="https://bugs.debian.org/889450">https://bugs.debian.org/889450</a></li>
<li><a href="https://github.com/advisories/GHSA-hxf9-7h4c-f5jv">https://github.com/advisories/GHSA-hxf9-7h4c-f5jv</a></li>
<li><a href="https://github.com/anymail/django-anymail/releases/tag/v1.2.1">https://github.com/anymail/django-anymail/releases/tag/v1.2.1</a></li>
<li><a href="https://github.com/anymail/django-anymail/releases/tag/v1.3">https://github.com/anymail/django-anymail/releases/tag/v1.3</a></li>
<li><a href="https://www.debian.org/security/2018/dsa-4107">https://www.debian.org/security/2018/dsa-4107</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hxf9-7h4c-f5jv</uri>
        </author>
        <published>2018-07-12T20:30:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Potential account hijack via password reset form in Django]]></title>
        <id>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</id>
        <link href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6"/>
        <updated>2022-03-21T20:49:09.000Z</updated>
        <content type="html"><![CDATA[<p>Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19844">https://nvd.nist.gov/vuln/detail/CVE-2019-19844</a></li>
<li><a href="https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70">https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70</a></li>
<li><a href="https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2">https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0">https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Jan/9">https://seclists.org/bugtraq/2020/Jan/9</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200110-0003/">https://security.netapp.com/advisory/ntap-20200110-0003/</a></li>
<li><a href="https://usn.ubuntu.com/4224-1/">https://usn.ubuntu.com/4224-1/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4598">https://www.debian.org/security/2020/dsa-4598</a></li>
<li><a href="https://www.djangoproject.com/weblog/2019/dec/18/security-releases/">https://www.djangoproject.com/weblog/2019/dec/18/security-releases/</a></li>
<li><a href="http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html">http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6">https://github.com/advisories/GHSA-vfq6-hq5r-27r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</uri>
        </author>
        <published>2020-01-16T22:35:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Potential account hijack via password reset form in Django]]></title>
        <id>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</id>
        <link href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6"/>
        <updated>2022-03-21T20:49:09.000Z</updated>
        <content type="html"><![CDATA[<p>Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19844">https://nvd.nist.gov/vuln/detail/CVE-2019-19844</a></li>
<li><a href="https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70">https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70</a></li>
<li><a href="https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2">https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0">https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Jan/9">https://seclists.org/bugtraq/2020/Jan/9</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200110-0003/">https://security.netapp.com/advisory/ntap-20200110-0003/</a></li>
<li><a href="https://usn.ubuntu.com/4224-1/">https://usn.ubuntu.com/4224-1/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4598">https://www.debian.org/security/2020/dsa-4598</a></li>
<li><a href="https://www.djangoproject.com/weblog/2019/dec/18/security-releases/">https://www.djangoproject.com/weblog/2019/dec/18/security-releases/</a></li>
<li><a href="http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html">http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6">https://github.com/advisories/GHSA-vfq6-hq5r-27r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</uri>
        </author>
        <published>2020-01-16T22:35:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Potential account hijack via password reset form in Django]]></title>
        <id>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</id>
        <link href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6"/>
        <updated>2022-03-21T20:49:09.000Z</updated>
        <content type="html"><![CDATA[<p>Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-19844">https://nvd.nist.gov/vuln/detail/CVE-2019-19844</a></li>
<li><a href="https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70">https://github.com/django/django/commit/5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70</a></li>
<li><a href="https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2">https://github.com/django/django/commit/f4cff43bf921fcea6a29b726eb66767f67753fa2</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0">https://groups.google.com/forum/#!topic/django-announce/3oaB2rVH3a0</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Jan/9">https://seclists.org/bugtraq/2020/Jan/9</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200110-0003/">https://security.netapp.com/advisory/ntap-20200110-0003/</a></li>
<li><a href="https://usn.ubuntu.com/4224-1/">https://usn.ubuntu.com/4224-1/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4598">https://www.debian.org/security/2020/dsa-4598</a></li>
<li><a href="https://www.djangoproject.com/weblog/2019/dec/18/security-releases/">https://www.djangoproject.com/weblog/2019/dec/18/security-releases/</a></li>
<li><a href="http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html">http://packetstormsecurity.com/files/155872/Django-Account-Hijack.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HCM2DPUI7TOZWN4A6JFQFUVQ2XGE7GUD/</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://github.com/advisories/GHSA-vfq6-hq5r-27r6">https://github.com/advisories/GHSA-vfq6-hq5r-27r6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfq6-hq5r-27r6</uri>
        </author>
        <published>2020-01-16T22:35:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] SQL injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</id>
        <link href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx"/>
        <updated>2022-03-21T20:34:26.000Z</updated>
        <content type="html"><![CDATA[<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7471">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>
<li><a href="https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>
<li><a href="https://www.djangoproject.com/weblog/2020/feb/03/security-releases/">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2020/02/03/1">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/03/1">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="https://usn.ubuntu.com/4264-1/">https://usn.ubuntu.com/4264-1/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Feb/30">https://seclists.org/bugtraq/2020/Feb/30</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200221-0006/">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4629">https://www.debian.org/security/2020/dsa-4629</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</uri>
        </author>
        <published>2020-02-11T21:03:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] SQL injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</id>
        <link href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx"/>
        <updated>2022-03-21T20:34:26.000Z</updated>
        <content type="html"><![CDATA[<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7471">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>
<li><a href="https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>
<li><a href="https://www.djangoproject.com/weblog/2020/feb/03/security-releases/">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2020/02/03/1">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/03/1">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="https://usn.ubuntu.com/4264-1/">https://usn.ubuntu.com/4264-1/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Feb/30">https://seclists.org/bugtraq/2020/Feb/30</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200221-0006/">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4629">https://www.debian.org/security/2020/dsa-4629</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</uri>
        </author>
        <published>2020-02-11T21:03:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] SQL injection in Django]]></title>
        <id>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</id>
        <link href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx"/>
        <updated>2022-03-21T20:34:26.000Z</updated>
        <content type="html"><![CDATA[<p>Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7471">https://nvd.nist.gov/vuln/detail/CVE-2020-7471</a></li>
<li><a href="https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136">https://github.com/django/django/commit/eb31d845323618d688ad429479c6dda973056136</a></li>
<li><a href="https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI">https://groups.google.com/forum/#!topic/django-announce/X45S86X5bZI</a></li>
<li><a href="https://www.djangoproject.com/weblog/2020/feb/03/security-releases/">https://www.djangoproject.com/weblog/2020/feb/03/security-releases/</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2020/02/03/1">https://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/02/03/1">http://www.openwall.com/lists/oss-security/2020/02/03/1</a></li>
<li><a href="https://usn.ubuntu.com/4264-1/">https://usn.ubuntu.com/4264-1/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4A2AP4T7RKPBCLTI2NNQG3T6MINDUUMZ/</a></li>
<li><a href="https://seclists.org/bugtraq/2020/Feb/30">https://seclists.org/bugtraq/2020/Feb/30</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-17">https://security.gentoo.org/glsa/202004-17</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200221-0006/">https://security.netapp.com/advisory/ntap-20200221-0006/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4629">https://www.debian.org/security/2020/dsa-4629</a></li>
<li><a href="https://github.com/advisories/GHSA-hmr4-m2h5-33qx">https://github.com/advisories/GHSA-hmr4-m2h5-33qx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmr4-m2h5-33qx</uri>
        </author>
        <published>2020-02-11T21:03:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[diffoscope] Path traversal in diffoscope]]></title>
        <id>https://github.com/advisories/GHSA-8p5c-f328-9fvv</id>
        <link href="https://github.com/advisories/GHSA-8p5c-f328-9fvv"/>
        <updated>2022-03-21T20:32:52.000Z</updated>
        <content type="html"><![CDATA[<p>diffoscope before 76 writes to arbitrary locations on disk based on the contents of an untrusted archive.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-0359">https://nvd.nist.gov/vuln/detail/CVE-2017-0359</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2017-0359">https://security-tracker.debian.org/tracker/CVE-2017-0359</a></li>
<li><a href="https://github.com/anthraxx/diffoscope/commit/632a40828a54b399787c25e7fa243f732aef7e05">https://github.com/anthraxx/diffoscope/commit/632a40828a54b399787c25e7fa243f732aef7e05</a></li>
<li><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=854723">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=854723</a></li>
<li><a href="https://github.com/advisories/GHSA-8p5c-f328-9fvv">https://github.com/advisories/GHSA-8p5c-f328-9fvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8p5c-f328-9fvv</uri>
        </author>
        <published>2018-07-13T16:01:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[definitions] Code injection in definitions]]></title>
        <id>https://github.com/advisories/GHSA-v4x4-98cg-wr4g</id>
        <link href="https://github.com/advisories/GHSA-v4x4-98cg-wr4g"/>
        <updated>2022-03-21T20:09:37.000Z</updated>
        <content type="html"><![CDATA[<p>There is a vulnerability in load() method in definitions/parser.py in the Danijar Hafner definitions package for Python. It can execute arbitrary python commands resulting in command execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20325">https://nvd.nist.gov/vuln/detail/CVE-2018-20325</a></li>
<li><a href="https://github.com/danijar/definitions/issues/14">https://github.com/danijar/definitions/issues/14</a></li>
<li><a href="https://github.com/advisories/GHSA-v4x4-98cg-wr4g">https://github.com/advisories/GHSA-v4x4-98cg-wr4g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v4x4-98cg-wr4g</uri>
        </author>
        <published>2018-12-26T17:45:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[datasette-indieauth] Implementation trusts the "me" field returned by the authorization server without verifying it]]></title>
        <id>https://github.com/advisories/GHSA-mjcr-rqjg-rhg3</id>
        <link href="https://github.com/advisories/GHSA-mjcr-rqjg-rhg3"/>
        <updated>2022-03-21T20:04:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious user can sign in as a user with any IndieAuth identifier. This is because the implementation does not verify that the final <code>"me"</code> URL value returned by the authorization server belongs to the same domain as the initial value entered by the user.</p>
<h3 id="patches">Patches</h3>
<p>Version 1.1 fixes this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround. Upgrade to 1.1 immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://indieauth.spec.indieweb.org/#differing-user-profile-urls-li-1">Security Considerations: Differing User Profile URLs</a> in the IndieAuth specification.</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/simonw/datasette-indieauth/issues">simonw/datasette-indieauth</a><h3 id="references-1">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/simonw/datasette-indieauth/security/advisories/GHSA-mjcr-rqjg-rhg3">https://github.com/simonw/datasette-indieauth/security/advisories/GHSA-mjcr-rqjg-rhg3</a></li>
<li><a href="https://pypi.org/project/datasette-indieauth/">https://pypi.org/project/datasette-indieauth/</a></li>
<li><a href="https://github.com/simonw/datasette-indieauth/commit/376c8804c6b0811852049229a24336fe5eb6a439">https://github.com/simonw/datasette-indieauth/commit/376c8804c6b0811852049229a24336fe5eb6a439</a></li>
<li><a href="https://github.com/advisories/GHSA-mjcr-rqjg-rhg3">https://github.com/advisories/GHSA-mjcr-rqjg-rhg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mjcr-rqjg-rhg3</uri>
        </author>
        <published>2020-11-24T21:21:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[distributed] Remote code execution in dask]]></title>
        <id>https://github.com/advisories/GHSA-j8fq-86c5-5v2r</id>
        <link href="https://github.com/advisories/GHSA-j8fq-86c5-5v2r"/>
        <updated>2022-03-21T19:58:45.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Dask (aka python-dask) through 2021.09.1. Single machine Dask clusters started with dask.distributed.LocalCluster or dask.distributed.Client (which defaults to using LocalCluster) would mistakenly configure their respective Dask workers to listen on external interfaces (typically with a randomly selected high port) rather than only on localhost. A Dask cluster created using this method (when running on a machine that has an applicable port exposed) could be used by a sophisticated attacker to achieve remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-42343">https://nvd.nist.gov/vuln/detail/CVE-2021-42343</a></li>
<li><a href="https://docs.dask.org/en/latest/changelog.html">https://docs.dask.org/en/latest/changelog.html</a></li>
<li><a href="https://github.com/dask/distributed/security/advisories/GHSA-hwqr-f3v9-hwxr">https://github.com/dask/distributed/security/advisories/GHSA-hwqr-f3v9-hwxr</a></li>
<li><a href="https://github.com/dask/distributed/pull/5427">https://github.com/dask/distributed/pull/5427</a></li>
<li><a href="https://github.com/dask/distributed/commit/afce4be8e05fb180e50a9d9e38465f1a82295e1b">https://github.com/dask/distributed/commit/afce4be8e05fb180e50a9d9e38465f1a82295e1b</a></li>
<li><a href="https://github.com/advisories/GHSA-j8fq-86c5-5v2r">https://github.com/advisories/GHSA-j8fq-86c5-5v2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j8fq-86c5-5v2r</uri>
        </author>
        <published>2021-10-27T18:53:48.000Z</published>
    </entry>
</feed>