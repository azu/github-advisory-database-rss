<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-11-09T11:01:13.064Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[dulwich] Dulwich RCE Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-cwwh-4382-6fwr</id>
        <link href="https://github.com/advisories/GHSA-cwwh-4382-6fwr"/>
        <updated>2023-11-09T05:04:06.000Z</updated>
        <content type="html"><![CDATA[<p>Dulwich before 0.18.5, when an SSH subprocess is used, allows remote attackers to execute arbitrary commands via an ssh URL with an initial dash character in the hostname, a related issue to CVE-2017-9800, CVE-2017-12836, CVE-2017-12976, CVE-2017-1000116, and CVE-2017-1000117.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-16228">https://nvd.nist.gov/vuln/detail/CVE-2017-16228</a></li>
<li><a href="https://tracker.debian.org/news/882440">https://tracker.debian.org/news/882440</a></li>
<li><a href="https://github.com/jelmer/dulwich/commit/7116a0cbbda571f7dac863f4b1c00b6e16d6d8d6">https://github.com/jelmer/dulwich/commit/7116a0cbbda571f7dac863f4b1c00b6e16d6d8d6</a></li>
<li><a href="https://web.archive.org/web/20201220231743/https://www.dulwich.io/code/dulwich/commit/7116a0cbbda571f7dac863f4b1c00b6e16d6d8d6/">https://web.archive.org/web/20201220231743/https://www.dulwich.io/code/dulwich/commit/7116a0cbbda571f7dac863f4b1c00b6e16d6d8d6/</a></li>
<li><a href="https://web.archive.org/web/20210128154006/https://www.dulwich.io/code/dulwich/">https://web.archive.org/web/20210128154006/https://www.dulwich.io/code/dulwich/</a></li>
<li><a href="https://github.com/advisories/GHSA-cwwh-4382-6fwr">https://github.com/advisories/GHSA-cwwh-4382-6fwr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwwh-4382-6fwr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-13T01:44:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[label-studio] Nginx alias path traversal allows unauthenticated attackers to read all files on /label_studio/core/]]></title>
        <id>https://github.com/advisories/GHSA-cpmr-mw4j-99r7</id>
        <link href="https://github.com/advisories/GHSA-cpmr-mw4j-99r7"/>
        <updated>2023-11-08T22:39:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The vulnerability resides on the Nginx config file:
<a href="https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119">https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119</a></p>
<p>The pattern on location /static indicates a popular misconfiguration on Nginx servers presented in 2018 originally by Orange Tsai. This vulnerability allows an attacker to use a single path traversal payload in the matched location to traverse one directory above. This vulnerability only happens due to the location /static directive not having a slash <code>/</code> at the end, the following code shows an example of a safe configuration:</p>
<pre><code class="language-nginx">location /static/ {
[...]
</code></pre>
<p>The vulnerability works because Nginx will think that <code>/static../</code> is a directory that should also be aliased to the folder, allowing /static/../ to be reached. In Label Studio's case, this means all files on /label_studio/core/ are exposed.</p>
<p>Of course, this means that only Label Studio instances that were deployed using the default nginx files introducted at Mar 31, 2021.
This is a very easy vulnerability to fix, and just a lesser-known configuration mistake on nginx files. It's very easy to happen because all is needed is for one slash to be missing. (Off-By-One)</p>
<p>** Proof-of-Concept (Leaking Secret Keys): **
Exploiting this vulnerability usually depends on what's on the parent folder, in Label Studio's case the most interesting file I could find that's on there by default is /label_studio/core/ . We can fetch it by simply making a request to the traversed folder.</p>
<pre><code class="language-bash"># Production Label Studio docker-compose running on localhost:8080
/t/mydata [127]$ curl localhost:8080/static../settings/label_studio.py
"""This file and its contents are licensed under the Apache License 2.0. Please see the included NOTICE for copyright information and LICENSE for a copy of the license.
"""
import os
import pathlib

from core.settings.base import *

DJANGO_DB = get_env('DJANGO_DB', DJANGO_DB_SQLITE)
DATABASES = {'default': DATABASES_ALL[DJANGO_DB]}

MIDDLEWARE.append('organizations.middleware.DummyGetSessionMiddleware')
MIDDLEWARE.append('core.middleware.UpdateLastActivityMiddleware')
if INACTIVITY_SESSION_TIMEOUT_ENABLED:
    MIDDLEWARE.append('core.middleware.InactivitySessionTimeoutMiddleWare')

ADD_DEFAULT_ML_BACKENDS = False

LOGGING['root']['level'] = get_env('LOG_LEVEL', 'WARNING')

DEBUG = get_bool_env('DEBUG', False)

DEBUG_PROPAGATE_EXCEPTIONS = get_bool_env('DEBUG_PROPAGATE_EXCEPTIONS', False)

SESSION_COOKIE_SECURE = False

SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"

RQ_QUEUES = {}

SENTRY_DSN = get_env(
    'SENTRY_DSN',
    'https://68b045ab408a4d32a910d339be8591a4@o227124.ingest.sentry.io/5820521'
)
SENTRY_ENVIRONMENT = get_env('SENTRY_ENVIRONMENT', 'opensource')

FRONTEND_SENTRY_DSN = get_env(
    'FRONTEND_SENTRY_DSN',
    'https://5f51920ff82a4675a495870244869c6b@o227124.ingest.sentry.io/5838868')
FRONTEND_SENTRY_ENVIRONMENT = get_env('FRONTEND_SENTRY_ENVIRONMENT', 'opensource')

EDITOR_KEYMAP = json.dumps(get_env("EDITOR_KEYMAP"))

from label_studio import __version__
from label_studio.core.utils import sentry
sentry.init_sentry(release_name='label-studio', release_version=__version__)

# we should do it after sentry init
from label_studio.core.utils.common import collect_versions
versions = collect_versions()

# in Label Studio Community version, feature flags are always ON
FEATURE_FLAGS_DEFAULT_VALUE = True
# or if file is not set, default is using offline mode
FEATURE_FLAGS_OFFLINE = get_bool_env('FEATURE_FLAGS_OFFLINE', True)

from core.utils.io import find_file
FEATURE_FLAGS_FILE = get_env('FEATURE_FLAGS_FILE', 'feature_flags.json')
FEATURE_FLAGS_FROM_FILE = True
try:
    from core.utils.io import find_node
    find_node('label_studio', FEATURE_FLAGS_FILE, 'file')
except IOError:
    FEATURE_FLAGS_FROM_FILE = False

STORAGE_PERSISTENCE = get_bool_env('STORAGE_PERSISTENCE', True)
</code></pre>
<h3 id="impact">Impact</h3>
<p>The impact consists on leaking Django secret keys by default, with also greater risk being possible due to the vulnerability exposing the file located at /label_studio/core/settings/label_studio.py which contains the secret key for Django as well as possibly containing other secrets the user might put there. (If the administrator decides not to use environment variables for some variables)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/heartexlabs/label-studio/security/advisories/GHSA-cpmr-mw4j-99r7">https://github.com/heartexlabs/label-studio/security/advisories/GHSA-cpmr-mw4j-99r7</a></li>
<li><a href="https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119">https://github.com/heartexlabs/label-studio/blob/53944e6bcede75ca5c102d655013f2e5238e85e6/deploy/default.conf#L119</a></li>
<li><a href="https://github.com/HumanSignal/label-studio/commit/60a3ef57a22c50d7230a56c11d85e14454c99a28">https://github.com/HumanSignal/label-studio/commit/60a3ef57a22c50d7230a56c11d85e14454c99a28</a></li>
<li><a href="https://github.com/advisories/GHSA-cpmr-mw4j-99r7">https://github.com/advisories/GHSA-cpmr-mw4j-99r7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cpmr-mw4j-99r7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-24T22:04:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Ethyca Fides HTML Injection Vulnerability in HTML-Formatted DSR Packages]]></title>
        <id>https://github.com/advisories/GHSA-3vpf-mcj7-5h38</id>
        <link href="https://github.com/advisories/GHSA-3vpf-mcj7-5h38"/>
        <updated>2023-11-08T17:52:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Fides web application allows data subject users to request access to their personal data. If the request is approved by the data controller user operating the Fides web application, the data subject's personal data can then retrieved from connected systems and data stores before being bundled together as a data subject access request package for the data subject to download. Supported data formats for the package include json and csv, but the most commonly used format is a series of HTML files compressed in a ZIP file. Once downloaded and unzipped, the data subject user can browse the HTML files on their local machine.</p>
<p>It was identified that there was no validation of input coming from e.g. the connected systems and data stores which is later reflected in the downloaded data. This can result in an HTML injection that can be abused e.g. for phishing attacks or malicious JavaScript code execution, but only in the context of the data subject's browser accessing a HTML page using the <code>file://</code> protocol.</p>
<p>Exploitation is limited to rogue Admin UI users, malicious connected system / data store users, and the data subject user if tricked via social engineering into submitting malicious data themselves.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>TBC</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Only Fides deployments which have been configured to use <code>html</code> as the package format in the <a href="https://docs.ethyca.com/dev-docs/configuration/privacy-requests/storage-destinations">storage destination</a> are vulnerable. Using <code>json</code> or <code>csv</code> instead eliminates this vulnerability. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-3vpf-mcj7-5h38">https://github.com/ethyca/fides/security/advisories/GHSA-3vpf-mcj7-5h38</a></li>
<li><a href="https://github.com/ethyca/fides/commit/50360a0e24aac858459806bb140bb1c4b71e67a1">https://github.com/ethyca/fides/commit/50360a0e24aac858459806bb140bb1c4b71e67a1</a></li>
<li><a href="https://github.com/ethyca/fides/releases/tag/2.23.3">https://github.com/ethyca/fides/releases/tag/2.23.3</a></li>
<li><a href="https://github.com/advisories/GHSA-3vpf-mcj7-5h38">https://github.com/advisories/GHSA-3vpf-mcj7-5h38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3vpf-mcj7-5h38</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-11-08T17:52:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[jefferson] sviehb/jefferson vulnerable to path traversal]]></title>
        <id>https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</id>
        <link href="https://github.com/advisories/GHSA-7jrw-p8jc-v6qw"/>
        <updated>2023-11-07T23:14:25.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability has been found in the sviehb/jefferson JFFS2 filesystem extraction tool. This vulnerability affects unknown code of the file <code>src/scripts/jefferson</code>. The manipulation leads to path traversal. The attack can be initiated remotely. Upgrading to version 0.4 is able to address this issue as it includes <a href="https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87">https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4885">https://nvd.nist.gov/vuln/detail/CVE-2022-4885</a></li>
<li><a href="https://github.com/sviehb/jefferson/pull/36">https://github.com/sviehb/jefferson/pull/36</a></li>
<li><a href="https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87">https://github.com/sviehb/jefferson/commit/53b3f2fc34af0bb32afbcee29d18213e61471d87</a></li>
<li><a href="https://github.com/sviehb/jefferson/releases/tag/v0.4">https://github.com/sviehb/jefferson/releases/tag/v0.4</a></li>
<li><a href="https://vuldb.com/?ctiid.218020">https://vuldb.com/?ctiid.218020</a></li>
<li><a href="https://vuldb.com/?id.218020">https://vuldb.com/?id.218020</a></li>
<li><a href="https://github.com/advisories/GHSA-7jrw-p8jc-v6qw">https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jrw-p8jc-v6qw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-11T18:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-photologue] django-photologue vulnerable to Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-287q-jfcp-9vhv</id>
        <link href="https://github.com/advisories/GHSA-287q-jfcp-9vhv"/>
        <updated>2023-11-07T22:16:58.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in django-photologue up to 3.15.1 and classified as problematic. Affected by this issue is some unknown functionality of the file photologue/templates/photologue/photo_detail.html of the component Default Template Handler. The manipulation of the argument object.caption leads to cross site scripting. The attack may be launched remotely. Upgrading to version 3.16 is able to address this issue. The name of the patch is 960cb060ce5e2964e6d716ff787c72fc18a371e7. It is recommended to apply a patch to fix this issue. VDB-215906 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4526">https://nvd.nist.gov/vuln/detail/CVE-2022-4526</a></li>
<li><a href="https://github.com/richardbarran/django-photologue/issues/223">https://github.com/richardbarran/django-photologue/issues/223</a></li>
<li><a href="https://github.com/richardbarran/django-photologue/commit/960cb060ce5e2964e6d716ff787c72fc18a371e7">https://github.com/richardbarran/django-photologue/commit/960cb060ce5e2964e6d716ff787c72fc18a371e7</a></li>
<li><a href="https://vuldb.com/?id.215906">https://vuldb.com/?id.215906</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django-photologue/PYSEC-2022-43061.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django-photologue/PYSEC-2022-43061.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-287q-jfcp-9vhv">https://github.com/advisories/GHSA-287q-jfcp-9vhv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-287q-jfcp-9vhv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-15T21:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PaddlePaddle] PaddlePaddle vulnerable to Code Injection]]></title>
        <id>https://github.com/advisories/GHSA-gcjf-29m9-888q</id>
        <link href="https://github.com/advisories/GHSA-gcjf-29m9-888q"/>
        <updated>2023-11-07T22:15:17.000Z</updated>
        <content type="html"><![CDATA[<p>Code injection in <code>paddle.audio.functional.get_window</code> in PaddlePaddle 2.4.0-rc0 allows arbitrary code execution. A <a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">patch</a> is available on the <code>develop</code> branch of the repository and anticipated to be part of a 2.4 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46742">https://nvd.nist.gov/vuln/detail/CVE-2022-46742</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md">https://github.com/PaddlePaddle/Paddle/blob/develop/security/advisory/pdsa-2022-002.md</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/pull/47386">https://github.com/PaddlePaddle/Paddle/pull/47386</a></li>
<li><a href="https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb">https://github.com/PaddlePaddle/Paddle/commit/26c419ca386aeae3c461faf2b828d00b48e908eb</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/paddlepaddle/PYSEC-2022-43063.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gcjf-29m9-888q">https://github.com/advisories/GHSA-gcjf-29m9-888q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcjf-29m9-888q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-07T09:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mkdocs] Directory traversal in mkdocs]]></title>
        <id>https://github.com/advisories/GHSA-qh9q-34h6-hcv9</id>
        <link href="https://github.com/advisories/GHSA-qh9q-34h6-hcv9"/>
        <updated>2023-11-07T22:12:37.000Z</updated>
        <content type="html"><![CDATA[<p>The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40978">https://nvd.nist.gov/vuln/detail/CVE-2021-40978</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/issues/2601">https://github.com/mkdocs/mkdocs/issues/2601</a></li>
<li><a href="https://github.com/mkdocs/mkdocs">https://github.com/mkdocs/mkdocs</a></li>
<li><a href="https://github.com/nisdn/CVE-2021-40978/issues/1">https://github.com/nisdn/CVE-2021-40978/issues/1</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/pull/2604">https://github.com/mkdocs/mkdocs/pull/2604</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/releases/tag/1.2.3">https://github.com/mkdocs/mkdocs/releases/tag/1.2.3</a></li>
<li><a href="https://github.com/nisdn/CVE-2021-40978">https://github.com/nisdn/CVE-2021-40978</a></li>
<li><a href="https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b">https://github.com/mkdocs/mkdocs/commit/57540911a0d632674dd23edec765189f96f84f6b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/mkdocs/PYSEC-2021-878.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qh9q-34h6-hcv9">https://github.com/advisories/GHSA-qh9q-34h6-hcv9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh9q-34h6-hcv9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-10-12T18:48:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Chameleon in Plone allows Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</id>
        <link href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9"/>
        <updated>2023-11-07T18:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>Chameleon (five.pt) in Plone 5.0rc1 through 5.1a1 allows remote authenticated users to bypass Restricted Python by leveraging permissions to create or edit templates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4043">https://nvd.nist.gov/vuln/detail/CVE-2016-4043</a></li>
<li><a href="https://plone.org/security/hotfix/20160419/bypass-restricted-python">https://plone.org/security/hotfix/20160419/bypass-restricted-python</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/04/20/3">http://www.openwall.com/lists/oss-security/2016/04/20/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9">https://github.com/advisories/GHSA-6h8x-73fx-q2h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:57:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Chameleon in Plone allows Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</id>
        <link href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9"/>
        <updated>2023-11-07T18:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>Chameleon (five.pt) in Plone 5.0rc1 through 5.1a1 allows remote authenticated users to bypass Restricted Python by leveraging permissions to create or edit templates.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-4043">https://nvd.nist.gov/vuln/detail/CVE-2016-4043</a></li>
<li><a href="https://plone.org/security/hotfix/20160419/bypass-restricted-python">https://plone.org/security/hotfix/20160419/bypass-restricted-python</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2016/04/20/3">http://www.openwall.com/lists/oss-security/2016/04/20/3</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8x-73fx-q2h9">https://github.com/advisories/GHSA-6h8x-73fx-q2h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8x-73fx-q2h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:57:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[aiohttp] aiohttp.web.Application vulnerable to HTTP request smuggling via llhttp HTTP request parser]]></title>
        <id>https://github.com/advisories/GHSA-45c4-8wx5-qw6w</id>
        <link href="https://github.com/advisories/GHSA-45c4-8wx5-qw6w"/>
        <updated>2023-11-06T16:34:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>aiohttp v3.8.4 and earlier are <a href="https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules">bundled with llhttp v6.0.6</a> which is vulnerable to CVE-2023-30589. The vulnerable code is used by aiohttp for its HTTP request parser when available which is the default case when installing from a wheel.</p>
<p>This vulnerability only affects users of aiohttp as an HTTP server (ie <code>aiohttp.Application</code>), you are not affected by this vulnerability if you are using aiohttp as an HTTP client library (ie <code>aiohttp.ClientSession</code>).</p>
<h3 id="reproducer">Reproducer</h3>
<pre><code class="language-python">from aiohttp import web

async def example(request: web.Request):
    headers = dict(request.headers)
    body = await request.content.read()
    return web.Response(text=f"headers: {headers} body: {body}")

app = web.Application()
app.add_routes([web.post('/', example)])
web.run_app(app)
</code></pre>
<p>Sending a crafted HTTP request will cause the server to misinterpret one of the HTTP header values leading to HTTP request smuggling.</p>
<pre><code class="language-console">$ printf "POST / HTTP/1.1\r\nHost: localhost:8080\r\nX-Abc: \rxTransfer-Encoding: chunked\r\n\r\n1\r\nA\r\n0\r\n\r\n" \
  | nc localhost 8080

Expected output:
  headers: {'Host': 'localhost:8080', 'X-Abc': '\rxTransfer-Encoding: chunked'} body: b''

Actual output (note that 'Transfer-Encoding: chunked' is an HTTP header now and body is treated differently)
  headers: {'Host': 'localhost:8080', 'X-Abc': '', 'Transfer-Encoding': 'chunked'} body: b'A'
</code></pre>
<h3 id="patches">Patches</h3>
<p>Upgrade to the latest version of aiohttp to resolve this vulnerability. It has been fixed in v3.8.5: <a href="https://pypi.org/project/aiohttp/3.8.5/"><code>pip install aiohttp &gt;= 3.8.5</code></a></p>
<h3 id="workarounds">Workarounds</h3>
<p>If you aren't able to upgrade you can reinstall aiohttp using <code>AIOHTTP_NO_EXTENSIONS=1</code> as an environment variable to disable the llhttp HTTP request parser implementation. The pure Python implementation isn't vulnerable to request smuggling:</p>
<pre><code class="language-console">$ python -m pip uninstall --yes aiohttp
$ AIOHTTP_NO_EXTENSIONS=1 python -m pip install --no-binary=aiohttp --no-cache aiohttp
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30589">https://nvd.nist.gov/vuln/detail/CVE-2023-30589</a></li>
<li><a href="https://hackerone.com/reports/2001873">https://hackerone.com/reports/2001873</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37276">https://nvd.nist.gov/vuln/detail/CVE-2023-37276</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40">https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/commit/9c13a52c21c23dfdb49ed89418d28a5b116d0681">https://github.com/aio-libs/aiohttp/commit/9c13a52c21c23dfdb49ed89418d28a5b116d0681</a></li>
<li><a href="https://hackerone.com/reports/2001873">https://hackerone.com/reports/2001873</a></li>
<li><a href="https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules">https://github.com/aio-libs/aiohttp/blob/v3.8.4/.gitmodules</a></li>
<li><a href="https://github.com/aio-libs/aiohttp">https://github.com/aio-libs/aiohttp</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-120.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/aiohttp/PYSEC-2023-120.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-45c4-8wx5-qw6w">https://github.com/advisories/GHSA-45c4-8wx5-qw6w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45c4-8wx5-qw6w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T14:52:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pillow] Pillow Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8ghj-p4vj-mr35</id>
        <link href="https://github.com/advisories/GHSA-8ghj-p4vj-mr35"/>
        <updated>2023-11-03T19:39:44.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Pillow before 10.0.0. It is a Denial of Service that uncontrollably allocates memory to process a given task, potentially causing a service to crash by having it run out of memory. This occurs for truetype in ImageFont when textlength in an ImageDraw instance operates on a long text argument.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44271">https://nvd.nist.gov/vuln/detail/CVE-2023-44271</a></li>
<li><a href="https://github.com/python-pillow/Pillow/pull/7244">https://github.com/python-pillow/Pillow/pull/7244</a></li>
<li><a href="https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7">https://github.com/python-pillow/Pillow/commit/1fe1bb49c452b0318cad12ea9d97c3bef188e9a7</a></li>
<li><a href="https://devhub.checkmarx.com/cve-details/CVE-2023-44271/">https://devhub.checkmarx.com/cve-details/CVE-2023-44271/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2023-227.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pillow/PYSEC-2023-227.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-8ghj-p4vj-mr35">https://github.com/advisories/GHSA-8ghj-p4vj-mr35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8ghj-p4vj-mr35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial-of-service in django.utils.text.Truncator]]></title>
        <id>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</id>
        <link href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3"/>
        <updated>2023-11-03T19:35:28.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.22, 4.1 before 4.1.12, and 4.2 before 4.2.6, the django.utils.text.Truncator chars() and words() methods (when used with html=True) are subject to a potential DoS (denial of service) attack via certain inputs with very long, potentially malformed HTML text. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which are thus also vulnerable. NOTE: this issue exists because of an incomplete fix for CVE-2019-14232.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43665">https://nvd.nist.gov/vuln/detail/CVE-2023-43665</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/oct/04/security-releases/">https://www.djangoproject.com/weblog/2023/oct/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473">https://github.com/django/django/commit/be9c27c4d18c2e6a5be8af4e53c0797440794473</a></li>
<li><a href="https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8">https://github.com/django/django/commit/c7b7024742250414e426ad49fb80db943e7ba4e8</a></li>
<li><a href="https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5">https://github.com/django/django/commit/ccdade1a0262537868d7ca64374de3d957ca50c5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-226.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-h8gc-pgj2-vjm3">https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8gc-pgj2-vjm3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Denial of service vulnerability in django.utils.encoding.uri_to_iri]]></title>
        <id>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</id>
        <link href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw"/>
        <updated>2023-11-06T16:30:47.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.21, 4.1 before 4.1.11, and 4.2 before 4.2.5, django.utils.encoding.uri_to_iri() is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41164">https://nvd.nist.gov/vuln/detail/CVE-2023-41164</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/sep/04/security-releases/">https://www.djangoproject.com/weblog/2023/sep/04/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e">https://github.com/django/django/commit/6f030b1149bd8fa4ba90452e77cb3edc095ce54e</a></li>
<li><a href="https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9">https://github.com/django/django/commit/9c51b4dcfa0cefcb48231f4d71cafa80821f87b9</a></li>
<li><a href="https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0">https://github.com/django/django/commit/ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-225.yaml</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HJFRPUHDYJHBH3KYHSPGULQM4JN7BMSU/</a></li>
<li><a href="https://github.com/advisories/GHSA-7h4p-27mh-hmrw">https://github.com/advisories/GHSA-7h4p-27mh-hmrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7h4p-27mh-hmrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-03T06:36:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django potential denial of service vulnerability in UsernameField on Windows]]></title>
        <id>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</id>
        <link href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq"/>
        <updated>2023-11-02T21:26:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.23, 4.1 before 4.1.13, and 4.2 before 4.2.7. The NFKC normalization is slow on Windows. As a consequence, django.contrib.auth.forms.UsernameField is subject to a potential DoS (denial of service) attack via certain inputs with a very large number of Unicode characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46695">https://nvd.nist.gov/vuln/detail/CVE-2023-46695</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/nov/01/security-releases/">https://www.djangoproject.com/weblog/2023/nov/01/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f">https://github.com/django/django/commit/048a9ebb6ea468426cb4e57c71572cbbd975517f</a></li>
<li><a href="https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e">https://github.com/django/django/commit/4965bfdde2e5a5c883685019e57d123a3368a75e</a></li>
<li><a href="https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b">https://github.com/django/django/commit/f9a7fb8466a7ba4857eaf930099b5258f3eafb2b</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-222.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-qmf9-6jqf-j8fq">https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmf9-6jqf-j8fq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-11-02T06:30:25.000Z</published>
    </entry>
</feed>