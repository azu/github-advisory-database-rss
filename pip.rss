<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2022-09-16T22:01:33.814Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null-dereference in `mlir::tfg::GraphDefImporter::ConvertNodeDef`]]></title>
        <id>https://github.com/advisories/GHSA-828c-5j5q-vrjq</id>
        <link href="https://github.com/advisories/GHSA-828c-5j5q-vrjq"/>
        <updated>2022-09-16T22:01:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/graphdef_import.cc"><code>mlir::tfg::GraphDefImporter::ConvertNodeDef</code></a> tries to convert NodeDefs without an op name, it crashes.</p>
<pre><code class="language-cpp">Status GraphDefImporter::ConvertNodeDef(OpBuilder &amp;builder, ConversionState &amp;s,
                                        const NodeDef &amp;node) {
  VLOG(4) &lt;&lt; "Importing: " &lt;&lt; node.name();
  OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));

  // The GraphImporter does light shape inference, but here we will defer all of
  // that to the shape inference pass.
  const OpDef *op_def;
  const OpRegistrationData *op_reg_data = nullptr;
  if ((op_reg_data = registry_.LookUp(node.op()))) {
    op_def = &amp;op_reg_data-&gt;op_def;
  } else {
    auto it = function_op_defs_.find(node.op());
    if (it == function_op_defs_.end())
      return InvalidArgument("Unable to find OpDef for ", node.op());
    op_def = it-&gt;second;
  }
</code></pre>
<p><code>node.op().empty()</code> cannot be empty.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">a0f0b9a21c9270930457095092f558fbad4c03e5</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-828c-5j5q-vrjq</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5">https://github.com/tensorflow/tensorflow/commit/a0f0b9a21c9270930457095092f558fbad4c03e5</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-828c-5j5q-vrjq">https://github.com/advisories/GHSA-828c-5j5q-vrjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-828c-5j5q-vrjq</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T22:01:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-cpu] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow] TensorFlow vulnerable to null dereference on MLIR on empty function attributes]]></title>
        <id>https://github.com/advisories/GHSA-fv43-93gv-vm8f</id>
        <link href="https://github.com/advisories/GHSA-fv43-93gv-vm8f"/>
        <updated>2022-09-16T21:59:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When <a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/importexport/functiondef_import.cc"><code>mlir::tfg::ConvertGenericFunctionToFunctionDef</code></a> is given empty function attributes, it gives a null dereference.</p>
<pre><code class="language-cpp">// Import the function attributes with a `tf.` prefix to match the current
// infrastructure expectations.
for (const auto&amp; namedAttr : func.attr()) {
  const std::string&amp; name = "tf." + namedAttr.first;
  const AttrValue&amp; tf_attr = namedAttr.second;
  TF_ASSIGN_OR_RETURN(Attribute attr,
                      ConvertAttributeValue(tf_attr, builder, tfgDialect));
  attrs.append(name, attr);
}
</code></pre>
<p>If <code>namedAttr.first</code> is empty, it will crash.</p>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-fv43-93gv-vm8f</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b">https://github.com/tensorflow/tensorflow/commit/1cf45b831eeb0cab8655c9c7c5d06ec6f45fc41b</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-fv43-93gv-vm8f">https://github.com/advisories/GHSA-fv43-93gv-vm8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv43-93gv-vm8f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to segfault in `Requantize`]]></title>
        <id>https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</id>
        <link href="https://github.com/advisories/GHSA-wqmc-pm8c-2jhc"/>
        <updated>2022-09-16T21:57:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Requantize</code> is given <code>input_min</code>, <code>input_max</code>, <code>requested_output_min</code>, <code>requested_output_max</code> tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

out_type = tf.quint8
input = tf.constant([1], shape=[3], dtype=tf.qint32)
input_min = tf.constant([], shape=[0], dtype=tf.float32)
input_max = tf.constant(-256, shape=[1], dtype=tf.float32)
requested_output_min = tf.constant(-256, shape=[1], dtype=tf.float32)
requested_output_max = tf.constant(-256, shape=[1], dtype=tf.float32)
tf.raw_ops.Requantize(input=input, input_min=input_min, input_max=input_max, requested_output_min=requested_output_min, requested_output_max=requested_output_max, out_type=out_type)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0">785d67a78a1d533759fcd2f5e8d6ef778de849e0</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Neophytos Christou, Secure Systems Labs, Brown University.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0">https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-wqmc-pm8c-2jhc">https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:57:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tensorflow-gpu] TensorFlow vulnerable to segfault in `Requantize`]]></title>
        <id>https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</id>
        <link href="https://github.com/advisories/GHSA-wqmc-pm8c-2jhc"/>
        <updated>2022-09-16T21:57:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If <code>Requantize</code> is given <code>input_min</code>, <code>input_max</code>, <code>requested_output_min</code>, <code>requested_output_max</code> tensors of a nonzero rank, it results in a segfault that can be used to trigger a denial of service attack.</p>
<pre><code class="language-python">import tensorflow as tf

out_type = tf.quint8
input = tf.constant([1], shape=[3], dtype=tf.qint32)
input_min = tf.constant([], shape=[0], dtype=tf.float32)
input_max = tf.constant(-256, shape=[1], dtype=tf.float32)
requested_output_min = tf.constant(-256, shape=[1], dtype=tf.float32)
requested_output_max = tf.constant(-256, shape=[1], dtype=tf.float32)
tf.raw_ops.Requantize(input=input, input_min=input_min, input_max=input_max, requested_output_min=requested_output_min, requested_output_max=requested_output_max, out_type=out_type)
</code></pre>
<h3 id="patches">Patches</h3>
<p>We have patched the issue in GitHub commit <a href="https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0">785d67a78a1d533759fcd2f5e8d6ef778de849e0</a>.</p>
<p>The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.</p>
<h3 id="for-more-information">For more information</h3>
<p>Please consult <a href="https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md">our security guide</a> for more information regarding the security model and how to contact us with issues and questions.</p>
<h3 id="attribution">Attribution</h3>
<p>This vulnerability has been reported by Neophytos Christou, Secure Systems Labs, Brown University.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc">https://github.com/tensorflow/tensorflow/security/advisories/GHSA-wqmc-pm8c-2jhc</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0">https://github.com/tensorflow/tensorflow/commit/785d67a78a1d533759fcd2f5e8d6ef778de849e0</a></li>
<li><a href="https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0">https://github.com/tensorflow/tensorflow/releases/tag/v2.10.0</a></li>
<li><a href="https://github.com/advisories/GHSA-wqmc-pm8c-2jhc">https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wqmc-pm8c-2jhc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-09-16T21:57:05.000Z</published>
    </entry>
</feed>