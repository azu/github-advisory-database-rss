<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2024-02-09T07:01:22.079Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[Django] Django's Insufficient Algorithmic Complexity Causes Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</id>
        <link href="https://github.com/advisories/GHSA-p6m5-h7pp-v2x5"/>
        <updated>2024-02-08T22:00:21.000Z</updated>
        <content type="html"><![CDATA[<p>Algorithmic complexity vulnerability in the forms library in Django 1.0 before 1.0.4 and 1.1 before 1.1.1 allows remote attackers to cause a denial of service (CPU consumption) via a crafted (1) EmailField (email address) or (2) URLField (URL) that triggers a large amount of backtracking in a regular expression.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-3695">https://nvd.nist.gov/vuln/detail/CVE-2009-3695</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/53727">https://exchange.xforce.ibmcloud.com/vulnerabilities/53727</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550457">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550457</a></li>
<li><a href="http://groups.google.com/group/django-users/browse_thread/thread/15df9e45118dfc51/">http://groups.google.com/group/django-users/browse_thread/thread/15df9e45118dfc51/</a></li>
<li><a href="http://www.debian.org/security/2009/dsa-1905">http://www.debian.org/security/2009/dsa-1905</a></li>
<li><a href="http://www.djangoproject.com/weblog/2009/oct/09/security/">http://www.djangoproject.com/weblog/2009/oct/09/security/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2009/10/13/6">http://www.openwall.com/lists/oss-security/2009/10/13/6</a></li>
<li><a href="https://web.archive.org/web/20200228171918/http://www.securityfocus.com/bid/36655">https://web.archive.org/web/20200228171918/http://www.securityfocus.com/bid/36655</a></li>
<li><a href="https://github.com/advisories/GHSA-p6m5-h7pp-v2x5">https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-02T03:47:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django's Insufficient Algorithmic Complexity Causes Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</id>
        <link href="https://github.com/advisories/GHSA-p6m5-h7pp-v2x5"/>
        <updated>2024-02-08T22:00:21.000Z</updated>
        <content type="html"><![CDATA[<p>Algorithmic complexity vulnerability in the forms library in Django 1.0 before 1.0.4 and 1.1 before 1.1.1 allows remote attackers to cause a denial of service (CPU consumption) via a crafted (1) EmailField (email address) or (2) URLField (URL) that triggers a large amount of backtracking in a regular expression.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-3695">https://nvd.nist.gov/vuln/detail/CVE-2009-3695</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/53727">https://exchange.xforce.ibmcloud.com/vulnerabilities/53727</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550457">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=550457</a></li>
<li><a href="http://groups.google.com/group/django-users/browse_thread/thread/15df9e45118dfc51/">http://groups.google.com/group/django-users/browse_thread/thread/15df9e45118dfc51/</a></li>
<li><a href="http://www.debian.org/security/2009/dsa-1905">http://www.debian.org/security/2009/dsa-1905</a></li>
<li><a href="http://www.djangoproject.com/weblog/2009/oct/09/security/">http://www.djangoproject.com/weblog/2009/oct/09/security/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2009/10/13/6">http://www.openwall.com/lists/oss-security/2009/10/13/6</a></li>
<li><a href="https://web.archive.org/web/20200228171918/http://www.securityfocus.com/bid/36655">https://web.archive.org/web/20200228171918/http://www.securityfocus.com/bid/36655</a></li>
<li><a href="https://github.com/advisories/GHSA-p6m5-h7pp-v2x5">https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6m5-h7pp-v2x5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-02T03:47:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyGreSQL] PyGreSQL Might Be Vulnerable to Encoding-Based SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-xv6x-43gq-4hfj</id>
        <link href="https://github.com/advisories/GHSA-xv6x-43gq-4hfj"/>
        <updated>2024-02-08T21:31:53.000Z</updated>
        <content type="html"><![CDATA[<p>PyGreSQL 3.8 did not use PostgreSQL’s safe <code>string</code> and <code>bytea</code> functions in its own escaping functions. As a result, applications written to use PyGreSQL’s escaping functions are vulnerable to SQL injections when processing certain multi-byte character sequences. Because the safe functions require a database connection, to maintain backwards compatibility, <code>pg.escape_string()</code> and <code>pg.escape_bytea()</code> are still available, but applications will have to be adjusted to use the new <code>pyobj.escape_string()</code> and <code>pyobj.escape_bytea()</code> functions. For example, code containing:</p>
<pre><code class="language-python">import pg
connection = pg.connect(...)
escaped = pg.escape_string(untrusted_input)
</code></pre>
<p>should be adjusted to use:</p>
<pre><code class="language-python">import pg
connection = pg.connect(...)
escaped = connection.escape_string(untrusted_input)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-2940">https://nvd.nist.gov/vuln/detail/CVE-2009-2940</a></li>
<li><a href="http://ubuntu.com/usn/usn-870-1">http://ubuntu.com/usn/usn-870-1</a></li>
<li><a href="http://www.debian.org/security/2009/dsa-1911">http://www.debian.org/security/2009/dsa-1911</a></li>
<li><a href="https://github.com/PyGreSQL/PyGreSQL/commit/8e19320b130946eed6f043297e3e4e005a523612">https://github.com/PyGreSQL/PyGreSQL/commit/8e19320b130946eed6f043297e3e4e005a523612</a></li>
<li><a href="https://github.com/PyGreSQL/PyGreSQL/commit/f7237d773e6f4d5a7da3d99bb6bc5062bd07935e">https://github.com/PyGreSQL/PyGreSQL/commit/f7237d773e6f4d5a7da3d99bb6bc5062bd07935e</a></li>
<li><a href="https://github.com/advisories/GHSA-xv6x-43gq-4hfj">https://github.com/advisories/GHSA-xv6x-43gq-4hfj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv6x-43gq-4hfj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-02T03:40:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyGreSQL] PyGreSQL Might Be Vulnerable to Encoding-Based SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-xv6x-43gq-4hfj</id>
        <link href="https://github.com/advisories/GHSA-xv6x-43gq-4hfj"/>
        <updated>2024-02-08T21:31:53.000Z</updated>
        <content type="html"><![CDATA[<p>PyGreSQL 3.8 did not use PostgreSQL’s safe <code>string</code> and <code>bytea</code> functions in its own escaping functions. As a result, applications written to use PyGreSQL’s escaping functions are vulnerable to SQL injections when processing certain multi-byte character sequences. Because the safe functions require a database connection, to maintain backwards compatibility, <code>pg.escape_string()</code> and <code>pg.escape_bytea()</code> are still available, but applications will have to be adjusted to use the new <code>pyobj.escape_string()</code> and <code>pyobj.escape_bytea()</code> functions. For example, code containing:</p>
<pre><code class="language-python">import pg
connection = pg.connect(...)
escaped = pg.escape_string(untrusted_input)
</code></pre>
<p>should be adjusted to use:</p>
<pre><code class="language-python">import pg
connection = pg.connect(...)
escaped = connection.escape_string(untrusted_input)
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-2940">https://nvd.nist.gov/vuln/detail/CVE-2009-2940</a></li>
<li><a href="http://ubuntu.com/usn/usn-870-1">http://ubuntu.com/usn/usn-870-1</a></li>
<li><a href="http://www.debian.org/security/2009/dsa-1911">http://www.debian.org/security/2009/dsa-1911</a></li>
<li><a href="https://github.com/PyGreSQL/PyGreSQL/commit/8e19320b130946eed6f043297e3e4e005a523612">https://github.com/PyGreSQL/PyGreSQL/commit/8e19320b130946eed6f043297e3e4e005a523612</a></li>
<li><a href="https://github.com/PyGreSQL/PyGreSQL/commit/f7237d773e6f4d5a7da3d99bb6bc5062bd07935e">https://github.com/PyGreSQL/PyGreSQL/commit/f7237d773e6f4d5a7da3d99bb6bc5062bd07935e</a></li>
<li><a href="https://github.com/advisories/GHSA-xv6x-43gq-4hfj">https://github.com/advisories/GHSA-xv6x-43gq-4hfj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xv6x-43gq-4hfj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-02T03:40:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Admin Media Handler Vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</id>
        <link href="https://github.com/advisories/GHSA-9xg7-gg9m-rmq9"/>
        <updated>2024-02-08T21:27:27.000Z</updated>
        <content type="html"><![CDATA[<p>The Admin media handler in <code>core/servers/basehttp.py</code> in Django 1.0 and 0.96 does not properly map URL requests to expected "static media files," which allows remote attackers to conduct directory traversal attacks and read arbitrary files via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-2659">https://nvd.nist.gov/vuln/detail/CVE-2009-2659</a></li>
<li><a href="https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00055.html">https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00055.html</a></li>
<li><a href="https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00069.html">https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00069.html</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=539134">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=539134</a></li>
<li><a href="http://code.djangoproject.com/changeset/11353">http://code.djangoproject.com/changeset/11353</a></li>
<li><a href="http://www.djangoproject.com/weblog/2009/jul/28/security/">http://www.djangoproject.com/weblog/2009/jul/28/security/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2009/07/29/2">http://www.openwall.com/lists/oss-security/2009/07/29/2</a></li>
<li><a href="https://github.com/django/django/commit/da85d76fd6ca846f3b0ff414e042ddb5e62e2e69">https://github.com/django/django/commit/da85d76fd6ca846f3b0ff414e042ddb5e62e2e69</a></li>
<li><a href="https://github.com/django/django/commit/df7f917b7f51ba969faa49d000ffc79572c5dcb4">https://github.com/django/django/commit/df7f917b7f51ba969faa49d000ffc79572c5dcb4</a></li>
<li><a href="https://web.archive.org/web/20111211001428/http://www.securityfocus.com/bid/35859">https://web.archive.org/web/20111211001428/http://www.securityfocus.com/bid/35859</a></li>
<li><a href="https://github.com/advisories/GHSA-9xg7-gg9m-rmq9">https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-02T03:37:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django Admin Media Handler Vulnerable to Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</id>
        <link href="https://github.com/advisories/GHSA-9xg7-gg9m-rmq9"/>
        <updated>2024-02-08T21:27:27.000Z</updated>
        <content type="html"><![CDATA[<p>The Admin media handler in <code>core/servers/basehttp.py</code> in Django 1.0 and 0.96 does not properly map URL requests to expected "static media files," which allows remote attackers to conduct directory traversal attacks and read arbitrary files via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2009-2659">https://nvd.nist.gov/vuln/detail/CVE-2009-2659</a></li>
<li><a href="https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00055.html">https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00055.html</a></li>
<li><a href="https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00069.html">https://www.redhat.com/archives/fedora-package-announce/2009-August/msg00069.html</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=539134">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=539134</a></li>
<li><a href="http://code.djangoproject.com/changeset/11353">http://code.djangoproject.com/changeset/11353</a></li>
<li><a href="http://www.djangoproject.com/weblog/2009/jul/28/security/">http://www.djangoproject.com/weblog/2009/jul/28/security/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2009/07/29/2">http://www.openwall.com/lists/oss-security/2009/07/29/2</a></li>
<li><a href="https://github.com/django/django/commit/da85d76fd6ca846f3b0ff414e042ddb5e62e2e69">https://github.com/django/django/commit/da85d76fd6ca846f3b0ff414e042ddb5e62e2e69</a></li>
<li><a href="https://github.com/django/django/commit/df7f917b7f51ba969faa49d000ffc79572c5dcb4">https://github.com/django/django/commit/df7f917b7f51ba969faa49d000ffc79572c5dcb4</a></li>
<li><a href="https://web.archive.org/web/20111211001428/http://www.securityfocus.com/bid/35859">https://web.archive.org/web/20111211001428/http://www.securityfocus.com/bid/35859</a></li>
<li><a href="https://github.com/advisories/GHSA-9xg7-gg9m-rmq9">https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xg7-gg9m-rmq9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-02T03:37:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kinto-attachment] Kinto Attachment's attachments can be replaced on read-only records]]></title>
        <id>https://github.com/advisories/GHSA-hvp4-vrv2-8wrq</id>
        <link href="https://github.com/advisories/GHSA-hvp4-vrv2-8wrq"/>
        <updated>2024-02-08T18:32:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The attachment file of an existing record can be replaced if the user has <code>"read"</code> permission on one of the parent (collection or bucket).</p>
<p>And if the <code>"read"</code> permission is given to <code>"system.Everyone"</code> on one of the parent, then the attachment can be replaced on a record using an anonymous request.</p>
<p>Note that if the parent has no explicit read permission, then the records attachments are safe.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>Patch released in kinto-attachment 6.4.0</li>
<li><a href="https://github.com/Kinto/kinto-attachment/commit/f4a31484f5925cbc02b59ebd37554538ab826ca1">https://github.com/Kinto/kinto-attachment/commit/f4a31484f5925cbc02b59ebd37554538ab826ca1</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>None if the read permission has to remain granted.</p>
<p>Updating to 6.4.0 or applying the patch individually (if updating is not feasible) is strongly recommended.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1879034">https://bugzilla.mozilla.org/show_bug.cgi?id=1879034</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Kinto/kinto-attachment/security/advisories/GHSA-hvp4-vrv2-8wrq">https://github.com/Kinto/kinto-attachment/security/advisories/GHSA-hvp4-vrv2-8wrq</a></li>
<li><a href="https://github.com/Kinto/kinto-attachment/commit/f4a31484f5925cbc02b59ebd37554538ab826ca1">https://github.com/Kinto/kinto-attachment/commit/f4a31484f5925cbc02b59ebd37554538ab826ca1</a></li>
<li><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1879034">https://bugzilla.mozilla.org/show_bug.cgi?id=1879034</a></li>
<li><a href="https://github.com/advisories/GHSA-hvp4-vrv2-8wrq">https://github.com/advisories/GHSA-hvp4-vrv2-8wrq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hvp4-vrv2-8wrq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-08T18:32:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[paste] Paste is vulnerable to Cross-site Scripting via vectors involving a 404 status code]]></title>
        <id>https://github.com/advisories/GHSA-7gfc-2v6g-6w9f</id>
        <link href="https://github.com/advisories/GHSA-7gfc-2v6g-6w9f"/>
        <updated>2024-02-08T15:52:06.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in the paste.httpexceptions implementation in Paste before 1.7.4 allow remote attackers to inject arbitrary web script or HTML via vectors involving a 404 status code, related to (1) paste.urlparser.StaticURLParser, (2) paste.urlparser.PkgResourcesParser, (3) paste.urlmap.URLMap, and (4) HTTPNotFound.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-2477">https://nvd.nist.gov/vuln/detail/CVE-2010-2477</a></li>
<li><a href="http://bitbucket.org/ianb/paste/changeset/fcae59df8b56">http://bitbucket.org/ianb/paste/changeset/fcae59df8b56</a></li>
<li><a href="http://groups.google.com/group/paste-users/browse_thread/thread/3b3fff3dadd0b1e5?pli=1">http://groups.google.com/group/paste-users/browse_thread/thread/3b3fff3dadd0b1e5?pli=1</a></li>
<li><a href="http://groups.google.com/group/pylons-discuss/msg/8c256dc076a408d8?dmode=source&amp;output=gplain">http://groups.google.com/group/pylons-discuss/msg/8c256dc076a408d8?dmode=source&amp;output=gplain</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127785414818815&amp;w=2">http://marc.info/?l=oss-security&amp;m=127785414818815&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127792576822169&amp;w=2">http://marc.info/?l=oss-security&amp;m=127792576822169&amp;w=2</a></li>
<li><a href="http://pylonshq.com/articles/archives/2010/6/paste_174_released_addresses_xss_security_hole">http://pylonshq.com/articles/archives/2010/6/paste_174_released_addresses_xss_security_hole</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-1026-1">http://www.ubuntu.com/usn/USN-1026-1</a></li>
<li><a href="https://github.com/cdent/paste/commit/4910493c62f369a3222357af09450930e4c93f5e">https://github.com/cdent/paste/commit/4910493c62f369a3222357af09450930e4c93f5e</a></li>
<li><a href="https://web.archive.org/web/20111227133546/http://secunia.com/advisories/42500">https://web.archive.org/web/20111227133546/http://secunia.com/advisories/42500</a></li>
<li><a href="https://web.archive.org/web/20120527154041/http://www.securityfocus.com/bid/41160">https://web.archive.org/web/20120527154041/http://www.securityfocus.com/bid/41160</a></li>
<li><a href="https://github.com/advisories/GHSA-7gfc-2v6g-6w9f">https://github.com/advisories/GHSA-7gfc-2v6g-6w9f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gfc-2v6g-6w9f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:45:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Plone] Plone Cross-site Scripting vulnerability in PortalTransforms]]></title>
        <id>https://github.com/advisories/GHSA-qj7x-wm9q-qjx8</id>
        <link href="https://github.com/advisories/GHSA-qj7x-wm9q-qjx8"/>
        <updated>2024-02-08T15:45:47.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in PortalTransforms in Plone 2.1 through 3.3.5 before hotfix 20100612 allows remote attackers to inject arbitrary web script or HTML via the safe_html transform.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-2422">https://nvd.nist.gov/vuln/detail/CVE-2010-2422</a></li>
<li><a href="http://plone.org/products/plone/security/advisories/cve-2010-unassigned-html-injection-in-safe_html">http://plone.org/products/plone/security/advisories/cve-2010-unassigned-html-injection-in-safe_html</a></li>
<li><a href="https://web.archive.org/web/20100728161728/http://secunia.com/advisories/40270">https://web.archive.org/web/20100728161728/http://secunia.com/advisories/40270</a></li>
<li><a href="https://web.archive.org/web/20200228223808/http://www.securityfocus.com/bid/40999">https://web.archive.org/web/20200228223808/http://www.securityfocus.com/bid/40999</a></li>
<li><a href="https://github.com/advisories/GHSA-qj7x-wm9q-qjx8">https://github.com/advisories/GHSA-qj7x-wm9q-qjx8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj7x-wm9q-qjx8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:50:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moin] MoinMoin cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2j76-26qq-7rvv</id>
        <link href="https://github.com/advisories/GHSA-2j76-26qq-7rvv"/>
        <updated>2024-02-08T15:43:50.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in MoinMoin 1.7.3 and earlier, and 1.9.x before 1.9.3, allow remote attackers to inject arbitrary web script or HTML via crafted content, related to (1) action/LikePages.py, (2) action/chart.py, and (3) action/userprofile.py, a similar issue to CVE-2010-2487.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-2969">https://nvd.nist.gov/vuln/detail/CVE-2010-2969</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809</a></li>
<li><a href="http://hg.moinmo.in/moin/1.7/rev/37306fba2189">http://hg.moinmo.in/moin/1.7/rev/37306fba2189</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES">http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/rev/e50b087c4572">http://hg.moinmo.in/moin/1.9/rev/e50b087c4572</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2">http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2">http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2</a></li>
<li><a href="http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg">http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg</a></li>
<li><a href="http://moinmo.in/MoinMoinRelease1.9">http://moinmo.in/MoinMoinRelease1.9</a></li>
<li><a href="http://moinmo.in/SecurityFixes">http://moinmo.in/SecurityFixes</a></li>
<li><a href="http://www.debian.org/security/2010/dsa-2083">http://www.debian.org/security/2010/dsa-2083</a></li>
<li><a href="https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836">https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836</a></li>
<li><a href="https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549">https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549</a></li>
<li><a href="https://github.com/advisories/GHSA-2j76-26qq-7rvv">https://github.com/advisories/GHSA-2j76-26qq-7rvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j76-26qq-7rvv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:49:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[moin] MoinMoin cross-site scripting (XSS) vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2j76-26qq-7rvv</id>
        <link href="https://github.com/advisories/GHSA-2j76-26qq-7rvv"/>
        <updated>2024-02-08T15:43:50.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in MoinMoin 1.7.3 and earlier, and 1.9.x before 1.9.3, allow remote attackers to inject arbitrary web script or HTML via crafted content, related to (1) action/LikePages.py, (2) action/chart.py, and (3) action/userprofile.py, a similar issue to CVE-2010-2487.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-2969">https://nvd.nist.gov/vuln/detail/CVE-2010-2969</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809</a></li>
<li><a href="http://hg.moinmo.in/moin/1.7/rev/37306fba2189">http://hg.moinmo.in/moin/1.7/rev/37306fba2189</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES">http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/rev/e50b087c4572">http://hg.moinmo.in/moin/1.9/rev/e50b087c4572</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2">http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2">http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2</a></li>
<li><a href="http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg">http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg</a></li>
<li><a href="http://moinmo.in/MoinMoinRelease1.9">http://moinmo.in/MoinMoinRelease1.9</a></li>
<li><a href="http://moinmo.in/SecurityFixes">http://moinmo.in/SecurityFixes</a></li>
<li><a href="http://www.debian.org/security/2010/dsa-2083">http://www.debian.org/security/2010/dsa-2083</a></li>
<li><a href="https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836">https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836</a></li>
<li><a href="https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549">https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549</a></li>
<li><a href="https://github.com/advisories/GHSA-2j76-26qq-7rvv">https://github.com/advisories/GHSA-2j76-26qq-7rvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2j76-26qq-7rvv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:49:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Moin] MoinMoin cross-site scripting (XSS) vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-gxh5-r8gp-pjc3</id>
        <link href="https://github.com/advisories/GHSA-gxh5-r8gp-pjc3"/>
        <updated>2024-02-08T15:42:34.000Z</updated>
        <content type="html"><![CDATA[<p>Multiple cross-site scripting (XSS) vulnerabilities in MoinMoin 1.9.x before 1.9.3 allow remote attackers to inject arbitrary web script or HTML via crafted content, related to (1) action/SlideShow.py, (2) action/anywikidraw.py, and (3) action/language_setup.py, a similar issue to CVE-2010-2487.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-2970">https://nvd.nist.gov/vuln/detail/CVE-2010-2970</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=584809</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES">http://hg.moinmo.in/moin/1.9/raw-file/1.9.3/docs/CHANGES</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/rev/4fe9951788cb">http://hg.moinmo.in/moin/1.9/rev/4fe9951788cb</a></li>
<li><a href="http://hg.moinmo.in/moin/1.9/rev/e50b087c4572">http://hg.moinmo.in/moin/1.9/rev/e50b087c4572</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2">http://marc.info/?l=oss-security&amp;m=127799369406968&amp;w=2</a></li>
<li><a href="http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2">http://marc.info/?l=oss-security&amp;m=127809682420259&amp;w=2</a></li>
<li><a href="http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg">http://moinmo.in/MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg</a></li>
<li><a href="http://moinmo.in/MoinMoinRelease1.9">http://moinmo.in/MoinMoinRelease1.9</a></li>
<li><a href="http://moinmo.in/SecurityFixes">http://moinmo.in/SecurityFixes</a></li>
<li><a href="http://www.debian.org/security/2010/dsa-2083">http://www.debian.org/security/2010/dsa-2083</a></li>
<li><a href="https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836">https://web.archive.org/web/20140801154518/http://secunia.com/advisories/40836</a></li>
<li><a href="https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549">https://web.archive.org/web/20200228150629/http://www.securityfocus.com/bid/40549</a></li>
<li><a href="https://github.com/advisories/GHSA-gxh5-r8gp-pjc3">https://github.com/advisories/GHSA-gxh5-r8gp-pjc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gxh5-r8gp-pjc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T05:49:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[DIRAC] DIRAC's TokenManager does not check permissions on cached tokens]]></title>
        <id>https://github.com/advisories/GHSA-59qj-jcjv-662j</id>
        <link href="https://github.com/advisories/GHSA-59qj-jcjv-662j"/>
        <updated>2024-02-08T15:32:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any user could get a token that has been requested by another user/agent</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability is fixed in version 8.0.37.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/DIRACGrid/DIRAC/security/advisories/GHSA-59qj-jcjv-662j">https://github.com/DIRACGrid/DIRAC/security/advisories/GHSA-59qj-jcjv-662j</a></li>
<li><a href="https://github.com/DIRACGrid/DIRAC/commit/9487921684e2925b4cf72d6c423718cf4950f3fe">https://github.com/DIRACGrid/DIRAC/commit/9487921684e2925b4cf72d6c423718cf4950f3fe</a></li>
<li><a href="https://github.com/DIRACGrid/DIRAC/commit/f9ddab755b9a69acb85e14d2db851d8ac0c9648c">https://github.com/DIRACGrid/DIRAC/commit/f9ddab755b9a69acb85e14d2db851d8ac0c9648c</a></li>
<li><a href="https://github.com/advisories/GHSA-59qj-jcjv-662j">https://github.com/advisories/GHSA-59qj-jcjv-662j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59qj-jcjv-662j</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-08T15:32:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ocrodjvu] ocrodjvu is vulnerable to Arbitrary File Modification via symlink attack]]></title>
        <id>https://github.com/advisories/GHSA-5pjj-7m4p-wfh2</id>
        <link href="https://github.com/advisories/GHSA-5pjj-7m4p-wfh2"/>
        <updated>2024-02-07T22:40:11.000Z</updated>
        <content type="html"><![CDATA[<p>ocrodjvu 0.4.6-1 on Debian GNU/Linux allows local users to modify arbitrary files via a symlink attack on temporary files that are generated when Cuneiform is invoked as the OCR engine.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2010-4338">https://nvd.nist.gov/vuln/detail/CVE-2010-4338</a></li>
<li><a href="https://exchange.xforce.ibmcloud.com/vulnerabilities/64892">https://exchange.xforce.ibmcloud.com/vulnerabilities/64892</a></li>
<li><a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=598134">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=598134</a></li>
<li><a href="https://web.archive.org/web/20200229160520/http://www.securityfocus.com/bid/45234">https://web.archive.org/web/20200229160520/http://www.securityfocus.com/bid/45234</a></li>
<li><a href="https://github.com/advisories/GHSA-5pjj-7m4p-wfh2">https://github.com/advisories/GHSA-5pjj-7m4p-wfh2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5pjj-7m4p-wfh2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T02:04:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service attack in the intcomma template filter]]></title>
        <id>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</id>
        <link href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4"/>
        <updated>2024-02-07T17:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24680">https://nvd.nist.gov/vuln/detail/CVE-2024-24680</a></li>
<li><a href="https://docs.djangoproject.com/en/5.0/releases/security/">https://docs.djangoproject.com/en/5.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#%21forum/django-announce">https://groups.google.com/forum/#%21forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/feb/06/security-releases/">https://www.djangoproject.com/weblog/2024/feb/06/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc">https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc</a></li>
<li><a href="https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9">https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9</a></li>
<li><a href="https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2">https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2</a></li>
<li><a href="https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820">https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4">https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T00:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service attack in the intcomma template filter]]></title>
        <id>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</id>
        <link href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4"/>
        <updated>2024-02-07T17:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24680">https://nvd.nist.gov/vuln/detail/CVE-2024-24680</a></li>
<li><a href="https://docs.djangoproject.com/en/5.0/releases/security/">https://docs.djangoproject.com/en/5.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#%21forum/django-announce">https://groups.google.com/forum/#%21forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/feb/06/security-releases/">https://www.djangoproject.com/weblog/2024/feb/06/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc">https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc</a></li>
<li><a href="https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9">https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9</a></li>
<li><a href="https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2">https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2</a></li>
<li><a href="https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820">https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4">https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T00:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django denial-of-service attack in the intcomma template filter]]></title>
        <id>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</id>
        <link href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4"/>
        <updated>2024-02-07T17:32:16.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Django 3.2 before 3.2.24, 4.2 before 4.2.10, and Django 5.0 before 5.0.2. The intcomma template filter was subject to a potential denial-of-service attack when used with very long strings.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24680">https://nvd.nist.gov/vuln/detail/CVE-2024-24680</a></li>
<li><a href="https://docs.djangoproject.com/en/5.0/releases/security/">https://docs.djangoproject.com/en/5.0/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#%21forum/django-announce">https://groups.google.com/forum/#%21forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2024/feb/06/security-releases/">https://www.djangoproject.com/weblog/2024/feb/06/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc">https://github.com/django/django/commit/16a8fe18a3b81250f4fa57e3f93f0599dc4895bc</a></li>
<li><a href="https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9">https://github.com/django/django/commit/55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9</a></li>
<li><a href="https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2">https://github.com/django/django/commit/572ea07e84b38ea8de0551f4b4eda685d91d09d2</a></li>
<li><a href="https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820">https://github.com/django/django/commit/c1171ffbd570db90ca206c30f8e2b9f691243820</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2024-28.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-xxj9-f6rv-m3x4">https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xxj9-f6rv-m3x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-07T00:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Products.SQLAlchemyDA] SQLAlchemyDA unauthenticated arbitrary SQL query execution]]></title>
        <id>https://github.com/advisories/GHSA-r3jc-3qmm-w3pw</id>
        <link href="https://github.com/advisories/GHSA-r3jc-3qmm-w3pw"/>
        <updated>2024-02-07T17:28:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The vulnerability allows unauthenticated execution of arbitrary SQL statements on the database the SQLAlchemyDA instance is connected to. All users are affected.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been patched in version 2.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround. All users are urged to upgrade to version 2.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/Products.SQLAlchemyDA/security/advisories/GHSA-r3jc-3qmm-w3pw">https://github.com/zopefoundation/Products.SQLAlchemyDA/security/advisories/GHSA-r3jc-3qmm-w3pw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24811">https://nvd.nist.gov/vuln/detail/CVE-2024-24811</a></li>
<li><a href="https://github.com/zopefoundation/Products.SQLAlchemyDA/commit/e682b99f8406f20bc3f0f2c77153ed7345fd215a">https://github.com/zopefoundation/Products.SQLAlchemyDA/commit/e682b99f8406f20bc3f0f2c77153ed7345fd215a</a></li>
<li><a href="https://github.com/advisories/GHSA-r3jc-3qmm-w3pw">https://github.com/advisories/GHSA-r3jc-3qmm-w3pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3jc-3qmm-w3pw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-07T17:28:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] Vyper array negative index vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-52xq-j7v9-v4v2</id>
        <link href="https://github.com/advisories/GHSA-52xq-j7v9-v4v2"/>
        <updated>2024-02-07T20:24:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Arrays can be keyed by a signed integer, while they are defined for unsigned integers only. The typechecker doesn't throw when spotting the usage of an <code>int</code> as an index for an array. Typically, negative integers are filtered out at runtime by the bounds checker, but small enough (i.e. large in magnitude, ex. <code>-2**255 + 5</code>) quantities combined with large enough arrays (at least <code>2**255</code> in length) can pass the bounds checker, resulting in unexpected behavior.</p>
<p>A contract search was performed, and no production contracts were found to be impacted.</p>
<h3 id="details">Details</h3>
<p>The typechecker allows the usage of signed integers to be used as indexes to arrays. The vulnerability is present in different forms in all versions. Here is an example from <code>0.3.10</code>:
<a href="https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/semantics/types/subscriptable.py#L127-L137">https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/semantics/types/subscriptable.py#L127-L137</a></p>
<p>As can be seen, the validation is performed against <code>IntegerT.any()</code>.</p>
<h3 id="poc">PoC</h3>
<p>If the array is sufficiently large, it can be indexed with a negative value:</p>
<pre><code class="language-python">arr: public(uint256[MAX_UINT256])

@external
def set(idx: int256, num: uint256):
    self.arr[idx] = num
</code></pre>
<p>For signed integers, the 2's complement representation is used. Because the array was declared very large, the bounds checking will pass (negative values will simply be represented as very large numbers):
<a href="https://github.com/vyperlang/vyper/blob/a1fd228cb9936c3e4bbca6f3ee3fb4426ef45490/vyper/codegen/core.py#L534-L541">https://github.com/vyperlang/vyper/blob/a1fd228cb9936c3e4bbca6f3ee3fb4426ef45490/vyper/codegen/core.py#L534-L541</a></p>
<h3 id="impact">Impact</h3>
<p>There are two potential vulnerability classes: unpredictable behavior and accessing inaccessible elements.</p>
<ol>
<li><p>If it is possible to index an array with a negative integer without reverting, this is most likely not anticipated by the developer and such accesses can cause unpredictable behavior for the contract.</p>
</li>
<li><p>If a contract has an invariant in the form <code>assert index &lt; x</code> where both <code>index</code> and <code>x</code> are signed integers, the developer might suppose that no elements on indexes <code>y | y &gt;= x</code> are accessible. However, by using negative indexes this can be bypassed.</p>
</li>
</ol>
<p>The contract search found no production contracts impacted by these two classes of issues.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-52xq-j7v9-v4v2">https://github.com/vyperlang/vyper/security/advisories/GHSA-52xq-j7v9-v4v2</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/a1fd228cb9936c3e4bbca6f3ee3fb4426ef45490/vyper/codegen/core.py#L534-L541">https://github.com/vyperlang/vyper/blob/a1fd228cb9936c3e4bbca6f3ee3fb4426ef45490/vyper/codegen/core.py#L534-L541</a></li>
<li><a href="https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/semantics/types/subscriptable.py#L127-L137">https://github.com/vyperlang/vyper/blob/c150fc49ee9375a930d177044559b83cb95f7963/vyper/semantics/types/subscriptable.py#L127-L137</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24563">https://nvd.nist.gov/vuln/detail/CVE-2024-24563</a></li>
<li><a href="https://github.com/advisories/GHSA-52xq-j7v9-v4v2">https://github.com/advisories/GHSA-52xq-j7v9-v4v2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-52xq-j7v9-v4v2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-07T17:27:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[clearml] Allegro AI ClearML path traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m95h-p4gg-wfw3</id>
        <link href="https://github.com/advisories/GHSA-m95h-p4gg-wfw3"/>
        <updated>2024-02-06T20:28:57.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability in version 1.4.0 or newer of Allegro AI’s ClearML platform enables a maliciously uploaded dataset to write local or remote files to an arbitrary location on an end user’s system when interacted with.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24591">https://nvd.nist.gov/vuln/detail/CVE-2024-24591</a></li>
<li><a href="https://hiddenlayer.com/research/not-so-clear-how-mlops-solutions-can-muddy-the-waters-of-your-supply-chain/">https://hiddenlayer.com/research/not-so-clear-how-mlops-solutions-can-muddy-the-waters-of-your-supply-chain/</a></li>
<li><a href="https://github.com/advisories/GHSA-m95h-p4gg-wfw3">https://github.com/advisories/GHSA-m95h-p4gg-wfw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m95h-p4gg-wfw3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-06T15:32:07.000Z</published>
    </entry>
</feed>