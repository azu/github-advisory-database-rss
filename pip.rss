<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/pip.rss</id>
    <title>Security Advisory for Python packages hosted at PyPI.org</title>
    <updated>2023-09-07T08:01:37.102Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Apip"/>
    <subtitle>Security Advisory for Python packages hosted at PyPI.org on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[starlette] Duplicate Advisory: Starlette vulnerable to directory traversal]]></title>
        <id>https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</id>
        <link href="https://github.com/advisories/GHSA-qj8w-rv5x-2v9h"/>
        <updated>2023-09-07T05:07:10.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-v5gw-mw7f-84px. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Directory traversal vulnerability in Starlette versions 0.13.5 and later and prior to 0.27.0 allows a remote unauthenticated attacker to view files in a web service which was built using Starlette.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px">https://github.com/encode/starlette/security/advisories/GHSA-v5gw-mw7f-84px</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-29159">https://nvd.nist.gov/vuln/detail/CVE-2023-29159</a></li>
<li><a href="https://github.com/encode/starlette/releases/tag/0.27.0">https://github.com/encode/starlette/releases/tag/0.27.0</a></li>
<li><a href="https://jvn.jp/en/jp/JVN95981715/">https://jvn.jp/en/jp/JVN95981715/</a></li>
<li><a href="https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3">https://github.com/encode/starlette/commit/1797de464124b090f10cf570441e8292936d63e3</a></li>
<li><a href="https://github.com/advisories/GHSA-qj8w-rv5x-2v9h">https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj8w-rv5x-2v9h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-01T03:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django bypasses validation when using one form field to upload multiple files]]></title>
        <id>https://github.com/advisories/GHSA-r3xc-prgr-mg9p</id>
        <link href="https://github.com/advisories/GHSA-r3xc-prgr-mg9p"/>
        <updated>2023-09-07T05:06:34.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.19, 4.x before 4.1.9, and 4.2 before 4.2.1, it was possible to bypass validation when using one form field to upload multiple files. This multiple upload has never been supported by forms.FileField or forms.ImageField (only the last uploaded file was validated). However, Django's "Uploading multiple files" documentation suggested otherwise.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31047">https://nvd.nist.gov/vuln/detail/CVE-2023-31047</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/may/03/security-releases/">https://www.djangoproject.com/weblog/2023/may/03/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd">https://github.com/django/django/commit/21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd</a></li>
<li><a href="https://github.com/django/django/commit/e7c3a2ccc3a562328600be05068ed9149e12ce64">https://github.com/django/django/commit/e7c3a2ccc3a562328600be05068ed9149e12ce64</a></li>
<li><a href="https://github.com/django/django/commit/eed53d0011622e70b936e203005f0e6f4ac48965">https://github.com/django/django/commit/eed53d0011622e70b936e203005f0e6f4ac48965</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A45VKTUVQ2BN6D5ZLZGCM774R6QGFOHW/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/A45VKTUVQ2BN6D5ZLZGCM774R6QGFOHW/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DNEHD6N435OE2XUFGDAAVAXSYWLCUBFD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DNEHD6N435OE2XUFGDAAVAXSYWLCUBFD/</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-61.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-61.yaml</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230609-0008/">https://security.netapp.com/advisory/ntap-20230609-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-r3xc-prgr-mg9p">https://github.com/advisories/GHSA-r3xc-prgr-mg9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3xc-prgr-mg9p</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-05-07T03:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-airflow-providers-apache-drill] apache-airflow-providers-apache-drill Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-mq4v-6vg4-796c</id>
        <link href="https://github.com/advisories/GHSA-mq4v-6vg4-796c"/>
        <updated>2023-09-07T05:05:40.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation vulnerability in Apache Software Foundation Apache Airflow Drill Provider.</p>
<p>Apache Airflow Drill Provider is affected by a vulnerability that allows an attacker to pass in malicious parameters when establishing a connection with DrillHook giving an opportunity to read files on the Airflow server.
This issue affects Apache Airflow Drill Provider before 2.4.3.
It is recommended to upgrade to a version that is not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39553">https://nvd.nist.gov/vuln/detail/CVE-2023-39553</a></li>
<li><a href="https://github.com/apache/airflow/pull/33074">https://github.com/apache/airflow/pull/33074</a></li>
<li><a href="https://lists.apache.org/thread/ozpl0opmob49rkcz8svo8wkxyw1395sf">https://lists.apache.org/thread/ozpl0opmob49rkcz8svo8wkxyw1395sf</a></li>
<li><a href="https://github.com/apache/airflow/commit/394a727ac2c18d58978bf186a7a92923460ec110">https://github.com/apache/airflow/commit/394a727ac2c18d58978bf186a7a92923460ec110</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/08/11/1">http://www.openwall.com/lists/oss-security/2023/08/11/1</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-136.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/apache-airflow/PYSEC-2023-136.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-mq4v-6vg4-796c">https://github.com/advisories/GHSA-mq4v-6vg4-796c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq4v-6vg4-796c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-11T09:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ethyca-fides] Fides Webserver Vulnerable to Zip Bomb File Uploads]]></title>
        <id>https://github.com/advisories/GHSA-g95c-2jgm-hqc6</id>
        <link href="https://github.com/advisories/GHSA-g95c-2jgm-hqc6"/>
        <updated>2023-09-07T05:05:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Fides webserver is vulnerable to a type of Denial of Service (DoS) attack. Attackers can exploit a weakness in the connector template upload feature to upload a malicious zip bomb file, resulting in resource exhaustion and service unavailability for all users of the Fides webserver.</p>
<p>This vulnerability affects Fides versions <code>2.11.0</code> through <code>2.15.1</code>. Exploitation is limited to users with elevated privileges with the <code>CONNECTOR_TEMPLATE_REGISTER</code> scope, which includes root users and users with the owner role.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been patched in Fides version <code>2.16.0</code>. Users are advised to upgrade to this version or later to secure their systems against this threat.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no known workaround to remediate this vulnerability without upgrading. If an attack occurs, the impact can be mitigated by manually or automatically restarting the affected container.</p>
<h3 id="references">References</h3>
<p>More information about this type of vulnerability can be found at the following links:</p>
<ul>
<li><a href="https://www.bamsoftware.com/hacks/zipbomb/">https://www.bamsoftware.com/hacks/zipbomb/</a></li>
<li><a href="https://python-security.readthedocs.io/security.html#archives-and-zip-bomb-cve-2019-9674">https://python-security.readthedocs.io/security.html#archives-and-zip-bomb-cve-2019-9674</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ethyca/fides/security/advisories/GHSA-g95c-2jgm-hqc6">https://github.com/ethyca/fides/security/advisories/GHSA-g95c-2jgm-hqc6</a></li>
<li><a href="https://github.com/ethyca/fides/commit/5aea738463960d81821c11ae7ade1d627a46bf32">https://github.com/ethyca/fides/commit/5aea738463960d81821c11ae7ade1d627a46bf32</a></li>
<li><a href="https://github.com/ethyca/fides/releases/tag/2.16.0">https://github.com/ethyca/fides/releases/tag/2.16.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37480">https://nvd.nist.gov/vuln/detail/CVE-2023-37480</a></li>
<li><a href="https://github.com/advisories/GHSA-g95c-2jgm-hqc6">https://github.com/advisories/GHSA-g95c-2jgm-hqc6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g95c-2jgm-hqc6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-18T19:22:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[flask] Flask vulnerable to possible disclosure of permanent session cookie due to missing Vary: Cookie header]]></title>
        <id>https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</id>
        <link href="https://github.com/advisories/GHSA-m2qf-hxjv-5gpq"/>
        <updated>2023-09-07T05:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by a proxy to other clients. If the proxy also caches <code>Set-Cookie</code> headers, it may send one client's <code>session</code> cookie to other clients. The severity depends on the application's use of the session, and the proxy's behavior regarding cookies. The risk depends on <em>all</em> these conditions being met.</p>
<ol>
<li>The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.</li>
<li>The application sets <a href="https://flask.palletsprojects.com/en/2.3.x/api/#flask.session.permanent"><code>session.permanent = True</code></a>.</li>
<li>The application does not access or modify the session at any point during a request.</li>
<li><a href="https://flask.palletsprojects.com/en/2.3.x/config/#SESSION_REFRESH_EACH_REQUEST"><code>SESSION_REFRESH_EACH_REQUEST</code></a> is enabled (the default).</li>
<li>The application does not set a <code>Cache-Control</code> header to indicate that a page is private or should not be cached.</li>
</ol>
<p>This happens because vulnerable versions of Flask only set the <code>Vary: Cookie</code> header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq">https://github.com/pallets/flask/security/advisories/GHSA-m2qf-hxjv-5gpq</a></li>
<li><a href="https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b">https://github.com/pallets/flask/commit/70f906c51ce49c485f1d355703e9cc3386b1cc2b</a></li>
<li><a href="https://github.com/pallets/flask/releases/tag/2.3.2">https://github.com/pallets/flask/releases/tag/2.3.2</a></li>
<li><a href="https://github.com/pallets/flask/commit/afd63b16170b7c047f5758eb910c416511e9c965">https://github.com/pallets/flask/commit/afd63b16170b7c047f5758eb910c416511e9c965</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30861">https://nvd.nist.gov/vuln/detail/CVE-2023-30861</a></li>
<li><a href="https://github.com/pallets/flask/releases/tag/2.2.5">https://github.com/pallets/flask/releases/tag/2.2.5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/flask/PYSEC-2023-62.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/flask/PYSEC-2023-62.yaml</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5442">https://www.debian.org/security/2023/dsa-5442</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20230818-0006/">https://security.netapp.com/advisory/ntap-20230818-0006/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/08/msg00024.html">https://lists.debian.org/debian-lts-announce/2023/08/msg00024.html</a></li>
<li><a href="https://github.com/advisories/GHSA-m2qf-hxjv-5gpq">https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m2qf-hxjv-5gpq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-01T19:22:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Cross-site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6565-fg86-6jcx</id>
        <link href="https://github.com/advisories/GHSA-6565-fg86-6jcx"/>
        <updated>2023-09-07T05:03:40.000Z</updated>
        <content type="html"><![CDATA[<p>Cross-site scripting (XSS) vulnerability in the contents function in <code>admin/helpers.py</code> in Django before 1.7.6 and 1.8 before 1.8b2 allows remote attackers to inject arbitrary web script or HTML via a model attribute in <code>ModelAdmin.readonly_fields</code>, as demonstrated by an <code>@property</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-2241">https://nvd.nist.gov/vuln/detail/CVE-2015-2241</a></li>
<li><a href="https://code.djangoproject.com/ticket/24461">https://code.djangoproject.com/ticket/24461</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/mar/09/security-releases/">https://www.djangoproject.com/weblog/2015/mar/09/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/2654e1b93923bac55f12b4e66c5e39b16695ace5">https://github.com/django/django/commit/2654e1b93923bac55f12b4e66c5e39b16695ace5</a></li>
<li><a href="https://github.com/django/django/commit/82c9169077a066995e3b00aac551bf1c8a89d98a">https://github.com/django/django/commit/82c9169077a066995e3b00aac551bf1c8a89d98a</a></li>
<li><a href="https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109">https://web.archive.org/web/20150523054951/http://www.mandriva.com/en/support/security/advisories/advisory/MDVSA-2015:109/?name=MDVSA-2015:109</a></li>
<li><a href="https://web.archive.org/web/20171112005349/http://www.securityfocus.com/bid/73095">https://web.archive.org/web/20171112005349/http://www.securityfocus.com/bid/73095</a></li>
<li><a href="https://github.com/advisories/GHSA-6565-fg86-6jcx">https://github.com/advisories/GHSA-6565-fg86-6jcx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6565-fg86-6jcx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T03:34:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Django] Django has regular expression denial of service vulnerability in EmailValidator/URLValidator]]></title>
        <id>https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</id>
        <link href="https://github.com/advisories/GHSA-jh3w-4vvf-mjgr"/>
        <updated>2023-09-07T05:03:22.000Z</updated>
        <content type="html"><![CDATA[<p>In Django 3.2 before 3.2.20, 4 before 4.1.10, and 4.2 before 4.2.3, <code>EmailValidator</code> and <code>URLValidator</code> are subject to a potential ReDoS (regular expression denial of service) attack via a very large number of domain name labels of emails and URLs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36053">https://nvd.nist.gov/vuln/detail/CVE-2023-36053</a></li>
<li><a href="https://docs.djangoproject.com/en/4.2/releases/security/">https://docs.djangoproject.com/en/4.2/releases/security/</a></li>
<li><a href="https://groups.google.com/forum/#!forum/django-announce">https://groups.google.com/forum/#!forum/django-announce</a></li>
<li><a href="https://www.djangoproject.com/weblog/2023/jul/03/security-releases/">https://www.djangoproject.com/weblog/2023/jul/03/security-releases/</a></li>
<li><a href="https://github.com/django/django/commit/454f2fb93437f98917283336201b4048293f7582">https://github.com/django/django/commit/454f2fb93437f98917283336201b4048293f7582</a></li>
<li><a href="https://github.com/django/django/commit/ad0410ec4f458aa39803e5f6b9a3736527062dcd">https://github.com/django/django/commit/ad0410ec4f458aa39803e5f6b9a3736527062dcd</a></li>
<li><a href="https://github.com/django/django/commit/b7c5feb35a31799de6e582ad6a5a91a9de74e0f9">https://github.com/django/django/commit/b7c5feb35a31799de6e582ad6a5a91a9de74e0f9</a></li>
<li><a href="https://github.com/django/django/commit/beb3f3d55940d9aa7198bf9d424ab74e873aec3d">https://github.com/django/django/commit/beb3f3d55940d9aa7198bf9d424ab74e873aec3d</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-100.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/django/PYSEC-2023-100.yaml</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/07/msg00022.html">https://lists.debian.org/debian-lts-announce/2023/07/msg00022.html</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5465">https://www.debian.org/security/2023/dsa-5465</a></li>
<li><a href="https://github.com/advisories/GHSA-jh3w-4vvf-mjgr">https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh3w-4vvf-mjgr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-03T15:30:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django-markupfield] django-markupfield Arbitrary File Read]]></title>
        <id>https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</id>
        <link href="https://github.com/advisories/GHSA-wxmr-7xjv-8xqw"/>
        <updated>2023-09-07T05:03:14.000Z</updated>
        <content type="html"><![CDATA[<p>django-markupfield before 1.3.2 uses the default docutils <code>RESTRUCTUREDTEXT_FILTER_SETTINGS</code> settings, which allows remote attackers to include and read arbitrary files via unspecified vectors.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-0846">https://nvd.nist.gov/vuln/detail/CVE-2015-0846</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3230">http://www.debian.org/security/2015/dsa-3230</a></li>
<li><a href="https://github.com/jamesturk/django-markupfield/commit/b45734ea1d206abc1ed2a90bdc779708066d49f3">https://github.com/jamesturk/django-markupfield/commit/b45734ea1d206abc1ed2a90bdc779708066d49f3</a></li>
<li><a href="https://github.com/jamesturk/django-markupfield/blob/1.3.3/CHANGELOG">https://github.com/jamesturk/django-markupfield/blob/1.3.3/CHANGELOG</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/apr/21/docutils-security-advisory/">https://www.djangoproject.com/weblog/2015/apr/21/docutils-security-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-wxmr-7xjv-8xqw">https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxmr-7xjv-8xqw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T04:13:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[django] Django Vulnerable to HTTP Response Splitting Attack]]></title>
        <id>https://github.com/advisories/GHSA-q5qw-4364-5hhm</id>
        <link href="https://github.com/advisories/GHSA-q5qw-4364-5hhm"/>
        <updated>2023-09-07T05:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 uses an incorrect regular expression, which allows remote attackers to inject arbitrary headers and conduct HTTP response splitting attacks via a newline character in an (1) email message to the EmailValidator, a (2) URL to the URLValidator, or unspecified vectors to the (3) validate_ipv4_address or (4) validate_slug validator.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-5144">https://nvd.nist.gov/vuln/detail/CVE-2015-5144</a></li>
<li><a href="https://security.gentoo.org/glsa/201510-06">https://security.gentoo.org/glsa/201510-06</a></li>
<li><a href="https://www.djangoproject.com/weblog/2015/jul/08/security-releases/">https://www.djangoproject.com/weblog/2015/jul/08/security-releases/</a></li>
<li><a href="http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html">http://lists.fedoraproject.org/pipermail/package-announce/2015-November/172084.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00043.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html">http://lists.opensuse.org/opensuse-updates/2015-10/msg00046.html</a></li>
<li><a href="http://www.debian.org/security/2015/dsa-3305">http://www.debian.org/security/2015/dsa-3305</a></li>
<li><a href="http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html">http://www.oracle.com/technetwork/topics/security/bulletinoct2015-2511968.html</a></li>
<li><a href="http://www.ubuntu.com/usn/USN-2671-1">http://www.ubuntu.com/usn/USN-2671-1</a></li>
<li><a href="https://github.com/django/django/commit/1ba1cdce7d58e6740fe51955d945b56ae51d072a">https://github.com/django/django/commit/1ba1cdce7d58e6740fe51955d945b56ae51d072a</a></li>
<li><a href="https://github.com/django/django/commit/574dd5e0b0fbb877ae5827b1603d298edc9bb2a0">https://github.com/django/django/commit/574dd5e0b0fbb877ae5827b1603d298edc9bb2a0</a></li>
<li><a href="https://github.com/django/django/commit/ae49b4d994656bc037513dcd064cb9ce5bb85649">https://github.com/django/django/commit/ae49b4d994656bc037513dcd064cb9ce5bb85649</a></li>
<li><a href="https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.4.21.txt#L30-L54">https://github.com/django/django/blob/4555a823fd57e261e1b19c778429473256c8ea08/docs/releases/1.4.21.txt#L30-L54</a></li>
<li><a href="https://web.archive.org/web/20150924150801/http://www.securitytracker.com/id/1032820">https://web.archive.org/web/20150924150801/http://www.securitytracker.com/id/1032820</a></li>
<li><a href="https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/75665">https://web.archive.org/web/20200228050526/http://www.securityfocus.com/bid/75665</a></li>
<li><a href="https://github.com/advisories/GHSA-q5qw-4364-5hhm">https://github.com/advisories/GHSA-q5qw-4364-5hhm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q5qw-4364-5hhm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-17T00:48:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[PyPDF2] PyPDF2 vulnerable to possible Infinite Loop when reading malformed objects]]></title>
        <id>https://github.com/advisories/GHSA-hm9v-vj3r-r55m</id>
        <link href="https://github.com/advisories/GHSA-hm9v-vj3r-r55m"/>
        <updated>2023-09-07T05:02:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker who uses this vulnerability can craft a PDF which leads to an infinite loop.
This infinite loop blocks the current process and can utilize a single core of the CPU by 100%. It does not affect memory usage. That is, for example, the case if the user extracted metadata from such a malformed PDF.</p>
<h3 id="patches">Patches</h3>
<p>The issue was fixed with <a href="https://github.com/py-pdf/pypdf/pull/1331">https://github.com/py-pdf/pypdf/pull/1331</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot update your version of <code>PyPDF2</code> (preferably to <code>pypdf&gt;3.1.0</code> as PyPDF2 is deprecated), you should modify <code>PyPDF2/generic/_data_structures.py::read_object</code>.</p>
<p>Replace:</p>
<pre><code class="language-python">    else:
        # number object OR indirect reference
        peek = stream.read(20)
        stream.seek(-len(peek), 1)  # reset to start
        if IndirectPattern.match(peek) is not None:
            return IndirectObject.read_from_stream(stream, pdf)
        else:
            return NumberObject.read_from_stream(stream)
</code></pre>
<p>by</p>
<pre><code class="language-python">    elif tok in b"0123456789+-.":
        # number object OR indirect reference
        peek = stream.read(20)
        stream.seek(-len(peek), 1)  # reset to start
        if IndirectPattern.match(peek) is not None:
            return IndirectObject.read_from_stream(stream, pdf)
        else:
            return NumberObject.read_from_stream(stream)
    else:
        raise PdfReadError(
            f"Invalid Elementary Object starting with {tok} @{stream.tell()}"
        )
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/pypdf/issues/1329">pypdf issue #1329</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/1331">pypdf PR #1331</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/py-pdf/pypdf/security/advisories/GHSA-hm9v-vj3r-r55m">https://github.com/py-pdf/pypdf/security/advisories/GHSA-hm9v-vj3r-r55m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36807">https://nvd.nist.gov/vuln/detail/CVE-2023-36807</a></li>
<li><a href="https://github.com/py-pdf/pypdf/issues/1329">https://github.com/py-pdf/pypdf/issues/1329</a></li>
<li><a href="https://github.com/py-pdf/pypdf/pull/1331">https://github.com/py-pdf/pypdf/pull/1331</a></li>
<li><a href="https://github.com/py-pdf/pypdf/commit/e6531a25325e7e0174b6a1ba03b57320b5227f6b">https://github.com/py-pdf/pypdf/commit/e6531a25325e7e0174b6a1ba03b57320b5227f6b</a></li>
<li><a href="https://github.com/advisories/GHSA-hm9v-vj3r-r55m">https://github.com/advisories/GHSA-hm9v-vj3r-r55m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hm9v-vj3r-r55m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-30T22:19:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Products.CMFCore] Products.CMFCore unauthenticated denial of service and crash via unchecked use of input with Python's marshal module]]></title>
        <id>https://github.com/advisories/GHSA-4hpj-8rhv-9x87</id>
        <link href="https://github.com/advisories/GHSA-4hpj-8rhv-9x87"/>
        <updated>2023-09-07T05:00:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The use of Python's marshal module to handle unchecked input in a public method on <code>PortalFolder</code> objects can lead to an unauthenticated denial of service and crash situation. The code in question is exposed by all portal software built on top of <code>Products.CMFCore</code>, such as Plone. All deployments are vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The code has been fixed in <code>Products.CMFCore</code> version 3.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can make the affected <code>decodeFolderFilter</code> method unreachable by editing the <code>PortalFolder.py</code> module in <code>Products.CMFCore</code> by hand and then restarting Zope. Go to line 233 of <code>PortalFolder.py</code> and remove both the <code>@security.public</code> decorator for <code>decodeFolderFilter</code> as well as the method's entire docstring. This is safe because the method is not actually used by current code.</p>
<h3 id="references">References</h3>
<ul>
<li>Products.CMFCore security advisory <a href="https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87">GHSA-4hpj-8rhv-9x87</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks go to Nicolas VERDIER from onepoint.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in the <a href="https://github.com/zopefoundation/Products.CMFCore/issues">Products.CMFCore issue tracker</a></li>
<li>Email us at <a href="mailto:security@plone.org">security@plone.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87">https://github.com/zopefoundation/Products.CMFCore/security/advisories/GHSA-4hpj-8rhv-9x87</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-36814">https://nvd.nist.gov/vuln/detail/CVE-2023-36814</a></li>
<li><a href="https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5">https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/products-cmfcore/PYSEC-2023-113.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-4hpj-8rhv-9x87">https://github.com/advisories/GHSA-4hpj-8rhv-9x87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4hpj-8rhv-9x87</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-07-05T22:42:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vyper] ecrecover can return undefined data if signature does not verify]]></title>
        <id>https://github.com/advisories/GHSA-f5x6-7qgp-jhf3</id>
        <link href="https://github.com/advisories/GHSA-f5x6-7qgp-jhf3"/>
        <updated>2023-09-06T21:13:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>the ecrecover precompile does not fill the output buffer if the signature does not verify, see <a href="https://github.com/ethereum/go-ethereum/blob/b058cf454b3bdc7e770e2b3cec83a0bcb48f55ee/core/vm/contracts.go#L188">https://github.com/ethereum/go-ethereum/blob/b058cf454b3bdc7e770e2b3cec83a0bcb48f55ee/core/vm/contracts.go#L188</a>. however, the ecrecover builtin will still return whatever is at memory location 0.</p>
<p>this means that the if the compiler has been convinced to write to the 0 memory location with specially crafted data (generally, this can happen with a hashmap access or immutable read) just before the ecrecover, a signature check might pass on an invalid signature.</p>
<p>a contract search was performed. most uses of <code>ecrecover</code> are used for erc2612-style permit implementations, which typically look like</p>
<pre><code class="language-vyper">    assert _owner != empty(address)
    assert block.timestamp &lt;= _deadline
                  
    nonce: uint256 = self.nonces[_owner]
    digest: bytes32 = keccak256(
        concat(   
            b"\x19\x01",
            self.DOMAIN_SEPARATOR,
            keccak256(_abi_encode(PERMIT_TYPEHASH, _owner, _spender, _value, nonce, _deadline))
        )         
    )             
    assert ecrecover(digest, convert(_v, uint256), convert(_r, uint256), convert(_s, uint256)) == _owner
</code></pre>
<p>in this case, the storage slot of <code>self.nonces</code> is loaded into the ecrecover output buffer right before <code>ecrecover()</code>, and so the output of <code>ecrecover()</code> here when the signature is invalid will be the value of <code>PERMIT_TYPEHASH</code>. in this case, since <code>PERMIT_TYPEHASH</code> is not a valid address, it will never compare <code>==</code> to <code>_owner</code>, and so the behavior is exactly the same as if <code>ecrecover()</code> returned 0 in this case.</p>
<p>in general, a contract could have unexpected behavior (i.e. mistakenly pass this style of signature check) if an immutable representing a real address (ex. <code>OWNER</code>) were read right before the <code>ecrecover</code> operation.</p>
<h3 id="patches">Patches</h3>
<p>v0.3.10 (as of 019a37ab98ff53f04fecfadf602b6cd5ac748f7f)</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3">https://github.com/vyperlang/vyper/security/advisories/GHSA-f5x6-7qgp-jhf3</a></li>
<li><a href="https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f">https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37902">https://nvd.nist.gov/vuln/detail/CVE-2023-37902</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-133.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-133.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-f5x6-7qgp-jhf3">https://github.com/advisories/GHSA-f5x6-7qgp-jhf3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5x6-7qgp-jhf3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-25T17:46:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apache-superset] Apache Superset users may incorrectly create resources using the import charts feature ]]></title>
        <id>https://github.com/advisories/GHSA-9qc3-p9jq-2x27</id>
        <link href="https://github.com/advisories/GHSA-9qc3-p9jq-2x27"/>
        <updated>2023-09-06T20:53:41.000Z</updated>
        <content type="html"><![CDATA[<p>A non Admin authenticated user could incorrectly create resources using the import charts feature, on Apache Superset up to and including 2.1.0.&nbsp;</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-27526">https://nvd.nist.gov/vuln/detail/CVE-2023-27526</a></li>
<li><a href="https://lists.apache.org/thread/ndww89yl2jd98lvn23n9cj722lfdg8dv">https://lists.apache.org/thread/ndww89yl2jd98lvn23n9cj722lfdg8dv</a></li>
<li><a href="https://github.com/advisories/GHSA-9qc3-p9jq-2x27">https://github.com/advisories/GHSA-9qc3-p9jq-2x27</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qc3-p9jq-2x27</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-06T15:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Salt vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-vpjg-wmf8-29h9</id>
        <link href="https://github.com/advisories/GHSA-vpjg-wmf8-29h9"/>
        <updated>2023-09-06T19:53:00.000Z</updated>
        <content type="html"><![CDATA[<p>Salt masters prior to 3005.2 or 3006.2 contain a DOS in minion return. After receiving several bad packets on the request server equal to the number of worker threads, the master will become unresponsive to return requests until restarted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-20897">https://nvd.nist.gov/vuln/detail/CVE-2023-20897</a></li>
<li><a href="https://saltproject.io/security-announcements/2023-08-10-advisory/">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-vpjg-wmf8-29h9">https://github.com/advisories/GHSA-vpjg-wmf8-29h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpjg-wmf8-29h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-05T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Salt vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-vpjg-wmf8-29h9</id>
        <link href="https://github.com/advisories/GHSA-vpjg-wmf8-29h9"/>
        <updated>2023-09-06T19:53:00.000Z</updated>
        <content type="html"><![CDATA[<p>Salt masters prior to 3005.2 or 3006.2 contain a DOS in minion return. After receiving several bad packets on the request server equal to the number of worker threads, the master will become unresponsive to return requests until restarted.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-20897">https://nvd.nist.gov/vuln/detail/CVE-2023-20897</a></li>
<li><a href="https://saltproject.io/security-announcements/2023-08-10-advisory/">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-vpjg-wmf8-29h9">https://github.com/advisories/GHSA-vpjg-wmf8-29h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpjg-wmf8-29h9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-05T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Salt can cause Git Providers to get wrong data]]></title>
        <id>https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</id>
        <link href="https://github.com/advisories/GHSA-qvh6-3j7x-3hq7"/>
        <updated>2023-09-06T19:50:14.000Z</updated>
        <content type="html"><![CDATA[<p>Git Providers can read from the wrong environment because they get the same cache directory base name in Salt masters prior to 3005.2 or 3006.2. Anything that uses Git Providers with different environments can get garbage data or the wrong data, which can lead to wrongful data disclosure, wrongful executions, data corruption and/or crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-20898">https://nvd.nist.gov/vuln/detail/CVE-2023-20898</a></li>
<li><a href="https://saltproject.io/security-announcements/2023-08-10-advisory/">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-qvh6-3j7x-3hq7">https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-05T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[salt] Salt can cause Git Providers to get wrong data]]></title>
        <id>https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</id>
        <link href="https://github.com/advisories/GHSA-qvh6-3j7x-3hq7"/>
        <updated>2023-09-06T19:50:14.000Z</updated>
        <content type="html"><![CDATA[<p>Git Providers can read from the wrong environment because they get the same cache directory base name in Salt masters prior to 3005.2 or 3006.2. Anything that uses Git Providers with different environments can get garbage data or the wrong data, which can lead to wrongful data disclosure, wrongful executions, data corruption and/or crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-20898">https://nvd.nist.gov/vuln/detail/CVE-2023-20898</a></li>
<li><a href="https://saltproject.io/security-announcements/2023-08-10-advisory/">https://saltproject.io/security-announcements/2023-08-10-advisory/</a></li>
<li><a href="https://github.com/advisories/GHSA-qvh6-3j7x-3hq7">https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvh6-3j7x-3hq7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-05T12:30:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[GitPython] Blind local file inclusion]]></title>
        <id>https://github.com/advisories/GHSA-cwvm-v4w8-q58c</id>
        <link href="https://github.com/advisories/GHSA-cwvm-v4w8-q58c"/>
        <updated>2023-09-06T17:28:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In order to resolve some git references, GitPython reads files from the <code>.git</code> directory, in some places the name of the file being read is provided by the user, GitPython doesn't check if this file is located outside the <code>.git</code> directory. This allows an attacker to make GitPython read any file from the system.</p>
<h3 id="details">Details</h3>
<p>This vulnerability is present in</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175</a></p>
<p>That code joins the base directory with a user given string without checking if the final path is located outside the base directory.</p>
<p>I was able to exploit it from three places, but there may be more code paths that lead to it:</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L605</a></p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/repo/base.py#L620</a></p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/index/base.py#L1353</a></p>
<h3 id="poc">PoC</h3>
<p>Running GitPython within any repo should work, here is an example with the GitPython repo.</p>
<pre><code class="language-python">import git

r = git.Repo(".")

# This will make GitPython read the README.md file from the root of the repo
r.commit("../README.md")
r.tree("../README.md")
r.index.diff("../README.md")

# Reading /etc/random
# WARNING: this will probably halt your system, run with caution
# r.commit("../../../../../../../../../dev/random")
</code></pre>
<h3 id="impact">Impact</h3>
<p>I wasn't able to show the contents of the files (that's why "blind" local file inclusion), depending on how GitPython is being used, this can be used by an attacker for something <em>inoffensive</em> as checking if a file exits, or cause a DoS by making GitPython read a big/infinite file (like <code>/dev/random</code> on Linux systems).</p>
<h3 id="possible-solutions">Possible solutions</h3>
<p>A solution would be to check that the final path isn't located outside the <code>repodir</code> path (maybe even after resolving symlinks). Maybe there could be other checks in place to make sure that the reference names are valid.</p>
<hr>
<blockquote>
<p>[!NOTE]
This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>
</blockquote>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-cwvm-v4w8-q58c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41040">https://nvd.nist.gov/vuln/detail/CVE-2023-41040</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/refs/symbolic.py#L174-L175</a></li>
<li><a href="https://github.com/advisories/GHSA-cwvm-v4w8-q58c">https://github.com/advisories/GHSA-cwvm-v4w8-q58c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cwvm-v4w8-q58c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-30T20:09:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gitpython] GitPython untrusted search path on Windows systems leading to arbitrary code execution]]></title>
        <id>https://github.com/advisories/GHSA-wfm5-v35h-vwf4</id>
        <link href="https://github.com/advisories/GHSA-wfm5-v35h-vwf4"/>
        <updated>2023-09-06T15:23:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment (see big warning in <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor">https://docs.python.org/3/library/subprocess.html#popen-constructor</a>). GitPython defaults to use the <code>git</code> command, if a user runs GitPython from a repo has a <code>git.exe</code> or <code>git</code> executable, that program will be run instead of the one in the user's <code>PATH</code>.</p>
<h3 id="details">Details</h3>
<p>This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo.</p>
<p>The execution of the <code>git</code> command happens in</p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L277</a> </p>
<p><a href="https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996">https://github.com/gitpython-developers/GitPython/blob/1c8310d7cae144f74a671cbe17e51f63a830adbf/git/cmd.py#L983-L996</a></p>
<p>And there are other commands executed that should probably be aware of this problem.</p>
<h3 id="poc">PoC</h3>
<p>On a Windows system, create a <code>git.exe</code> or <code>git</code> executable in any directory, and import or run GitPython from that directory</p>
<pre><code>python -c "import git"
</code></pre>
<p>The git executable from the current directory will be run.</p>
<h3 id="impact">Impact</h3>
<p>An attacker can trick a user to download a repository with a malicious <code>git</code> executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands.</p>
<h3 id="possible-solutions">Possible solutions</h3>
<ul>
<li>Default to an absolute path for the git program on Windows, like <code>C:\\Program Files\\Git\\cmd\\git.EXE</code> (default git path installation).</li>
<li>Require users to set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> environment variable on Windows systems.</li>
<li>Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the <code>GIT_PYTHON_GIT_EXECUTABLE</code> env var to an absolute path.</li>
<li>Resolve the executable manually by only looking into the <code>PATH</code> environment variable (suggested by @Byron)</li>
</ul>
<hr>
<blockquote>
<p>[!NOTE]
This vulnerability was reported via email, and it was decided to publish it here and make it public, so the community is aware of it, and a fix can be provided.</p>
</blockquote>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4">https://github.com/gitpython-developers/GitPython/security/advisories/GHSA-wfm5-v35h-vwf4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40590">https://nvd.nist.gov/vuln/detail/CVE-2023-40590</a></li>
<li><a href="https://docs.python.org/3/library/subprocess.html#popen-constructor">https://docs.python.org/3/library/subprocess.html#popen-constructor</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/issues/1635">https://github.com/gitpython-developers/GitPython/issues/1635</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/pull/1636">https://github.com/gitpython-developers/GitPython/pull/1636</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc">https://github.com/gitpython-developers/GitPython/commit/8b75434e2c8a082cdeb4971cc6f0ee2bafec45bc</a></li>
<li><a href="https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33">https://github.com/gitpython-developers/GitPython/releases/tag/3.1.33</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/gitpython/PYSEC-2023-161.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-wfm5-v35h-vwf4">https://github.com/advisories/GHSA-wfm5-v35h-vwf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wfm5-v35h-vwf4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-29T23:33:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[keylime] Keylime registrar and (untrusted) Agent can be bypassed by an attacker]]></title>
        <id>https://github.com/advisories/GHSA-f4r5-q63f-gcww</id>
        <link href="https://github.com/advisories/GHSA-f4r5-q63f-gcww"/>
        <updated>2023-09-06T13:49:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A security issue was found in the Keylime <code>registrar</code> code which allows an attacker to effectively bypass the challenge-response protocol used to verify that an <code>agent</code> has indeed access to an AIK which in indeed related to the EK.</p>
<p>When an <code>agent</code> starts up, it will contact a <code>registrar</code> and provide a public EK and public AIK, in addition to the EK Certificate. This <code>registrar</code> will then challenge the <code>agent</code> to decrypt a challenge encrypted with the EK. </p>
<p>When receiving the wrong "auth_tag" back from the <code>agent</code> during activation, the <code>registrar</code> answers with an error message that contains the expected correct "auth_tag" (an HMAC which is calculated within the <code>registrar</code> for checking). An attacker could simply record the correct expected "auth_tag" from the HTTP error message and perform the activate call again with the correct expected "auth_tag" for the <code>agent</code>.</p>
<p>The security issue allows an attacker to pass the challenge-response protocol during registration with (almost) arbitrary registration data. In particular, the attacker can provide a valid EK Certificate and EK, which passes verification by the <code>tenant</code> (or <code>registrar</code>), while using a compromised AIK, which is stored unprotected outside the TPM and is unrelated to former two. The attacker then deliberately fails the initial activation call to get to know the correct "auth_tag" and then provides it in a subsequent activation call. This results in an <code>agent</code> which is (incorrectly) registered with a valid EK Certificate, but with a compromised/unrelated AIK.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to release 7.5.0</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww">https://github.com/keylime/keylime/security/advisories/GHSA-f4r5-q63f-gcww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-38201">https://nvd.nist.gov/vuln/detail/CVE-2023-38201</a></li>
<li><a href="https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a">https://github.com/keylime/keylime/commit/9e5ac9f25cd400b16d5969f531cee28290543f2a</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2023-38201">https://access.redhat.com/security/cve/CVE-2023-38201</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2222693">https://bugzilla.redhat.com/show_bug.cgi?id=2222693</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/keylime/PYSEC-2023-160.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-f4r5-q63f-gcww">https://github.com/advisories/GHSA-f4r5-q63f-gcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4r5-q63f-gcww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-06T13:49:43.000Z</published>
    </entry>
</feed>