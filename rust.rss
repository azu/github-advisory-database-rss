<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2023-04-12T01:27:59.779Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[h2] hyper and h2 vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-f8vr-r385-rh5r</id>
        <link href="https://github.com/advisories/GHSA-f8vr-r385-rh5r"/>
        <updated>2023-04-11T21:47:04.000Z</updated>
        <content type="html"><![CDATA[<p>Hyper is an HTTP library for Rust and h2 is an HTTP 2.0 client &amp; server implementation for Rust. An issue was discovered in hyper v0.13.7 and h2 v0.2.4 when proessing header frames. Both packages incorrectly process the HTTP2 <code>RST_STREAM</code> frames by not always releasing the memory immediately upon receiving the reset frame, leading to stream stacking. As a result, the memory and CPU usage are high which can lead to a Denial of Service (DoS).</p>
<p>As of time of publication of this advisory, there is no evidence of a fix having been incorporated into hyper or h2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26964">https://nvd.nist.gov/vuln/detail/CVE-2023-26964</a></li>
<li><a href="https://github.com/hyperium/hyper/issues/2877">https://github.com/hyperium/hyper/issues/2877</a></li>
<li><a href="https://github.com/hyperium/h2/issues/621">https://github.com/hyperium/h2/issues/621</a></li>
<li><a href="https://github.com/advisories/GHSA-f8vr-r385-rh5r">https://github.com/advisories/GHSA-f8vr-r385-rh5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f8vr-r385-rh5r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-11T15:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[hyper] hyper and h2 vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-f8vr-r385-rh5r</id>
        <link href="https://github.com/advisories/GHSA-f8vr-r385-rh5r"/>
        <updated>2023-04-11T21:47:04.000Z</updated>
        <content type="html"><![CDATA[<p>Hyper is an HTTP library for Rust and h2 is an HTTP 2.0 client &amp; server implementation for Rust. An issue was discovered in hyper v0.13.7 and h2 v0.2.4 when proessing header frames. Both packages incorrectly process the HTTP2 <code>RST_STREAM</code> frames by not always releasing the memory immediately upon receiving the reset frame, leading to stream stacking. As a result, the memory and CPU usage are high which can lead to a Denial of Service (DoS).</p>
<p>As of time of publication of this advisory, there is no evidence of a fix having been incorporated into hyper or h2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26964">https://nvd.nist.gov/vuln/detail/CVE-2023-26964</a></li>
<li><a href="https://github.com/hyperium/hyper/issues/2877">https://github.com/hyperium/hyper/issues/2877</a></li>
<li><a href="https://github.com/hyperium/h2/issues/621">https://github.com/hyperium/h2/issues/621</a></li>
<li><a href="https://github.com/advisories/GHSA-f8vr-r385-rh5r">https://github.com/advisories/GHSA-f8vr-r385-rh5r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f8vr-r385-rh5r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-04-11T15:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ntru] ntru-rs has unsound FFI: Wrong API usage causes write past allocated area]]></title>
        <id>https://github.com/advisories/GHSA-fq33-vmhv-48xh</id>
        <link href="https://github.com/advisories/GHSA-fq33-vmhv-48xh"/>
        <updated>2023-04-07T19:23:52.000Z</updated>
        <content type="html"><![CDATA[<p>The following usage causes undefined behavior.</p>
<pre><code class="language-rust">let kp: ntru::types::KeyPair = …;
kp.get_public().export(Default::default())
</code></pre>
<p>When compiled with debug assertions, the code above will trigger a <code>attempt to subtract with overflow</code> panic before UB occurs.
Other mistakes (e.g. using <code>EncParams</code> from a different key) may always trigger UB.</p>
<p>Likely, older versions of this crate are also affected, but have not been tested.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/FrinkGlobal/ntru-rs/issues/8">https://github.com/FrinkGlobal/ntru-rs/issues/8</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0032.html">https://rustsec.org/advisories/RUSTSEC-2023-0032.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fq33-vmhv-48xh">https://github.com/advisories/GHSA-fq33-vmhv-48xh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fq33-vmhv-48xh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-07T19:23:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[spin] spin-rs initialisation failure in `Once::try_call_once` can lead to undefined behaviour for other initialisers]]></title>
        <id>https://github.com/advisories/GHSA-2qv5-7mw5-j3cg</id>
        <link href="https://github.com/advisories/GHSA-2qv5-7mw5-j3cg"/>
        <updated>2023-04-03T22:53:19.000Z</updated>
        <content type="html"><![CDATA[<p><code>Once::try_call_once</code> is unsound if invoked more than once concurrently and any call fails to initialise successfully.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/mvdnes/spin-rs/issues/148">https://github.com/mvdnes/spin-rs/issues/148</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0031.html">https://rustsec.org/advisories/RUSTSEC-2023-0031.html</a></li>
<li><a href="https://github.com/advisories/GHSA-2qv5-7mw5-j3cg">https://github.com/advisories/GHSA-2qv5-7mw5-j3cg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2qv5-7mw5-j3cg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-04-03T22:53:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src contains Double free after calling `PEM_read_bio_ex`]]></title>
        <id>https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</id>
        <link href="https://github.com/advisories/GHSA-v5w6-wcm8-jm4q"/>
        <updated>2023-04-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<p>The function <code>PEM_read_bio_ex()</code> reads a PEM file from a BIO and parses and decodes the "name" (e.g. "CERTIFICATE"), any header data and the payload data. If the function succeeds then the "name_out", "header" and "data" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case <code>PEM_read_bio_ex()</code> will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.</p>
<p>The functions <code>PEM_read_bio()</code> and <code>PEM_read()</code> are simple wrappers around <code>PEM_read_bio_ex()</code> and therefore these functions are also directly affected.</p>
<p>These functions are also called indirectly by a number of other OpenSSL functions including <code>PEM_X509_INFO_read_bio_ex()</code> and
<code>SSL_CTX_use_serverinfo_file()</code> which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if <code>PEM_read_bio_ex()</code> returns a failure code. These locations include the <code>PEM_read_bio_TYPE()</code> functions as well as the decoders introduced in OpenSSL 3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4450">https://nvd.nist.gov/vuln/detail/CVE-2022-4450</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0010.html">https://rustsec.org/advisories/RUSTSEC-2023-0010.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20230207.txt">https://www.openssl.org/news/secadv/20230207.txt</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b</a></li>
<li><a href="https://github.com/advisories/GHSA-v5w6-wcm8-jm4q">https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-08T22:22:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src contains Double free after calling `PEM_read_bio_ex`]]></title>
        <id>https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</id>
        <link href="https://github.com/advisories/GHSA-v5w6-wcm8-jm4q"/>
        <updated>2023-04-03T19:45:27.000Z</updated>
        <content type="html"><![CDATA[<p>The function <code>PEM_read_bio_ex()</code> reads a PEM file from a BIO and parses and decodes the "name" (e.g. "CERTIFICATE"), any header data and the payload data. If the function succeeds then the "name_out", "header" and "data" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case <code>PEM_read_bio_ex()</code> will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.</p>
<p>The functions <code>PEM_read_bio()</code> and <code>PEM_read()</code> are simple wrappers around <code>PEM_read_bio_ex()</code> and therefore these functions are also directly affected.</p>
<p>These functions are also called indirectly by a number of other OpenSSL functions including <code>PEM_X509_INFO_read_bio_ex()</code> and
<code>SSL_CTX_use_serverinfo_file()</code> which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if <code>PEM_read_bio_ex()</code> returns a failure code. These locations include the <code>PEM_read_bio_TYPE()</code> functions as well as the decoders introduced in OpenSSL 3.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4450">https://nvd.nist.gov/vuln/detail/CVE-2022-4450</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0010.html">https://rustsec.org/advisories/RUSTSEC-2023-0010.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20230207.txt">https://www.openssl.org/news/secadv/20230207.txt</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b</a></li>
<li><a href="https://github.com/advisories/GHSA-v5w6-wcm8-jm4q">https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5w6-wcm8-jm4q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-08T22:22:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] AES OCB fails to encrypt some bytes]]></title>
        <id>https://github.com/advisories/GHSA-3wx7-46ch-7rq2</id>
        <link href="https://github.com/advisories/GHSA-3wx7-46ch-7rq2"/>
        <updated>2023-04-03T19:41:54.000Z</updated>
        <content type="html"><![CDATA[<p>AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances.  This could reveal sixteen bytes of data that was pre-existing in the memory that wasn't written.  In the special case of "in place" encryption, sixteen bytes of the plaintext would be revealed.</p>
<p>Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2097">https://nvd.nist.gov/vuln/detail/CVE-2022-2097</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=919925673d6c9cfed3c1085497f5dfbbed5fc431">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=919925673d6c9cfed3c1085497f5dfbbed5fc431</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a98f339ddd7e8f487d6e0088d4a9a42324885a93">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a98f339ddd7e8f487d6e0088d4a9a42324885a93</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0032.html">https://rustsec.org/advisories/RUSTSEC-2022-0032.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220705.txt">https://www.openssl.org/news/secadv/20220705.txt</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/V6567JERRHHJW2GNGJGKDRNHR7SNPZK7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/V6567JERRHHJW2GNGJGKDRNHR7SNPZK7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R6CK57NBQFTPUMXAPJURCGXUYT76NQAK/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R6CK57NBQFTPUMXAPJURCGXUYT76NQAK/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220715-0011/">https://security.netapp.com/advisory/ntap-20220715-0011/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VCMNWKERPBKOEBNL7CLTTX3ZZCZLH7XA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VCMNWKERPBKOEBNL7CLTTX3ZZCZLH7XA/</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-02">https://security.gentoo.org/glsa/202210-02</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-332410.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-332410.pdf</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5343">https://www.debian.org/security/2023/dsa-5343</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/02/msg00019.html">https://lists.debian.org/debian-lts-announce/2023/02/msg00019.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3wx7-46ch-7rq2">https://github.com/advisories/GHSA-3wx7-46ch-7rq2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wx7-46ch-7rq2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-06T19:57:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pleaser] Permissions bypass in pleaser]]></title>
        <id>https://github.com/advisories/GHSA-vc5p-j8vw-mc6x</id>
        <link href="https://github.com/advisories/GHSA-vc5p-j8vw-mc6x"/>
        <updated>2023-04-03T19:40:39.000Z</updated>
        <content type="html"><![CDATA[<p>Failure to normalize the umask in pleaser before 0.4.0 allows a local attacker to gain full root privileges if they are allowed to execute at least one command.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31155">https://nvd.nist.gov/vuln/detail/CVE-2021-31155</a></li>
<li><a href="https://crates.io/crates/pleaser">https://crates.io/crates/pleaser</a></li>
<li><a href="https://gitlab.com/edneville/please">https://gitlab.com/edneville/please</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2021/05/18/1">https://www.openwall.com/lists/oss-security/2021/05/18/1</a></li>
<li><a href="https://gitlab.com/edneville/please/-/tree/master/src/bin">https://gitlab.com/edneville/please/-/tree/master/src/bin</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0101.html">https://rustsec.org/advisories/RUSTSEC-2021-0101.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vc5p-j8vw-mc6x">https://github.com/advisories/GHSA-vc5p-j8vw-mc6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc5p-j8vw-mc6x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T21:01:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] SM2 Decryption Buffer Overflow]]></title>
        <id>https://github.com/advisories/GHSA-5ww6-px42-wc85</id>
        <link href="https://github.com/advisories/GHSA-5ww6-px42-wc85"/>
        <updated>2023-04-03T19:29:20.000Z</updated>
        <content type="html"><![CDATA[<p>In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the "out" parameter can be NULL and, on exit, the "outlen" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the "out" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3711">https://nvd.nist.gov/vuln/detail/CVE-2021-3711</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=59f5e75f3bced8fc0e130d72a3f582cf7b480b46">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=59f5e75f3bced8fc0e130d72a3f582cf7b480b46</a></li>
<li><a href="https://lists.apache.org/thread.html/r18995de860f0e63635f3008fd2a6aca82394249476d21691e7c59c9e@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r18995de860f0e63635f3008fd2a6aca82394249476d21691e7c59c9e@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rad5d9f83f0d11fb3f8bb148d179b8a9ad7c6a17f18d70e5805a713d1@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/rad5d9f83f0d11fb3f8bb148d179b8a9ad7c6a17f18d70e5805a713d1@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210827-0010/">https://security.netapp.com/advisory/ntap-20210827-0010/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20211022-0003/">https://security.netapp.com/advisory/ntap-20211022-0003/</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4963">https://www.debian.org/security/2021/dsa-4963</a></li>
<li><a href="https://www.openssl.org/news/secadv/20210824.txt">https://www.openssl.org/news/secadv/20210824.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2022.html">https://www.oracle.com/security-alerts/cpujan2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-16">https://www.tenable.com/security/tns-2021-16</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-02">https://www.tenable.com/security/tns-2022-02</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/08/26/2">http://www.openwall.com/lists/oss-security/2021/08/26/2</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0097.html">https://rustsec.org/advisories/RUSTSEC-2021-0097.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202209-02">https://security.gentoo.org/glsa/202209-02</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-02">https://security.gentoo.org/glsa/202210-02</a></li>
<li><a href="https://github.com/advisories/GHSA-5ww6-px42-wc85">https://github.com/advisories/GHSA-5ww6-px42-wc85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5ww6-px42-wc85</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T19:12:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[matrix-sdk-crypto] matrix-sdk-crypto contains potential impersonation via room key forward responses]]></title>
        <id>https://github.com/advisories/GHSA-vp68-2wrm-69qm</id>
        <link href="https://github.com/advisories/GHSA-vp68-2wrm-69qm"/>
        <updated>2023-04-03T19:28:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When matrix-rust-sdk before 0.6 requests a room key from our devices, it correctly accepts key forwards only if they are a response to a previous request. However, it doesn't check that the device that responded matches the device the key was requested from.</p>
<p>This allows a malicious homeserver to insert room keys of questionable validity into the key store in some situations, potentially assisting in an impersonation attack. Note that even if key injection succeeds in this way, all forwarded keys have the <code>imported</code> flag set, which is used as an indicator that such keys have lesser authentication properties (and should be marked as such in clients, e.g. with a grey shield besides the message).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, e-mail us at <a href="mailto:security@matrix.org">security@matrix.org</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-vp68-2wrm-69qm">https://github.com/matrix-org/matrix-rust-sdk/security/advisories/GHSA-vp68-2wrm-69qm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39252">https://nvd.nist.gov/vuln/detail/CVE-2022-39252</a></li>
<li><a href="https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb">https://github.com/matrix-org/matrix-rust-sdk/commit/093fb5d0aa21c0b5eaea6ec96b477f1075271cbb</a></li>
<li><a href="https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd">https://github.com/matrix-org/matrix-rust-sdk/commit/41449d2cc360e347f5d4e1c154ec1e3185f11acd</a></li>
<li><a href="https://github.com/matrix-org/matrix-rust-sdk/releases/tag/matrix-sdk-0.6.0">https://github.com/matrix-org/matrix-rust-sdk/releases/tag/matrix-sdk-0.6.0</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0085.html">https://rustsec.org/advisories/RUSTSEC-2022-0085.html</a></li>
<li><a href="https://github.com/advisories/GHSA-vp68-2wrm-69qm">https://github.com/advisories/GHSA-vp68-2wrm-69qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp68-2wrm-69qm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-30T22:51:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Null pointer deference in openssl-src]]></title>
        <id>https://github.com/advisories/GHSA-83mx-573x-5rw9</id>
        <link href="https://github.com/advisories/GHSA-83mx-573x-5rw9"/>
        <updated>2023-04-03T19:27:47.000Z</updated>
        <content type="html"><![CDATA[<p>An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3449">https://nvd.nist.gov/vuln/detail/CVE-2021-3449</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fb9fa6b51defd48157eeb207f52181f735d96148">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fb9fa6b51defd48157eeb207f52181f735d96148</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845</a></li>
<li><a href="https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0055">https://rustsec.org/advisories/RUSTSEC-2021-0055</a></li>
<li><a href="https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc">https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc</a></li>
<li><a href="https://security.gentoo.org/glsa/202103-03">https://security.gentoo.org/glsa/202103-03</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210326-0006/">https://security.netapp.com/advisory/ntap-20210326-0006/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210513-0002/">https://security.netapp.com/advisory/ntap-20210513-0002/</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4875">https://www.debian.org/security/2021/dsa-4875</a></li>
<li><a href="https://www.openssl.org/news/secadv/20210325.txt">https://www.openssl.org/news/secadv/20210325.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-05">https://www.tenable.com/security/tns-2021-05</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-06">https://www.tenable.com/security/tns-2021-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-09">https://www.tenable.com/security/tns-2021-09</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-10">https://www.tenable.com/security/tns-2021-10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/1">http://www.openwall.com/lists/oss-security/2021/03/27/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/2">http://www.openwall.com/lists/oss-security/2021/03/27/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/3">http://www.openwall.com/lists/oss-security/2021/03/28/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/4">http://www.openwall.com/lists/oss-security/2021/03/28/4</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html">https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0055.html">https://rustsec.org/advisories/RUSTSEC-2021-0055.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-83mx-573x-5rw9">https://github.com/advisories/GHSA-83mx-573x-5rw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-83mx-573x-5rw9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-25T20:54:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Integer Overflow in openssl-src]]></title>
        <id>https://github.com/advisories/GHSA-84rm-qf37-fgc2</id>
        <link href="https://github.com/advisories/GHSA-84rm-qf37-fgc2"/>
        <updated>2023-04-03T19:26:16.000Z</updated>
        <content type="html"><![CDATA[<p>Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23841">https://nvd.nist.gov/vuln/detail/CVE-2021-23841</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=122a19ab48091c657f7cb1fb3af9fc07bd557bbf">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=122a19ab48091c657f7cb1fb3af9fc07bd557bbf</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=6a51b9e1d0cf0bf8515f7201b68fb0a3482b3dc1</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=8252ee4d90f3f2004d3d0aeeed003ad49c9a7807">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=8252ee4d90f3f2004d3d0aeeed003ad49c9a7807</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=9b1129239f3ebb1d1c98ce9ed41d5c9476c47cb2</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44846</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0058">https://rustsec.org/advisories/RUSTSEC-2021-0058</a></li>
<li><a href="https://security.gentoo.org/glsa/202103-03">https://security.gentoo.org/glsa/202103-03</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0009/">https://security.netapp.com/advisory/ntap-20210219-0009/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210513-0002/">https://security.netapp.com/advisory/ntap-20210513-0002/</a></li>
<li><a href="https://support.apple.com/kb/HT212528">https://support.apple.com/kb/HT212528</a></li>
<li><a href="https://support.apple.com/kb/HT212529">https://support.apple.com/kb/HT212529</a></li>
<li><a href="https://support.apple.com/kb/HT212534">https://support.apple.com/kb/HT212534</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4855">https://www.debian.org/security/2021/dsa-4855</a></li>
<li><a href="https://www.openssl.org/news/secadv/20210216.txt">https://www.openssl.org/news/secadv/20210216.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-03">https://www.tenable.com/security/tns-2021-03</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-09">https://www.tenable.com/security/tns-2021-09</a></li>
<li><a href="http://seclists.org/fulldisclosure/2021/May/67">http://seclists.org/fulldisclosure/2021/May/67</a></li>
<li><a href="http://seclists.org/fulldisclosure/2021/May/68">http://seclists.org/fulldisclosure/2021/May/68</a></li>
<li><a href="http://seclists.org/fulldisclosure/2021/May/70">http://seclists.org/fulldisclosure/2021/May/70</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0058.html">https://rustsec.org/advisories/RUSTSEC-2021-0058.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-637483.pdf</a></li>
<li><a href="https://github.com/advisories/GHSA-84rm-qf37-fgc2">https://github.com/advisories/GHSA-84rm-qf37-fgc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-84rm-qf37-fgc2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-25T20:52:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Certificate check bypass in openssl-src]]></title>
        <id>https://github.com/advisories/GHSA-8hfj-xrj2-pm22</id>
        <link href="https://github.com/advisories/GHSA-8hfj-xrj2-pm22"/>
        <updated>2023-04-03T19:25:34.000Z</updated>
        <content type="html"><![CDATA[<p>The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a "purpose" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named "purpose" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3450">https://nvd.nist.gov/vuln/detail/CVE-2021-3450</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=2a40b7bc7b94dd7de897a74571e7024f0cf0d63b">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=2a40b7bc7b94dd7de897a74571e7024f0cf0d63b</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845</a></li>
<li><a href="https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/</a></li>
<li><a href="https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html">https://mta.openssl.org/pipermail/openssl-announce/2021-March/000198.html</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0056.html">https://rustsec.org/advisories/RUSTSEC-2021-0056.html</a></li>
<li><a href="https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc">https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc</a></li>
<li><a href="https://security.gentoo.org/glsa/202103-03">https://security.gentoo.org/glsa/202103-03</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210326-0006/">https://security.netapp.com/advisory/ntap-20210326-0006/</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd</a></li>
<li><a href="https://www.openssl.org/news/secadv/20210325.txt">https://www.openssl.org/news/secadv/20210325.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-05">https://www.tenable.com/security/tns-2021-05</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-08">https://www.tenable.com/security/tns-2021-08</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-09">https://www.tenable.com/security/tns-2021-09</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/1">http://www.openwall.com/lists/oss-security/2021/03/27/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/2">http://www.openwall.com/lists/oss-security/2021/03/27/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/3">http://www.openwall.com/lists/oss-security/2021/03/28/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/4">http://www.openwall.com/lists/oss-security/2021/03/28/4</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-8hfj-xrj2-pm22">https://github.com/advisories/GHSA-8hfj-xrj2-pm22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8hfj-xrj2-pm22</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T20:54:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pleaser] File exposure in pleaser]]></title>
        <id>https://github.com/advisories/GHSA-f3fg-5j9p-vchc</id>
        <link href="https://github.com/advisories/GHSA-f3fg-5j9p-vchc"/>
        <updated>2023-04-11T05:01:04.000Z</updated>
        <content type="html"><![CDATA[<p>pleaser before 0.4.0 allows a local unprivileged attacker to gain knowledge about the existence of files or directories in privileged locations via the search_path function, the --check option, or the -d option.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-31153">https://nvd.nist.gov/vuln/detail/CVE-2021-31153</a></li>
<li><a href="https://crates.io/crates/pleaser">https://crates.io/crates/pleaser</a></li>
<li><a href="https://gitlab.com/edneville/please/-/tree/master/src/bin">https://gitlab.com/edneville/please/-/tree/master/src/bin</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/05/18/1">http://www.openwall.com/lists/oss-security/2021/05/18/1</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0104.html">https://rustsec.org/advisories/RUSTSEC-2021-0104.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f3fg-5j9p-vchc">https://github.com/advisories/GHSA-f3fg-5j9p-vchc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f3fg-5j9p-vchc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-08-25T21:01:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[time] Segmentation fault in time]]></title>
        <id>https://github.com/advisories/GHSA-wcg3-cvx6-7396</id>
        <link href="https://github.com/advisories/GHSA-wcg3-cvx6-7396"/>
        <updated>2023-04-03T19:20:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Unix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.</p>
<p>The affected functions from time 0.2.7 through 0.2.22 are:</p>
<ul>
<li><code>time::UtcOffset::local_offset_at</code></li>
<li><code>time::UtcOffset::try_local_offset_at</code></li>
<li><code>time::UtcOffset::current_local_offset</code></li>
<li><code>time::UtcOffset::try_current_local_offset</code></li>
<li><code>time::OffsetDateTime::now_local</code></li>
<li><code>time::OffsetDateTime::try_now_local</code></li>
</ul>
<p>The affected functions in time 0.1 (all versions) are:</p>
<ul>
<li><code>at</code></li>
<li><code>at_utc</code></li>
<li><code>now</code></li>
</ul>
<p>Non-Unix targets (including Windows and wasm) are unaffected.</p>
<h3 id="patches">Patches</h3>
<p>In some versions of <code>time</code>, the internal method that determines the local offset has been modified to always return <code>None</code> on the affected operating systems. This has the effect of returning an <code>Err</code> on the <code>try_*</code> methods and <code>UTC</code> on the non-<code>try_*</code> methods. In later versions, <code>time</code> will attempt to determine the number of threads running in the process. If the process is single-threaded, the call will proceed as its safety invariant is upheld.</p>
<p>Users and library authors with time in their dependency tree must perform <code>cargo update</code>, which will pull in the updated, unaffected code.</p>
<p>Users of time 0.1 do not have a patch and must upgrade to an unaffected version: time 0.2.23 or greater or the 0.3 series.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Library authors must ensure that the program only has one running thread at the time of calling any affected method. Binary authors may do the same and/or ensure that no other thread is actively mutating the environment.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/time-rs/time/issues/293">time-rs/time#293</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/time-rs/time/security/advisories/GHSA-wcg3-cvx6-7396">https://github.com/time-rs/time/security/advisories/GHSA-wcg3-cvx6-7396</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26235">https://nvd.nist.gov/vuln/detail/CVE-2020-26235</a></li>
<li><a href="https://github.com/time-rs/time/issues/293">https://github.com/time-rs/time/issues/293</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0071.html">https://rustsec.org/advisories/RUSTSEC-2020-0071.html</a></li>
<li><a href="https://crates.io/crates/time/0.2.23">https://crates.io/crates/time/0.2.23</a></li>
<li><a href="https://github.com/advisories/GHSA-wcg3-cvx6-7396">https://github.com/advisories/GHSA-wcg3-cvx6-7396</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wcg3-cvx6-7396</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-25T20:56:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Null pointer deference in openssl-src ]]></title>
        <id>https://github.com/advisories/GHSA-jq65-29v4-4x35</id>
        <link href="https://github.com/advisories/GHSA-jq65-29v4-4x35"/>
        <updated>2023-04-03T19:16:27.000Z</updated>
        <content type="html"><![CDATA[<p>Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the "signature_algorithms_cert" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1967">https://nvd.nist.gov/vuln/detail/CVE-2020-1967</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=eb563247aef3e83dda7679c43f9649270462e5b1">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=eb563247aef3e83dda7679c43f9649270462e5b1</a></li>
<li><a href="https://github.com/irsl/CVE-2020-1967">https://github.com/irsl/CVE-2020-1967</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44440">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44440</a></li>
<li><a href="https://lists.apache.org/thread.html/r66ea9c436da150683432db5fbc8beb8ae01886c6459ac30c2cea7345@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r66ea9c436da150683432db5fbc8beb8ae01886c6459ac30c2cea7345@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r94d6ac3f010a38fccf4f432b12180a13fa1cf303559bd805648c9064@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r94d6ac3f010a38fccf4f432b12180a13fa1cf303559bd805648c9064@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r9a41e304992ce6aec6585a87842b4f2e692604f5c892c37e3b0587ee@%3Cdev.tomcat.apache.org%3E">https://lists.apache.org/thread.html/r9a41e304992ce6aec6585a87842b4f2e692604f5c892c37e3b0587ee@%3Cdev.tomcat.apache.org%3E</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DDHOAATPWJCXRNFMJ2SASDBBNU5RJONY/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DDHOAATPWJCXRNFMJ2SASDBBNU5RJONY/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EXDDAOWSAIEFQNBHWYE6PPYFV4QXGMCD/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/EXDDAOWSAIEFQNBHWYE6PPYFV4QXGMCD/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XVEP3LAK4JSPRXFO4QF4GG2IVXADV3SO/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XVEP3LAK4JSPRXFO4QF4GG2IVXADV3SO/</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0015.html">https://rustsec.org/advisories/RUSTSEC-2020-0015.html</a></li>
<li><a href="https://security.FreeBSD.org/advisories/FreeBSD-SA-20:11.openssl.asc">https://security.FreeBSD.org/advisories/FreeBSD-SA-20:11.openssl.asc</a></li>
<li><a href="https://security.gentoo.org/glsa/202004-10">https://security.gentoo.org/glsa/202004-10</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200424-0003/">https://security.netapp.com/advisory/ntap-20200424-0003/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200717-0004/">https://security.netapp.com/advisory/ntap-20200717-0004/</a></li>
<li><a href="https://www.debian.org/security/2020/dsa-4661">https://www.debian.org/security/2020/dsa-4661</a></li>
<li><a href="https://www.openssl.org/news/secadv/20200421.txt">https://www.openssl.org/news/secadv/20200421.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujan2021.html">https://www.oracle.com/security-alerts/cpujan2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2020.html">https://www.oracle.com/security-alerts/cpujul2020.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2020.html">https://www.oracle.com/security-alerts/cpuoct2020.html</a></li>
<li><a href="https://www.synology.com/security/advisory/Synology_SA_20_05">https://www.synology.com/security/advisory/Synology_SA_20_05</a></li>
<li><a href="https://www.synology.com/security/advisory/Synology_SA_20_05_OpenSSL">https://www.synology.com/security/advisory/Synology_SA_20_05_OpenSSL</a></li>
<li><a href="https://www.tenable.com/security/tns-2020-03">https://www.tenable.com/security/tns-2020-03</a></li>
<li><a href="https://www.tenable.com/security/tns-2020-04">https://www.tenable.com/security/tns-2020-04</a></li>
<li><a href="https://www.tenable.com/security/tns-2020-11">https://www.tenable.com/security/tns-2020-11</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-10">https://www.tenable.com/security/tns-2021-10</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00004.html">http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00004.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00011.html">http://lists.opensuse.org/opensuse-security-announce/2020-07/msg00011.html</a></li>
<li><a href="http://packetstormsecurity.com/files/157527/OpenSSL-signature_algorithms_cert-Denial-Of-Service.html">http://packetstormsecurity.com/files/157527/OpenSSL-signature_algorithms_cert-Denial-Of-Service.html</a></li>
<li><a href="http://seclists.org/fulldisclosure/2020/May/5">http://seclists.org/fulldisclosure/2020/May/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2020/04/22/2">http://www.openwall.com/lists/oss-security/2020/04/22/2</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jq65-29v4-4x35">https://github.com/advisories/GHSA-jq65-29v4-4x35</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq65-29v4-4x35</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T20:45:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[deno] Deno is vulnerable to race condition via interactive permission prompt spoofing]]></title>
        <id>https://github.com/advisories/GHSA-mc52-jpm2-cqh6</id>
        <link href="https://github.com/advisories/GHSA-mc52-jpm2-cqh6"/>
        <updated>2023-04-03T19:15:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Multi-threaded programs were able to spoof interactive permission prompt by rewriting the prompt to suggest that program is waiting on user confirmation to unrelated action. </p>
<p>A malicious program could clear the terminal screen after permission prompt was shown and write a generic message like so:</p>
<pre><code>// Expected prompt
⚠️  ┌ Deno requests read access to "./log.txt".
   ├ Requested by `Deno.open()` API
   ├ Run again with --allow-read to bypass this prompt.
   └ Allow? [y/n] (y = yes, allow; n = no, deny) &gt;

// Prompt that users would see
Do you want to continue?
</code></pre>
<p>This situation impacts users who use Web Worker API and relied on interactive permission prompt. The reproduction is very timing sensitive and can’t be reliably reproduced on every try.</p>
<p>This problem can not be exploited on systems that do not attach an interactive prompt (for example headless servers). </p>
<h3 id="patches">Patches</h3>
<p>The problem has been fixed in Deno v1.29.3; it is recommended all users update to this version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Run with <code>--no-prompt</code> flag to disable interactive permission prompts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/denoland/deno/security/advisories/GHSA-mc52-jpm2-cqh6">https://github.com/denoland/deno/security/advisories/GHSA-mc52-jpm2-cqh6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22499">https://nvd.nist.gov/vuln/detail/CVE-2023-22499</a></li>
<li><a href="https://github.com/denoland/deno/pull/17392">https://github.com/denoland/deno/pull/17392</a></li>
<li><a href="https://github.com/advisories/GHSA-mc52-jpm2-cqh6">https://github.com/advisories/GHSA-mc52-jpm2-cqh6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mc52-jpm2-cqh6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-01-20T16:56:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src's infinite loop in `BN_mod_sqrt()` reachable when parsing certificates]]></title>
        <id>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</id>
        <link href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"/>
        <updated>2023-04-03T19:14:59.000Z</updated>
        <content type="html"><![CDATA[<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0778">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220315.txt">https://www.openssl.org/news/secadv/20220315.txt</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5103">https://www.debian.org/security/2022/dsa-5103</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220321-0002/">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-06">https://www.tenable.com/security/tns-2022-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-07">https://www.tenable.com/security/tns-2022-07</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-08">https://www.tenable.com/security/tns-2022-08</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0014.html">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220429-0005/">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-09">https://www.tenable.com/security/tns-2022-09</a></li>
<li><a href="https://support.apple.com/kb/HT213255">https://support.apple.com/kb/HT213255</a></li>
<li><a href="https://support.apple.com/kb/HT213256">https://support.apple.com/kb/HT213256</a></li>
<li><a href="https://support.apple.com/kb/HT213257">https://support.apple.com/kb/HT213257</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/33">http://seclists.org/fulldisclosure/2022/May/33</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/35">http://seclists.org/fulldisclosure/2022/May/35</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/38">http://seclists.org/fulldisclosure/2022/May/38</a></li>
<li><a href="http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html">http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-02">https://security.gentoo.org/glsa/202210-02</a></li>
<li><a href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-16T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src's infinite loop in `BN_mod_sqrt()` reachable when parsing certificates]]></title>
        <id>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</id>
        <link href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"/>
        <updated>2023-04-03T19:14:59.000Z</updated>
        <content type="html"><![CDATA[<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0778">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220315.txt">https://www.openssl.org/news/secadv/20220315.txt</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5103">https://www.debian.org/security/2022/dsa-5103</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220321-0002/">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-06">https://www.tenable.com/security/tns-2022-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-07">https://www.tenable.com/security/tns-2022-07</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-08">https://www.tenable.com/security/tns-2022-08</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0014.html">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220429-0005/">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-09">https://www.tenable.com/security/tns-2022-09</a></li>
<li><a href="https://support.apple.com/kb/HT213255">https://support.apple.com/kb/HT213255</a></li>
<li><a href="https://support.apple.com/kb/HT213256">https://support.apple.com/kb/HT213256</a></li>
<li><a href="https://support.apple.com/kb/HT213257">https://support.apple.com/kb/HT213257</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/33">http://seclists.org/fulldisclosure/2022/May/33</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/35">http://seclists.org/fulldisclosure/2022/May/35</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/38">http://seclists.org/fulldisclosure/2022/May/38</a></li>
<li><a href="http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html">http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-712929.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-02">https://security.gentoo.org/glsa/202210-02</a></li>
<li><a href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-16T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src subject to Timing Oracle in RSA Decryption]]></title>
        <id>https://github.com/advisories/GHSA-p52g-cm5j-mjv4</id>
        <link href="https://github.com/advisories/GHSA-p52g-cm5j-mjv4"/>
        <updated>2023-04-03T19:14:23.000Z</updated>
        <content type="html"><![CDATA[<p>A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.</p>
<p>For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4304">https://nvd.nist.gov/vuln/detail/CVE-2022-4304</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0007.html">https://rustsec.org/advisories/RUSTSEC-2023-0007.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20230207.txt">https://www.openssl.org/news/secadv/20230207.txt</a></li>
<li><a href="https://github.com/advisories/GHSA-p52g-cm5j-mjv4">https://github.com/advisories/GHSA-p52g-cm5j-mjv4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p52g-cm5j-mjv4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-08T22:31:42.000Z</published>
    </entry>
</feed>