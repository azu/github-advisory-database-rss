<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2023-09-12T06:01:33.504Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[inventory] Inventory exposes reference to non-Sync data to an arbitrary thread]]></title>
        <id>https://github.com/advisories/GHSA-36xm-35qq-795w</id>
        <link href="https://github.com/advisories/GHSA-36xm-35qq-795w"/>
        <updated>2023-09-11T20:44:12.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions do not enforce a <code>Sync</code> bound on the type of caller-provided value held in the plugin registry. References to these values are made accessible to arbitrary threads other than the one that constructed them.</p>
<p>A caller could use this flaw to submit thread-unsafe data into inventory, then access it as a reference simultaneously from multiple threads.</p>
<p>The flaw was corrected by enforcing that data submitted by the caller into inventory is <code>Sync</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dtolnay/inventory/pull/42">https://github.com/dtolnay/inventory/pull/42</a></li>
<li><a href="https://github.com/dtolnay/inventory/commit/e1e347d2725b9c9dd4a70b63eb08532ca9687652">https://github.com/dtolnay/inventory/commit/e1e347d2725b9c9dd4a70b63eb08532ca9687652</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0058.html">https://rustsec.org/advisories/RUSTSEC-2023-0058.html</a></li>
<li><a href="https://github.com/advisories/GHSA-36xm-35qq-795w">https://github.com/advisories/GHSA-36xm-35qq-795w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xm-35qq-795w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T20:43:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[users] Users vulnerable to unaligned read of `*const *const c_char` pointer]]></title>
        <id>https://github.com/advisories/GHSA-jcr6-4frq-9gjj</id>
        <link href="https://github.com/advisories/GHSA-jcr6-4frq-9gjj"/>
        <updated>2023-09-11T20:44:12.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions dereference a potentially unaligned pointer. The pointer is commonly unaligned in practice, resulting in undefined behavior.</p>
<p>In some build modes, this is observable as a panic followed by abort. In other build modes the UB may manifest in some other way, including the possibility of working correctly in some architectures.</p>
<p>The crate is not currently maintained, so a patched version is not available.</p>
<h2 id="recommended-alternatives">Recommended alternatives</h2>
<ul>
<li><a href="https://crates.io/crates/sysinfo"><code>sysinfo</code></a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ogham/rust-users/issues/55">https://github.com/ogham/rust-users/issues/55</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0059.html">https://rustsec.org/advisories/RUSTSEC-2023-0059.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jcr6-4frq-9gjj">https://github.com/advisories/GHSA-jcr6-4frq-9gjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcr6-4frq-9gjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T20:43:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[inventory] Inventory fails to prohibit standard library access prior to initialization of Rust standard library runtime]]></title>
        <id>https://github.com/advisories/GHSA-ghc8-5cgm-5rpf</id>
        <link href="https://github.com/advisories/GHSA-ghc8-5cgm-5rpf"/>
        <updated>2023-09-11T20:44:11.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions allow arbitrary caller-provided code to execute before the lifetime of <code>main</code>.</p>
<p>If the caller-provided code accesses particular pieces of the standard library that require an initialized Rust runtime, such as <code>std::io</code> or <code>std::thread</code>, these may not behave as documented. Panics are likely; UB is possible.</p>
<p>The flaw was corrected by enforcing that only code written within the <code>inventory</code> crate, which is guaranteed not to access runtime-dependent parts of the standard library, runs before <code>main</code>. Caller-provided code is restricted to running at compile time.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dtolnay/inventory/pull/43">https://github.com/dtolnay/inventory/pull/43</a></li>
<li><a href="https://github.com/dtolnay/inventory/commit/b853350a3800e38d2cb9950355b80bc8b8d3959c">https://github.com/dtolnay/inventory/commit/b853350a3800e38d2cb9950355b80bc8b8d3959c</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0057.html">https://rustsec.org/advisories/RUSTSEC-2023-0057.html</a></li>
<li><a href="https://github.com/advisories/GHSA-ghc8-5cgm-5rpf">https://github.com/advisories/GHSA-ghc8-5cgm-5rpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ghc8-5cgm-5rpf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T20:43:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[apollo-router] Apollo Router Unnamed "Subscription" operation results in Denial-of-Service]]></title>
        <id>https://github.com/advisories/GHSA-w8vq-3hf9-xppx</id>
        <link href="https://github.com/advisories/GHSA-w8vq-3hf9-xppx"/>
        <updated>2023-09-08T21:04:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This is a Denial-of-Service (DoS) type vulnerability which causes the Router to panic and terminate when GraphQL Subscriptions are enabled.  It can be triggered when <strong>all of the following conditions are met</strong>:</p>
<ol>
<li>Running Apollo Router v1.28.0, v1.28.1 or v1.29.0 ("impacted versions"); <strong>and</strong></li>
<li>The Supergraph schema provided to the Router (either via Apollo Uplink or explicitly via other configuration)&nbsp;<strong>has a <code>subscription</code> type</strong> with root-fields defined; <strong>and</strong></li>
<li>The YAML configuration provided to the Router <strong>has subscriptions enabled</strong> (they are <em>disabled</em> by default), either by setting <code>enabled: true</code> <em>or</em> by setting a valid <code>mode</code> within the <code>subscriptions</code> object (as seen in <a href="https://www.apollographql.com/docs/router/executing-operations/subscription-support/#router-setup">subscriptions' documentation</a>); <strong>and</strong></li>
<li>An <a href="https://spec.graphql.org/draft/#sec-Anonymous-Operation-Definitions">anonymous</a> (i.e., un-named) <code>subscription</code> operation (e.g., <code>subscription { ... }</code>) is received by the Router</li>
</ol>
<p>If <strong>all four</strong> of these criteria are met, the impacted versions will panic and terminate.  There is no data-privacy risk or sensitive-information exposure aspect to this vulnerability.</p>
<p>Depending on the environment in which impacted versions are running and the high-availability characteristics of that environment, a single Router's termination may result in limited or reduced availability or other knock-on effects which are deployment-specific (e.g., depending on if there are multiple instances, auto-restart policies, etc.)</p>
<h3 id="discovery">Discovery</h3>
<p>This vulnerability was discovered by an internal Apollo team.  We have no reports or evidence to support that that has been exploited outside of our own testing, research and follow-up.</p>
<p>Our public security policy can be reviewed at <a href="https://github.com/apollographql/router/security/policy">https://github.com/apollographql/router/security/policy</a> and we consider the security of our projects a top priority.  Please review the linked policy for more details.</p>
<h3 id="patches">Patches</h3>
<p>This is fixed in <a href="https://github.com/apollographql/router/releases/tag/v1.29.1">Apollo Router v1.29.1</a>, which is available on:</p>
<ul>
<li><a href="https://github.com/apollographql/router/releases">GitHub Releases</a> as <code>v1.29.1</code></li>
<li><a href="https://github.com/apollographql/router/pkgs/container/router">GitHub Packages Container Registry</a> as <code>v1.29.1</code></li>
<li><a href="https://github.com/apollographql/router/pkgs/container/helm-charts%2Frouter">Helm Chart Repository</a> as <code>1.29.1</code> (without the <code>v</code>)</li>
</ul>
<p>We recommend all users running the impacted configuration above to update to a patched version of the Router immediately.  Router v1.29.1 should be a very simple upgrade from any impacted version. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Updating to v1.29.1 should be a clear and simple upgrade path for those running impacted versions.  However, if Subscriptions are <strong>not</strong> necessary for your Graph – but are enabled via configuration — then disabling subscriptions is another option to mitigate the risk.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/apollographql/router">the <code>router</code> repository</a></li>
<li>Email us at <code>security</code> <code>[at]</code> <code>apollographql</code> <code>[dot]</code> <code>com</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/apollographql/router/security/advisories/GHSA-w8vq-3hf9-xppx">https://github.com/apollographql/router/security/advisories/GHSA-w8vq-3hf9-xppx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41317">https://nvd.nist.gov/vuln/detail/CVE-2023-41317</a></li>
<li><a href="https://github.com/apollographql/router/commit/b295c103dd86c57c848397d32e8094edfa8502aa">https://github.com/apollographql/router/commit/b295c103dd86c57c848397d32e8094edfa8502aa</a></li>
<li><a href="https://github.com/apollographql/router/releases/tag/v1.29.1">https://github.com/apollographql/router/releases/tag/v1.29.1</a></li>
<li><a href="https://github.com/advisories/GHSA-w8vq-3hf9-xppx">https://github.com/advisories/GHSA-w8vq-3hf9-xppx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8vq-3hf9-xppx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-07T12:58:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[webpki] webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</id>
        <link href="https://github.com/advisories/GHSA-8qv2-5vq6-g2g7"/>
        <updated>2023-09-06T17:41:03.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will spend CPU time exponential with the number of candidate certificates at each step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>This was previously reported in <a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a>.</p>
<p><code>rustls-webpki</code> is a fork of this crate which contains a fix for this issue and is actively maintained.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/crypto-com/sgx-vendor">https://github.com/crypto-com/sgx-vendor</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0052.html">https://rustsec.org/advisories/RUSTSEC-2023-0052.html</a></li>
<li><a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a></li>
<li><a href="https://github.com/briansmith/webpki/issues/69#issuecomment-1699894848">https://github.com/briansmith/webpki/issues/69#issuecomment-1699894848</a></li>
<li><a href="https://github.com/briansmith/webpki/commit/30a108e0802fd09585e0d071013f24b8272d139b">https://github.com/briansmith/webpki/commit/30a108e0802fd09585e0d071013f24b8272d139b</a></li>
<li><a href="https://github.com/advisories/GHSA-8qv2-5vq6-g2g7">https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T00:12:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] openssl-src NULL pointer Dereference in signature_algorithms processing]]></title>
        <id>https://github.com/advisories/GHSA-83mx-573x-5rw9</id>
        <link href="https://github.com/advisories/GHSA-83mx-573x-5rw9"/>
        <updated>2023-09-05T14:49:34.000Z</updated>
        <content type="html"><![CDATA[<p>An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3449">https://nvd.nist.gov/vuln/detail/CVE-2021-3449</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-772220.pdf</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fb9fa6b51defd48157eeb207f52181f735d96148">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fb9fa6b51defd48157eeb207f52181f735d96148</a></li>
<li><a href="https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845">https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44845</a></li>
<li><a href="https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356">https://kc.mcafee.com/corporate/index?page=content&amp;id=SB10356</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/CCBFLLVQVILIVGZMBJL3IXZGKWQISYNP/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0013</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0055">https://rustsec.org/advisories/RUSTSEC-2021-0055</a></li>
<li><a href="https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc">https://security.FreeBSD.org/advisories/FreeBSD-SA-21:07.openssl.asc</a></li>
<li><a href="https://security.gentoo.org/glsa/202103-03">https://security.gentoo.org/glsa/202103-03</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210326-0006/">https://security.netapp.com/advisory/ntap-20210326-0006/</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210513-0002/">https://security.netapp.com/advisory/ntap-20210513-0002/</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-2021-GHY28dJd</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-4875">https://www.debian.org/security/2021/dsa-4875</a></li>
<li><a href="https://www.openssl.org/news/secadv/20210325.txt">https://www.openssl.org/news/secadv/20210325.txt</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuApr2021.html">https://www.oracle.com/security-alerts/cpuApr2021.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-05">https://www.tenable.com/security/tns-2021-05</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-06">https://www.tenable.com/security/tns-2021-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-09">https://www.tenable.com/security/tns-2021-09</a></li>
<li><a href="https://www.tenable.com/security/tns-2021-10">https://www.tenable.com/security/tns-2021-10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/1">http://www.openwall.com/lists/oss-security/2021/03/27/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/27/2">http://www.openwall.com/lists/oss-security/2021/03/27/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/3">http://www.openwall.com/lists/oss-security/2021/03/28/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2021/03/28/4">http://www.openwall.com/lists/oss-security/2021/03/28/4</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html">https://lists.debian.org/debian-lts-announce/2021/08/msg00029.html</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuoct2021.html">https://www.oracle.com/security-alerts/cpuoct2021.html</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-389290.pdf</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0055.html">https://rustsec.org/advisories/RUSTSEC-2021-0055.html</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpujul2022.html">https://www.oracle.com/security-alerts/cpujul2022.html</a></li>
<li><a href="https://github.com/advisories/GHSA-83mx-573x-5rw9">https://github.com/advisories/GHSA-83mx-573x-5rw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-83mx-573x-5rw9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-25T20:54:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lexical] Multiple soundness issues in lexical]]></title>
        <id>https://github.com/advisories/GHSA-c2hm-mjxv-89r4</id>
        <link href="https://github.com/advisories/GHSA-c2hm-mjxv-89r4"/>
        <updated>2023-09-04T17:02:00.000Z</updated>
        <content type="html"><![CDATA[<p><code>lexical</code> contains multiple soundness issues:</p>
<ol>
<li><a href="https://github.com/Alexhuszagh/rust-lexical/issues/102">Bytes::read() allows creating instances of types with invalid bit patterns</a></li>
<li><a href="https://github.com/Alexhuszagh/rust-lexical/issues/101">BytesIter::read() advances iterators out of bounds</a></li>
<li><a href="https://github.com/Alexhuszagh/rust-lexical/issues/104">The <code>BytesIter</code> trait has safety invariants but is public and not marked <code>unsafe</code></a></li>
<li><a href="https://github.com/Alexhuszagh/rust-lexical/issues/95"><code>write_float()</code> calls <code>MaybeUninit::assume_init()</code> on uninitialized data, which is is not allowed by the Rust abstract machine</a></li>
</ol>
<p>The crate also has some correctness issues and appears to be unmaintained.</p>
<h2 id="alternatives">Alternatives</h2>
<p>For quickly parsing floating-point numbers third-party crates are no longer needed. A fast float parsing algorith by the author of <code>lexical</code> has been <a href="https://github.com/rust-lang/rust/pull/86761">merged</a> into libcore.</p>
<p>For quickly parsing integers, consider <code>atoi</code> and <code>btoi</code> crates (100% safe code). <code>atoi_radix10</code> provides even faster parsing, but only with <code>-C target-cpu=native</code>, and at the cost of some <code>unsafe</code>.</p>
<p>For formatting integers in a <code>#[no_std]</code> context consider the <a href="https://crates.io/crates/numtoa"><code>numtoa</code></a> crate.</p>
<p>For working with big numbers consider <code>num-bigint</code> and <code>num-traits</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Alexhuszagh/rust-lexical">https://github.com/Alexhuszagh/rust-lexical</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0055.html">https://rustsec.org/advisories/RUSTSEC-2023-0055.html</a></li>
<li><a href="https://github.com/advisories/GHSA-c2hm-mjxv-89r4">https://github.com/advisories/GHSA-c2hm-mjxv-89r4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2hm-mjxv-89r4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-04T17:02:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vm-memory] Default functions in VolatileMemory trait lack bounds checks, potentially leading to out-of-bounds memory accesses]]></title>
        <id>https://github.com/advisories/GHSA-49hh-fprx-m68g</id>
        <link href="https://github.com/advisories/GHSA-49hh-fprx-m68g"/>
        <updated>2023-09-07T21:19:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was discovered in the default implementations of the <code>VolatileMemory::{get_atomic_ref, aligned_as_ref, aligned_as_mut, get_ref, get_array_ref}</code> trait functions, which allows out-of-bounds memory access if the <code>VolatileMemory::get_slice</code> function returns a <code>VolatileSlice</code> whose length is less than the function’s <code>count</code> argument. No implementations of <code>get_slice</code> provided in <code>vm_memory</code> are affected. Users of custom <code>VolatileMemory</code> implementations may be impacted if the custom implementation does not adhere to <code>get_slice</code>'s documentation.</p>
<h3 id="patches">Patches</h3>
<p>The issue started in version 0.1.0 but was fixed in version 0.12.2 by inserting a check that verifies that the <code>VolatileSlice</code> returned by <code>get_slice</code> is of the correct length.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Not Required</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8">https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8</a>
<a href="https://crates.io/crates/vm-memory/0.12.2">https://crates.io/crates/vm-memory/0.12.2</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rust-vmm/vm-memory/security/advisories/GHSA-49hh-fprx-m68g">https://github.com/rust-vmm/vm-memory/security/advisories/GHSA-49hh-fprx-m68g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41051">https://nvd.nist.gov/vuln/detail/CVE-2023-41051</a></li>
<li><a href="https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8">https://github.com/rust-vmm/vm-memory/commit/aff1dd4a5259f7deba56692840f7a2d9ca34c9c8</a></li>
<li><a href="https://crates.io/crates/vm-memory/0.12.2">https://crates.io/crates/vm-memory/0.12.2</a></li>
<li><a href="https://github.com/rust-vmm/vm-memory/issues/250">https://github.com/rust-vmm/vm-memory/issues/250</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0056.html">https://rustsec.org/advisories/RUSTSEC-2023-0056.html</a></li>
<li><a href="https://github.com/advisories/GHSA-49hh-fprx-m68g">https://github.com/advisories/GHSA-49hh-fprx-m68g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-49hh-fprx-m68g</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-04T16:35:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lzf] Invalid use of `mem::uninitialized` causes `use-of-uninitialized-value`]]></title>
        <id>https://github.com/advisories/GHSA-5m39-wx2q-mxg3</id>
        <link href="https://github.com/advisories/GHSA-5m39-wx2q-mxg3"/>
        <updated>2023-08-25T00:12:30.000Z</updated>
        <content type="html"><![CDATA[<p>The compression and decompression function used <code>mem:uninitialized</code> to create an array of uninitialized values, to later write values into it. This later leads to reads from uninitialized memory.</p>
<p>The flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf by using a heap-allocated <code>Vec</code> and removing out use of <code>mem::uninitialized</code>. The fix was released in v0.3.2 and v1.0.0</p>
<p>Subsequently, the crate was deprecated and its use is discouraged.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/badboy/lzf-rs/issues/9">https://github.com/badboy/lzf-rs/issues/9</a></li>
<li><a href="https://github.com/badboy/lzf-rs/commit/b633bf265e41c60dfce3be7eac4e4dd5e18d06cf">https://github.com/badboy/lzf-rs/commit/b633bf265e41c60dfce3be7eac4e4dd5e18d06cf</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0067.html">https://rustsec.org/advisories/RUSTSEC-2022-0067.html</a></li>
<li><a href="https://github.com/advisories/GHSA-5m39-wx2q-mxg3">https://github.com/advisories/GHSA-5m39-wx2q-mxg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m39-wx2q-mxg3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T21:42:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sodiumoxide] Incorrect Comparison in sodiumoxide]]></title>
        <id>https://github.com/advisories/GHSA-wrvc-72w7-xpmj</id>
        <link href="https://github.com/advisories/GHSA-wrvc-72w7-xpmj"/>
        <updated>2023-08-25T00:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the sodiumoxide crate starting with 0.2.0 and prior to 0.2.5 for Rust. <code>generichash::Digest::eq</code> compares itself to itself and thus has degenerate security properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25002">https://nvd.nist.gov/vuln/detail/CVE-2019-25002</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/pull/381">https://github.com/sodiumoxide/sodiumoxide/pull/381</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/pull/381/commits/fae052b834b097ced9a89a8fff8466e18f383070">https://github.com/sodiumoxide/sodiumoxide/pull/381/commits/fae052b834b097ced9a89a8fff8466e18f383070</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0026.html">https://rustsec.org/advisories/RUSTSEC-2019-0026.html</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/commit/38490723927f230498adf795153e6cd3cb08b6a8">https://github.com/sodiumoxide/sodiumoxide/commit/38490723927f230498adf795153e6cd3cb08b6a8</a></li>
<li><a href="https://github.com/advisories/GHSA-wrvc-72w7-xpmj">https://github.com/advisories/GHSA-wrvc-72w7-xpmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrvc-72w7-xpmj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:45:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libsecp256k1] libsecp256k1 contains side-channel timing attack]]></title>
        <id>https://github.com/advisories/GHSA-hrjm-c879-pp86</id>
        <link href="https://github.com/advisories/GHSA-hrjm-c879-pp86"/>
        <updated>2023-08-25T00:12:25.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of libsecp256k1 prior to 0.3.1 did not execute <code>Scalar::check_overflow</code> in constant time. This allows an attacker to potentially leak information via a timing attack. The flaw was corrected by modifying <code>Scalar::check_overflow</code> to execute in constant time.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25003">https://nvd.nist.gov/vuln/detail/CVE-2019-25003</a></li>
<li><a href="https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50">https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0027.html">https://rustsec.org/advisories/RUSTSEC-2019-0027.html</a></li>
<li><a href="https://github.com/advisories/GHSA-hrjm-c879-pp86">https://github.com/advisories/GHSA-hrjm-c879-pp86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrjm-c879-pp86</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T20:46:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[failure] Rust Failure Crate Vulnerable to Type confusion]]></title>
        <id>https://github.com/advisories/GHSA-r98r-j25q-rmpr</id>
        <link href="https://github.com/advisories/GHSA-r98r-j25q-rmpr"/>
        <updated>2023-08-25T00:12:20.000Z</updated>
        <content type="html"><![CDATA[<p>Safe Rust code can implement malfunctioning <code>__private_get_type_id__</code> and cause type confusion when downcasting, which is an undefined behavior.</p>
<p>Users who derive Fail trait are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25010">https://nvd.nist.gov/vuln/detail/CVE-2019-25010</a></li>
<li><a href="https://github.com/rust-lang-nursery/failure/issues/336">https://github.com/rust-lang-nursery/failure/issues/336</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0036.html">https://rustsec.org/advisories/RUSTSEC-2019-0036.html</a></li>
<li><a href="https://github.com/advisories/GHSA-r98r-j25q-rmpr">https://github.com/advisories/GHSA-r98r-j25q-rmpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r98r-j25q-rmpr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:46:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[failure] Type confusion if __private_get_type_id__ is overriden]]></title>
        <id>https://github.com/advisories/GHSA-jq66-xh47-j9f3</id>
        <link href="https://github.com/advisories/GHSA-jq66-xh47-j9f3"/>
        <updated>2023-08-25T00:12:19.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the failure crate through 0.1.5 for Rust. It has a type confusion flaw when downcasting. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-25575">https://nvd.nist.gov/vuln/detail/CVE-2020-25575</a></li>
<li><a href="https://github.com/rust-lang-nursery/failure/issues/336">https://github.com/rust-lang-nursery/failure/issues/336</a></li>
<li><a href="https://github.com/RustCrypto/hashes/pull/91">https://github.com/RustCrypto/hashes/pull/91</a></li>
<li><a href="https://boats.gitlab.io/blog/post/failure-to-fehler/">https://boats.gitlab.io/blog/post/failure-to-fehler/</a></li>
<li><a href="https://github.com/RustSec/advisory-db/blob/main/crates/failure/RUSTSEC-2019-0036.md">https://github.com/RustSec/advisory-db/blob/main/crates/failure/RUSTSEC-2019-0036.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0030.html">https://rustsec.org/advisories/RUSTSEC-2019-0030.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0036.html">https://rustsec.org/advisories/RUSTSEC-2019-0036.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0036.html">https://rustsec.org/advisories/RUSTSEC-2020-0036.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jq66-xh47-j9f3">https://github.com/advisories/GHSA-jq66-xh47-j9f3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq66-xh47-j9f3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-06-16T23:06:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mail-internals] mail-internals use-after-free vulnerability in `vec_insert_bytes`]]></title>
        <id>https://github.com/advisories/GHSA-rcx8-48pc-v9q8</id>
        <link href="https://github.com/advisories/GHSA-rcx8-48pc-v9q8"/>
        <updated>2023-08-24T22:20:48.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect reallocation logic in the function <a href="https://docs.rs/mail-internals/0.2.3/mail_internals/utils/fn.vec_insert_bytes.html"><code>vec_insert_bytes</code></a> causes a use-after-free.</p>
<p>This function does not have to be called directly to trigger the vulnerability because many methods on <a href="https://docs.rs/mail-internals/0.2.3/mail_internals/encoder/struct.EncodingWriter.html"><code>EncodingWriter</code></a> call this function internally.</p>
<p>The mail-* suite is unmaintained and the upstream sources have been actively vandalised.
A fixed <code>mail-internals-ng</code> (and <code>mail-headers-ng</code> and <code>mail-core-ng</code>) crate has been published which fixes this, and a dependency on another unsound crate.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustsec/advisory-db/blob/main/crates/mail-internals/RUSTSEC-2023-0054.md">https://github.com/rustsec/advisory-db/blob/main/crates/mail-internals/RUSTSEC-2023-0054.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0054.html">https://rustsec.org/advisories/RUSTSEC-2023-0054.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rcx8-48pc-v9q8">https://github.com/advisories/GHSA-rcx8-48pc-v9q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcx8-48pc-v9q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-24T22:20:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ntpd] ntpd has Dependency on Vulnerable Third-Party Component]]></title>
        <id>https://github.com/advisories/GHSA-37xq-q42p-rv3p</id>
        <link href="https://github.com/advisories/GHSA-37xq-q42p-rv3p"/>
        <updated>2023-08-24T22:18:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="during-startup-an-attacker-that-can-man-in-the-middle-traffic-to-and-from-nts-key-exchange-servers-can-trigger-a-very-expensive-key-validation-process-due-to-a-vulnerability-in-webpki">During startup, an attacker that can man-in-the-middle traffic to and from NTS key exchange servers can trigger a very expensive key validation process due to a vulnerability in webpki.</h3>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to excessive cpu usage on startup on clients configured to use NTS</p>
<h3 id="patches">Patches</h3>
<p>Affected users are recommended to upgrade to version 0.3.7</p>
<h3 id="references">References</h3>
<p>See also <a href="https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md">https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pendulum-project/ntpd-rs/security/advisories/GHSA-37xq-q42p-rv3p">https://github.com/pendulum-project/ntpd-rs/security/advisories/GHSA-37xq-q42p-rv3p</a></li>
<li><a href="https://github.com/pendulum-project/ntpd-rs/commit/927952a440176a18f3ded132eb831ae7f7ac5c00">https://github.com/pendulum-project/ntpd-rs/commit/927952a440176a18f3ded132eb831ae7f7ac5c00</a></li>
<li><a href="https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md">https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md</a></li>
<li><a href="https://github.com/advisories/GHSA-37xq-q42p-rv3p">https://github.com/advisories/GHSA-37xq-q42p-rv3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37xq-q42p-rv3p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-08-24T22:18:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cargo] Malicious dependencies can inject arbitrary JavaScript into cargo-generated timing reports]]></title>
        <id>https://github.com/advisories/GHSA-wrrj-h57r-vx9p</id>
        <link href="https://github.com/advisories/GHSA-wrrj-h57r-vx9p"/>
        <updated>2023-08-26T16:19:40.000Z</updated>
        <content type="html"><![CDATA[<p>The Rust Security Response WG was notified that Cargo did not escape Cargo feature names when including them in the report generated by <code>cargo build --timings</code>. A malicious package included as a dependency may inject nearly arbitrary HTML here, potentially leading to XSS if the report is subsequently uploaded somewhere.</p>
<p>The severity of this vulnerability is "low" for users relying on dependencies from git, local paths, or alternative registries. Users who solely depend on crates.io are unaffected.</p>
<p>Note that <strong>by design</strong> Cargo allows code execution at build time, due to build scripts and procedural macros. The vulnerability in this advisory allows performing a subset of the possible damage in a harder to track down way. Your dependencies must still be trusted if you want to be protected from attacks, as it's possible to perform the same attacks with build scripts and procedural macros.</p>
<h1 id="overview">Overview</h1>
<p>Rust 1.60.0 <a href="https://blog.rust-lang.org/2022/04/07/Rust-1.60.0.html#cargo---timings">introduced</a> <code>cargo build --timings</code>, which produces a report of how long the different steps of the build process took. It includes lists of Cargo features for each crate.</p>
<p>Prior to Rust 1.72, Cargo feature names were allowed to contain almost any characters (with some exceptions as used by the feature syntax), but it would produce a future incompatibility warning about them <a href="https://github.com/rust-lang/cargo/pull/8814">since Rust 1.49</a>. crates.io is far more stringent about what it considers a valid feature name and has not allowed such feature names.</p>
<p>As the feature names were included unescaped in the timings report, they could be used to inject Javascript into the page, for example with a feature name like <code>features = ["&lt;img src='' onerror=alert(0)"]</code>. If this report were subsequently uploaded to a domain that uses credentials, the injected Javascript could access resources from the website visitor.</p>
<p>This issue was fixed by <a href="https://github.com/rust-lang/cargo/pull/12291">turning the future incompatibility warning into an error</a>.</p>
<h1 id="affected-versions">Affected versions</h1>
<p>The vulnerability is present in all versions of Cargo after and including 1.60.0. Rust 1.72, to be released on August 24, will include a fix for it.</p>
<p>Users whose dependencies are entirely on crates.io are unaffected.</p>
<h1 id="mitigations">Mitigations</h1>
<p>We recommend users always excercise care in which package they download, by only including trusted dependencies in their projects. Please note that even with these vulnerabilities fixed, by design Cargo allows arbitrary code execution at build time thanks to build scripts and procedural macros: a malicious dependency will be able to cause damage regardless of these vulnerabilities.</p>
<p>crates.io has server-side checks preventing this attack, and there are no packages on crates.io exploiting these vulnerabilities. crates.io users still need to excercise care in choosing their dependencies though, as remote code execution is allowed by design there as well.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rust-lang/cargo/security/advisories/GHSA-wrrj-h57r-vx9p">https://github.com/rust-lang/cargo/security/advisories/GHSA-wrrj-h57r-vx9p</a></li>
<li><a href="https://github.com/rust-lang/cargo/commit/9835622853f08be9a4b58ebe29dcec8f43b64b33">https://github.com/rust-lang/cargo/commit/9835622853f08be9a4b58ebe29dcec8f43b64b33</a></li>
<li><a href="https://github.com/rust-lang/cargo/commit/f975722a0eac934c0722f111f107c4ea2f5c4365">https://github.com/rust-lang/cargo/commit/f975722a0eac934c0722f111f107c4ea2f5c4365</a></li>
<li><a href="https://github.com/advisories/GHSA-wrrj-h57r-vx9p">https://github.com/advisories/GHSA-wrrj-h57r-vx9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrrj-h57r-vx9p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-08-24T22:15:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rustls-webpki] rustls-webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</id>
        <link href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg"/>
        <updated>2023-08-22T18:06:20.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will spend CPU time exponential with the number of candidate certificates at each step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>We now give each path building operation a budget of 100 signature verifications.</p>
<p>The original <code>webpki</code> crate is also affected.</p>
<p>This was previously reported in the original crate <a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a> and re-reported to us recently.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3">https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3</a></li>
<li><a href="https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683">https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0053.html">https://rustsec.org/advisories/RUSTSEC-2023-0053.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg">https://github.com/advisories/GHSA-fh2r-99q2-6mmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-22T18:06:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rustls-webpki] rustls-webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</id>
        <link href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg"/>
        <updated>2023-08-22T18:06:20.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will spend CPU time exponential with the number of candidate certificates at each step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>We now give each path building operation a budget of 100 signature verifications.</p>
<p>The original <code>webpki</code> crate is also affected.</p>
<p>This was previously reported in the original crate <a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a> and re-reported to us recently.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3">https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3</a></li>
<li><a href="https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683">https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0053.html">https://rustsec.org/advisories/RUSTSEC-2023-0053.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg">https://github.com/advisories/GHSA-fh2r-99q2-6mmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-22T18:06:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasm3] WASM3 segmentation fault]]></title>
        <id>https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</id>
        <link href="https://github.com/advisories/GHSA-gq4p-4hxv-5rg9"/>
        <updated>2023-08-18T22:45:48.000Z</updated>
        <content type="html"><![CDATA[<p>WASM3 v0.5.0 was discovered to contain a segmentation fault via the component <code>Compile_Memory_CopyFill</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34529">https://nvd.nist.gov/vuln/detail/CVE-2022-34529</a></li>
<li><a href="https://github.com/wasm3/wasm3/issues/337">https://github.com/wasm3/wasm3/issues/337</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43057.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43057.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gq4p-4hxv-5rg9">https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-28T00:00:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] X.509 Email Address 4-byte Buffer Overflow]]></title>
        <id>https://github.com/advisories/GHSA-8rwr-x37p-mx23</id>
        <link href="https://github.com/advisories/GHSA-8rwr-x37p-mx23"/>
        <updated>2023-08-17T05:02:52.000Z</updated>
        <content type="html"><![CDATA[<p>A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs
after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to
continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address
to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or
potentially remote code execution.</p>
<p>Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler.</p>
<p>Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible.</p>
<p>In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustsec/advisory-db/pull/1452">https://github.com/rustsec/advisory-db/pull/1452</a></li>
<li><a href="https://github.com/alexcrichton/openssl-src-rs/commit/4a31c14f31e1a08c18893a37e304dd1dd4b7daa3">https://github.com/alexcrichton/openssl-src-rs/commit/4a31c14f31e1a08c18893a37e304dd1dd4b7daa3</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0064.html">https://rustsec.org/advisories/RUSTSEC-2022-0064.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20221101.txt">https://www.openssl.org/news/secadv/20221101.txt</a></li>
<li><a href="https://github.com/openssl/openssl/commit/fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://github.com/openssl/openssl/commit/fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3602">https://nvd.nist.gov/vuln/detail/CVE-2022-3602</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023</a></li>
<li><a href="https://security.gentoo.org/glsa/202211-01">https://security.gentoo.org/glsa/202211-01</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-W9sdCc2a">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-W9sdCc2a</a></li>
<li><a href="http://packetstormsecurity.com/files/169687/OpenSSL-Security-Advisory-20221101.html">http://packetstormsecurity.com/files/169687/OpenSSL-Security-Advisory-20221101.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/15">http://www.openwall.com/lists/oss-security/2022/11/01/15</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/16">http://www.openwall.com/lists/oss-security/2022/11/01/16</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/17">http://www.openwall.com/lists/oss-security/2022/11/01/17</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/18">http://www.openwall.com/lists/oss-security/2022/11/01/18</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/19">http://www.openwall.com/lists/oss-security/2022/11/01/19</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/20">http://www.openwall.com/lists/oss-security/2022/11/01/20</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/21">http://www.openwall.com/lists/oss-security/2022/11/01/21</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/24">http://www.openwall.com/lists/oss-security/2022/11/01/24</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/1">http://www.openwall.com/lists/oss-security/2022/11/02/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/10">http://www.openwall.com/lists/oss-security/2022/11/02/10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/11">http://www.openwall.com/lists/oss-security/2022/11/02/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/12">http://www.openwall.com/lists/oss-security/2022/11/02/12</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/2">http://www.openwall.com/lists/oss-security/2022/11/02/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/3">http://www.openwall.com/lists/oss-security/2022/11/02/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/5">http://www.openwall.com/lists/oss-security/2022/11/02/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/6">http://www.openwall.com/lists/oss-security/2022/11/02/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/7">http://www.openwall.com/lists/oss-security/2022/11/02/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/9">http://www.openwall.com/lists/oss-security/2022/11/02/9</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20221102-0001/">https://security.netapp.com/advisory/ntap-20221102-0001/</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/794340">https://www.kb.cert.org/vuls/id/794340</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/13">http://www.openwall.com/lists/oss-security/2022/11/02/13</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/14">http://www.openwall.com/lists/oss-security/2022/11/02/14</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/15">http://www.openwall.com/lists/oss-security/2022/11/02/15</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/1">http://www.openwall.com/lists/oss-security/2022/11/03/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/2">http://www.openwall.com/lists/oss-security/2022/11/03/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/3">http://www.openwall.com/lists/oss-security/2022/11/03/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/5">http://www.openwall.com/lists/oss-security/2022/11/03/5</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/10">http://www.openwall.com/lists/oss-security/2022/11/03/10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/11">http://www.openwall.com/lists/oss-security/2022/11/03/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/6">http://www.openwall.com/lists/oss-security/2022/11/03/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/7">http://www.openwall.com/lists/oss-security/2022/11/03/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/9">http://www.openwall.com/lists/oss-security/2022/11/03/9</a></li>
<li><a href="https://github.com/advisories/GHSA-8rwr-x37p-mx23">https://github.com/advisories/GHSA-8rwr-x37p-mx23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rwr-x37p-mx23</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-01T17:45:59.000Z</published>
    </entry>
</feed>