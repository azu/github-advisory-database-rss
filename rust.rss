<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2024-01-13T13:01:45.391Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[evm] Rust EVM erroneousle handles `record_external_operation` error return]]></title>
        <id>https://github.com/advisories/GHSA-27wg-99g8-2v4v</id>
        <link href="https://github.com/advisories/GHSA-27wg-99g8-2v4v"/>
        <updated>2024-01-03T21:48:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In <code>rust-evm</code>, a feature called <code>record_external_operation</code> was introduced, allowing library users to record custom gas changes. This feature can have some bogus interactions with the call stack.</p>
<p>In particular, during finalization of a <code>CREATE</code> or <code>CREATE2</code>, in the case that <a href="https://github.com/rust-ethereum/evm/blob/release-v041/src/executor/stack/executor.rs#L1012C25-L1012C69">the substack execution happens successfully</a>, <code>rust-evm</code> will first commit the substate, and then call <code>record_external_operation(Write(out_code.len()))</code>. If <code>record_external_operation</code> later fails, this error is returned to the parent call stack, instead of <code>Succeeded</code>. Yet, the substate commitment already happened. This causes smart contracts able to commit state changes, when the parent caller contract receives zero address (which usually indicates that the execution has failed).</p>
<p>This issue only impacts library users with custom <code>record_external_operation</code> that returns errors.</p>
<h3 id="patches">Patches</h3>
<p>The issue is patched in release 0.41.1. The commit can be seem <a href="https://github.com/rust-ethereum/evm/commit/d8991ec727ad0fb64fe9957a3cd307387a6701e4">here</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>Patch PR <a href="https://github.com/rust-ethereum/evm/pull/264">#264</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rust-ethereum/evm/security/advisories/GHSA-27wg-99g8-2v4v">https://github.com/rust-ethereum/evm/security/advisories/GHSA-27wg-99g8-2v4v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21629">https://nvd.nist.gov/vuln/detail/CVE-2024-21629</a></li>
<li><a href="https://github.com/rust-ethereum/evm/pull/264">https://github.com/rust-ethereum/evm/pull/264</a></li>
<li><a href="https://github.com/rust-ethereum/evm/commit/d8991ec727ad0fb64fe9957a3cd307387a6701e4">https://github.com/rust-ethereum/evm/commit/d8991ec727ad0fb64fe9957a3cd307387a6701e4</a></li>
<li><a href="https://github.com/rust-ethereum/evm/blob/release-v041/src/executor/stack/executor.rs#L1012C25-L1012C69">https://github.com/rust-ethereum/evm/blob/release-v041/src/executor/stack/executor.rs#L1012C25-L1012C69</a></li>
<li><a href="https://github.com/advisories/GHSA-27wg-99g8-2v4v">https://github.com/advisories/GHSA-27wg-99g8-2v4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27wg-99g8-2v4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-03T21:48:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[safe_pqc_kyber] safe_pqc_kyber leaks parts of secret keys]]></title>
        <id>https://github.com/advisories/GHSA-p4v8-jgcv-9g75</id>
        <link href="https://github.com/advisories/GHSA-p4v8-jgcv-9g75"/>
        <updated>2024-01-03T21:40:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On some platforms, when an attacker can time decapsulation, and in particular when the attacker can forge cipher texts, they can learn (parts of) the secret key.</p>
<p>Does not apply to ephemeral usage, such as when used in the regular way in TLS.</p>
<h3 id="patches">Patches</h3>
<p>Patched in 0.6.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://kyberslash.cr.yp.to">kyberslash.cr.yp.to</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/bwesterb/argyle-kyber/security/advisories/GHSA-p4v8-jgcv-9g75">https://github.com/bwesterb/argyle-kyber/security/advisories/GHSA-p4v8-jgcv-9g75</a></li>
<li><a href="https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6">https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6</a></li>
<li><a href="https://kyberslash.cr.yp.to/">https://kyberslash.cr.yp.to/</a></li>
<li><a href="https://github.com/advisories/GHSA-p4v8-jgcv-9g75">https://github.com/advisories/GHSA-p4v8-jgcv-9g75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4v8-jgcv-9g75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-03T21:40:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[vmm-sys-util] `serde` deserialization for `FamStructWrapper` lacks bound checks that could potentially lead to out-of-bounds memory access]]></title>
        <id>https://github.com/advisories/GHSA-875g-mfp6-g7f9</id>
        <link href="https://github.com/advisories/GHSA-875g-mfp6-g7f9"/>
        <updated>2024-01-02T23:27:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was discovered in the FamStructWrapper::deserialize implementation provided by the crate for vmm_sys_util::fam::FamStructWrapper, which can lead to out of bounds memory accesses. The deserialization does not check that the length stored in the header matches the flexible array length. Mismatch in the lengths might allow out of bounds memory access through Rust-safe methods.</p>
<p>Impacted versions: &gt;= 0.5.0</p>
<h3 id="patches">Patches</h3>
<p>The issue was corrected in version 0.12.0 by inserting a check that verifies the lengths of compared flexible arrays are equal for any deserialized header and aborting deserialization otherwise. Moreover, the API was changed so that header length can only be modified through Rust-unsafe code. This ensures that users cannot trigger out-of-bounds memory access from Rust-safe code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rust-vmm/vmm-sys-util/security/advisories/GHSA-875g-mfp6-g7f9">https://github.com/rust-vmm/vmm-sys-util/security/advisories/GHSA-875g-mfp6-g7f9</a></li>
<li><a href="https://github.com/rust-vmm/vmm-sys-util/commit/30172fca2a8e0a38667d934ee56682247e13f167">https://github.com/rust-vmm/vmm-sys-util/commit/30172fca2a8e0a38667d934ee56682247e13f167</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50711">https://nvd.nist.gov/vuln/detail/CVE-2023-50711</a></li>
<li><a href="https://github.com/advisories/GHSA-875g-mfp6-g7f9">https://github.com/advisories/GHSA-875g-mfp6-g7f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-875g-mfp6-g7f9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-02T16:28:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tauri-cli] Tauri's Updater Private Keys Possibly Leaked via Vite Environment Variables]]></title>
        <id>https://github.com/advisories/GHSA-2rcp-jvr4-r259</id>
        <link href="https://github.com/advisories/GHSA-2rcp-jvr4-r259"/>
        <updated>2023-12-28T05:05:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This advisory is not describing a vulnerability in the Tauri code base itself but a commonly used misconfiguration which could lead to leaking of the private key and updater key password into bundled Tauri applications using the Vite frontend in a specific configuration.</p>
<p>The Tauri documentation used an insecure example configuration in the <a href="https://tauri.app/v1/guides/getting-started/setup/vite/">Vite guide</a> to showcase how to use Tauri together with Vite. </p>
<p>Copying the following snippet <code>envPrefix: ['VITE_', 'TAURI_'],</code> from this guide into the <code>vite.config.ts</code> of a Tauri project possibly leads to bundling the <code>TAURI_PRIVATE_KEY</code> and <code>TAURI_KEY_PASSWORD</code> into the Vite frontend code and therefore leaking this value to the debug built of a Tauri application.</p>
<p>The value is automatically bundled into debug builds but for production builds it is not embedded, as long as it is not directly referenced in the frontend code. Vite statically replaces these values in production builds. This reduces the amount of affected applications to a very small amount of affected applications.</p>
<p>To verify if you are affected you can search for the private key value or the <code>TAURI_PRIVATE_KEY</code> variable inside the release build frontend assets (<code>dist/</code>).</p>
<blockquote>
<p>Example: <code>grep -r "TAURI_PRIVATE_KEY" dist/</code></p>
</blockquote>
<p>Using only the <code>envPrefix: ['VITE_'],</code> or any other framework than Vite means you are not impacted by this advisory.</p>
<h3 id="patches">Patches</h3>
<p>The documentation has been patched but as the root cause is not in Tauri itself the issue is not fixed by updating Tauri.
The <code>vite.config.ts</code> configuration of the project needs to be adapted.</p>
<p>We recommend rotating your updater private key if you are affected by this (requires Tauri CLI &gt;=1.5.5). After updating the envPrefix configuration, generate a new private key with <code>tauri signer generate</code>, saving the new private key and updating the updater's <code>pubkey</code> value on <code>tauri.conf.json</code> with the new public key. To update your existing application, the next application build must be signed with the older private key in order to be accepted by the existing application.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>envPrefix: ['VITE_'],</code>should be used and the desired <code>TAURI</code> variables manually added.
Respective these variables could be added <code>TAURI_PLATFORM</code>, <code>TAURI_ARCH</code>, <code>TAURI_FAMILY</code>, <code>TAURI_PLATFORM_VERSION</code>, <code>TAURI_PLATFORM_TYPE</code> and <code>TAURI_DEBUG</code> without leaking sensitive information.</p>
<p>We urge affected users to implement the workaround as the <code>1.x</code> branch will not receive a general prevention fix as it would break systems.</p>
<h3 id="references">References</h3>
<p>The issue was originally disclosed in our discord <a href="https://discord.com/channels/616186924390023171/1164260301655523409">here</a>.
The affected guide is <a href="https://tauri.app/v1/guides/getting-started/setup/vite/">https://tauri.app/v1/guides/getting-started/setup/vite/</a>.</p>
<blockquote>
<p>Update: We lowered the severity from high to low, as the likelihood of impact was found to only affect a <strong>very limited</strong> amount of applications.</p>
</blockquote>
<blockquote>
<p>Update2: We changed the affected versions to make clear that after <code>2.0.0-alpha.16</code> or <code>1.5.6</code> the potentially vulnerable recommendation was no longer visible on our website and should not affect projects by default. A lot of users were confused and we believe this advisory reached the necessary user base.</p>
</blockquote>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259">https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46115">https://nvd.nist.gov/vuln/detail/CVE-2023-46115</a></li>
<li><a href="https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433">https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433</a></li>
<li><a href="https://discord.com/channels/616186924390023171/1164260301655523409">https://discord.com/channels/616186924390023171/1164260301655523409</a></li>
<li><a href="https://tauri.app/v1/guides/getting-started/setup/vite/">https://tauri.app/v1/guides/getting-started/setup/vite/</a></li>
<li><a href="https://github.com/advisories/GHSA-2rcp-jvr4-r259">https://github.com/advisories/GHSA-2rcp-jvr4-r259</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rcp-jvr4-r259</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-20T15:18:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tauri-cli] Tauri's Updater Private Keys Possibly Leaked via Vite Environment Variables]]></title>
        <id>https://github.com/advisories/GHSA-2rcp-jvr4-r259</id>
        <link href="https://github.com/advisories/GHSA-2rcp-jvr4-r259"/>
        <updated>2023-12-28T05:05:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This advisory is not describing a vulnerability in the Tauri code base itself but a commonly used misconfiguration which could lead to leaking of the private key and updater key password into bundled Tauri applications using the Vite frontend in a specific configuration.</p>
<p>The Tauri documentation used an insecure example configuration in the <a href="https://tauri.app/v1/guides/getting-started/setup/vite/">Vite guide</a> to showcase how to use Tauri together with Vite. </p>
<p>Copying the following snippet <code>envPrefix: ['VITE_', 'TAURI_'],</code> from this guide into the <code>vite.config.ts</code> of a Tauri project possibly leads to bundling the <code>TAURI_PRIVATE_KEY</code> and <code>TAURI_KEY_PASSWORD</code> into the Vite frontend code and therefore leaking this value to the debug built of a Tauri application.</p>
<p>The value is automatically bundled into debug builds but for production builds it is not embedded, as long as it is not directly referenced in the frontend code. Vite statically replaces these values in production builds. This reduces the amount of affected applications to a very small amount of affected applications.</p>
<p>To verify if you are affected you can search for the private key value or the <code>TAURI_PRIVATE_KEY</code> variable inside the release build frontend assets (<code>dist/</code>).</p>
<blockquote>
<p>Example: <code>grep -r "TAURI_PRIVATE_KEY" dist/</code></p>
</blockquote>
<p>Using only the <code>envPrefix: ['VITE_'],</code> or any other framework than Vite means you are not impacted by this advisory.</p>
<h3 id="patches">Patches</h3>
<p>The documentation has been patched but as the root cause is not in Tauri itself the issue is not fixed by updating Tauri.
The <code>vite.config.ts</code> configuration of the project needs to be adapted.</p>
<p>We recommend rotating your updater private key if you are affected by this (requires Tauri CLI &gt;=1.5.5). After updating the envPrefix configuration, generate a new private key with <code>tauri signer generate</code>, saving the new private key and updating the updater's <code>pubkey</code> value on <code>tauri.conf.json</code> with the new public key. To update your existing application, the next application build must be signed with the older private key in order to be accepted by the existing application.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>envPrefix: ['VITE_'],</code>should be used and the desired <code>TAURI</code> variables manually added.
Respective these variables could be added <code>TAURI_PLATFORM</code>, <code>TAURI_ARCH</code>, <code>TAURI_FAMILY</code>, <code>TAURI_PLATFORM_VERSION</code>, <code>TAURI_PLATFORM_TYPE</code> and <code>TAURI_DEBUG</code> without leaking sensitive information.</p>
<p>We urge affected users to implement the workaround as the <code>1.x</code> branch will not receive a general prevention fix as it would break systems.</p>
<h3 id="references">References</h3>
<p>The issue was originally disclosed in our discord <a href="https://discord.com/channels/616186924390023171/1164260301655523409">here</a>.
The affected guide is <a href="https://tauri.app/v1/guides/getting-started/setup/vite/">https://tauri.app/v1/guides/getting-started/setup/vite/</a>.</p>
<blockquote>
<p>Update: We lowered the severity from high to low, as the likelihood of impact was found to only affect a <strong>very limited</strong> amount of applications.</p>
</blockquote>
<blockquote>
<p>Update2: We changed the affected versions to make clear that after <code>2.0.0-alpha.16</code> or <code>1.5.6</code> the potentially vulnerable recommendation was no longer visible on our website and should not affect projects by default. A lot of users were confused and we believe this advisory reached the necessary user base.</p>
</blockquote>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259">https://github.com/tauri-apps/tauri/security/advisories/GHSA-2rcp-jvr4-r259</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46115">https://nvd.nist.gov/vuln/detail/CVE-2023-46115</a></li>
<li><a href="https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433">https://github.com/tauri-apps/tauri/commit/8b166e9bf82e69ddb3200a3a825614980bd8d433</a></li>
<li><a href="https://discord.com/channels/616186924390023171/1164260301655523409">https://discord.com/channels/616186924390023171/1164260301655523409</a></li>
<li><a href="https://tauri.app/v1/guides/getting-started/setup/vite/">https://tauri.app/v1/guides/getting-started/setup/vite/</a></li>
<li><a href="https://github.com/advisories/GHSA-2rcp-jvr4-r259">https://github.com/advisories/GHSA-2rcp-jvr4-r259</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2rcp-jvr4-r259</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-20T15:18:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rosenpass] Remotely exploitable denial of service in Rosenpass]]></title>
        <id>https://github.com/advisories/GHSA-6ggr-cwv4-g7qg</id>
        <link href="https://github.com/advisories/GHSA-6ggr-cwv4-g7qg"/>
        <updated>2023-12-21T23:15:58.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of this crate did not validate the size of buffers when attempting to decode messages.</p>
<p>This allows an attacker to trigger a panic by sending a UDP datagram with a 1 byte payload over network.</p>
<p>This flaw was corrected by validating the size of the buffers before attempting to decode the message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rosenpass/rosenpass/commit/93439858d1c44294a7b377f775c4fc897a370bb2">https://github.com/rosenpass/rosenpass/commit/93439858d1c44294a7b377f775c4fc897a370bb2</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0077.html">https://rustsec.org/advisories/RUSTSEC-2023-0077.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6ggr-cwv4-g7qg">https://github.com/advisories/GHSA-6ggr-cwv4-g7qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6ggr-cwv4-g7qg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-21T23:15:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[unsafe-libyaml] unsafe-libyaml unaligned write of u64 on 32-bit and 16-bit platforms]]></title>
        <id>https://github.com/advisories/GHSA-r24f-hg58-vfrw</id>
        <link href="https://github.com/advisories/GHSA-r24f-hg58-vfrw"/>
        <updated>2023-12-21T18:14:35.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions allocate memory using the alignment of <code>usize</code> and write data to it of type <code>u64</code>, without using <code>core::ptr::write_unaligned</code>. In platforms with sub-64bit alignment for <code>usize</code> (including wasm32 and x86) these writes are insufficiently aligned some of the time.</p>
<p>If using an ordinary optimized standard library, the bug exhibits Undefined Behavior so may or may not behave in any sensible way, depending on optimization settings and hardware and other things. If using a Rust standard library built with debug assertions enabled, the bug manifests deterministically in a crash (non-unwinding panic) saying <em>"ptr::write requires that the pointer argument is aligned and non-null"</em>.</p>
<p>No 64-bit platform is impacted by the bug.</p>
<p>The flaw was corrected by allocating with adequately high alignment on all
platforms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dtolnay/unsafe-libyaml/issues/21">https://github.com/dtolnay/unsafe-libyaml/issues/21</a></li>
<li><a href="https://github.com/dtolnay/unsafe-libyaml/commit/7755559145c9cf5573639bfecc557893d4a46b0d">https://github.com/dtolnay/unsafe-libyaml/commit/7755559145c9cf5573639bfecc557893d4a46b0d</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0075.html">https://rustsec.org/advisories/RUSTSEC-2023-0075.html</a></li>
<li><a href="https://github.com/advisories/GHSA-r24f-hg58-vfrw">https://github.com/advisories/GHSA-r24f-hg58-vfrw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r24f-hg58-vfrw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-21T18:14:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ostree] libostree vulnerable to denial of service attack]]></title>
        <id>https://github.com/advisories/GHSA-x96g-95fq-4xv4</id>
        <link href="https://github.com/advisories/GHSA-x96g-95fq-4xv4"/>
        <updated>2023-12-20T23:16:17.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in ostree before version 0.17.1 allows attackers to cause a denial of service via the print_panic function in repo_checkout_filter.rs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-47085">https://nvd.nist.gov/vuln/detail/CVE-2022-47085</a></li>
<li><a href="https://github.com/ostreedev/ostree/issues/2775">https://github.com/ostreedev/ostree/issues/2775</a></li>
<li><a href="https://doc.rust-lang.org/std/macro.eprintln.html">https://doc.rust-lang.org/std/macro.eprintln.html</a></li>
<li><a href="https://github.com/ostreedev/ostree/commit/d9bb160a7c1e7f0a2308a7282622b91bc27d448c">https://github.com/ostreedev/ostree/commit/d9bb160a7c1e7f0a2308a7282622b91bc27d448c</a></li>
<li><a href="https://github.com/advisories/GHSA-x96g-95fq-4xv4">https://github.com/advisories/GHSA-x96g-95fq-4xv4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x96g-95fq-4xv4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-18T15:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[russh] Prefix Truncation Attack against ChaCha20-Poly1305 and Encrypt-then-MAC aka Terrapin]]></title>
        <id>https://github.com/advisories/GHSA-45x7-px36-x8w8</id>
        <link href="https://github.com/advisories/GHSA-45x7-px36-x8w8"/>
        <updated>2024-01-11T15:42:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Terrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.</p>
<h3 id="mitigations">Mitigations</h3>
<p>To mitigate this protocol vulnerability, OpenSSH suggested a so-called "strict kex" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.</p>
<p><strong>Warning: To take effect, both the client and server must support this countermeasure.</strong> </p>
<p>As a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.</p>
<h3 id="details">Details</h3>
<p>The SSH specifications of ChaCha20-Poly1305 (<a href="mailto:chacha20-poly1305@openssh.com">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href="mailto:-etm@openssh.com">-etm@openssh.com</a> MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.</p>
<p>The attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.</p>
<p>In the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.</p>
<p>For more details see <a href="https://terrapin-attack.com">https://terrapin-attack.com</a>. </p>
<h3 id="impact">Impact</h3>
<p>This attack targets the specification of ChaCha20-Poly1305 (<a href="mailto:chacha20-poly1305@openssh.com">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href="mailto:-etm@openssh.com">-etm@openssh.com</a>), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8">https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48795">https://nvd.nist.gov/vuln/detail/CVE-2023-48795</a></li>
<li><a href="https://github.com/paramiko/paramiko/issues/2337">https://github.com/paramiko/paramiko/issues/2337</a></li>
<li><a href="https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0">https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0</a></li>
<li><a href="https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d">https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d</a></li>
<li><a href="https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951">https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951</a></li>
<li><a href="https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42">https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42</a></li>
<li><a href="https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25">https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25</a></li>
<li><a href="https://github.com/openssh/openssh-portable/commits/master">https://github.com/openssh/openssh-portable/commits/master</a></li>
<li><a href="https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst">https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst</a></li>
<li><a href="https://github.com/ronf/asyncssh/tags">https://github.com/ronf/asyncssh/tags</a></li>
<li><a href="https://github.com/warp-tech/russh/releases/tag/v0.40.2">https://github.com/warp-tech/russh/releases/tag/v0.40.2</a></li>
<li><a href="https://gitlab.com/libssh/libssh-mirror/-/tags">https://gitlab.com/libssh/libssh-mirror/-/tags</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ">https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg">https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg</a></li>
<li><a href="https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/">https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/</a></li>
<li><a href="https://matt.ucc.asn.au/dropbear/CHANGES">https://matt.ucc.asn.au/dropbear/CHANGES</a></li>
<li><a href="https://news.ycombinator.com/item?id=38684904">https://news.ycombinator.com/item?id=38684904</a></li>
<li><a href="https://news.ycombinator.com/item?id=38685286">https://news.ycombinator.com/item?id=38685286</a></li>
<li><a href="https://thorntech.com/cve-2023-48795-and-sftp-gateway/">https://thorntech.com/cve-2023-48795-and-sftp-gateway/</a></li>
<li><a href="https://twitter.com/TrueSkrillor/status/1736774389725565005">https://twitter.com/TrueSkrillor/status/1736774389725565005</a></li>
<li><a href="https://www.bitvise.com/ssh-server-version-history">https://www.bitvise.com/ssh-server-version-history</a></li>
<li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html</a></li>
<li><a href="https://www.openssh.com/openbsd.html">https://www.openssh.com/openbsd.html</a></li>
<li><a href="https://www.openssh.com/txt/release-9.6">https://www.openssh.com/txt/release-9.6</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2023/12/18/2">https://www.openwall.com/lists/oss-security/2023/12/18/2</a></li>
<li><a href="https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/">https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/</a></li>
<li><a href="https://www.terrapin-attack.com">https://www.terrapin-attack.com</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/18/3">http://www.openwall.com/lists/oss-security/2023/12/18/3</a></li>
<li><a href="https://github.com/mwiede/jsch/issues/457">https://github.com/mwiede/jsch/issues/457</a></li>
<li><a href="https://github.com/mwiede/jsch/pull/461">https://github.com/mwiede/jsch/pull/461</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2023-48795">https://access.redhat.com/security/cve/cve-2023-48795</a></li>
<li><a href="https://bugs.gentoo.org/920280">https://bugs.gentoo.org/920280</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2254210">https://bugzilla.redhat.com/show_bug.cgi?id=2254210</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1217950">https://bugzilla.suse.com/show_bug.cgi?id=1217950</a></li>
<li><a href="https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10&amp;id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6">https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10&amp;id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6</a></li>
<li><a href="https://github.com/advisories/GHSA-45x7-px36-x8w8">https://github.com/advisories/GHSA-45x7-px36-x8w8</a></li>
<li><a href="https://github.com/drakkan/sftpgo/releases/tag/v2.5.6">https://github.com/drakkan/sftpgo/releases/tag/v2.5.6</a></li>
<li><a href="https://github.com/erlang/otp/releases/tag/OTP-26.2.1">https://github.com/erlang/otp/releases/tag/OTP-26.2.1</a></li>
<li><a href="https://go.dev/cl/550715">https://go.dev/cl/550715</a></li>
<li><a href="https://go.dev/issue/64784">https://go.dev/issue/64784</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2023-48795">https://security-tracker.debian.org/tracker/CVE-2023-48795</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/libssh2">https://security-tracker.debian.org/tracker/source-package/libssh2</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg">https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg</a></li>
<li><a href="https://ubuntu.com/security/CVE-2023-48795">https://ubuntu.com/security/CVE-2023-48795</a></li>
<li><a href="https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/">https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/</a></li>
<li><a href="https://github.com/libssh2/libssh2/pull/1291">https://github.com/libssh2/libssh2/pull/1291</a></li>
<li><a href="https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5">https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5</a></li>
<li><a href="https://forum.netgate.com/topic/184941/terrapin-ssh-attack">https://forum.netgate.com/topic/184941/terrapin-ssh-attack</a></li>
<li><a href="https://github.com/rapier1/hpn-ssh/releases">https://github.com/rapier1/hpn-ssh/releases</a></li>
<li><a href="https://github.com/proftpd/proftpd/issues/456">https://github.com/proftpd/proftpd/issues/456</a></li>
<li><a href="https://github.com/NixOS/nixpkgs/pull/275249">https://github.com/NixOS/nixpkgs/pull/275249</a></li>
<li><a href="https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab">https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab</a></li>
<li><a href="https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3">https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3</a></li>
<li><a href="https://crates.io/crates/thrussh/versions">https://crates.io/crates/thrussh/versions</a></li>
<li><a href="https://github.com/TeraTermProject/teraterm/releases/tag/v5.1">https://github.com/TeraTermProject/teraterm/releases/tag/v5.1</a></li>
<li><a href="https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22">https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22</a></li>
<li><a href="https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15">https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES</a></li>
<li><a href="https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC">https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC</a></li>
<li><a href="https://oryx-embedded.com/download/#changelog">https://oryx-embedded.com/download/#changelog</a></li>
<li><a href="https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update">https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update</a></li>
<li><a href="https://www.netsarang.com/en/xshell-update-history/">https://www.netsarang.com/en/xshell-update-history/</a></li>
<li><a href="https://www.paramiko.org/changelog.html">https://www.paramiko.org/changelog.html</a></li>
<li><a href="https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/">https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/</a></li>
<li><a href="https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc">https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/19/5">http://www.openwall.com/lists/oss-security/2023/12/19/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/20/3">http://www.openwall.com/lists/oss-security/2023/12/20/3</a></li>
<li><a href="https://github.com/apache/mina-sshd/issues/445">https://github.com/apache/mina-sshd/issues/445</a></li>
<li><a href="https://github.com/hierynomus/sshj/issues/916">https://github.com/hierynomus/sshj/issues/916</a></li>
<li><a href="https://github.com/janmojzis/tinyssh/issues/81">https://github.com/janmojzis/tinyssh/issues/81</a></li>
<li><a href="https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16">https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/trilead-ssh2">https://security-tracker.debian.org/tracker/source-package/trilead-ssh2</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2023/12/20/3">https://www.openwall.com/lists/oss-security/2023/12/20/3</a></li>
<li><a href="http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html">http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html</a></li>
<li><a href="https://github.com/PowerShell/Win32-OpenSSH/issues/2189">https://github.com/PowerShell/Win32-OpenSSH/issues/2189</a></li>
<li><a href="https://github.com/cyd01/KiTTY/issues/520">https://github.com/cyd01/KiTTY/issues/520</a></li>
<li><a href="https://github.com/ssh-mitm/ssh-mitm/issues/165">https://github.com/ssh-mitm/ssh-mitm/issues/165</a></li>
<li><a href="https://filezilla-project.org/versions.php">https://filezilla-project.org/versions.php</a></li>
<li><a href="https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta">https://github.com/PowerShell/Win32-OpenSSH/releases/tag/v9.5.0.0p1-Beta</a></li>
<li><a href="https://help.panic.com/releasenotes/transmit5/">https://help.panic.com/releasenotes/transmit5/</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/12/msg00017.html">https://lists.debian.org/debian-lts-announce/2023/12/msg00017.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3CAYYW35MUTNO65RVAELICTNZZFMT2XS/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/3YQLUQWLIHDB5QCXQEX7HXHAWMOKPP5O/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/APYIXIQOVDCRWLHTGB4VYMAUIAQLKYJ3/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/F7EYCFQCTSGJXWO3ZZ44MGKFC5HA7G3Y/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/KMZCVGUGJZZVDPCVDA7TEB22VUCNEXDD/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/LZQVUHWVWRH73YBXUQJOD6CKHDQBU3DM/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/MKQRBF3DWMWPH36LBCOBUTSIZRTPEZXB/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/QI3EHAHABFQK7OABNCSF5GMYP6TONTI7/</a></li>
<li><a href="https://news.ycombinator.com/item?id=38732005">https://news.ycombinator.com/item?id=38732005</a></li>
<li><a href="https://nova.app/releases/#v11.8">https://nova.app/releases/#v11.8</a></li>
<li><a href="https://roumenpetrov.info/secsh/#news20231220">https://roumenpetrov.info/secsh/#news20231220</a></li>
<li><a href="https://security.gentoo.org/glsa/202312-16">https://security.gentoo.org/glsa/202312-16</a></li>
<li><a href="https://security.gentoo.org/glsa/202312-17">https://security.gentoo.org/glsa/202312-17</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20240105-0004/">https://security.netapp.com/advisory/ntap-20240105-0004/</a></li>
<li><a href="https://winscp.net/eng/docs/history#6.2.2">https://winscp.net/eng/docs/history#6.2.2</a></li>
<li><a href="https://www.bitvise.com/ssh-client-version-history#933">https://www.bitvise.com/ssh-client-version-history#933</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5586">https://www.debian.org/security/2023/dsa-5586</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5588">https://www.debian.org/security/2023/dsa-5588</a></li>
<li><a href="https://www.lancom-systems.de/service-support/allgemeine-sicherheitshinweise#c243508">https://www.lancom-systems.de/service-support/allgemeine-sicherheitshinweise#c243508</a></li>
<li><a href="https://www.theregister.com/2023/12/20/terrapin_attack_ssh">https://www.theregister.com/2023/12/20/terrapin_attack_ssh</a></li>
<li><a href="https://www.vandyke.com/products/securecrt/history.txt">https://www.vandyke.com/products/securecrt/history.txt</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/33XHJUB6ROFUOH2OQNENFROTVH6MHSHA/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/BL5KTLOSLH2KHRN4HCXJPK3JUVLDGEL6/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/C3AFMZ6MH2UHHOPIWT5YLSFV3D2VB3AC/</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45x7-px36-x8w8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Zerocopy: Some Ref methods are unsound with some type parameters]]></title>
        <id>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</id>
        <link href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq"/>
        <updated>2023-12-18T19:18:49.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/71">https://github.com/google/zerocopy/issues/71</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rjhf-4mh8-9xjq">https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rjhf-4mh8-9xjq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:18:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Ref methods into_ref, into_mut, into_slice, and into_slice_mut are unsound when used with cell::Ref or cell::RefMut]]></title>
        <id>https://github.com/advisories/GHSA-3mv5-343c-w2qg</id>
        <link href="https://github.com/advisories/GHSA-3mv5-343c-w2qg"/>
        <updated>2023-12-18T17:40:52.000Z</updated>
        <content type="html"><![CDATA[<p><em>This advisory is also published as <a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">RUSTSEC-2023-0074</a>.</em></p>
<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg">https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg</a></li>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3mv5-343c-w2qg">https://github.com/advisories/GHSA-3mv5-343c-w2qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mv5-343c-w2qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-15T03:48:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Ref methods into_ref, into_mut, into_slice, and into_slice_mut are unsound when used with cell::Ref or cell::RefMut]]></title>
        <id>https://github.com/advisories/GHSA-3mv5-343c-w2qg</id>
        <link href="https://github.com/advisories/GHSA-3mv5-343c-w2qg"/>
        <updated>2023-12-18T17:40:52.000Z</updated>
        <content type="html"><![CDATA[<p><em>This advisory is also published as <a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">RUSTSEC-2023-0074</a>.</em></p>
<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg">https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg</a></li>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3mv5-343c-w2qg">https://github.com/advisories/GHSA-3mv5-343c-w2qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mv5-343c-w2qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-15T03:48:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Ref methods into_ref, into_mut, into_slice, and into_slice_mut are unsound when used with cell::Ref or cell::RefMut]]></title>
        <id>https://github.com/advisories/GHSA-3mv5-343c-w2qg</id>
        <link href="https://github.com/advisories/GHSA-3mv5-343c-w2qg"/>
        <updated>2023-12-18T17:40:52.000Z</updated>
        <content type="html"><![CDATA[<p><em>This advisory is also published as <a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">RUSTSEC-2023-0074</a>.</em></p>
<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg">https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg</a></li>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3mv5-343c-w2qg">https://github.com/advisories/GHSA-3mv5-343c-w2qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mv5-343c-w2qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-15T03:48:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Ref methods into_ref, into_mut, into_slice, and into_slice_mut are unsound when used with cell::Ref or cell::RefMut]]></title>
        <id>https://github.com/advisories/GHSA-3mv5-343c-w2qg</id>
        <link href="https://github.com/advisories/GHSA-3mv5-343c-w2qg"/>
        <updated>2023-12-18T17:40:52.000Z</updated>
        <content type="html"><![CDATA[<p><em>This advisory is also published as <a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">RUSTSEC-2023-0074</a>.</em></p>
<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg">https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg</a></li>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3mv5-343c-w2qg">https://github.com/advisories/GHSA-3mv5-343c-w2qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mv5-343c-w2qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-15T03:48:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zerocopy] Ref methods into_ref, into_mut, into_slice, and into_slice_mut are unsound when used with cell::Ref or cell::RefMut]]></title>
        <id>https://github.com/advisories/GHSA-3mv5-343c-w2qg</id>
        <link href="https://github.com/advisories/GHSA-3mv5-343c-w2qg"/>
        <updated>2023-12-18T17:40:52.000Z</updated>
        <content type="html"><![CDATA[<p><em>This advisory is also published as <a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">RUSTSEC-2023-0074</a>.</em></p>
<p>The <code>Ref</code> methods <code>into_ref</code>, <code>into_mut</code>, <code>into_slice</code>, and <code>into_slice_mut</code> are unsound and may allow safe code to exhibit undefined behavior when used with <code>Ref&lt;B, T&gt;</code> where <code>B</code> is <a href="https://doc.rust-lang.org/core/cell/struct.Ref.html"><code>cell::Ref</code></a> or <a href="https://doc.rust-lang.org/core/cell/struct.RefMut.html"><code>cell::RefMut</code></a>. Note that these methods remain sound when used with <code>B</code> types other than <code>cell::Ref</code> or <code>cell::RefMut</code>.</p>
<p>See <a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a> for a more in-depth analysis.</p>
<p>The current plan is to yank the affected versions soon. See <a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a> for more detail.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg">https://github.com/google/zerocopy/security/advisories/GHSA-3mv5-343c-w2qg</a></li>
<li><a href="https://github.com/google/zerocopy/issues/679">https://github.com/google/zerocopy/issues/679</a></li>
<li><a href="https://github.com/google/zerocopy/issues/716">https://github.com/google/zerocopy/issues/716</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html">https://rustsec.org/advisories/RUSTSEC-2023-0074.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3mv5-343c-w2qg">https://github.com/advisories/GHSA-3mv5-343c-w2qg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3mv5-343c-w2qg</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-15T03:48:38.000Z</published>
    </entry>
</feed>