<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2022-06-09T00:21:54.798Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[ordered-float] ordered_float:NotNan may contain NaN after panic in assignment operators]]></title>
        <id>https://github.com/advisories/GHSA-566x-hhrf-qf8m</id>
        <link href="https://github.com/advisories/GHSA-566x-hhrf-qf8m"/>
        <updated>2022-06-08T22:33:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the ordered-float crate before 1.1.1 and 2.x before 2.0.1 for Rust. After using an assignment operators such as <code>NotNan::add_assign</code>, <code>NotNan::mul_assign</code>, etc., it was possible for the resulting <code>NotNan</code> value to contain a <code>NaN</code>. This could cause undefined behavior in safe code, because the safe <code>NotNan::cmp</code> method contains internal unsafe code that assumes the value is never <code>NaN</code>. (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35923">https://nvd.nist.gov/vuln/detail/CVE-2020-35923</a></li>
<li><a href="https://github.com/reem/rust-ordered-float/pull/71">https://github.com/reem/rust-ordered-float/pull/71</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0082.html">https://rustsec.org/advisories/RUSTSEC-2020-0082.html</a></li>
<li><a href="https://github.com/advisories/GHSA-566x-hhrf-qf8m">https://github.com/advisories/GHSA-566x-hhrf-qf8m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-566x-hhrf-qf8m</uri>
        </author>
        <published>2021-08-25T20:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ordered-float] ordered_float:NotNan may contain NaN after panic in assignment operators]]></title>
        <id>https://github.com/advisories/GHSA-566x-hhrf-qf8m</id>
        <link href="https://github.com/advisories/GHSA-566x-hhrf-qf8m"/>
        <updated>2022-06-08T22:33:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the ordered-float crate before 1.1.1 and 2.x before 2.0.1 for Rust. After using an assignment operators such as <code>NotNan::add_assign</code>, <code>NotNan::mul_assign</code>, etc., it was possible for the resulting <code>NotNan</code> value to contain a <code>NaN</code>. This could cause undefined behavior in safe code, because the safe <code>NotNan::cmp</code> method contains internal unsafe code that assumes the value is never <code>NaN</code>. (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35923">https://nvd.nist.gov/vuln/detail/CVE-2020-35923</a></li>
<li><a href="https://github.com/reem/rust-ordered-float/pull/71">https://github.com/reem/rust-ordered-float/pull/71</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0082.html">https://rustsec.org/advisories/RUSTSEC-2020-0082.html</a></li>
<li><a href="https://github.com/advisories/GHSA-566x-hhrf-qf8m">https://github.com/advisories/GHSA-566x-hhrf-qf8m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-566x-hhrf-qf8m</uri>
        </author>
        <published>2021-08-25T20:50:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[crossbeam] `MsQueue` `push`/`pop` use the wrong orderings]]></title>
        <id>https://github.com/advisories/GHSA-rwf4-gx62-rqfw</id>
        <link href="https://github.com/advisories/GHSA-rwf4-gx62-rqfw"/>
        <updated>2022-06-08T22:28:28.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions of this crate use orderings which are too weak to support this data structure.
It is likely this has caused memory corruption in the wild: <a href="https://github.com/crossbeam-rs/crossbeam/issues/97#issuecomment-412785919">https://github.com/crossbeam-rs/crossbeam/issues/97#issuecomment-412785919</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/crossbeam-rs/crossbeam/issues/97#issuecomment-412785919">https://github.com/crossbeam-rs/crossbeam/issues/97#issuecomment-412785919</a></li>
<li><a href="https://github.com/crossbeam-rs/crossbeam/pull/98">https://github.com/crossbeam-rs/crossbeam/pull/98</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0029.html">https://rustsec.org/advisories/RUSTSEC-2022-0029.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rwf4-gx62-rqfw">https://github.com/advisories/GHSA-rwf4-gx62-rqfw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rwf4-gx62-rqfw</uri>
        </author>
        <published>2022-06-08T22:28:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[miow] miow invalidly assumes the memory layout of std::net::SocketAddr]]></title>
        <id>https://github.com/advisories/GHSA-jrcf-4jp8-m28v</id>
        <link href="https://github.com/advisories/GHSA-jrcf-4jp8-m28v"/>
        <updated>2022-06-08T19:39:48.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the miow crate before 0.3.6 for Rust. It has false expectations about the std::net::SocketAddr memory representation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35921">https://nvd.nist.gov/vuln/detail/CVE-2020-35921</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/issues/38">https://github.com/yoshuawuyts/miow/issues/38</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/pull/39">https://github.com/yoshuawuyts/miow/pull/39</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0080.html">https://rustsec.org/advisories/RUSTSEC-2020-0080.html</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/pull/40">https://github.com/yoshuawuyts/miow/pull/40</a></li>
<li><a href="https://github.com/advisories/GHSA-jrcf-4jp8-m28v">https://github.com/advisories/GHSA-jrcf-4jp8-m28v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrcf-4jp8-m28v</uri>
        </author>
        <published>2021-08-25T20:50:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[miow] miow invalidly assumes the memory layout of std::net::SocketAddr]]></title>
        <id>https://github.com/advisories/GHSA-jrcf-4jp8-m28v</id>
        <link href="https://github.com/advisories/GHSA-jrcf-4jp8-m28v"/>
        <updated>2022-06-08T19:39:48.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the miow crate before 0.3.6 for Rust. It has false expectations about the std::net::SocketAddr memory representation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35921">https://nvd.nist.gov/vuln/detail/CVE-2020-35921</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/issues/38">https://github.com/yoshuawuyts/miow/issues/38</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/pull/39">https://github.com/yoshuawuyts/miow/pull/39</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0080.html">https://rustsec.org/advisories/RUSTSEC-2020-0080.html</a></li>
<li><a href="https://github.com/yoshuawuyts/miow/pull/40">https://github.com/yoshuawuyts/miow/pull/40</a></li>
<li><a href="https://github.com/advisories/GHSA-jrcf-4jp8-m28v">https://github.com/advisories/GHSA-jrcf-4jp8-m28v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jrcf-4jp8-m28v</uri>
        </author>
        <published>2021-08-25T20:50:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[im] Data races in im]]></title>
        <id>https://github.com/advisories/GHSA-q9h2-4xhf-23xx</id>
        <link href="https://github.com/advisories/GHSA-q9h2-4xhf-23xx"/>
        <updated>2022-06-07T21:32:18.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the im crate prior to 15.1.0 for Rust. Because TreeFocus does not have bounds on its Send trait or Sync trait, a data race can occur.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-36204">https://nvd.nist.gov/vuln/detail/CVE-2020-36204</a></li>
<li><a href="https://github.com/bodil/im-rs/issues/157">https://github.com/bodil/im-rs/issues/157</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0096.html">https://rustsec.org/advisories/RUSTSEC-2020-0096.html</a></li>
<li><a href="https://github.com/bodil/im-rs/pull/158">https://github.com/bodil/im-rs/pull/158</a></li>
<li><a href="https://github.com/bodil/im-rs/releases/tag/v15.1.0">https://github.com/bodil/im-rs/releases/tag/v15.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-q9h2-4xhf-23xx">https://github.com/advisories/GHSA-q9h2-4xhf-23xx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q9h2-4xhf-23xx</uri>
        </author>
        <published>2021-08-25T20:51:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[solana_rbpf] Integer overflow in solana_rbpf]]></title>
        <id>https://github.com/advisories/GHSA-ffx3-8qvm-pq3j</id>
        <link href="https://github.com/advisories/GHSA-ffx3-8qvm-pq3j"/>
        <updated>2022-06-03T21:11:18.000Z</updated>
        <content type="html"><![CDATA[<p>Solana solana_rbpf before 0.2.29 has an addition integer overflow via invalid ELF program headers. elf.rs has a panic via a malformed eBPF program.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31264">https://nvd.nist.gov/vuln/detail/CVE-2022-31264</a></li>
<li><a href="https://github.com/Ainevsia/CVE-Request/tree/main/Solana/1">https://github.com/Ainevsia/CVE-Request/tree/main/Solana/1</a></li>
<li><a href="https://github.com/solana-labs/rbpf/releases/tag/v0.2.29">https://github.com/solana-labs/rbpf/releases/tag/v0.2.29</a></li>
<li><a href="https://github.com/advisories/GHSA-ffx3-8qvm-pq3j">https://github.com/advisories/GHSA-ffx3-8qvm-pq3j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ffx3-8qvm-pq3j</uri>
        </author>
        <published>2022-05-22T00:00:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[solana_rbpf] Incorrect Calculation in solana_rbpf]]></title>
        <id>https://github.com/advisories/GHSA-9qmm-4mfr-r3wj</id>
        <link href="https://github.com/advisories/GHSA-9qmm-4mfr-r3wj"/>
        <updated>2022-05-24T21:59:58.000Z</updated>
        <content type="html"><![CDATA[<p>In Solana rBPF versions 0.2.26 and 0.2.27 are affected by Incorrect Calculation which is caused by improper implementation of sdiv instruction. This can lead to the wrong execution path, resulting in huge loss in specific cases. For example, the result of a sdiv instruction may decide whether to transfer tokens or not. The vulnerability affects both integrity and may cause serious availability problems.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23066">https://nvd.nist.gov/vuln/detail/CVE-2022-23066</a></li>
<li><a href="https://github.com/solana-labs/rbpf/commit/e61e045f8c244de978401d186dcfd50838817297">https://github.com/solana-labs/rbpf/commit/e61e045f8c244de978401d186dcfd50838817297</a></li>
<li><a href="https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-23066">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2022-23066</a></li>
<li><a href="https://github.com/advisories/GHSA-9qmm-4mfr-r3wj">https://github.com/advisories/GHSA-9qmm-4mfr-r3wj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9qmm-4mfr-r3wj</uri>
        </author>
        <published>2022-05-10T00:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[totp-rs] Observable Timing Discrepancy in totp-rs]]></title>
        <id>https://github.com/advisories/GHSA-8vxv-2g8p-2249</id>
        <link href="https://github.com/advisories/GHSA-8vxv-2g8p-2249"/>
        <updated>2022-06-08T16:31:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Token comparison was not constant time, and could theorically be used to guess value of an TOTP token, and thus reuse it in the same time window. The attacker would have to know the password beforehand nonetheless.</p>
<h3 id="patches">Patches</h3>
<p>Library now used constant-time comparison.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/constantoine/totp-rs">totp-rs</a></li>
<li>Email us at <a href="mailto:cleo.rebert@gmail.com">cleo.rebert@gmail.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249">https://github.com/constantoine/totp-rs/security/advisories/GHSA-8vxv-2g8p-2249</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29185">https://nvd.nist.gov/vuln/detail/CVE-2022-29185</a></li>
<li><a href="https://github.com/constantoine/totp-rs/issues/13">https://github.com/constantoine/totp-rs/issues/13</a></li>
<li><a href="https://github.com/constantoine/totp-rs/releases/tag/v1.1.0">https://github.com/constantoine/totp-rs/releases/tag/v1.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-8vxv-2g8p-2249">https://github.com/advisories/GHSA-8vxv-2g8p-2249</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8vxv-2g8p-2249</uri>
        </author>
        <published>2022-05-24T21:33:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Data Loss/Denial of Service in SWHKD]]></title>
        <id>https://github.com/advisories/GHSA-8m49-2xj8-67v9</id>
        <link href="https://github.com/advisories/GHSA-8m49-2xj8-67v9"/>
        <updated>2022-05-11T11:14:35.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD 1.1.5 unsafely uses the /tmp/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the <code>1.1.0</code> branch of the repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27816">https://nvd.nist.gov/vuln/detail/CVE-2022-27816</a></li>
<li><a href="https://github.com/waycrate/swhkd/commit/0b620a09605afb815c6d8d8953bbb7a10a8c0575">https://github.com/waycrate/swhkd/commit/0b620a09605afb815c6d8d8953bbb7a10a8c0575</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/1">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases/tag/1.2.0">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-8m49-2xj8-67v9">https://github.com/advisories/GHSA-8m49-2xj8-67v9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8m49-2xj8-67v9</uri>
        </author>
        <published>2022-03-31T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Insecure Temporary File in SWHKD]]></title>
        <id>https://github.com/advisories/GHSA-p4jg-pccf-h82c</id>
        <link href="https://github.com/advisories/GHSA-p4jg-pccf-h82c"/>
        <updated>2022-05-11T11:13:40.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD is a display protocol-independent hotkey daemon made in Rust. In SWHKD versions 1.1.5 and prior, SWHKD uses the /tmp/swhkd.pid pathname. As /tmp is accessible to all users, there can be an information leak or denial of service. No known workarounds exist. A patch is available on the <code>1.1.0</code> branch of the repository.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27815">https://nvd.nist.gov/vuln/detail/CVE-2022-27815</a></li>
<li><a href="https://github.com/waycrate/swhkd/commit/e661a4940df78fbb7b52c622ac4ae6a3a7f7d8aa">https://github.com/waycrate/swhkd/commit/e661a4940df78fbb7b52c622ac4ae6a3a7f7d8aa</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases">https://github.com/waycrate/swhkd/releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/1">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases/tag/1.2.0">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-p4jg-pccf-h82c">https://github.com/advisories/GHSA-p4jg-pccf-h82c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4jg-pccf-h82c</uri>
        </author>
        <published>2022-03-31T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Exposure of Resource to Wrong Sphere in Simple-Wayland-HotKey-Daemon]]></title>
        <id>https://github.com/advisories/GHSA-x446-3xhq-5xfp</id>
        <link href="https://github.com/advisories/GHSA-x446-3xhq-5xfp"/>
        <updated>2022-05-11T11:13:06.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD 1.1.5 allows arbitrary file-existence tests via the -c option.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27814">https://nvd.nist.gov/vuln/detail/CVE-2022-27814</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases">https://github.com/waycrate/swhkd/releases</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2022/04/14/1">https://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases/tag/1.2.0">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-x446-3xhq-5xfp">https://github.com/advisories/GHSA-x446-3xhq-5xfp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x446-3xhq-5xfp</uri>
        </author>
        <published>2022-04-15T00:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Infinite loop in `BN_mod_sqrt()` reachable when parsing certificates]]></title>
        <id>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</id>
        <link href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"/>
        <updated>2022-06-03T22:21:43.000Z</updated>
        <content type="html"><![CDATA[<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0778">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220315.txt">https://www.openssl.org/news/secadv/20220315.txt</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5103">https://www.debian.org/security/2022/dsa-5103</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220321-0002/">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-06">https://www.tenable.com/security/tns-2022-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-07">https://www.tenable.com/security/tns-2022-07</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-08">https://www.tenable.com/security/tns-2022-08</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0014.html">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220429-0005/">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-09">https://www.tenable.com/security/tns-2022-09</a></li>
<li><a href="https://support.apple.com/kb/HT213255">https://support.apple.com/kb/HT213255</a></li>
<li><a href="https://support.apple.com/kb/HT213256">https://support.apple.com/kb/HT213256</a></li>
<li><a href="https://support.apple.com/kb/HT213257">https://support.apple.com/kb/HT213257</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/33">http://seclists.org/fulldisclosure/2022/May/33</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/35">http://seclists.org/fulldisclosure/2022/May/35</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/38">http://seclists.org/fulldisclosure/2022/May/38</a></li>
<li><a href="http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html">http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html</a></li>
<li><a href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</uri>
        </author>
        <published>2022-03-16T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Infinite loop in `BN_mod_sqrt()` reachable when parsing certificates]]></title>
        <id>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</id>
        <link href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx"/>
        <updated>2022-06-03T22:21:43.000Z</updated>
        <content type="html"><![CDATA[<p>The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0778">https://nvd.nist.gov/vuln/detail/CVE-2022-0778</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=3118eb64934499d93db3230748a452351d1d9a65</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=380085481c64de749a6dd25cdf0bcf4360b30f83</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=a466912611aa6cbdf550cd10601390e587451246</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220315.txt">https://www.openssl.org/news/secadv/20220315.txt</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00023.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html">https://lists.debian.org/debian-lts-announce/2022/03/msg00024.html</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5103">https://www.debian.org/security/2022/dsa-5103</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220321-0002/">https://security.netapp.com/advisory/ntap-20220321-0002/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GDB3GQVJPXJE7X5C5JN6JAA4XUDWD6E6/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0002</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-06">https://www.tenable.com/security/tns-2022-06</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-07">https://www.tenable.com/security/tns-2022-07</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/323SNN6ZX7PRJJWP2BUAFLPUAE42XWLZ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/W6K3PR542DXWLEFFMFIDMME4CWMHJRMG/</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-08">https://www.tenable.com/security/tns-2022-08</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0014.html">https://rustsec.org/advisories/RUSTSEC-2022-0014.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220429-0005/">https://security.netapp.com/advisory/ntap-20220429-0005/</a></li>
<li><a href="https://www.oracle.com/security-alerts/cpuapr2022.html">https://www.oracle.com/security-alerts/cpuapr2022.html</a></li>
<li><a href="https://www.tenable.com/security/tns-2022-09">https://www.tenable.com/security/tns-2022-09</a></li>
<li><a href="https://support.apple.com/kb/HT213255">https://support.apple.com/kb/HT213255</a></li>
<li><a href="https://support.apple.com/kb/HT213256">https://support.apple.com/kb/HT213256</a></li>
<li><a href="https://support.apple.com/kb/HT213257">https://support.apple.com/kb/HT213257</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/33">http://seclists.org/fulldisclosure/2022/May/33</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/35">http://seclists.org/fulldisclosure/2022/May/35</a></li>
<li><a href="http://seclists.org/fulldisclosure/2022/May/38">http://seclists.org/fulldisclosure/2022/May/38</a></li>
<li><a href="http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html">http://packetstormsecurity.com/files/167344/OpenSSL-1.0.2-1.1.1-3.0-BN_mod_sqrt-Infinite-Loop.html</a></li>
<li><a href="https://github.com/advisories/GHSA-x3mh-jvjw-3xwx">https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3mh-jvjw-3xwx</uri>
        </author>
        <published>2022-03-16T00:00:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rand_core] Unaligned memory access in rand_core]]></title>
        <id>https://github.com/advisories/GHSA-mmc9-pwm7-qj5w</id>
        <link href="https://github.com/advisories/GHSA-mmc9-pwm7-qj5w"/>
        <updated>2022-05-02T20:41:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Affected versions of this crate violated alignment when casting byte slices to integer slices, resulting in undefined behavior. <code>rand_core::BlockRng::next_u64</code> and <code>rand_core::BlockRng::fill_bytes</code> are affected.</p>
<h3 id="patches">Patches</h3>
<p>The flaw was corrected by Ralf Jung and Diggory Hardy for <code>rand_core &gt;= 0.4.2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06">Rand's changelog</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, <a href="https://github.com/rust-random/rand/issues/new/choose">open an issue in the Rand repository</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/rust-random/rand/security/advisories/GHSA-mmc9-pwm7-qj5w">https://github.com/rust-random/rand/security/advisories/GHSA-mmc9-pwm7-qj5w</a></li>
<li><a href="https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06">https://github.com/rust-random/rand/blob/master/rand_core/CHANGELOG.md#050---2019-06-06</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0035.html">https://rustsec.org/advisories/RUSTSEC-2019-0035.html</a></li>
<li><a href="https://github.com/advisories/GHSA-mmc9-pwm7-qj5w">https://github.com/advisories/GHSA-mmc9-pwm7-qj5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mmc9-pwm7-qj5w</uri>
        </author>
        <published>2021-08-25T20:56:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rand_core] Incorrect check on buffer length in rand_core]]></title>
        <id>https://github.com/advisories/GHSA-w7j2-35mf-95p7</id>
        <link href="https://github.com/advisories/GHSA-w7j2-35mf-95p7"/>
        <updated>2022-04-29T17:25:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the rand_core crate before 0.6.2 for Rust. Because <code>read_u32_into</code> and <code>read_u64_into</code> mishandle certain buffer-length checks, a random number generator may be seeded with too little data. The vulnerability was introduced in v0.6.0. The advisory doesn't apply to earlier minor version numbers.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27378">https://nvd.nist.gov/vuln/detail/CVE-2021-27378</a></li>
<li><a href="https://github.com/rust-random/rand/pull/1096">https://github.com/rust-random/rand/pull/1096</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0023.html">https://rustsec.org/advisories/RUSTSEC-2021-0023.html</a></li>
<li><a href="https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R19">https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R19</a></li>
<li><a href="https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R28">https://github.com/rust-random/rand/compare/0.6.0...rand_core-0.6.2#diff-f41b3dfa5ce28f3bee390d327c50621e141cf3569921f8e9ca15ccfcf25263a9R28</a></li>
<li><a href="https://github.com/advisories/GHSA-w7j2-35mf-95p7">https://github.com/advisories/GHSA-w7j2-35mf-95p7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w7j2-35mf-95p7</uri>
        </author>
        <published>2021-08-25T20:52:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Exposure of Resource to Wrong Sphere in Simple-Wayland-HotKey-Daemon]]></title>
        <id>https://github.com/advisories/GHSA-h5wh-7h2j-h999</id>
        <link href="https://github.com/advisories/GHSA-h5wh-7h2j-h999"/>
        <updated>2022-04-26T13:04:23.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD 1.1.5 consumes the keyboard events of unintended users. This could potentially cause an information leak, but is usually a denial of functionality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27817">https://nvd.nist.gov/vuln/detail/CVE-2022-27817</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases">https://github.com/waycrate/swhkd/releases</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2022/04/14/1">https://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/advisories/GHSA-h5wh-7h2j-h999">https://github.com/advisories/GHSA-h5wh-7h2j-h999</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h5wh-7h2j-h999</uri>
        </author>
        <published>2022-04-15T00:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Dep Group Remote Memory Exhaustion (Denial of Service) in ckb]]></title>
        <id>https://github.com/advisories/GHSA-j35p-q24r-5367</id>
        <link href="https://github.com/advisories/GHSA-j35p-q24r-5367"/>
        <updated>2022-04-22T20:23:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A remote attacker could exploit this vulnerability to exhaust ckb process memory of an affected node.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to 0.43.1 or later.</p>
<h3 id="references">References</h3>
<p>After resolving the outpoints of one dep group, we put the corresponding content into a vec ( <a href="https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617">https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617</a> ), there is a vulnerability to a memory dos attack because there is no determination of whether the outpoints is duplicated.</p>
<p>PoC:</p>
<pre><code>before send dos tx rss:
105700

after rss:
2306932
</code></pre>
<p>DoS cost: 25.6 KB * 150 + dep_tx out_points capacity ( 36 * 150 * 100 = 540000 ) = 4380000 CKB
Send 50 dos_tx, memory exhausted: (25.6 KB * 150  * 100) * 50 = 19.2 GB</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-j35p-q24r-5367">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-j35p-q24r-5367</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617">https://github.com/nervosnetwork/ckb/blob/v0.42.0/util/types/src/core/cell.rs#L600-L617</a></li>
<li><a href="https://github.com/advisories/GHSA-j35p-q24r-5367">https://github.com/advisories/GHSA-j35p-q24r-5367</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j35p-q24r-5367</uri>
        </author>
        <published>2022-04-22T20:23:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[afire] Relative Path Traversal in afire serve_static]]></title>
        <id>https://github.com/advisories/GHSA-3227-r97m-8j95</id>
        <link href="https://github.com/advisories/GHSA-3227-r97m-8j95"/>
        <updated>2022-04-22T20:16:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability effects the built-in afire serve_static extension allowing paths containing <code>//....</code> to bypass the previous path sanitation and request files in higher directories that should not be accessible.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in <a href="https://crates.io/crates/afire/1.1.0">afire 1.1.0</a>.
If you can, just update to the newest version of afire.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you can't update afire you can simply disallow paths containing <code>/..</code> with the following middleware.
Make sure this is the last middleware added to the server so it runs first, stopping the bad requests.</p>
<pre><code class="language-rust">use afire::prelude::*;

struct PathTraversalFix;

impl Middleware for PathTraversalFix {
    fn pre(&amp;self, req: Request) -&gt; MiddleRequest {
        if req.path.replace("\\", "/").contains("/..") {
            return MiddleRequest::Send(
                Response::new()
                    .status(400)
                    .text("Paths containing `..` are not allowed"),
            );
        }

        MiddleRequest::Continue
    }
}
</code></pre>
<pre><code class="language-rust">let mut server = Server::new(host, port);
PathTraversalFix.attach(&amp;mut server);
</code></pre>
<h3 id="references">References</h3>
<p>You can read about the new changes to afire in 1.1.0 <a href="https://connorcode.com/writing/afire/update-3">here</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory you can email me or message me on discord.
[<a href="https://connorcode.com/contact">https://connorcode.com/contact</a>]</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Basicprogrammer10/afire/security/advisories/GHSA-3227-r97m-8j95">https://github.com/Basicprogrammer10/afire/security/advisories/GHSA-3227-r97m-8j95</a></li>
<li><a href="https://github.com/Basicprogrammer10/afire/commit/da7904c04f82e1cb43cc42eaf6a1dba072b5c921">https://github.com/Basicprogrammer10/afire/commit/da7904c04f82e1cb43cc42eaf6a1dba072b5c921</a></li>
<li><a href="https://github.com/Basicprogrammer10/afire/releases/tag/v1.1.0">https://github.com/Basicprogrammer10/afire/releases/tag/v1.1.0</a></li>
<li><a href="https://github.com/advisories/GHSA-3227-r97m-8j95">https://github.com/advisories/GHSA-3227-r97m-8j95</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3227-r97m-8j95</uri>
        </author>
        <published>2022-04-22T20:16:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Insecure temporary file usage in SWHKD]]></title>
        <id>https://github.com/advisories/GHSA-r3r5-jhw6-4634</id>
        <link href="https://github.com/advisories/GHSA-r3r5-jhw6-4634"/>
        <updated>2022-04-19T18:16:59.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD 1.1.5 unsafely uses the /tmp/swhkd.sock pathname. There can be an information leak or denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27818">https://nvd.nist.gov/vuln/detail/CVE-2022-27818</a></li>
<li><a href="https://github.com/waycrate/swhkd/commit/f70b99dd575fab79d8a942111a6980431f006818">https://github.com/waycrate/swhkd/commit/f70b99dd575fab79d8a942111a6980431f006818</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases/tag/1.1.7">https://github.com/waycrate/swhkd/releases/tag/1.1.7</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases">https://github.com/waycrate/swhkd/releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/1">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/advisories/GHSA-r3r5-jhw6-4634">https://github.com/advisories/GHSA-r3r5-jhw6-4634</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3r5-jhw6-4634</uri>
        </author>
        <published>2022-04-08T00:00:24.000Z</published>
    </entry>
</feed>