<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2023-08-27T04:01:29.006Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[webpki] webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</id>
        <link href="https://github.com/advisories/GHSA-8qv2-5vq6-g2g7"/>
        <updated>2023-08-25T00:12:39.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will
spend CPU time exponential with the number of candidate certificates at each
step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>This was previously reported in
<a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a> and re-reported recently
by Luke Malinowski.</p>
<p><code>rustls-webpki</code> is a fork of this crate which contains a fix for this issue
and is actively maintained.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/crypto-com/sgx-vendor">https://github.com/crypto-com/sgx-vendor</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0052.html">https://rustsec.org/advisories/RUSTSEC-2023-0052.html</a></li>
<li><a href="https://github.com/advisories/GHSA-8qv2-5vq6-g2g7">https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8qv2-5vq6-g2g7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T00:12:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[lzf] Invalid use of `mem::uninitialized` causes `use-of-uninitialized-value`]]></title>
        <id>https://github.com/advisories/GHSA-5m39-wx2q-mxg3</id>
        <link href="https://github.com/advisories/GHSA-5m39-wx2q-mxg3"/>
        <updated>2023-08-25T00:12:30.000Z</updated>
        <content type="html"><![CDATA[<p>The compression and decompression function used <code>mem:uninitialized</code> to create an array of uninitialized values, to later write values into it. This later leads to reads from uninitialized memory.</p>
<p>The flaw was corrected in commit b633bf265e41c60dfce3be7eac4e4dd5e18d06cf by using a heap-allocated <code>Vec</code> and removing out use of <code>mem::uninitialized</code>. The fix was released in v0.3.2 and v1.0.0</p>
<p>Subsequently, the crate was deprecated and its use is discouraged.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/badboy/lzf-rs/issues/9">https://github.com/badboy/lzf-rs/issues/9</a></li>
<li><a href="https://github.com/badboy/lzf-rs/commit/b633bf265e41c60dfce3be7eac4e4dd5e18d06cf">https://github.com/badboy/lzf-rs/commit/b633bf265e41c60dfce3be7eac4e4dd5e18d06cf</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0067.html">https://rustsec.org/advisories/RUSTSEC-2022-0067.html</a></li>
<li><a href="https://github.com/advisories/GHSA-5m39-wx2q-mxg3">https://github.com/advisories/GHSA-5m39-wx2q-mxg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m39-wx2q-mxg3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T21:42:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sodiumoxide] Incorrect Comparison in sodiumoxide]]></title>
        <id>https://github.com/advisories/GHSA-wrvc-72w7-xpmj</id>
        <link href="https://github.com/advisories/GHSA-wrvc-72w7-xpmj"/>
        <updated>2023-08-25T00:12:29.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the sodiumoxide crate starting with 0.2.0 and prior to 0.2.5 for Rust. <code>generichash::Digest::eq</code> compares itself to itself and thus has degenerate security properties.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25002">https://nvd.nist.gov/vuln/detail/CVE-2019-25002</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/pull/381">https://github.com/sodiumoxide/sodiumoxide/pull/381</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/pull/381/commits/fae052b834b097ced9a89a8fff8466e18f383070">https://github.com/sodiumoxide/sodiumoxide/pull/381/commits/fae052b834b097ced9a89a8fff8466e18f383070</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0026.html">https://rustsec.org/advisories/RUSTSEC-2019-0026.html</a></li>
<li><a href="https://github.com/sodiumoxide/sodiumoxide/commit/38490723927f230498adf795153e6cd3cb08b6a8">https://github.com/sodiumoxide/sodiumoxide/commit/38490723927f230498adf795153e6cd3cb08b6a8</a></li>
<li><a href="https://github.com/advisories/GHSA-wrvc-72w7-xpmj">https://github.com/advisories/GHSA-wrvc-72w7-xpmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrvc-72w7-xpmj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:45:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libsecp256k1] libsecp256k1 contains side-channel timing attack]]></title>
        <id>https://github.com/advisories/GHSA-hrjm-c879-pp86</id>
        <link href="https://github.com/advisories/GHSA-hrjm-c879-pp86"/>
        <updated>2023-08-25T00:12:25.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of libsecp256k1 prior to 0.3.1 did not execute <code>Scalar::check_overflow</code> in constant time. This allows an attacker to potentially leak information via a timing attack. The flaw was corrected by modifying <code>Scalar::check_overflow</code> to execute in constant time.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25003">https://nvd.nist.gov/vuln/detail/CVE-2019-25003</a></li>
<li><a href="https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50">https://github.com/paritytech/libsecp256k1/commit/11ba23a9766a5079918cd9f515bc100bc8164b50</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0027.html">https://rustsec.org/advisories/RUSTSEC-2019-0027.html</a></li>
<li><a href="https://github.com/advisories/GHSA-hrjm-c879-pp86">https://github.com/advisories/GHSA-hrjm-c879-pp86</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hrjm-c879-pp86</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-25T20:46:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[failure] Rust Failure Crate Vulnerable to Type confusion]]></title>
        <id>https://github.com/advisories/GHSA-r98r-j25q-rmpr</id>
        <link href="https://github.com/advisories/GHSA-r98r-j25q-rmpr"/>
        <updated>2023-08-25T00:12:20.000Z</updated>
        <content type="html"><![CDATA[<p>Safe Rust code can implement malfunctioning <code>__private_get_type_id__</code> and cause type confusion when downcasting, which is an undefined behavior.</p>
<p>Users who derive Fail trait are not affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25010">https://nvd.nist.gov/vuln/detail/CVE-2019-25010</a></li>
<li><a href="https://github.com/rust-lang-nursery/failure/issues/336">https://github.com/rust-lang-nursery/failure/issues/336</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0036.html">https://rustsec.org/advisories/RUSTSEC-2019-0036.html</a></li>
<li><a href="https://github.com/advisories/GHSA-r98r-j25q-rmpr">https://github.com/advisories/GHSA-r98r-j25q-rmpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r98r-j25q-rmpr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:46:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[failure] Type confusion if __private_get_type_id__ is overriden]]></title>
        <id>https://github.com/advisories/GHSA-jq66-xh47-j9f3</id>
        <link href="https://github.com/advisories/GHSA-jq66-xh47-j9f3"/>
        <updated>2023-08-25T00:12:19.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the failure crate through 0.1.5 for Rust. It has a type confusion flaw when downcasting. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-25575">https://nvd.nist.gov/vuln/detail/CVE-2020-25575</a></li>
<li><a href="https://github.com/rust-lang-nursery/failure/issues/336">https://github.com/rust-lang-nursery/failure/issues/336</a></li>
<li><a href="https://github.com/RustCrypto/hashes/pull/91">https://github.com/RustCrypto/hashes/pull/91</a></li>
<li><a href="https://boats.gitlab.io/blog/post/failure-to-fehler/">https://boats.gitlab.io/blog/post/failure-to-fehler/</a></li>
<li><a href="https://github.com/RustSec/advisory-db/blob/main/crates/failure/RUSTSEC-2019-0036.md">https://github.com/RustSec/advisory-db/blob/main/crates/failure/RUSTSEC-2019-0036.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0030.html">https://rustsec.org/advisories/RUSTSEC-2019-0030.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2019-0036.html">https://rustsec.org/advisories/RUSTSEC-2019-0036.html</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0036.html">https://rustsec.org/advisories/RUSTSEC-2020-0036.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jq66-xh47-j9f3">https://github.com/advisories/GHSA-jq66-xh47-j9f3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq66-xh47-j9f3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-06-16T23:06:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mail-internals] mail-internals use-after-free vulnerability in `vec_insert_bytes`]]></title>
        <id>https://github.com/advisories/GHSA-rcx8-48pc-v9q8</id>
        <link href="https://github.com/advisories/GHSA-rcx8-48pc-v9q8"/>
        <updated>2023-08-24T22:20:48.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect reallocation logic in the function <a href="https://docs.rs/mail-internals/0.2.3/mail_internals/utils/fn.vec_insert_bytes.html"><code>vec_insert_bytes</code></a> causes a use-after-free.</p>
<p>This function does not have to be called directly to trigger the vulnerability because many methods on <a href="https://docs.rs/mail-internals/0.2.3/mail_internals/encoder/struct.EncodingWriter.html"><code>EncodingWriter</code></a> call this function internally.</p>
<p>The mail-* suite is unmaintained and the upstream sources have been actively vandalised.
A fixed <code>mail-internals-ng</code> (and <code>mail-headers-ng</code> and <code>mail-core-ng</code>) crate has been published which fixes this, and a dependency on another unsound crate.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustsec/advisory-db/blob/main/crates/mail-internals/RUSTSEC-2023-0054.md">https://github.com/rustsec/advisory-db/blob/main/crates/mail-internals/RUSTSEC-2023-0054.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0054.html">https://rustsec.org/advisories/RUSTSEC-2023-0054.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rcx8-48pc-v9q8">https://github.com/advisories/GHSA-rcx8-48pc-v9q8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rcx8-48pc-v9q8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-24T22:20:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ntpd] ntpd has Dependency on Vulnerable Third-Party Component]]></title>
        <id>https://github.com/advisories/GHSA-37xq-q42p-rv3p</id>
        <link href="https://github.com/advisories/GHSA-37xq-q42p-rv3p"/>
        <updated>2023-08-24T22:18:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="during-startup-an-attacker-that-can-man-in-the-middle-traffic-to-and-from-nts-key-exchange-servers-can-trigger-a-very-expensive-key-validation-process-due-to-a-vulnerability-in-webpki">During startup, an attacker that can man-in-the-middle traffic to and from NTS key exchange servers can trigger a very expensive key validation process due to a vulnerability in webpki.</h3>
<h3 id="impact">Impact</h3>
<p>This vulnerability can lead to excessive cpu usage on startup on clients configured to use NTS</p>
<h3 id="patches">Patches</h3>
<p>Affected users are recommended to upgrade to version 0.3.7</p>
<h3 id="references">References</h3>
<p>See also <a href="https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md">https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pendulum-project/ntpd-rs/security/advisories/GHSA-37xq-q42p-rv3p">https://github.com/pendulum-project/ntpd-rs/security/advisories/GHSA-37xq-q42p-rv3p</a></li>
<li><a href="https://github.com/pendulum-project/ntpd-rs/commit/927952a440176a18f3ded132eb831ae7f7ac5c00">https://github.com/pendulum-project/ntpd-rs/commit/927952a440176a18f3ded132eb831ae7f7ac5c00</a></li>
<li><a href="https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md">https://github.com/rustsec/advisory-db/blob/main/crates/rustls-webpki/RUSTSEC-2023-0053.md</a></li>
<li><a href="https://github.com/advisories/GHSA-37xq-q42p-rv3p">https://github.com/advisories/GHSA-37xq-q42p-rv3p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-37xq-q42p-rv3p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-08-24T22:18:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[cargo] Malicious dependencies can inject arbitrary JavaScript into cargo-generated timing reports]]></title>
        <id>https://github.com/advisories/GHSA-wrrj-h57r-vx9p</id>
        <link href="https://github.com/advisories/GHSA-wrrj-h57r-vx9p"/>
        <updated>2023-08-26T16:19:40.000Z</updated>
        <content type="html"><![CDATA[<p>The Rust Security Response WG was notified that Cargo did not escape Cargo feature names when including them in the report generated by <code>cargo build --timings</code>. A malicious package included as a dependency may inject nearly arbitrary HTML here, potentially leading to XSS if the report is subsequently uploaded somewhere.</p>
<p>The severity of this vulnerability is "low" for users relying on dependencies from git, local paths, or alternative registries. Users who solely depend on crates.io are unaffected.</p>
<p>Note that <strong>by design</strong> Cargo allows code execution at build time, due to build scripts and procedural macros. The vulnerability in this advisory allows performing a subset of the possible damage in a harder to track down way. Your dependencies must still be trusted if you want to be protected from attacks, as it's possible to perform the same attacks with build scripts and procedural macros.</p>
<h1 id="overview">Overview</h1>
<p>Rust 1.60.0 <a href="https://blog.rust-lang.org/2022/04/07/Rust-1.60.0.html#cargo---timings">introduced</a> <code>cargo build --timings</code>, which produces a report of how long the different steps of the build process took. It includes lists of Cargo features for each crate.</p>
<p>Prior to Rust 1.72, Cargo feature names were allowed to contain almost any characters (with some exceptions as used by the feature syntax), but it would produce a future incompatibility warning about them <a href="https://github.com/rust-lang/cargo/pull/8814">since Rust 1.49</a>. crates.io is far more stringent about what it considers a valid feature name and has not allowed such feature names.</p>
<p>As the feature names were included unescaped in the timings report, they could be used to inject Javascript into the page, for example with a feature name like <code>features = ["&lt;img src='' onerror=alert(0)"]</code>. If this report were subsequently uploaded to a domain that uses credentials, the injected Javascript could access resources from the website visitor.</p>
<p>This issue was fixed by <a href="https://github.com/rust-lang/cargo/pull/12291">turning the future incompatibility warning into an error</a>.</p>
<h1 id="affected-versions">Affected versions</h1>
<p>The vulnerability is present in all versions of Cargo after and including 1.60.0. Rust 1.72, to be released on August 24, will include a fix for it.</p>
<p>Users whose dependencies are entirely on crates.io are unaffected.</p>
<h1 id="mitigations">Mitigations</h1>
<p>We recommend users always excercise care in which package they download, by only including trusted dependencies in their projects. Please note that even with these vulnerabilities fixed, by design Cargo allows arbitrary code execution at build time thanks to build scripts and procedural macros: a malicious dependency will be able to cause damage regardless of these vulnerabilities.</p>
<p>crates.io has server-side checks preventing this attack, and there are no packages on crates.io exploiting these vulnerabilities. crates.io users still need to excercise care in choosing their dependencies though, as remote code execution is allowed by design there as well.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rust-lang/cargo/security/advisories/GHSA-wrrj-h57r-vx9p">https://github.com/rust-lang/cargo/security/advisories/GHSA-wrrj-h57r-vx9p</a></li>
<li><a href="https://github.com/rust-lang/cargo/commit/9835622853f08be9a4b58ebe29dcec8f43b64b33">https://github.com/rust-lang/cargo/commit/9835622853f08be9a4b58ebe29dcec8f43b64b33</a></li>
<li><a href="https://github.com/rust-lang/cargo/commit/f975722a0eac934c0722f111f107c4ea2f5c4365">https://github.com/rust-lang/cargo/commit/f975722a0eac934c0722f111f107c4ea2f5c4365</a></li>
<li><a href="https://github.com/advisories/GHSA-wrrj-h57r-vx9p">https://github.com/advisories/GHSA-wrrj-h57r-vx9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrrj-h57r-vx9p</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-08-24T22:15:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rustls-webpki] rustls-webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</id>
        <link href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg"/>
        <updated>2023-08-22T18:06:20.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will spend CPU time exponential with the number of candidate certificates at each step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>We now give each path building operation a budget of 100 signature verifications.</p>
<p>The original <code>webpki</code> crate is also affected.</p>
<p>This was previously reported in the original crate <a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a> and re-reported to us recently.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3">https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3</a></li>
<li><a href="https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683">https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0053.html">https://rustsec.org/advisories/RUSTSEC-2023-0053.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg">https://github.com/advisories/GHSA-fh2r-99q2-6mmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-22T18:06:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[rustls-webpki] rustls-webpki: CPU denial of service in certificate path building]]></title>
        <id>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</id>
        <link href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg"/>
        <updated>2023-08-22T18:06:20.000Z</updated>
        <content type="html"><![CDATA[<p>When this crate is given a pathological certificate chain to validate, it will spend CPU time exponential with the number of candidate certificates at each step of path building.</p>
<p>Both TLS clients and TLS servers that accept client certificate are affected.</p>
<p>We now give each path building operation a budget of 100 signature verifications.</p>
<p>The original <code>webpki</code> crate is also affected.</p>
<p>This was previously reported in the original crate <a href="https://github.com/briansmith/webpki/issues/69">https://github.com/briansmith/webpki/issues/69</a> and re-reported to us recently.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3">https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3</a></li>
<li><a href="https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683">https://github.com/rustls/webpki/commit/dcad2406c92169b72c110dd12183fcc74035b683</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0053.html">https://rustsec.org/advisories/RUSTSEC-2023-0053.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fh2r-99q2-6mmg">https://github.com/advisories/GHSA-fh2r-99q2-6mmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fh2r-99q2-6mmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-22T18:06:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasm3] WASM3 segmentation fault]]></title>
        <id>https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</id>
        <link href="https://github.com/advisories/GHSA-gq4p-4hxv-5rg9"/>
        <updated>2023-08-18T22:45:48.000Z</updated>
        <content type="html"><![CDATA[<p>WASM3 v0.5.0 was discovered to contain a segmentation fault via the component <code>Compile_Memory_CopyFill</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-34529">https://nvd.nist.gov/vuln/detail/CVE-2022-34529</a></li>
<li><a href="https://github.com/wasm3/wasm3/issues/337">https://github.com/wasm3/wasm3/issues/337</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43057.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43057.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-gq4p-4hxv-5rg9">https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq4p-4hxv-5rg9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-07-28T00:00:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] X.509 Email Address 4-byte Buffer Overflow]]></title>
        <id>https://github.com/advisories/GHSA-8rwr-x37p-mx23</id>
        <link href="https://github.com/advisories/GHSA-8rwr-x37p-mx23"/>
        <updated>2023-08-17T05:02:52.000Z</updated>
        <content type="html"><![CDATA[<p>A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs
after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to
continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address
to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or
potentially remote code execution.</p>
<p>Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler.</p>
<p>Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible.</p>
<p>In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rustsec/advisory-db/pull/1452">https://github.com/rustsec/advisory-db/pull/1452</a></li>
<li><a href="https://github.com/alexcrichton/openssl-src-rs/commit/4a31c14f31e1a08c18893a37e304dd1dd4b7daa3">https://github.com/alexcrichton/openssl-src-rs/commit/4a31c14f31e1a08c18893a37e304dd1dd4b7daa3</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0064.html">https://rustsec.org/advisories/RUSTSEC-2022-0064.html</a></li>
<li><a href="https://www.openssl.org/news/secadv/20221101.txt">https://www.openssl.org/news/secadv/20221101.txt</a></li>
<li><a href="https://github.com/openssl/openssl/commit/fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://github.com/openssl/openssl/commit/fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3602">https://nvd.nist.gov/vuln/detail/CVE-2022-3602</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023</a></li>
<li><a href="https://security.gentoo.org/glsa/202211-01">https://security.gentoo.org/glsa/202211-01</a></li>
<li><a href="https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-W9sdCc2a">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-openssl-W9sdCc2a</a></li>
<li><a href="http://packetstormsecurity.com/files/169687/OpenSSL-Security-Advisory-20221101.html">http://packetstormsecurity.com/files/169687/OpenSSL-Security-Advisory-20221101.html</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/15">http://www.openwall.com/lists/oss-security/2022/11/01/15</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/16">http://www.openwall.com/lists/oss-security/2022/11/01/16</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/17">http://www.openwall.com/lists/oss-security/2022/11/01/17</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/18">http://www.openwall.com/lists/oss-security/2022/11/01/18</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/19">http://www.openwall.com/lists/oss-security/2022/11/01/19</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/20">http://www.openwall.com/lists/oss-security/2022/11/01/20</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/21">http://www.openwall.com/lists/oss-security/2022/11/01/21</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/01/24">http://www.openwall.com/lists/oss-security/2022/11/01/24</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/1">http://www.openwall.com/lists/oss-security/2022/11/02/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/10">http://www.openwall.com/lists/oss-security/2022/11/02/10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/11">http://www.openwall.com/lists/oss-security/2022/11/02/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/12">http://www.openwall.com/lists/oss-security/2022/11/02/12</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/2">http://www.openwall.com/lists/oss-security/2022/11/02/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/3">http://www.openwall.com/lists/oss-security/2022/11/02/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/5">http://www.openwall.com/lists/oss-security/2022/11/02/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/6">http://www.openwall.com/lists/oss-security/2022/11/02/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/7">http://www.openwall.com/lists/oss-security/2022/11/02/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/9">http://www.openwall.com/lists/oss-security/2022/11/02/9</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20221102-0001/">https://security.netapp.com/advisory/ntap-20221102-0001/</a></li>
<li><a href="https://www.kb.cert.org/vuls/id/794340">https://www.kb.cert.org/vuls/id/794340</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/13">http://www.openwall.com/lists/oss-security/2022/11/02/13</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/14">http://www.openwall.com/lists/oss-security/2022/11/02/14</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/02/15">http://www.openwall.com/lists/oss-security/2022/11/02/15</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/1">http://www.openwall.com/lists/oss-security/2022/11/03/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/2">http://www.openwall.com/lists/oss-security/2022/11/03/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/3">http://www.openwall.com/lists/oss-security/2022/11/03/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/5">http://www.openwall.com/lists/oss-security/2022/11/03/5</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fe3b639dc19b325846f4f6801f2f4604f56e3de3">https://git.openssl.org/gitweb/?p=openssl.git%3Ba=commitdiff%3Bh=fe3b639dc19b325846f4f6801f2f4604f56e3de3</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/63YRPWPUSX3MBHNPIEJZDKQT6YA7UF6S/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/">https://lists.fedoraproject.org/archives/list/package-announce%40lists.fedoraproject.org/message/DWP23EZYOBDJQP7HP4YU7W2ABU2YDITS/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/10">http://www.openwall.com/lists/oss-security/2022/11/03/10</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/11">http://www.openwall.com/lists/oss-security/2022/11/03/11</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/6">http://www.openwall.com/lists/oss-security/2022/11/03/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/7">http://www.openwall.com/lists/oss-security/2022/11/03/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/03/9">http://www.openwall.com/lists/oss-security/2022/11/03/9</a></li>
<li><a href="https://github.com/advisories/GHSA-8rwr-x37p-mx23">https://github.com/advisories/GHSA-8rwr-x37p-mx23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rwr-x37p-mx23</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-01T17:45:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sha2] Incorrect hash in sha2]]></title>
        <id>https://github.com/advisories/GHSA-fc7x-2cmc-8j2g</id>
        <link href="https://github.com/advisories/GHSA-fc7x-2cmc-8j2g"/>
        <updated>2023-08-17T05:02:41.000Z</updated>
        <content type="html"><![CDATA[<p>The v0.9.7 release of the sha2 crate introduced a new AVX2-accelerated backend which was automatically enabled for all x86/x86_64 CPUs where AVX2 support was autodetected at runtime.</p>
<p>This backend was buggy and would miscompute results for long messages (i.e. messages spanning multiple SHA blocks).</p>
<p>The crate has since been yanked, but any users who upgraded to v0.9.7 should immediately upgrade to v0.9.8 and recompute any hashes which were previously computed by v0.9.7.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-45696">https://nvd.nist.gov/vuln/detail/CVE-2021-45696</a></li>
<li><a href="https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/sha2/RUSTSEC-2021-0100.md">https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/sha2/RUSTSEC-2021-0100.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0100.html">https://rustsec.org/advisories/RUSTSEC-2021-0100.html</a></li>
<li><a href="https://github.com/RustCrypto/hashes/pull/314">https://github.com/RustCrypto/hashes/pull/314</a></li>
<li><a href="https://github.com/advisories/GHSA-fc7x-2cmc-8j2g">https://github.com/advisories/GHSA-fc7x-2cmc-8j2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fc7x-2cmc-8j2g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-01-06T22:10:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Simple-Wayland-HotKey-Daemon] Unsafe parsing in SWHKD]]></title>
        <id>https://github.com/advisories/GHSA-h6xw-mghq-7523</id>
        <link href="https://github.com/advisories/GHSA-h6xw-mghq-7523"/>
        <updated>2023-08-17T05:02:30.000Z</updated>
        <content type="html"><![CDATA[<p>SWHKD 1.1.5 allows unsafe parsing via the -c option. An information leak might occur but there is a simple denial of service (memory exhaustion) upon an attempt to parse a large or infinite file (such as a block or character device).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27819">https://nvd.nist.gov/vuln/detail/CVE-2022-27819</a></li>
<li><a href="https://github.com/waycrate/swhkd/commit/b4e6dc76f4845ab03104187a42ac6d1bbc1e0021">https://github.com/waycrate/swhkd/commit/b4e6dc76f4845ab03104187a42ac6d1bbc1e0021</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases">https://github.com/waycrate/swhkd/releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/04/14/1">http://www.openwall.com/lists/oss-security/2022/04/14/1</a></li>
<li><a href="https://github.com/waycrate/swhkd/releases/tag/1.2.0">https://github.com/waycrate/swhkd/releases/tag/1.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-h6xw-mghq-7523">https://github.com/advisories/GHSA-h6xw-mghq-7523</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6xw-mghq-7523</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-04-08T00:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasm3] WASM3 Improper Input Validation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-crf8-h2wq-2h9x</id>
        <link href="https://github.com/advisories/GHSA-crf8-h2wq-2h9x"/>
        <updated>2023-08-17T15:34:22.000Z</updated>
        <content type="html"><![CDATA[<p>WASM3 v0.5.0 was discovered to contain a segmentation fault via the component <code>op_Select_i32_srs</code> in <code>wasm3/source/m3_exec.h</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39974">https://nvd.nist.gov/vuln/detail/CVE-2022-39974</a></li>
<li><a href="https://github.com/wasm3/wasm3/issues/379">https://github.com/wasm3/wasm3/issues/379</a></li>
<li><a href="https://github.com/wasm3/wasm3/issues/344">https://github.com/wasm3/wasm3/issues/344</a></li>
<li><a href="https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43058.yaml">https://github.com/pypa/advisory-database/tree/main/vulns/pywasm3/PYSEC-2022-43058.yaml</a></li>
<li><a href="https://github.com/advisories/GHSA-crf8-h2wq-2h9x">https://github.com/advisories/GHSA-crf8-h2wq-2h9x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crf8-h2wq-2h9x</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-21T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[galois_2p8] Buffer Overflow in galois_2p8]]></title>
        <id>https://github.com/advisories/GHSA-9p8q-j6q5-mjw8</id>
        <link href="https://github.com/advisories/GHSA-9p8q-j6q5-mjw8"/>
        <updated>2023-08-17T05:02:30.000Z</updated>
        <content type="html"><![CDATA[<p>In galois_2p8 before 0.1.2, PrimitivePolynomialField::new has an off-by-one buffer overflow for a vector.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24988">https://nvd.nist.gov/vuln/detail/CVE-2022-24988</a></li>
<li><a href="https://github.com/djsweet/galois_2p8/blob/master/CHANGELOG.md">https://github.com/djsweet/galois_2p8/blob/master/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-9p8q-j6q5-mjw8">https://github.com/advisories/GHSA-9p8q-j6q5-mjw8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p8q-j6q5-mjw8</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-02-15T00:02:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Resource leakage when decoding certificates and keys]]></title>
        <id>https://github.com/advisories/GHSA-g323-fr93-4j3c</id>
        <link href="https://github.com/advisories/GHSA-g323-fr93-4j3c"/>
        <updated>2023-08-17T05:02:27.000Z</updated>
        <content type="html"><![CDATA[<p>The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1473">https://nvd.nist.gov/vuln/detail/CVE-2022-1473</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=64c85430f95200b6b51fe9475bd5203f7c19daf1">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=64c85430f95200b6b51fe9475bd5203f7c19daf1</a></li>
<li><a href="https://www.openssl.org/news/secadv/20220503.txt">https://www.openssl.org/news/secadv/20220503.txt</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220602-0009/">https://security.netapp.com/advisory/ntap-20220602-0009/</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0025.html">https://rustsec.org/advisories/RUSTSEC-2022-0025.html</a></li>
<li><a href="https://github.com/github/advisory-database/issues/405">https://github.com/github/advisory-database/issues/405</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-02">https://security.gentoo.org/glsa/202210-02</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-953464.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-953464.pdf</a></li>
<li><a href="https://github.com/advisories/GHSA-g323-fr93-4j3c">https://github.com/advisories/GHSA-g323-fr93-4j3c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g323-fr93-4j3c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-04T00:00:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[crypto2] Use of a Broken or Risky Cryptographic Algorithm in crypto2]]></title>
        <id>https://github.com/advisories/GHSA-9hfg-pxr6-q4vp</id>
        <link href="https://github.com/advisories/GHSA-9hfg-pxr6-q4vp"/>
        <updated>2023-08-17T05:02:22.000Z</updated>
        <content type="html"><![CDATA[<p>The implementation does not enforce alignment requirements on input slices while incorrectly assuming 4-byte alignment through an unsafe call to std::slice::from_raw_parts_mut, which breaks the contract and introduces undefined behavior.</p>
<p>This affects Chacha20 encryption and decryption in crypto2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-45709">https://nvd.nist.gov/vuln/detail/CVE-2021-45709</a></li>
<li><a href="https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/crypto2/RUSTSEC-2021-0121.md">https://raw.githubusercontent.com/rustsec/advisory-db/main/crates/crypto2/RUSTSEC-2021-0121.md</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0121.html">https://rustsec.org/advisories/RUSTSEC-2021-0121.html</a></li>
<li><a href="https://github.com/shadowsocks/crypto2/issues/27">https://github.com/shadowsocks/crypto2/issues/27</a></li>
<li><a href="https://github.com/advisories/GHSA-9hfg-pxr6-q4vp">https://github.com/advisories/GHSA-9hfg-pxr6-q4vp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hfg-pxr6-q4vp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-01-06T22:04:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[zola] zola Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-xvv9-5j67-3rpq</id>
        <link href="https://github.com/advisories/GHSA-xvv9-5j67-3rpq"/>
        <updated>2023-08-22T18:39:54.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in zola 0.13.0 through 0.17.2. The custom implementation of a web server, available via the "zola serve" command, allows directory traversal. The <code>handle_request</code> function, used by the server to process HTTP requests, does not account for sequences of special path control characters (<code>../</code>) in the URL when serving a file, which allows one to escape the webroot of the server and read arbitrary files from the filesystem.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40274">https://nvd.nist.gov/vuln/detail/CVE-2023-40274</a></li>
<li><a href="https://github.com/getzola/zola/issues/2257">https://github.com/getzola/zola/issues/2257</a></li>
<li><a href="https://github.com/getzola/zola/pull/2258">https://github.com/getzola/zola/pull/2258</a></li>
<li><a href="https://github.com/advisories/GHSA-xvv9-5j67-3rpq">https://github.com/advisories/GHSA-xvv9-5j67-3rpq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xvv9-5j67-3rpq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-14T03:30:32.000Z</published>
    </entry>
</feed>