<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2024-02-09T18:01:16.528Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[pqc_kyber] pqc_kyber KyberSlash: division timings depending on secrets]]></title>
        <id>https://github.com/advisories/GHSA-x5j2-g63m-f8g4</id>
        <link href="https://github.com/advisories/GHSA-x5j2-g63m-f8g4"/>
        <updated>2024-02-09T16:19:55.000Z</updated>
        <content type="html"><![CDATA[<p>Various Kyber software libraries in various environments leak secret information into timing, specifically because</p>
<ul>
<li>these libraries include a line of code that divides a secret numerator by a public denominator,</li>
<li>the number of CPU cycles for division in various environments varies depending on the inputs to the division, and</li>
<li>this variation appears within the range of numerators used in these libraries.</li>
</ul>
<p>The KyberSlash pages track which Kyber <a href="https://kyberslash.cr.yp.to/libraries.html">libraries</a> have this issue, and include a <a href="https://kyberslash.cr.yp.to/faq.html">FAQ</a> about the issue.</p>
<h2 id="author">Author</h2>
<p>The KyberSlash pages were written by Daniel J. Bernstein. The FAQ originally said "I", but some people seemed to have trouble finding this authorship statement, so the FAQ now says "Bernstein" instead.</p>
<h2 id="url">URL</h2>
<p>The permanent link for the KyberSlash pages is <a href="https://kyberslash.cr.yp.to">https://kyberslash.cr.yp.to</a>.</p>
<h2 id="mitigation-status-in-qpc_kyber-crate">Mitigation status in qpc_kyber crate</h2>
<p>The issues has not been resolved in the <code>pqc_kyber</code> crate. A third-party fork that mitigates this attack vector has been published as <a href="https://crates.io/crates/safe_pqc_kyber"><code>safe_pqc_kyber</code></a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Argyle-Software/kyber/issues/108">https://github.com/Argyle-Software/kyber/issues/108</a></li>
<li><a href="https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6">https://github.com/bwesterb/argyle-kyber/commit/b5c6ad13f4eece80e59c6ebeafd787ba1519f5f6</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0079.html">https://rustsec.org/advisories/RUSTSEC-2023-0079.html</a></li>
<li><a href="https://github.com/advisories/GHSA-x5j2-g63m-f8g4">https://github.com/advisories/GHSA-x5j2-g63m-f8g4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5j2-g63m-f8g4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-09T16:19:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serde-json-wasm] serde-json-wasm stack overflow during recursive JSON parsing]]></title>
        <id>https://github.com/advisories/GHSA-rr69-rxr6-8qwf</id>
        <link href="https://github.com/advisories/GHSA-rr69-rxr6-8qwf"/>
        <updated>2024-02-09T16:03:33.000Z</updated>
        <content type="html"><![CDATA[<p>When parsing untrusted, deeply nested JSON, the stack may overflow, possibly enabling a Denial of Service attack. This was fixed by adding a check for recursion depth.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/serde-json-wasm/commit/a9a9b9bf243862bd2afbf6853fca97f30dc4f620">https://github.com/CosmWasm/serde-json-wasm/commit/a9a9b9bf243862bd2afbf6853fca97f30dc4f620</a></li>
<li><a href="https://github.com/CosmWasm/serde-json-wasm/commit/e78f9e28b3a2151d3175ee88ab2a001bf9515429">https://github.com/CosmWasm/serde-json-wasm/commit/e78f9e28b3a2151d3175ee88ab2a001bf9515429</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2024-0012.html">https://rustsec.org/advisories/RUSTSEC-2024-0012.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr69-rxr6-8qwf">https://github.com/advisories/GHSA-rr69-rxr6-8qwf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr69-rxr6-8qwf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-09T16:03:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[serde-json-wasm] serde-json-wasm stack overflow during recursive JSON parsing]]></title>
        <id>https://github.com/advisories/GHSA-rr69-rxr6-8qwf</id>
        <link href="https://github.com/advisories/GHSA-rr69-rxr6-8qwf"/>
        <updated>2024-02-09T16:03:33.000Z</updated>
        <content type="html"><![CDATA[<p>When parsing untrusted, deeply nested JSON, the stack may overflow, possibly enabling a Denial of Service attack. This was fixed by adding a check for recursion depth.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/serde-json-wasm/commit/a9a9b9bf243862bd2afbf6853fca97f30dc4f620">https://github.com/CosmWasm/serde-json-wasm/commit/a9a9b9bf243862bd2afbf6853fca97f30dc4f620</a></li>
<li><a href="https://github.com/CosmWasm/serde-json-wasm/commit/e78f9e28b3a2151d3175ee88ab2a001bf9515429">https://github.com/CosmWasm/serde-json-wasm/commit/e78f9e28b3a2151d3175ee88ab2a001bf9515429</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2024-0012.html">https://rustsec.org/advisories/RUSTSEC-2024-0012.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rr69-rxr6-8qwf">https://github.com/advisories/GHSA-rr69-rxr6-8qwf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rr69-rxr6-8qwf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-09T16:03:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[eza] eza Potential Heap Overflow Vulnerability for AArch64]]></title>
        <id>https://github.com/advisories/GHSA-3qx3-6hxr-j2ch</id>
        <link href="https://github.com/advisories/GHSA-3qx3-6hxr-j2ch"/>
        <updated>2024-02-08T18:47:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In <code>eza</code>, there exists a potential heap overflow vulnerability, first seen when using Ubuntu for Raspberry Pi series system, on <code>ubuntu-raspi</code> kernel, relating to the <code>.git</code> directory.</p>
<h3 id="details">Details</h3>
<p>The vulnerability seems to be triggered by the <code>.git</code> directory in some projects. This issue may be related to specific files, and the directory structure also plays a role in triggering the vulnerability. Files/folders that may be involved in triggering the vulnerability include <code>.git/HEAD</code>, <code>.git/refs</code>, and <code>.git/objects</code>.</p>
<p>As @polly pointed out to me, this is likely caused by <a href="https://github.com/libgit2/libgit2/security/advisories/GHSA-j2v7-4f6v-gpg8">GHSA-j2v7-4f6v-gpg8</a>, which we do seem to use currently.</p>
<h3 id="poc">PoC</h3>
<p>For more information check @CuB3y0nd's blogpost <a href="https://www.cubeyond.net/blog/eza-cve-report">blog</a>.</p>
<h3 id="impact">Impact</h3>
<p>Arbitrary code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/eza-community/eza/security/advisories/GHSA-3qx3-6hxr-j2ch">https://github.com/eza-community/eza/security/advisories/GHSA-3qx3-6hxr-j2ch</a></li>
<li><a href="https://github.com/eza-community/eza/commit/47c9b90368c49117ba42760bd58acafa3362cbd4">https://github.com/eza-community/eza/commit/47c9b90368c49117ba42760bd58acafa3362cbd4</a></li>
<li><a href="https://github.com/advisories/GHSA-3qx3-6hxr-j2ch">https://github.com/advisories/GHSA-3qx3-6hxr-j2ch</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3qx3-6hxr-j2ch</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-08T18:47:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[svix] Svix vulnerable to improper comparison of different-length signatures]]></title>
        <id>https://github.com/advisories/GHSA-w277-wpqf-rcfv</id>
        <link href="https://github.com/advisories/GHSA-w277-wpqf-rcfv"/>
        <updated>2024-02-06T20:30:15.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Webhook::verify</code> function incorrectly compared signatures of different lengths - the two signatures would only be compared up to the length of the shorter signature. This allowed an attacker to pass in <code>v1,</code> as the signature, which would always pass verification.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/svix/svix-webhooks/pull/1190">https://github.com/svix/svix-webhooks/pull/1190</a></li>
<li><a href="https://github.com/svix/svix-webhooks/commit/958821bd3b956d1436af65f70a0964d4ffb7daf6">https://github.com/svix/svix-webhooks/commit/958821bd3b956d1436af65f70a0964d4ffb7daf6</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2024-0010.html">https://rustsec.org/advisories/RUSTSEC-2024-0010.html</a></li>
<li><a href="https://github.com/advisories/GHSA-w277-wpqf-rcfv">https://github.com/advisories/GHSA-w277-wpqf-rcfv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w277-wpqf-rcfv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-06T20:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[openssl-src] Using a Custom Cipher with `NID_undef` may lead to NULL encryption]]></title>
        <id>https://github.com/advisories/GHSA-4f63-89w9-3jjv</id>
        <link href="https://github.com/advisories/GHSA-4f63-89w9-3jjv"/>
        <updated>2024-02-05T17:02:55.000Z</updated>
        <content type="html"><![CDATA[<p>OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation function will match the NULL cipher as being equivalent and will fetch this from the available providers. This will succeed if the default provider has been loaded (or if a third party provider has been loaded that offers this cipher). Using the NULL cipher means that the plaintext is emitted as the ciphertext. Applications are only affected by this issue if they call EVP_CIPHER_meth_new() using NID_undef and subsequently use it in a call to an encryption/decryption initialisation function. Applications that only use SSL/TLS are not impacted by this issue. Fixed in OpenSSL 3.0.6 (Affected 3.0.0-3.0.5).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3358">https://nvd.nist.gov/vuln/detail/CVE-2022-3358</a></li>
<li><a href="https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=5485c56679d7c49b96e8fc8ca708b0b7e7c03c4b">https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=5485c56679d7c49b96e8fc8ca708b0b7e7c03c4b</a></li>
<li><a href="https://www.openssl.org/news/secadv/20221011.txt">https://www.openssl.org/news/secadv/20221011.txt</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2022-0059.html">https://rustsec.org/advisories/RUSTSEC-2022-0059.html</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20221028-0014/">https://security.netapp.com/advisory/ntap-20221028-0014/</a></li>
<li><a href="https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023">https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2022-0023</a></li>
<li><a href="https://security.gentoo.org/glsa/202402-08">https://security.gentoo.org/glsa/202402-08</a></li>
<li><a href="https://github.com/advisories/GHSA-4f63-89w9-3jjv">https://github.com/advisories/GHSA-4f63-89w9-3jjv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f63-89w9-3jjv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-11T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Permit load cell data from memory]]></title>
        <id>https://github.com/advisories/GHSA-29c2-65rj-h343</id>
        <link href="https://github.com/advisories/GHSA-29c2-65rj-h343"/>
        <updated>2024-02-03T00:29:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The faulty nodes will reject transactions which calls <code>load_cell_data</code> syscall but the input cell is still in the mempool. They also ban other nodes and cause the network separation.</p>
<h3 id="patches">Patches</h3>
<p>0.35.2, 0.36.1, 0.37.1, 0.38.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6">https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2">https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771">https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f">https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738">https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738</a></li>
<li><a href="https://github.com/advisories/GHSA-29c2-65rj-h343">https://github.com/advisories/GHSA-29c2-65rj-h343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29c2-65rj-h343</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Permit load cell data from memory]]></title>
        <id>https://github.com/advisories/GHSA-29c2-65rj-h343</id>
        <link href="https://github.com/advisories/GHSA-29c2-65rj-h343"/>
        <updated>2024-02-03T00:29:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The faulty nodes will reject transactions which calls <code>load_cell_data</code> syscall but the input cell is still in the mempool. They also ban other nodes and cause the network separation.</p>
<h3 id="patches">Patches</h3>
<p>0.35.2, 0.36.1, 0.37.1, 0.38.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6">https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2">https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771">https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f">https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738">https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738</a></li>
<li><a href="https://github.com/advisories/GHSA-29c2-65rj-h343">https://github.com/advisories/GHSA-29c2-65rj-h343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29c2-65rj-h343</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Permit load cell data from memory]]></title>
        <id>https://github.com/advisories/GHSA-29c2-65rj-h343</id>
        <link href="https://github.com/advisories/GHSA-29c2-65rj-h343"/>
        <updated>2024-02-03T00:29:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The faulty nodes will reject transactions which calls <code>load_cell_data</code> syscall but the input cell is still in the mempool. They also ban other nodes and cause the network separation.</p>
<h3 id="patches">Patches</h3>
<p>0.35.2, 0.36.1, 0.37.1, 0.38.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6">https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2">https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771">https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f">https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738">https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738</a></li>
<li><a href="https://github.com/advisories/GHSA-29c2-65rj-h343">https://github.com/advisories/GHSA-29c2-65rj-h343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29c2-65rj-h343</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Permit load cell data from memory]]></title>
        <id>https://github.com/advisories/GHSA-29c2-65rj-h343</id>
        <link href="https://github.com/advisories/GHSA-29c2-65rj-h343"/>
        <updated>2024-02-03T00:29:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The faulty nodes will reject transactions which calls <code>load_cell_data</code> syscall but the input cell is still in the mempool. They also ban other nodes and cause the network separation.</p>
<h3 id="patches">Patches</h3>
<p>0.35.2, 0.36.1, 0.37.1, 0.38.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6">https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2">https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771">https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f">https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738">https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738</a></li>
<li><a href="https://github.com/advisories/GHSA-29c2-65rj-h343">https://github.com/advisories/GHSA-29c2-65rj-h343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29c2-65rj-h343</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Permit load cell data from memory]]></title>
        <id>https://github.com/advisories/GHSA-29c2-65rj-h343</id>
        <link href="https://github.com/advisories/GHSA-29c2-65rj-h343"/>
        <updated>2024-02-03T00:29:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The faulty nodes will reject transactions which calls <code>load_cell_data</code> syscall but the input cell is still in the mempool. They also ban other nodes and cause the network separation.</p>
<h3 id="patches">Patches</h3>
<p>0.35.2, 0.36.1, 0.37.1, 0.38.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-29c2-65rj-h343</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6">https://github.com/nervosnetwork/ckb/commit/277061867eb7d2766fa6737c8bf00684fc2462a6</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2">https://github.com/nervosnetwork/ckb/commit/37d60d581c6713d3aca1a57018eaea45447ae0b2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771">https://github.com/nervosnetwork/ckb/commit/8f115b387f8f60f938bce4591f26cd78430b8771</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f">https://github.com/nervosnetwork/ckb/commit/91efb7b6b4329d70d60eee91d5239a2de9b0d99f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738">https://github.com/nervosnetwork/ckb/commit/97647408ee9dbf525f6c678796e770887c9f8738</a></li>
<li><a href="https://github.com/advisories/GHSA-29c2-65rj-h343">https://github.com/advisories/GHSA-29c2-65rj-h343</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-29c2-65rj-h343</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Pool does not remove the conflicting transactions from the statistics ]]></title>
        <id>https://github.com/advisories/GHSA-h4c3-5275-vrmg</id>
        <link href="https://github.com/advisories/GHSA-h4c3-5275-vrmg"/>
        <updated>2024-02-03T00:29:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There's a bug in the pool statistics that when conflicting transactions are removed from the pool, they are not subtracted from the statics. Finally, the transaction pool keeps full and reject all transactions.</p>
<h3 id="patches">Patches</h3>
<p>0.39.2</p>
<h3 id="workarounds">Workarounds</h3>
<p>Restart the CKB node.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-h4c3-5275-vrmg">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-h4c3-5275-vrmg</a></li>
<li><a href="https://github.com/advisories/GHSA-h4c3-5275-vrmg">https://github.com/advisories/GHSA-h4c3-5275-vrmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4c3-5275-vrmg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-03T00:29:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libpulse-binding] Use after free in libpulse-binding]]></title>
        <id>https://github.com/advisories/GHSA-f56g-chqp-22m9</id>
        <link href="https://github.com/advisories/GHSA-f56g-chqp-22m9"/>
        <updated>2024-02-03T00:28:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>Version 2.5.0 of the <code>libpulse-binding</code> Rust crate, released on the 22nd of December 2018, fixed a potential use-after-free issue with property list iteration due to a lack of a lifetime constraint tying the lifetime of a <code>proplist::Iterator</code> to the <code>Proplist</code> object for which it was created. This made it possible for users, without experiencing a compiler error/warning, to destroy the <code>Proplist</code> object before the iterator, thus destroying the underlying C object the iterator works upon, before the iterator may be finished with it.</p>
<p>This advisory is being written retrospectively, having previously only been noted in the changelog. No CVE assignment was sought.</p>
<p>This impacts all versions of the crate before 2.5.0 back to 1.0.5. Before version 1.0.5 the function that produces the iterator was broken to the point of being useless.</p>
<h3 id="patches">Patches</h3>
<p>Users are required to update to version 2.5.0 or newer.</p>
<p>Versions older than 2.5.0 have been yanked from crates.io as of the 22nd of October 2020.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jnqnfe/pulse-binding-rust/security/advisories/GHSA-f56g-chqp-22m9">https://github.com/jnqnfe/pulse-binding-rust/security/advisories/GHSA-f56g-chqp-22m9</a></li>
<li><a href="https://github.com/jnqnfe/pulse-binding-rust/commit/9e31c82d71749619387cb9d0c9698134d05b28c9">https://github.com/jnqnfe/pulse-binding-rust/commit/9e31c82d71749619387cb9d0c9698134d05b28c9</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2018-0020.html">https://rustsec.org/advisories/RUSTSEC-2018-0020.html</a></li>
<li><a href="https://github.com/advisories/GHSA-f56g-chqp-22m9">https://github.com/advisories/GHSA-f56g-chqp-22m9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f56g-chqp-22m9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-03T00:28:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Transaction which calls syscall load_cell_data_hash has nondeterministic result]]></title>
        <id>https://github.com/advisories/GHSA-q73f-w3h7-7wcc</id>
        <link href="https://github.com/advisories/GHSA-q73f-w3h7-7wcc"/>
        <updated>2024-02-03T00:18:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Tx-pool verify transaction which inputs' script contains <code>load_cell_data_hash</code> is nondeterministic</p>
<h3 id="workarounds">Workarounds</h3>
<p>Enforce tx-pool ResolvedTrascation inputs' load data is none.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-q73f-w3h7-7wcc">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-q73f-w3h7-7wcc</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/01eb5b2ecadf7e421b117d6c013e182978746e2f">https://github.com/nervosnetwork/ckb/commit/01eb5b2ecadf7e421b117d6c013e182978746e2f</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/fe83220905599e72c97878295f4769e91348d738">https://github.com/nervosnetwork/ckb/commit/fe83220905599e72c97878295f4769e91348d738</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/ff88b48779358e038209f3ac1bc1061e6f4deb13">https://github.com/nervosnetwork/ckb/commit/ff88b48779358e038209f3ac1bc1061e6f4deb13</a></li>
<li><a href="https://github.com/advisories/GHSA-q73f-w3h7-7wcc">https://github.com/advisories/GHSA-q73f-w3h7-7wcc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q73f-w3h7-7wcc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-02-03T00:18:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Snappy decompress length can be very large and causes out of memory error ]]></title>
        <id>https://github.com/advisories/GHSA-3gjh-29fv-8hr6</id>
        <link href="https://github.com/advisories/GHSA-3gjh-29fv-8hr6"/>
        <updated>2024-02-03T00:18:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Adversary can create message which compressed size is less than the package limit but the decompressed length is very large such as 1G. It will cost the node many memories to process the network messages, and on the system with less than 1G memory, the process is killed directly because of out of memory error.</p>
<h3 id="patches">Patches</h3>
<p>The node must check the decompress length before allocating the memory for the message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/blob/687d797f1888dd05d1f38ce6d1bef3e5b9b6e38b/network/src/compress.rs#L68">https://github.com/nervosnetwork/ckb/blob/687d797f1888dd05d1f38ce6d1bef3e5b9b6e38b/network/src/compress.rs#L68</a></li>
<li><a href="https://github.com/BurntSushi/rust-snappy/blob/master/src/decompress.rs#L106">https://github.com/BurntSushi/rust-snappy/blob/master/src/decompress.rs#L106</a></li>
<li><a href="https://github.com/BurntSushi/rust-snappy/blob/6cfb836463b9b3ac48ca7cd15d0a50d030e95769/src/decompress.rs#L30">https://github.com/BurntSushi/rust-snappy/blob/6cfb836463b9b3ac48ca7cd15d0a50d030e95769/src/decompress.rs#L30</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-3gjh-29fv-8hr6">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-3gjh-29fv-8hr6</a></li>
<li><a href="https://github.com/advisories/GHSA-3gjh-29fv-8hr6">https://github.com/advisories/GHSA-3gjh-29fv-8hr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gjh-29fv-8hr6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-03T00:18:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB Panic on malformed input]]></title>
        <id>https://github.com/advisories/GHSA-wjxc-pjx9-4wvm</id>
        <link href="https://github.com/advisories/GHSA-wjxc-pjx9-4wvm"/>
        <updated>2024-02-03T00:18:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>CKB process will panic when received malformed p2p message because of snappy, which is used to compress network messages</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/BurntSushi/rust-snappy/issues/29">https://github.com/BurntSushi/rust-snappy/issues/29</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-wjxc-pjx9-4wvm">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-wjxc-pjx9-4wvm</a></li>
<li><a href="https://github.com/advisories/GHSA-wjxc-pjx9-4wvm">https://github.com/advisories/GHSA-wjxc-pjx9-4wvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wjxc-pjx9-4wvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-03T00:18:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB node panics when processing a block which parent timestamp is too new]]></title>
        <id>https://github.com/advisories/GHSA-hjqq-29pw-96wj</id>
        <link href="https://github.com/advisories/GHSA-hjqq-29pw-96wj"/>
        <updated>2024-02-02T22:23:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Adversary can initiate DOS attack by broadcasting two consecutive blocks with timestamps in the future. </p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to v0.34.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-hjqq-29pw-96wj">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-hjqq-29pw-96wj</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/ae3c791068f2f76c67cd5483501f09de3fd8cc0b">https://github.com/nervosnetwork/ckb/commit/ae3c791068f2f76c67cd5483501f09de3fd8cc0b</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/c6725bb0659b6639f384d699f815117d76107388">https://github.com/nervosnetwork/ckb/commit/c6725bb0659b6639f384d699f815117d76107388</a></li>
<li><a href="https://github.com/advisories/GHSA-hjqq-29pw-96wj">https://github.com/advisories/GHSA-hjqq-29pw-96wj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjqq-29pw-96wj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-02T22:23:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB node panics when processing a block which parent timestamp is too new]]></title>
        <id>https://github.com/advisories/GHSA-hjqq-29pw-96wj</id>
        <link href="https://github.com/advisories/GHSA-hjqq-29pw-96wj"/>
        <updated>2024-02-02T22:23:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Adversary can initiate DOS attack by broadcasting two consecutive blocks with timestamps in the future. </p>
<h3 id="patches">Patches</h3>
<p>Please upgrade to v0.34.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-hjqq-29pw-96wj">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-hjqq-29pw-96wj</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/ae3c791068f2f76c67cd5483501f09de3fd8cc0b">https://github.com/nervosnetwork/ckb/commit/ae3c791068f2f76c67cd5483501f09de3fd8cc0b</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/c6725bb0659b6639f384d699f815117d76107388">https://github.com/nervosnetwork/ckb/commit/c6725bb0659b6639f384d699f815117d76107388</a></li>
<li><a href="https://github.com/advisories/GHSA-hjqq-29pw-96wj">https://github.com/advisories/GHSA-hjqq-29pw-96wj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hjqq-29pw-96wj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-02-02T22:23:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB BlockTimeTooNew should not be considered as invalid block]]></title>
        <id>https://github.com/advisories/GHSA-r9rv-9mh8-pxf4</id>
        <link href="https://github.com/advisories/GHSA-r9rv-9mh8-pxf4"/>
        <updated>2024-02-02T22:23:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Currently, when a node receives a block in future according to its local wall clock, it will mark the block as invalid and ban the peer. </p>
<p>If the header's timestamp is more than 15 seconds ahead of our current time. In that case, the header may become valid in the future, and we don't want to disconnect a peer merely for serving us one too-far-ahead block header, to prevent an attacker from splitting the network by mining a block right at the  15 seconds boundary.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to v0.33.1 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Don't ban peer serving too-far-ahead block header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-r9rv-9mh8-pxf4">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-r9rv-9mh8-pxf4</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/760d447c8b600df0539debe80b1625836fc72819">https://github.com/nervosnetwork/ckb/commit/760d447c8b600df0539debe80b1625836fc72819</a></li>
<li><a href="https://github.com/advisories/GHSA-r9rv-9mh8-pxf4">https://github.com/advisories/GHSA-r9rv-9mh8-pxf4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9rv-9mh8-pxf4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-02T22:23:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[ckb] Nervos CKB DoS: Process exists when p2p discovery protocol receives unsupported peer IP]]></title>
        <id>https://github.com/advisories/GHSA-pr39-8257-fxc2</id>
        <link href="https://github.com/advisories/GHSA-pr39-8257-fxc2"/>
        <updated>2024-02-02T22:22:44.000Z</updated>
        <content type="html"><![CDATA[<p>The p2p discovery protocol assumes that the peer IP must be valid IPv4 address.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nervosnetwork/ckb/security/advisories/GHSA-pr39-8257-fxc2">https://github.com/nervosnetwork/ckb/security/advisories/GHSA-pr39-8257-fxc2</a></li>
<li><a href="https://github.com/nervosnetwork/ckb/commit/d909cdebacc4747e972de4a7e5f19c8f79480361">https://github.com/nervosnetwork/ckb/commit/d909cdebacc4747e972de4a7e5f19c8f79480361</a></li>
<li><a href="https://github.com/advisories/GHSA-pr39-8257-fxc2">https://github.com/advisories/GHSA-pr39-8257-fxc2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pr39-8257-fxc2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-02T22:22:42.000Z</published>
    </entry>
</feed>