<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/rust.rss</id>
    <title>Security Advisory for Rust crates</title>
    <updated>2023-09-25T00:03:26.927Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust"/>
    <subtitle>Security Advisory for Rust crates on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[aes-gcm] AEADs/aes-gcm: Plaintext exposed in decrypt_in_place_detached even on tag verification failure]]></title>
        <id>https://github.com/advisories/GHSA-423w-p2w9-r7vq</id>
        <link href="https://github.com/advisories/GHSA-423w-p2w9-r7vq"/>
        <updated>2023-09-22T19:34:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In the AES GCM implementation of decrypt_in_place_detached, the decrypted ciphertext (i.e. the correct plaintext) is exposed even if tag verification fails. </p>
<h3 id="impact">Impact</h3>
<p>If a program using the <code>aes-gcm</code> crate's <code>decrypt_in_place*</code> APIs accesses the buffer after decryption failure, it will contain a decryption of an unauthenticated input. Depending on the specific nature of the program this may enable Chosen Ciphertext Attacks (CCAs) which can cause a catastrophic breakage of the cipher including full plaintext recovery.</p>
<h3 id="details">Details</h3>
<p>As seen in the implementation of <a href="https://docs.rs/aes-gcm/latest/src/aes_gcm/lib.rs.html#309">decrypt_in_place_detached</a> for AES GCM, if the tag verification fails, an error is returned. Because the decryption of the ciphertext is done in place, the plaintext contents are now exposed via <code>buffer</code>. </p>
<p>This should ideally not be the case - as noted in page 17 of<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf"> NIST's publication <em>Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC</em></a>: 
<em>In Step 8, the result of Step 7 is compared with the authentication tag that was received as an input: if they are identical, then the plaintext is returned; otherwise,FAIL is returned.</em></p>
<p>This is seems correctly addressed in the <a href="https://docs.rs/aes-gcm-siv/latest/src/aes_gcm_siv/lib.rs.html#307">AES GCM SIV implementation</a>, where the decrypted buffer is encrypted again before the error is returned - this fix is straightforward to implement in AES GCM. To ensure that these types of cases are covered during testing, it would be valuable to add test cases like <a href="https://github.com/google/wycheproof/blob/master/testvectors/aes_gcm_test.json#L288">23, 24 </a>etc from <a href="https://github.com/google/wycheproof">project wycheproof </a>to ensure that when a bad tag is used, there is an error on decryption <em><strong>and</strong></em> that the plaintext value is not exposed. </p>
<h3 id="poc">PoC</h3>
<p>To reproduce this issue, I'm using <a href="https://github.com/google/wycheproof/blob/master/testvectors/aes_gcm_test.json#L288">test case 23</a> from project wycheproof. </p>
<pre><code class="language-rust">    let key = GenericArray::from_slice(&amp;hex!("000102030405060708090a0b0c0d0e0f"));
    let nonce = GenericArray::from_slice(&amp;hex!("505152535455565758595a5b"));
    let tag = GenericArray::from_slice(&amp;hex!("d9847dbc326a06e988c77ad3863e6083")); // bad tag
    let mut ct = hex!("eb156d081ed6b6b55f4612f021d87b39");
    let msg = hex!("202122232425262728292a2b2c2d2e2f");
    let aad = hex!("");
    let cipher = Aes128Gcm::new(&amp;key);
    let _plaintext = cipher.decrypt_in_place_detached(&amp;nonce, &amp;aad, &amp;mut ct, &amp;tag);
    assert_eq!(ct, msg);
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/RustCrypto/AEADs/security/advisories/GHSA-423w-p2w9-r7vq">https://github.com/RustCrypto/AEADs/security/advisories/GHSA-423w-p2w9-r7vq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42811">https://nvd.nist.gov/vuln/detail/CVE-2023-42811</a></li>
<li><a href="https://docs.rs/aes-gcm/latest/src/aes_gcm/lib.rs.html#309">https://docs.rs/aes-gcm/latest/src/aes_gcm/lib.rs.html#309</a></li>
<li><a href="https://github.com/advisories/GHSA-423w-p2w9-r7vq">https://github.com/advisories/GHSA-423w-p2w9-r7vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-423w-p2w9-r7vq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-22T16:11:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tungstenite] Tungstenite allows remote attackers to cause a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-9mcr-873m-xcxp</id>
        <link href="https://github.com/advisories/GHSA-9mcr-873m-xcxp"/>
        <updated>2023-09-21T17:19:01.000Z</updated>
        <content type="html"><![CDATA[<p>The Tungstenite crate through 0.20.0 for Rust allows remote attackers to cause a denial of service (minutes of CPU consumption) via an excessive length of an HTTP header in a client handshake. The length affects both how many times a parse is attempted (e.g., thousands of times) and the average amount of data for each parse attempt (e.g., millions of bytes).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43669">https://nvd.nist.gov/vuln/detail/CVE-2023-43669</a></li>
<li><a href="https://github.com/snapview/tungstenite-rs/issues/376">https://github.com/snapview/tungstenite-rs/issues/376</a></li>
<li><a href="https://crates.io/crates/tungstenite/versions">https://crates.io/crates/tungstenite/versions</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/407.html">https://cwe.mitre.org/data/definitions/407.html</a></li>
<li><a href="https://github.com/advisories/GHSA-9mcr-873m-xcxp">https://github.com/advisories/GHSA-9mcr-873m-xcxp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9mcr-873m-xcxp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-21T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[quinn-proto] Denial of Service issue in quinn-proto]]></title>
        <id>https://github.com/advisories/GHSA-q8wc-j5m9-27w3</id>
        <link href="https://github.com/advisories/GHSA-q8wc-j5m9-27w3"/>
        <updated>2023-09-22T18:47:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Receiving unknown QUIC frames in a QUIC packet could result in a panic.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been fixed in 0.9.5 and 0.10.5 maintenance releases.</p>
<h3 id="references">References</h3>
<p>Fixed in <a href="https://github.com/quinn-rs/quinn/pull/1667">https://github.com/quinn-rs/quinn/pull/1667</a>, backported in <a href="https://github.com/quinn-rs/quinn/pull/1668">https://github.com/quinn-rs/quinn/pull/1668</a> and <a href="https://github.com/quinn-rs/quinn/pull/1669">https://github.com/quinn-rs/quinn/pull/1669</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/quinn-rs/quinn/security/advisories/GHSA-q8wc-j5m9-27w3">https://github.com/quinn-rs/quinn/security/advisories/GHSA-q8wc-j5m9-27w3</a></li>
<li><a href="https://github.com/quinn-rs/quinn/pull/1667">https://github.com/quinn-rs/quinn/pull/1667</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0063.html">https://rustsec.org/advisories/RUSTSEC-2023-0063.html</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42805">https://nvd.nist.gov/vuln/detail/CVE-2023-42805</a></li>
<li><a href="https://github.com/quinn-rs/quinn/pull/1668">https://github.com/quinn-rs/quinn/pull/1668</a></li>
<li><a href="https://github.com/quinn-rs/quinn/pull/1669">https://github.com/quinn-rs/quinn/pull/1669</a></li>
<li><a href="https://github.com/advisories/GHSA-q8wc-j5m9-27w3">https://github.com/advisories/GHSA-q8wc-j5m9-27w3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q8wc-j5m9-27w3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-21T17:16:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phonenumber] phonenumber panics on parsing crafted RF3966 inputs]]></title>
        <id>https://github.com/advisories/GHSA-whhr-7f2w-qqj2</id>
        <link href="https://github.com/advisories/GHSA-whhr-7f2w-qqj2"/>
        <updated>2023-09-22T23:36:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.</p>
<p>In a typical deployment of <code>rust-phonenumber</code>, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string <code>.;phone-context=</code>.</p>
<h3 id="patches">Patches</h3>
<p>Patches will be published as version <code>0.3.3+8.13.9</code> and backported as <code>0.2.5+8.11.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>n.a.</p>
<h3 id="references">References</h3>
<p>n.a.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2">https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42444">https://nvd.nist.gov/vuln/detail/CVE-2023-42444</a></li>
<li><a href="https://github.com/whisperfish/rust-phonenumber/commit/2dd44be94539c051b4dee55d1d9d349bd7bedde6">https://github.com/whisperfish/rust-phonenumber/commit/2dd44be94539c051b4dee55d1d9d349bd7bedde6</a></li>
<li><a href="https://github.com/whisperfish/rust-phonenumber/commit/bea8e732b9cada617ede5cf51663dba183747f71">https://github.com/whisperfish/rust-phonenumber/commit/bea8e732b9cada617ede5cf51663dba183747f71</a></li>
<li><a href="https://github.com/advisories/GHSA-whhr-7f2w-qqj2">https://github.com/advisories/GHSA-whhr-7f2w-qqj2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whhr-7f2w-qqj2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-21T17:10:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[phonenumber] phonenumber panics on parsing crafted RF3966 inputs]]></title>
        <id>https://github.com/advisories/GHSA-whhr-7f2w-qqj2</id>
        <link href="https://github.com/advisories/GHSA-whhr-7f2w-qqj2"/>
        <updated>2023-09-22T23:36:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The phonenumber parsing code may panic due to a panic-guarded out-of-bounds access on the phonenumber string.</p>
<p>In a typical deployment of <code>rust-phonenumber</code>, this may get triggered by feeding a maliciously crafted phonenumber over the network, specifically the string <code>.;phone-context=</code>.</p>
<h3 id="patches">Patches</h3>
<p>Patches will be published as version <code>0.3.3+8.13.9</code> and backported as <code>0.2.5+8.11.3</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>n.a.</p>
<h3 id="references">References</h3>
<p>n.a.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2">https://github.com/whisperfish/rust-phonenumber/security/advisories/GHSA-whhr-7f2w-qqj2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42444">https://nvd.nist.gov/vuln/detail/CVE-2023-42444</a></li>
<li><a href="https://github.com/whisperfish/rust-phonenumber/commit/2dd44be94539c051b4dee55d1d9d349bd7bedde6">https://github.com/whisperfish/rust-phonenumber/commit/2dd44be94539c051b4dee55d1d9d349bd7bedde6</a></li>
<li><a href="https://github.com/whisperfish/rust-phonenumber/commit/bea8e732b9cada617ede5cf51663dba183747f71">https://github.com/whisperfish/rust-phonenumber/commit/bea8e732b9cada617ede5cf51663dba183747f71</a></li>
<li><a href="https://github.com/advisories/GHSA-whhr-7f2w-qqj2">https://github.com/advisories/GHSA-whhr-7f2w-qqj2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-whhr-7f2w-qqj2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-21T17:10:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[blurhash] blurhash panics on parsing crafted inputs]]></title>
        <id>https://github.com/advisories/GHSA-cxvp-82cq-57h2</id>
        <link href="https://github.com/advisories/GHSA-cxvp-82cq-57h2"/>
        <updated>2023-09-21T17:10:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The blurhash parsing code may panic due to multiple panic-guarded out-of-bounds accesses on untrusted input.</p>
<p>In a typical deployment, this may get triggered by feeding a maliciously crafted blurhashes over the network. These may include:</p>
<ul>
<li>UTF-8 compliant strings containing multi-byte UTF-8 characters</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The patches will be released under version 0.2.0, which requires user intervention because of slight API churn.</p>
<h3 id="workarounds">Workarounds</h3>
<p>n.a.</p>
<h3 id="references">References</h3>
<p>n.a.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2">https://github.com/whisperfish/blurhash-rs/security/advisories/GHSA-cxvp-82cq-57h2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42447">https://nvd.nist.gov/vuln/detail/CVE-2023-42447</a></li>
<li><a href="https://github.com/whisperfish/blurhash-rs/releases/tag/v0.2.0">https://github.com/whisperfish/blurhash-rs/releases/tag/v0.2.0</a></li>
<li><a href="https://github.com/advisories/GHSA-cxvp-82cq-57h2">https://github.com/advisories/GHSA-cxvp-82cq-57h2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cxvp-82cq-57h2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-21T17:10:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sqlpage] SQLpage vulnerable to public exposure of database credentials]]></title>
        <id>https://github.com/advisories/GHSA-v5wf-jg37-r9m5</id>
        <link href="https://github.com/advisories/GHSA-v5wf-jg37-r9m5"/>
        <updated>2023-09-21T17:10:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If</p>
<ul>
<li>you are using a SQLPage version older than v0.11.1 </li>
<li>your SQLPage instance is exposed publicly</li>
<li>the database connection string is specified in the <code>sqlpage/sqlpage.json</code> configuration file (not in an environment variable)</li>
<li>the web_root is the current working directory (the default)</li>
<li>your database is exposed publicly</li>
</ul>
<p>then an attacker could retrieve the database connection information from SQLPage and use it to connect to your database directly.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to <a href="https://github.com/lovasoa/SQLpage/releases/tag/v0.11.1">v0.11.1</a> as soon as possible.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade immediately:</p>
<ul>
<li>Using an environment variable instead of the configuration file to specify the database connection string prevents exposing it on vulnerable versions.</li>
<li>Using a different <a href="https://github.com/lovasoa/SQLpage/blob/main/configuration.md">web root</a> (that is not a parent of the SQLPage configuration directory) fixes the issue.</li>
<li>And in any case, you should generally avoid exposing your database publicly</li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/lovasoa/SQLpage/issues/89">https://github.com/lovasoa/SQLpage/issues/89</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/lovasoa/SQLpage/security/advisories/GHSA-v5wf-jg37-r9m5">https://github.com/lovasoa/SQLpage/security/advisories/GHSA-v5wf-jg37-r9m5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42454">https://nvd.nist.gov/vuln/detail/CVE-2023-42454</a></li>
<li><a href="https://github.com/lovasoa/SQLpage/issues/89">https://github.com/lovasoa/SQLpage/issues/89</a></li>
<li><a href="https://github.com/lovasoa/SQLpage/releases/tag/v0.11.1">https://github.com/lovasoa/SQLpage/releases/tag/v0.11.1</a></li>
<li><a href="https://github.com/advisories/GHSA-v5wf-jg37-r9m5">https://github.com/advisories/GHSA-v5wf-jg37-r9m5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5wf-jg37-r9m5</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-21T17:10:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[sudo-rs] sudo-rs Session File Relative Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2r3c-m6v7-9354</id>
        <link href="https://github.com/advisories/GHSA-2r3c-m6v7-9354"/>
        <updated>2023-09-22T18:47:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="background">Background</h3>
<p>Sudo-rs allows users to not have to enter authentication at every sudo attempt, but instead only requiring authentication every once in a while in every terminal or process group. Only once a configurable timeout has passed will the user have to re-authenticate themselves. Supporting this functionality is a set of session files (timestamps) for each user, stored in <code>/var/run/sudo-rs/ts</code>. These files are named according to the username from which the sudo attempt is made (the origin user).</p>
<h3 id="impact">Impact</h3>
<p>An issue was discovered where usernames containing the <code>.</code> and <code>/</code> characters could result in the corruption of specific files on the filesystem. As usernames are generally not limited by the characters they can contain, a username appearing to be a relative path can be constructed. For example we could add a user to the system containing the username <code>../../../../bin/cp</code>. When logged in as a user with that name, that user could run <code>sudo -K</code> to clear their session record file. The session code then constructs the path to the session file by concatenating the username to the session file storage directory, resulting in a resolved path of <code>/bin/cp</code>. The code then clears that file, resulting in the <code>cp</code> binary effectively being removed from the system.</p>
<p>An attacker needs to be able to login as a user with a constructed username. Given that such a username is unlikely to exist on an existing system, they will also need to be able to create the users with the constructed usernames.</p>
<h3 id="patches">Patches</h3>
<p>The bug is fixed in version 0.2.1 of sudo-rs. Sudo-rs now uses the uid for the user instead of their username for determining the filename. Note that an upgrade to this version will result in existing session files being ignored and users will be forced to re-authenticate. It also fully eliminates any possibility of path traversal, given that uids are always integer values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>The <code>sudo -K</code> and <code>sudo -k</code> commands can run, even if a user has no sudo access. Make sure that your system does not contain any users with a specially crafted username. While this is the case and while untrusted users do not have the ability to create arbitrary users on your system you should not be able to exploit this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/memorysafety/sudo-rs/security/advisories/GHSA-2r3c-m6v7-9354">https://github.com/memorysafety/sudo-rs/security/advisories/GHSA-2r3c-m6v7-9354</a></li>
<li><a href="https://github.com/memorysafety/sudo-rs/commit/bfdbda22968e3de43fa8246cab1681cfd5d5493d">https://github.com/memorysafety/sudo-rs/commit/bfdbda22968e3de43fa8246cab1681cfd5d5493d</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42456">https://nvd.nist.gov/vuln/detail/CVE-2023-42456</a></li>
<li><a href="https://github.com/advisories/GHSA-2r3c-m6v7-9354">https://github.com/advisories/GHSA-2r3c-m6v7-9354</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2r3c-m6v7-9354</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-21T17:07:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[stack] Out-of-bounds write in stack]]></title>
        <id>https://github.com/advisories/GHSA-h45v-vgvp-3h5v</id>
        <link href="https://github.com/advisories/GHSA-h45v-vgvp-3h5v"/>
        <updated>2023-09-18T21:09:42.000Z</updated>
        <content type="html"><![CDATA[<p>ArrayVec::insert allows insertion of an element into the array object into the specified index. Due to a missing check on the upperbound of this index, it is possible to write out of bounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35895">https://nvd.nist.gov/vuln/detail/CVE-2020-35895</a></li>
<li><a href="https://github.com/arcnmx/stack-rs/issues/4">https://github.com/arcnmx/stack-rs/issues/4</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0042.html">https://rustsec.org/advisories/RUSTSEC-2020-0042.html</a></li>
<li><a href="https://github.com/arcnmx/stack-rs/commit/369e55736f9bd29c37b1712afc2923f4028148c6">https://github.com/arcnmx/stack-rs/commit/369e55736f9bd29c37b1712afc2923f4028148c6</a></li>
<li><a href="https://github.com/advisories/GHSA-h45v-vgvp-3h5v">https://github.com/advisories/GHSA-h45v-vgvp-3h5v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h45v-vgvp-3h5v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-08-25T20:49:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smallvec] Buffer overflow in SmallVec::insert_many]]></title>
        <id>https://github.com/advisories/GHSA-43w2-9j62-hq99</id>
        <link href="https://github.com/advisories/GHSA-43w2-9j62-hq99"/>
        <updated>2023-09-18T20:41:17.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the SmallVec::insert_many method caused it to allocate a buffer that was smaller than needed. It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap. This bug was only triggered if the iterator passed to insert_many yielded more items than the lower bound returned from its size_hint method.</p>
<p>The flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted. The fix also simplified the implementation of insert_many to use less unsafe code, so it is easier to verify its correctness.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-25900">https://nvd.nist.gov/vuln/detail/CVE-2021-25900</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0003.html">https://rustsec.org/advisories/RUSTSEC-2021-0003.html</a></li>
<li><a href="https://github.com/servo/rust-smallvec/issues/252">https://github.com/servo/rust-smallvec/issues/252</a></li>
<li><a href="https://github.com/servo/rust-smallvec/commit/5757ac500d4e544485d796b542e4e589749c291b">https://github.com/servo/rust-smallvec/commit/5757ac500d4e544485d796b542e4e589749c291b</a></li>
<li><a href="https://github.com/servo/rust-smallvec/commit/9998ba0694a6b51aa6604748b00b6a98f0a0039e">https://github.com/servo/rust-smallvec/commit/9998ba0694a6b51aa6604748b00b6a98f0a0039e</a></li>
<li><a href="https://github.com/advisories/GHSA-43w2-9j62-hq99">https://github.com/advisories/GHSA-43w2-9j62-hq99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43w2-9j62-hq99</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:40:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[smallvec] Buffer overflow in SmallVec::insert_many]]></title>
        <id>https://github.com/advisories/GHSA-43w2-9j62-hq99</id>
        <link href="https://github.com/advisories/GHSA-43w2-9j62-hq99"/>
        <updated>2023-09-18T20:41:17.000Z</updated>
        <content type="html"><![CDATA[<p>A bug in the SmallVec::insert_many method caused it to allocate a buffer that was smaller than needed. It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap. This bug was only triggered if the iterator passed to insert_many yielded more items than the lower bound returned from its size_hint method.</p>
<p>The flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted. The fix also simplified the implementation of insert_many to use less unsafe code, so it is easier to verify its correctness.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-25900">https://nvd.nist.gov/vuln/detail/CVE-2021-25900</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2021-0003.html">https://rustsec.org/advisories/RUSTSEC-2021-0003.html</a></li>
<li><a href="https://github.com/servo/rust-smallvec/issues/252">https://github.com/servo/rust-smallvec/issues/252</a></li>
<li><a href="https://github.com/servo/rust-smallvec/commit/5757ac500d4e544485d796b542e4e589749c291b">https://github.com/servo/rust-smallvec/commit/5757ac500d4e544485d796b542e4e589749c291b</a></li>
<li><a href="https://github.com/servo/rust-smallvec/commit/9998ba0694a6b51aa6604748b00b6a98f0a0039e">https://github.com/servo/rust-smallvec/commit/9998ba0694a6b51aa6604748b00b6a98f0a0039e</a></li>
<li><a href="https://github.com/advisories/GHSA-43w2-9j62-hq99">https://github.com/advisories/GHSA-43w2-9j62-hq99</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-43w2-9j62-hq99</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:40:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[pyo3] Reference counting error in pyo3]]></title>
        <id>https://github.com/advisories/GHSA-2vx6-fcw6-hpr6</id>
        <link href="https://github.com/advisories/GHSA-2vx6-fcw6-hpr6"/>
        <updated>2023-09-18T20:33:15.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in the pyo3 crate before 0.12.4 for Rust. There is a reference-counting error and use-after-free in From&lt;Py&gt;.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-35917">https://nvd.nist.gov/vuln/detail/CVE-2020-35917</a></li>
<li><a href="https://github.com/PyO3/pyo3/pull/1297">https://github.com/PyO3/pyo3/pull/1297</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2020-0074.html">https://rustsec.org/advisories/RUSTSEC-2020-0074.html</a></li>
<li><a href="https://github.com/PyO3/pyo3/commit/8f81f595dd770b586c7ca7195b42004a6c976eb9">https://github.com/PyO3/pyo3/commit/8f81f595dd770b586c7ca7195b42004a6c976eb9</a></li>
<li><a href="https://github.com/advisories/GHSA-2vx6-fcw6-hpr6">https://github.com/advisories/GHSA-2vx6-fcw6-hpr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2vx6-fcw6-hpr6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-25T20:49:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libwebp-sys] libwebp: OOB write in BuildHuffmanTable]]></title>
        <id>https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</id>
        <link href="https://github.com/advisories/GHSA-j7hp-h8jx-5ppr"/>
        <updated>2023-09-22T19:25:21.000Z</updated>
        <content type="html"><![CDATA[<p>Heap buffer overflow in libwebp allow a remote attacker to perform an out of bounds memory write via a crafted HTML page. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4863">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>
<li><a href="https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_11.html">https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_11.html</a></li>
<li><a href="https://crbug.com/1479274">https://crbug.com/1479274</a></li>
<li><a href="https://github.com/qnighy/libwebp-sys2-rs/pull/21">https://github.com/qnighy/libwebp-sys2-rs/pull/21</a></li>
<li><a href="https://github.com/qnighy/libwebp-sys2-rs/commit/4560c473a76ec8bd8c650f19ddf9d7a44f719f8b">https://github.com/qnighy/libwebp-sys2-rs/commit/4560c473a76ec8bd8c650f19ddf9d7a44f719f8b</a></li>
<li><a href="https://github.com/webmproject/libwebp/commit/902bc9190331343b2017211debcec8d2ab87e17a">https://github.com/webmproject/libwebp/commit/902bc9190331343b2017211debcec8d2ab87e17a</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1215231">https://bugzilla.suse.com/show_bug.cgi?id=1215231</a></li>
<li><a href="https://en.bandisoft.com/honeyview/history/">https://en.bandisoft.com/honeyview/history/</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-4863">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-4863</a></li>
<li><a href="https://news.ycombinator.com/item?id=37478403">https://news.ycombinator.com/item?id=37478403</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0060.html">https://rustsec.org/advisories/RUSTSEC-2023-0060.html</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2023-4863">https://security-tracker.debian.org/tracker/CVE-2023-4863</a></li>
<li><a href="https://stackdiary.com/critical-vulnerability-in-webp-codec-cve-2023-4863/">https://stackdiary.com/critical-vulnerability-in-webp-codec-cve-2023-4863/</a></li>
<li><a href="https://www.bleepingcomputer.com/news/google/google-fixes-another-chrome-zero-day-bug-exploited-in-attacks/">https://www.bleepingcomputer.com/news/google/google-fixes-another-chrome-zero-day-bug-exploited-in-attacks/</a></li>
<li><a href="https://www.mozilla.org/en-US/security/advisories/mfsa2023-40/">https://www.mozilla.org/en-US/security/advisories/mfsa2023-40/</a></li>
<li><a href="https://github.com/electron/electron/pull/39823">https://github.com/electron/electron/pull/39823</a></li>
<li><a href="https://github.com/electron/electron/pull/39825">https://github.com/electron/electron/pull/39825</a></li>
<li><a href="https://github.com/electron/electron/pull/39826">https://github.com/electron/electron/pull/39826</a></li>
<li><a href="https://github.com/electron/electron/pull/39827">https://github.com/electron/electron/pull/39827</a></li>
<li><a href="https://github.com/electron/electron/pull/39828">https://github.com/electron/electron/pull/39828</a></li>
<li><a href="https://adamcaudill.com/2023/09/14/whose-cve-is-it-anyway/">https://adamcaudill.com/2023/09/14/whose-cve-is-it-anyway/</a></li>
<li><a href="https://github.com/webmproject/libwebp/releases/tag/v1.3.2">https://github.com/webmproject/libwebp/releases/tag/v1.3.2</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00015.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00015.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00016.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00016.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00017.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00017.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6T655QF7CQ3DYAMPFV7IECQYGDEUIVVT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6T655QF7CQ3DYAMPFV7IECQYGDEUIVVT/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYYKLG6CRGEDTNRBSU26EEWAO6D6U645/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYYKLG6CRGEDTNRBSU26EEWAO6D6U645/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OZDGWWMJREPAGKWCJKSCM4WYLANSKIFX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OZDGWWMJREPAGKWCJKSCM4WYLANSKIFX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYZV7TMKF4QHZ54SFJX54BDN52VHGGCX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYZV7TMKF4QHZ54SFJX54BDN52VHGGCX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WHOLML7N2G5KCAZXFWC5IDFFHSQS5SDB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WHOLML7N2G5KCAZXFWC5IDFFHSQS5SDB/</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0061.html">https://rustsec.org/advisories/RUSTSEC-2023-0061.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202309-05">https://security.gentoo.org/glsa/202309-05</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5496">https://www.debian.org/security/2023/dsa-5496</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5497">https://www.debian.org/security/2023/dsa-5497</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5498">https://www.debian.org/security/2023/dsa-5498</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KUQ7CTX3W372X3UY56VVNAHCH6H2F4X3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KUQ7CTX3W372X3UY56VVNAHCH6H2F4X3/</a></li>
<li><a href="https://blog.isosceles.com/the-webp-0day/">https://blog.isosceles.com/the-webp-0day/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/21/4">http://www.openwall.com/lists/oss-security/2023/09/21/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/1">http://www.openwall.com/lists/oss-security/2023/09/22/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/3">http://www.openwall.com/lists/oss-security/2023/09/22/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/4">http://www.openwall.com/lists/oss-security/2023/09/22/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/5">http://www.openwall.com/lists/oss-security/2023/09/22/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/6">http://www.openwall.com/lists/oss-security/2023/09/22/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/7">http://www.openwall.com/lists/oss-security/2023/09/22/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/8">http://www.openwall.com/lists/oss-security/2023/09/22/8</a></li>
<li><a href="https://github.com/advisories/GHSA-j7hp-h8jx-5ppr">https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-12T15:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasmtime] Miscompilation of wasm `i64x2.shr_s` instruction with constant input on x86_64]]></title>
        <id>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</id>
        <link href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh"/>
        <updated>2023-09-20T19:05:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Wasmtime versions from 10.0.0 to 12.0.1 contain a miscompilation of the WebAssembly <code>i64x2.shr_s</code> instruction on x86_64 platforms when the shift amount is a constant value that is larger than 32. Only x86_64 is affected so all other targets are not affected by this. The miscompilation results in the instruction producing an incorrect result, namely the low 32-bits of the second lane of the vector are derived from the low 32-bits of the second lane of the input vector instead of the high 32-bits. The primary impact of this issue is that any WebAssembly program using the <code>i64x2.shr_s</code> with a constant shift amount larger than 32 may produce an incorrect result.</p>
<p>This issue is not an escape from the WebAssembly sandbox. Execution of WebAssembly guest programs will still behave correctly with respect to memory sandboxing and isolation from the host. Wasmtime considers non-spec-compliant behavior as a security issue nonetheless.</p>
<p>This issue was discovered through fuzzing of Wasmtime's code generator Cranelift.</p>
<h3 id="patches">Patches</h3>
<p>Wasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to no longer have this miscompilation.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This issue only affects x86_64 hosts and the only workaround is to either scan for this pattern in wasm modules which is nontrivial or to <a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">disable the SIMD proposal for WebAssembly</a>. Users prior to 10.0.0 are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">PR which introduced this bug to Wasmtime</a></li>
<li><a href="https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/B8PJgg6bEdg">Mailing list announcement</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">https://github.com/bytecodealliance/wasmtime/pull/6372</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240">https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240</a></li>
<li><a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41880">https://nvd.nist.gov/vuln/detail/CVE-2023-41880</a></li>
<li><a href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T19:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasmtime] Miscompilation of wasm `i64x2.shr_s` instruction with constant input on x86_64]]></title>
        <id>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</id>
        <link href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh"/>
        <updated>2023-09-20T19:05:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Wasmtime versions from 10.0.0 to 12.0.1 contain a miscompilation of the WebAssembly <code>i64x2.shr_s</code> instruction on x86_64 platforms when the shift amount is a constant value that is larger than 32. Only x86_64 is affected so all other targets are not affected by this. The miscompilation results in the instruction producing an incorrect result, namely the low 32-bits of the second lane of the vector are derived from the low 32-bits of the second lane of the input vector instead of the high 32-bits. The primary impact of this issue is that any WebAssembly program using the <code>i64x2.shr_s</code> with a constant shift amount larger than 32 may produce an incorrect result.</p>
<p>This issue is not an escape from the WebAssembly sandbox. Execution of WebAssembly guest programs will still behave correctly with respect to memory sandboxing and isolation from the host. Wasmtime considers non-spec-compliant behavior as a security issue nonetheless.</p>
<p>This issue was discovered through fuzzing of Wasmtime's code generator Cranelift.</p>
<h3 id="patches">Patches</h3>
<p>Wasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to no longer have this miscompilation.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This issue only affects x86_64 hosts and the only workaround is to either scan for this pattern in wasm modules which is nontrivial or to <a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">disable the SIMD proposal for WebAssembly</a>. Users prior to 10.0.0 are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">PR which introduced this bug to Wasmtime</a></li>
<li><a href="https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/B8PJgg6bEdg">Mailing list announcement</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">https://github.com/bytecodealliance/wasmtime/pull/6372</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240">https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240</a></li>
<li><a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41880">https://nvd.nist.gov/vuln/detail/CVE-2023-41880</a></li>
<li><a href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T19:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[wasmtime] Miscompilation of wasm `i64x2.shr_s` instruction with constant input on x86_64]]></title>
        <id>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</id>
        <link href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh"/>
        <updated>2023-09-20T19:05:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Wasmtime versions from 10.0.0 to 12.0.1 contain a miscompilation of the WebAssembly <code>i64x2.shr_s</code> instruction on x86_64 platforms when the shift amount is a constant value that is larger than 32. Only x86_64 is affected so all other targets are not affected by this. The miscompilation results in the instruction producing an incorrect result, namely the low 32-bits of the second lane of the vector are derived from the low 32-bits of the second lane of the input vector instead of the high 32-bits. The primary impact of this issue is that any WebAssembly program using the <code>i64x2.shr_s</code> with a constant shift amount larger than 32 may produce an incorrect result.</p>
<p>This issue is not an escape from the WebAssembly sandbox. Execution of WebAssembly guest programs will still behave correctly with respect to memory sandboxing and isolation from the host. Wasmtime considers non-spec-compliant behavior as a security issue nonetheless.</p>
<p>This issue was discovered through fuzzing of Wasmtime's code generator Cranelift.</p>
<h3 id="patches">Patches</h3>
<p>Wasmtime versions 10.0.2, 11.0.2, and 12.0.2 are all patched to no longer have this miscompilation.</p>
<h3 id="workarounds">Workarounds</h3>
<p>This issue only affects x86_64 hosts and the only workaround is to either scan for this pattern in wasm modules which is nontrivial or to <a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">disable the SIMD proposal for WebAssembly</a>. Users prior to 10.0.0 are unaffected by this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">PR which introduced this bug to Wasmtime</a></li>
<li><a href="https://groups.google.com/a/bytecodealliance.org/g/sec-announce/c/B8PJgg6bEdg">Mailing list announcement</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement">https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gw5p-q8mj-p7gh#:~:text=Mailing%20list%20announcement</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/pull/6372">https://github.com/bytecodealliance/wasmtime/pull/6372</a></li>
<li><a href="https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240">https://github.com/bytecodealliance/wasmtime/commit/8d7eda15b0badcbea83a7aac2d08f80788b59240</a></li>
<li><a href="https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_simd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41880">https://nvd.nist.gov/vuln/detail/CVE-2023-41880</a></li>
<li><a href="https://github.com/advisories/GHSA-gw5p-q8mj-p7gh">https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw5p-q8mj-p7gh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-09-14T19:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[bcder] BER/CER/DER decoder panics on invalid input]]></title>
        <id>https://github.com/advisories/GHSA-6jmw-6mxw-w4jc</id>
        <link href="https://github.com/advisories/GHSA-6jmw-6mxw-w4jc"/>
        <updated>2023-09-14T16:41:58.000Z</updated>
        <content type="html"><![CDATA[<p>NLnet Labs’ bcder library up to and including version 0.7.2 panics while decoding certain invalid input data rather than rejecting the data with an error. This can affect both the actual decoding stage as well as accessing content of types that utilized delayed decoding.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39914">https://nvd.nist.gov/vuln/detail/CVE-2023-39914</a></li>
<li><a href="https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt">https://nlnetlabs.nl/downloads/bcder/CVE-2023-39914.txt</a></li>
<li><a href="https://github.com/NLnetLabs/bcder/commit/4da91c3fd853e3d466d8581cf1d82b7f3255de56">https://github.com/NLnetLabs/bcder/commit/4da91c3fd853e3d466d8581cf1d82b7f3255de56</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0062.html">https://rustsec.org/advisories/RUSTSEC-2023-0062.html</a></li>
<li><a href="https://github.com/advisories/GHSA-6jmw-6mxw-w4jc">https://github.com/advisories/GHSA-6jmw-6mxw-w4jc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jmw-6mxw-w4jc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-13T15:31:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[libwebp-sys2] libwebp: OOB write in BuildHuffmanTable]]></title>
        <id>https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</id>
        <link href="https://github.com/advisories/GHSA-j7hp-h8jx-5ppr"/>
        <updated>2023-09-22T19:25:21.000Z</updated>
        <content type="html"><![CDATA[<p>Heap buffer overflow in libwebp allow a remote attacker to perform an out of bounds memory write via a crafted HTML page. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4863">https://nvd.nist.gov/vuln/detail/CVE-2023-4863</a></li>
<li><a href="https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_11.html">https://chromereleases.googleblog.com/2023/09/stable-channel-update-for-desktop_11.html</a></li>
<li><a href="https://crbug.com/1479274">https://crbug.com/1479274</a></li>
<li><a href="https://github.com/qnighy/libwebp-sys2-rs/pull/21">https://github.com/qnighy/libwebp-sys2-rs/pull/21</a></li>
<li><a href="https://github.com/qnighy/libwebp-sys2-rs/commit/4560c473a76ec8bd8c650f19ddf9d7a44f719f8b">https://github.com/qnighy/libwebp-sys2-rs/commit/4560c473a76ec8bd8c650f19ddf9d7a44f719f8b</a></li>
<li><a href="https://github.com/webmproject/libwebp/commit/902bc9190331343b2017211debcec8d2ab87e17a">https://github.com/webmproject/libwebp/commit/902bc9190331343b2017211debcec8d2ab87e17a</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1215231">https://bugzilla.suse.com/show_bug.cgi?id=1215231</a></li>
<li><a href="https://en.bandisoft.com/honeyview/history/">https://en.bandisoft.com/honeyview/history/</a></li>
<li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-4863">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-4863</a></li>
<li><a href="https://news.ycombinator.com/item?id=37478403">https://news.ycombinator.com/item?id=37478403</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0060.html">https://rustsec.org/advisories/RUSTSEC-2023-0060.html</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2023-4863">https://security-tracker.debian.org/tracker/CVE-2023-4863</a></li>
<li><a href="https://stackdiary.com/critical-vulnerability-in-webp-codec-cve-2023-4863/">https://stackdiary.com/critical-vulnerability-in-webp-codec-cve-2023-4863/</a></li>
<li><a href="https://www.bleepingcomputer.com/news/google/google-fixes-another-chrome-zero-day-bug-exploited-in-attacks/">https://www.bleepingcomputer.com/news/google/google-fixes-another-chrome-zero-day-bug-exploited-in-attacks/</a></li>
<li><a href="https://www.mozilla.org/en-US/security/advisories/mfsa2023-40/">https://www.mozilla.org/en-US/security/advisories/mfsa2023-40/</a></li>
<li><a href="https://github.com/electron/electron/pull/39823">https://github.com/electron/electron/pull/39823</a></li>
<li><a href="https://github.com/electron/electron/pull/39825">https://github.com/electron/electron/pull/39825</a></li>
<li><a href="https://github.com/electron/electron/pull/39826">https://github.com/electron/electron/pull/39826</a></li>
<li><a href="https://github.com/electron/electron/pull/39827">https://github.com/electron/electron/pull/39827</a></li>
<li><a href="https://github.com/electron/electron/pull/39828">https://github.com/electron/electron/pull/39828</a></li>
<li><a href="https://adamcaudill.com/2023/09/14/whose-cve-is-it-anyway/">https://adamcaudill.com/2023/09/14/whose-cve-is-it-anyway/</a></li>
<li><a href="https://github.com/webmproject/libwebp/releases/tag/v1.3.2">https://github.com/webmproject/libwebp/releases/tag/v1.3.2</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00015.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00015.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00016.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00016.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/09/msg00017.html">https://lists.debian.org/debian-lts-announce/2023/09/msg00017.html</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6T655QF7CQ3DYAMPFV7IECQYGDEUIVVT/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6T655QF7CQ3DYAMPFV7IECQYGDEUIVVT/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYYKLG6CRGEDTNRBSU26EEWAO6D6U645/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FYYKLG6CRGEDTNRBSU26EEWAO6D6U645/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OZDGWWMJREPAGKWCJKSCM4WYLANSKIFX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/OZDGWWMJREPAGKWCJKSCM4WYLANSKIFX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYZV7TMKF4QHZ54SFJX54BDN52VHGGCX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PYZV7TMKF4QHZ54SFJX54BDN52VHGGCX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WHOLML7N2G5KCAZXFWC5IDFFHSQS5SDB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WHOLML7N2G5KCAZXFWC5IDFFHSQS5SDB/</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0061.html">https://rustsec.org/advisories/RUSTSEC-2023-0061.html</a></li>
<li><a href="https://security.gentoo.org/glsa/202309-05">https://security.gentoo.org/glsa/202309-05</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5496">https://www.debian.org/security/2023/dsa-5496</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5497">https://www.debian.org/security/2023/dsa-5497</a></li>
<li><a href="https://www.debian.org/security/2023/dsa-5498">https://www.debian.org/security/2023/dsa-5498</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KUQ7CTX3W372X3UY56VVNAHCH6H2F4X3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KUQ7CTX3W372X3UY56VVNAHCH6H2F4X3/</a></li>
<li><a href="https://blog.isosceles.com/the-webp-0day/">https://blog.isosceles.com/the-webp-0day/</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/21/4">http://www.openwall.com/lists/oss-security/2023/09/21/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/1">http://www.openwall.com/lists/oss-security/2023/09/22/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/3">http://www.openwall.com/lists/oss-security/2023/09/22/3</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/4">http://www.openwall.com/lists/oss-security/2023/09/22/4</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/5">http://www.openwall.com/lists/oss-security/2023/09/22/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/6">http://www.openwall.com/lists/oss-security/2023/09/22/6</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/7">http://www.openwall.com/lists/oss-security/2023/09/22/7</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/09/22/8">http://www.openwall.com/lists/oss-security/2023/09/22/8</a></li>
<li><a href="https://github.com/advisories/GHSA-j7hp-h8jx-5ppr">https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j7hp-h8jx-5ppr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-12T15:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[inventory] Inventory exposes reference to non-Sync data to an arbitrary thread]]></title>
        <id>https://github.com/advisories/GHSA-36xm-35qq-795w</id>
        <link href="https://github.com/advisories/GHSA-36xm-35qq-795w"/>
        <updated>2023-09-11T20:44:12.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions do not enforce a <code>Sync</code> bound on the type of caller-provided value held in the plugin registry. References to these values are made accessible to arbitrary threads other than the one that constructed them.</p>
<p>A caller could use this flaw to submit thread-unsafe data into inventory, then access it as a reference simultaneously from multiple threads.</p>
<p>The flaw was corrected by enforcing that data submitted by the caller into inventory is <code>Sync</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dtolnay/inventory/pull/42">https://github.com/dtolnay/inventory/pull/42</a></li>
<li><a href="https://github.com/dtolnay/inventory/commit/e1e347d2725b9c9dd4a70b63eb08532ca9687652">https://github.com/dtolnay/inventory/commit/e1e347d2725b9c9dd4a70b63eb08532ca9687652</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0058.html">https://rustsec.org/advisories/RUSTSEC-2023-0058.html</a></li>
<li><a href="https://github.com/advisories/GHSA-36xm-35qq-795w">https://github.com/advisories/GHSA-36xm-35qq-795w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-36xm-35qq-795w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T20:43:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[users] Users vulnerable to unaligned read of `*const *const c_char` pointer]]></title>
        <id>https://github.com/advisories/GHSA-jcr6-4frq-9gjj</id>
        <link href="https://github.com/advisories/GHSA-jcr6-4frq-9gjj"/>
        <updated>2023-09-13T14:04:08.000Z</updated>
        <content type="html"><![CDATA[<p>Affected versions dereference a potentially unaligned pointer. The pointer is commonly unaligned in practice, resulting in undefined behavior.</p>
<p>In some build modes, this is observable as a panic followed by abort. In other build modes the UB may manifest in some other way, including the possibility of working correctly in some architectures.</p>
<p>The crate is not currently maintained, so a patched version is not available.</p>
<h2 id="recommended-alternatives">Recommended alternatives</h2>
<ul>
<li><a href="https://crates.io/crates/uzers"><code>uzers</code></a> (an actively maintained fork of the <code>users</code> crate)</li>
<li><a href="https://crates.io/crates/sysinfo"><code>sysinfo</code></a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ogham/rust-users/issues/55">https://github.com/ogham/rust-users/issues/55</a></li>
<li><a href="https://rustsec.org/advisories/RUSTSEC-2023-0059.html">https://rustsec.org/advisories/RUSTSEC-2023-0059.html</a></li>
<li><a href="https://github.com/advisories/GHSA-jcr6-4frq-9gjj">https://github.com/advisories/GHSA-jcr6-4frq-9gjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcr6-4frq-9gjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T20:43:31.000Z</published>
    </entry>
</feed>