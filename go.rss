<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-05-24T00:03:23.735Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium]]></title>
        <id>https://github.com/advisories/GHSA-2h44-x2wx-49f4</id>
        <link href="https://github.com/advisories/GHSA-2h44-x2wx-49f4"/>
        <updated>2023-05-22T20:33:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This issue only impacts users who:</p>
<ul>
<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>
<li>Have an allow-all rule in place that affects only one of those endpoints</li>
</ul>
<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<p>It should be rewritten to:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
    - toEndpoints:
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href="mailto:security@cilium.io">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.11.16">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.12.9">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.13.2">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2h44-x2wx-49f4">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h44-x2wx-49f4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-22T20:33:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium]]></title>
        <id>https://github.com/advisories/GHSA-2h44-x2wx-49f4</id>
        <link href="https://github.com/advisories/GHSA-2h44-x2wx-49f4"/>
        <updated>2023-05-22T20:33:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This issue only impacts users who:</p>
<ul>
<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>
<li>Have an allow-all rule in place that affects only one of those endpoints</li>
</ul>
<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<p>It should be rewritten to:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
    - toEndpoints:
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href="mailto:security@cilium.io">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.11.16">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.12.9">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.13.2">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2h44-x2wx-49f4">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h44-x2wx-49f4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-22T20:33:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Potential HTTP policy bypass when using header rules in Cilium]]></title>
        <id>https://github.com/advisories/GHSA-2h44-x2wx-49f4</id>
        <link href="https://github.com/advisories/GHSA-2h44-x2wx-49f4"/>
        <updated>2023-05-22T20:33:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This issue only impacts users who:</p>
<ul>
<li>Have a HTTP policy that applies to multiple <code>toEndpoints</code> AND</li>
<li>Have an allow-all rule in place that affects only one of those endpoints</li>
</ul>
<p>In such cases, a wildcard rule will be appended to the set of HTTP rules, which could cause bypass of HTTP policies.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in Cilium 1.11.16, 1.12.9, and 1.13.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Rewrite HTTP rules for each endpoint separately. For example, if the initial rule looks like:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<p>It should be rewritten to:</p>
<pre><code>  egress:
    - toEndpoints:
        - matchLabels:
            k8s:kind: echo
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
    - toEndpoints:
        - matchLabels:
            k8s:kind: example
      toPorts:
        - ports:
            - port: "8080"
              protocol: TCP
          rules:
            http:
              - method: "GET"
</code></pre>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @jrajahalme for investigating and fixing the issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href="mailto:security@cilium.io">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4">https://github.com/cilium/cilium/security/advisories/GHSA-2h44-x2wx-49f4</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.11.16">https://github.com/cilium/cilium/releases/tag/v1.11.16</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.12.9">https://github.com/cilium/cilium/releases/tag/v1.12.9</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.13.2">https://github.com/cilium/cilium/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2h44-x2wx-49f4">https://github.com/advisories/GHSA-2h44-x2wx-49f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h44-x2wx-49f4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-22T20:33:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ginuerzh/gost] ginuerzh/gost vulnerable to Timing Attack]]></title>
        <id>https://github.com/advisories/GHSA-qjrq-hm79-49ww</id>
        <link href="https://github.com/advisories/GHSA-qjrq-hm79-49ww"/>
        <updated>2023-05-23T16:23:06.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Timing_attack">Timing attacks</a> occur when an attacker can guess a secret by observing a difference in processing time for valid and invalid inputs. Sensitive secrets such as passwords, token and API keys should be compared only using a constant-time comparision function.
More information on this attack type can be found in <a href="https://verboselogging.com/2012/08/20/a-timing-attack-in-action">this blog post</a>. </p>
<h1 id="root-cause-analysis">Root Cause Analysis</h1>
<p>In this case, the vulnerability occurs due to the following code.</p>
<p><a href="https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46-L46">https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46-L46</a></p>
<p>Here, a untrusted input, sourced from a HTTP header, is compared directly with a secret. 
Since, this comparision is not secure, an attacker can mount a side-channel timing attack to guess the password.</p>
<h1 id="remediation">Remediation</h1>
<p>This can be easily fixed using a constant time comparing function such as <code>crypto/subtle</code>'s <code>ConstantTimeCompare</code>. 
An example fix can be found in <a href="https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820">https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820</a> Alternatively, one can apply the patch below</p>
<pre><code>From d18cff85e1a565f688f717fd8f2cacea62ff9dbf Mon Sep 17 00:00:00 2001
From: Porcupiney Hairs &lt;porcupiney.hairs@protonmail.com&gt;
Date: Sun, 7 May 2023 01:03:33 +0530
Subject: [PATCH] Fix : Timing attack

---
 auth.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/auth.go b/auth.go
index 1be96e9..be13f23 100644
--- a/auth.go
+++ b/auth.go
@@ -2,6 +2,7 @@ package gost
 
 import (
     "bufio"
+	"crypto/subtle"
     "io"
     "strings"
     "sync"
@@ -43,7 +44,8 @@ func (au *LocalAuthenticator) Authenticate(user, password string) bool {
     }
 
     v, ok := au.kvs[user]
-	return ok &amp;&amp; (v == "" || password == v)
+	passOk := subtle.ConstantTimeCompare([]byte(password), []byte(v)) == 0
+	return ok &amp;&amp; (v == "" || passOk)
 }
 
 // Add adds a key-value pair to the Authenticator.
-- 
2.25.1
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ginuerzh/gost/security/advisories/GHSA-qjrq-hm79-49ww">https://github.com/ginuerzh/gost/security/advisories/GHSA-qjrq-hm79-49ww</a></li>
<li><a href="https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46">https://github.com/ginuerzh/gost/blob/1c62376e0880e4094bd3731e06bd4f7842638f6a/auth.go#L46</a></li>
<li><a href="https://github.com/advisories/GHSA-qjrq-hm79-49ww">https://github.com/advisories/GHSA-qjrq-hm79-49ww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qjrq-hm79-49ww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-22T19:47:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gen2brain/go-unarr] Tarslip in go-unarr]]></title>
        <id>https://github.com/advisories/GHSA-v9j4-cp63-qv62</id>
        <link href="https://github.com/advisories/GHSA-v9j4-cp63-qv62"/>
        <updated>2023-05-22T15:19:59.000Z</updated>
        <content type="html"><![CDATA[<p>unarr.go in go-unarr (aka Go bindings for unarr) 0.1.1 allows Directory Traversal via ../ in a pathname within a TAR archive.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-38197">https://nvd.nist.gov/vuln/detail/CVE-2021-38197</a></li>
<li><a href="https://github.com/gen2brain/go-unarr/issues/21">https://github.com/gen2brain/go-unarr/issues/21</a></li>
<li><a href="https://github.com/gen2brain/go-unarr/commit/239ec404d348280b50bbf671327709e8857fc5f4">https://github.com/gen2brain/go-unarr/commit/239ec404d348280b50bbf671327709e8857fc5f4</a></li>
<li><a href="https://github.com/gen2brain/go-unarr/releases/tag/v0.1.4">https://github.com/gen2brain/go-unarr/releases/tag/v0.1.4</a></li>
<li><a href="https://github.com/advisories/GHSA-v9j4-cp63-qv62">https://github.com/advisories/GHSA-v9j4-cp63-qv62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v9j4-cp63-qv62</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-09-01T18:32:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dgraph-io/dgraph] Dgraph Audit Log Encryption Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-92wq-q9pq-gw47</id>
        <link href="https://github.com/advisories/GHSA-92wq-q9pq-gw47"/>
        <updated>2023-05-17T18:48:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Existing Dgraph audit logs are vulnerable to brute force attacks due to nonce collisions.  All audit logs generated by versions of Dgraph &lt;v23.0.0 are affected.</p>
<h3 id="patches">Patches</h3>
<p>This issue was patched in <a href="https://github.com/dgraph-io/dgraph/pull/8323">https://github.com/dgraph-io/dgraph/pull/8323</a>.  Dgraph users should upgrade to v23.0.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Store existing audit logs in a secure location.  For extra security, encrypt using a tool like <code>gpg</code>.</p>
<h3 id="references">References</h3>
<p>See <a href="https://github.com/dgraph-io/dgraph/pull/8323">https://github.com/dgraph-io/dgraph/pull/8323</a> for more context on the vulnerability.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dgraph-io/dgraph/security/advisories/GHSA-92wq-q9pq-gw47">https://github.com/dgraph-io/dgraph/security/advisories/GHSA-92wq-q9pq-gw47</a></li>
<li><a href="https://github.com/dgraph-io/dgraph/pull/8323">https://github.com/dgraph-io/dgraph/pull/8323</a></li>
<li><a href="https://github.com/dgraph-io/dgraph/releases/tag/v23.0.0">https://github.com/dgraph-io/dgraph/releases/tag/v23.0.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-31135">https://nvd.nist.gov/vuln/detail/CVE-2023-31135</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cryptographic_nonce">https://en.wikipedia.org/wiki/Cryptographic_nonce</a></li>
<li><a href="https://github.com/advisories/GHSA-92wq-q9pq-gw47">https://github.com/advisories/GHSA-92wq-q9pq-gw47</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-92wq-q9pq-gw47</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-17T17:07:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/etcd-io/etcd] etcd Key name can be accessed via LeaseTimeToLive API]]></title>
        <id>https://github.com/advisories/GHSA-3p4g-rcw5-8298</id>
        <link href="https://github.com/advisories/GHSA-3p4g-rcw5-8298"/>
        <updated>2023-05-12T20:19:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>LeaseTimeToLive API allows access to key names (not value) associated to a lease when <code>Keys</code> parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC).</p>
<h3 id="patches">Patches</h3>
<p>&lt; v3.4.26 and &lt; v3.5.9 are affected.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No.</p>
<h3 id="reporter">Reporter</h3>
<p>Yoni Rozenshein</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298">https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32082">https://nvd.nist.gov/vuln/detail/CVE-2023-32082</a></li>
<li><a href="https://github.com/etcd-io/etcd/pull/15656">https://github.com/etcd-io/etcd/pull/15656</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md</a></li>
<li><a href="https://github.com/advisories/GHSA-3p4g-rcw5-8298">https://github.com/advisories/GHSA-3p4g-rcw5-8298</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p4g-rcw5-8298</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-12T20:19:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/etcd-io/etcd] etcd Key name can be accessed via LeaseTimeToLive API]]></title>
        <id>https://github.com/advisories/GHSA-3p4g-rcw5-8298</id>
        <link href="https://github.com/advisories/GHSA-3p4g-rcw5-8298"/>
        <updated>2023-05-12T20:19:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>LeaseTimeToLive API allows access to key names (not value) associated to a lease when <code>Keys</code> parameter is true, even a user doesn't have read permission to the keys. The impact is limited to a cluster which enables auth (RBAC).</p>
<h3 id="patches">Patches</h3>
<p>&lt; v3.4.26 and &lt; v3.5.9 are affected.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No.</p>
<h3 id="reporter">Reporter</h3>
<p>Yoni Rozenshein</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298">https://github.com/etcd-io/etcd/security/advisories/GHSA-3p4g-rcw5-8298</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32082">https://nvd.nist.gov/vuln/detail/CVE-2023-32082</a></li>
<li><a href="https://github.com/etcd-io/etcd/pull/15656">https://github.com/etcd-io/etcd/pull/15656</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.4.md</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md">https://github.com/etcd-io/etcd/blob/main/CHANGELOG/CHANGELOG-3.5.md</a></li>
<li><a href="https://github.com/advisories/GHSA-3p4g-rcw5-8298">https://github.com/advisories/GHSA-3p4g-rcw5-8298</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3p4g-rcw5-8298</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-12T20:19:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gin-gonic/gin] Gin Web Framework does not properly sanitize filename parameter of Context.FileAttachment function]]></title>
        <id>https://github.com/advisories/GHSA-2c4m-59x9-fr2g</id>
        <link href="https://github.com/advisories/GHSA-2c4m-59x9-fr2g"/>
        <updated>2023-05-12T20:19:26.000Z</updated>
        <content type="html"><![CDATA[<p>The filename parameter of the Context.FileAttachment function is not properly sanitized. A maliciously crafted filename can cause the Content-Disposition header to be sent with an unexpected filename value or otherwise modify the Content-Disposition header. For example, a filename of "setup.bat";x=.txt" will be sent as a file named "setup.bat".</p>
<p>If the FileAttachment function is called with names provided by an untrusted source, this may permit an attacker to cause a file to be served with a name different than provided. Maliciously crafted attachment file name can modify the Content-Disposition header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gin-gonic/gin/issues/3555">https://github.com/gin-gonic/gin/issues/3555</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/3556">https://github.com/gin-gonic/gin/pull/3556</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1737">https://pkg.go.dev/vuln/GO-2023-1737</a></li>
<li><a href="https://github.com/advisories/GHSA-2c4m-59x9-fr2g">https://github.com/advisories/GHSA-2c4m-59x9-fr2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2c4m-59x9-fr2g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-12T20:19:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7g2v-2frm-rg94</id>
        <link href="https://github.com/advisories/GHSA-7g2v-2frm-rg94"/>
        <updated>2023-05-23T22:39:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2515">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7g2v-2frm-rg94">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g2v-2frm-rg94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-12T09:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7g2v-2frm-rg94</id>
        <link href="https://github.com/advisories/GHSA-7g2v-2frm-rg94"/>
        <updated>2023-05-23T22:39:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2515">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7g2v-2frm-rg94">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g2v-2frm-rg94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-12T09:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7g2v-2frm-rg94</id>
        <link href="https://github.com/advisories/GHSA-7g2v-2frm-rg94"/>
        <updated>2023-05-23T22:39:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2515">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7g2v-2frm-rg94">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g2v-2frm-rg94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-12T09:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Incorrect Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7g2v-2frm-rg94</id>
        <link href="https://github.com/advisories/GHSA-7g2v-2frm-rg94"/>
        <updated>2023-05-23T22:39:23.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to restrict a user with permissions to edit other users and to create personal access tokens from elevating their privileges to system admin</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2515">https://nvd.nist.gov/vuln/detail/CVE-2023-2515</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7g2v-2frm-rg94">https://github.com/advisories/GHSA-7g2v-2frm-rg94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7g2v-2frm-rg94</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-12T09:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/circl] Improper random reading in CIRCL]]></title>
        <id>https://github.com/advisories/GHSA-2q89-485c-9j2x</id>
        <link href="https://github.com/advisories/GHSA-2q89-485c-9j2x"/>
        <updated>2023-05-11T20:40:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether <code>crypto/rand.Read()</code> returns an error. In rare deployment cases (error thrown by the <code>Read()</code> function), this could lead to a predictable shared secret.</p>
<p>The tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides <code>crypto/rand.Reader</code>, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.</p>
<h3 id="patches">Patches</h3>
<p>The fix was introduced in CIRCL v. 1.3.3</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x">https://github.com/cloudflare/circl/security/advisories/GHSA-2q89-485c-9j2x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1732">https://nvd.nist.gov/vuln/detail/CVE-2023-1732</a></li>
<li><a href="https://github.com/cloudflare/circl/commit/ff8d91225f8954b4970b6d6382d2e4c78f4a4cf8">https://github.com/cloudflare/circl/commit/ff8d91225f8954b4970b6d6382d2e4c78f4a4cf8</a></li>
<li><a href="https://github.com/cloudflare/circl/releases/tag/v1.3.3">https://github.com/cloudflare/circl/releases/tag/v1.3.3</a></li>
<li><a href="https://github.com/advisories/GHSA-2q89-485c-9j2x">https://github.com/advisories/GHSA-2q89-485c-9j2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2q89-485c-9j2x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-11T20:40:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ipfs/kubo] github.com/ipfs/kubo affected by DOS Bitswap unbounded persistent memory leak]]></title>
        <id>https://github.com/advisories/GHSA-qvqg-6rp8-4p9h</id>
        <link href="https://github.com/advisories/GHSA-qvqg-6rp8-4p9h"/>
        <updated>2023-05-11T20:40:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many <code>WANT_BLOCK</code> and or <code>WANT_HAVE</code> requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.</p>
<p>This affects users accepting or connecting untrusted connections such as by running in the public swarm and no pnet config.
Nodes that are not publicly reachable but connects to untrusted nodes are also vulnerable to the untrusted nodes being connected to since libp2p connections are blindly bidirectional.</p>
<h3 id="patches">Patches</h3>
<ul>
<li>19feb15833c6f4d6e7f1e1b132efaae96d76481d <a href="https://github.com/ipfs/boxo"><code>boxo</code></a> update in Kubo</li>
<li>GHSA-m974-xj4j-7qv5 patches in boxo</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Use <a href="https://github.com/ipfs/kubo/blob/master/docs/experimental-features.md#private-networks">PNET</a>, <a href="https://github.com/ipfs/kubo/blob/master/docs/config.md#swarmaddrfilters">swarm filters</a> or <a href="https://pkg.go.dev/github.com/libp2p/go-libp2p/p2p/host/resource-manager#readme-allowlisting-multiaddrs-to-mitigate-eclipse-attacks">resource manager allows list</a> to block untrusted connections.</p>
<p>Note that using the resource manager will disrupt both client and server features because the bitswap protocol is a message based protocol mixing requests and responses.</p>
<h3 id="references">References</h3>
<ul>
<li>GHSA-m974-xj4j-7qv5</li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25568">CVE-2023-25568</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>
<li><a href="https://github.com/ipfs/kubo/security/advisories/GHSA-qvqg-6rp8-4p9h">https://github.com/ipfs/kubo/security/advisories/GHSA-qvqg-6rp8-4p9h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25568">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>
<li><a href="https://github.com/advisories/GHSA-qvqg-6rp8-4p9h">https://github.com/advisories/GHSA-qvqg-6rp8-4p9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvqg-6rp8-4p9h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-11T20:40:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ipfs/go-bitswap] github.com/ipfs/go-bitswap vulnerable to DOS unbounded persistent memory leak]]></title>
        <id>https://github.com/advisories/GHSA-q3j6-22wf-3jh9</id>
        <link href="https://github.com/advisories/GHSA-q3j6-22wf-3jh9"/>
        <updated>2023-05-11T20:39:56.000Z</updated>
        <content type="html"><![CDATA[<p>This package has been moved to <a href="https://pkg.go.dev/github.com/ipfs/boxo/bitswap"><code>github.com/ipfs/boxo/bitswap</code></a>, this vulnerability is tracked there: <a href="https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a> (<code>CVE-2023-25568</code>)</p>
<h3 id="remediation">Remediation</h3>
<p>This is a two step process:</p>
<ol>
<li>Apply one of:<ul>
<li>(<strong>recommended</strong>) upgrade from <code>github.com/ipfs/go-bitswap</code> to <code>github.com/ipfs/boxo/bitswap</code>.</li>
<li>If you are still using <code>github.com/ipfs/go-bitswap</code> and cannot upgrade to <code>boxo</code>, you can upgrade to <code>github.com/ipfs/go-bitswap@v0.12.0</code>, this will replace the <code>go-bitswap</code> implementation by stubs which points to <code>boxo</code>.</li>
</ul>
</li>
<li>Open <a href="https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a> and then follow <code>boxo</code>'s remediation section.</li>
</ol>
<h3 id="vulnerable-symbols">Vulnerable symbols</h3>
<ul>
<li><code>&gt;= v0.9.0; &lt; v0.12.0</code><ul>
<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).MessageReceived</code></li>
<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).NotifyNewBlocks</code></li>
<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).findOrCreate</code></li>
<li><code>github.com/ipfs/go-bitswap/server/internal/decision.(*Engine).PeerConnected</code></li>
</ul>
</li>
<li><code>v0.8.0</code><ul>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).NotifyNewBlocks</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected</code></li>
</ul>
</li>
<li><code>&lt; v0.8.0</code><ul>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).MessageReceived</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).receiveBlocksFrom</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).findOrCreate</code></li>
<li><code>github.com/ipfs/go-bitswap/internal/decision.(*Engine).PeerConnected</code></li>
</ul>
</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using the stubs at <code>github.com/ipfs/go-bitswap</code> and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allows you to run in a client-only mode using: <a href="https://pkg.go.dev/github.com/ipfs/go-bitswap/client"><code>github.com/ipfs/go-bitswap/client</code></a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>
<li><a href="https://github.com/ipfs/go-bitswap/security/advisories/GHSA-q3j6-22wf-3jh9">https://github.com/ipfs/go-bitswap/security/advisories/GHSA-q3j6-22wf-3jh9</a></li>
<li><a href="https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25568">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>
<li><a href="https://github.com/advisories/GHSA-q3j6-22wf-3jh9">https://github.com/advisories/GHSA-q3j6-22wf-3jh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3j6-22wf-3jh9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-11T20:39:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/distribution] distribution catalog API endpoint can lead to OOM via malicious user input]]></title>
        <id>https://github.com/advisories/GHSA-hqxw-f8mx-cpmw</id>
        <link href="https://github.com/advisories/GHSA-hqxw-f8mx-cpmw"/>
        <updated>2023-05-11T20:37:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Systems that run <code>distribution</code> built after a specific commit running on memory-restricted environments can suffer from denial of service by a crafted malicious <code>/v2/_catalog</code> API endpoint request. </p>
<h3 id="patches">Patches</h3>
<p>Upgrade to at least 2.8.2-beta.1 if you are running <code>v2.8.x</code> release. If you use the code from the main branch, update at least to the commit after <a href="https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc">f55a6552b006a381d9167e328808565dd2bf77dc</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no way to work around this issue without patching. Restrict access to the affected API endpoint: see the recommendations section.</p>
<h3 id="references">References</h3>
<p><code>/v2/_catalog</code> endpoint accepts a parameter to control the maximum amount of records returned (query string: <code>n</code>).</p>
<p>When not given the default <code>n=100</code> is used.  The server trusts that <code>n</code> has an acceptable value, however when using a 
maliciously large value, it allocates an array/slice of <code>n</code> of strings before filling the slice with data.</p>
<p>This behaviour was introduced ~7yrs ago [1].</p>
<h3 id="recommendation">Recommendation</h3>
<p>The <code>/v2/_catalog</code> endpoint was designed specifically to do registry syncs with search or other API systems. Such an endpoint would create a lot of load on the backend system, due to overfetch required to serve a request in certain implementations.</p>
<p>Because of this, we strongly recommend keeping this API endpoint behind heightened privilege and avoiding leaving it exposed to the internet.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/distribution/distribution">distribution repository</a></li>
<li>Email us at <a href="mailto:cncf-distribution-security@lists.cncf.io">cncf-distribution-security@lists.cncf.io</a></li>
</ul>
<p>[1] <a href="https://github.com/distribution/distribution/blob/b7e26bac741c76cb792f8e14c41a2163b5dae8df/registry/handlers/catalog.go#L45">faulty commit</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/distribution/distribution/security/advisories/GHSA-hqxw-f8mx-cpmw">https://github.com/distribution/distribution/security/advisories/GHSA-hqxw-f8mx-cpmw</a></li>
<li><a href="https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc">https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc</a></li>
<li><a href="https://github.com/advisories/GHSA-hqxw-f8mx-cpmw">https://github.com/advisories/GHSA-hqxw-f8mx-cpmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hqxw-f8mx-cpmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-11T20:37:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/answerdev/answer] Answer Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-qmqw-r4x6-3w2q</id>
        <link href="https://github.com/advisories/GHSA-qmqw-r4x6-3w2q"/>
        <updated>2023-05-12T15:24:23.000Z</updated>
        <content type="html"><![CDATA[<p>A missing authorization in GitHub repository answerdev/answer prior to 1.0.9 can lead to a user rating their own answer as the best answer.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2590">https://nvd.nist.gov/vuln/detail/CVE-2023-2590</a></li>
<li><a href="https://github.com/answerdev/answer/commit/51ac1e6b76ae9ab3ca2008ca4819c0cc3bd2fcd3">https://github.com/answerdev/answer/commit/51ac1e6b76ae9ab3ca2008ca4819c0cc3bd2fcd3</a></li>
<li><a href="https://huntr.dev/bounties/a4238a30-3ddb-4415-9055-e179c3d4dea7">https://huntr.dev/bounties/a4238a30-3ddb-4415-9055-e179c3d4dea7</a></li>
<li><a href="https://github.com/advisories/GHSA-qmqw-r4x6-3w2q">https://github.com/advisories/GHSA-qmqw-r4x6-3w2q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qmqw-r4x6-3w2q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-05-09T06:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/imgproxy/imgproxy/v3] imgproxy is vulnerable to Server-Side Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-9x7h-ggc3-xg47</id>
        <link href="https://github.com/advisories/GHSA-9x7h-ggc3-xg47"/>
        <updated>2023-05-17T12:58:02.000Z</updated>
        <content type="html"><![CDATA[<p>imgproxy prior to version 3.15.0 is vulnerable to Server-Side Request Forgery (SSRF) due to a lack of sanitization of the imageURL parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30019">https://nvd.nist.gov/vuln/detail/CVE-2023-30019</a></li>
<li><a href="https://breakandpray.com/cve-2023-30019-ssrf-in-imgproxy/">https://breakandpray.com/cve-2023-30019-ssrf-in-imgproxy/</a></li>
<li><a href="https://github.com/imgproxy/imgproxy/commit/1a9768a2c682e88820064aa3d9a05ea234ff3cc4">https://github.com/imgproxy/imgproxy/commit/1a9768a2c682e88820064aa3d9a05ea234ff3cc4</a></li>
<li><a href="https://github.com/imgproxy/imgproxy/blob/ee9e8f0cb101ec22318caffd552a23cc0548d5ce/imagedata/download.go#L142">https://github.com/imgproxy/imgproxy/blob/ee9e8f0cb101ec22318caffd552a23cc0548d5ce/imagedata/download.go#L142</a></li>
<li><a href="https://github.com/advisories/GHSA-9x7h-ggc3-xg47">https://github.com/advisories/GHSA-9x7h-ggc3-xg47</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9x7h-ggc3-xg47</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-05-08T15:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ipfs/go-libipfs] Boxo bitswap/server: DOS unbounded persistent memory leak]]></title>
        <id>https://github.com/advisories/GHSA-m974-xj4j-7qv5</id>
        <link href="https://github.com/advisories/GHSA-m974-xj4j-7qv5"/>
        <updated>2023-05-11T20:32:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker is able allocate arbitrarily many bytes in the Bitswap server by sending many <code>WANT_BLOCK</code> and or <code>WANT_HAVE</code> requests which are queued in an unbounded queue, with allocations that persist even if the connection is closed.
This affects users accepting untrusted connections with the Bitswap server, this also affects users using the old API stubs at <code>github.com/ipfs/boxo/bitswap</code> because it transitively uses <code>github.com/ipfs/boxo/bitswap/server</code>.</p>
<p>We have <a href="https://github.com/ipfs/boxo/issues/215">renamed go-libipfs to boxo</a>; this document uses both terms interchangeably. The version numbers for both are applicable, as they share the same historical timeline.</p>
<h3 id="remediation">Remediation</h3>
<p>Apply one of:</p>
<ul>
<li>Update <code>boxo</code> to <a href="https://github.com/ipfs/boxo/releases/tag/v0.6.0"><code>v0.6.0</code></a> or later</li>
<li>Update <code>boxo</code> to <a href="https://github.com/ipfs/boxo/releases/tag/v0.4.1"><code>v0.4.1</code></a>
 Note that <em><strong><code>v0.5.0</code> is NOT safe</strong></em>, <code>v0.4.1</code> is a backport of the <code>v0.6.0</code> security fixes on top of <code>v0.4.0</code>.</li>
</ul>
<h3 id="mitigations">Mitigations</h3>
<ol>
<li>The server now limits how many wantlist entries per peer it knows.
 The <code>MaxQueuedWantlistEntriesPerPeer</code> option allows configuring how many wantlist entries the server remembers; if a peer sends a wantlist bigger than this (including a sum of multiple delta updates) the server will truncate the wantlist to the match the limit.
 This defaults to <code>1024</code> entries per peer.</li>
<li>The server now properly clears state about peers when they disconnect.
 Peer state is more lazily allocated (only when a wantlist is received in the first place) and is properly cleared when the <code>PeerDisconnected</code> callback is received.</li>
<li>The server now ignores CIDs above some size.
 Clients were able to send any CID as long as the total protobuf message were bellow the 4MiB limit. This is allowed to allocate lots of memory with very little entries.
 This can be configured using the <code>MaxCidSize</code> option and defaults to <code>168 bytes</code>.</li>
<li>The server now closes the connection if an inline CID is requested (either as <code>WANT_*</code> or <code>CANCEL</code>).
 The attack were more effective if done with CIDs that are present in target's blockstore, this is because this will push longer-lasting jobs on some priority queue.
 Since inline CID are literal data (instead of hashes of data), everyone always "has" any inline CID (since instead of loading the data from disk, it can be extracted from the CID). It makes no sense for anyone to ever ask you about an inline CID since they could also just parse it themselves. Thus, as a defensive measure, we kill the connection with peers that ask about an inline CID.</li>
</ol>
<h3 id="vulnerable-symbols">Vulnerable symbols</h3>
<ul>
<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).MessageReceived</code></li>
<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).NotifyNewBlocks</code></li>
<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).findOrCreate</code></li>
<li><code>github.com/ipfs/go-libipfs/bitswap/server/internal/decision.(*Engine).PeerConnected</code></li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li><a href="https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a> (mitigations 1 and 2)</li>
<li><a href="https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a> (mitigations 3 and 4)</li>
<li><a href="https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a> (tests)</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using the stubs at <code>github.com/ipfs/go-libipfs/bitswap</code> and not taking advantage of the features provided by the server, refactoring your code to use the new split API will allow you to run in a client-only mode using: <a href="https://pkg.go.dev/github.com/ipfs/boxo/bitswap/client"><code>github.com/ipfs/boxo/bitswap/client</code></a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/boxo/security/advisories/GHSA-m974-xj4j-7qv5</a></li>
<li><a href="https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5">https://github.com/ipfs/go-libipfs/security/advisories/GHSA-m974-xj4j-7qv5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25568">https://nvd.nist.gov/vuln/detail/CVE-2023-25568</a></li>
<li><a href="https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916">https://github.com/ipfs/boxo/commit/62cbac40b96f49e39cd7fedc77ee6b56adce4916</a></li>
<li><a href="https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197">https://github.com/ipfs/boxo/commit/9cb5cb54d40b57084d1221ba83b9e6bb3fcc3197</a></li>
<li><a href="https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974">https://github.com/ipfs/boxo/commit/baa748b682fabb21a4c1f7628a8af348d4645974</a></li>
<li><a href="https://github.com/advisories/GHSA-m974-xj4j-7qv5">https://github.com/advisories/GHSA-m974-xj4j-7qv5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m974-xj4j-7qv5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-05-11T20:32:18.000Z</published>
    </entry>
</feed>