<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-03-07T05:01:07.698Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudevents/sdk-go/v2] Go SDK for CloudEvents's use of WithRoundTripper to create a Client leaks credentials]]></title>
        <id>https://github.com/advisories/GHSA-5pf6-2qwx-pxm2</id>
        <link href="https://github.com/advisories/GHSA-5pf6-2qwx-pxm2"/>
        <updated>2024-03-06T20:11:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em>
Using cloudevents.WithRoundTripper to create a cloudevents.Client with an authenticated http.RoundTripper causes the go-sdk to leak credentials to arbitrary endpoints.</p>
<p>The relevant code is <a href="https://github.com/cloudevents/sdk-go/blob/67e389964131d55d65cd14b4eb32d57a47312695/v2/protocol/http/protocol.go#L104-L110">here</a> (also inline, emphasis added):</p>
<pre>if p.Client == nil {
  p.Client = **http.DefaultClient**
}

if p.roundTripper != nil {
  p.Client.**Transport = p.roundTripper**
}
</pre>

<p>When the transport is populated with an authenticated transport such as:</p>
<ul>
<li><a href="https://pkg.go.dev/golang.org/x/oauth2#Transport">oauth2.Transport</a></li>
<li><a href="https://pkg.go.dev/google.golang.org/api/idtoken#NewClient">idtoken.NewClient(...).Transport</a></li>
</ul>
<p>... then http.DefaultClient is modified with the authenticated transport and will start to send Authorization tokens to
<strong>any endpoint</strong> it is used to contact!</p>
<p>Found and patched by: @tcnghia and @mattmoor</p>
<h3 id="patches">Patches</h3>
<p>v.2.15.2</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudevents/sdk-go/security/advisories/GHSA-5pf6-2qwx-pxm2">https://github.com/cloudevents/sdk-go/security/advisories/GHSA-5pf6-2qwx-pxm2</a></li>
<li><a href="https://github.com/cloudevents/sdk-go/commit/de2f28370b0d2a0f64f92c0c6139fa4b8a7c3851">https://github.com/cloudevents/sdk-go/commit/de2f28370b0d2a0f64f92c0c6139fa4b8a7c3851</a></li>
<li><a href="https://github.com/cloudevents/sdk-go/blob/67e389964131d55d65cd14b4eb32d57a47312695/v2/protocol/http/protocol.go#L104-L110">https://github.com/cloudevents/sdk-go/blob/67e389964131d55d65cd14b4eb32d57a47312695/v2/protocol/http/protocol.go#L104-L110</a></li>
<li><a href="https://github.com/advisories/GHSA-5pf6-2qwx-pxm2">https://github.com/advisories/GHSA-5pf6-2qwx-pxm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5pf6-2qwx-pxm2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T20:11:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Incorrect TLS certificate auth method in Vault]]></title>
        <id>https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</id>
        <link href="https://github.com/advisories/GHSA-r3w7-mfpm-c2vw"/>
        <updated>2024-03-06T16:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>Vault and Vault Enterprise (“Vault”) TLS certificate auth method did not correctly validate client certificates when configured with a non-CA certificate as trusted certificate. In this configuration, an attacker may be able to craft a malicious certificate that could be used to bypass authentication. Fixed in Vault 1.15.5 and 1.14.10.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2048">https://nvd.nist.gov/vuln/detail/CVE-2024-2048</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-05-vault-cert-auth-method-did-not-correctly-validate-non-ca-certificates/63382">https://discuss.hashicorp.com/t/hcsec-2024-05-vault-cert-auth-method-did-not-correctly-validate-non-ca-certificates/63382</a></li>
<li><a href="https://github.com/advisories/GHSA-r3w7-mfpm-c2vw">https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Incorrect TLS certificate auth method in Vault]]></title>
        <id>https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</id>
        <link href="https://github.com/advisories/GHSA-r3w7-mfpm-c2vw"/>
        <updated>2024-03-06T16:59:19.000Z</updated>
        <content type="html"><![CDATA[<p>Vault and Vault Enterprise (“Vault”) TLS certificate auth method did not correctly validate client certificates when configured with a non-CA certificate as trusted certificate. In this configuration, an attacker may be able to craft a malicious certificate that could be used to bypass authentication. Fixed in Vault 1.15.5 and 1.14.10.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2048">https://nvd.nist.gov/vuln/detail/CVE-2024-2048</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-05-vault-cert-auth-method-did-not-correctly-validate-non-ca-certificates/63382">https://discuss.hashicorp.com/t/hcsec-2024-05-vault-cert-auth-method-did-not-correctly-validate-non-ca-certificates/63382</a></li>
<li><a href="https://github.com/advisories/GHSA-r3w7-mfpm-c2vw">https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3w7-mfpm-c2vw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/1Panel-dev/1Panel] 1Panel open source panel project has an unauthorized vulnerability.]]></title>
        <id>https://github.com/advisories/GHSA-26w3-q4j8-4xjp</id>
        <link href="https://github.com/advisories/GHSA-26w3-q4j8-4xjp"/>
        <updated>2024-03-06T21:35:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The steps are as follows:</p>
<ol>
<li><p>Access <a href="https://IP:PORT/">https://IP:PORT/</a> in the browser, which prompts the user to access with a secure entry point.
<img alt="image" src="https://github.com/1Panel-dev/1Panel/assets/46734380/8dc7d81c-6cc3-4b5d-a1d4-d3c5ed2de005"></p>
</li>
<li><p>Use Burp to intercept:
<img alt="image" src="https://github.com/1Panel-dev/1Panel/assets/46734380/f8e93d08-1b66-4434-8923-2e8e3dedebe3"></p>
</li>
</ol>
<p>When opening the browser and entering the URL (allowing the first intercepted packet through Burp), the following is displayed:
<img alt="image" src="https://github.com/1Panel-dev/1Panel/assets/46734380/118c0102-7c89-404d-834a-88a644482afc"></p>
<p>It is found that in this situation, we can access the console page (although no data is returned and no modification operations can be performed)."</p>
<p>Affected versions: &lt;= 1.10.0-lts</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability has been fixed in v1.10.1-lts.</p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade the version to 1.10.1-lts.</p>
<h3 id="references">References</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/1Panel-dev/1Panel">https://github.com/1Panel-dev/1Panel</a>
Email us at <a href="mailto:wanghe@fit2cloud.com">wanghe@fit2cloud.com</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-26w3-q4j8-4xjp">https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-26w3-q4j8-4xjp</a></li>
<li><a href="https://github.com/1Panel-dev/1Panel/releases/tag/v1.10.1-lts">https://github.com/1Panel-dev/1Panel/releases/tag/v1.10.1-lts</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27288">https://nvd.nist.gov/vuln/detail/CVE-2024-27288</a></li>
<li><a href="https://github.com/advisories/GHSA-26w3-q4j8-4xjp">https://github.com/advisories/GHSA-26w3-q4j8-4xjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-26w3-q4j8-4xjp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T15:29:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS-UserService] CasaOS Improper Restriction of Excessive Authentication Attempts vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c69x-5xmw-v44x</id>
        <link href="https://github.com/advisories/GHSA-c69x-5xmw-v44x"/>
        <updated>2024-03-06T20:05:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Here it is observed that the CasaOS doesn't defend against password brute force attacks, which leads to having full access to the server.</p>
<h3 id="details">Details</h3>
<p>The web application lacks control over the login attempts i.e. why attacker can use a password brute force attack to find and get full access over the.</p>
<h3 id="poc">PoC</h3>
<ol>
<li>Capture login request in proxy tool like Burp Suite and select password field.</li>
</ol>
<p><img alt="1" src="https://user-images.githubusercontent.com/63414468/297156515-0272bfd7-f386-4c22-b3bd-c4dbdc1298bf.PNG"></p>
<ol start="2">
<li>Here I have started attack with total number of 271 password tries where the last one is the correct password and as we can see in the following image we get a <strong>400 Bad Request</strong> status code with the message "<strong>Invalid Password</strong>" and response length <strong>769</strong> on 1st request which was sent at <strong><em>Tue, 16 Jan 2024 18:31:32 GMT</em></strong></li>
</ol>
<p><img alt="2" src="https://user-images.githubusercontent.com/63414468/297157815-c158995b-7d46-4a5a-aef9-bcbbcf596b15.png"></p>
<p><strong>Note</strong>:  <em>We have tested this vulnerability with more than 3400 tries. We have used 271 request counts just for demo purposes.</em></p>
<ol start="3">
<li>Here the attack is completed and we can see in the following image we get <strong>200 OK</strong> status code with the message "<strong>Ok</strong>" and response length <strong>1509</strong> on 271st request which was sent at <strong><em>Tue, 16 Jan 2024 18:32:01 GMT</em></strong>.</li>
</ol>
<p><img alt="3" src="https://user-images.githubusercontent.com/63414468/297159282-3f4788b5-6217-4f32-8be6-40ac117710e3.png"></p>
<p>This means attacker can try 271 requests in 56 seconds.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability allows attackers to get super user-level access over the server.</p>
<h3 id="mitigation">Mitigation</h3>
<p>It is recommended to implement a proper rate-limiting mechanism on the server side where the configuration might be like:
If a specific IP address fails to login more than 5 times concurrently then that IP address must be blocked for at least 30 seconds. This will reduce the possibility of password brute-forcing attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-c69x-5xmw-v44x">https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-c69x-5xmw-v44x</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/commit/62006f61b55951048dbace4ebd9e483274838699">https://github.com/IceWhaleTech/CasaOS-UserService/commit/62006f61b55951048dbace4ebd9e483274838699</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7">https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24767">https://nvd.nist.gov/vuln/detail/CVE-2024-24767</a></li>
<li><a href="https://github.com/advisories/GHSA-c69x-5xmw-v44x">https://github.com/advisories/GHSA-c69x-5xmw-v44x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c69x-5xmw-v44x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-06T15:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS-UserService] CasaOS Username Enumeration]]></title>
        <id>https://github.com/advisories/GHSA-c967-2652-gfjm</id>
        <link href="https://github.com/advisories/GHSA-c967-2652-gfjm"/>
        <updated>2024-03-06T21:35:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The Casa OS Login page has disclosed the username enumeration vulnerability in the login page.</p>
<h3 id="details">Details</h3>
<p>It is observed that the attacker can enumerate the CasaOS username using the application response. If the username is incorrect application gives the error "<strong>User does not exist</strong>",  If the password is incorrect application gives the error "<strong>Invalid password</strong>". </p>
<h3 id="poc">PoC</h3>
<p>Capture the login request in a tool like Burp Suit and use the intruder tab for trying multiple usernames. 
Keep checking the response of each request if the response says <strong>Invalid password</strong> then the username is right.</p>
<h3 id="impact">Impact</h3>
<p>Using this error attacker can enumerate the username of CasaOS. </p>
<h3 id="the-logic-behind-the-issue">The logic behind the issue</h3>
<p>If the username is incorrect, then throw an error "User does not exist" else throw an error "Invalid password".</p>
<p>This condition can be vice versa like:</p>
<p>If the password is incorrect, then throw an error "Invalid password" else throw an error "User does not exist".</p>
<h3 id="mitigation">Mitigation</h3>
<p>Since this is the condition we have to implement a single error which can be "Username/Password is Incorrect!!!"</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-c967-2652-gfjm">https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-c967-2652-gfjm</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/commit/c75063d7ca5800948e9c09c0a6efe9809b5d39f7">https://github.com/IceWhaleTech/CasaOS-UserService/commit/c75063d7ca5800948e9c09c0a6efe9809b5d39f7</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7">https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24766">https://nvd.nist.gov/vuln/detail/CVE-2024-24766</a></li>
<li><a href="https://github.com/advisories/GHSA-c967-2652-gfjm">https://github.com/advisories/GHSA-c967-2652-gfjm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c967-2652-gfjm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-06T15:23:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS-UserService] CasaOS-UserService allows unauthorized access to any file]]></title>
        <id>https://github.com/advisories/GHSA-h5gf-cmm8-cg7c</id>
        <link href="https://github.com/advisories/GHSA-h5gf-cmm8-cg7c"/>
        <updated>2024-03-06T20:05:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p><a href="http://demo.casaos.io/v1/users/image?path=/var/lib/casaos/1/avatar.png">http://demo.casaos.io/v1/users/image?path=/var/lib/casaos/1/avatar.png</a></p>
<p>Originally it was to get the url of the user's avatar, but the path filtering was not strict, making it possible to get any file on the system.</p>
<h3 id="details">Details</h3>
<p>Construct paths to get any file.</p>
<p>Such as the CasaOS user database, and furthermore can obtain system root privileges.</p>
<h3 id="poc">PoC</h3>
<p><a href="http://demo.casaos.io/v1/users/image?path=/var/lib/casaos/conf/../db/user.db">http://demo.casaos.io/v1/users/image?path=/var/lib/casaos/conf/../db/user.db</a></p>
<h3 id="impact">Impact</h3>
<p>v0.4.6 all previous versions</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-h5gf-cmm8-cg7c">https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-h5gf-cmm8-cg7c</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/commit/3f4558e23c0a9958f9a0e20aabc64aa8fd51840e">https://github.com/IceWhaleTech/CasaOS-UserService/commit/3f4558e23c0a9958f9a0e20aabc64aa8fd51840e</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7">https://github.com/IceWhaleTech/CasaOS-UserService/releases/tag/v0.4.7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24765">https://nvd.nist.gov/vuln/detail/CVE-2024-24765</a></li>
<li><a href="https://github.com/advisories/GHSA-h5gf-cmm8-cg7c">https://github.com/advisories/GHSA-h5gf-cmm8-cg7c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h5gf-cmm8-cg7c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-06T15:22:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/stacklok/minder] `GetRepositoryByName`, `DeleteRepositoryByName` and `GetArtifactByName` allow access of arbitrary repositories in Minder by any authenticated user]]></title>
        <id>https://github.com/advisories/GHSA-v627-69v2-xx37</id>
        <link href="https://github.com/advisories/GHSA-v627-69v2-xx37"/>
        <updated>2024-03-05T16:20:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A Minder user can use the endpoints listed in the issue title to access any repository in the DB, irrespective of who owns the repo and any permissions that user may have.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/stacklok/minder/blob/e88e4b286e4bc04c03b0332a77961f085e1aa77f/database/query/repositories.sql#L22-L23">https://github.com/stacklok/minder/blob/e88e4b286e4bc04c03b0332a77961f085e1aa77f/database/query/repositories.sql#L22-L23</a>
<a href="https://github.com/stacklok/minder/blob/a115c8524fbd582b2b277eaadce024bebbded508/internal/controlplane/handlers_repositories.go#L277-L278">https://github.com/stacklok/minder/blob/a115c8524fbd582b2b277eaadce024bebbded508/internal/controlplane/handlers_repositories.go#L277-L278</a></p>
<p>The DB query used here checks by repo owner, repo name and provider name (which is always "github"). These query values are not distinct for the particular user - as long as the user has valid credentials and a provider, they can set the repo owner/name to any value they want and the server will return information on this repo.</p>
<p><code>DeleteRepositoryByName</code> uses the same query and I have been able to delete another user's repo using this technique.</p>
<p>The <code>GetArtifactByName</code> endpoint also uses this DB query. I have not reproduced the behaviour with this endpoint due to a lack of a suitable test case, but I do not see anything in the implementation of the endpoint to prevent it being exploited.</p>
<h3 id="poc">PoC</h3>
<p>Setup:</p>
<ol>
<li>Fresh provider/project on the production minder instance which is owned by me.</li>
<li>A repo registered by another user (in this case, Ozz)</li>
</ol>
<pre><code># show my identity
$ minder auth whoami
No config file present, using default values.

 Here are your details:

+----------------------------------------------------+----------------------------------------------------+
|                        KEY                         |                       VALUE                        |
+----------------------------------------------------+----------------------------------------------------+
| Subject                                            | c93cc12e-999d-49f4-9ee3-593fdfb39204               |
+----------------------------------------------------+----------------------------------------------------+
| Created At                                         | 2024-02-26 15:53:29.228 +0000                      |
|                                                    | UTC                                                |
+----------------------------------------------------+----------------------------------------------------+
| Updated At                                         | 2024-02-26 15:53:29.228 +0000                      |
|                                                    | UTC                                                |
+----------------------------------------------------+----------------------------------------------------+
| Minder Server                                      | api.stacklok.com:443                               |
+----------------------------------------------------+----------------------------------------------------+
| Project                                            | dmjb /                                             |
|                                                    | ca059552-7b8a-4c6e-918d-ca7e6cbd0bab               |
+----------------------------------------------------+----------------------------------------------------+

# show that I have no repos registered
$ minder repo list
No config file present, using default values.
+----+---------+----------+-------------+-------+------+
| ID | PROJECT | PROVIDER | UPSTREAM ID | OWNER | NAME |
+----+---------+----------+-------------+-------+------+

# show details on one of Ozz's repos
$ minder repo get -n JAORMX/auditevent
No config file present, using default values.
{
  "id":  "a7e82080-9b6c-41f3-bc08-8e9442f8b2d2",
  "context":  {
    "provider":  "github",
    "project":  "b513f7f0-26dc-42e6-81a0-577df5489e62"
  },
  "owner":  "JAORMX",
  "name":  "auditevent",
  "repoId":  "605597568",
  "hookUrl":  "https://api.github.com/repos/JAORMX/auditevent/hooks/464564107",
  "deployUrl":  "https://api.github.com/repos/JAORMX/auditevent/deployments",
  "cloneUrl":  "https://github.com/JAORMX/auditevent.git",
  "isFork":  true,
  "createdAt":  "2024-03-04T13:27:54.019356Z",
  "updatedAt":  "2024-03-04T13:27:54.019356Z",
  "defaultBranch":  "main"
}

# delete Ozz's repo
$ minder repo delete -n JAORMX/auditevent
No config file present, using default values.
Successfully deleted repo with name: JAORMX/auditevent

# Ozz's repo no longer exists
$ minder repo get -n JAORMX/auditevent
No config file present, using default values.
Message: Error getting repo by name
Details: NotFound means some requested entity (e.g., file or directory) was
not found.
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any user and project in a multi-tenant Minder instance.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/stacklok/minder/security/advisories/GHSA-v627-69v2-xx37">https://github.com/stacklok/minder/security/advisories/GHSA-v627-69v2-xx37</a></li>
<li><a href="https://github.com/stacklok/minder/commit/45750b4e9fb2de33365758366e06c19e999bd2eb">https://github.com/stacklok/minder/commit/45750b4e9fb2de33365758366e06c19e999bd2eb</a></li>
<li><a href="https://github.com/advisories/GHSA-v627-69v2-xx37">https://github.com/advisories/GHSA-v627-69v2-xx37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v627-69v2-xx37</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-05T16:20:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/canonical/lxd] Canonical LXD documentation improvement to make clear restricted.devices.disk=allow without restricted.devices.disk.paths also allows shift=true]]></title>
        <id>https://github.com/advisories/GHSA-x9qq-236j-gj97</id>
        <link href="https://github.com/advisories/GHSA-x9qq-236j-gj97"/>
        <updated>2024-03-05T15:26:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a user has restricted access to a project that is configured with <code>restricted=true</code>, they can gain root access on the system by creating a disk device with <code>shift=true</code> and creating a setuid root executable. This is possible because the <code>shift</code> property is not restricted unless <code>restricted.devices.disk.paths</code> is set.</p>
<h3 id="details">Details</h3>
<p>The following patch shows the offending code with a possible fix:</p>
<pre><code class="language-patch">--- a/lxd/device/disk.go
+++ b/lxd/device/disk.go
@@ -429,17 +429,19 @@ func (d *disk) validateEnvironmentSourcePath() error {
        if instProject.Name != api.ProjectDefaultName {
                // If restricted disk paths are in force, then check the disk's source is allowed, and record the
                // allowed parent path for later user during device start up sequence.
-               if shared.IsTrue(instProject.Config["restricted"]) &amp;&amp; instProject.Config["restricted.devices.disk.paths"] != "" {
-                       allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
-                       if !allowed {
-                               return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+               if shared.IsTrue(instProject.Config["restricted"]) {
+                       if instProject.Config["restricted.devices.disk.paths"] != "" {
+                               allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
+                               if !allowed {
+                                       return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+                               }
+
+                               d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                        }

                        if shared.IsTrue(d.config["shift"]) {
                                return fmt.Errorf(`The "shift" property cannot be used with a restricted source path`)
                        }
-
-                       d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                }
        }
</code></pre>
<h3 id="poc">PoC</h3>
<pre><code class="language-bash">$ lxc project create restricted -c restricted=true -c restricted.devices.disk=allow
$ lxc project switch restricted
$ lxc profile device add default root disk path=/ pool=default
$ lxc init ubuntu:22.04 c1
$ lxc config device add c1 d1 disk source=/ path=/mnt shift=true
$ lxc start c1  # no error

$ lxc project set restricted restricted.devices.disk.paths=/  # explicitly allow mounting /
$ lxc restart c1
Error: Failed to start device "d1": The "shift" property cannot be used with a restricted source path
</code></pre>
<p>Created <a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a> to improve the documentation as per <a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97</a></li>
<li><a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a></li>
<li><a href="https://github.com/canonical/lxd/commit/ce1bd0dd37bb3810fe6f16c237a4b65257f231f1">https://github.com/canonical/lxd/commit/ce1bd0dd37bb3810fe6f16c237a4b65257f231f1</a></li>
<li><a href="https://github.com/advisories/GHSA-x9qq-236j-gj97">https://github.com/advisories/GHSA-x9qq-236j-gj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9qq-236j-gj97</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-05T23:32:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm shows secrets in clear text]]></title>
        <id>https://github.com/advisories/GHSA-jw44-4f3j-q396</id>
        <link href="https://github.com/advisories/GHSA-jw44-4f3j-q396"/>
        <updated>2024-03-05T14:39:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Cloud Native Computing Foundation (CNCF) Helm. It displays values of secrets when the --dry-run flag is used. This is a security concern in some use cases, such as a --dry-run call by a CI/CD tool. NOTE: the vendor's position is that this behavior was introduced intentionally, and cannot be removed without breaking backwards compatibility (some users may be relying on these values).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25210">https://nvd.nist.gov/vuln/detail/CVE-2019-25210</a></li>
<li><a href="https://github.com/helm/helm/issues/7275">https://github.com/helm/helm/issues/7275</a></li>
<li><a href="https://www.cncf.io/projects/helm">https://www.cncf.io/projects/helm</a></li>
<li><a href="https://github.com/advisories/GHSA-jw44-4f3j-q396">https://github.com/advisories/GHSA-jw44-4f3j-q396</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jw44-4f3j-q396</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-03T21:31:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/coder/coder] Coder's OIDC authentication allows email with partially matching domain to register]]></title>
        <id>https://github.com/advisories/GHSA-7cc2-r658-7xpf</id>
        <link href="https://github.com/advisories/GHSA-7cc2-r658-7xpf"/>
        <updated>2024-03-04T21:28:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>
<h3 id="details">Details</h3>
<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>
<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>
<h3 id="impact">Impact</h3>
<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>
<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>
<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>
<p>GitHub authentication and external authentication are not impacted.</p>
<h3 id="was-my-deployment-impacted">Was my deployment impacted?</h3>
<p>To check if your deployment was exploited:</p>
<ul>
<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>
<li>Check the users list for unexpected users<ul>
<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>
</ul>
</li>
</ul>
<h3 id="patched-versions">Patched Versions</h3>
<p>This vulnerability is remedied in</p>
<ul>
<li>v2.8.4</li>
<li>v2.7.3</li>
<li>v2.6.1</li>
</ul>
<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>
<h3 id="thanks">Thanks</h3>
<ul>
<li><a href="https://github.com/arcz">https://github.com/arcz</a></li>
<li><a href="https://www.trailofbits.com">https://www.trailofbits.com</a></li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>
<a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27918">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>
<li><a href="https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>
<li><a href="https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>
<li><a href="https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>
<li><a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>
<li><a href="https://github.com/advisories/GHSA-7cc2-r658-7xpf">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cc2-r658-7xpf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T20:45:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register]]></title>
        <id>https://github.com/advisories/GHSA-7cc2-r658-7xpf</id>
        <link href="https://github.com/advisories/GHSA-7cc2-r658-7xpf"/>
        <updated>2024-03-04T21:28:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>
<h3 id="details">Details</h3>
<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>
<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>
<h3 id="impact">Impact</h3>
<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>
<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>
<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>
<p>GitHub authentication and external authentication are not impacted.</p>
<h3 id="was-my-deployment-impacted">Was my deployment impacted?</h3>
<p>To check if your deployment was exploited:</p>
<ul>
<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>
<li>Check the users list for unexpected users<ul>
<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>
</ul>
</li>
</ul>
<h3 id="patched-versions">Patched Versions</h3>
<p>This vulnerability is remedied in</p>
<ul>
<li>v2.8.4</li>
<li>v2.7.3</li>
<li>v2.6.1</li>
</ul>
<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>
<h3 id="thanks">Thanks</h3>
<ul>
<li><a href="https://github.com/arcz">https://github.com/arcz</a></li>
<li><a href="https://www.trailofbits.com">https://www.trailofbits.com</a></li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>
<a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27918">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>
<li><a href="https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>
<li><a href="https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>
<li><a href="https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>
<li><a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>
<li><a href="https://github.com/advisories/GHSA-7cc2-r658-7xpf">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cc2-r658-7xpf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T20:45:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register]]></title>
        <id>https://github.com/advisories/GHSA-7cc2-r658-7xpf</id>
        <link href="https://github.com/advisories/GHSA-7cc2-r658-7xpf"/>
        <updated>2024-03-04T21:28:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>
<h3 id="details">Details</h3>
<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>
<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>
<h3 id="impact">Impact</h3>
<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>
<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>
<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>
<p>GitHub authentication and external authentication are not impacted.</p>
<h3 id="was-my-deployment-impacted">Was my deployment impacted?</h3>
<p>To check if your deployment was exploited:</p>
<ul>
<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>
<li>Check the users list for unexpected users<ul>
<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>
</ul>
</li>
</ul>
<h3 id="patched-versions">Patched Versions</h3>
<p>This vulnerability is remedied in</p>
<ul>
<li>v2.8.4</li>
<li>v2.7.3</li>
<li>v2.6.1</li>
</ul>
<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>
<h3 id="thanks">Thanks</h3>
<ul>
<li><a href="https://github.com/arcz">https://github.com/arcz</a></li>
<li><a href="https://www.trailofbits.com">https://www.trailofbits.com</a></li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>
<a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27918">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>
<li><a href="https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>
<li><a href="https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>
<li><a href="https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>
<li><a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>
<li><a href="https://github.com/advisories/GHSA-7cc2-r658-7xpf">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cc2-r658-7xpf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T20:45:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/coder/coder/v2] Coder's OIDC authentication allows email with partially matching domain to register]]></title>
        <id>https://github.com/advisories/GHSA-7cc2-r658-7xpf</id>
        <link href="https://github.com/advisories/GHSA-7cc2-r658-7xpf"/>
        <updated>2024-03-04T21:28:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A vulnerability in Coder's OIDC authentication could allow an attacker to bypass the <code>CODER_OIDC_EMAIL_DOMAIN</code> verification and create an account with an email not in the allowlist. Deployments are only affected if the OIDC provider allows users to create accounts on the provider (such as public providers like <code>google.com</code>).</p>
<h3 id="details">Details</h3>
<p>During OIDC registration, the user's email was improperly validated against the allowed <code>CODER_OIDC_EMAIL_DOMAIN</code>s. This could allow a user with a domain that only partially matched an allowed domain to successfully login or register (e.g. <code>user@exploitcorp.com</code> would match the allowed domain <code>corp.com</code>).</p>
<p>An attacker could register a domain name that exploited this vulnerability and register on a Coder instance with a public OIDC provider.</p>
<h3 id="impact">Impact</h3>
<p>Coder instances with OIDC enabled and protected by the <code>CODER_OIDC_EMAIL_DOMAIN</code> configuration.</p>
<p>Coder instances using a private OIDC provider are not affected, as arbitrary users cannot register through a private OIDC provider without first having an account on the provider.</p>
<p>Public OIDC providers (such as <code>google.com</code> without permitted domains set on the OAuth2 App) are impacted.</p>
<p>GitHub authentication and external authentication are not impacted.</p>
<h3 id="was-my-deployment-impacted">Was my deployment impacted?</h3>
<p>To check if your deployment was exploited:</p>
<ul>
<li>View the audit log on your deployment for unexpected registered users (using the <code>action:register</code> filter)</li>
<li>Check the users list for unexpected users<ul>
<li>Users created via this exploit will have a domain that ends with one of the allowed domains but doesn’t fully match (e.g. <code>@exploitcorp.com</code> instead of <code>@corp.com</code>)</li>
</ul>
</li>
</ul>
<h3 id="patched-versions">Patched Versions</h3>
<p>This vulnerability is remedied in</p>
<ul>
<li>v2.8.4</li>
<li>v2.7.3</li>
<li>v2.6.1</li>
</ul>
<p>All versions prior to these patches are affected by the vulnerability. <strong>It is recommended that customers upgrade their deployments as soon as possible if they are utilizing OIDC authentication with the <code>CODER_OIDC_EMAIL_DOMAIN</code> setting.</strong></p>
<h3 id="thanks">Thanks</h3>
<ul>
<li><a href="https://github.com/arcz">https://github.com/arcz</a></li>
<li><a href="https://www.trailofbits.com">https://www.trailofbits.com</a></li>
</ul>
<h3 id="references">References</h3>
<p><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a>
<a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a>
<a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27918">https://nvd.nist.gov/vuln/detail/CVE-2024-27918</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf">https://github.com/coder/coder/security/advisories/GHSA-7cc2-r658-7xpf</a></li>
<li><a href="https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0">https://github.com/coder/coder/commit/1171ce7add017481d28441575024209ac160ecb0</a></li>
<li><a href="https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31">https://github.com/coder/coder/commit/2ba84911f8b02605e5958d5e4a2fe3979ec50b31</a></li>
<li><a href="https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb">https://github.com/coder/coder/commit/2d37eb42e7db656e343fe1f36de5ab1a1a62f4fb</a></li>
<li><a href="https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c">https://github.com/coder/coder/commit/4439a920e454a82565e445e4376c669e3b89591c</a></li>
<li><a href="https://github.com/advisories/GHSA-7cc2-r658-7xpf">https://github.com/advisories/GHSA-7cc2-r658-7xpf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cc2-r658-7xpf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-04T20:45:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jackc/pgproto3] pgproto3 SQL Injection via Protocol Message Size Overflow]]></title>
        <id>https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</id>
        <link href="https://github.com/advisories/GHSA-7jwh-3vrq-q3m8"/>
        <updated>2024-03-04T20:45:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>
<h3 id="patches">Patches</h3>
<p>The problem is resolved in v2.3.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27304">https://nvd.nist.gov/vuln/detail/CVE-2024-27304</a></li>
<li><a href="https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>
<li><a href="https://github.com/advisories/GHSA-7jwh-3vrq-q3m8">https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7jwh-3vrq-q3m8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:45:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jackc/pgproto3] pgx SQL Injection via Protocol Message Size Overflow]]></title>
        <id>https://github.com/advisories/GHSA-mrww-27vc-gghv</id>
        <link href="https://github.com/advisories/GHSA-mrww-27vc-gghv"/>
        <updated>2024-03-04T20:43:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>
<h3 id="patches">Patches</h3>
<p>The problem is resolved in v4.18.2 and v5.5.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>
<li><a href="https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>
<li><a href="https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>
<li><a href="https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>
<li><a href="https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>
<li><a href="https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>
<li><a href="https://github.com/advisories/GHSA-mrww-27vc-gghv">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrww-27vc-gghv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:43:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jackc/pgx] pgx SQL Injection via Protocol Message Size Overflow]]></title>
        <id>https://github.com/advisories/GHSA-mrww-27vc-gghv</id>
        <link href="https://github.com/advisories/GHSA-mrww-27vc-gghv"/>
        <updated>2024-03-04T20:43:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>
<h3 id="patches">Patches</h3>
<p>The problem is resolved in v4.18.2 and v5.5.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>
<li><a href="https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>
<li><a href="https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>
<li><a href="https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>
<li><a href="https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>
<li><a href="https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>
<li><a href="https://github.com/advisories/GHSA-mrww-27vc-gghv">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrww-27vc-gghv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:43:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jackc/pgx] pgx SQL Injection via Protocol Message Size Overflow]]></title>
        <id>https://github.com/advisories/GHSA-mrww-27vc-gghv</id>
        <link href="https://github.com/advisories/GHSA-mrww-27vc-gghv"/>
        <updated>2024-03-04T20:43:50.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SQL injection can occur if an attacker can cause a single query or bind message to exceed 4 GB in size. An integer overflow in the calculated message size can cause the one large message to be sent as multiple messages under the attacker's control.</p>
<h3 id="patches">Patches</h3>
<p>The problem is resolved in v4.18.2 and v5.5.4.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Reject user input large enough to cause a single query or bind message to exceed 4 GB in size.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8">https://github.com/jackc/pgproto3/security/advisories/GHSA-7jwh-3vrq-q3m8</a></li>
<li><a href="https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv">https://github.com/jackc/pgx/security/advisories/GHSA-mrww-27vc-gghv</a></li>
<li><a href="https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007">https://github.com/jackc/pgproto3/commit/945c2126f6db8f3bea7eeebe307c01fe92bca007</a></li>
<li><a href="https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4">https://github.com/jackc/pgx/commit/adbb38f298c76e283ffc7c7a3f571036fea47fd4</a></li>
<li><a href="https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8">https://github.com/jackc/pgx/commit/c543134753a0c5d22881c12404025724cb05ffd8</a></li>
<li><a href="https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>
<li><a href="https://github.com/advisories/GHSA-mrww-27vc-gghv">https://github.com/advisories/GHSA-mrww-27vc-gghv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mrww-27vc-gghv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:43:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/zeromicro/go-zero] Authorization Bypass Through User-Controlled Key in go-zero]]></title>
        <id>https://github.com/advisories/GHSA-fgxv-gw55-r5fq</id>
        <link href="https://github.com/advisories/GHSA-fgxv-gw55-r5fq"/>
        <updated>2024-03-06T21:36:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Hello go-zero maintainer team, I would like to report a security concerning your CORS Filter feature.</p>
<h3 id="details">Details</h3>
<p>Go-zero allows user to specify a <a href="https://github.com/zeromicro/go-zero/blob/master/rest/internal/cors/handlers.go">CORS Filter</a> with a configurable allows param - which is an array of domains allowed in CORS policy.</p>
<p>However, the <code>isOriginAllowed</code> uses <code>strings.HasSuffix</code> to check the origin, which leads to bypass via domain like <code>evil-victim.com</code></p>
<pre><code class="language-go">func isOriginAllowed(allows []string, origin string) bool {
    for _, o := range allows {
        if o == allOrigins {
            return true
        }

        if strings.HasSuffix(origin, o) {
            return true
        }
    }

    return false
}
</code></pre>
<h3 id="poc">PoC</h3>
<p>Use code below as a PoC. Only requests from <code>safe.com</code> should bypass the CORS Filter</p>
<pre><code class="language-go">package main

import (
    "errors"
    "net/http"

    "github.com/zeromicro/go-zero/rest"
)

func main() {
    svr := rest.MustNewServer(rest.RestConf{Port: 8888}, rest.WithRouter(mockedRouter{}), rest.WithCors("safe.com"))
    svr.Start()
}

type mockedRouter struct{}

// some sensitive path
func (m mockedRouter) ServeHTTP(w http.ResponseWriter, r *http.Request) {
    // check user's cookie
    // ...
    // return sensitive data
    w.Write([]byte("social_id: 420101198008292930"))
}

func (m mockedRouter) Handle(_, _ string, handler http.Handler) error {
    return errors.New("foo")
}

func (m mockedRouter) SetNotFoundHandler(_ http.Handler) {
}

func (m mockedRouter) SetNotAllowedHandler(_ http.Handler) {
}
</code></pre>
<p>Send a request to localhost:8888 with <code>Origin:not-safe.com</code>
You can see the origin reflected in response, which bypass the CORS Filter
<img alt="image" src="https://user-images.githubusercontent.com/70683161/221365842-9d76a3a4-a79d-413a-85b7-06b50b0a7807.png"></p>
<h3 id="impact">Impact</h3>
<p>This vulnerability is capable of breaking CORS policy and thus allowing any page to make requests, retrieve data on behalf of other users.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq">https://github.com/zeromicro/go-zero/security/advisories/GHSA-fgxv-gw55-r5fq</a></li>
<li><a href="https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db">https://github.com/zeromicro/go-zero/commit/d9d79e930dff6218a873f4f02115df61c38b15db</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-27302">https://nvd.nist.gov/vuln/detail/CVE-2024-27302</a></li>
<li><a href="https://github.com/advisories/GHSA-fgxv-gw55-r5fq">https://github.com/advisories/GHSA-fgxv-gw55-r5fq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fgxv-gw55-r5fq</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-03-04T20:42:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jackc/pgx] pgx SQL Injection via Line Comment Creation]]></title>
        <id>https://github.com/advisories/GHSA-m7wr-2xf7-cm9p</id>
        <link href="https://github.com/advisories/GHSA-m7wr-2xf7-cm9p"/>
        <updated>2024-03-04T20:13:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SQL injection can occur when all of the following conditions are met:</p>
<ol>
<li>The non-default simple protocol is used.</li>
<li>A placeholder for a numeric value must be immediately preceded by a minus.</li>
<li>There must be a second placeholder for a string value after the first placeholder; both
must be on the same line.</li>
<li>Both parameter values must be user-controlled.</li>
</ol>
<p>e.g. </p>
<p>Simple mode must be enabled:</p>
<pre><code class="language-go">// connection string includes "prefer_simple_protocol=true"
// or
// directly enabled in code
config.ConnConfig.PreferSimpleProtocol = true
</code></pre>
<p>Parameterized query:</p>
<pre><code class="language-sql">SELECT * FROM example WHERE result=-$1 OR name=$2;
</code></pre>
<p>Parameter values:</p>
<p><code>$1</code> =&gt; <code>-42</code>
<code>$2</code> =&gt; <code>"foo\n 1 AND 1=0 UNION SELECT * FROM secrets; --"</code></p>
<p>Resulting query after preparation:</p>
<pre><code class="language-sql">SELECT * FROM example WHERE result=--42 OR name= 'foo
1 AND 1=0 UNION SELECT * FROM secrets; --';
</code></pre>
<h3 id="patches">Patches</h3>
<p>The problem is resolved in v4.18.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not use the simple protocol or do not place a minus directly before a placeholder.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p">https://github.com/jackc/pgx/security/advisories/GHSA-m7wr-2xf7-cm9p</a></li>
<li><a href="https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df">https://github.com/jackc/pgx/commit/f94eb0e2f96782042c96801b5ac448f44f0a81df</a></li>
<li><a href="https://github.com/advisories/GHSA-m7wr-2xf7-cm9p">https://github.com/advisories/GHSA-m7wr-2xf7-cm9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7wr-2xf7-cm9p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-04T20:13:11.000Z</published>
    </entry>
</feed>