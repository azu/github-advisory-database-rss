<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-03-26T00:17:18.833Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[github.com/Xhofe/alist] Cross-site Scripting in Alist]]></title>
        <id>https://github.com/advisories/GHSA-jpj5-hg26-6jgc</id>
        <link href="https://github.com/advisories/GHSA-jpj5-hg26-6jgc"/>
        <updated>2022-03-23T15:50:07.000Z</updated>
        <content type="html"><![CDATA[<p>Alist versions 2.0.10 through 2.1.0 were discovered to contain a cross-site scripting (XSS) vulnerability via /i/:data/ipa.plist. This issue was fixed in version 2.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26533">https://nvd.nist.gov/vuln/detail/CVE-2022-26533</a></li>
<li><a href="https://github.com/Xhofe/alist/issues/645">https://github.com/Xhofe/alist/issues/645</a></li>
<li><a href="https://github.com/Xhofe/alist/commit/6af17e2509a400979420f613fd7f2f9721fdcd6e">https://github.com/Xhofe/alist/commit/6af17e2509a400979420f613fd7f2f9721fdcd6e</a></li>
<li><a href="https://github.com/advisories/GHSA-jpj5-hg26-6jgc">https://github.com/advisories/GHSA-jpj5-hg26-6jgc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jpj5-hg26-6jgc</uri>
        </author>
        <published>2022-03-13T00:00:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Denial of service in go-ethereum]]></title>
        <id>https://github.com/advisories/GHSA-vrcc-g6vj-mh5w</id>
        <link href="https://github.com/advisories/GHSA-vrcc-g6vj-mh5w"/>
        <updated>2022-03-21T20:27:38.000Z</updated>
        <content type="html"><![CDATA[<p>Go-Ethereum v1.10.9 was discovered to contain an issue which allows attackers to cause a denial of service (DoS) via sending an excessive amount of messages to a node. This is caused by missing memory in the component /ethash/algorithm.go.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-42219">https://nvd.nist.gov/vuln/detail/CVE-2021-42219</a></li>
<li><a href="https://github.com/advisories/GHSA-vrcc-g6vj-mh5w">https://github.com/advisories/GHSA-vrcc-g6vj-mh5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vrcc-g6vj-mh5w</uri>
        </author>
        <published>2022-03-18T00:01:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[code.gitea.io/gitea] Path Traversal in Gitea]]></title>
        <id>https://github.com/advisories/GHSA-h3q4-vmw4-cpr5</id>
        <link href="https://github.com/advisories/GHSA-h3q4-vmw4-cpr5"/>
        <updated>2022-03-21T17:06:41.000Z</updated>
        <content type="html"><![CDATA[<p>The avatar middleware in Gitea before 1.13.6 allows Directory Traversal via a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29134">https://nvd.nist.gov/vuln/detail/CVE-2021-29134</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/15125/files">https://github.com/go-gitea/gitea/pull/15125/files</a></li>
<li><a href="https://github.com/go-gitea/gitea/releases">https://github.com/go-gitea/gitea/releases</a></li>
<li><a href="https://github.com/go-gitea/gitea/releases/tag/v1.13.6">https://github.com/go-gitea/gitea/releases/tag/v1.13.6</a></li>
<li><a href="https://github.com/advisories/GHSA-h3q4-vmw4-cpr5">https://github.com/advisories/GHSA-h3q4-vmw4-cpr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3q4-vmw4-cpr5</uri>
        </author>
        <published>2022-03-16T00:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/quay/claircore] Path traversal in claircore]]></title>
        <id>https://github.com/advisories/GHSA-mq47-6wwv-v79w</id>
        <link href="https://github.com/advisories/GHSA-mq47-6wwv-v79w"/>
        <updated>2022-03-21T15:33:08.000Z</updated>
        <content type="html"><![CDATA[<p>A directory traversal vulnerability was found in the ClairCore engine of Clair. An attacker can exploit this by supplying a crafted container image which, when scanned by Clair, allows for arbitrary file write on the filesystem, potentially allowing for remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3762">https://nvd.nist.gov/vuln/detail/CVE-2021-3762</a></li>
<li><a href="https://github.com/quay/clair/pull/1379">https://github.com/quay/clair/pull/1379</a></li>
<li><a href="https://github.com/quay/clair/pull/1380">https://github.com/quay/clair/pull/1380</a></li>
<li><a href="https://github.com/quay/claircore/pull/478">https://github.com/quay/claircore/pull/478</a></li>
<li><a href="https://github.com/quay/claircore/commit/691f2023a1720a0579e688b69a2f4bfe1f4b7821">https://github.com/quay/claircore/commit/691f2023a1720a0579e688b69a2f4bfe1f4b7821</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2000795">https://bugzilla.redhat.com/show_bug.cgi?id=2000795</a></li>
<li><a href="https://vulmon.com/exploitdetails?qidtp=maillist_oss_security&amp;qid=d19fce9ede06e13dfb5630ece7f14f83">https://vulmon.com/exploitdetails?qidtp=maillist_oss_security&amp;qid=d19fce9ede06e13dfb5630ece7f14f83</a></li>
<li><a href="https://github.com/quay/claircore/commit/dff671c665141f126c072de8a744855d4916c9c7">https://github.com/quay/claircore/commit/dff671c665141f126c072de8a744855d4916c9c7</a></li>
<li><a href="https://github.com/advisories/GHSA-mq47-6wwv-v79w">https://github.com/advisories/GHSA-mq47-6wwv-v79w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq47-6wwv-v79w</uri>
        </author>
        <published>2022-03-04T00:00:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/valyala/fasthttp] Path traversal in github.com/valyala/fasthttp]]></title>
        <id>https://github.com/advisories/GHSA-fx95-883v-4q4h</id>
        <link href="https://github.com/advisories/GHSA-fx95-883v-4q4h"/>
        <updated>2022-03-21T19:20:46.000Z</updated>
        <content type="html"><![CDATA[<p>The package github.com/valyala/fasthttp before 1.34.0 is vulnerable to Directory Traversal via the ServeFile function, due to improper sanitization. It is possible to be exploited by using a backslash %5c character in the path. <strong>Note:</strong> This security issue impacts Windows users only.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21221">https://nvd.nist.gov/vuln/detail/CVE-2022-21221</a></li>
<li><a href="https://github.com/valyala/fasthttp/issues/1226">https://github.com/valyala/fasthttp/issues/1226</a></li>
<li><a href="https://github.com/valyala/fasthttp/commit/15262ecf3c602364639d465daba1e7f3604d00e8">https://github.com/valyala/fasthttp/commit/15262ecf3c602364639d465daba1e7f3604d00e8</a></li>
<li><a href="https://github.com/valyala/fasthttp/commit/6b5bc7bb304975147b4af68df54ac214ed2554c1">https://github.com/valyala/fasthttp/commit/6b5bc7bb304975147b4af68df54ac214ed2554c1</a></li>
<li><a href="https://github.com/valyala/fasthttp/releases/tag/v1.34.0">https://github.com/valyala/fasthttp/releases/tag/v1.34.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMVALYALAFASTHTTP-2407866">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMVALYALAFASTHTTP-2407866</a></li>
<li><a href="https://github.com/advisories/GHSA-fx95-883v-4q4h">https://github.com/advisories/GHSA-fx95-883v-4q4h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fx95-883v-4q4h</uri>
        </author>
        <published>2022-03-18T00:01:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] HashiCorp Nomad Artifact Download Race Condition]]></title>
        <id>https://github.com/advisories/GHSA-gwmc-6795-qghj</id>
        <link href="https://github.com/advisories/GHSA-gwmc-6795-qghj"/>
        <updated>2022-03-21T17:12:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. This issue is fixed in 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24686">https://nvd.nist.gov/vuln/detail/CVE-2022-24686</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559">https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559</a></li>
<li><a href="https://github.com/hashicorp/nomad/issues/12036">https://github.com/hashicorp/nomad/issues/12036</a></li>
<li><a href="https://github.com/hashicorp/nomad/releases/tag/v1.2.6">https://github.com/hashicorp/nomad/releases/tag/v1.2.6</a></li>
<li><a href="https://github.com/advisories/GHSA-gwmc-6795-qghj">https://github.com/advisories/GHSA-gwmc-6795-qghj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwmc-6795-qghj</uri>
        </author>
        <published>2022-02-15T00:02:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] HashiCorp Nomad Artifact Download Race Condition]]></title>
        <id>https://github.com/advisories/GHSA-gwmc-6795-qghj</id>
        <link href="https://github.com/advisories/GHSA-gwmc-6795-qghj"/>
        <updated>2022-03-21T17:12:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. This issue is fixed in 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24686">https://nvd.nist.gov/vuln/detail/CVE-2022-24686</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559">https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559</a></li>
<li><a href="https://github.com/hashicorp/nomad/issues/12036">https://github.com/hashicorp/nomad/issues/12036</a></li>
<li><a href="https://github.com/hashicorp/nomad/releases/tag/v1.2.6">https://github.com/hashicorp/nomad/releases/tag/v1.2.6</a></li>
<li><a href="https://github.com/advisories/GHSA-gwmc-6795-qghj">https://github.com/advisories/GHSA-gwmc-6795-qghj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwmc-6795-qghj</uri>
        </author>
        <published>2022-02-15T00:02:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] HashiCorp Nomad Artifact Download Race Condition]]></title>
        <id>https://github.com/advisories/GHSA-gwmc-6795-qghj</id>
        <link href="https://github.com/advisories/GHSA-gwmc-6795-qghj"/>
        <updated>2022-03-21T17:12:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 0.3.0 through 1.0.17, 1.1.11, and 1.2.5 artifact download functionality has a race condition such that the Nomad client agent could download the wrong artifact into the wrong destination. This issue is fixed in 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24686">https://nvd.nist.gov/vuln/detail/CVE-2022-24686</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559">https://discuss.hashicorp.com/t/hcsec-2022-01-nomad-artifact-download-race-condition/35559</a></li>
<li><a href="https://github.com/hashicorp/nomad/issues/12036">https://github.com/hashicorp/nomad/issues/12036</a></li>
<li><a href="https://github.com/hashicorp/nomad/releases/tag/v1.2.6">https://github.com/hashicorp/nomad/releases/tag/v1.2.6</a></li>
<li><a href="https://github.com/advisories/GHSA-gwmc-6795-qghj">https://github.com/advisories/GHSA-gwmc-6795-qghj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gwmc-6795-qghj</uri>
        </author>
        <published>2022-02-15T00:02:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Code Injection in CRI-O]]></title>
        <id>https://github.com/advisories/GHSA-6x2m-w449-qwx7</id>
        <link href="https://github.com/advisories/GHSA-6x2m-w449-qwx7"/>
        <updated>2022-03-18T17:53:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>
<h3 id="patches">Patches</h3>
<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>
<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>
<li>A <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: sysctl-psp
spec:
forbiddenSysctls:
  - "*"
</code></pre>
However, this option will not work if any sysctls are required by any pods in the cluster.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>
<li><a href="https://bugs.gentoo.org/835336">https://bugs.gentoo.org/835336</a></li>
<li><a href="https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0811">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0811">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2059475">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>
<li><a href="https://github.com/advisories/GHSA-6x2m-w449-qwx7">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x2m-w449-qwx7</uri>
        </author>
        <published>2022-03-15T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Code Injection in CRI-O]]></title>
        <id>https://github.com/advisories/GHSA-6x2m-w449-qwx7</id>
        <link href="https://github.com/advisories/GHSA-6x2m-w449-qwx7"/>
        <updated>2022-03-18T17:53:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>
<h3 id="patches">Patches</h3>
<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>
<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>
<li>A <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: sysctl-psp
spec:
forbiddenSysctls:
  - "*"
</code></pre>
However, this option will not work if any sysctls are required by any pods in the cluster.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>
<li><a href="https://bugs.gentoo.org/835336">https://bugs.gentoo.org/835336</a></li>
<li><a href="https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0811">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0811">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2059475">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>
<li><a href="https://github.com/advisories/GHSA-6x2m-w449-qwx7">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x2m-w449-qwx7</uri>
        </author>
        <published>2022-03-15T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Code Injection in CRI-O]]></title>
        <id>https://github.com/advisories/GHSA-6x2m-w449-qwx7</id>
        <link href="https://github.com/advisories/GHSA-6x2m-w449-qwx7"/>
        <updated>2022-03-18T17:53:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>
<h3 id="patches">Patches</h3>
<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>
<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>
<li>A <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: sysctl-psp
spec:
forbiddenSysctls:
  - "*"
</code></pre>
However, this option will not work if any sysctls are required by any pods in the cluster.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>
<li><a href="https://bugs.gentoo.org/835336">https://bugs.gentoo.org/835336</a></li>
<li><a href="https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0811">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0811">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2059475">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>
<li><a href="https://github.com/advisories/GHSA-6x2m-w449-qwx7">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x2m-w449-qwx7</uri>
        </author>
        <published>2022-03-15T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Code Injection in CRI-O]]></title>
        <id>https://github.com/advisories/GHSA-6x2m-w449-qwx7</id>
        <link href="https://github.com/advisories/GHSA-6x2m-w449-qwx7"/>
        <updated>2022-03-18T17:53:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>
<h3 id="patches">Patches</h3>
<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>
<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>
<li>A <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: sysctl-psp
spec:
forbiddenSysctls:
  - "*"
</code></pre>
However, this option will not work if any sysctls are required by any pods in the cluster.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>
<li><a href="https://bugs.gentoo.org/835336">https://bugs.gentoo.org/835336</a></li>
<li><a href="https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0811">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0811">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2059475">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>
<li><a href="https://github.com/advisories/GHSA-6x2m-w449-qwx7">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x2m-w449-qwx7</uri>
        </author>
        <published>2022-03-15T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Code Injection in CRI-O]]></title>
        <id>https://github.com/advisories/GHSA-6x2m-w449-qwx7</id>
        <link href="https://github.com/advisories/GHSA-6x2m-w449-qwx7"/>
        <updated>2022-03-18T17:53:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A flaw introduced in CRI-O version 1.19 which an attacker can use to bypass the safeguards and set arbitrary kernel parameters on the host. As a result, anyone with rights to deploy a pod on a Kubernetes cluster that uses the CRI-O runtime can abuse the <code>kernel.core_pattern</code> kernel parameter to achieve container escape and arbitrary code execution as root on any node in the cluster.</p>
<h3 id="patches">Patches</h3>
<p>The patches will be present in 1.19.6, 1.20.7, 1.21.6, 1.22.3, 1.23.2, 1.24.0</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Users can set manage_ns_lifecycle to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.</li>
<li>An admission webhook could be created to deny pods that specify a <code>+</code> in the sysctl value of a pod.</li>
<li>A <a href="https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/#podsecuritypolicy">PodSecurityPolicy</a> [deprecated] could be created, specifying all sysctls as forbidden like so: <pre><code>apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
name: sysctl-psp
spec:
forbiddenSysctls:
  - "*"
</code></pre>
However, this option will not work if any sysctls are required by any pods in the cluster.</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Credit for finding this vulnerability goes to John Walker and Manoj Ahuje of Crowdstrike. The CRI-O community deeply thanks them for the report.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7">https://github.com/cri-o/cri-o/security/advisories/GHSA-6x2m-w449-qwx7</a></li>
<li><a href="https://bugs.gentoo.org/835336">https://bugs.gentoo.org/835336</a></li>
<li><a href="https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/">https://www.crowdstrike.com/blog/cr8escape-zero-day-vulnerability-discovered-in-cri-o-container-engine-cve-2022-0811/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0811">https://nvd.nist.gov/vuln/detail/CVE-2022-0811</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2022-0811">https://access.redhat.com/security/cve/CVE-2022-0811</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2059475">https://bugzilla.redhat.com/show_bug.cgi?id=2059475</a></li>
<li><a href="https://github.com/advisories/GHSA-6x2m-w449-qwx7">https://github.com/advisories/GHSA-6x2m-w449-qwx7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6x2m-w449-qwx7</uri>
        </author>
        <published>2022-03-15T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host]]></title>
        <id>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</id>
        <link href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"/>
        <updated>2022-03-18T13:40:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href="https://github.com/cri-o/cri-o/tree/main/pinns/">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>
<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container
1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>
<h3 id="patches">Patches</h3>
<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.
An admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
<li><a href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</uri>
        </author>
        <published>2022-03-15T20:02:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host]]></title>
        <id>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</id>
        <link href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"/>
        <updated>2022-03-18T13:40:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href="https://github.com/cri-o/cri-o/tree/main/pinns/">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>
<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container
1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>
<h3 id="patches">Patches</h3>
<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.
An admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
<li><a href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</uri>
        </author>
        <published>2022-03-15T20:02:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host]]></title>
        <id>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</id>
        <link href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"/>
        <updated>2022-03-18T13:40:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href="https://github.com/cri-o/cri-o/tree/main/pinns/">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>
<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container
1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>
<h3 id="patches">Patches</h3>
<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.
An admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
<li><a href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</uri>
        </author>
        <published>2022-03-15T20:02:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host]]></title>
        <id>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</id>
        <link href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"/>
        <updated>2022-03-18T13:40:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href="https://github.com/cri-o/cri-o/tree/main/pinns/">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>
<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container
1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>
<h3 id="patches">Patches</h3>
<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.
An admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
<li><a href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</uri>
        </author>
        <published>2022-03-15T20:02:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] Sysctls applied to containers with host IPC or host network namespaces can affect the host]]></title>
        <id>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</id>
        <link href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x"/>
        <updated>2022-03-18T13:40:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Before setting the sysctls for a pod, the pods namespaces must be unshared (created). However, in cases where the pod is using a host network or IPC namespace, a bug in CRI-O caused the namespace creating tool <a href="https://github.com/cri-o/cri-o/tree/main/pinns/">pinns</a> to configure the sysctls of the host. This allows a malicious user to set sysctls on the host, assuming they have access to hostNetwork and hostIPC.</p>
<p>Any CRI-O cluster after CRI-O 1.18 that drops the infra container
1.22 and 1.23 clusters drop infra container by default, and are thus vulnerable by default.</p>
<h3 id="patches">Patches</h3>
<p>CRI-O versions 1.24.0, 1.23.1, 1.22.2, 1.21.5, 1.20.6, 1.19.5 all have the patches.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can set <code>manage_ns_lifecycle</code> to false, which causes the sysctls to be configured by the OCI runtime, which typically filter these cases. This option is available in 1.20 and 1.19. Newer versions don't have this option.
An admission webhook could also be created to deny pods that use host IPC or network namespaces and also attempt to configure sysctls related to that namespace.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/cri-o/cri-o/issues">the CRI-O repo</a></li>
<li>To make a report, email your vulnerability to the private
<a href="mailto:cncf-crio-security@lists.cncf.io">cncf-crio-security@lists.cncf.io</a> list
with the security details and the details expected for <a href="https://github.com/cri-o/cri-o/blob/main/.github/ISSUE_TEMPLATE/bug-report.yml">all CRI-O bug
reports</a>.<h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/cri-o/cri-o/security/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
<li><a href="https://github.com/advisories/GHSA-w2j5-3rcx-vx7x">https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2j5-3rcx-vx7x</uri>
        </author>
        <published>2022-03-15T20:02:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS] Command Injection in CasaOS]]></title>
        <id>https://github.com/advisories/GHSA-jh63-28gx-7p26</id>
        <link href="https://github.com/advisories/GHSA-jh63-28gx-7p26"/>
        <updated>2022-03-17T21:39:45.000Z</updated>
        <content type="html"><![CDATA[<p>CasaOS before v0.2.7 was discovered to contain a command injection vulnerability via the component leave or join zerotier api.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24193">https://nvd.nist.gov/vuln/detail/CVE-2022-24193</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/issues/84">https://github.com/IceWhaleTech/CasaOS/issues/84</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/commit/d060968b7ab08e7f8cbfe7ca9ccdfa47afe9bb06">https://github.com/IceWhaleTech/CasaOS/commit/d060968b7ab08e7f8cbfe7ca9ccdfa47afe9bb06</a></li>
<li><a href="https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/">https://www.star123.top/2022/01/08/A-vulnerability-in-CasaOS/</a></li>
<li><a href="https://github.com/advisories/GHSA-jh63-28gx-7p26">https://github.com/advisories/GHSA-jh63-28gx-7p26</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jh63-28gx-7p26</uri>
        </author>
        <published>2022-03-11T00:02:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gogs.io/gogs] Improper Authorization in Gogs]]></title>
        <id>https://github.com/advisories/GHSA-gw5h-h6hj-f56g</id>
        <link href="https://github.com/advisories/GHSA-gw5h-h6hj-f56g"/>
        <updated>2022-03-18T13:33:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Expired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.</p>
<h3 id="patches">Patches</h3>
<p>Expired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.</p>
<h3 id="workarounds">Workarounds</h3>
<p>In addition to marking PAM accounts as expired, also disable/lock them. Running <code>usermod -L &lt;username&gt;</code> will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. </p>
<h3 id="references">References</h3>
<p><a href="https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please post on <a href="https://github.com/gogs/gogs/issues/6810">https://github.com/gogs/gogs/issues/6810</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gogs/gogs/security/advisories/GHSA-gw5h-h6hj-f56g">https://github.com/gogs/gogs/security/advisories/GHSA-gw5h-h6hj-f56g</a></li>
<li><a href="https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78">https://github.com/gogs/gogs/commit/64102be2c90e1b47dbdd379873ba76c80d4b0e78</a></li>
<li><a href="https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62">https://huntr.dev/bounties/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62</a></li>
<li><a href="https://github.com/advisories/GHSA-gw5h-h6hj-f56g">https://github.com/advisories/GHSA-gw5h-h6hj-f56g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw5h-h6hj-f56g</uri>
        </author>
        <published>2022-03-14T22:58:37.000Z</published>
    </entry>
</feed>