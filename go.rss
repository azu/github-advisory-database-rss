<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-02-15T07:01:24.292Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/dhowden/tag] dhowden tag Improper Validation of Array Index vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-27mh-3343-6hg5</id>
        <link href="https://github.com/advisories/GHSA-27mh-3343-6hg5"/>
        <updated>2023-02-15T05:06:29.000Z</updated>
        <content type="html"><![CDATA[<p>dhowden tag before 0.0.0-20201120070457-d52dcb253c63 allows <code>panic: runtime error: slice bounds out of range</code> via <code>readTextWithDescrFrame</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-29244">https://nvd.nist.gov/vuln/detail/CVE-2020-29244</a></li>
<li><a href="https://github.com/dhowden/tag/issues/79">https://github.com/dhowden/tag/issues/79</a></li>
<li><a href="https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e">https://github.com/dhowden/tag/commit/4b595ed4fac79f467594aa92f8953f90f817116e</a></li>
<li><a href="https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d">https://github.com/dhowden/tag/commit/6b18201aa5c5535511802ddfb4e4117686b4866d</a></li>
<li><a href="https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e">https://github.com/dhowden/tag/commit/a92213460e4838490ce3066ef11dc823cdc1740e</a></li>
<li><a href="https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96">https://github.com/dhowden/tag/commit/d52dcb253c63a153632bfee5f269dd411dcd8e96</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0097">https://pkg.go.dev/vuln/GO-2021-0097</a></li>
<li><a href="https://github.com/advisories/GHSA-27mh-3343-6hg5">https://github.com/advisories/GHSA-27mh-3343-6hg5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-27mh-3343-6hg5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T17:37:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Client Certificates are accepted without CertificateVerify]]></title>
        <id>https://github.com/advisories/GHSA-w45j-f832-hxvh</id>
        <link href="https://github.com/advisories/GHSA-w45j-f832-hxvh"/>
        <updated>2023-02-15T01:44:14.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A DTLS Client could provide a Certificate that it doesn't posses the private key for and Pion DTLS wouldn't reject it. </p>
<p>This issue affects users that are using Client certificates only. The connection itself is still secure. The Certificate provided by clients can't be trusted when using a Pion DTLS server prior to v2.1.5</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.5</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh">https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29222">https://nvd.nist.gov/vuln/detail/CVE-2022-29222</a></li>
<li><a href="https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412">https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.5">https://github.com/pion/dtls/releases/tag/v2.1.5</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0462">https://pkg.go.dev/vuln/GO-2022-0462</a></li>
<li><a href="https://github.com/advisories/GHSA-w45j-f832-hxvh">https://github.com/advisories/GHSA-w45j-f832-hxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w45j-f832-hxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-25T19:26:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Header reconstruction method can be thrown into an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</id>
        <link href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c"/>
        <updated>2023-02-15T01:43:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can send packets that will send Pion DTLS into an infinite loop when processing.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29190">https://nvd.nist.gov/vuln/detail/CVE-2022-29190</a></li>
<li><a href="https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf">https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0460">https://pkg.go.dev/vuln/GO-2022-0460</a></li>
<li><a href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/advisories/GHSA-cm8f-h6j3-p25c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:05:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Buffer for inbound DTLS fragments has no limit]]></title>
        <id>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</id>
        <link href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j"/>
        <updated>2023-02-15T01:42:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A buffer that was used for inbound network traffic had no upper limit. Pion DTLS would buffer all network traffic from the remote user until the handshake completes or times out. An attacker could exploit this to cause excessive memory usage.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29189">https://nvd.nist.gov/vuln/detail/CVE-2022-29189</a></li>
<li><a href="https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de">https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0461">https://pkg.go.dev/vuln/GO-2022-0461</a></li>
<li><a href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/advisories/GHSA-cx94-mrg9-rq4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:04:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/open-policy-agent/opa] Incorrect Calculation in github.com/open-policy-agent/opa]]></title>
        <id>https://github.com/advisories/GHSA-hcw3-j74m-qc58</id>
        <link href="https://github.com/advisories/GHSA-hcw3-j74m-qc58"/>
        <updated>2023-02-15T01:35:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Under certain conditions, pretty-printing an AST that contains synthetic nodes could change the logic of some statements by reordering array literals. Example of policies impacted are those that parse and compare web paths, see the example below.</p>
<p><strong>All of these</strong> three conditions have to be met to create an adverse effect:</p>
<ol>
<li>An AST of Rego had to be <strong>created programmatically</strong> such that it ends up containing terms without a location (such as wildcard variables).</li>
<li>The AST had to be <strong>pretty-printed</strong> using the <code>github.com/open-policy-agent/opa/format</code> package.</li>
<li>The result of the pretty-printing had to be <strong>parsed and evaluated again</strong> via an OPA instance using the bundles, or the Golang packages.</li>
</ol>
<p>If any of these three conditions are not met, you are not affected.</p>
<p>Notably, all three would be true if using <strong>optimized bundles</strong>, i.e. bundles created with <code>opa build -O=1</code> or higher.
In that case, the optimizer would fulfil condition (1.), the result of that would be pretty-printed when writing the bundle to disk, fulfilling (2.). When the bundle was then used, we'd satisfy (3.).</p>
<h4 id="example">Example</h4>
<p>For example, the process outlined above could turn 
this rule</p>
<pre><code class="language-rego">hello {
    ["foo", _] = split(input.resource, "/")
}
</code></pre>
<p>into</p>
<pre><code class="language-rego">hello {
    [_, "foo"] = split(input.resource, "/")
}
</code></pre>
<p>with an input of</p>
<pre><code class="language-rego">{
    "resource": "foo/bar"
}
</code></pre>
<p>the result would change from</p>
<pre><code class="language-rego">{
    "hello": true
}
</code></pre>
<p>to (no default value of hello)</p>
<pre><code class="language-rego">{}
</code></pre>
<p>The severity was determined to be <em>moderate</em> because the conditions are quite particular. Please note that its only the OPA bundle build process thats affected. An OPA sidecar of version 0.36.0 with an optimized bundle built by OPA 0.32.1 would not face this bug.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in version 0.37.2.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Disabling optimization when creating bundles.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li>Introduced in <a href="https://github.com/open-policy-agent/opa/pull/3851">https://github.com/open-policy-agent/opa/pull/3851</a></li>
<li>Backported for the 0.33.1 patch release: <a href="https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>
<li>Fixed by <a href="https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a> and <a href="https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055">https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/open-policy-agent/community/discussions/categories/opa-and-rego">Community Discussions</a></li>
<li>Ask in Slack: <a href="https://slack.openpolicyagent.org/">https://slack.openpolicyagent.org/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58">https://github.com/open-policy-agent/opa/security/advisories/GHSA-hcw3-j74m-qc58</a></li>
<li><a href="https://github.com/open-policy-agent/opa/pull/3851">https://github.com/open-policy-agent/opa/pull/3851</a></li>
<li><a href="https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239">https://github.com/open-policy-agent/opa/commit/932e4ffc37a590ace79e9b75ca4340288c220239</a></li>
<li><a href="https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717">https://github.com/open-policy-agent/opa/commit/bfd984ddf93ef2c4963a08d4fdadae0bcf1a3717</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23628">https://nvd.nist.gov/vuln/detail/CVE-2022-23628</a></li>
<li><a href="https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055">https://github.com/open-policy-agent/opa/commit/2bd8edab9e10e2dc9cf76ae8335ced0c224f3055</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0316">https://pkg.go.dev/vuln/GO-2022-0316</a></li>
<li><a href="https://github.com/advisories/GHSA-hcw3-j74m-qc58">https://github.com/advisories/GHSA-hcw3-j74m-qc58</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcw3-j74m-qc58</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-09T22:17:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/client_golang] Uncontrolled Resource Consumption in promhttp]]></title>
        <id>https://github.com/advisories/GHSA-cg3q-j54f-5p7p</id>
        <link href="https://github.com/advisories/GHSA-cg3q-j54f-5p7p"/>
        <updated>2023-02-15T01:33:17.000Z</updated>
        <content type="html"><![CDATA[<p>This is the Go client library for Prometheus. It has two separate parts, one for instrumenting application code, and one for creating clients that talk to the Prometheus HTTP API. client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients.</p>
<h3 id="impact">Impact</h3>
<p>HTTP server susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods.</p>
<h3 id="affected-configuration">Affected Configuration</h3>
<p>In order to be affected, an instrumented software must</p>
<ul>
<li>Use any of <code>promhttp.InstrumentHandler*</code> middleware except <code>RequestsInFlight</code>.</li>
<li>Do not filter any specific methods (e.g GET) before middleware.</li>
<li>Pass metric with <code>method</code> label name to our middleware.</li>
<li>Not have any firewall/LB/proxy that filters away requests with unknown <code>method</code>.</li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li><a href="https://github.com/prometheus/client_golang/pull/962">https://github.com/prometheus/client_golang/pull/962</a></li>
<li><a href="https://github.com/prometheus/client_golang/pull/987">https://github.com/prometheus/client_golang/pull/987</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade to <a href="https://github.com/prometheus/client_golang/releases/tag/v1.11.1">v1.11.1 or above</a>, in order to stop being affected you can:</p>
<ul>
<li>Remove <code>method</code> label name from counter/gauge you use in the InstrumentHandler.</li>
<li>Turn off affected promhttp handlers.</li>
<li>Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.</li>
<li>Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/prometheus/client_golang">https://github.com/prometheus/client_golang</a></li>
<li>Email us at <code>prometheus-team@googlegroups.com</code></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p">https://github.com/prometheus/client_golang/security/advisories/GHSA-cg3q-j54f-5p7p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21698">https://nvd.nist.gov/vuln/detail/CVE-2022-21698</a></li>
<li><a href="https://github.com/prometheus/client_golang/pull/962">https://github.com/prometheus/client_golang/pull/962</a></li>
<li><a href="https://github.com/prometheus/client_golang/pull/987">https://github.com/prometheus/client_golang/pull/987</a></li>
<li><a href="https://github.com/prometheus/client_golang/releases/tag/v1.11.1">https://github.com/prometheus/client_golang/releases/tag/v1.11.1</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FY3N7H6VSDZM37B4SKM2PFFCUWU7QYWN/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FY3N7H6VSDZM37B4SKM2PFFCUWU7QYWN/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKORFJTRRDJCWBTJPISKKCVMMMJBIRLG/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZKORFJTRRDJCWBTJPISKKCVMMMJBIRLG/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AK7CJBCGERCRXYUR2EWDSSDVAQMTAZGX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/AK7CJBCGERCRXYUR2EWDSSDVAQMTAZGX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SASRKYHT5ZFSVMJUQUG3UAEQRJYGJKAR/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SASRKYHT5ZFSVMJUQUG3UAEQRJYGJKAR/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7V7I72LSQ3IET3QJR6QPAVGJZ4CBDLN5/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7V7I72LSQ3IET3QJR6QPAVGJZ4CBDLN5/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KBMVIQFKQDSSTHVVJWJ4QH6TW3JVB7XZ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/KBMVIQFKQDSSTHVVJWJ4QH6TW3JVB7XZ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2PFW6Q2LXXWTFRTMTRN4ZGADFRQPKJ3D/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2PFW6Q2LXXWTFRTMTRN4ZGADFRQPKJ3D/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HLAQRRGNSO5MYCPAXGPH2OCSHOGHSQMQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/HLAQRRGNSO5MYCPAXGPH2OCSHOGHSQMQ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5WPM42UR6XIBQNQPNQHM32X7S4LJTRX/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5WPM42UR6XIBQNQPNQHM32X7S4LJTRX/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/36GUEPA5TPSC57DZTPYPBL6T7UPQ2FRH/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/36GUEPA5TPSC57DZTPYPBL6T7UPQ2FRH/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4KDETHL5XCT6RZN2BBNOCEXRZ2W3SFU3/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4KDETHL5XCT6RZN2BBNOCEXRZ2W3SFU3/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2IK53GWZ475OQ6ENABKMJMTOBZG6LXUR/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2IK53GWZ475OQ6ENABKMJMTOBZG6LXUR/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MH6ALXEQXIFQRQFNJ5Y2MJ5DFPIX76VN/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MH6ALXEQXIFQRQFNJ5Y2MJ5DFPIX76VN/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZY2SLWOQR4ZURQ7UBRZ7JIX6H6F5JHJR/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5OGNAFVXSMTTT2UPH6CS3IH6L3KM42Q7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/5OGNAFVXSMTTT2UPH6CS3IH6L3KM42Q7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RN7JGC2LVHPEGSJYODFUV5FEKPBVG4D7/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/RN7JGC2LVHPEGSJYODFUV5FEKPBVG4D7/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3L6GDN5S5QZSCFKWD3GKL2RDZQ6B4UWA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/3L6GDN5S5QZSCFKWD3GKL2RDZQ6B4UWA/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0322">https://pkg.go.dev/vuln/GO-2022-0322</a></li>
<li><a href="https://github.com/advisories/GHSA-cg3q-j54f-5p7p">https://github.com/advisories/GHSA-cg3q-j54f-5p7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cg3q-j54f-5p7p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-16T22:26:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pires/go-proxyproto] Connection descriptor exhaustion in proxyproto]]></title>
        <id>https://github.com/advisories/GHSA-xcf7-q56x-78gh</id>
        <link href="https://github.com/advisories/GHSA-xcf7-q56x-78gh"/>
        <updated>2023-02-15T00:44:41.000Z</updated>
        <content type="html"><![CDATA[<p>The package <code>github.com/pires/go-proxyproto</code> before 0.6.1 are vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header. While this issue was patched in 0.6.0, the fix introduced additional issues which were subsequently patched in 0.6.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23409">https://nvd.nist.gov/vuln/detail/CVE-2021-23409</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/65">https://github.com/pires/go-proxyproto/issues/65</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74">https://github.com/pires/go-proxyproto/pull/74</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346">https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.0">https://github.com/pires/go-proxyproto/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/75">https://github.com/pires/go-proxyproto/issues/75</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.1">https://github.com/pires/go-proxyproto/releases/tag/v0.6.1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0233">https://pkg.go.dev/vuln/GO-2022-0233</a></li>
<li><a href="https://github.com/advisories/GHSA-xcf7-q56x-78gh">https://github.com/advisories/GHSA-xcf7-q56x-78gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcf7-q56x-78gh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-07-26T21:23:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ipld/go-ipld-prime] go-ipld-prime/codec/json may panic if asked to encode bytes]]></title>
        <id>https://github.com/advisories/GHSA-c653-6hhg-9x92</id>
        <link href="https://github.com/advisories/GHSA-c653-6hhg-9x92"/>
        <updated>2023-02-14T21:40:14.000Z</updated>
        <content type="html"><![CDATA[<p><code>go-ipld-prime</code> is a series of Go interfaces for manipulating IPLD data and a Go module that contains the <code>go-ipld-prime/codec/json</code> codec.</p>
<h3 id="impact">Impact</h3>
<p>Encoding data which contains a <code>Bytes</code> kind Node will pass a <code>Bytes</code> token to the JSON encoder which will panic as it doesn't expect to receive <code>Bytes</code> tokens. Such an encoding should be treated as an error, as plain JSON should not be able to encode Bytes.</p>
<p><strong>This only impacts uses of the "json" codec, "dag-json" is not impacted.</strong> Use of "json" as a decoder is not impacted.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in v0.19.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Prefer the "dag-json" codec which has the ability to <a href="https://ipld.io/specs/codecs/dag-json/spec/#bytes">encode bytes</a>.</p>
<h3 id="references">References</h3>
<p>See fix in <a href="https://github.com/ipld/go-ipld-prime/pull/472">#472</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ipld/go-ipld-prime/security/advisories/GHSA-c653-6hhg-9x92">https://github.com/ipld/go-ipld-prime/security/advisories/GHSA-c653-6hhg-9x92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-22460">https://nvd.nist.gov/vuln/detail/CVE-2023-22460</a></li>
<li><a href="https://github.com/ipld/go-ipld-prime/pull/472">https://github.com/ipld/go-ipld-prime/pull/472</a></li>
<li><a href="https://github.com/ipld/go-ipld-prime/releases/tag/v0.19.0">https://github.com/ipld/go-ipld-prime/releases/tag/v0.19.0</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1269">https://pkg.go.dev/vuln/GO-2023-1269</a></li>
<li><a href="https://github.com/advisories/GHSA-c653-6hhg-9x92">https://github.com/advisories/GHSA-c653-6hhg-9x92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c653-6hhg-9x92</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-05T12:04:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2023-02-14T21:39:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1114">https://pkg.go.dev/vuln/GO-2022-1114</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet/v2] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2023-02-14T21:39:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1114">https://pkg.go.dev/vuln/GO-2022-1114</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/codenotary/immudb] Lack of proper validation of server UUID can be used by the server to trick the client to accept invalid proofs]]></title>
        <id>https://github.com/advisories/GHSA-6cqj-6969-p57x</id>
        <link href="https://github.com/advisories/GHSA-6cqj-6969-p57x"/>
        <updated>2023-02-14T21:39:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>immudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server.</p>
<h3 id="patches">Patches</h3>
<p>The following Go SDK versions are not vulnerable:</p>
<table>
<thead>
<tr>
<th><strong>SDK</strong></th>
<th><strong>Version</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="pkg.go.dev/github.com/codenotary/immudb/pkg/client">go</a></td>
<td>1.4.1</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>When initializing an immudb client object, a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in <a href="https://github.com/codenotary/immudb/discussions/new">immudb Discussions</a></li>
<li>Email us at <a href="mailto:immudb-security@codenotary.com">immudb-security@codenotary.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x">https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39199">https://nvd.nist.gov/vuln/detail/CVE-2022-39199</a></li>
<li><a href="https://github.com/codenotary/immudb/releases/tag/v1.4.1">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/codenotary/immudb/commit/cade04756ff3f0a3b9e8d24149062744574adf5d">https://github.com/codenotary/immudb/commit/cade04756ff3f0a3b9e8d24149062744574adf5d</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1118">https://pkg.go.dev/vuln/GO-2022-1118</a></li>
<li><a href="https://github.com/advisories/GHSA-6cqj-6969-p57x">https://github.com/advisories/GHSA-6cqj-6969-p57x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cqj-6969-p57x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-21T20:38:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/codenotary/immudb] Insufficient Verification of Proofs generated by the immudb server in client SDK.]]></title>
        <id>https://github.com/advisories/GHSA-672p-m5jq-mrh8</id>
        <link href="https://github.com/advisories/GHSA-672p-m5jq-mrh8"/>
        <updated>2023-02-14T21:38:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In certain scenario a malicious immudb server can provide a falsified proof that will be accepted by the client SDK signing a falsified transaction replacing the genuine one. This situation can not be triggered by a genuine immudb server and requires the client to perform a specific list of verified operations resulting in acceptance of an invalid state value.</p>
<p>This vulnerability only affects immudb client SDKs, the immudb server itself is not affected by this vulnerability.</p>
<h3 id="detailed-description">Detailed description</h3>
<p>immudb uses Merkle Tree enhanced with additional linear part to perform consistency proofs between two transactions. The linear part is built from the last leaf node of the Merkle Tree compensating for transactions that were not yet consumed by the Merkle Tree calculation.</p>
<p>The Merkle Tree part is then used to perform proofs for things that are in transaction range covered by the Merkle Tree where the linear part is used to check those that are not yet in the Merkle Tree.</p>
<p>When doing consistency checks between two immudb states, the linear proof part is not fully checked. In fact only the first (last Merkle Tree leaf) and the last (current DB state value) are checked against new Merkle Tree without ensuring that elements in the middle of that chain are correctly added as Merkle Tree leafs.</p>
<p>This lack of check means that the database can present different set of hashes on the linear proof part to what would later be used once those become part of the Merkle Tree. This property can be exploited by the database to expose two different transaction entries depending on the other transaction that the user requested consistency proof for.</p>
<p>In practice this could lead to a following scenario:</p>
<ul>
<li>a client requests a verified write operation</li>
<li>the server responds with a proof for the transaction</li>
<li>client stores the state value retrieved from the server and expects it to be a confirmation of that write and all the history of the database before that transaction</li>
<li>a series of validated read / write operations is performed by the client, each accompanied by a successfully validated consistency proof and update of the client state</li>
<li>the client requests verified get operation on the transaction it has written before (and that was verified with a proof from the server)</li>
<li>the server replies with a completely different transaction that can be properly validated according to the currently stored db state on the client side</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The following Go SDK versions is not vulnerable:</p>
<table>
<thead>
<tr>
<th><strong>SDK</strong></th>
<th><strong>Version</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="pkg.go.dev/github.com/codenotary/immudb/pkg/client">go</a></td>
<td>1.4.1</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>Invalid proofs can not be generated in a normal immudb server and will be detected by a genuine replica server.
To ensure that the server does not produce invalid proofs and to check that the history presented by the server
does not contain falsified transactions, one should run a genuine immudb replica server in a safe environment
and fully synchronize all databases with the primary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in <a href="https://github.com/codenotary/immudb/discussions/new">immudb Discussions</a></li>
<li>Email us at <a href="mailto:immudb-security@codenotary.com">immudb-security@codenotary.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8">https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36111">https://nvd.nist.gov/vuln/detail/CVE-2022-36111</a></li>
<li><a href="https://github.com/codenotary/immudb/releases/tag/v1.4.1">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>
<li><a href="https://pkg.go.dev/github.com/codenotary/immudb/pkg/client">https://pkg.go.dev/github.com/codenotary/immudb/pkg/client</a></li>
<li><a href="https://github.com/codenotary/immudb/commit/7267d67e28be8f0257b71d734611a051593e8a81">https://github.com/codenotary/immudb/commit/7267d67e28be8f0257b71d734611a051593e8a81</a></li>
<li><a href="https://github.com/codenotary/immudb/commit/acf7f1b3d62436ea5e038acea1fc6394f90ab1c6">https://github.com/codenotary/immudb/commit/acf7f1b3d62436ea5e038acea1fc6394f90ab1c6</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1117">https://pkg.go.dev/vuln/GO-2022-1117</a></li>
<li><a href="https://github.com/advisories/GHSA-672p-m5jq-mrh8">https://github.com/advisories/GHSA-672p-m5jq-mrh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-672p-m5jq-mrh8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-21T20:38:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Denial of service in github.com/ethereum/go-ethereum]]></title>
        <id>https://github.com/advisories/GHSA-r33q-22hv-j29q</id>
        <link href="https://github.com/advisories/GHSA-r33q-22hv-j29q"/>
        <updated>2023-02-14T21:38:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A DoS vulnerability can make a LES server crash via malicious <code>GetProofsV2</code> request from a connected LES client.</p>
<h3 id="patches">Patches</h3>
<p>The vulnerability was patched in <a href="https://github.com/ethereum/go-ethereum/pull/21896">https://github.com/ethereum/go-ethereum/pull/21896</a>. </p>
<h3 id="workarounds">Workarounds</h3>
<p>This vulnerability only concerns users explicitly enabling <code>les</code> server; disabling <code>les</code> prevents the exploit. 
It can also be patched by manually applying the patch in <a href="https://github.com/ethereum/go-ethereum/pull/21896">https://github.com/ethereum/go-ethereum/pull/21896</a>. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-r33q-22hv-j29q">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-r33q-22hv-j29q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26264">https://nvd.nist.gov/vuln/detail/CVE-2020-26264</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/21896">https://github.com/ethereum/go-ethereum/pull/21896</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/bddd103a9f0af27ef533f04e06ea429cf76b6d46">https://github.com/ethereum/go-ethereum/commit/bddd103a9f0af27ef533f04e06ea429cf76b6d46</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25">https://github.com/ethereum/go-ethereum/releases/tag/v1.9.25</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0063">https://pkg.go.dev/vuln/GO-2021-0063</a></li>
<li><a href="https://github.com/advisories/GHSA-r33q-22hv-j29q">https://github.com/advisories/GHSA-r33q-22hv-j29q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r33q-22hv-j29q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-29T21:14:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/blevesearch/bleve/v2] Missing Role Based Access Control for the REST handlers in bleve/http package]]></title>
        <id>https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</id>
        <link href="https://github.com/advisories/GHSA-9w9f-6mg8-jp7w"/>
        <updated>2023-02-14T21:38:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Bleve includes HTTP utilities under bleve/http package, that are used by its sample application. 
(<a href="https://github.com/blevesearch/bleve-explorer">https://github.com/blevesearch/bleve-explorer</a>)
These HTTP methods paves way for exploitation of a node’s filesystem where the bleve index resides, 
if the user has used bleve’s own HTTP (bleve/http) handlers for exposing the access to the indexes. 
For instance, the CreateIndexHandler (http/index_create.go) and DeleteIndexHandler (http/index_delete.go) 
enable an attacker to create a bleve index (directory structure) anywhere where the user running the server 
has the write permissions and to delete recursively any directory owned by the same user account.</p>
<p>Users who have used the bleve/http package for exposing access to bleve index without the explicit 
handling for the Role Based Access Controls(RBAC) of the index assets would be impacted.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><strong>No</strong>. The http package is purely intended to be used for demonstration purposes. 
And bleve is never designed to be handling the RBACs or it was ever advertised to be used in that way. 
Hence the collaborators of this project have decided to stay away from adding any authentication or 
authorization to bleve project at the moment.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>The bleve/http package is mainly for demonstration purposes and it lacks exhaustive validation of the user 
inputs as well as any authentication and authorization measures. 
So it is recommended to not use that in production use cases.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue <a href="https://github.com/blevesearch/bleve/issues">here</a>.</li>
<li>Email us at [mailto:<a href="mailto:security@couchbase.com">security@couchbase.com</a>, <a href="mailto:fts-team@couchbase.com">fts-team@couchbase.com</a>].</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/blevesearch/bleve/security/advisories/GHSA-9w9f-6mg8-jp7w">https://github.com/blevesearch/bleve/security/advisories/GHSA-9w9f-6mg8-jp7w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31022">https://nvd.nist.gov/vuln/detail/CVE-2022-31022</a></li>
<li><a href="https://github.com/blevesearch/bleve/commit/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff">https://github.com/blevesearch/bleve/commit/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0470">https://pkg.go.dev/vuln/GO-2022-0470</a></li>
<li><a href="https://github.com/advisories/GHSA-9w9f-6mg8-jp7w">https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T22:17:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/blevesearch/bleve] Missing Role Based Access Control for the REST handlers in bleve/http package]]></title>
        <id>https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</id>
        <link href="https://github.com/advisories/GHSA-9w9f-6mg8-jp7w"/>
        <updated>2023-02-14T21:38:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Bleve includes HTTP utilities under bleve/http package, that are used by its sample application. 
(<a href="https://github.com/blevesearch/bleve-explorer">https://github.com/blevesearch/bleve-explorer</a>)
These HTTP methods paves way for exploitation of a node’s filesystem where the bleve index resides, 
if the user has used bleve’s own HTTP (bleve/http) handlers for exposing the access to the indexes. 
For instance, the CreateIndexHandler (http/index_create.go) and DeleteIndexHandler (http/index_delete.go) 
enable an attacker to create a bleve index (directory structure) anywhere where the user running the server 
has the write permissions and to delete recursively any directory owned by the same user account.</p>
<p>Users who have used the bleve/http package for exposing access to bleve index without the explicit 
handling for the Role Based Access Controls(RBAC) of the index assets would be impacted.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><strong>No</strong>. The http package is purely intended to be used for demonstration purposes. 
And bleve is never designed to be handling the RBACs or it was ever advertised to be used in that way. 
Hence the collaborators of this project have decided to stay away from adding any authentication or 
authorization to bleve project at the moment.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>The bleve/http package is mainly for demonstration purposes and it lacks exhaustive validation of the user 
inputs as well as any authentication and authorization measures. 
So it is recommended to not use that in production use cases.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue <a href="https://github.com/blevesearch/bleve/issues">here</a>.</li>
<li>Email us at [mailto:<a href="mailto:security@couchbase.com">security@couchbase.com</a>, <a href="mailto:fts-team@couchbase.com">fts-team@couchbase.com</a>].</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/blevesearch/bleve/security/advisories/GHSA-9w9f-6mg8-jp7w">https://github.com/blevesearch/bleve/security/advisories/GHSA-9w9f-6mg8-jp7w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31022">https://nvd.nist.gov/vuln/detail/CVE-2022-31022</a></li>
<li><a href="https://github.com/blevesearch/bleve/commit/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff">https://github.com/blevesearch/bleve/commit/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0470">https://pkg.go.dev/vuln/GO-2022-0470</a></li>
<li><a href="https://github.com/advisories/GHSA-9w9f-6mg8-jp7w">https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w9f-6mg8-jp7w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-06-03T22:17:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/graphql-go/graphql] graphql-go has infinite recursion in the type definition parser]]></title>
        <id>https://github.com/advisories/GHSA-h3qm-jrrf-cgj3</id>
        <link href="https://github.com/advisories/GHSA-h3qm-jrrf-cgj3"/>
        <updated>2023-02-14T21:21:11.000Z</updated>
        <content type="html"><![CDATA[<p>graphql-go (aka GraphQL for Go) through 0.8.0 has infinite recursion in the type definition parser.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-37315">https://nvd.nist.gov/vuln/detail/CVE-2022-37315</a></li>
<li><a href="https://github.com/graphql-go/graphql/issues/637">https://github.com/graphql-go/graphql/issues/637</a></li>
<li><a href="https://github.com/graphql-go/graphql/pull/642">https://github.com/graphql-go/graphql/pull/642</a></li>
<li><a href="https://github.com/graphql-go/graphql/pull/642/commits/4188bd5b3877f7badb951b421cf66e0af2eacb22">https://github.com/graphql-go/graphql/pull/642/commits/4188bd5b3877f7badb951b421cf66e0af2eacb22</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0942">https://pkg.go.dev/vuln/GO-2022-0942</a></li>
<li><a href="https://github.com/advisories/GHSA-h3qm-jrrf-cgj3">https://github.com/advisories/GHSA-h3qm-jrrf-cgj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h3qm-jrrf-cgj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-08-02T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/filebrowser/filebrowser/v2] Cross-Site Request Forgery in Filebrowser]]></title>
        <id>https://github.com/advisories/GHSA-72wf-hwcq-65h9</id>
        <link href="https://github.com/advisories/GHSA-72wf-hwcq-65h9"/>
        <updated>2023-02-14T21:16:43.000Z</updated>
        <content type="html"><![CDATA[<p>A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser &lt; 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-46398">https://nvd.nist.gov/vuln/detail/CVE-2021-46398</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d">https://github.com/filebrowser/filebrowser/commit/74b7cd8e81840537a8206317344f118093153e8d</a></li>
<li><a href="https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html">https://febin0x4e4a.blogspot.com/2022/01/critical-csrf-in-filebrowser.html</a></li>
<li><a href="https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/">https://febin0x4e4a.wordpress.com/2022/01/19/critical-csrf-in-filebrowser/</a></li>
<li><a href="https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7">https://systemweakness.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7</a></li>
<li><a href="http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html">http://packetstormsecurity.com/files/165885/FileBrowser-2.17.2-Code-Execution-Cross-Site-Request-Forgery.html</a></li>
<li><a href="https://febinj.medium.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7">https://febinj.medium.com/critical-csrf-to-rce-in-filebrowser-865a3c34b8e7</a></li>
<li><a href="https://github.com/filebrowser/filebrowser/issues/1621">https://github.com/filebrowser/filebrowser/issues/1621</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0563">https://pkg.go.dev/vuln/GO-2022-0563</a></li>
<li><a href="https://github.com/advisories/GHSA-72wf-hwcq-65h9">https://github.com/advisories/GHSA-72wf-hwcq-65h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72wf-hwcq-65h9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-05T00:00:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kataras/iris] Link Following in Iris]]></title>
        <id>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</id>
        <link href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49"/>
        <updated>2023-02-14T21:15:43.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23772">https://nvd.nist.gov/vuln/detail/CVE-2021-23772</a></li>
<li><a href="https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08">https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0272">https://pkg.go.dev/vuln/GO-2022-0272</a></li>
<li><a href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49">https://github.com/advisories/GHSA-jcxc-rh6w-wf49</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-01-06T21:36:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kataras/iris/v12] Link Following in Iris]]></title>
        <id>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</id>
        <link href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49"/>
        <updated>2023-02-14T21:15:43.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23772">https://nvd.nist.gov/vuln/detail/CVE-2021-23772</a></li>
<li><a href="https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08">https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0272">https://pkg.go.dev/vuln/GO-2022-0272</a></li>
<li><a href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49">https://github.com/advisories/GHSA-jcxc-rh6w-wf49</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-01-06T21:36:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/google/fscrypt] Privilege Escalation in fscrypt]]></title>
        <id>https://github.com/advisories/GHSA-qj26-7grj-whg3</id>
        <link href="https://github.com/advisories/GHSA-qj26-7grj-whg3"/>
        <updated>2023-02-14T21:07:19.000Z</updated>
        <content type="html"><![CDATA[<p>The pam_fscrypt module in fscrypt before 0.2.4 may incorrectly restore primary and supplementary group IDs to the values associated with the root user, which allows attackers to gain privileges via a successful login through certain applications that use Linux-PAM (aka pam).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6558">https://nvd.nist.gov/vuln/detail/CVE-2018-6558</a></li>
<li><a href="https://github.com/google/fscrypt/issues/77">https://github.com/google/fscrypt/issues/77</a></li>
<li><a href="https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b">https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b</a></li>
<li><a href="https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66">https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66</a></li>
<li><a href="https://launchpad.net/bugs/1787548">https://launchpad.net/bugs/1787548</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0027">https://pkg.go.dev/vuln/GO-2020-0027</a></li>
<li><a href="https://github.com/advisories/GHSA-qj26-7grj-whg3">https://github.com/advisories/GHSA-qj26-7grj-whg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj26-7grj-whg3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-23T17:18:49.000Z</published>
    </entry>
</feed>