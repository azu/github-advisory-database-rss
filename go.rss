<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-02-09T20:01:30.811Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/google/fscrypt/pam] Privilege Escalation in fscrypt]]></title>
        <id>https://github.com/advisories/GHSA-qj26-7grj-whg3</id>
        <link href="https://github.com/advisories/GHSA-qj26-7grj-whg3"/>
        <updated>2023-02-09T19:59:36.000Z</updated>
        <content type="html"><![CDATA[<p>The pam_fscrypt module in fscrypt before 0.2.4 may incorrectly restore primary and supplementary group IDs to the values associated with the root user, which allows attackers to gain privileges via a successful login through certain applications that use Linux-PAM (aka pam).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-6558">https://nvd.nist.gov/vuln/detail/CVE-2018-6558</a></li>
<li><a href="https://github.com/google/fscrypt/issues/77">https://github.com/google/fscrypt/issues/77</a></li>
<li><a href="https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b">https://github.com/google/fscrypt/commit/3022c1603d968c22f147b4a2c49c4637dd1be91b</a></li>
<li><a href="https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66">https://github.com/google/fscrypt/commit/315f9b042237200174a1fb99427f74027e191d66</a></li>
<li><a href="https://launchpad.net/bugs/1787548">https://launchpad.net/bugs/1787548</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0027">https://pkg.go.dev/vuln/GO-2020-0027</a></li>
<li><a href="https://github.com/advisories/GHSA-qj26-7grj-whg3">https://github.com/advisories/GHSA-qj26-7grj-whg3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qj26-7grj-whg3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-23T17:18:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gin-gonic/gin] Inconsistent Interpretation of HTTP Requests in github.com/gin-gonic/gin]]></title>
        <id>https://github.com/advisories/GHSA-h395-qcrw-5vmq</id>
        <link href="https://github.com/advisories/GHSA-h395-qcrw-5vmq"/>
        <updated>2023-02-09T19:53:20.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package github.com/gin-gonic/gin under 1.7.7. When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28483">https://nvd.nist.gov/vuln/detail/CVE-2020-28483</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2632">https://github.com/gin-gonic/gin/pull/2632</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/bfc8ca285eb46dad60e037d57c545cd260636711">https://github.com/gin-gonic/gin/commit/bfc8ca285eb46dad60e037d57c545cd260636711</a></li>
<li><a href="https://github.com/gin-gonic/gin/releases/tag/v1.7.0">https://github.com/gin-gonic/gin/releases/tag/v1.7.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2232">https://github.com/gin-gonic/gin/issues/2232</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2473">https://github.com/gin-gonic/gin/issues/2473</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2862">https://github.com/gin-gonic/gin/issues/2862</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2474">https://github.com/gin-gonic/gin/pull/2474</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2474#23issuecomment-729696437">https://github.com/gin-gonic/gin/pull/2474#23issuecomment-729696437</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2675">https://github.com/gin-gonic/gin/pull/2675</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2844">https://github.com/gin-gonic/gin/pull/2844</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/03e5e05ae089bc989f1ca41841f05504d29e3fd9">https://github.com/gin-gonic/gin/commit/03e5e05ae089bc989f1ca41841f05504d29e3fd9</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/5929d521715610c9dd14898ebbe1d188d5de8937">https://github.com/gin-gonic/gin/commit/5929d521715610c9dd14898ebbe1d188d5de8937</a></li>
<li><a href="https://github.com/gin-gonic/gin/releases/tag/v1.7.7">https://github.com/gin-gonic/gin/releases/tag/v1.7.7</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0052">https://pkg.go.dev/vuln/GO-2021-0052</a></li>
<li><a href="https://github.com/advisories/GHSA-h395-qcrw-5vmq">https://github.com/advisories/GHSA-h395-qcrw-5vmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h395-qcrw-5vmq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:53:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf/vanity/test] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2023-02-09T19:51:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0053">https://pkg.go.dev/vuln/GO-2021-0053</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf/types] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2023-02-09T19:51:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0053">https://pkg.go.dev/vuln/GO-2021-0053</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf/test] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2023-02-09T19:51:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0053">https://pkg.go.dev/vuln/GO-2021-0053</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf/plugin/unmarshal] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2023-02-09T19:51:34.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0053">https://pkg.go.dev/vuln/GO-2021-0053</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/git-lfs/git-lfs/lfshttp] Git LFS can execute a Git binary from the current directory on Windows]]></title>
        <id>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</id>
        <link href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5"/>
        <updated>2023-02-09T19:50:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.</p>
<p>This is the result of an incomplete fix for CVE-2020-27955.</p>
<p>This issue occurs because on Windows, <a href="https://github.com/golang/go/issues/38736">Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator</a>.</p>
<h3 id="patches">Patches</h3>
<p>This version should be patched in v2.13.2, which will be released in coordination with this security advisory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than avoiding untrusted repositories or using a different operating system, there is no workaround.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a discussion in <a href="https://github.com/git-lfs/git-lfs/discussions">the Git LFS discussion page</a>.</li>
<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21237">https://nvd.nist.gov/vuln/detail/CVE-2021-21237</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a">https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2">https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0098">https://pkg.go.dev/vuln/GO-2021-0098</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/advisories/GHSA-cx3w-xqmc-84g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/git-lfs/git-lfs/lfs] Git LFS can execute a Git binary from the current directory on Windows]]></title>
        <id>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</id>
        <link href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5"/>
        <updated>2023-02-09T19:50:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.</p>
<p>This is the result of an incomplete fix for CVE-2020-27955.</p>
<p>This issue occurs because on Windows, <a href="https://github.com/golang/go/issues/38736">Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator</a>.</p>
<h3 id="patches">Patches</h3>
<p>This version should be patched in v2.13.2, which will be released in coordination with this security advisory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than avoiding untrusted repositories or using a different operating system, there is no workaround.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a discussion in <a href="https://github.com/git-lfs/git-lfs/discussions">the Git LFS discussion page</a>.</li>
<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21237">https://nvd.nist.gov/vuln/detail/CVE-2021-21237</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a">https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2">https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0098">https://pkg.go.dev/vuln/GO-2021-0098</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/advisories/GHSA-cx3w-xqmc-84g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/git-lfs/git-lfs/creds] Git LFS can execute a Git binary from the current directory on Windows]]></title>
        <id>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</id>
        <link href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5"/>
        <updated>2023-02-09T19:50:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.</p>
<p>This is the result of an incomplete fix for CVE-2020-27955.</p>
<p>This issue occurs because on Windows, <a href="https://github.com/golang/go/issues/38736">Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator</a>.</p>
<h3 id="patches">Patches</h3>
<p>This version should be patched in v2.13.2, which will be released in coordination with this security advisory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than avoiding untrusted repositories or using a different operating system, there is no workaround.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a discussion in <a href="https://github.com/git-lfs/git-lfs/discussions">the Git LFS discussion page</a>.</li>
<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21237">https://nvd.nist.gov/vuln/detail/CVE-2021-21237</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a">https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2">https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0098">https://pkg.go.dev/vuln/GO-2021-0098</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/advisories/GHSA-cx3w-xqmc-84g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/git-lfs/git-lfs/commands] Git LFS can execute a Git binary from the current directory on Windows]]></title>
        <id>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</id>
        <link href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5"/>
        <updated>2023-02-09T19:50:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.</p>
<p>This is the result of an incomplete fix for CVE-2020-27955.</p>
<p>This issue occurs because on Windows, <a href="https://github.com/golang/go/issues/38736">Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator</a>.</p>
<h3 id="patches">Patches</h3>
<p>This version should be patched in v2.13.2, which will be released in coordination with this security advisory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than avoiding untrusted repositories or using a different operating system, there is no workaround.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a discussion in <a href="https://github.com/git-lfs/git-lfs/discussions">the Git LFS discussion page</a>.</li>
<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21237">https://nvd.nist.gov/vuln/detail/CVE-2021-21237</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a">https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2">https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0098">https://pkg.go.dev/vuln/GO-2021-0098</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/advisories/GHSA-cx3w-xqmc-84g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum/core/state] Consensus flaw during block processing in github.com/ethereum/go-ethereum]]></title>
        <id>https://github.com/advisories/GHSA-xw37-57qp-9mm4</id>
        <link href="https://github.com/advisories/GHSA-xw37-57qp-9mm4"/>
        <updated>2023-02-09T19:40:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A consensus-vulnerability in Geth could cause a chain split, where vulnerable versions refuse to accept the canonical chain. </p>
<h3 id="description">Description</h3>
<p>A flaw was repoted at 2020-08-11 by John Youngseok Yang (Software Platform Lab), where a particular sequence of transactions could cause a consensus failure.</p>
<ul>
<li><p>Tx 1:</p>
<ul>
<li><code>sender</code> invokes <code>caller</code>.</li>
<li><code>caller</code> invokes <code>0xaa</code>. <code>0xaa</code> has 3 wei, does a self-destruct-to-self</li>
<li><code>caller</code> does a  <code>1 wei</code> -call to <code>0xaa</code>, who thereby has 1 wei (the code in <code>0xaa</code> still executed, since the tx is still ongoing, but doesn't redo the selfdestruct, it takes a different path if callvalue is non-zero)</li>
</ul>
</li>
<li><p>Tx 2:</p>
<ul>
<li><code>sender</code> does a 5-wei call to 0xaa. No exec (since no code).</li>
</ul>
</li>
</ul>
<p>In geth, the result would be that <code>0xaa</code> had <code>6 wei</code>, whereas OE reported (correctly) <code>5</code> wei. Furthermore, in geth, if the second tx was not executed, the <code>0xaa</code> would be destructed, resulting in <code>0 wei</code>. Thus obviously wrong. </p>
<p>It was determined that the root cause was this <a href="https://github.com/ethereum/go-ethereum/commit/223b950944f494a5b4e0957fd9f92c48b09037ad">commit</a> from <a href="https://github.com/ethereum/go-ethereum/pull/19953">this PR</a>. The semantics of <code>createObject</code> was subtly changd, into returning a non-nil object (with <code>deleted=true</code>) where it previously did not if the account had been destructed. This return value caused the new object to inherit the old <code>balance</code>:</p>
<pre><code class="language-golang">func (s *StateDB) CreateAccount(addr common.Address) {
    newObj, prev := s.createObject(addr)
    if prev != nil {
        newObj.setBalance(prev.data.Balance)
    }
}
</code></pre>
<p>It was determined that the minimal possible correct fix was</p>
<pre><code class="language-diff">+++ b/core/state/statedb.go
@@ -589,7 +589,10 @@ func (s *StateDB) createObject(addr common.Address) (newobj, prev *stateObject)
                s.journal.append(resetObjectChange{prev: prev, prevdestruct: prevdestruct})
        }
        s.setStateObject(newobj)
-       return newobj, prev
+       if prev != nil &amp;&amp; !prev.deleted {
+               return newobj, prev
+       }
+       return newobj, nil
</code></pre>
<h3 id="patches">Patches</h3>
<p>See above. The fix was included in Geth <code>v1.9.20</code> "Paragade".</p>
<h3 id="credits">Credits</h3>
<p>The bug was found by @johnyangk and reported via <a href="mailto:bounty@ethereum.org">bounty@ethereum.org</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-xw37-57qp-9mm4">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-xw37-57qp-9mm4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26265">https://nvd.nist.gov/vuln/detail/CVE-2020-26265</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/21409">https://github.com/ethereum/go-ethereum/pull/21409</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.9.20">https://github.com/ethereum/go-ethereum/releases/tag/v1.9.20</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/21080">https://github.com/ethereum/go-ethereum/pull/21080</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/87c0ba92136a75db0ab2aba1046d4a9860375d6a">https://github.com/ethereum/go-ethereum/commit/87c0ba92136a75db0ab2aba1046d4a9860375d6a</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0105">https://pkg.go.dev/vuln/GO-2021-0105</a></li>
<li><a href="https://github.com/advisories/GHSA-xw37-57qp-9mm4">https://github.com/advisories/GHSA-xw37-57qp-9mm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw37-57qp-9mm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-29T21:14:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/holiman/uint256] Denial of service in geth]]></title>
        <id>https://github.com/advisories/GHSA-jm5c-rv3w-w83m</id>
        <link href="https://github.com/advisories/GHSA-jm5c-rv3w-w83m"/>
        <updated>2023-02-09T19:35:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Denial-of-service (crash) during block processing</p>
<h3 id="details">Details</h3>
<p>Affected versions suffer from a vulnerability which can be exploited through the <code>MULMOD</code> operation, by specifying a modulo of <code>0</code>: <code>mulmod(a,b,0)</code>, causing a <code>panic</code> in the underlying library. 
The crash was in the <code>uint256</code> library, where a buffer <a href="https://github.com/holiman/uint256/blob/4ce82e695c10ddad57215bdbeafb68b8c5df2c30/uint256.go#L442">underflowed</a>.</p>
<pre><code>if `d == 0`, `dLen` remains `0`
</code></pre>
<p>and <a href="https://github.com/holiman/uint256/blob/4ce82e695c10ddad57215bdbeafb68b8c5df2c30/uint256.go#L451">https://github.com/holiman/uint256/blob/4ce82e695c10ddad57215bdbeafb68b8c5df2c30/uint256.go#L451</a> will try to access index <code>[-1]</code>.</p>
<p>The <code>uint256</code> library was first merged in this <a href="https://github.com/ethereum/go-ethereum/commit/cf6674539c589f80031f3371a71c6a80addbe454">commit</a>, on 2020-06-08. 
Exploiting this vulnerabilty would cause all vulnerable nodes to drop off the network. </p>
<p>The issue was brought to our attention through a <a href="https://github.com/ethereum/go-ethereum/issues/21367">bug report</a>, showing a <code>panic</code> occurring on sync from genesis on the Ropsten network.</p>
<p>It was estimated that the least obvious way to fix this would be to merge the fix into <code>uint256</code>, make a new release of that library and then update the geth-dependency.</p>
<ul>
<li><a href="https://github.com/holiman/uint256/releases/tag/v1.1.1">https://github.com/holiman/uint256/releases/tag/v1.1.1</a> was made the same day, </li>
<li>PR to address the issue: <a href="https://github.com/holiman/uint256/pull/80">https://github.com/holiman/uint256/pull/80</a> </li>
<li>PR to update geth deps: <a href="https://github.com/ethereum/go-ethereum/pull/21368">https://github.com/ethereum/go-ethereum/pull/21368</a></li>
</ul>
<h3 id="patches">Patches</h3>
<p>Upgrade to v1.9.18 or higher</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-jm5c-rv3w-w83m">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-jm5c-rv3w-w83m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26242">https://nvd.nist.gov/vuln/detail/CVE-2020-26242</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/7163a6664ee664df81b9028ab3ba13b9d65a7196">https://github.com/ethereum/go-ethereum/commit/7163a6664ee664df81b9028ab3ba13b9d65a7196</a></li>
<li><a href="https://blog.ethereum.org/2020/11/12/geth_security_release/">https://blog.ethereum.org/2020/11/12/geth_security_release/</a></li>
<li><a href="https://github.com/holiman/uint256/pull/80">https://github.com/holiman/uint256/pull/80</a></li>
<li><a href="https://github.com/holiman/uint256/commit/6785da6e3eea403260a5760029e722aa4ff1716d">https://github.com/holiman/uint256/commit/6785da6e3eea403260a5760029e722aa4ff1716d</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0103">https://pkg.go.dev/vuln/GO-2021-0103</a></li>
<li><a href="https://github.com/advisories/GHSA-jm5c-rv3w-w83m">https://github.com/advisories/GHSA-jm5c-rv3w-w83m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jm5c-rv3w-w83m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-29T21:13:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/google/go-tpm] TPM 1.2 key authorization values vulnerable to TPM transport eavesdropper in go-tpm]]></title>
        <id>https://github.com/advisories/GHSA-5x29-3hr9-6wpw</id>
        <link href="https://github.com/advisories/GHSA-5x29-3hr9-6wpw"/>
        <updated>2023-02-09T19:34:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TPM 2.0 users are unaffected by this issue.</p>
<p>An adversary eavesdropping on the TPM 1.2 transport path can calculate <code>usageAuth</code> for a key created with CreateWrapKey, even though this value is encrypted as part of the TPM 1.2 command protocol.
The TPM 1.2 CreateWrapKey command accepts two secrets: <code>usageAuth</code> and <code>migrationAuth</code>. The ADIP protocol (TPM 1.2 specification, part 1, section 13.4) calls for these values to be encrypted with two different XOR keys.
Due to a bug in go-tpm prior to version 0.3.0, both <code>usageAuth</code> and <code>migrationAuth</code> are encrypted with the same XOR keystream. This allows an adversary to XOR <code>encUsageAuth</code> and <code>encMigrationAuth</code> together to calculate <code>usageAuth ^ encMigrationAuth</code>. Since <code>migrationAuth</code> is moot for all keys created with go-tpm's <code>CreateWrapKey</code> (since all keys created with this function are marked non-migratable), an adversary may guess or know (from code/binary inspection) that <code>migrationAuth</code> is all 0x00 bytes or some other fixed value. Such an adversary can then calculate <code>usageAuth</code> and use this value later to improperly use the created key, unbeknownst to the creator of the key.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in go-tpm version 0.3.0.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>TPM 2.0 users: No workaround needed. This issue only affects TPM 1.2 users.</li>
<li>TPM 1.2 users: Call CreateWrapKey with a random 20-byte value for <code>migrationAuth</code>, even though that value is not used again (since CreateWrapKey creates keys that are non-migratable). Do not store or log this value.</li>
</ul>
<h3 id="details">Details</h3>
<p>TPM 1.2 uses a protocol called ADIP (Authorization Data Insertion Protocol) to encrypt authorization values over-the-wire for newly created objects. This prevents a bus-snooping attack like those publicized by TPM Genie. TPM 2.0 makes this optional (the way to do it is with parameter-encryption sessions). You can read more about ADIP in section 13.4 of Part 1: Design Principles in the latest <a href="https://trustedcomputinggroup.org/resource/tpm-main-specification/">TPM 1.2 specification</a>. Normally, ADIP consists of the following steps:</p>
<pre><code>Key := SHA1(authSession.SharedSecret || a nonce)
Note: nonces and auth values in TPM 1.2 are always 20 bytes
EncAuth := XOR(Key, Auth)
</code></pre>
<p>When commands require one ADIP-encrypted auth value, the nonce is the last nonceEven (last nonce from the TPM).
When commands require two ADIP-encrypted auth values, the nonce for the first auth value is still nonceEven, and the nonce for the second auth value is the last nonceOdd, which is the one being provided by the caller along with the current command on the session.
The reason for this is that you wouldn't want an adversary to be able to XOR the two encrypted auth values together and come up with (auth 1 XOR key) XOR (auth 2 XOR key) where the "one-time" pad key is used twice and cancels itself out.</p>
<p>Here are the commands that take one authorization value by ADIP:</p>
<ul>
<li>Seal (the sealed data's auth value)</li>
<li>Sealx (the sealed data's auth value)</li>
<li>CreateKey (the key's auth value)</li>
<li>MakeIdentity (the AIK's auth value)</li>
<li>ChangeAuth (the entity's new auth value)</li>
<li>ChangeAuthOwner (the new owner auth value)</li>
<li>Delegate_CreateKeyDelegation (the new delegation auth value)</li>
<li>Delegate_CreateOwnerDelegation (the new delegation auth value)</li>
<li>NV_DefineSpace (the NV's auth value)</li>
<li>CreateCounter (the counter's auth value)</li>
</ul>
<p>Here are the commands that take two authorization values by ADIP:</p>
<ul>
<li>CreateWrapKey (the key's auth value, and the key's migration (to export out of the TPM) auth value)</li>
</ul>
<p>The migrationAuth value is never used if the key does not have the TPM_KEY_FLAGS.migratable flag set on it. go-tpm does not currently allow the caller to set this flag.
Here was the bug in our implementation of CreateWrapKey():</p>
<p><a href="https://github.com/google/go-tpm/blob/16766ac4521425bd02ad23868fbdf24749268669/tpm/tpm.go#L1322-L1329">https://github.com/google/go-tpm/blob/16766ac4521425bd02ad23868fbdf24749268669/tpm/tpm.go#L1322-L1329</a></p>
<p>Here we see that both usageAuth and migrationAuth are encrypted by the same XOR key. This is the correct key (i.e., it is based on nonceEven) for usageAuth, but not migrationAuth.</p>
<p>This means 2 things:</p>
<p><strong>First: migrationAuth is being set to some value that is effectively unrelated to migrationAuth as passed by the caller.</strong> Again, this is not interesting to all current callers (given that there is no way for them to pass TPM_KEY_FLAGS.migratable via the current API; migrationAuth is not a meaningful value).</p>
<p><strong>Second, and much more importantly: a user of go-tpm is vulnerable to the following attack by a passive bus-snooping adversary (CVE-2020-8918)</strong>
Wait for a CreateWrapKey command
Collect encUsageAuth and encMigrationAuth
Calculate (usageAuth XOR migrationAuth) := (encUsageAuth XOR encMigrationAuth)
Assuming migrationAuth is all 0x00 (a reasonable assumption for a caller who knows the key is not migratable), the calculation in (3) is the usage auth of the key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/go-tpm/security/advisories/GHSA-5x29-3hr9-6wpw">https://github.com/google/go-tpm/security/advisories/GHSA-5x29-3hr9-6wpw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8918">https://nvd.nist.gov/vuln/detail/CVE-2020-8918</a></li>
<li><a href="https://github.com/google/go-tpm/pull/195">https://github.com/google/go-tpm/pull/195</a></li>
<li><a href="https://github.com/google/go-tpm/commit/d7806cce857a1a020190c03348e5361725d8f141">https://github.com/google/go-tpm/commit/d7806cce857a1a020190c03348e5361725d8f141</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0095">https://pkg.go.dev/vuln/GO-2021-0095</a></li>
<li><a href="https://github.com/advisories/GHSA-5x29-3hr9-6wpw">https://github.com/advisories/GHSA-5x29-3hr9-6wpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5x29-3hr9-6wpw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-11T23:18:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-yaml/yaml] Excessive Platform Resource Consumption within a Loop in Kubernetes]]></title>
        <id>https://github.com/advisories/GHSA-wxc4-f4m6-wwqv</id>
        <link href="https://github.com/advisories/GHSA-wxc4-f4m6-wwqv"/>
        <updated>2023-02-09T17:45:10.000Z</updated>
        <content type="html"><![CDATA[<p>The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11254">https://nvd.nist.gov/vuln/detail/CVE-2019-11254</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/89535">https://github.com/kubernetes/kubernetes/issues/89535</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/87467/commits/b86df2bec4f377afc0ca03482ffad2f0a49a83b8">https://github.com/kubernetes/kubernetes/pull/87467/commits/b86df2bec4f377afc0ca03482ffad2f0a49a83b8</a></li>
<li><a href="https://github.com/go-yaml/yaml/commit/53403b58ad1b561927d19068c655246f2db79d48">https://github.com/go-yaml/yaml/commit/53403b58ad1b561927d19068c655246f2db79d48</a></li>
<li><a href="https://groups.google.com/d/msg/kubernetes-announce/ALL9s73E5ck/4yHe8J-PBAAJ">https://groups.google.com/d/msg/kubernetes-announce/ALL9s73E5ck/4yHe8J-PBAAJ</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200413-0003/">https://security.netapp.com/advisory/ntap-20200413-0003/</a></li>
<li><a href="https://github.com/go-yaml/yaml/pull/555">https://github.com/go-yaml/yaml/pull/555</a></li>
<li><a href="https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18496">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18496</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0036">https://pkg.go.dev/vuln/GO-2020-0036</a></li>
<li><a href="https://github.com/advisories/GHSA-wxc4-f4m6-wwqv">https://github.com/advisories/GHSA-wxc4-f4m6-wwqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wxc4-f4m6-wwqv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-20T16:55:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/facebook/fbthrift/thrift/lib/go/thrift] Improper Input Validation and Excessive Iteration in Go Facebook Thrift]]></title>
        <id>https://github.com/advisories/GHSA-x4rg-4545-4w7w</id>
        <link href="https://github.com/advisories/GHSA-x4rg-4545-4w7w"/>
        <updated>2023-02-09T17:43:44.000Z</updated>
        <content type="html"><![CDATA[<p>Go Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.03.04.00.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-3564">https://nvd.nist.gov/vuln/detail/CVE-2019-3564</a></li>
<li><a href="https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156">https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156</a></li>
<li><a href="https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2019-3564">https://www.facebook.com/security/advisories/cve-2019-3564</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0088">https://pkg.go.dev/vuln/GO-2021-0088</a></li>
<li><a href="https://github.com/advisories/GHSA-x4rg-4545-4w7w">https://github.com/advisories/GHSA-x4rg-4545-4w7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4rg-4545-4w7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cortexproject/cortex/pkg/alertmanager] Cortex's Alertmanager can expose local files content via specially crafted config]]></title>
        <id>https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</id>
        <link href="https://github.com/advisories/GHSA-cq2g-pw6q-hf7j"/>
        <updated>2023-02-09T16:55:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A local file inclusion vulnerability exists in Cortex versions v1.13.0, v1.13.1 and v1.14.0, where a malicious actor could remotely read local files as a result of parsing maliciously crafted Alertmanager configurations when submitted to the <a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">Alertmanager Set Configuration API</a>. Only users of the Cortex Alertmanager service using <code>-experimental.alertmanager.enable-api</code> or <code>enable_api: true</code> are affected.</p>
<h3 id="patches">Patches</h3>
<p>Affected Cortex users are advised to upgrade to versions 1.13.2 or 1.14.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Patching is ultimately advised. Using out-of-bound validation, Cortex administrators may reject Alertmanager configurations containing the <code>api_key_file</code> setting in the <code>opsgenie_configs</code> section and <code>opsgenie_api_key_file</code> in the <code>global</code> section before sending to the <a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">Set Alertmanager Configuration API</a> as a workaround.</p>
<h3 id="references">References</h3>
<ul>
<li>Fixed Versions:<ul>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.14.1">https://github.com/cortexproject/cortex/releases/tag/v1.14.1</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.13.2">https://github.com/cortexproject/cortex/releases/tag/v1.13.2</a></li>
</ul>
</li>
<li><a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">https://cortexmetrics.io/docs/api/#set-alertmanager-configuration</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/cortexproject/cortex/issues/new/choose">cortex</a></li>
<li>Email us at <a href="mailto:cortex-team@googlegroups.com">cortex-team@googlegroups.com</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cortexproject/cortex/security/advisories/GHSA-cq2g-pw6q-hf7j">https://github.com/cortexproject/cortex/security/advisories/GHSA-cq2g-pw6q-hf7j</a></li>
<li><a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">https://cortexmetrics.io/docs/api/#set-alertmanager-configuration</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.13.2">https://github.com/cortexproject/cortex/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.14.1">https://github.com/cortexproject/cortex/releases/tag/v1.14.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23536">https://nvd.nist.gov/vuln/detail/CVE-2022-23536</a></li>
<li><a href="https://github.com/cortexproject/cortex/commit/03e023d8b012887b31cc268d0d011b01e1e65506">https://github.com/cortexproject/cortex/commit/03e023d8b012887b31cc268d0d011b01e1e65506</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1175">https://pkg.go.dev/vuln/GO-2022-1175</a></li>
<li><a href="https://github.com/advisories/GHSA-cq2g-pw6q-hf7j">https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-19T21:09:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cortexproject/cortex/pkg/alertmanager] Cortex's Alertmanager can expose local files content via specially crafted config]]></title>
        <id>https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</id>
        <link href="https://github.com/advisories/GHSA-cq2g-pw6q-hf7j"/>
        <updated>2023-02-09T16:55:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A local file inclusion vulnerability exists in Cortex versions v1.13.0, v1.13.1 and v1.14.0, where a malicious actor could remotely read local files as a result of parsing maliciously crafted Alertmanager configurations when submitted to the <a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">Alertmanager Set Configuration API</a>. Only users of the Cortex Alertmanager service using <code>-experimental.alertmanager.enable-api</code> or <code>enable_api: true</code> are affected.</p>
<h3 id="patches">Patches</h3>
<p>Affected Cortex users are advised to upgrade to versions 1.13.2 or 1.14.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Patching is ultimately advised. Using out-of-bound validation, Cortex administrators may reject Alertmanager configurations containing the <code>api_key_file</code> setting in the <code>opsgenie_configs</code> section and <code>opsgenie_api_key_file</code> in the <code>global</code> section before sending to the <a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">Set Alertmanager Configuration API</a> as a workaround.</p>
<h3 id="references">References</h3>
<ul>
<li>Fixed Versions:<ul>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.14.1">https://github.com/cortexproject/cortex/releases/tag/v1.14.1</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.13.2">https://github.com/cortexproject/cortex/releases/tag/v1.13.2</a></li>
</ul>
</li>
<li><a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">https://cortexmetrics.io/docs/api/#set-alertmanager-configuration</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/cortexproject/cortex/issues/new/choose">cortex</a></li>
<li>Email us at <a href="mailto:cortex-team@googlegroups.com">cortex-team@googlegroups.com</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cortexproject/cortex/security/advisories/GHSA-cq2g-pw6q-hf7j">https://github.com/cortexproject/cortex/security/advisories/GHSA-cq2g-pw6q-hf7j</a></li>
<li><a href="https://cortexmetrics.io/docs/api/#set-alertmanager-configuration">https://cortexmetrics.io/docs/api/#set-alertmanager-configuration</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.13.2">https://github.com/cortexproject/cortex/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/cortexproject/cortex/releases/tag/v1.14.1">https://github.com/cortexproject/cortex/releases/tag/v1.14.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23536">https://nvd.nist.gov/vuln/detail/CVE-2022-23536</a></li>
<li><a href="https://github.com/cortexproject/cortex/commit/03e023d8b012887b31cc268d0d011b01e1e65506">https://github.com/cortexproject/cortex/commit/03e023d8b012887b31cc268d0d011b01e1e65506</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1175">https://pkg.go.dev/vuln/GO-2022-1175</a></li>
<li><a href="https://github.com/advisories/GHSA-cq2g-pw6q-hf7j">https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cq2g-pw6q-hf7j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-19T21:09:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v4/pkg/bindings/images] Buildah (as part of Podman) vulnerable to Path Traversal]]></title>
        <id>https://github.com/advisories/GHSA-rprg-4v7q-87v7</id>
        <link href="https://github.com/advisories/GHSA-rprg-4v7q-87v7"/>
        <updated>2023-02-09T16:54:15.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Buildah. The local path and the lowest subdirectory may be disclosed due to incorrect absolute path traversal, resulting in an impact to confidentiality.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4123">https://nvd.nist.gov/vuln/detail/CVE-2022-4123</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2144989">https://bugzilla.redhat.com/show_bug.cgi?id=2144989</a></li>
<li><a href="https://github.com/containers/podman/issues/13293">https://github.com/containers/podman/issues/13293</a></li>
<li><a href="https://github.com/containers/podman/pull/13531">https://github.com/containers/podman/pull/13531</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1159">https://pkg.go.dev/vuln/GO-2022-1159</a></li>
<li><a href="https://github.com/advisories/GHSA-rprg-4v7q-87v7">https://github.com/advisories/GHSA-rprg-4v7q-87v7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rprg-4v7q-87v7</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-12-08T18:30:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet/fileutil] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2023-02-09T16:53:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1114">https://pkg.go.dev/vuln/GO-2022-1114</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/aws/aws-sdk-go/service/s3/s3crypto] AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field]]></title>
        <id>https://github.com/advisories/GHSA-6jvc-q2x7-pchv</id>
        <link href="https://github.com/advisories/GHSA-6jvc-q2x7-pchv"/>
        <updated>2023-02-09T16:52:06.000Z</updated>
        <content type="html"><![CDATA[<p>The AWS S3 Crypto SDK sends an unencrypted hash of the plaintext alongside the ciphertext as a metadata field. This hash can be used to brute force the plaintext, if the hash is readable to the attacker. AWS now blocks this metadata field, but older SDK versions still send it.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2582">https://nvd.nist.gov/vuln/detail/CVE-2022-2582</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1">https://github.com/aws/aws-sdk-go/commit/35fa6ddf45c061e0f08d3a3b5119f8f4da38f6d1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0391">https://pkg.go.dev/vuln/GO-2022-0391</a></li>
<li><a href="https://github.com/advisories/GHSA-6jvc-q2x7-pchv">https://github.com/advisories/GHSA-6jvc-q2x7-pchv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jvc-q2x7-pchv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-28T00:30:23.000Z</published>
    </entry>
</feed>