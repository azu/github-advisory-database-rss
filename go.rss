<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-09-07T03:01:19.166Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] Cosmos-SDK Cosmovisor component may be vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-23px-mw2p-46qm</id>
        <link href="https://github.com/advisories/GHSA-23px-mw2p-46qm"/>
        <updated>2023-09-06T20:49:56.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Component</strong>: Cosmovisor
<strong>Criticality</strong>: Medium
<strong>Affected Versions</strong>: Cosmovisor &lt; v1.0.0 (distributed with Cosmos-SDK &lt; 0.46)
<strong>Affected Users</strong>: Validators and Node operators utilizing unsupported versions of Cosmovisor
<strong>Impact</strong>: DOS, potential RCE on node depending on configuration</p>
<p>An issue has been identified on unsupported versions of Cosmovisor which may result in a Denial of Service or Remote Code Execution path depending on configuration for a node or validator using the vulnerable version to manage their node. </p>
<p>If a validator is utilizing an affected version of Cosmovisor with <code>DAEMON_ALLOW_DOWNLOAD_BINARIES</code> set to true, a non-default configuration, it may be possible for an attacker to trigger a Remote Code Execution path as well on the host. In this configuration it is recommended to immediately stop use of the <code>DAEMON_ALLOW_DOWNLOAD_BINARIES</code> feature, and then proceed with an upgrade of Cosmovisor.</p>
<p>It is recommended that all validators utilizing unsupported versions of Cosmovisor to upgrade to the latest supported versions immediately.  If you are utilizing a forked version of Cosmos-SDK, it is recommended to stop use of Cosmovisor until it is possible to update to a supported version of Cosmovisor, whether through your projectâ€™s fork, or directly compiled from the Cosmos-SDK. At the time of this advisory, the latest version of Cosmovisor is v1.5.0. </p>
<p>Additionally, the Amulet team recommends that developers building chains powered by Cosmos-SDK share this advisory with validators and node operators to ensure this information is available to all impacted parties within their ecosystems.</p>
<p>For more information about Cosmovisor, see <a href="https://docs.cosmos.network/main/tooling/cosmovisor">https://docs.cosmos.network/main/tooling/cosmovisor</a></p>
<p>This issue was discovered by <a href="https://maxwelldulin.com">Maxwell Dulin</a> and Nathan Kirkland, who reported it to the Cosmos Bug Bounty Program.  If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<h2 id="how-to-tell-if-i-am-affected">How to tell if I am affected?</h2>
<p>Running the following command will output whether your cosmovisor version is vulnerable to this issue or not.  </p>
<p>Vulnerable to this issue: </p>
<pre><code>strings ./cosmovisor | grep -q "NEEDED at" &amp;&amp; echo "vulnerable" || echo "NOT vulnerable"

vulnerable
</code></pre>
<p>NOT vulnerable to this issue:</p>
<pre><code>strings ./cosmovisor_new | grep -q "NEEDED at" &amp;&amp; echo "vulnerable" || echo "NOT vulnerable"

NOT vulnerable
</code></pre>
<hr>
<p>A Note from Amulet on the Security Advisory Process</p>
<p>In the interest of timely resolution of this issue for validators and node operators, the Amulet team has chosen to use existing processes and resources for distributing security advisories within the Cosmos and Interchain Ecosystems. Stay tuned as we implement an improved, more robust security advisory distribution system that will provide equitable access to information about security issues in the Interchain Stack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-23px-mw2p-46qm">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-23px-mw2p-46qm</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/blob/tools/cosmovisor/v1.5.0/tools/cosmovisor/CHANGELOG.md">https://github.com/cosmos/cosmos-sdk/blob/tools/cosmovisor/v1.5.0/tools/cosmovisor/CHANGELOG.md</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.0">https://github.com/cosmos/cosmos-sdk/releases/tag/v0.46.0</a></li>
<li><a href="https://github.com/advisories/GHSA-23px-mw2p-46qm">https://github.com/advisories/GHSA-23px-mw2p-46qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-23px-mw2p-46qm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-06T20:49:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Go-Ethereum vulnerable to denial of service via malicious p2p message]]></title>
        <id>https://github.com/advisories/GHSA-ppjg-v974-84cm</id>
        <link href="https://github.com/advisories/GHSA-ppjg-v974-84cm"/>
        <updated>2023-09-06T19:49:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerable node, can be made to consume unbounded amounts of memory when handling specially crafted p2p messages sent from an attacker node.</p>
<p>Details about this bug will be released within 4-8 weeks, as per our official <a href="https://geth.ethereum.org/docs/developers/geth-developer/disclosures">vulnerability disclosure policy</a>.</p>
<h3 id="patches">Patches</h3>
<p>The fix is included in geth version <code>1.12.1-stable</code>, i.e, <code>1.12.2-unstable</code> and onwards. </p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds. </p>
<h3 id="credits">Credits</h3>
<p>This bug was reported by Patrick McHardy and reported via <a href="mailto:bounty@ethereum.org">bounty@ethereum.org</a>. </p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-ppjg-v974-84cm">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-ppjg-v974-84cm</a></li>
<li><a href="https://geth.ethereum.org/docs/developers/geth-developer/disclosures">https://geth.ethereum.org/docs/developers/geth-developer/disclosures</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.12.1">https://github.com/ethereum/go-ethereum/releases/tag/v1.12.1</a></li>
<li><a href="https://github.com/advisories/GHSA-ppjg-v974-84cm">https://github.com/advisories/GHSA-ppjg-v974-84cm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-ppjg-v974-84cm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-06T19:49:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd]]></title>
        <id>https://github.com/advisories/GHSA-hmfx-3pcx-653p</id>
        <link href="https://github.com/advisories/GHSA-hmfx-3pcx-653p"/>
        <updated>2023-09-06T19:24:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>
<p>Downstream applications that use the containerd client library may be affected as well.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that the <code>"USER $USERNAME"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT ["su", "-", "user"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>
<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>
<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>
<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>
<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>
</ul>
<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<p>To report a security issue in containerd:</p>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/new">Report a new vulnerability</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25173">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>
<li><a href="https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>
<li><a href="https://github.com/advisories/GHSA-4wjj-jwc9-2x96">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>
<li><a href="https://github.com/advisories/GHSA-fjm8-m7m6-2fjp">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>
<li><a href="https://github.com/advisories/GHSA-phjr-8j92-w5v7">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.5.18">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.6.18">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>
<li><a href="https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1574">https://pkg.go.dev/vuln/GO-2023-1574</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/</a></li>
<li><a href="https://github.com/advisories/GHSA-hmfx-3pcx-653p">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmfx-3pcx-653p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-16T14:11:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] Supplementary groups are not set up properly in github.com/containerd/containerd]]></title>
        <id>https://github.com/advisories/GHSA-hmfx-3pcx-653p</id>
        <link href="https://github.com/advisories/GHSA-hmfx-3pcx-653p"/>
        <updated>2023-09-06T19:24:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.</p>
<p>Downstream applications that use the containerd client library may be affected as well.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that the <code>"USER $USERNAME"</code> Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to <code>ENTRYPOINT ["su", "-", "user"]</code> to allow <code>su</code> to properly set up supplementary groups.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>
<li>Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18</li>
<li>CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0</li>
<li>Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0</li>
<li>Buildah: CVE-2022-2990, fixed in Buildah 1.27.1</li>
</ul>
<p>Note that CVE IDs apply to a particular implementation, even if an issue is common.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<p>To report a security issue in containerd:</p>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/new">Report a new vulnerability</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p">https://github.com/containerd/containerd/security/advisories/GHSA-hmfx-3pcx-653p</a></li>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4">https://github.com/moby/moby/security/advisories/GHSA-rc4r-wh2q-q6c4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-25173">https://nvd.nist.gov/vuln/detail/CVE-2023-25173</a></li>
<li><a href="https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a">https://github.com/containerd/containerd/commit/133f6bb6cd827ce35a5fb279c1ead12b9d21460a</a></li>
<li><a href="https://github.com/advisories/GHSA-4wjj-jwc9-2x96">https://github.com/advisories/GHSA-4wjj-jwc9-2x96</a></li>
<li><a href="https://github.com/advisories/GHSA-fjm8-m7m6-2fjp">https://github.com/advisories/GHSA-fjm8-m7m6-2fjp</a></li>
<li><a href="https://github.com/advisories/GHSA-phjr-8j92-w5v7">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.5.18">https://github.com/containerd/containerd/releases/tag/v1.5.18</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.6.18">https://github.com/containerd/containerd/releases/tag/v1.6.18</a></li>
<li><a href="https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1574">https://pkg.go.dev/vuln/GO-2023-1574</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/</a></li>
<li><a href="https://github.com/advisories/GHSA-hmfx-3pcx-653p">https://github.com/advisories/GHSA-hmfx-3pcx-653p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmfx-3pcx-653p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-16T14:11:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/buildkit] Buildkit credentials inlined to Git URLs could end up in provenance attestation]]></title>
        <id>https://github.com/advisories/GHSA-gc89-7gcr-jxqc</id>
        <link href="https://github.com/advisories/GHSA-gc89-7gcr-jxqc"/>
        <updated>2023-09-06T19:23:18.000Z</updated>
        <content type="html"><![CDATA[<p>When the user sends a build request that contains a Git URL that contains credentials and the build creates a provenance attestation describing that build, these credentials could be visible from the provenance attestation.</p>
<p>Git URL can be passed in two ways:</p>
<ol>
<li>Invoking build directly from a URL with credentials.</li>
</ol>
<pre><code>buildctl build --frontend dockerfile.v0 --context https://&lt;credentials&gt;@url/repo.git
</code></pre>
<p>Equivalent in <code>docker buildx</code> would be</p>
<pre><code>docker buildx build https://&lt;credentials&gt;@url/repo.git
</code></pre>
<ol start="2">
<li>If the client sends additional VCS info hint parameters on builds from a local source. Usually, that would mean reading the origin URL from <code>.git/config</code> file.</li>
</ol>
<p>Thanks to Oscar Alberto Tovar for discovering the issue.</p>
<h3 id="impact">Impact</h3>
<p>When a build is performed under specific conditions where credentials were passed to BuildKit they may be visible to everyone who has access to provenance attestation.</p>
<p>Provenance attestations and VCS info hints were added in version v0.11.0. Previous versions are not vulnerable.</p>
<p>In v0.10, when building directly from Git URL, the same URL could be visible in <code>BuildInfo</code> structure that is a predecessor of Provenance attestations. Previous versions are not vulnerable.</p>
<p>Note: <a href="https://github.com/docker/build-push-action">Docker Build-push Github action</a> builds from Git URLs by default but <strong>is not</strong> affected by this issue even when working with private repositories because the credentials are passed <a href="https://github.com/docker/build-push-action/blob/v4.0.0/src/context.ts#L203">with build secrets</a> and not with URLs.</p>
<h3 id="patches">Patches</h3>
<p>Bug is fixed in v0.11.4 . </p>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to pass credentials with build secrets when building directly from Git URL as a more secure alternative than modifying the URL.</p>
<p>In Docker Buildx, VCS info hint can be disabled by setting <code>BUILDX_GIT_INFO=0</code>. <code>buildctl</code> does not set VCS hints based on <code>.git</code> directory, and values would need to be passed manually with <code>--opt</code>.</p>
<h3 id="references">References</h3>
<ul>
<li>Inline credentials in URLs deprecated in RFC3986 <a href="https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1">https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/buildkit/security/advisories/GHSA-gc89-7gcr-jxqc">https://github.com/moby/buildkit/security/advisories/GHSA-gc89-7gcr-jxqc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26054">https://nvd.nist.gov/vuln/detail/CVE-2023-26054</a></li>
<li><a href="https://github.com/moby/buildkit/commit/75123c696506bdbca1ed69906479e200f1b62604">https://github.com/moby/buildkit/commit/75123c696506bdbca1ed69906479e200f1b62604</a></li>
<li><a href="https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1">https://www.rfc-editor.org/rfc/rfc3986#section-3.2.1</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI/</a></li>
<li><a href="https://github.com/advisories/GHSA-gc89-7gcr-jxqc">https://github.com/advisories/GHSA-gc89-7gcr-jxqc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gc89-7gcr-jxqc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-03-07T20:09:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/minio/minio] Minio vulnerable to Privilege Escalation on Windows via Path separator manipulation]]></title>
        <id>https://github.com/advisories/GHSA-w23q-4hw3-2pp6</id>
        <link href="https://github.com/advisories/GHSA-w23q-4hw3-2pp6"/>
        <updated>2023-09-06T18:43:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All users on Windows are impacted. MinIO fails to filter the <code>\</code> character, which allows for arbitrary object placement across
buckets. As a result, a user with low privileges, such as an access key, service account, or STS credential, which only has permission to <code>PutObject</code> in a specific bucket, can create an admin user.</p>
<h3 id="patches">Patches</h3>
<p>There are two patches that fix this problem comprehensively</p>
<pre><code>commit b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc
Author: Harshavardhana &lt;harsha@minio.io&gt;
Date:   Mon Mar 20 13:16:00 2023 -0700

    reject object names with '\' on windows (#16856)
</code></pre>
<pre><code>commit 8d6558b23649f613414c8527b58973fbdfa4d1b8
Author: Harshavardhana &lt;harsha@minio.io&gt;
Date:   Mon Mar 20 00:35:25 2023 -0700

    fix: convert '\' to '/' on windows (#16852)
</code></pre>
<h3 id="workarounds">Workarounds</h3>
<p>There are no known workarounds</p>
<h3 id="references">References</h3>
<p>The vulnerable code:</p>
<pre><code class="language-go">// minio/cmd/generic-handlers.go
// Check if the incoming path has bad path components,
// such as ".." and "."
// SlashSeparator -&gt; /
// dotdotComponent -&gt; ..
// dotComponent -&gt; .
func hasBadPathComponent(path string) bool {
  path = strings.TrimSpace(path)
  for _, p := range strings.Split(path, SlashSeparator) {
    switch strings.TrimSpace(p) {
    case dotdotComponent:
      return true
    case dotComponent:
      return true
    }
  }
  return false
}
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/minio/minio/security/advisories/GHSA-w23q-4hw3-2pp6">https://github.com/minio/minio/security/advisories/GHSA-w23q-4hw3-2pp6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28433">https://nvd.nist.gov/vuln/detail/CVE-2023-28433</a></li>
<li><a href="https://github.com/minio/minio/commit/8d6558b23649f613414c8527b58973fbdfa4d1b8">https://github.com/minio/minio/commit/8d6558b23649f613414c8527b58973fbdfa4d1b8</a></li>
<li><a href="https://github.com/minio/minio/commit/b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc">https://github.com/minio/minio/commit/b3c54ec81e0a06392abfb3a1ffcdc80c6fbf6ebc</a></li>
<li><a href="https://github.com/minio/minio/releases/tag/RELEASE.2023-03-20T20-16-18Z">https://github.com/minio/minio/releases/tag/RELEASE.2023-03-20T20-16-18Z</a></li>
<li><a href="https://github.com/advisories/GHSA-w23q-4hw3-2pp6">https://github.com/advisories/GHSA-w23q-4hw3-2pp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w23q-4hw3-2pp6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-06T18:43:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/minio/minio] Privilege Escalation on Linux/MacOS]]></title>
        <id>https://github.com/advisories/GHSA-2pxw-r47w-4p8c</id>
        <link href="https://github.com/advisories/GHSA-2pxw-r47w-4p8c"/>
        <updated>2023-09-05T15:45:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing <code>PostPolicyBucket</code>. To carry out this attack, the attacker requires credentials with <code>arn:aws:s3:::*</code> permission, as well as enabled Console API access.</p>
<h3 id="patches">Patches</h3>
<pre><code>commit 67f4ba154a27a1b06e48bfabda38355a010dfca5
Author: Aditya Manthramurthy &lt;donatello@users.noreply.github.com&gt;
Date:   Sun Mar 19 21:15:20 2023 -0700

    fix: post policy request security bypass (#16849)
</code></pre>
<h3 id="workarounds">Workarounds</h3>
<p>Browser API access must be enabled turning off <code>MINIO_BROWSER=off</code> allows for this workaround.</p>
<h3 id="references">References</h3>
<p>The vulnerable code:</p>
<pre><code class="language-go">// minio/cmd/generic-handlers.go
func setRequestValidityHandler(h http.Handler) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    // ...
    // For all other requests reject access to reserved buckets
    bucketName, _ := request2BucketObjectName(r)
    if isMinioReservedBucket(bucketName) || isMinioMetaBucket(bucketName) {
      if !guessIsRPCReq(r) &amp;&amp; !guessIsBrowserReq(r) &amp;&amp; !guessIsHealthCheckReq(r) &amp;&amp; !guessIsMetricsReq(r) &amp;&amp; !isAdminReq(r) &amp;&amp; !isKMSReq(r) {
        if ok {
          tc.FuncName = "handler.ValidRequest"
          tc.ResponseRecorder.LogErrBody = true
        }
        writeErrorResponse(r.Context(), w, errorCodes.ToAPIErr(ErrAllAccessDisabled), r.URL)
        return
      }
    }
    // ...
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c">https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28434">https://nvd.nist.gov/vuln/detail/CVE-2023-28434</a></li>
<li><a href="https://github.com/minio/minio/pull/16849">https://github.com/minio/minio/pull/16849</a></li>
<li><a href="https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5">https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5</a></li>
<li><a href="https://github.com/advisories/GHSA-2pxw-r47w-4p8c">https://github.com/advisories/GHSA-2pxw-r47w-4p8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2pxw-r47w-4p8c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-05T15:45:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] usememos/memos vulnerable to improper input validation]]></title>
        <id>https://github.com/advisories/GHSA-96gq-6ch5-mm54</id>
        <link href="https://github.com/advisories/GHSA-96gq-6ch5-mm54"/>
        <updated>2023-09-01T21:49:31.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation in GitHub repository usememos/memos prior to 0.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4698">https://nvd.nist.gov/vuln/detail/CVE-2023-4698</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/e1107d79-1d63-4238-90b7-5cc150512654">https://huntr.dev/bounties/e1107d79-1d63-4238-90b7-5cc150512654</a></li>
<li><a href="https://github.com/advisories/GHSA-96gq-6ch5-mm54">https://github.com/advisories/GHSA-96gq-6ch5-mm54</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96gq-6ch5-mm54</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] usememos/memos vulnerable to privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-5j6p-59cj-j6cp</id>
        <link href="https://github.com/advisories/GHSA-5j6p-59cj-j6cp"/>
        <updated>2023-09-01T21:49:31.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Privilege Management in GitHub repository usememos/memos prior to 0.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4697">https://nvd.nist.gov/vuln/detail/CVE-2023-4697</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/3ff3325a-1dcb-4da7-894d-81a9cf726d81">https://huntr.dev/bounties/3ff3325a-1dcb-4da7-894d-81a9cf726d81</a></li>
<li><a href="https://github.com/advisories/GHSA-5j6p-59cj-j6cp">https://github.com/advisories/GHSA-5j6p-59cj-j6cp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j6p-59cj-j6cp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] Account TakeOver Due to Improper Handling of JWT Tokens in usememos/memos]]></title>
        <id>https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</id>
        <link href="https://github.com/advisories/GHSA-j2gj-g3p9-7mrr"/>
        <updated>2023-09-01T21:43:05.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Access Control in GitHub repository usememos/memos prior to 0.13.2. As of commit <code>c9aa2eeb9</code> access tokens which fail validation are rejected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4696">https://nvd.nist.gov/vuln/detail/CVE-2023-4696</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/4747a485-77c3-4bb5-aab0-21253ef303ca">https://huntr.dev/bounties/4747a485-77c3-4bb5-aab0-21253ef303ca</a></li>
<li><a href="https://github.com/advisories/GHSA-j2gj-g3p9-7mrr">https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bnb-chain/tss-lib] tss-lib leaks secret keys in response to incorrectly constructed Paillier moduli]]></title>
        <id>https://github.com/advisories/GHSA-h24c-6p6p-m3vx</id>
        <link href="https://github.com/advisories/GHSA-h24c-6p6p-m3vx"/>
        <updated>2023-09-01T20:51:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The specification of the GG18 threshold ECDSA signature protocol contains a vulnerability allowing an attacker to recover the shared secret key. If a participant generates a Paillier modulus <code>N</code> containing small factors (less than <code>2^100</code>) they can interact with other participants in the signing protocol to steal their secret key shares in as little as sixteen signing attempts. The master key can then be reconstructed from these shares.</p>
<h3 id="patches">Patches</h3>
<p>The implementation of GG18 in tss-lib did not prove that <code>N</code> is biprime or that it doesn't contain small factors. The fixed implementation adds the following proofs from the CGGMP21 threshold ECDSA protocol to the key generation:</p>
<ul>
<li>Paillier-Blum Modulus (<code>N</code> is the product of two primes)</li>
<li>No Small Factor (both factors of <code>N</code> are greater than <code>2^256</code>)</li>
</ul>
<p>These proofs apply to both the Paillier encryption modulus <code>N</code>, and the modulus <code>NTilde</code> used in MTA proofs.</p>
<p>To address the issue in the resharing protocol, an additional round has been added to the end so that participants can confirm that they received valid proofs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://eprint.iacr.org/2019/114">GG18</a></li>
<li><a href="https://eprint.iacr.org/2021/060">CGGMP21</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/threshold-network/tss-lib/security/advisories/GHSA-h24c-6p6p-m3vx">https://github.com/threshold-network/tss-lib/security/advisories/GHSA-h24c-6p6p-m3vx</a></li>
<li><a href="https://github.com/threshold-network/tss-lib/commit/2e712689cfbeefede15f95a0ec7112227d86f702">https://github.com/threshold-network/tss-lib/commit/2e712689cfbeefede15f95a0ec7112227d86f702</a></li>
<li><a href="https://eprint.iacr.org/2019/114">https://eprint.iacr.org/2019/114</a></li>
<li><a href="https://eprint.iacr.org/2021/060">https://eprint.iacr.org/2021/060</a></li>
<li><a href="https://github.com/advisories/GHSA-h24c-6p6p-m3vx">https://github.com/advisories/GHSA-h24c-6p6p-m3vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h24c-6p6p-m3vx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-01T20:51:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ansible-semaphore/semaphore] Code injection in ansible semaphore]]></title>
        <id>https://github.com/advisories/GHSA-3r32-cp7v-5wq4</id>
        <link href="https://github.com/advisories/GHSA-3r32-cp7v-5wq4"/>
        <updated>2023-08-30T20:43:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in ansible semaphore v.2.8.90 allows a remote attacker to execute arbitrary code via a crafted payload to the extra variables parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39059">https://nvd.nist.gov/vuln/detail/CVE-2023-39059</a></li>
<li><a href="https://gist.github.com/Alevsk/1757da24c5fb8db735d392fd4146ca3a">https://gist.github.com/Alevsk/1757da24c5fb8db735d392fd4146ca3a</a></li>
<li><a href="https://www.alevsk.com/2023/07/a-quick-story-of-security-pitfalls-with-execcommand-in-software-integrations/">https://www.alevsk.com/2023/07/a-quick-story-of-security-pitfalls-with-execcommand-in-software-integrations/</a></li>
<li><a href="https://github.com/advisories/GHSA-3r32-cp7v-5wq4">https://github.com/advisories/GHSA-3r32-cp7v-5wq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r32-cp7v-5wq4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-29T00:32:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/goxmldsig] gosaml2 is vulnerable to NULL Pointer Dereference from malformed XML signatures]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2023-08-30T18:52:40.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/russellhaering/goxmldsig/issues/48">https://github.com/russellhaering/goxmldsig/issues/48</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/pull/90">https://github.com/russellhaering/gosaml2/pull/90</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424">https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0">https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference from malformed XML signatures]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2023-08-30T18:52:40.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/russellhaering/goxmldsig/issues/48">https://github.com/russellhaering/goxmldsig/issues/48</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/pull/90">https://github.com/russellhaering/gosaml2/pull/90</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424">https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0">https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pires/go-proxyproto] github.com/pires/go-proxyproto vulnerable to DoS via Connection descriptor exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-xcf7-q56x-78gh</id>
        <link href="https://github.com/advisories/GHSA-xcf7-q56x-78gh"/>
        <updated>2023-08-30T18:51:54.000Z</updated>
        <content type="html"><![CDATA[<p>The package <code>github.com/pires/go-proxyproto</code> before 0.6.1 is vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header. While this issue was patched in 0.6.0, the fix introduced additional issues which were subsequently patched in 0.6.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23409">https://nvd.nist.gov/vuln/detail/CVE-2021-23409</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/65">https://github.com/pires/go-proxyproto/issues/65</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74">https://github.com/pires/go-proxyproto/pull/74</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346">https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.0">https://github.com/pires/go-proxyproto/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/75">https://github.com/pires/go-proxyproto/issues/75</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.1">https://github.com/pires/go-proxyproto/releases/tag/v0.6.1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0233">https://pkg.go.dev/vuln/GO-2022-0233</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/76">https://github.com/pires/go-proxyproto/pull/76</a></li>
<li><a href="https://github.com/pires/go-proxyproto/commit/2e44d7a76a851d66890ab341403253afae5caac2">https://github.com/pires/go-proxyproto/commit/2e44d7a76a851d66890ab341403253afae5caac2</a></li>
<li><a href="https://github.com/advisories/GHSA-xcf7-q56x-78gh">https://github.com/advisories/GHSA-xcf7-q56x-78gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcf7-q56x-78gh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-07-26T21:23:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mellium.im/sasl] mellium.im/sasl authentication failure due to insufficient nonce randomness]]></title>
        <id>https://github.com/advisories/GHSA-gvfj-fxx3-j323</id>
        <link href="https://github.com/advisories/GHSA-gvfj-fxx3-j323"/>
        <updated>2023-08-30T18:49:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Mellium mellium.im/sasl before 0.3.1. When performing SCRAM-based SASL authentication, if the remote end advertises support for channel binding, no random nonce is generated (instead, the nonce is empty). This causes authentication to fail in the best case, but (if paired with a remote end that does not validate the length of the nonce) could lead to insufficient randomness being used during authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-48195">https://nvd.nist.gov/vuln/detail/CVE-2022-48195</a></li>
<li><a href="https://mellium.im/cve/cve-2022-48195/">https://mellium.im/cve/cve-2022-48195/</a></li>
<li><a href="https://codeberg.org/mellium/sasl/commit/e6cbf681b247c4efa1477eaad2cc47a01707b732">https://codeberg.org/mellium/sasl/commit/e6cbf681b247c4efa1477eaad2cc47a01707b732</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1268">https://pkg.go.dev/vuln/GO-2023-1268</a></li>
<li><a href="https://codeberg.org/mellium/sasl/releases/tag/v0.3.1">https://codeberg.org/mellium/sasl/releases/tag/v0.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-gvfj-fxx3-j323">https://github.com/advisories/GHSA-gvfj-fxx3-j323</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvfj-fxx3-j323</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-31T03:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mellium.im/xmpp] TLS certificate validation error in mellium.im/xmpp]]></title>
        <id>https://github.com/advisories/GHSA-m658-p24x-p74r</id>
        <link href="https://github.com/advisories/GHSA-m658-p24x-p74r"/>
        <updated>2023-08-30T18:47:55.000Z</updated>
        <content type="html"><![CDATA[<p>In Mellium mellium.im/xmpp through 0.21.0, an attacker capable of spoofing DNS TXT records can redirect a WebSocket connection request to a server under their control without causing TLS certificate verification to fail. This occurs because the wrong host name is selected during this verification.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24968">https://nvd.nist.gov/vuln/detail/CVE-2022-24968</a></li>
<li><a href="https://mellium.im/cve/cve-2022-24968/">https://mellium.im/cve/cve-2022-24968/</a></li>
<li><a href="https://mellium.im/xmpp/">https://mellium.im/xmpp/</a></li>
<li><a href="https://github.com/mellium/xmpp/pull/260">https://github.com/mellium/xmpp/pull/260</a></li>
<li><a href="https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac">https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac</a></li>
<li><a href="https://mellium.im/issue/259">https://mellium.im/issue/259</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0370">https://pkg.go.dev/vuln/GO-2022-0370</a></li>
<li><a href="https://github.com/advisories/GHSA-m658-p24x-p74r">https://github.com/advisories/GHSA-m658-p24x-p74r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m658-p24x-p74r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-12T00:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm passes repository credentials to alternate domain]]></title>
        <id>https://github.com/advisories/GHSA-56hp-xqp3-w2jf</id>
        <link href="https://github.com/advisories/GHSA-56hp-xqp3-w2jf"/>
        <updated>2023-08-30T18:45:09.000Z</updated>
        <content type="html"><![CDATA[<p>While working on the Helm source, a Helm core maintainer discovered a situation where the username and password credentials associated with a Helm repository could be passed on to another domain referenced by that Helm repository.</p>
<h3 id="impact">Impact</h3>
<p>The <code>index.yaml</code> within a Helm chart repository contains a reference where to get the chart archive for each version of a chart. The reference can be relative to the <code>index.yaml</code> file or a URL to location. The URL can point to any domain and this is a feature leveraged by Helm users. For example, an <code>index.yaml</code> file can be hosted on GitHub pages while the chart archives are hosted as GitHub releases. These are on different domain names and the <code>index.yaml</code> file points to the other domain.</p>
<p>When a username and password were associated with a Helm repository the username and password were also passed on to other domains referenced in the <code>index.yaml</code> file. This occurred when Helm went to retrieve a specific chart archive on the other domain.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.6.1.</p>
<p>There is a slight behavior change to credential handling with regard to repositories. Usernames and passwords are only passed to the URL location of the Helm repository by default. The username and password are scoped to the scheme, host, and port of the Helm repository. To pass the username and password to other domains Helm may encounter when it goes to retrieve a chart, the new <code>--pass-credentials</code> flag can be used. This flag restores the old behavior for a single repository as an opt-in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you use a username and password for a Helm repository you can audit the Helm repository in order to check for another domain being used that could have received the credentials. In the <code>index.yaml</code> file for that repository, look for another domain in the <code>urls</code> list for the chart versions. If there is another domain found and that chart version was pulled or installed the credentials would have been passed on.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf">https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf</a></li>
<li><a href="https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f">https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0384">https://pkg.go.dev/vuln/GO-2022-0384</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32690">https://nvd.nist.gov/vuln/detail/CVE-2021-32690</a></li>
<li><a href="https://github.com/advisories/GHSA-56hp-xqp3-w2jf">https://github.com/advisories/GHSA-56hp-xqp3-w2jf</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.6.1">https://github.com/helm/helm/releases/tag/v3.6.1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56hp-xqp3-w2jf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-23T18:14:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm Vulnerable to denial of service through string value parsing]]></title>
        <id>https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</id>
        <link href="https://github.com/advisories/GHSA-7hfp-qfw3-5jxh"/>
        <updated>2023-08-30T18:43:11.000Z</updated>
        <content type="html"><![CDATA[<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the <code>_strvals_</code> package that can cause an out of memory panic. Out of memory panics cannot be recovered from. Applications that use functions from the <code>_strvals_</code> package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.</p>
<h3 id="impact">Impact</h3>
<p>The <code>_strvals_</code> package contains a parser that turns strings into Go structures. For example, the Helm client has command line flags like <code>--set</code>, <code>--set-string</code>, and others that enable the user to pass in strings that are merged into the values. The <code>_strvals_</code> package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic.</p>
<p>Applications that use the <code>_strvals_</code> package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from.</p>
<p>The Helm Client will panic with input to <code>--set</code>, <code>--set-string</code>, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.9.4. </p>
<h3 id="workarounds">Workarounds</h3>
<p>SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the <code>_strvals_</code> functions.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Ada Logics in a fuzzing audit sponsored by CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36055">https://nvd.nist.gov/vuln/detail/CVE-2022-36055</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.9.4">https://github.com/helm/helm/releases/tag/v3.9.4</a></li>
<li><a href="https://github.com/helm/helm/commit/10466e3e179cc8cad4b0bb451108d3c442c69fbc">https://github.com/helm/helm/commit/10466e3e179cc8cad4b0bb451108d3c442c69fbc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0962">https://pkg.go.dev/vuln/GO-2022-0962</a></li>
<li><a href="https://github.com/advisories/GHSA-7hfp-qfw3-5jxh">https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-30T20:52:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm vulnerable to denial of service through through repository index file]]></title>
        <id>https://github.com/advisories/GHSA-53c4-hhmh-vw5q</id>
        <link href="https://github.com/advisories/GHSA-53c4-hhmh-vw5q"/>
        <updated>2023-08-30T18:40:47.000Z</updated>
        <content type="html"><![CDATA[<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the <em>repo</em> package that can cause a segmentation violation. Applications that use functions from the <em>repo</em> package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.</p>
<h3 id="impact">Impact</h3>
<p>The <em>repo</em> package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The <em>repo</em> package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation.</p>
<p>Applications that use the <em>repo</em> package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from.</p>
<p>The Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.10.3. </p>
<h3 id="workarounds">Workarounds</h3>
<p>SDK users can validate index files that are correctly formatted before passing them to the <em>repo</em> functions.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Ada Logics in a fuzzing audit sponsored by CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-53c4-hhmh-vw5q">https://github.com/helm/helm/security/advisories/GHSA-53c4-hhmh-vw5q</a></li>
<li><a href="https://github.com/helm/helm/commit/638ebffbc2e445156f3978f02fd83d9af1e56f5b">https://github.com/helm/helm/commit/638ebffbc2e445156f3978f02fd83d9af1e56f5b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23525">https://nvd.nist.gov/vuln/detail/CVE-2022-23525</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1165">https://pkg.go.dev/vuln/GO-2022-1165</a></li>
<li><a href="https://github.com/advisories/GHSA-53c4-hhmh-vw5q">https://github.com/advisories/GHSA-53c4-hhmh-vw5q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53c4-hhmh-vw5q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-14T21:38:31.000Z</published>
    </entry>
</feed>