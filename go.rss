<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-07-05T20:01:19.779Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/rs/cors] Denial of service via malicious preflight requests in github.com/rs/cors]]></title>
        <id>https://github.com/advisories/GHSA-mh55-gqvf-xfwm</id>
        <link href="https://github.com/advisories/GHSA-mh55-gqvf-xfwm"/>
        <updated>2024-07-05T19:42:49.000Z</updated>
        <content type="html"><![CDATA[<p>Middleware causes a prohibitive amount of heap allocations when processing malicious preflight requests that include a Access-Control-Request-Headers (ACRH) header whose value contains many commas. This behavior can be abused by attackers to produce undue load on the middleware/server as an attempt to cause a denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rs/cors/issues/170">https://github.com/rs/cors/issues/170</a></li>
<li><a href="https://github.com/rs/cors/pull/171">https://github.com/rs/cors/pull/171</a></li>
<li><a href="https://github.com/rs/cors/commit/4c32059b2756926619f6bf70281b91be7b5dddb2">https://github.com/rs/cors/commit/4c32059b2756926619f6bf70281b91be7b5dddb2</a></li>
<li><a href="https://github.com/advisories/GHSA-mh55-gqvf-xfwm">https://github.com/advisories/GHSA-mh55-gqvf-xfwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh55-gqvf-xfwm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T19:42:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] Pomerium exposed OAuth2 access and ID tokens in user info endpoint response]]></title>
        <id>https://github.com/advisories/GHSA-rrqr-7w59-637v</id>
        <link href="https://github.com/advisories/GHSA-rrqr-7w59-637v"/>
        <updated>2024-07-05T19:42:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Pomerium user info page (at <code>/.pomerium</code>) unintentionally included serialized OAuth2 access and ID tokens from the logged-in user's session. These tokens are not intended to be exposed to end users.</p>
<p>This issue may be more severe in the presence of an XSS vulnerability in an upstream application proxied through Pomerium. If an attacker could insert a malicious script onto a web page proxied through Pomerium, that script could access these tokens by making a request to the <code>/.pomerium</code> endpoint.</p>
<p>Upstream applications that authenticate only the ID token may be vulnerable to user impersonation using a token obtained in this manner.</p>
<p>Note that an OAuth2 access token or ID token by itself is not sufficient to hijack a user's Pomerium session. Upstream applications should not be vulnerable to user impersonation via these tokens provided:</p>
<ul>
<li>the application verifies the <a href="https://www.pomerium.com/docs/capabilities/getting-users-identity">Pomerium JWT</a> for each request,</li>
<li>the connection between Pomerium and the application is secured by mTLS,</li>
<li>or the connection between Pomerium and the application is otherwise secured at the network layer.</li>
</ul>
<h3 id="patches">Patches</h3>
<p>Patched in Pomerium v0.26.1.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/pomerium/pomerium/issues">pomerium/pomerium</a></li>
<li>Email us at <a href="mailto:security@pomerium.com">security@pomerium.com</a></li>
</ul>
<p>Credit to Vadim Sheydaev, aka Enr1g for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-rrqr-7w59-637v">https://github.com/pomerium/pomerium/security/advisories/GHSA-rrqr-7w59-637v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39315">https://nvd.nist.gov/vuln/detail/CVE-2024-39315</a></li>
<li><a href="https://github.com/pomerium/pomerium/commit/4c7c4320afb2ced70ba19b46de1ac4383f3daa48">https://github.com/pomerium/pomerium/commit/4c7c4320afb2ced70ba19b46de1ac4383f3daa48</a></li>
<li><a href="https://github.com/advisories/GHSA-rrqr-7w59-637v">https://github.com/advisories/GHSA-rrqr-7w59-637v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rrqr-7w59-637v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-05T19:42:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/moby] Classic builder cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-xw73-rw38-6vjc</id>
        <link href="https://github.com/advisories/GHSA-xw73-rw38-6vjc"/>
        <updated>2024-07-05T18:59:06.000Z</updated>
        <content type="html"><![CDATA[<p>The classic builder cache system is prone to cache poisoning if the image is built <code>FROM scratch</code>.
Also, changes to some instructions (most important being <code>HEALTHCHECK</code> and <code>ONBUILD</code>) would not cause a cache miss.</p>
<p>An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.</p>
<p>For example, an attacker could create an image that is considered as a valid cache candidate for:</p>
<pre><code>FROM scratch
MAINTAINER Pawel
</code></pre>
<p>when in fact the malicious image used as a cache would be an image built from a different Dockerfile.</p>
<p>In the second case, the attacker could for example substitute a different <code>HEALTCHECK</code> command.</p>
<h3 id="impact">Impact</h3>
<p>23.0+ users are only affected if they explicitly opted out of Buildkit (<code>DOCKER_BUILDKIT=0</code> environment variable) or are using the <code>/build</code> API endpoint (which uses the classic builder by default).</p>
<p>All users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.</p>
<p>Image build API endpoint (<code>/build</code>) and <code>ImageBuild</code> function from <code>github.com/docker/docker/client</code> is also affected as it the uses classic builder by default. </p>
<h3 id="patches">Patches</h3>
<p>Patches are included in Moby releases:</p>
<ul>
<li>v25.0.2</li>
<li>v24.0.9</li>
<li>v23.0.10</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Use <code>--no-cache</code> or use Buildkit if possible (<code>DOCKER_BUILDKIT=1</code>, it's default on 23.0+ assuming that the buildx plugin is installed).</li>
<li>Use <code>Version = types.BuilderBuildKit</code> or <code>NoCache = true</code> in <code>ImageBuildOptions</code> for <code>ImageBuild</code> call.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc">https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24557">https://nvd.nist.gov/vuln/detail/CVE-2024-24557</a></li>
<li><a href="https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae">https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae</a></li>
<li><a href="https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd">https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd</a></li>
<li><a href="https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff">https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff</a></li>
<li><a href="https://github.com/advisories/GHSA-xw73-rw38-6vjc">https://github.com/advisories/GHSA-xw73-rw38-6vjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw73-rw38-6vjc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-01T20:51:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/moby] Classic builder cache poisoning]]></title>
        <id>https://github.com/advisories/GHSA-xw73-rw38-6vjc</id>
        <link href="https://github.com/advisories/GHSA-xw73-rw38-6vjc"/>
        <updated>2024-07-05T18:59:06.000Z</updated>
        <content type="html"><![CDATA[<p>The classic builder cache system is prone to cache poisoning if the image is built <code>FROM scratch</code>.
Also, changes to some instructions (most important being <code>HEALTHCHECK</code> and <code>ONBUILD</code>) would not cause a cache miss.</p>
<p>An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.</p>
<p>For example, an attacker could create an image that is considered as a valid cache candidate for:</p>
<pre><code>FROM scratch
MAINTAINER Pawel
</code></pre>
<p>when in fact the malicious image used as a cache would be an image built from a different Dockerfile.</p>
<p>In the second case, the attacker could for example substitute a different <code>HEALTCHECK</code> command.</p>
<h3 id="impact">Impact</h3>
<p>23.0+ users are only affected if they explicitly opted out of Buildkit (<code>DOCKER_BUILDKIT=0</code> environment variable) or are using the <code>/build</code> API endpoint (which uses the classic builder by default).</p>
<p>All users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.</p>
<p>Image build API endpoint (<code>/build</code>) and <code>ImageBuild</code> function from <code>github.com/docker/docker/client</code> is also affected as it the uses classic builder by default. </p>
<h3 id="patches">Patches</h3>
<p>Patches are included in Moby releases:</p>
<ul>
<li>v25.0.2</li>
<li>v24.0.9</li>
<li>v23.0.10</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>Use <code>--no-cache</code> or use Buildkit if possible (<code>DOCKER_BUILDKIT=1</code>, it's default on 23.0+ assuming that the buildx plugin is installed).</li>
<li>Use <code>Version = types.BuilderBuildKit</code> or <code>NoCache = true</code> in <code>ImageBuildOptions</code> for <code>ImageBuild</code> call.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc">https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24557">https://nvd.nist.gov/vuln/detail/CVE-2024-24557</a></li>
<li><a href="https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae">https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae</a></li>
<li><a href="https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd">https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd</a></li>
<li><a href="https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff">https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff</a></li>
<li><a href="https://github.com/advisories/GHSA-xw73-rw38-6vjc">https://github.com/advisories/GHSA-xw73-rw38-6vjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw73-rw38-6vjc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-01T20:51:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gin-gonic/gin] Gin mishandles a wildcard at the end of an origin string]]></title>
        <id>https://github.com/advisories/GHSA-869c-j7wc-8jqv</id>
        <link href="https://github.com/advisories/GHSA-869c-j7wc-8jqv"/>
        <updated>2024-07-01T21:30:26.000Z</updated>
        <content type="html"><![CDATA[<p>parseWildcardRules in Gin-Gonic CORS middleware before 1.6.0 mishandles a wildcard at the end of an origin string, e.g., <a href="https://example.community/">https://example.community/</a>* is allowed when the intention is that only <a href="https://example.com/">https://example.com/</a>* should be allowed, and <a href="http://localhost.example.com/">http://localhost.example.com/</a>* is allowed when the intention is that only <a href="http://localhost/">http://localhost/</a>* should be allowed.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-25211">https://nvd.nist.gov/vuln/detail/CVE-2019-25211</a></li>
<li><a href="https://github.com/gin-contrib/cors/pull/106">https://github.com/gin-contrib/cors/pull/106</a></li>
<li><a href="https://github.com/gin-contrib/cors/pull/57">https://github.com/gin-contrib/cors/pull/57</a></li>
<li><a href="https://github.com/gin-contrib/cors/commit/27b723a473efd80d5a498fa9f5933c80204c850d">https://github.com/gin-contrib/cors/commit/27b723a473efd80d5a498fa9f5933c80204c850d</a></li>
<li><a href="https://github.com/gin-contrib/cors/compare/v1.5.0...v1.6.0">https://github.com/gin-contrib/cors/compare/v1.5.0...v1.6.0</a></li>
<li><a href="https://github.com/gin-contrib/cors/releases/tag/v1.6.0">https://github.com/gin-contrib/cors/releases/tag/v1.6.0</a></li>
<li><a href="https://github.com/advisories/GHSA-869c-j7wc-8jqv">https://github.com/advisories/GHSA-869c-j7wc-8jqv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-869c-j7wc-8jqv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-29T06:31:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gorilla/schema] Potential memory exhaustion attack due to sparse slice deserialization]]></title>
        <id>https://github.com/advisories/GHSA-3669-72x9-r9p3</id>
        <link href="https://github.com/advisories/GHSA-3669-72x9-r9p3"/>
        <updated>2024-07-02T02:30:42.000Z</updated>
        <content type="html"><![CDATA[<h3 id="details">Details</h3>
<p>Running <code>schema.Decoder.Decode()</code> on a struct that has a field of type <code>[]struct{...}</code> opens it up to malicious attacks regarding memory allocations, taking advantage of the sparse slice functionality. For instance, in the Proof of Concept written below, someone can specify to set a field of the billionth element and it will allocate all other elements before it in the slice.</p>
<p>In the local environment environment for my project, I was able to call an endpoint like <code>/innocent_endpoint?arr.10000000.X=1</code> and freeze my system from the memory allocation while parsing <code>r.Form</code>. I think <a href="https://github.com/gorilla/schema/blob/main/decoder.go#L223">this line</a> is responsible for allocating the slice, although I haven't tested to make sure, so it's just an educated guess.</p>
<h3 id="proof-of-concept">Proof of Concept</h3>
<p>The following proof of concept works on both v1.2.0 and v1.2.1. I have not tested earlier versions.</p>
<pre><code class="language-go">package main

import (
    "fmt"

    "github.com/gorilla/schema"
)

func main() {
    dec := schema.NewDecoder()
    var result struct {
        Arr []struct{ Val int }
    }
    if err := dec.Decode(&amp;result, map[string][]string{"arr.1000000000.Val": {"1"}}); err != nil {
        panic(err)
    }
    fmt.Printf("%#+v\n", result)
}
</code></pre>
<h3 id="impact">Impact</h3>
<p>Any use of <code>schema.Decoder.Decode()</code> on a struct with arrays of other structs could be vulnerable to this memory exhaustion vulnerability. There seems to be no possible solution that a developer using this library can do to disable this behaviour without fixing it in this project, so all uses of Decode that fall under this umbrella are affected. A fix that doesn't require a major change may also be harder to find, since it could break compatibility with some other intended use-cases.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/gorilla/schema/security/advisories/GHSA-3669-72x9-r9p3">https://github.com/gorilla/schema/security/advisories/GHSA-3669-72x9-r9p3</a></li>
<li><a href="https://github.com/gorilla/schema/commit/cd59f2f12cbdfa9c06aa63e425d1fe4a806967ff">https://github.com/gorilla/schema/commit/cd59f2f12cbdfa9c06aa63e425d1fe4a806967ff</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37298">https://nvd.nist.gov/vuln/detail/CVE-2024-37298</a></li>
<li><a href="https://github.com/gorilla/schema/blob/main/decoder.go#L223">https://github.com/gorilla/schema/blob/main/decoder.go#L223</a></li>
<li><a href="https://github.com/advisories/GHSA-3669-72x9-r9p3">https://github.com/advisories/GHSA-3669-72x9-r9p3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3669-72x9-r9p3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-01T20:35:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gofiber/fiber/v2/middleware/session] Session Middleware Token Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</id>
        <link href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v"/>
        <updated>2024-07-05T18:00:05.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in the Fiber session middleware where a user can supply their own session_id value, leading to the creation of a session with that key.</p>
<h2 id="impact">Impact</h2>
<p>The identified vulnerability is a session middleware issue in GoFiber versions 2 and above. This vulnerability allows users to supply their own session_id value, resulting in the creation of a session with that key. If a website relies on the mere presence of a session for security purposes, this can lead to significant security risks, including unauthorized access and session fixation attacks. All users utilizing GoFiber's session middleware in the affected versions are impacted.</p>
<h2 id="patches">Patches</h2>
<p>The issue has been addressed in the latest patch. Users are strongly encouraged to upgrade to version 2.52.5 or higher to mitigate this vulnerability.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Users who are unable to upgrade immediately can apply the following workarounds to reduce the risk:</p>
<ol>
<li><strong>Validate Session IDs</strong>: Implement additional validation to ensure session IDs are not supplied by the user and are securely generated by the server.</li>
<li><strong>Session Management</strong>: Regularly rotate session IDs and enforce strict session expiration policies.</li>
</ol>
<h2 id="references">References</h2>
<p>For more information on session best practices:</p>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html">OWASP Session Management Cheat Sheet</a></li>
</ul>
<p>Users are encouraged to review these references and take immediate action to secure their applications.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8">https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38513">https://nvd.nist.gov/vuln/detail/CVE-2024-38513</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e">https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e</a></li>
<li><a href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/advisories/GHSA-98j2-3j3p-fw2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:35:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gofiber/fiber/v2] Session Middleware Token Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</id>
        <link href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v"/>
        <updated>2024-07-05T18:00:05.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in the Fiber session middleware where a user can supply their own session_id value, leading to the creation of a session with that key.</p>
<h2 id="impact">Impact</h2>
<p>The identified vulnerability is a session middleware issue in GoFiber versions 2 and above. This vulnerability allows users to supply their own session_id value, resulting in the creation of a session with that key. If a website relies on the mere presence of a session for security purposes, this can lead to significant security risks, including unauthorized access and session fixation attacks. All users utilizing GoFiber's session middleware in the affected versions are impacted.</p>
<h2 id="patches">Patches</h2>
<p>The issue has been addressed in the latest patch. Users are strongly encouraged to upgrade to version 2.52.5 or higher to mitigate this vulnerability.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Users who are unable to upgrade immediately can apply the following workarounds to reduce the risk:</p>
<ol>
<li><strong>Validate Session IDs</strong>: Implement additional validation to ensure session IDs are not supplied by the user and are securely generated by the server.</li>
<li><strong>Session Management</strong>: Regularly rotate session IDs and enforce strict session expiration policies.</li>
</ol>
<h2 id="references">References</h2>
<p>For more information on session best practices:</p>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html">OWASP Session Management Cheat Sheet</a></li>
</ul>
<p>Users are encouraged to review these references and take immediate action to secure their applications.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8">https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38513">https://nvd.nist.gov/vuln/detail/CVE-2024-38513</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e">https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e</a></li>
<li><a href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/advisories/GHSA-98j2-3j3p-fw2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:35:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gofiber/fiber] Session Middleware Token Injection Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</id>
        <link href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v"/>
        <updated>2024-07-05T18:00:05.000Z</updated>
        <content type="html"><![CDATA[<p>A security vulnerability has been identified in the Fiber session middleware where a user can supply their own session_id value, leading to the creation of a session with that key.</p>
<h2 id="impact">Impact</h2>
<p>The identified vulnerability is a session middleware issue in GoFiber versions 2 and above. This vulnerability allows users to supply their own session_id value, resulting in the creation of a session with that key. If a website relies on the mere presence of a session for security purposes, this can lead to significant security risks, including unauthorized access and session fixation attacks. All users utilizing GoFiber's session middleware in the affected versions are impacted.</p>
<h2 id="patches">Patches</h2>
<p>The issue has been addressed in the latest patch. Users are strongly encouraged to upgrade to version 2.52.5 or higher to mitigate this vulnerability.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Users who are unable to upgrade immediately can apply the following workarounds to reduce the risk:</p>
<ol>
<li><strong>Validate Session IDs</strong>: Implement additional validation to ensure session IDs are not supplied by the user and are securely generated by the server.</li>
<li><strong>Session Management</strong>: Regularly rotate session IDs and enforce strict session expiration policies.</li>
</ol>
<h2 id="references">References</h2>
<p>For more information on session best practices:</p>
<ul>
<li><a href="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html">OWASP Session Management Cheat Sheet</a></li>
</ul>
<p>Users are encouraged to review these references and take immediate action to secure their applications.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/gofiber/fiber/security/advisories/GHSA-98j2-3j3p-fw2v</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8">https://github.com/gofiber/fiber/commit/66a881441b27322a331f1b526cf1eb6b3358a4d8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38513">https://nvd.nist.gov/vuln/detail/CVE-2024-38513</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e">https://github.com/gofiber/fiber/commit/7926e5bf4da03e54f62d27d53229d35b264cba8e</a></li>
<li><a href="https://github.com/advisories/GHSA-98j2-3j3p-fw2v">https://github.com/advisories/GHSA-98j2-3j3p-fw2v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98j2-3j3p-fw2v</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-01T20:35:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT is unstability during blocksync when syncing from malicious peer]]></title>
        <id>https://github.com/advisories/GHSA-hg58-rf2h-6rr7</id>
        <link href="https://github.com/advisories/GHSA-hg58-rf2h-6rr7"/>
        <updated>2024-06-28T14:33:34.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Name</strong>: ASA-2024-008: Instability during blocksync when syncing from malicious peer
<strong>Component</strong>: CometBFT
<strong>Criticality</strong>: Medium (<a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1</a>: I:Moderate; L: Possible)
<strong>Affected versions</strong>: &lt; v0.38.7</p>
<h1 id="summary">Summary</h1>
<p>An issue was identified for nodes syncing on an existing network during blocksync in which a malicious peer could cause the syncing peer to panic, enter into a catastrophic invalid syncing state or get stuck in blocksync mode, never switching to consensus. It is recommended for all clients to adopt this patch so that blocksync functions as expected and is tolerant of malicious peers presenting invalid data in this situation. Nodes that are vulnerable to this state may experience a Denial of Service condition in which syncing will not work as expected when joining a network as a client.</p>
<h1 id="recognition">Recognition</h1>
<p>This issue was reported to the Cosmos Bug Bounty Program on HackerOne on 5/01/24 by unknown_feature. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>.</p>
<p>For more information about CometBFT, please see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<p>For more information about the Interchain Foundation’s engagement with Amulet, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-hg58-rf2h-6rr7">https://github.com/cometbft/cometbft/security/advisories/GHSA-hg58-rf2h-6rr7</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/07866e11139127e415bd0339ac377b6e6a845533">https://github.com/cometbft/cometbft/commit/07866e11139127e415bd0339ac377b6e6a845533</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/8ba2e4f52d5e626e019501ba6420cc86d5de7857">https://github.com/cometbft/cometbft/commit/8ba2e4f52d5e626e019501ba6420cc86d5de7857</a></li>
<li><a href="https://github.com/advisories/GHSA-hg58-rf2h-6rr7">https://github.com/advisories/GHSA-hg58-rf2h-6rr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg58-rf2h-6rr7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-28T14:33:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cometbft/cometbft] CometBFT is unstability during blocksync when syncing from malicious peer]]></title>
        <id>https://github.com/advisories/GHSA-hg58-rf2h-6rr7</id>
        <link href="https://github.com/advisories/GHSA-hg58-rf2h-6rr7"/>
        <updated>2024-06-28T14:33:34.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Name</strong>: ASA-2024-008: Instability during blocksync when syncing from malicious peer
<strong>Component</strong>: CometBFT
<strong>Criticality</strong>: Medium (<a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1</a>: I:Moderate; L: Possible)
<strong>Affected versions</strong>: &lt; v0.38.7</p>
<h1 id="summary">Summary</h1>
<p>An issue was identified for nodes syncing on an existing network during blocksync in which a malicious peer could cause the syncing peer to panic, enter into a catastrophic invalid syncing state or get stuck in blocksync mode, never switching to consensus. It is recommended for all clients to adopt this patch so that blocksync functions as expected and is tolerant of malicious peers presenting invalid data in this situation. Nodes that are vulnerable to this state may experience a Denial of Service condition in which syncing will not work as expected when joining a network as a client.</p>
<h1 id="recognition">Recognition</h1>
<p>This issue was reported to the Cosmos Bug Bounty Program on HackerOne on 5/01/24 by unknown_feature. If you believe you have found a bug in the Interchain Stack or would like to contribute to the program by reporting a bug, please see <a href="https://hackerone.com/cosmos">https://hackerone.com/cosmos</a>.</p>
<p>If you have questions about Interchain security efforts, please reach out to our official communication channel at <a href="mailto:security@interchain.io">security@interchain.io</a>.</p>
<p>For more information about CometBFT, please see <a href="https://docs.cometbft.com/">https://docs.cometbft.com/</a>.</p>
<p>For more information about the Interchain Foundation’s engagement with Amulet, please see <a href="https://github.com/interchainio/security">https://github.com/interchainio/security</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cometbft/cometbft/security/advisories/GHSA-hg58-rf2h-6rr7">https://github.com/cometbft/cometbft/security/advisories/GHSA-hg58-rf2h-6rr7</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/07866e11139127e415bd0339ac377b6e6a845533">https://github.com/cometbft/cometbft/commit/07866e11139127e415bd0339ac377b6e6a845533</a></li>
<li><a href="https://github.com/cometbft/cometbft/commit/8ba2e4f52d5e626e019501ba6420cc86d5de7857">https://github.com/cometbft/cometbft/commit/8ba2e4f52d5e626e019501ba6420cc86d5de7857</a></li>
<li><a href="https://github.com/advisories/GHSA-hg58-rf2h-6rr7">https://github.com/advisories/GHSA-hg58-rf2h-6rr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hg58-rf2h-6rr7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-28T14:33:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/image] Panic when parsing invalid palette-color images in golang.org/x/image]]></title>
        <id>https://github.com/advisories/GHSA-9phm-fm57-rhg8</id>
        <link href="https://github.com/advisories/GHSA-9phm-fm57-rhg8"/>
        <updated>2024-06-27T18:53:40.000Z</updated>
        <content type="html"><![CDATA[<p>Parsing a corrupt or malicious image with invalid color indices can cause a panic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://go.dev/cl/588115">https://go.dev/cl/588115</a></li>
<li><a href="https://go.dev/issue/67624">https://go.dev/issue/67624</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-2937">https://pkg.go.dev/vuln/GO-2024-2937</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24792">https://nvd.nist.gov/vuln/detail/CVE-2024-24792</a></li>
<li><a href="https://github.com/advisories/GHSA-9phm-fm57-rhg8">https://github.com/advisories/GHSA-9phm-fm57-rhg8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9phm-fm57-rhg8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-26T19:26:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/go-getter] HashiCorp go-getter Vulnerable to Code Execution On Git Update Via Git Config Manipulation]]></title>
        <id>https://github.com/advisories/GHSA-xfhp-jf8p-mh5w</id>
        <link href="https://github.com/advisories/GHSA-xfhp-jf8p-mh5w"/>
        <updated>2024-06-28T21:43:54.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp’s go-getter library can be coerced into executing Git update on an existing maliciously modified Git Configuration, potentially leading to arbitrary code execution. When go-getter is performing a Git operation, go-getter will try to clone the given repository in a specified destination. Cloning initializes a git config to the provided destination and if the repository needs to get updated go-getter will pull the new changes .</p>
<p>An attacker may alter the Git config after the cloning step to set an arbitrary Git configuration to achieve code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6257">https://nvd.nist.gov/vuln/detail/CVE-2024-6257</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-13-hashicorp-go-getter-vulnerable-to-code-execution-on-git-update-via-git-config-manipulation/68081">https://discuss.hashicorp.com/t/hcsec-2024-13-hashicorp-go-getter-vulnerable-to-code-execution-on-git-update-via-git-config-manipulation/68081</a></li>
<li><a href="https://github.com/hashicorp/go-getter/commit/268c11cae8cf0d9374783e06572679796abe9ce9">https://github.com/hashicorp/go-getter/commit/268c11cae8cf0d9374783e06572679796abe9ce9</a></li>
<li><a href="https://github.com/advisories/GHSA-xfhp-jf8p-mh5w">https://github.com/advisories/GHSA-xfhp-jf8p-mh5w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xfhp-jf8p-mh5w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-25T18:31:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats] Elastic Beats inserts sensitive information into log file]]></title>
        <id>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</id>
        <link href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3"/>
        <updated>2024-06-25T14:06:38.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49922">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>
<li><a href="https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>
<li><a href="https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>
<li><a href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats/v7] Elastic Beats inserts sensitive information into log file]]></title>
        <id>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</id>
        <link href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3"/>
        <updated>2024-06-25T14:06:38.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49922">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>
<li><a href="https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>
<li><a href="https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>
<li><a href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/go-retryablehttp] go-retryablehttp can leak basic auth credentials to log files]]></title>
        <id>https://github.com/advisories/GHSA-v6v8-xj6m-xwqh</id>
        <link href="https://github.com/advisories/GHSA-v6v8-xj6m-xwqh"/>
        <updated>2024-06-26T19:31:28.000Z</updated>
        <content type="html"><![CDATA[<p>go-retryablehttp prior to 0.7.7 did not sanitize urls when writing them to its log file. This could lead to go-retryablehttp writing sensitive HTTP basic auth credentials to its log file. This vulnerability, CVE-2024-6104, was fixed in go-retryablehttp 0.7.7.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6104">https://nvd.nist.gov/vuln/detail/CVE-2024-6104</a></li>
<li><a href="https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a">https://github.com/hashicorp/go-retryablehttp/commit/a99f07beb3c5faaa0a283617e6eb6bcf25f5049a</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027">https://discuss.hashicorp.com/t/hcsec-2024-12-go-retryablehttp-can-leak-basic-auth-credentials-to-log-files/68027</a></li>
<li><a href="https://github.com/advisories/GHSA-v6v8-xj6m-xwqh">https://github.com/advisories/GHSA-v6v8-xj6m-xwqh</a></li>
<li><a href="https://discuss.hashicorp.com/c/security">https://discuss.hashicorp.com/c/security</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v6v8-xj6m-xwqh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-24T18:31:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lightningnetwork/lnd] Lightning Network Daemon (LND)'s onion processing logic leads to a denial of service]]></title>
        <id>https://github.com/advisories/GHSA-9gxx-58q6-42p7</id>
        <link href="https://github.com/advisories/GHSA-9gxx-58q6-42p7"/>
        <updated>2024-06-21T14:02:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A parsing vulnerability in lnd's onion processing logic led to a DoS vector due to excessive memory allocation. </p>
<h3 id="patches">Patches</h3>
<p>The issue was patched in lnd <a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta">v0.17.0</a>. Users should update to a version &gt;= v0.17.0 to be protected. </p>
<h3 id="references">References</h3>
<p>Detailed blog post: <a href="https://morehouse.github.io/lightning/lnd-onion-bomb/">https://morehouse.github.io/lightning/lnd-onion-bomb/</a></p>
<p>Developer discussion: <a href="https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979">https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/lightningnetwork/lnd/security/advisories/GHSA-9gxx-58q6-42p7">https://github.com/lightningnetwork/lnd/security/advisories/GHSA-9gxx-58q6-42p7</a></li>
<li><a href="https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979">https://delvingbitcoin.org/t/dos-disclosure-lnd-onion-bomb/979</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.17.0-beta</a></li>
<li><a href="https://morehouse.github.io/lightning/lnd-onion-bomb">https://morehouse.github.io/lightning/lnd-onion-bomb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38359">https://nvd.nist.gov/vuln/detail/CVE-2024-38359</a></li>
<li><a href="https://lightning.network">https://lightning.network</a></li>
<li><a href="https://github.com/advisories/GHSA-9gxx-58q6-42p7">https://github.com/advisories/GHSA-9gxx-58q6-42p7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9gxx-58q6-42p7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-20T19:18:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/authzed/spicedb] SpiceDB exclusions can result in no permission returned when permission expected]]></title>
        <id>https://github.com/advisories/GHSA-grjv-gjgr-66g2</id>
        <link href="https://github.com/advisories/GHSA-grjv-gjgr-66g2"/>
        <updated>2024-06-21T14:02:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="background">Background</h3>
<p>Use of an exclusion under an arrow that has multiple resources may resolve to <code>NO_PERMISSION</code> when permission is expected.</p>
<p>For example, given this schema:</p>
<pre><code class="language-zed">definition user {}

definition folder {
  relation member: user
  relation banned: user
  permission view = member - banned
}

definition resource {
  relation folder: folder
  permission view = folder-&gt;view
}
</code></pre>
<p>If the resource exists under <em>multiple</em> folders and the user has access to view more than a single folder, SpiceDB may report the user does not have access due to a failure in the exclusion dispatcher to request that <em>all</em> the folders in which the user is a member be returned</p>
<h3 id="impact">Impact</h3>
<p>Permission is returned as <code>NO_PERMISSION</code> when <code>PERMISSION</code> is expected on the <code>CheckPermission</code> API.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2">https://github.com/authzed/spicedb/security/advisories/GHSA-grjv-gjgr-66g2</a></li>
<li><a href="https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb">https://github.com/authzed/spicedb/commit/ecef31d2b266fde17eb2c3415e2ec4ceff96fbeb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-38361">https://nvd.nist.gov/vuln/detail/CVE-2024-38361</a></li>
<li><a href="https://github.com/advisories/GHSA-grjv-gjgr-66g2">https://github.com/advisories/GHSA-grjv-gjgr-66g2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-grjv-gjgr-66g2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-20T16:24:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v2] ACME DNS: Azure Identity Libraries Elevation of Privilege Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rvj4-q8q5-8grf</id>
        <link href="https://github.com/advisories/GHSA-rvj4-q8q5-8grf"/>
        <updated>2024-06-20T16:20:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There is a vulnerability in <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">CVE-2024-35255</a></li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.5">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.3">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf">https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.5">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.3">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>
<li><a href="https://github.com/advisories/GHSA-rvj4-q8q5-8grf">https://github.com/advisories/GHSA-rvj4-q8q5-8grf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvj4-q8q5-8grf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-20T16:20:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] ACME DNS: Azure Identity Libraries Elevation of Privilege Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rvj4-q8q5-8grf</id>
        <link href="https://github.com/advisories/GHSA-rvj4-q8q5-8grf"/>
        <updated>2024-06-20T16:20:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>There is a vulnerability in <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">CVE-2024-35255</a></li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.5">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.3">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please <a href="https://github.com/traefik/traefik/issues">open an issue</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf">https://github.com/traefik/traefik/security/advisories/GHSA-rvj4-q8q5-8grf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35255">https://nvd.nist.gov/vuln/detail/CVE-2024-35255</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.11.5">https://github.com/traefik/traefik/releases/tag/v2.11.5</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.3">https://github.com/traefik/traefik/releases/tag/v3.0.3</a></li>
<li><a href="https://github.com/advisories/GHSA-rvj4-q8q5-8grf">https://github.com/advisories/GHSA-rvj4-q8q5-8grf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rvj4-q8q5-8grf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-20T16:20:25.000Z</published>
    </entry>
</feed>