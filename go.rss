<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-10-01T15:01:20.859Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/dutchcoders/transfer.sh] Dutchoders transfer.sh contains an XSS vulnerability via malicious file upload]]></title>
        <id>https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</id>
        <link href="https://github.com/advisories/GHSA-pwq7-f7f9-cm2j"/>
        <updated>2022-10-01T01:01:51.000Z</updated>
        <content type="html"><![CDATA[<p>dutchcoders Transfer.sh versions 1.4.0 and prior are vulnerable to Cross Site Scripting (XSS) via a malicious document uploaded in transfer.sh.  There is a fix commit merged into <a href="https://github.com/dutchcoders/transfer.sh/commit/31ad4e01e158497519f8680c187e1ceb8594c59d">main</a> for this issue, but an updated version has not yet been released.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40931">https://nvd.nist.gov/vuln/detail/CVE-2022-40931</a></li>
<li><a href="https://github.com/dutchcoders/transfer.sh/issues/500">https://github.com/dutchcoders/transfer.sh/issues/500</a></li>
<li><a href="https://github.com/dutchcoders/transfer.sh/pull/501">https://github.com/dutchcoders/transfer.sh/pull/501</a></li>
<li><a href="https://github.com/advisories/GHSA-pwq7-f7f9-cm2j">https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-30T00:00:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[https://pkg.go.dev/github.com/cloudwego/hertz] Hertz contains path traversal via normalizePath function]]></title>
        <id>https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</id>
        <link href="https://github.com/advisories/GHSA-c9qr-f6c8-rgxf"/>
        <updated>2022-09-30T23:07:08.000Z</updated>
        <content type="html"><![CDATA[<p>Hertz is a a high-performance and strong-extensibility Go HTTP framework that helps developers build microservices. Versions of Hertz prior to 0.3.1 contain a path traversal vulnerability via the normalizePath function. This issue has been patched in 0.3.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40082">https://nvd.nist.gov/vuln/detail/CVE-2022-40082</a></li>
<li><a href="https://github.com/cloudwego/hertz/issues/228">https://github.com/cloudwego/hertz/issues/228</a></li>
<li><a href="https://github.com/cloudwego/hertz/pull/229">https://github.com/cloudwego/hertz/pull/229</a></li>
<li><a href="https://github.com/advisories/GHSA-c9qr-f6c8-rgxf">https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-29T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/labstack/echo/v4] Labstack Echo Open Redirect vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-crxj-hrmp-4rwf</id>
        <link href="https://github.com/advisories/GHSA-crxj-hrmp-4rwf"/>
        <updated>2022-09-30T06:31:22.000Z</updated>
        <content type="html"><![CDATA[<p>Labstack Echo v4.8.0 was discovered to contain an open redirect vulnerability via the Static Handler component. This vulnerability can be leveraged by attackers to cause a Server-Side Request Forgery (SSRF). Version 4.9.0 contains a patch for the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40083">https://nvd.nist.gov/vuln/detail/CVE-2022-40083</a></li>
<li><a href="https://github.com/labstack/echo/issues/2259">https://github.com/labstack/echo/issues/2259</a></li>
<li><a href="https://github.com/labstack/echo/pull/2260">https://github.com/labstack/echo/pull/2260</a></li>
<li><a href="https://github.com/labstack/echo/releases/tag/v4.9.0">https://github.com/labstack/echo/releases/tag/v4.9.0</a></li>
<li><a href="https://github.com/advisories/GHSA-crxj-hrmp-4rwf">https://github.com/advisories/GHSA-crxj-hrmp-4rwf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crxj-hrmp-4rwf</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-29T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[kubevirt.io/kubevirt] Duplicate Advisory: KubeVirt arbitrary host file read from the VM]]></title>
        <id>https://github.com/advisories/GHSA-cvx8-ppmc-78hm</id>
        <link href="https://github.com/advisories/GHSA-cvx8-ppmc-78hm"/>
        <updated>2022-09-30T00:44:50.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory is a duplicate of <a href="https://github.com/advisories/GHSA-qv98-3369-g364">GHSA-qv98-3369-g364</a>. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p><strong>Summary</strong>
As part of a Kubevirt audit performed by NCC group, a finding dealing with systemic lack of path sanitization which leads to a path traversal was identified.  Google tested the exploitability of the paths in the audit report and identified that when combined with another vulnerability one of the paths leads to an arbitrary file read on the host from the VM.</p>
<p>The read operations are limited to files which are publicly readable or which are readable for UID 107 or GID 107. /proc/self/&lt;&gt; is not accessible.</p>
<p><strong>Severity</strong></p>
<p>Moderate - The vulnerability is proven to exist in an open source version of KubeVirt by NCC Group while being combined with Systemic Lack of Path Sanitization, which leads to Path traversal.</p>
<p><strong>Proof of Concept</strong></p>
<p>The initial VMI specifications can be written as such to reproduce the issue:</p>
<pre><code>
apiVersion: kubevirt.io/v1
kind: VirtualMachineInstance
metadata:
  name: vmi-fedora
spec:
  domain:
    devices:
      disks:
      - disk:
          bus: virtio
        name: containerdisk
      - disk:
          bus: virtio
        name: cloudinitdisk
      - disk:
          bus: virtio
        name: containerdisk1
      rng: {}
    resources:
      requests:
        memory: 1024M
  terminationGracePeriodSeconds: 0
  volumes:
  - containerDisk:
      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0
    name: containerdisk
  - containerDisk:
      image: quay.io/kubevirt/cirros-container-disk-demo:v0.52.0
      path: test3/../../../../../../../../etc/passwd
    name: containerdisk1
  - cloudInitNoCloud:
      userData: |
        #!/bin/sh
        echo 'just something to make cirros happy'
    name: cloudinitdisk

</code></pre>
<p>The VMI can then be started through kubectl apply -f vm-test-ncc.yaml.
The requested file is accessible once the VM is up and can be accessed under /dev/vdc.</p>
<p>Depending on the environment, path may contain more or less /.., something that can easily be tested by checking the events until the VMI can start without failure.
Restrictions </p>
<p>SELinux may mitigate this vulnerability.</p>
<p>When using a node with selinux, selinux denies the access and the VM start was aborted:</p>
<pre><code>
19s         Warning   SyncFailed                virtualmachineinstance/vmi-fedora    server error. command SyncVMI failed: "preparing ephemeral container disk images failed: stat /var/run/kubevirt/container-disks/disk_0.img: permission denied"

type=AVC msg=audit(1651828898.296:1266): avc:  denied  { setattr } for  pid=44402 comm="rpc-worker" name="passwd" dev="vda1" ino=691477 scontext=system_u:system_r:virt_launcher.process:s0:c255,c849 tcontext=system_u:object_r:passwd_file_t:s0 tclass=file permissive=1
</code></pre>
<p>After making selinux permissive the VM can boot and access /etc/passwd from the node within the guest:</p>
<pre><code>
$ sudo cat /dev/vdc
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
[...]
</code></pre>
<p><strong>Further Analysis</strong>
In order to mitigate this vulnerability, Sanitize imagePath in pkg/container-disk/container-disk.go following ISE best practices described and Add checks in pkg/virt-api/webhooks/validating-webhook/admitters/vmi-create-admitter.go</p>
<p><strong>Timeline</strong>
Date reported: 05/10/2022
Date fixed: N/A
Date disclosed: 08/08/2022</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm">https://github.com/google/security-research/security/advisories/GHSA-cvx8-ppmc-78hm</a></li>
<li><a href="https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364">https://github.com/kubevirt/kubevirt/security/advisories/GHSA-qv98-3369-g364</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1798">https://nvd.nist.gov/vuln/detail/CVE-2022-1798</a></li>
<li><a href="https://github.com/advisories/GHSA-cvx8-ppmc-78hm">https://github.com/advisories/GHSA-cvx8-ppmc-78hm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvx8-ppmc-78hm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-18T19:02:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul vulnerable to authorization bypass]]></title>
        <id>https://github.com/advisories/GHSA-m69r-9g56-7mv8</id>
        <link href="https://github.com/advisories/GHSA-m69r-9g56-7mv8"/>
        <updated>2022-09-29T14:39:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul and Consul Enterprise versions prior to 1.11.9, 1.12.5, and 1.13.2 do not check for multiple SAN URI values in a CSR on the internal RPC endpoint, enabling leverage of privileged access to bypass service mesh intentions. A specially crafted CSR sent directly to Consul’s internal server agent RPC endpoint can include multiple SAN URI values with additional service names. This issue has been fixed in versions 1.11.9, 1.12.5, and 1.13.2. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40716">https://nvd.nist.gov/vuln/detail/CVE-2022-40716</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628">https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628</a></li>
<li><a href="https://github.com/advisories/GHSA-m69r-9g56-7mv8">https://github.com/advisories/GHSA-m69r-9g56-7mv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m69r-9g56-7mv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul vulnerable to authorization bypass]]></title>
        <id>https://github.com/advisories/GHSA-m69r-9g56-7mv8</id>
        <link href="https://github.com/advisories/GHSA-m69r-9g56-7mv8"/>
        <updated>2022-09-29T14:39:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul and Consul Enterprise versions prior to 1.11.9, 1.12.5, and 1.13.2 do not check for multiple SAN URI values in a CSR on the internal RPC endpoint, enabling leverage of privileged access to bypass service mesh intentions. A specially crafted CSR sent directly to Consul’s internal server agent RPC endpoint can include multiple SAN URI values with additional service names. This issue has been fixed in versions 1.11.9, 1.12.5, and 1.13.2. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40716">https://nvd.nist.gov/vuln/detail/CVE-2022-40716</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628">https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628</a></li>
<li><a href="https://github.com/advisories/GHSA-m69r-9g56-7mv8">https://github.com/advisories/GHSA-m69r-9g56-7mv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m69r-9g56-7mv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul vulnerable to authorization bypass]]></title>
        <id>https://github.com/advisories/GHSA-m69r-9g56-7mv8</id>
        <link href="https://github.com/advisories/GHSA-m69r-9g56-7mv8"/>
        <updated>2022-09-29T14:39:58.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul and Consul Enterprise versions prior to 1.11.9, 1.12.5, and 1.13.2 do not check for multiple SAN URI values in a CSR on the internal RPC endpoint, enabling leverage of privileged access to bypass service mesh intentions. A specially crafted CSR sent directly to Consul’s internal server agent RPC endpoint can include multiple SAN URI values with additional service names. This issue has been fixed in versions 1.11.9, 1.12.5, and 1.13.2. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40716">https://nvd.nist.gov/vuln/detail/CVE-2022-40716</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628">https://discuss.hashicorp.com/t/hcsec-2022-20-consul-service-mesh-intention-bypass-with-malicious-certificate-signing-request/44628</a></li>
<li><a href="https://github.com/advisories/GHSA-m69r-9g56-7mv8">https://github.com/advisories/GHSA-m69r-9g56-7mv8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m69r-9g56-7mv8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[https://pkg.go.dev/github.com/mattermost/mattermost-server/v6] Mattermost subject to Denial of Service via upload of special GIF]]></title>
        <id>https://github.com/advisories/GHSA-m7w4-q5vg-5xfp</id>
        <link href="https://github.com/advisories/GHSA-m7w4-q5vg-5xfp"/>
        <updated>2022-09-28T14:14:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost version 7.1.x and earlier fails to sufficiently process a specifically crafted GIF file when it is uploaded while drafting a post, which allows authenticated users to cause resource exhaustion while processing the file, resulting in server-side Denial of Service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3257">https://nvd.nist.gov/vuln/detail/CVE-2022-3257</a></li>
<li><a href="https://hackerone.com/reports/1620170">https://hackerone.com/reports/1620170</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-m7w4-q5vg-5xfp">https://github.com/advisories/GHSA-m7w4-q5vg-5xfp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7w4-q5vg-5xfp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-25T00:00:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hyperledger/fabric] Hyperledger Fabric subject to Denial of Service via non-validated request]]></title>
        <id>https://github.com/advisories/GHSA-9w7j-q3xw-p9vh</id>
        <link href="https://github.com/advisories/GHSA-9w7j-q3xw-p9vh"/>
        <updated>2022-09-28T14:12:31.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in Hyperledger Fabric &lt; 2.4 could allow an attacker to construct a non-validated request that could cause a denial of service attack.  The peer gateway service tries to extract channel and chaincode information from the signed proposal, but it doesn't check the proposal fields for validity. Therefore a malformed proposal might end up crashing the peer service. This issue has been patched in 2.4.6. There are no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-35253">https://nvd.nist.gov/vuln/detail/CVE-2022-35253</a></li>
<li><a href="https://github.com/hyperledger/fabric/pull/3572">https://github.com/hyperledger/fabric/pull/3572</a></li>
<li><a href="https://github.com/hyperledger/fabric/pull/3576">https://github.com/hyperledger/fabric/pull/3576</a></li>
<li><a href="https://github.com/hyperledger/fabric/pull/3577">https://github.com/hyperledger/fabric/pull/3577</a></li>
<li><a href="https://github.com/advisories/GHSA-9w7j-q3xw-p9vh">https://github.com/advisories/GHSA-9w7j-q3xw-p9vh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w7j-q3xw-p9vh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/brokercap/Bifrost] Brokercap Bifrost subject to authentication bypass when using HTTP basic authentication]]></title>
        <id>https://github.com/advisories/GHSA-p6fh-xc6r-g5hw</id>
        <link href="https://github.com/advisories/GHSA-p6fh-xc6r-g5hw"/>
        <updated>2022-09-29T10:15:48.000Z</updated>
        <content type="html"><![CDATA[<p>Bifrost is a middleware package which can synchronize MySQL/MariaDB binlog data to other types of databases. Versions 1.8.6-release and prior are vulnerable to authentication bypass when using HTTP basic authentication. This may allow group members who only have read permissions to write requests when they are normally forbidden from doing so. Version 1.8.7-release contains a patch. There are currently no known workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/brokercap/Bifrost/security/advisories/GHSA-p6fh-xc6r-g5hw">https://github.com/brokercap/Bifrost/security/advisories/GHSA-p6fh-xc6r-g5hw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39219">https://nvd.nist.gov/vuln/detail/CVE-2022-39219</a></li>
<li><a href="https://github.com/brokercap/Bifrost/issues/200">https://github.com/brokercap/Bifrost/issues/200</a></li>
<li><a href="https://github.com/brokercap/Bifrost/releases/tag/v1.8.7-release">https://github.com/brokercap/Bifrost/releases/tag/v1.8.7-release</a></li>
<li><a href="https://github.com/advisories/GHSA-p6fh-xc6r-g5hw">https://github.com/advisories/GHSA-p6fh-xc6r-g5hw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p6fh-xc6r-g5hw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-27T15:45:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mohammed90/caddy-ssh] Caddy-SSH vulnerable to Authorization Bypass due to incorrect usage of PAM library]]></title>
        <id>https://github.com/advisories/GHSA-gmhj-xjfh-cf6m</id>
        <link href="https://github.com/advisories/GHSA-gmhj-xjfh-cf6m"/>
        <updated>2022-09-23T21:37:21.000Z</updated>
        <content type="html"><![CDATA[<p>Not invoking a call to <code>pam_acct_mgmt</code> after a call to <code>pam_authenticate</code> to check the validity of a login can lead to an authorization bypass.</p>
<h3 id="impact">Impact</h3>
<h4 id="exploitability">Exploitability</h4>
<p>The attack can be carried over the network. A complex non-standard configuration or a specialized condition is required for the attack to be successfully conducted. The attacker also requires access to a users credentials, be it expired, for an attack to be successful. There is no user interaction required for successful execution. The attack can affect components outside the scope of the target module.</p>
<h4 id="impact-1">Impact</h4>
<p>Using this attack vector, an attacker may access otherwise restricted parts of the system. The attack can be used to gain access to confidential files like passwords, login credentials and other secrets. Hence, it has a high impact on confidentiality. It may also be directly used to affect a change on a system resource. Hence has a medium to high impact on integrity. This attack may not be used to affect the availability of the system. Taking this account an appropriate CVSS v3.1 vector would be
<a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:L&amp;version=3.1">AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:L/A:N</a></p>
<h3 id="root-cause-analysis">Root Cause Analysis</h3>
<p>In this case, in the following PAM transaction, only a call to <code>pam.Authenticate</code> is used to login a user.</p>
<p><a href="https://github.com/mohammed90/caddy-ssh/blob/1d980ceea6e67765daf19b5e644c7a0773fdaa13/internal/authentication/os/pam.go#L60">https://github.com/mohammed90/caddy-ssh/blob/1d980ceea6e67765daf19b5e644c7a0773fdaa13/internal/authentication/os/pam.go#L60</a></p>
<p>This implies that a user with expired credentials can still login.</p>
<p>The bug can be verified easily by creating a new user account, expiring it with <code>chage -E0 &lt;username&gt;</code> and then trying to log in with the expired credentials.</p>
<h3 id="patches">Patches</h3>
<p>This can be fixed by invoking a call to <code>pam.AcctMgmt</code> after a successful call to <code>pam.Authenticate</code></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://man7.org/linux/man-pages/man3/pam_acct_mgmt.3.html">Man Page for pam_acct_mgmt</a></li>
<li><a href="http://cwe.mitre.org/data/definitions/863.html">CWE-863</a></li>
<li><a href="http://cwe.mitre.org/data/definitions/285.html">CWE-285</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mohammed90/caddy-ssh/security/advisories/GHSA-gmhj-xjfh-cf6m">https://github.com/mohammed90/caddy-ssh/security/advisories/GHSA-gmhj-xjfh-cf6m</a></li>
<li><a href="https://github.com/mohammed90/caddy-ssh/commit/4b3e639d64c55f91152ffb51a4af35a8845c95a3">https://github.com/mohammed90/caddy-ssh/commit/4b3e639d64c55f91152ffb51a4af35a8845c95a3</a></li>
<li><a href="https://github.com/advisories/GHSA-gmhj-xjfh-cf6m">https://github.com/advisories/GHSA-gmhj-xjfh-cf6m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gmhj-xjfh-cf6m</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-23T21:37:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access]]></title>
        <id>https://github.com/advisories/GHSA-7cgv-v83v-rr87</id>
        <link href="https://github.com/advisories/GHSA-7cgv-v83v-rr87"/>
        <updated>2022-09-27T08:12:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40186">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-7cgv-v83v-rr87">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cgv-v83v-rr87</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-23T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access]]></title>
        <id>https://github.com/advisories/GHSA-7cgv-v83v-rr87</id>
        <link href="https://github.com/advisories/GHSA-7cgv-v83v-rr87"/>
        <updated>2022-09-27T08:12:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40186">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-7cgv-v83v-rr87">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cgv-v83v-rr87</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-23T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] HashiCorp Vault vulnerable to incorrect metadata access]]></title>
        <id>https://github.com/advisories/GHSA-7cgv-v83v-rr87</id>
        <link href="https://github.com/advisories/GHSA-7cgv-v83v-rr87"/>
        <updated>2022-09-27T08:12:04.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in HashiCorp Vault and Vault Enterprise before 1.11.3. A vulnerability in the Identity Engine was found where, in a deployment where an entity has multiple mount accessors with shared alias names, Vault may overwrite metadata to the wrong alias due to an issue with checking the proper alias assigned to an entity. This may allow for unintended access to key/value paths using that metadata in Vault.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40186">https://nvd.nist.gov/vuln/detail/CVE-2022-40186</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550">https://discuss.hashicorp.com/t/hcsec-2022-18-vault-entity-alias-metadata-may-leak-between-aliases-with-the-same-name-assigned-to-the-same-entity/44550</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-7cgv-v83v-rr87">https://github.com/advisories/GHSA-7cgv-v83v-rr87</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7cgv-v83v-rr87</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-23T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher API and cluster.management.cattle.io object vulnerable to plaintext storage and exposure of credentials]]></title>
        <id>https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</id>
        <link href="https://github.com/advisories/GHSA-g7j7-h4q8-8w2f"/>
        <updated>2022-09-23T18:11:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like <code>Clusters</code>, for example <code>cluster.management.cattle.io</code>. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.</p>
<p>The exposed credentials are visible in Rancher to authenticated <code>Cluster Owners</code>, <code>Cluster Members</code>, <code>Project Owners</code>, <code>Project Members</code> and <code>User Base</code> on the endpoints:</p>
<ul>
<li><code>/v1/management.cattle.io.catalogs</code></li>
<li><code>/v1/management.cattle.io.cluster</code></li>
<li><code>/v1/management.cattle.io.clustertemplates</code></li>
<li><code>/v1/management.cattle.io.notifiers</code></li>
<li><code>/v1/project.cattle.io.sourcecodeproviderconfig</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/catalogs</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clusters</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/notifiers</code></li>
<li><code>/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs</code></li>
</ul>
<p>Sensitive fields are now stripped from <code>Clusters</code> and other objects and moved to a <code>Secret</code> before the object is stored. The <code>Secret</code> is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.</p>
<p><strong>Important:</strong></p>
<ul>
<li>The exposure of Rancher's <code>serviceAccountToken</code> allows any standard user to escalate its privileges to cluster administrator in Rancher.</li>
<li>For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.</li>
</ul>
<p>The fields that have been addressed by this security fix are:</p>
<ul>
<li><code>Notifier.SMTPConfig.Password</code></li>
<li><code>Notifier.WechatConfig.Secret</code></li>
<li><code>Notifier.DingtalkConfig.Secret</code></li>
<li><code>Catalog.Spec.Password</code></li>
<li><code>SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>
<li><code>Cluster.Status.ServiceAccountToken</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>
</ul>
<h3 id="patches">Patches</h3>
<p>Patched versions include releases 2.5.16, 2.6.7 and later versions.</p>
<p>After upgrading to a patched version, it is important to check for the <code>SecretsMigrated</code> condition on <code>Clusters</code>, <code>ClusterTemplates</code>, and <code>Catalogs</code> to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (<code>Notifiers</code> and <code>SourceCodeProviderConfigs</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>
<p><strong>Important:</strong></p>
<ul>
<li>It is highly advised to rotate Rancher's <code>serviceAccountToken</code>. This rotation is not done by the version upgrade. Please see the helper script below.</li>
<li>The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.</li>
<li>It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.</li>
</ul>
<p>The script available in <a href="https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens">rancherlabs/support-tools/rotate-tokens</a> repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, <code>kubectl</code> access to the <code>local</code> cluster and the <code>jq</code> command.</p>
<h3 id="credits">Credits</h3>
<p>We would like to recognize and appreciate Florian Struck (from <a href="https://www.continum.net/">Continum AG</a>) and <a href="https://github.com/fe-ax">Marco Stuurman</a> (from <a href="https://www.shockmedia.nl">Shock Media B.V.</a>) for the responsible disclosure of this security issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f">https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-36782">https://nvd.nist.gov/vuln/detail/CVE-2021-36782</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1193988">https://bugzilla.suse.com/show_bug.cgi?id=1193988</a></li>
<li><a href="https://github.com/advisories/GHSA-g7j7-h4q8-8w2f">https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-23T18:11:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher API and cluster.management.cattle.io object vulnerable to plaintext storage and exposure of credentials]]></title>
        <id>https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</id>
        <link href="https://github.com/advisories/GHSA-g7j7-h4q8-8w2f"/>
        <updated>2022-09-23T18:11:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like <code>Clusters</code>, for example <code>cluster.management.cattle.io</code>. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.</p>
<p>The exposed credentials are visible in Rancher to authenticated <code>Cluster Owners</code>, <code>Cluster Members</code>, <code>Project Owners</code>, <code>Project Members</code> and <code>User Base</code> on the endpoints:</p>
<ul>
<li><code>/v1/management.cattle.io.catalogs</code></li>
<li><code>/v1/management.cattle.io.cluster</code></li>
<li><code>/v1/management.cattle.io.clustertemplates</code></li>
<li><code>/v1/management.cattle.io.notifiers</code></li>
<li><code>/v1/project.cattle.io.sourcecodeproviderconfig</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/catalogs</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clusters</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates</code></li>
<li><code>/k8s/clusters/local/apis/management.cattle.io/v3/notifiers</code></li>
<li><code>/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs</code></li>
</ul>
<p>Sensitive fields are now stripped from <code>Clusters</code> and other objects and moved to a <code>Secret</code> before the object is stored. The <code>Secret</code> is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.</p>
<p><strong>Important:</strong></p>
<ul>
<li>The exposure of Rancher's <code>serviceAccountToken</code> allows any standard user to escalate its privileges to cluster administrator in Rancher.</li>
<li>For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.</li>
</ul>
<p>The fields that have been addressed by this security fix are:</p>
<ul>
<li><code>Notifier.SMTPConfig.Password</code></li>
<li><code>Notifier.WechatConfig.Secret</code></li>
<li><code>Notifier.DingtalkConfig.Secret</code></li>
<li><code>Catalog.Spec.Password</code></li>
<li><code>SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret</code></li>
<li><code>SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>
<li><code>Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>
<li><code>Cluster.Status.ServiceAccountToken</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret</code></li>
<li><code>ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword</code></li>
</ul>
<h3 id="patches">Patches</h3>
<p>Patched versions include releases 2.5.16, 2.6.7 and later versions.</p>
<p>After upgrading to a patched version, it is important to check for the <code>SecretsMigrated</code> condition on <code>Clusters</code>, <code>ClusterTemplates</code>, and <code>Catalogs</code> to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (<code>Notifiers</code> and <code>SourceCodeProviderConfigs</code>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>Limit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.</p>
<p><strong>Important:</strong></p>
<ul>
<li>It is highly advised to rotate Rancher's <code>serviceAccountToken</code>. This rotation is not done by the version upgrade. Please see the helper script below.</li>
<li>The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.</li>
<li>It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.</li>
</ul>
<p>The script available in <a href="https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens">rancherlabs/support-tools/rotate-tokens</a> repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, <code>kubectl</code> access to the <code>local</code> cluster and the <code>jq</code> command.</p>
<h3 id="credits">Credits</h3>
<p>We would like to recognize and appreciate Florian Struck (from <a href="https://www.continum.net/">Continum AG</a>) and <a href="https://github.com/fe-ax">Marco Stuurman</a> (from <a href="https://www.shockmedia.nl">Shock Media B.V.</a>) for the responsible disclosure of this security issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f">https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-36782">https://nvd.nist.gov/vuln/detail/CVE-2021-36782</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1193988">https://bugzilla.suse.com/show_bug.cgi?id=1193988</a></li>
<li><a href="https://github.com/advisories/GHSA-g7j7-h4q8-8w2f">https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g7j7-h4q8-8w2f</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-09-23T18:11:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudreve/Cloudreve/v3] Cross site scripting in Cloudreve]]></title>
        <id>https://github.com/advisories/GHSA-fg25-gq9g-32mx</id>
        <link href="https://github.com/advisories/GHSA-fg25-gq9g-32mx"/>
        <updated>2022-09-23T18:10:51.000Z</updated>
        <content type="html"><![CDATA[<p>Cloudreve versions v1.0.0 through v3.5.3 are vulnerable to Stored Cross-Site Scripting (XSS), via the file upload functionality. A low privileged user will be able to share a file with an admin user, which could lead to privilege escalation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32167">https://nvd.nist.gov/vuln/detail/CVE-2022-32167</a></li>
<li><a href="https://www.mend.io/vulnerability-database/CVE-2022-32167">https://www.mend.io/vulnerability-database/CVE-2022-32167</a></li>
<li><a href="https://github.com/advisories/GHSA-fg25-gq9g-32mx">https://github.com/advisories/GHSA-fg25-gq9g-32mx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg25-gq9g-32mx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/HFO4/cloudreve] Cross site scripting in Cloudreve]]></title>
        <id>https://github.com/advisories/GHSA-fg25-gq9g-32mx</id>
        <link href="https://github.com/advisories/GHSA-fg25-gq9g-32mx"/>
        <updated>2022-09-23T18:10:51.000Z</updated>
        <content type="html"><![CDATA[<p>Cloudreve versions v1.0.0 through v3.5.3 are vulnerable to Stored Cross-Site Scripting (XSS), via the file upload functionality. A low privileged user will be able to share a file with an admin user, which could lead to privilege escalation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32167">https://nvd.nist.gov/vuln/detail/CVE-2022-32167</a></li>
<li><a href="https://www.mend.io/vulnerability-database/CVE-2022-32167">https://www.mend.io/vulnerability-database/CVE-2022-32167</a></li>
<li><a href="https://github.com/advisories/GHSA-fg25-gq9g-32mx">https://github.com/advisories/GHSA-fg25-gq9g-32mx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fg25-gq9g-32mx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-21T00:00:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/treeverse/lakefs] lakeFS vulnerable to authenticated users deleting files they are not authorized to delete]]></title>
        <id>https://github.com/advisories/GHSA-28q9-9c3g-v3f9</id>
        <link href="https://github.com/advisories/GHSA-28q9-9c3g-v3f9"/>
        <updated>2022-09-23T15:13:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Authenticated users can send a request to delete-objects through the s3 gateway and delete files they are not authorized to delete.</p>
<h3 id="patches">Patches</h3>
<p>lakeFS v0.82.0 and later</p>
<h3 id="workarounds">Workarounds</h3>
<p>Drop specific request to the lakeFS listen port. Any request with "Authorization" header and value that starts with "AWS".</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9">advisories/GHSA-28q9-9c3g-v3f9</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Ask on the <a href="https://github.com/treeverse/lakeFS/security/advisories/lakefs.io/slack">lakeFS Slack</a> #help channel
Email us at <a href="mailto:security@treeverse.io">security@treeverse.io</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9">https://github.com/treeverse/lakeFS/security/advisories/GHSA-28q9-9c3g-v3f9</a></li>
<li><a href="https://github.com/treeverse/lakeFS/commit/81182bf9c0cf57f3cec3c893cf739b2069305e37">https://github.com/treeverse/lakeFS/commit/81182bf9c0cf57f3cec3c893cf739b2069305e37</a></li>
<li><a href="https://github.com/advisories/GHSA-28q9-9c3g-v3f9">https://github.com/advisories/GHSA-28q9-9c3g-v3f9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-28q9-9c3g-v3f9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-23T15:13:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cri-o/cri-o] CRI-O incorrect handling of supplementary groups may lead to sensitive information disclosure]]></title>
        <id>https://github.com/advisories/GHSA-phjr-8j92-w5v7</id>
        <link href="https://github.com/advisories/GHSA-phjr-8j92-w5v7"/>
        <updated>2022-09-22T17:22:58.000Z</updated>
        <content type="html"><![CDATA[<p>Incorrect handling of the supplementary groups in the CRI-O container engine might lead to sensitive information disclosure or possible data modification if an attacker has direct access to the affected container where supplementary groups are used to set access permissions and is able to execute a binary code in that container.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2995">https://nvd.nist.gov/vuln/detail/CVE-2022-2995</a></li>
<li><a href="https://github.com/cri-o/cri-o/pull/6159">https://github.com/cri-o/cri-o/pull/6159</a></li>
<li><a href="https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/">https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/</a></li>
<li><a href="https://github.com/cri-o/cri-o/commit/db3b399a8d7dabf7f073db73894bee98311d7909">https://github.com/cri-o/cri-o/commit/db3b399a8d7dabf7f073db73894bee98311d7909</a></li>
<li><a href="https://github.com/advisories/GHSA-phjr-8j92-w5v7">https://github.com/advisories/GHSA-phjr-8j92-w5v7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phjr-8j92-w5v7</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-20T00:00:22.000Z</published>
    </entry>
</feed>