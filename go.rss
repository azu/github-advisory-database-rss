<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-01-31T23:01:16.648Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/opencontainers/runc] runc vulnerable to container breakout through process.cwd trickery and leaked fds]]></title>
        <id>https://github.com/advisories/GHSA-xr7r-f8xq-vfvv</id>
        <link href="https://github.com/advisories/GHSA-xr7r-f8xq-vfvv"/>
        <updated>2024-01-31T22:44:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from <code>runc exec</code>) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem ("attack 2"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through <code>runc run</code> ("attack 1"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes ("attack 3a" and "attack 3b").</p>
<p>Strictly speaking, while attack 3a is the most severe from a CVSS perspective, attacks 2 and 3b are arguably more dangerous in practice because they allow for a breakout from inside a container as opposed to requiring a user execute a malicious image. The reason attacks 1 and 3a are scored higher is because being able to socially engineer users is treated as a given for UI:R vectors, despite attacks 2 and 3b requiring far more minimal user interaction (just reasonable <code>runc exec</code> operations on a container the attacker has access to). In any case, all four attacks can lead to full control of the host system.</p>
<h4 id="attack-1-processcwd-mis-configuration">Attack 1: <code>process.cwd</code> "mis-configuration"</h4>
<p>In runc 1.1.11 and earlier, several file descriptors were inadvertently leaked internally within runc into <code>runc init</code>, including a handle to the host's <code>/sys/fs/cgroup</code> (this leak was added in v1.0.0-rc93). If the container was configured to have <code>process.cwd</code> set to <code>/proc/self/fd/7/</code> (the actual fd can change depending on file opening order in <code>runc</code>), the resulting pid1 process will have a working directory in the host mount namespace and thus the spawned process can access the entire host filesystem. This alone is not an exploit against runc, however a malicious image could make any innocuous-looking non-<code>/</code> path a symlink to <code>/proc/self/fd/7/</code> and thus trick a user into starting a container whose binary has access to the host filesystem.</p>
<p>Furthermore, prior to runc 1.1.12, runc also did not verify that the final working directory was inside the container's mount namespace after calling <code>chdir(2)</code> (as we have already joined the container namespace, it was incorrectly assumed there would be no way to chdir outside the container after <code>pivot_root(2)</code>).</p>
<p>The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N (8.2, high severity).</p>
<p>Note that this attack requires a privileged user to be tricked into running a malicious container image. It should be noted that when using higher-level runtimes (such as Docker or Kubernetes), this exploit can be considered critical as it can be done remotely by anyone with the rights to start a container image (and can be exploited from within Dockerfiles using <code>ONBUILD</code> in the case of Docker).</p>
<h4 id="attack-2-runc-exec-container-breakout">Attack 2: <code>runc exec</code> container breakout</h4>
<p>(This is a modification of attack 1, constructed to allow for a process inside a container to break out.)</p>
<p>The same fd leak and lack of verification of the working directory in attack 1 also apply to <code>runc exec</code>. If a malicious process inside the container knows that some administrative process will call <code>runc exec</code> with the <code>--cwd</code> argument and a given path, in most cases they can replace that path with a symlink to <code>/proc/self/fd/7/</code>. Once the container process has executed the container binary, <code>PR_SET_DUMPABLE</code> protections no longer apply and the attacker can open <code>/proc/$exec_pid/cwd</code> to get access to the host filesystem.</p>
<p><code>runc exec</code> defaults to a cwd of <code>/</code> (which cannot be replaced with a symlink), so this attack depends on the attacker getting a user (or some administrative process) to use <code>--cwd</code> and figuring out what path the target working directory is. Note that if the target working directory is a parent of the program binary being executed, the attacker might be unable to replace the path with a symlink (the <code>execve</code> will fail in most cases, unless the host filesystem layout specifically matches the container layout in specific ways and the attacker knows which binary the <code>runc exec</code> is executing).</p>
<p>The CVSS score for this attack is CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N (7.2, high severity).</p>
<h4 id="attacks-3a-and-3b-processargs-host-binary-overwrite-attack">Attacks 3a and 3b: <code>process.args</code> host binary overwrite attack</h4>
<p>(These are modifications of attacks 1 and 2, constructed to overwrite a host binary by using <code>execve</code> to bring a magic-link reference into the container.)</p>
<p>Attacks 1 and 2 can be adapted to overwrite a host binary by using a path like <code>/proc/self/fd/7/../../../bin/bash</code> as the <code>process.args</code> binary argument, causing a host binary to be executed by a container process. The <code>/proc/$pid/exe</code> handle can then be used to overwrite the host binary, as seen in CVE-2019-5736 (note that the same <code>#!</code> trick can be used to avoid detection as an attacker). As the overwritten binary could be something like <code>/bin/bash</code>, as soon as a privileged user executes the target binary on the host, the attacker can pivot to gain full access to the host.</p>
<p>For the purposes of CVSS scoring:</p>
<ul>
<li>Attack 3a is attack 1 but adapted to overwrite a host binary, where a malicious image is set up to execute <code>/proc/self/fd/7/../../../bin/bash</code> and run a shell script that overwrites <code>/proc/self/exe</code>, overwriting the host copy of <code>/bin/bash</code>. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H (8.6, high severity).</li>
<li>Attack 3b is attack 2 but adapted to overwrite a host binary, where the malicious container process overwrites all of the possible <code>runc exec</code> target binaries inside the container (such as <code>/bin/bash</code>) such that a host target binary is executed and then the container process opens <code>/proc/$pid/exe</code> to get access to the host binary and overwrite it. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H (8.2, high severity).</li>
</ul>
<p>As mentioned in attack 1, while 3b is scored lower it is more dangerous in practice as it doesn't require a user to run a malicious image.</p>
<h3 id="patches">Patches</h3>
<p>runc 1.1.12 has been released, and includes patches for this issue. Note that there are four separate fixes applied:</p>
<ul>
<li>Checking that the working directory is actually inside the container by checking whether <code>os.Getwd</code> returns <code>ENOENT</code> (Linux provides a way of detecting if cwd is outside the current namespace root). This explicitly blocks runc from executing a container process when inside a non-container path and thus eliminates attacks 1 and 2 even in the case of fd leaks.</li>
<li>Close all internal runc file descriptors in the final stage of <code>runc init</code>, right before <code>execve</code>. This ensures that internal file descriptors cannot be used as an argument to <code>execve</code> and thus eliminates attacks 3a and 3b, even in the case of fd leaks. This requires hooking into some Go runtime internals to make sure we don't close critical Go internal file descriptors.</li>
<li>Fixing the specific fd leaks that made these bug exploitable (mark <code>/sys/fs/cgroup</code> as <code>O_CLOEXEC</code> and backport a fix for some <code>*os.File</code> leaks).</li>
<li>In order to protect against future <code>runc init</code> file descriptor leaks, mark all non-stdio files as <code>O_CLOEXEC</code> before executing <code>runc init</code>.</li>
</ul>
<h3 id="other-runtimes">Other Runtimes</h3>
<p>We have discovered that several other container runtimes are either potentially vulnerable to similar attacks, or do not have sufficient protection against attacks of this nature. We recommend other container runtime authors look at <a href="#Patches">our patches</a> and make sure they at least add a <code>getcwd() != ENOENT</code> check as well as consider whether <code>close_range(3, UINT_MAX, CLOSE_RANGE_CLOEXEC)</code> before executing their equivalent of <code>runc init</code> is appropriate.</p>
<ul>
<li>crun 1.12 does not leak any useful file descriptors into the <code>runc init</code>-equivalent process (so this attack is <em>not exploitable</em> as far as we can tell), but no care is taken to make sure all non-stdio files are <code>O_CLOEXEC</code> and there is no check after <code>chdir(2)</code> to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to <code>crun</code> are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of <code>crun</code> can lead to these attacks becoming exploitable.</li>
<li>youki 0.3.1 does not leak any useful file descriptors into the <code>runc init</code>-equivalent process (so this attack is <em>not exploitable</em> as far as we can tell) however this appears to be pure luck. <code>youki</code> does leak a directory file descriptor from the host mount namespace, but it just so happens that the directory is the rootfs of the container (which then gets <code>pivot_root</code>'d into and so ends up as a in-root path thanks to <code>chroot_fs_refs</code>). In addition, no care is taken to make sure all non-stdio files are <code>O_CLOEXEC</code> and there is no check after <code>chdir(2)</code> to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to <code>youki</code> are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of <code>youki</code> can lead to these attacks becoming exploitable.</li>
<li>LXC 5.0.3 does not appear to leak any useful file descriptors, and they have comments noting the importance of not leaking file descriptors in <code>lxc-attach</code>. However, they don't seem to have any proactive protection against file descriptor leaks at the point of <code>chdir</code> such as using <code>close_range(...)</code> (they do have RAII-like <code>__do_fclose</code> closers but those don't necessarily stop all leaks in this context) nor do they have any check after <code>chdir(2)</code> to ensure the working directory is inside the container. Unfortunately it seems they cannot use <code>CLOSE_RANGE_CLOEXEC</code> because they don't need to re-exec themselves.</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>For attacks 1 and 2, only permit containers (and <code>runc exec</code>) to use a <code>process.cwd</code> of <code>/</code>. It is not possible for <code>/</code> to be replaced with a symlink (the path is resolved from within the container's mount namespace, and you cannot change the root of a mount namespace or an fs root to a symlink).</p>
<p>For attacks 1 and 3a, only permit users to run trusted images.</p>
<p>For attack 3b, there is no practical workaround other than never using <code>runc exec</code> because any binary you try to execute with <code>runc exec</code> could end up being a malicious binary target.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-21626">https://www.cve.org/CVERecord?id=CVE-2024-21626</a></li>
<li><a href="https://github.com/opencontainers/runc/releases/tag/v1.1.12">https://github.com/opencontainers/runc/releases/tag/v1.1.12</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/7362cd5afe9d40131fb62cb075092025c7c71064">https://github.com/opencontainers/runc/commit/7362cd5afe9d40131fb62cb075092025c7c71064</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/2ed79a6c91e56dcd2d1da47f8ffd663066153746">https://github.com/opencontainers/runc/commit/2ed79a6c91e56dcd2d1da47f8ffd663066153746</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/b2b5754eb34174e032f1048beb1b27db83e77c5a">https://github.com/opencontainers/runc/commit/b2b5754eb34174e032f1048beb1b27db83e77c5a</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/996a33c0e468435c70a34a25be1cb023d7554563">https://github.com/opencontainers/runc/commit/996a33c0e468435c70a34a25be1cb023d7554563</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/f3429eda1a8d478d7dbcb9c07cef943d88e67671">https://github.com/opencontainers/runc/commit/f3429eda1a8d478d7dbcb9c07cef943d88e67671</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/4f263985016276c2faf709e9db98fcc8677a8a13">https://github.com/opencontainers/runc/commit/4f263985016276c2faf709e9db98fcc8677a8a13</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to Rory McNamara from Snyk for discovering and disclosing the original vulnerability (attack 1) to Docker, @lifubang from acmcoder for discovering how to adapt the attack to overwrite host binaries (attack 3a), and Aleksa Sarai from SUSE for discovering how to adapt the attacks to work as container breakouts using <code>runc exec</code> (attacks 2 and 3b).</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/opencontainers/runc/security/advisories/GHSA-xr7r-f8xq-vfvv">https://github.com/opencontainers/runc/security/advisories/GHSA-xr7r-f8xq-vfvv</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/02120488a4c0fc487d1ed2867e901eeed7ce8ecf">https://github.com/opencontainers/runc/commit/02120488a4c0fc487d1ed2867e901eeed7ce8ecf</a></li>
<li><a href="https://github.com/opencontainers/runc/releases/tag/v1.1.12">https://github.com/opencontainers/runc/releases/tag/v1.1.12</a></li>
<li><a href="https://github.com/advisories/GHSA-xr7r-f8xq-vfvv">https://github.com/advisories/GHSA-xr7r-f8xq-vfvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr7r-f8xq-vfvv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T22:44:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/buildkit] BuildKit vulnerable to possible panic when incorrect parameters sent from frontend]]></title>
        <id>https://github.com/advisories/GHSA-9p26-698r-w4hx</id>
        <link href="https://github.com/advisories/GHSA-9p26-698r-w4hx"/>
        <updated>2024-01-31T22:43:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious BuildKit client or frontend could craft a request that could lead to BuildKit daemon crashing with a panic.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v0.12.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the <code>#syntax</code> line on your Dockerfile, or with <code>--frontend</code> flag when using <code>buildctl build</code> command. </p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/buildkit/security/advisories/GHSA-9p26-698r-w4hx">https://github.com/moby/buildkit/security/advisories/GHSA-9p26-698r-w4hx</a></li>
<li><a href="https://github.com/moby/buildkit/pull/4601">https://github.com/moby/buildkit/pull/4601</a></li>
<li><a href="https://github.com/advisories/GHSA-9p26-698r-w4hx">https://github.com/advisories/GHSA-9p26-698r-w4hx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9p26-698r-w4hx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-31T22:43:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/buildkit] BuildKit vulnerable to possible race condition with accessing subpaths from cache mounts]]></title>
        <id>https://github.com/advisories/GHSA-m3r6-h7wv-7xxv</id>
        <link href="https://github.com/advisories/GHSA-m3r6-h7wv-7xxv"/>
        <updated>2024-01-31T22:43:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Two malicious build steps running in parallel sharing the same cache mounts with subpaths could cause a race condition that can lead to files from the host system being accessible to the build container.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v0.12.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing cache mounts with <code>--mount=type=cache,source=...</code> options.</p>
<h3 id="references">References</h3>
<p><a href="https://www.openwall.com/lists/oss-security/2019/05/28/1">https://www.openwall.com/lists/oss-security/2019/05/28/1</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/buildkit/security/advisories/GHSA-m3r6-h7wv-7xxv">https://github.com/moby/buildkit/security/advisories/GHSA-m3r6-h7wv-7xxv</a></li>
<li><a href="https://github.com/moby/buildkit/pull/4604">https://github.com/moby/buildkit/pull/4604</a></li>
<li><a href="https://github.com/advisories/GHSA-m3r6-h7wv-7xxv">https://github.com/advisories/GHSA-m3r6-h7wv-7xxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3r6-h7wv-7xxv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T22:43:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/buildkit] BuildKit vulnerable to possible host system access from mount stub cleaner]]></title>
        <id>https://github.com/advisories/GHSA-4v98-7qmw-rqr8</id>
        <link href="https://github.com/advisories/GHSA-4v98-7qmw-rqr8"/>
        <updated>2024-01-31T22:43:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious BuildKit frontend or Dockerfile using <code>RUN --mount</code> could trick the feature that removes empty files created for the mountpoints into removing a file outside the container, from the host system.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v0.12.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing <code>RUN --mount</code> feature.</p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/buildkit/security/advisories/GHSA-4v98-7qmw-rqr8">https://github.com/moby/buildkit/security/advisories/GHSA-4v98-7qmw-rqr8</a></li>
<li><a href="https://github.com/moby/buildkit/pull/4603">https://github.com/moby/buildkit/pull/4603</a></li>
<li><a href="https://github.com/advisories/GHSA-4v98-7qmw-rqr8">https://github.com/advisories/GHSA-4v98-7qmw-rqr8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v98-7qmw-rqr8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T22:43:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/buildkit] Buildkit's interactive containers API does not validate entitlements check]]></title>
        <id>https://github.com/advisories/GHSA-wr6v-9f75-vh2g</id>
        <link href="https://github.com/advisories/GHSA-wr6v-9f75-vh2g"/>
        <updated>2024-01-31T22:43:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In addition to running containers as build steps, BuildKit also provides APIs for running interactive containers based on built images. It was possible to use these APIs to ask BuildKit to run a container with elevated privileges. Normally, running such containers is only allowed if special <code>security.insecure</code> entitlement is enabled both by buildkitd configuration and allowed by the user initializing the build request.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in v0.12.5 .</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the <code>#syntax</code> line on your Dockerfile, or with <code>--frontend</code> flag when using <code>buildctl build</code> command.</p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/buildkit/security/advisories/GHSA-wr6v-9f75-vh2g">https://github.com/moby/buildkit/security/advisories/GHSA-wr6v-9f75-vh2g</a></li>
<li><a href="https://github.com/moby/buildkit/pull/4602">https://github.com/moby/buildkit/pull/4602</a></li>
<li><a href="https://github.com/advisories/GHSA-wr6v-9f75-vh2g">https://github.com/advisories/GHSA-wr6v-9f75-vh2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr6v-9f75-vh2g</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T22:43:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/servicecomb-service-center] Apache ServiceComb Service-Center Server-Side Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9xc9-xq7w-vpcr</id>
        <link href="https://github.com/advisories/GHSA-9xc9-xq7w-vpcr"/>
        <updated>2024-01-31T22:43:11.000Z</updated>
        <content type="html"><![CDATA[<p>Server-Side Request Forgery (SSRF) vulnerability in Apache ServiceComb Service-Center. Attackers can obtain sensitive server information through specially crafted requests.This issue affects Apache ServiceComb before 2.1.0 (included). Users are recommended to upgrade to version 2.2.0, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44313">https://nvd.nist.gov/vuln/detail/CVE-2023-44313</a></li>
<li><a href="https://lists.apache.org/thread/kxovd455o9h4f2v811hcov2qknbwld5r">https://lists.apache.org/thread/kxovd455o9h4f2v811hcov2qknbwld5r</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/01/31/4">http://www.openwall.com/lists/oss-security/2024/01/31/4</a></li>
<li><a href="https://github.com/advisories/GHSA-9xc9-xq7w-vpcr">https://github.com/advisories/GHSA-9xc9-xq7w-vpcr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9xc9-xq7w-vpcr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T09:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/servicecomb-service-center] Apache ServiceComb Service-Center Exposure of Sensitive Information to an Unauthorized Actor vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r8xp-52mq-rmm8</id>
        <link href="https://github.com/advisories/GHSA-r8xp-52mq-rmm8"/>
        <updated>2024-01-31T22:43:06.000Z</updated>
        <content type="html"><![CDATA[<p>Exposure of Sensitive Information to an Unauthorized Actor in Apache ServiceComb Service-Center. This issue affects Apache ServiceComb Service-Center before 2.1.0 (included). Users are recommended to upgrade to version 2.2.0, which fixes the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-44312">https://nvd.nist.gov/vuln/detail/CVE-2023-44312</a></li>
<li><a href="https://lists.apache.org/thread/dkvlgnrmc17qzjdy9k0cr60wpzcssk1s">https://lists.apache.org/thread/dkvlgnrmc17qzjdy9k0cr60wpzcssk1s</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2024/01/31/5">http://www.openwall.com/lists/oss-security/2024/01/31/5</a></li>
<li><a href="https://github.com/advisories/GHSA-r8xp-52mq-rmm8">https://github.com/advisories/GHSA-r8xp-52mq-rmm8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r8xp-52mq-rmm8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-31T09:30:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/anchore/stereoscope] stereoscope vulnerable to tar path traversal when processing OCI tar archives]]></title>
        <id>https://github.com/advisories/GHSA-hpxr-w9w7-g4gv</id>
        <link href="https://github.com/advisories/GHSA-hpxr-w9w7-g4gv"/>
        <updated>2024-01-31T22:39:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>It is possible to craft an OCI tar archive that, when stereoscope attempts to unarchive the contents, will result in writing to paths outside of the unarchive temporary directory. Specifically, use of <code>github.com/anchore/stereoscope/pkg/file.UntarToDirectory()</code> function, the  <code>github.com/anchore/stereoscope/pkg/image/oci.TarballImageProvider</code> struct, or the higher level <code>github.com/anchore/stereoscope/pkg/image.Image.Read()</code> function express this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>Patched in v0.0.1</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you are using the OCI archive as input into stereoscope then you can switch to using an <a href="https://github.com/opencontainers/image-spec/blob/main/image-layout.md">OCI layout</a> by unarchiving the tar archive and provide the unarchived directory to stereoscope.</p>
<h3 id="references">References</h3>
<ul>
<li>Patch PR <a href="https://github.com/anchore/stereoscope/pull/214">https://github.com/anchore/stereoscope/pull/214</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/anchore/stereoscope/security/advisories/GHSA-hpxr-w9w7-g4gv">https://github.com/anchore/stereoscope/security/advisories/GHSA-hpxr-w9w7-g4gv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-24579">https://nvd.nist.gov/vuln/detail/CVE-2024-24579</a></li>
<li><a href="https://github.com/anchore/stereoscope/commit/09dacab4d9ee65ee8bc7af8ebf4aa7b5aaa36204">https://github.com/anchore/stereoscope/commit/09dacab4d9ee65ee8bc7af8ebf4aa7b5aaa36204</a></li>
<li><a href="https://github.com/advisories/GHSA-hpxr-w9w7-g4gv">https://github.com/advisories/GHSA-hpxr-w9w7-g4gv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hpxr-w9w7-g4gv</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-31T22:39:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</id>
        <link href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16251">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</id>
        <link href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16251">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</id>
        <link href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16251">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault/vault] HashiCorp Vault Authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</id>
        <link href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.8.3 and newer, when configured with the GCP GCE auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16251">https://nvd.nist.gov/vuln/detail/CVE-2020-16251</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159479/Hashicorp-Vault-GCP-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-4mp7-2m29-gqxf">https://github.com/advisories/GHSA-4mp7-2m29-gqxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4mp7-2m29-gqxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd] Etcd Gateway TLS authentication only applies to endpoints detected in DNS SRV records]]></title>
        <id>https://github.com/advisories/GHSA-wr2v-9rpq-c35q</id>
        <link href="https://github.com/advisories/GHSA-wr2v-9rpq-c35q"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Cryptography</p>
<h3 id="workarounds">Workarounds</h3>
<p>Refer to the <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation.</p>
<h3 id="detail">Detail</h3>
<p>When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q">https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15136">https://nvd.nist.gov/vuln/detail/CVE-2020-15136</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-wr2v-9rpq-c35q">https://github.com/advisories/GHSA-wr2v-9rpq-c35q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr2v-9rpq-c35q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-31T00:21:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd] Etcd Gateway TLS authentication only applies to endpoints detected in DNS SRV records]]></title>
        <id>https://github.com/advisories/GHSA-wr2v-9rpq-c35q</id>
        <link href="https://github.com/advisories/GHSA-wr2v-9rpq-c35q"/>
        <updated>2024-01-31T00:22:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Cryptography</p>
<h3 id="workarounds">Workarounds</h3>
<p>Refer to the <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation.</p>
<h3 id="detail">Detail</h3>
<p>When starting a gateway, TLS authentication will only be attempted on endpoints identified in DNS SRV records for a given domain, which occurs in the discoverEndpoints function. No authentication is performed against endpoints provided in the --endpoints flag. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q">https://github.com/etcd-io/etcd/security/advisories/GHSA-wr2v-9rpq-c35q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15136">https://nvd.nist.gov/vuln/detail/CVE-2020-15136</a></li>
<li><a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-wr2v-9rpq-c35q">https://github.com/advisories/GHSA-wr2v-9rpq-c35q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr2v-9rpq-c35q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-31T00:21:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd] Etcd Gateway can include itself as an endpoint resulting in resource exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-2xhq-gv6c-p224</id>
        <link href="https://github.com/advisories/GHSA-2xhq-gv6c-p224"/>
        <updated>2024-01-31T00:21:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Denial of Service</p>
<h3 id="detail">Detail</h3>
<p>The etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224">https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15114">https://nvd.nist.gov/vuln/detail/CVE-2020-15114</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-2xhq-gv6c-p224">https://github.com/advisories/GHSA-2xhq-gv6c-p224</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2xhq-gv6c-p224</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd] Etcd Gateway can include itself as an endpoint resulting in resource exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-2xhq-gv6c-p224</id>
        <link href="https://github.com/advisories/GHSA-2xhq-gv6c-p224"/>
        <updated>2024-01-31T00:21:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Denial of Service</p>
<h3 id="detail">Detail</h3>
<p>The etcd gateway is a simple TCP proxy to allow for basic service discovery and access. However, it is possible to include the gateway address as an endpoint. This results in a denial of service, since the endpoint can become stuck in a loop of requesting itself until there are no more available file descriptors to accept connections on the gateway.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224">https://github.com/etcd-io/etcd/security/advisories/GHSA-2xhq-gv6c-p224</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15114">https://nvd.nist.gov/vuln/detail/CVE-2020-15114</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-2xhq-gv6c-p224">https://github.com/advisories/GHSA-2xhq-gv6c-p224</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2xhq-gv6c-p224</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-01-31T00:21:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/etcd-io/etcd] Improper Preservation of Permissions in etcd]]></title>
        <id>https://github.com/advisories/GHSA-chh6-ppwq-jh92</id>
        <link href="https://github.com/advisories/GHSA-chh6-ppwq-jh92"/>
        <updated>2024-01-30T23:54:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Access Controls</p>
<h3 id="detail">Detail</h3>
<p>etcd creates certain directory paths (etcd data directory and the directory path when provided to automatically generate self-signed certificates for TLS connections with clients) with restricted access permissions (700) by using the os.MkdirAll. This function does not perform any permission checks when a given directory path exists already.</p>
<h3 id="specific-go-package-affected">Specific Go Package Affected</h3>
<p>github.com/etcd-io/etcd/pkg/fileutil</p>
<h3 id="workarounds">Workarounds</h3>
<p>Make sure these directories have the desired permit (700).</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92">https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15113">https://nvd.nist.gov/vuln/detail/CVE-2020-15113</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b">https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2">https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-chh6-ppwq-jh92">https://github.com/advisories/GHSA-chh6-ppwq-jh92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chh6-ppwq-jh92</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-30T23:54:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/etcd-io/etcd] Improper Preservation of Permissions in etcd]]></title>
        <id>https://github.com/advisories/GHSA-chh6-ppwq-jh92</id>
        <link href="https://github.com/advisories/GHSA-chh6-ppwq-jh92"/>
        <updated>2024-01-30T23:54:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Access Controls</p>
<h3 id="detail">Detail</h3>
<p>etcd creates certain directory paths (etcd data directory and the directory path when provided to automatically generate self-signed certificates for TLS connections with clients) with restricted access permissions (700) by using the os.MkdirAll. This function does not perform any permission checks when a given directory path exists already.</p>
<h3 id="specific-go-package-affected">Specific Go Package Affected</h3>
<p>github.com/etcd-io/etcd/pkg/fileutil</p>
<h3 id="workarounds">Workarounds</h3>
<p>Make sure these directories have the desired permit (700).</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92">https://github.com/etcd-io/etcd/security/advisories/GHSA-chh6-ppwq-jh92</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15113">https://nvd.nist.gov/vuln/detail/CVE-2020-15113</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b">https://github.com/etcd-io/etcd/commit/6be5c54c94298ae6746a574d2af8227d0c9a998b</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2">https://github.com/etcd-io/etcd/commit/e5424fc474b274c9e6b5205165015bc2035745f2</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-chh6-ppwq-jh92">https://github.com/advisories/GHSA-chh6-ppwq-jh92</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chh6-ppwq-jh92</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-30T23:54:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana XSS via adding a link in General feature]]></title>
        <id>https://github.com/advisories/GHSA-6wh2-8hw7-jw94</id>
        <link href="https://github.com/advisories/GHSA-6wh2-8hw7-jw94"/>
        <updated>2024-01-30T23:47:51.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana 5.3.1 has XSS via a link on the "Dashboard &gt; All Panels &gt; General" screen. NOTE: this issue exists because of an incomplete fix for CVE-2018-12099.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18625">https://nvd.nist.gov/vuln/detail/CVE-2018-18625</a></li>
<li><a href="https://github.com/grafana/grafana/pull/11813">https://github.com/grafana/grafana/pull/11813</a></li>
<li><a href="https://github.com/grafana/grafana/pull/14984">https://github.com/grafana/grafana/pull/14984</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200608-0008/">https://security.netapp.com/advisory/ntap-20200608-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-6wh2-8hw7-jw94">https://github.com/advisories/GHSA-6wh2-8hw7-jw94</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wh2-8hw7-jw94</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-30T23:47:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana XSS in Dashboard Text Panel]]></title>
        <id>https://github.com/advisories/GHSA-cmq2-j8v8-2q44</id>
        <link href="https://github.com/advisories/GHSA-cmq2-j8v8-2q44"/>
        <updated>2024-01-30T23:47:49.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana 5.3.1 has XSS via the "Dashboard &gt; Text Panel" screen. NOTE: this issue exists because of an incomplete fix for CVE-2018-12099.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18623">https://nvd.nist.gov/vuln/detail/CVE-2018-18623</a></li>
<li><a href="https://github.com/grafana/grafana/issues/15293">https://github.com/grafana/grafana/issues/15293</a></li>
<li><a href="https://github.com/grafana/grafana/issues/4117">https://github.com/grafana/grafana/issues/4117</a></li>
<li><a href="https://github.com/grafana/grafana/pull/11813">https://github.com/grafana/grafana/pull/11813</a></li>
<li><a href="https://github.com/grafana/grafana/pull/14984">https://github.com/grafana/grafana/pull/14984</a></li>
<li><a href="https://github.com/grafana/grafana/releases/tag/v6.0.0">https://github.com/grafana/grafana/releases/tag/v6.0.0</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20200608-0008/">https://security.netapp.com/advisory/ntap-20200608-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-cmq2-j8v8-2q44">https://github.com/advisories/GHSA-cmq2-j8v8-2q44</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cmq2-j8v8-2q44</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-01-30T23:47:48.000Z</published>
    </entry>
</feed>