<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-08-29T20:01:40.324Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/gin-gonic/gin] Inconsistent Interpretation of HTTP Requests in github.com/gin-gonic/gin]]></title>
        <id>https://github.com/advisories/GHSA-h395-qcrw-5vmq</id>
        <link href="https://github.com/advisories/GHSA-h395-qcrw-5vmq"/>
        <updated>2023-08-29T19:56:24.000Z</updated>
        <content type="html"><![CDATA[<p>When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header. This affects all versions of package github.com/gin-gonic/gin under 1.7.7. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-28483">https://nvd.nist.gov/vuln/detail/CVE-2020-28483</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2632">https://github.com/gin-gonic/gin/pull/2632</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/bfc8ca285eb46dad60e037d57c545cd260636711">https://github.com/gin-gonic/gin/commit/bfc8ca285eb46dad60e037d57c545cd260636711</a></li>
<li><a href="https://github.com/gin-gonic/gin/releases/tag/v1.7.0">https://github.com/gin-gonic/gin/releases/tag/v1.7.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2232">https://github.com/gin-gonic/gin/issues/2232</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2473">https://github.com/gin-gonic/gin/issues/2473</a></li>
<li><a href="https://github.com/gin-gonic/gin/issues/2862">https://github.com/gin-gonic/gin/issues/2862</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2474#23issuecomment-729696437">https://github.com/gin-gonic/gin/pull/2474#23issuecomment-729696437</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2675">https://github.com/gin-gonic/gin/pull/2675</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2844">https://github.com/gin-gonic/gin/pull/2844</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/03e5e05ae089bc989f1ca41841f05504d29e3fd9">https://github.com/gin-gonic/gin/commit/03e5e05ae089bc989f1ca41841f05504d29e3fd9</a></li>
<li><a href="https://github.com/gin-gonic/gin/commit/5929d521715610c9dd14898ebbe1d188d5de8937">https://github.com/gin-gonic/gin/commit/5929d521715610c9dd14898ebbe1d188d5de8937</a></li>
<li><a href="https://github.com/gin-gonic/gin/releases/tag/v1.7.7">https://github.com/gin-gonic/gin/releases/tag/v1.7.7</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0052">https://pkg.go.dev/vuln/GO-2021-0052</a></li>
<li><a href="https://github.com/gin-gonic/gin/pull/2844/files#diff-e6ce689a25eaef174c2dd51fe869fabbe04a6c6afbd416b23eda138c82e761baR1432">https://github.com/gin-gonic/gin/pull/2844/files#diff-e6ce689a25eaef174c2dd51fe869fabbe04a6c6afbd416b23eda138c82e761baR1432</a></li>
<li><a href="https://github.com/advisories/GHSA-h395-qcrw-5vmq">https://github.com/advisories/GHSA-h395-qcrw-5vmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h395-qcrw-5vmq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:53:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/facebook/fbthrift] Improper Input Validation and Excessive Iteration in Go Facebook Thrift]]></title>
        <id>https://github.com/advisories/GHSA-x4rg-4545-4w7w</id>
        <link href="https://github.com/advisories/GHSA-x4rg-4545-4w7w"/>
        <updated>2023-08-29T19:42:18.000Z</updated>
        <content type="html"><![CDATA[<p>Go Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.03.04.00.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-3564">https://nvd.nist.gov/vuln/detail/CVE-2019-3564</a></li>
<li><a href="https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156">https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156</a></li>
<li><a href="https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2019-3564">https://www.facebook.com/security/advisories/cve-2019-3564</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0088">https://pkg.go.dev/vuln/GO-2021-0088</a></li>
<li><a href="https://github.com/advisories/GHSA-x4rg-4545-4w7w">https://github.com/advisories/GHSA-x4rg-4545-4w7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4rg-4545-4w7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2023-08-29T19:39:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1114">https://pkg.go.dev/vuln/GO-2022-1114</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet/v2] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2023-08-29T19:39:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1114">https://pkg.go.dev/vuln/GO-2022-1114</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dinever/golf] Golf may allow attacker to bypass CSRF protections due to weak PRNG]]></title>
        <id>https://github.com/advisories/GHSA-q9qr-jwpw-3qvv</id>
        <link href="https://github.com/advisories/GHSA-q9qr-jwpw-3qvv"/>
        <updated>2023-08-29T19:36:31.000Z</updated>
        <content type="html"><![CDATA[<p>CSRF tokens are generated using math/rand, which is not a cryptographically secure random number generator, allowing an attacker to predict values and bypass CSRF protections with relatively few requests.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-15005">https://nvd.nist.gov/vuln/detail/CVE-2016-15005</a></li>
<li><a href="https://github.com/dinever/golf/issues/20">https://github.com/dinever/golf/issues/20</a></li>
<li><a href="https://github.com/dinever/golf/pull/24">https://github.com/dinever/golf/pull/24</a></li>
<li><a href="https://github.com/dinever/golf/commit/3776f338be48b5bc5e8cf9faff7851fc52a3f1fe">https://github.com/dinever/golf/commit/3776f338be48b5bc5e8cf9faff7851fc52a3f1fe</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0045">https://pkg.go.dev/vuln/GO-2020-0045</a></li>
<li><a href="https://github.com/dinever/golf/releases/tag/v0.3.0">https://github.com/dinever/golf/releases/tag/v0.3.0</a></li>
<li><a href="https://github.com/advisories/GHSA-q9qr-jwpw-3qvv">https://github.com/advisories/GHSA-q9qr-jwpw-3qvv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q9qr-jwpw-3qvv</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-28T00:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ecnepsnai/web] ecnepsnai/web vulnerable to Uncontrolled Resource Consumption]]></title>
        <id>https://github.com/advisories/GHSA-jpgg-cp2x-qrw3</id>
        <link href="https://github.com/advisories/GHSA-jpgg-cp2x-qrw3"/>
        <updated>2023-08-29T18:58:37.000Z</updated>
        <content type="html"><![CDATA[<p>Web Sockets do not execute any AuthenticateMethod methods which may be set, leading to a nil pointer dereference if the returned UserData pointer is assumed to be non-nil, or authentication bypass. This issue only affects WebSockets with an AuthenticateMethod hook. Request handlers that do not explicitly use WebSockets are not vulnerable.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4236">https://nvd.nist.gov/vuln/detail/CVE-2021-4236</a></li>
<li><a href="https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f">https://github.com/ecnepsnai/web/commit/5a78f8d5c41ce60dcf9f61aaf47a7a8dc3e0002f</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0107">https://pkg.go.dev/vuln/GO-2021-0107</a></li>
<li><a href="https://github.com/advisories/GHSA-jpgg-cp2x-qrw3">https://github.com/advisories/GHSA-jpgg-cp2x-qrw3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jpgg-cp2x-qrw3</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-28T00:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Geth Node Vulnerable to DoS via maliciously crafted p2p message ]]></title>
        <id>https://github.com/advisories/GHSA-59hh-656j-3p7v</id>
        <link href="https://github.com/advisories/GHSA-59hh-656j-3p7v"/>
        <updated>2023-08-29T18:55:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerable node is susceptible to crash when processing a maliciously crafted message from a peer, via the <code>snap/1</code> protocol. The crash can be triggered by sending a malicious <code>snap/1</code> <code>GetTrieNodes</code> package. </p>
<h3 id="details">Details</h3>
<p>On September 21, 2021, geth-team member Gary Rong (@rjl493456442) found a way to crash the snap request handler . 
By using this vulnerability, a peer connected on the <code>snap/1</code> protocol could cause a vulnerable node to crash with a <code>panic</code>.</p>
<p>In the <code>trie.TryGetNode</code> implementation, if the requested path is reached, the associated node will be returned. However the nilness is
not checked there.</p>
<pre><code class="language-golang">func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {
    // If we reached the requested path, return the current node
    if pos &gt;= len(path) {
        // Although we most probably have the original node expanded, encoding
        // that into consensus form can be nasty (needs to cascade down) and
        // time consuming. Instead, just pull the hash up from disk directly.
        var hash hashNode
        if node, ok := origNode.(hashNode); ok {
            hash = node
        } else {
            hash, _ = origNode.cache()
        }
</code></pre>
<p>More specifically the <code>origNode</code> can be nil(e.g. the child of fullnode) and system can panic at line <code>hash, _ = origNode.cache()</code>. </p>
<p>When investigating this, @holiman tried to find it via fuzzing, which uncovered a second crasher, also related to the snap <code>GetTrieNodes</code> package. If the caller requests a storage trie:</p>
<pre><code class="language-golang">                // Storage slots requested, open the storage trie and retrieve from there
                account, err := snap.Account(common.BytesToHash(pathset[0]))
                loads++ // always account database reads, even for failures
                if account == nil {
                    break
                }
                stTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)
</code></pre>
<p>The code assumes that <code>snap.Account</code> returns <em>either</em> a non-nil response unless <code>error</code> is also provided. This is however not the case, since <code>snap.Account</code> can return <code>nil, nil</code>. </p>
<h3 id="patches">Patches</h3>
<pre><code class="language-diff">--- a/eth/protocols/snap/handler.go
+++ b/eth/protocols/snap/handler.go
@@ -469,7 +469,7 @@ func handleMessage(backend Backend, peer *Peer) error {
                 // Storage slots requested, open the storage trie and retrieve from there
                 account, err := snap.Account(common.BytesToHash(pathset[0]))
                 loads++ // always account database reads, even for failures
-				if err != nil {
+				if err != nil || account == nil {
                     break
                 }
                 stTrie, err := trie.NewSecure(common.BytesToHash(account.Root), triedb)
diff --git a/trie/trie.go b/trie/trie.go
index 7ea7efa835..d0f0d4e2bc 100644
--- a/trie/trie.go
+++ b/trie/trie.go
@@ -174,6 +174,10 @@ func (t *Trie) TryGetNode(path []byte) ([]byte, int, error) {
 }
 
 func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, newnode node, resolved int, err error) {
+	// If non-existent path requested, abort
+	if origNode == nil {
+		return nil, nil, 0, nil
+	}
     // If we reached the requested path, return the current node
     if pos &gt;= len(path) {
         // Although we most probably have the original node expanded, encoding
@@ -193,10 +197,6 @@ func (t *Trie) tryGetNode(origNode node, path []byte, pos int) (item []byte, new
     }
     // Path still needs to be traversed, descend into children
     switch n := (origNode).(type) {
-	case nil:
-		// Non-existent path requested, abort
-		return nil, nil, 0, nil
-
     case valueNode:
         // Path prematurely ended, abort
         return nil, nil, 0, nil
</code></pre>
<p>The fixes were merged into <a href="https://github.com/ethereum/go-ethereum/pull/23657">#23657</a>, with commit <a href="https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8">f1fd963</a>, and released as part of Geth <a href="https://github.com/ethereum/go-ethereum/tree/v1.10.9">v1.10.9</a> on Sept 29, 2021. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Apply the patch above or upgrade to a version which is not vulnerable.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum/">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-59hh-656j-3p7v">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-59hh-656j-3p7v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41173">https://nvd.nist.gov/vuln/detail/CVE-2021-41173</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/23801">https://github.com/ethereum/go-ethereum/pull/23801</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/e40b37718326b8b4873b3b00a0db2e6c6d9ea738">https://github.com/ethereum/go-ethereum/commit/e40b37718326b8b4873b3b00a0db2e6c6d9ea738</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9">https://github.com/ethereum/go-ethereum/releases/tag/v1.10.9</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8">https://github.com/ethereum/go-ethereum/pull/23657/commits/f1fd963a5a965e643e52fcf805a2a02a323c32b8</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0256">https://pkg.go.dev/vuln/GO-2022-0256</a></li>
<li><a href="https://github.com/advisories/GHSA-59hh-656j-3p7v">https://github.com/advisories/GHSA-59hh-656j-3p7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59hh-656j-3p7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-10-25T19:42:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Ethereum Contains Consensus Flaw During Block Processing]]></title>
        <id>https://github.com/advisories/GHSA-9856-9gg9-qcmq</id>
        <link href="https://github.com/advisories/GHSA-9856-9gg9-qcmq"/>
        <updated>2023-08-29T18:53:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability in the Geth EVM could cause a node to reject the canonical chain. </p>
<h3 id="description">Description</h3>
<p>A memory-corruption bug within the EVM can cause a consensus error, where vulnerable nodes obtain a different <code>stateRoot</code> when processing a maliciously crafted transaction. This, in turn, would lead to the chain being split in two forks.</p>
<p>All Geth versions supporting the London hard fork are vulnerable (which predates London), so all users should update.</p>
<p>This bug was exploited on Mainnet at block 13107518, leading to a minority chain split. </p>
<h3 id="patches">Patches</h3>
<p>A patch is included in the <code>v1.10.8</code> release.
The exact patch to fix the issue is contained within this <a href="https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f">commit</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds exist, save to update and/or apply the patch commit. </p>
<h3 id="references">References.</h3>
<p>Post-mortem <a href="https://github.com/ethereum/go-ethereum/blob/master/docs/postmortems/2021-08-22-split-postmortem.md">write-up</a>.</p>
<h3 id="credits">Credits</h3>
<p>The bug was found by @guidovranken (working for <a href="https://sentnl.io/">Sentnl</a> during an audit of the <a href="https://www.telos.net/evm">Telos EVM</a>) and reported via <a href="mailto:bounty@ethereum.org">bounty@ethereum.org</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum/">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-9856-9gg9-qcmq">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-9856-9gg9-qcmq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-39137">https://nvd.nist.gov/vuln/detail/CVE-2021-39137</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.10.8">https://github.com/ethereum/go-ethereum/releases/tag/v1.10.8</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f">https://github.com/ethereum/go-ethereum/pull/23381/commits/4d4879cafd1b3c906fc184a8c4a357137465128f</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0254">https://pkg.go.dev/vuln/GO-2022-0254</a></li>
<li><a href="https://github.com/advisories/GHSA-9856-9gg9-qcmq">https://github.com/advisories/GHSA-9856-9gg9-qcmq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9856-9gg9-qcmq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-30T16:15:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v3] Podman publishes a malicious image to public registries]]></title>
        <id>https://github.com/advisories/GHSA-66vw-v2x9-hw75</id>
        <link href="https://github.com/advisories/GHSA-66vw-v2x9-hw75"/>
        <updated>2023-08-29T18:51:21.000Z</updated>
        <content type="html"><![CDATA[<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1227">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>
<li><a href="https://github.com/containers/podman/issues/10941">https://github.com/containers/podman/issues/10941</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2070368">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>
<li><a href="https://github.com/containers/psgo/pull/92">https://github.com/containers/psgo/pull/92</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0558">https://pkg.go.dev/vuln/GO-2022-0558</a></li>
<li><a href="https://github.com/containers/podman/pull/13862">https://github.com/containers/podman/pull/13862</a></li>
<li><a href="https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>
<li><a href="https://github.com/advisories/GHSA-66vw-v2x9-hw75">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66vw-v2x9-hw75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-30T00:00:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/psgo/internal/proc] Podman publishes a malicious image to public registries]]></title>
        <id>https://github.com/advisories/GHSA-66vw-v2x9-hw75</id>
        <link href="https://github.com/advisories/GHSA-66vw-v2x9-hw75"/>
        <updated>2023-08-29T18:51:21.000Z</updated>
        <content type="html"><![CDATA[<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1227">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>
<li><a href="https://github.com/containers/podman/issues/10941">https://github.com/containers/podman/issues/10941</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2070368">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>
<li><a href="https://github.com/containers/psgo/pull/92">https://github.com/containers/psgo/pull/92</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0558">https://pkg.go.dev/vuln/GO-2022-0558</a></li>
<li><a href="https://github.com/containers/podman/pull/13862">https://github.com/containers/podman/pull/13862</a></li>
<li><a href="https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>
<li><a href="https://github.com/advisories/GHSA-66vw-v2x9-hw75">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66vw-v2x9-hw75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-30T00:00:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/psgo] Podman publishes a malicious image to public registries]]></title>
        <id>https://github.com/advisories/GHSA-66vw-v2x9-hw75</id>
        <link href="https://github.com/advisories/GHSA-66vw-v2x9-hw75"/>
        <updated>2023-08-29T18:51:21.000Z</updated>
        <content type="html"><![CDATA[<p>Podman is a tool for managing OCI containers and pods. A privilege escalation flaw was found in Podman. This flaw allows an attacker to publish a malicious image to a public registry. Once this image is downloaded by a potential victim, the vulnerability is triggered after a user runs the 'podman top' command. This action gives the attacker access to the host filesystem, leading to information disclosure or denial of service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-1227">https://nvd.nist.gov/vuln/detail/CVE-2022-1227</a></li>
<li><a href="https://github.com/containers/podman/issues/10941">https://github.com/containers/podman/issues/10941</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2070368">https://bugzilla.redhat.com/show_bug.cgi?id=2070368</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/DLUJZV3HBP56ADXU6QH2V7RNYUPMVBXQ/</a></li>
<li><a href="https://github.com/containers/psgo/pull/92">https://github.com/containers/psgo/pull/92</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0558">https://pkg.go.dev/vuln/GO-2022-0558</a></li>
<li><a href="https://github.com/containers/podman/pull/13862">https://github.com/containers/podman/pull/13862</a></li>
<li><a href="https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09">https://github.com/containers/podman/pull/13862/commits/79a3e149c10f74db4cebff624287385c90179d09</a></li>
<li><a href="https://github.com/advisories/GHSA-66vw-v2x9-hw75">https://github.com/advisories/GHSA-66vw-v2x9-hw75</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-66vw-v2x9-hw75</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-04-30T00:00:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/image] containers/image library Insufficiently Protects Credentials]]></title>
        <id>https://github.com/advisories/GHSA-85p9-j7c9-v4gr</id>
        <link href="https://github.com/advisories/GHSA-85p9-j7c9-v4gr"/>
        <updated>2023-08-29T18:49:36.000Z</updated>
        <content type="html"><![CDATA[<p>The containers/image library used by the container tools Podman, Buildah, and Skopeo in Red Hat Enterprise Linux version 8 and CRI-O in OpenShift Container Platform, does not enforce TLS connections to the container registry authorization service. An attacker could use this vulnerability to launch a MiTM attack and steal login credentials or bearer tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10214">https://nvd.nist.gov/vuln/detail/CVE-2019-10214</a></li>
<li><a href="https://github.com/containers/image/pull/655">https://github.com/containers/image/pull/655</a></li>
<li><a href="https://github.com/containers/image/pull/669">https://github.com/containers/image/pull/669</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1732508">https://bugzilla.redhat.com/show_bug.cgi?id=1732508</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html</a></li>
<li><a href="https://github.com/containers/image/issues/654">https://github.com/containers/image/issues/654</a></li>
<li><a href="https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf">https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0081">https://pkg.go.dev/vuln/GO-2021-0081</a></li>
<li><a href="https://github.com/advisories/GHSA-85p9-j7c9-v4gr">https://github.com/advisories/GHSA-85p9-j7c9-v4gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85p9-j7c9-v4gr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dgrijalva/jwt-go/v4] Authorization bypass in github.com/dgrijalva/jwt-go]]></title>
        <id>https://github.com/advisories/GHSA-w73w-5m7g-f7qc</id>
        <link href="https://github.com/advisories/GHSA-w73w-5m7g-f7qc"/>
        <updated>2023-08-29T18:46:19.000Z</updated>
        <content type="html"><![CDATA[<p>jwt-go allows attackers to bypass intended access restrictions in situations with <code>[]string{}</code> for <code>m["aud"]</code> (which is allowed by the specification). Because the type assertion fails, "" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to <a href="https://github.com/golang-jwt/jwt">golang-jwt</a> at version 3.2.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26160">https://nvd.nist.gov/vuln/detail/CVE-2020-26160</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/issues/422">https://github.com/dgrijalva/jwt-go/issues/422</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/pull/426">https://github.com/dgrijalva/jwt-go/pull/426</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/issues/462">https://github.com/dgrijalva/jwt-go/issues/462</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab">https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0017">https://pkg.go.dev/vuln/GO-2020-0017</a></li>
<li><a href="https://github.com/advisories/GHSA-w73w-5m7g-f7qc">https://github.com/advisories/GHSA-w73w-5m7g-f7qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w73w-5m7g-f7qc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T21:08:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dgrijalva/jwt-go] Authorization bypass in github.com/dgrijalva/jwt-go]]></title>
        <id>https://github.com/advisories/GHSA-w73w-5m7g-f7qc</id>
        <link href="https://github.com/advisories/GHSA-w73w-5m7g-f7qc"/>
        <updated>2023-08-29T18:46:19.000Z</updated>
        <content type="html"><![CDATA[<p>jwt-go allows attackers to bypass intended access restrictions in situations with <code>[]string{}</code> for <code>m["aud"]</code> (which is allowed by the specification). Because the type assertion fails, "" is the value of aud. This is a security problem if the JWT token is presented to a service that lacks its own audience check. There is no patch available and users of jwt-go are advised to migrate to <a href="https://github.com/golang-jwt/jwt">golang-jwt</a> at version 3.2.1</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26160">https://nvd.nist.gov/vuln/detail/CVE-2020-26160</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/issues/422">https://github.com/dgrijalva/jwt-go/issues/422</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/pull/426">https://github.com/dgrijalva/jwt-go/pull/426</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/issues/462">https://github.com/dgrijalva/jwt-go/issues/462</a></li>
<li><a href="https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab">https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0017">https://pkg.go.dev/vuln/GO-2020-0017</a></li>
<li><a href="https://github.com/advisories/GHSA-w73w-5m7g-f7qc">https://github.com/advisories/GHSA-w73w-5m7g-f7qc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w73w-5m7g-f7qc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T21:08:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-08-29T18:32:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-08-29T18:32:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-08-29T18:32:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Buildah processes using chroot isolation may leak environment values to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-08-29T18:32:54.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containrrr/shoutrrr] Shoutrrr util package DoS via sending 2000, 4000, or 6000 character messages]]></title>
        <id>https://github.com/advisories/GHSA-477v-w82m-634j</id>
        <link href="https://github.com/advisories/GHSA-477v-w82m-634j"/>
        <updated>2023-08-29T17:58:26.000Z</updated>
        <content type="html"><![CDATA[<p>The package <code>github.com/containrrr/shoutrrr/pkg/util</code> before 0.6.0 are vulnerable to Denial of Service (DoS) via the <code>util.PartitionMessage</code> function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25891">https://nvd.nist.gov/vuln/detail/CVE-2022-25891</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/issues/240">https://github.com/containrrr/shoutrrr/issues/240</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/pull/242">https://github.com/containrrr/shoutrrr/pull/242</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42">https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0">https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0528">https://pkg.go.dev/vuln/GO-2022-0528</a></li>
<li><a href="https://github.com/advisories/GHSA-477v-w82m-634j">https://github.com/advisories/GHSA-477v-w82m-634j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-477v-w82m-634j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-16T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/beego/beego] Access control bypass in beego]]></title>
        <id>https://github.com/advisories/GHSA-qx32-f6g6-fcfr</id>
        <link href="https://github.com/advisories/GHSA-qx32-f6g6-fcfr"/>
        <updated>2023-08-29T17:55:22.000Z</updated>
        <content type="html"><![CDATA[<p>The route lookup process in beego prior to 1.12.9 and 2.x prior to 2.0.3 allows attackers to bypass access control. When a /<code>p1</code>/<code>p2</code>/<code>:name</code> route is configured, attackers can access it by appending .xml in various places (e.g., p1.xml instead of p1).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31259">https://nvd.nist.gov/vuln/detail/CVE-2022-31259</a></li>
<li><a href="https://github.com/beego/beego/issues/4946">https://github.com/beego/beego/issues/4946</a></li>
<li><a href="https://github.com/beego/beego/tree/v2.0.2">https://github.com/beego/beego/tree/v2.0.2</a></li>
<li><a href="https://github.com/beego/beego/pull/4958">https://github.com/beego/beego/pull/4958</a></li>
<li><a href="https://github.com/beego/beego/pull/4954">https://github.com/beego/beego/pull/4954</a></li>
<li><a href="https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009">https://github.com/beego/beego/commit/228576173a236c81a2122923fcf8099ad294e009</a></li>
<li><a href="https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd">https://github.com/beego/beego/commit/64cf44d725c8cc35d782327d333df9cbeb1bf2dd</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0463">https://pkg.go.dev/vuln/GO-2022-0463</a></li>
<li><a href="https://github.com/advisories/GHSA-qx32-f6g6-fcfr">https://github.com/advisories/GHSA-qx32-f6g6-fcfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qx32-f6g6-fcfr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-22T00:00:32.000Z</published>
    </entry>
</feed>