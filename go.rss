<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-09-06T10:01:35.696Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/minio/minio] Privilege Escalation on Linux/MacOS]]></title>
        <id>https://github.com/advisories/GHSA-2pxw-r47w-4p8c</id>
        <link href="https://github.com/advisories/GHSA-2pxw-r47w-4p8c"/>
        <updated>2023-09-05T15:45:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing <code>PostPolicyBucket</code>. To carry out this attack, the attacker requires credentials with <code>arn:aws:s3:::*</code> permission, as well as enabled Console API access.</p>
<h3 id="patches">Patches</h3>
<pre><code>commit 67f4ba154a27a1b06e48bfabda38355a010dfca5
Author: Aditya Manthramurthy &lt;donatello@users.noreply.github.com&gt;
Date:   Sun Mar 19 21:15:20 2023 -0700

    fix: post policy request security bypass (#16849)
</code></pre>
<h3 id="workarounds">Workarounds</h3>
<p>Browser API access must be enabled turning off <code>MINIO_BROWSER=off</code> allows for this workaround.</p>
<h3 id="references">References</h3>
<p>The vulnerable code:</p>
<pre><code class="language-go">// minio/cmd/generic-handlers.go
func setRequestValidityHandler(h http.Handler) http.Handler {
  return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    // ...
    // For all other requests reject access to reserved buckets
    bucketName, _ := request2BucketObjectName(r)
    if isMinioReservedBucket(bucketName) || isMinioMetaBucket(bucketName) {
      if !guessIsRPCReq(r) &amp;&amp; !guessIsBrowserReq(r) &amp;&amp; !guessIsHealthCheckReq(r) &amp;&amp; !guessIsMetricsReq(r) &amp;&amp; !isAdminReq(r) &amp;&amp; !isKMSReq(r) {
        if ok {
          tc.FuncName = "handler.ValidRequest"
          tc.ResponseRecorder.LogErrBody = true
        }
        writeErrorResponse(r.Context(), w, errorCodes.ToAPIErr(ErrAllAccessDisabled), r.URL)
        return
      }
    }
    // ...
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c">https://github.com/minio/minio/security/advisories/GHSA-2pxw-r47w-4p8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28434">https://nvd.nist.gov/vuln/detail/CVE-2023-28434</a></li>
<li><a href="https://github.com/minio/minio/pull/16849">https://github.com/minio/minio/pull/16849</a></li>
<li><a href="https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5">https://github.com/minio/minio/commit/67f4ba154a27a1b06e48bfabda38355a010dfca5</a></li>
<li><a href="https://github.com/advisories/GHSA-2pxw-r47w-4p8c">https://github.com/advisories/GHSA-2pxw-r47w-4p8c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2pxw-r47w-4p8c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-05T15:45:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] usememos/memos vulnerable to improper input validation]]></title>
        <id>https://github.com/advisories/GHSA-96gq-6ch5-mm54</id>
        <link href="https://github.com/advisories/GHSA-96gq-6ch5-mm54"/>
        <updated>2023-09-01T21:49:31.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Input Validation in GitHub repository usememos/memos prior to 0.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4698">https://nvd.nist.gov/vuln/detail/CVE-2023-4698</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/e1107d79-1d63-4238-90b7-5cc150512654">https://huntr.dev/bounties/e1107d79-1d63-4238-90b7-5cc150512654</a></li>
<li><a href="https://github.com/advisories/GHSA-96gq-6ch5-mm54">https://github.com/advisories/GHSA-96gq-6ch5-mm54</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-96gq-6ch5-mm54</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] usememos/memos vulnerable to privilege escalation]]></title>
        <id>https://github.com/advisories/GHSA-5j6p-59cj-j6cp</id>
        <link href="https://github.com/advisories/GHSA-5j6p-59cj-j6cp"/>
        <updated>2023-09-01T21:49:31.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Privilege Management in GitHub repository usememos/memos prior to 0.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4697">https://nvd.nist.gov/vuln/detail/CVE-2023-4697</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/3ff3325a-1dcb-4da7-894d-81a9cf726d81">https://huntr.dev/bounties/3ff3325a-1dcb-4da7-894d-81a9cf726d81</a></li>
<li><a href="https://github.com/advisories/GHSA-5j6p-59cj-j6cp">https://github.com/advisories/GHSA-5j6p-59cj-j6cp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5j6p-59cj-j6cp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] Account TakeOver Due to Improper Handling of JWT Tokens in usememos/memos]]></title>
        <id>https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</id>
        <link href="https://github.com/advisories/GHSA-j2gj-g3p9-7mrr"/>
        <updated>2023-09-01T21:43:05.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Access Control in GitHub repository usememos/memos prior to 0.13.2. As of commit <code>c9aa2eeb9</code> access tokens which fail validation are rejected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-4696">https://nvd.nist.gov/vuln/detail/CVE-2023-4696</a></li>
<li><a href="https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd">https://github.com/usememos/memos/commit/c9aa2eeb9852047e4f41915eb30726bd25f07ecd</a></li>
<li><a href="https://huntr.dev/bounties/4747a485-77c3-4bb5-aab0-21253ef303ca">https://huntr.dev/bounties/4747a485-77c3-4bb5-aab0-21253ef303ca</a></li>
<li><a href="https://github.com/advisories/GHSA-j2gj-g3p9-7mrr">https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2gj-g3p9-7mrr</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-01T03:30:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bnb-chain/tss-lib] tss-lib leaks secret keys in response to incorrectly constructed Paillier moduli]]></title>
        <id>https://github.com/advisories/GHSA-h24c-6p6p-m3vx</id>
        <link href="https://github.com/advisories/GHSA-h24c-6p6p-m3vx"/>
        <updated>2023-09-01T20:51:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The specification of the GG18 threshold ECDSA signature protocol contains a vulnerability allowing an attacker to recover the shared secret key. If a participant generates a Paillier modulus <code>N</code> containing small factors (less than <code>2^100</code>) they can interact with other participants in the signing protocol to steal their secret key shares in as little as sixteen signing attempts. The master key can then be reconstructed from these shares.</p>
<h3 id="patches">Patches</h3>
<p>The implementation of GG18 in tss-lib did not prove that <code>N</code> is biprime or that it doesn't contain small factors. The fixed implementation adds the following proofs from the CGGMP21 threshold ECDSA protocol to the key generation:</p>
<ul>
<li>Paillier-Blum Modulus (<code>N</code> is the product of two primes)</li>
<li>No Small Factor (both factors of <code>N</code> are greater than <code>2^256</code>)</li>
</ul>
<p>These proofs apply to both the Paillier encryption modulus <code>N</code>, and the modulus <code>NTilde</code> used in MTA proofs.</p>
<p>To address the issue in the resharing protocol, an additional round has been added to the end so that participants can confirm that they received valid proofs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://eprint.iacr.org/2019/114">GG18</a></li>
<li><a href="https://eprint.iacr.org/2021/060">CGGMP21</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/threshold-network/tss-lib/security/advisories/GHSA-h24c-6p6p-m3vx">https://github.com/threshold-network/tss-lib/security/advisories/GHSA-h24c-6p6p-m3vx</a></li>
<li><a href="https://github.com/threshold-network/tss-lib/commit/2e712689cfbeefede15f95a0ec7112227d86f702">https://github.com/threshold-network/tss-lib/commit/2e712689cfbeefede15f95a0ec7112227d86f702</a></li>
<li><a href="https://eprint.iacr.org/2019/114">https://eprint.iacr.org/2019/114</a></li>
<li><a href="https://eprint.iacr.org/2021/060">https://eprint.iacr.org/2021/060</a></li>
<li><a href="https://github.com/advisories/GHSA-h24c-6p6p-m3vx">https://github.com/advisories/GHSA-h24c-6p6p-m3vx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h24c-6p6p-m3vx</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-01T20:51:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ansible-semaphore/semaphore] Code injection in ansible semaphore]]></title>
        <id>https://github.com/advisories/GHSA-3r32-cp7v-5wq4</id>
        <link href="https://github.com/advisories/GHSA-3r32-cp7v-5wq4"/>
        <updated>2023-08-30T20:43:01.000Z</updated>
        <content type="html"><![CDATA[<p>An issue in ansible semaphore v.2.8.90 allows a remote attacker to execute arbitrary code via a crafted payload to the extra variables parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-39059">https://nvd.nist.gov/vuln/detail/CVE-2023-39059</a></li>
<li><a href="https://gist.github.com/Alevsk/1757da24c5fb8db735d392fd4146ca3a">https://gist.github.com/Alevsk/1757da24c5fb8db735d392fd4146ca3a</a></li>
<li><a href="https://www.alevsk.com/2023/07/a-quick-story-of-security-pitfalls-with-execcommand-in-software-integrations/">https://www.alevsk.com/2023/07/a-quick-story-of-security-pitfalls-with-execcommand-in-software-integrations/</a></li>
<li><a href="https://github.com/advisories/GHSA-3r32-cp7v-5wq4">https://github.com/advisories/GHSA-3r32-cp7v-5wq4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3r32-cp7v-5wq4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-29T00:32:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/goxmldsig] gosaml2 is vulnerable to NULL Pointer Dereference from malformed XML signatures]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2023-08-30T18:52:40.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/russellhaering/goxmldsig/issues/48">https://github.com/russellhaering/goxmldsig/issues/48</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/pull/90">https://github.com/russellhaering/gosaml2/pull/90</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424">https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0">https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference from malformed XML signatures]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2023-08-30T18:52:40.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/russellhaering/goxmldsig/issues/48">https://github.com/russellhaering/goxmldsig/issues/48</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/pull/90">https://github.com/russellhaering/gosaml2/pull/90</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424">https://github.com/russellhaering/gosaml2/commit/66e3b7affd622b8b24ea1e18845f045e46b23424</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0">https://github.com/russellhaering/gosaml2/releases/tag/v0.7.0</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pires/go-proxyproto] github.com/pires/go-proxyproto vulnerable to DoS via Connection descriptor exhaustion]]></title>
        <id>https://github.com/advisories/GHSA-xcf7-q56x-78gh</id>
        <link href="https://github.com/advisories/GHSA-xcf7-q56x-78gh"/>
        <updated>2023-08-30T18:51:54.000Z</updated>
        <content type="html"><![CDATA[<p>The package <code>github.com/pires/go-proxyproto</code> before 0.6.1 is vulnerable to Denial of Service (DoS) via creating connections without the proxy protocol header. While this issue was patched in 0.6.0, the fix introduced additional issues which were subsequently patched in 0.6.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23409">https://nvd.nist.gov/vuln/detail/CVE-2021-23409</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/65">https://github.com/pires/go-proxyproto/issues/65</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74">https://github.com/pires/go-proxyproto/pull/74</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346">https://github.com/pires/go-proxyproto/pull/74/commits/cdc63867da24fc609b727231f682670d0d1cd346</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.0">https://github.com/pires/go-proxyproto/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1316439</a></li>
<li><a href="https://github.com/pires/go-proxyproto/issues/75">https://github.com/pires/go-proxyproto/issues/75</a></li>
<li><a href="https://github.com/pires/go-proxyproto/releases/tag/v0.6.1">https://github.com/pires/go-proxyproto/releases/tag/v0.6.1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0233">https://pkg.go.dev/vuln/GO-2022-0233</a></li>
<li><a href="https://github.com/pires/go-proxyproto/pull/76">https://github.com/pires/go-proxyproto/pull/76</a></li>
<li><a href="https://github.com/pires/go-proxyproto/commit/2e44d7a76a851d66890ab341403253afae5caac2">https://github.com/pires/go-proxyproto/commit/2e44d7a76a851d66890ab341403253afae5caac2</a></li>
<li><a href="https://github.com/advisories/GHSA-xcf7-q56x-78gh">https://github.com/advisories/GHSA-xcf7-q56x-78gh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcf7-q56x-78gh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-07-26T21:23:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mellium.im/sasl] mellium.im/sasl authentication failure due to insufficient nonce randomness]]></title>
        <id>https://github.com/advisories/GHSA-gvfj-fxx3-j323</id>
        <link href="https://github.com/advisories/GHSA-gvfj-fxx3-j323"/>
        <updated>2023-08-30T18:49:57.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Mellium mellium.im/sasl before 0.3.1. When performing SCRAM-based SASL authentication, if the remote end advertises support for channel binding, no random nonce is generated (instead, the nonce is empty). This causes authentication to fail in the best case, but (if paired with a remote end that does not validate the length of the nonce) could lead to insufficient randomness being used during authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-48195">https://nvd.nist.gov/vuln/detail/CVE-2022-48195</a></li>
<li><a href="https://mellium.im/cve/cve-2022-48195/">https://mellium.im/cve/cve-2022-48195/</a></li>
<li><a href="https://codeberg.org/mellium/sasl/commit/e6cbf681b247c4efa1477eaad2cc47a01707b732">https://codeberg.org/mellium/sasl/commit/e6cbf681b247c4efa1477eaad2cc47a01707b732</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1268">https://pkg.go.dev/vuln/GO-2023-1268</a></li>
<li><a href="https://codeberg.org/mellium/sasl/releases/tag/v0.3.1">https://codeberg.org/mellium/sasl/releases/tag/v0.3.1</a></li>
<li><a href="https://github.com/advisories/GHSA-gvfj-fxx3-j323">https://github.com/advisories/GHSA-gvfj-fxx3-j323</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gvfj-fxx3-j323</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-12-31T03:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mellium.im/xmpp] TLS certificate validation error in mellium.im/xmpp]]></title>
        <id>https://github.com/advisories/GHSA-m658-p24x-p74r</id>
        <link href="https://github.com/advisories/GHSA-m658-p24x-p74r"/>
        <updated>2023-08-30T18:47:55.000Z</updated>
        <content type="html"><![CDATA[<p>In Mellium mellium.im/xmpp through 0.21.0, an attacker capable of spoofing DNS TXT records can redirect a WebSocket connection request to a server under their control without causing TLS certificate verification to fail. This occurs because the wrong host name is selected during this verification.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24968">https://nvd.nist.gov/vuln/detail/CVE-2022-24968</a></li>
<li><a href="https://mellium.im/cve/cve-2022-24968/">https://mellium.im/cve/cve-2022-24968/</a></li>
<li><a href="https://mellium.im/xmpp/">https://mellium.im/xmpp/</a></li>
<li><a href="https://github.com/mellium/xmpp/pull/260">https://github.com/mellium/xmpp/pull/260</a></li>
<li><a href="https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac">https://github.com/mellium/xmpp/commit/0d92aa486da69b71f2f4a30e62aa722c711b98ac</a></li>
<li><a href="https://mellium.im/issue/259">https://mellium.im/issue/259</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0370">https://pkg.go.dev/vuln/GO-2022-0370</a></li>
<li><a href="https://github.com/advisories/GHSA-m658-p24x-p74r">https://github.com/advisories/GHSA-m658-p24x-p74r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m658-p24x-p74r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-12T00:00:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm passes repository credentials to alternate domain]]></title>
        <id>https://github.com/advisories/GHSA-56hp-xqp3-w2jf</id>
        <link href="https://github.com/advisories/GHSA-56hp-xqp3-w2jf"/>
        <updated>2023-08-30T18:45:09.000Z</updated>
        <content type="html"><![CDATA[<p>While working on the Helm source, a Helm core maintainer discovered a situation where the username and password credentials associated with a Helm repository could be passed on to another domain referenced by that Helm repository.</p>
<h3 id="impact">Impact</h3>
<p>The <code>index.yaml</code> within a Helm chart repository contains a reference where to get the chart archive for each version of a chart. The reference can be relative to the <code>index.yaml</code> file or a URL to location. The URL can point to any domain and this is a feature leveraged by Helm users. For example, an <code>index.yaml</code> file can be hosted on GitHub pages while the chart archives are hosted as GitHub releases. These are on different domain names and the <code>index.yaml</code> file points to the other domain.</p>
<p>When a username and password were associated with a Helm repository the username and password were also passed on to other domains referenced in the <code>index.yaml</code> file. This occurred when Helm went to retrieve a specific chart archive on the other domain.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.6.1.</p>
<p>There is a slight behavior change to credential handling with regard to repositories. Usernames and passwords are only passed to the URL location of the Helm repository by default. The username and password are scoped to the scheme, host, and port of the Helm repository. To pass the username and password to other domains Helm may encounter when it goes to retrieve a chart, the new <code>--pass-credentials</code> flag can be used. This flag restores the old behavior for a single repository as an opt-in behavior.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you use a username and password for a Helm repository you can audit the Helm repository in order to check for another domain being used that could have received the credentials. In the <code>index.yaml</code> file for that repository, look for another domain in the <code>urls</code> list for the chart versions. If there is another domain found and that chart version was pulled or installed the credentials would have been passed on.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf">https://github.com/helm/helm/security/advisories/GHSA-56hp-xqp3-w2jf</a></li>
<li><a href="https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f">https://github.com/helm/helm/commit/61d8e8c4a6f95540c15c6a65f36a6dd0a45e7a2f</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0384">https://pkg.go.dev/vuln/GO-2022-0384</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-32690">https://nvd.nist.gov/vuln/detail/CVE-2021-32690</a></li>
<li><a href="https://github.com/advisories/GHSA-56hp-xqp3-w2jf">https://github.com/advisories/GHSA-56hp-xqp3-w2jf</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.6.1">https://github.com/helm/helm/releases/tag/v3.6.1</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-56hp-xqp3-w2jf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-23T18:14:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm Vulnerable to denial of service through string value parsing]]></title>
        <id>https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</id>
        <link href="https://github.com/advisories/GHSA-7hfp-qfw3-5jxh"/>
        <updated>2023-08-30T18:43:11.000Z</updated>
        <content type="html"><![CDATA[<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the <code>_strvals_</code> package that can cause an out of memory panic. Out of memory panics cannot be recovered from. Applications that use functions from the <code>_strvals_</code> package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.</p>
<h3 id="impact">Impact</h3>
<p>The <code>_strvals_</code> package contains a parser that turns strings into Go structures. For example, the Helm client has command line flags like <code>--set</code>, <code>--set-string</code>, and others that enable the user to pass in strings that are merged into the values. The <code>_strvals_</code> package converts these strings into structures Go can work with. Some string inputs can cause array data structures to be created causing an out of memory panic.</p>
<p>Applications that use the <code>_strvals_</code> package in the Helm SDK to parse user supplied input can suffer a Denial of Service when that input causes a panic that cannot be recovered from.</p>
<p>The Helm Client will panic with input to <code>--set</code>, <code>--set-string</code>, and other value setting flags that causes an out of memory panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.9.4. </p>
<h3 id="workarounds">Workarounds</h3>
<p>SDK users can validate strings supplied by users won't create large arrays causing significant memory usage before passing them to the <code>_strvals_</code> functions.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Ada Logics in a fuzzing audit sponsored by CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh">https://github.com/helm/helm/security/advisories/GHSA-7hfp-qfw3-5jxh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36055">https://nvd.nist.gov/vuln/detail/CVE-2022-36055</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.9.4">https://github.com/helm/helm/releases/tag/v3.9.4</a></li>
<li><a href="https://github.com/helm/helm/commit/10466e3e179cc8cad4b0bb451108d3c442c69fbc">https://github.com/helm/helm/commit/10466e3e179cc8cad4b0bb451108d3c442c69fbc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0962">https://pkg.go.dev/vuln/GO-2022-0962</a></li>
<li><a href="https://github.com/advisories/GHSA-7hfp-qfw3-5jxh">https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hfp-qfw3-5jxh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-08-30T20:52:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm vulnerable to denial of service through through repository index file]]></title>
        <id>https://github.com/advisories/GHSA-53c4-hhmh-vw5q</id>
        <link href="https://github.com/advisories/GHSA-53c4-hhmh-vw5q"/>
        <updated>2023-08-30T18:40:47.000Z</updated>
        <content type="html"><![CDATA[<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the <em>repo</em> package that can cause a segmentation violation. Applications that use functions from the <em>repo</em> package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.</p>
<h3 id="impact">Impact</h3>
<p>The <em>repo</em> package contains a handler that processes the index file of a repository. For example, the Helm client adds references to chart repositories where charts are managed. The <em>repo</em> package parses the index file of the repository and loads it into structures Go can work with. Some index files can cause array data structures to be created causing a memory violation.</p>
<p>Applications that use the <em>repo</em> package in the Helm SDK to parse an index file can suffer a Denial of Service when that input causes a panic that cannot be recovered from.</p>
<p>The Helm Client will panic with an index file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.10.3. </p>
<h3 id="workarounds">Workarounds</h3>
<p>SDK users can validate index files that are correctly formatted before passing them to the <em>repo</em> functions.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Ada Logics in a fuzzing audit sponsored by CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-53c4-hhmh-vw5q">https://github.com/helm/helm/security/advisories/GHSA-53c4-hhmh-vw5q</a></li>
<li><a href="https://github.com/helm/helm/commit/638ebffbc2e445156f3978f02fd83d9af1e56f5b">https://github.com/helm/helm/commit/638ebffbc2e445156f3978f02fd83d9af1e56f5b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23525">https://nvd.nist.gov/vuln/detail/CVE-2022-23525</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1165">https://pkg.go.dev/vuln/GO-2022-1165</a></li>
<li><a href="https://github.com/advisories/GHSA-53c4-hhmh-vw5q">https://github.com/advisories/GHSA-53c4-hhmh-vw5q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-53c4-hhmh-vw5q</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-14T21:38:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Helm vulnerable to denial of service through schema file]]></title>
        <id>https://github.com/advisories/GHSA-67fx-wx78-jx33</id>
        <link href="https://github.com/advisories/GHSA-67fx-wx78-jx33"/>
        <updated>2023-08-30T18:38:16.000Z</updated>
        <content type="html"><![CDATA[<p>Fuzz testing, by Ada Logics and sponsored by the CNCF, identified input to functions in the <code>_chartutil_</code> package that can cause a segmentation violation. Applications that use functions from the <code>_chartutil_</code> package in the Helm SDK can have a Denial of Service attack when they use this package and it panics.</p>
<h3 id="impact">Impact</h3>
<p>The <code>_chartutil_</code> package contains a parser that loads a JSON Schema validation file. For example, the Helm client when rendering a chart will validate its values with the schema file. The <code>_chartutil_</code> package parses the schema file and loads it into structures Go can work with. Some schema files can cause array data structures to be created causing a memory violation.</p>
<p>Applications that use the <code>_chartutil_</code> package in the Helm SDK to parse a schema file can suffer a Denial of Service when that input causes a panic that cannot be recovered from.</p>
<p>The Helm Client will panic with a schema file that causes a memory violation panic. Helm is not a long running service so the panic will not affect future uses of the Helm client.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in 3.10.3. </p>
<h3 id="workarounds">Workarounds</h3>
<p>SDK users can validate schema files that are correctly formatted before passing them to the <code>_chartutil_</code> functions.</p>
<h3 id="for-more-information">For more information</h3>
<p>Helm's security policy is spelled out in detail in our <a href="https://github.com/helm/community/blob/master/SECURITY.md">SECURITY</a> document.</p>
<h3 id="credits">Credits</h3>
<p>Disclosed by Ada Logics in a fuzzing audit sponsored by CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-67fx-wx78-jx33">https://github.com/helm/helm/security/advisories/GHSA-67fx-wx78-jx33</a></li>
<li><a href="https://github.com/helm/helm/commit/bafafa8bb1b571b61d7a9528da8d40c307dade3d">https://github.com/helm/helm/commit/bafafa8bb1b571b61d7a9528da8d40c307dade3d</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23526">https://nvd.nist.gov/vuln/detail/CVE-2022-23526</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1166">https://pkg.go.dev/vuln/GO-2022-1166</a></li>
<li><a href="https://github.com/advisories/GHSA-67fx-wx78-jx33">https://github.com/advisories/GHSA-67fx-wx78-jx33</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67fx-wx78-jx33</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-14T21:39:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/apimachinery] Kubernetes apimachinery packages vulnerable to unbounded recursion in JSON or YAML parsing]]></title>
        <id>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</id>
        <link href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp"/>
        <updated>2023-08-30T18:33:05.000Z</updated>
        <content type="html"><![CDATA[<p>CVE-2019-11253 is a denial of service vulnerability in the kube-apiserver, allowing authorized users sending malicious YAML or JSON payloads to cause kube-apiserver to consume excessive CPU or memory, potentially crashing and becoming unavailable. </p>
<p>When creating a ConfigMap object which has recursive references contained in it, excessive CPU usage can occur. This appears to be an instance of a "Billion Laughs" attack which is quite well known as an XML parsing issue.</p>
<p>Applying this manifest to a cluster causes the client to hang for some time with considerable CPU usage.</p>
<pre><code class="language-yaml">apiVersion: v1
data:
  a: &amp;a ["web","web","web","web","web","web","web","web","web"]
  b: &amp;b [*a,*a,*a,*a,*a,*a,*a,*a,*a]
  c: &amp;c [*b,*b,*b,*b,*b,*b,*b,*b,*b]
  d: &amp;d [*c,*c,*c,*c,*c,*c,*c,*c,*c]
  e: &amp;e [*d,*d,*d,*d,*d,*d,*d,*d,*d]
  f: &amp;f [*e,*e,*e,*e,*e,*e,*e,*e,*e]
  g: &amp;g [*f,*f,*f,*f,*f,*f,*f,*f,*f]
  h: &amp;h [*g,*g,*g,*g,*g,*g,*g,*g,*g]
  i: &amp;i [*h,*h,*h,*h,*h,*h,*h,*h,*h]
kind: ConfigMap
metadata:
  name: yaml-bomb
  namespace: default
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11253">https://nvd.nist.gov/vuln/detail/CVE-2019-11253</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/83261">https://github.com/kubernetes/kubernetes/pull/83261</a></li>
<li><a href="https://github.com/advisories/GHSA-pmqp-h87c-mr78">https://github.com/advisories/GHSA-pmqp-h87c-mr78</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0965">https://pkg.go.dev/vuln/GO-2022-0965</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/83253">https://github.com/kubernetes/kubernetes/issues/83253</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs">https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs</a></li>
<li><a href="https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/">https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/</a></li>
<li><a href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp">https://github.com/advisories/GHSA-74fp-r6jw-h4mp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-08T00:35:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/apimachinery/pkg/util/json] Kubernetes apimachinery packages vulnerable to unbounded recursion in JSON or YAML parsing]]></title>
        <id>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</id>
        <link href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp"/>
        <updated>2023-08-30T18:33:05.000Z</updated>
        <content type="html"><![CDATA[<p>CVE-2019-11253 is a denial of service vulnerability in the kube-apiserver, allowing authorized users sending malicious YAML or JSON payloads to cause kube-apiserver to consume excessive CPU or memory, potentially crashing and becoming unavailable. </p>
<p>When creating a ConfigMap object which has recursive references contained in it, excessive CPU usage can occur. This appears to be an instance of a "Billion Laughs" attack which is quite well known as an XML parsing issue.</p>
<p>Applying this manifest to a cluster causes the client to hang for some time with considerable CPU usage.</p>
<pre><code class="language-yaml">apiVersion: v1
data:
  a: &amp;a ["web","web","web","web","web","web","web","web","web"]
  b: &amp;b [*a,*a,*a,*a,*a,*a,*a,*a,*a]
  c: &amp;c [*b,*b,*b,*b,*b,*b,*b,*b,*b]
  d: &amp;d [*c,*c,*c,*c,*c,*c,*c,*c,*c]
  e: &amp;e [*d,*d,*d,*d,*d,*d,*d,*d,*d]
  f: &amp;f [*e,*e,*e,*e,*e,*e,*e,*e,*e]
  g: &amp;g [*f,*f,*f,*f,*f,*f,*f,*f,*f]
  h: &amp;h [*g,*g,*g,*g,*g,*g,*g,*g,*g]
  i: &amp;i [*h,*h,*h,*h,*h,*h,*h,*h,*h]
kind: ConfigMap
metadata:
  name: yaml-bomb
  namespace: default
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11253">https://nvd.nist.gov/vuln/detail/CVE-2019-11253</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/83261">https://github.com/kubernetes/kubernetes/pull/83261</a></li>
<li><a href="https://github.com/advisories/GHSA-pmqp-h87c-mr78">https://github.com/advisories/GHSA-pmqp-h87c-mr78</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0965">https://pkg.go.dev/vuln/GO-2022-0965</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/83253">https://github.com/kubernetes/kubernetes/issues/83253</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs">https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs</a></li>
<li><a href="https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/">https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/</a></li>
<li><a href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp">https://github.com/advisories/GHSA-74fp-r6jw-h4mp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-08T00:35:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/apimachinery/pkg/runtime/serializer/json] Kubernetes apimachinery packages vulnerable to unbounded recursion in JSON or YAML parsing]]></title>
        <id>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</id>
        <link href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp"/>
        <updated>2023-08-30T18:33:05.000Z</updated>
        <content type="html"><![CDATA[<p>CVE-2019-11253 is a denial of service vulnerability in the kube-apiserver, allowing authorized users sending malicious YAML or JSON payloads to cause kube-apiserver to consume excessive CPU or memory, potentially crashing and becoming unavailable. </p>
<p>When creating a ConfigMap object which has recursive references contained in it, excessive CPU usage can occur. This appears to be an instance of a "Billion Laughs" attack which is quite well known as an XML parsing issue.</p>
<p>Applying this manifest to a cluster causes the client to hang for some time with considerable CPU usage.</p>
<pre><code class="language-yaml">apiVersion: v1
data:
  a: &amp;a ["web","web","web","web","web","web","web","web","web"]
  b: &amp;b [*a,*a,*a,*a,*a,*a,*a,*a,*a]
  c: &amp;c [*b,*b,*b,*b,*b,*b,*b,*b,*b]
  d: &amp;d [*c,*c,*c,*c,*c,*c,*c,*c,*c]
  e: &amp;e [*d,*d,*d,*d,*d,*d,*d,*d,*d]
  f: &amp;f [*e,*e,*e,*e,*e,*e,*e,*e,*e]
  g: &amp;g [*f,*f,*f,*f,*f,*f,*f,*f,*f]
  h: &amp;h [*g,*g,*g,*g,*g,*g,*g,*g,*g]
  i: &amp;i [*h,*h,*h,*h,*h,*h,*h,*h,*h]
kind: ConfigMap
metadata:
  name: yaml-bomb
  namespace: default
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11253">https://nvd.nist.gov/vuln/detail/CVE-2019-11253</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/83261">https://github.com/kubernetes/kubernetes/pull/83261</a></li>
<li><a href="https://github.com/advisories/GHSA-pmqp-h87c-mr78">https://github.com/advisories/GHSA-pmqp-h87c-mr78</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0965">https://pkg.go.dev/vuln/GO-2022-0965</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/83253">https://github.com/kubernetes/kubernetes/issues/83253</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs">https://groups.google.com/g/kubernetes-security-announce/c/jk8polzSUxs</a></li>
<li><a href="https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/">https://stackoverflow.com/questions/58129150/security-yaml-bomb-user-can-restart-kube-api-by-sending-configmap/</a></li>
<li><a href="https://github.com/advisories/GHSA-74fp-r6jw-h4mp">https://github.com/advisories/GHSA-74fp-r6jw-h4mp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74fp-r6jw-h4mp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-08T00:35:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ulikunitz/xz] github.com/ulikunitz/xz fixes readUvarint denial of service]]></title>
        <id>https://github.com/advisories/GHSA-25xm-hr59-7c27</id>
        <link href="https://github.com/advisories/GHSA-25xm-hr59-7c27"/>
        <updated>2023-08-30T18:17:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input.</p>
<h3 id="patches">Patches</h3>
<p>The problem has been fixed in release v0.5.8.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Limit the size of the compressed file input to a reasonable size for your use case.</p>
<h3 id="references">References</h3>
<p>The standard library had recently the same issue and got the <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16845">CVE-2020-16845</a> allocated.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ulikunitz/xz/issues">xz</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27">https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29482">https://nvd.nist.gov/vuln/detail/CVE-2021-29482</a></li>
<li><a href="https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b">https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b</a></li>
<li><a href="https://github.com/ulikunitz/xz/issues/35">https://github.com/ulikunitz/xz/issues/35</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0016">https://pkg.go.dev/vuln/GO-2020-0016</a></li>
<li><a href="https://github.com/advisories/GHSA-25xm-hr59-7c27">https://github.com/advisories/GHSA-25xm-hr59-7c27</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-25xm-hr59-7c27</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-25T18:39:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/runatlantis/atlantis] Atlantis Events vulnerable to Timing Attack]]></title>
        <id>https://github.com/advisories/GHSA-jxqv-jcvh-7gr4</id>
        <link href="https://github.com/advisories/GHSA-jxqv-jcvh-7gr4"/>
        <updated>2023-08-30T18:11:47.000Z</updated>
        <content type="html"><![CDATA[<p>The package github.com/runatlantis/atlantis/server/controllers/events before 0.19.7 is vulnerable to Timing Attack in the webhook event validator code, which does not use a constant-time comparison function to validate the webhook secret. It can allow an attacker to recover this secret as an attacker and then forge webhook events.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24912">https://nvd.nist.gov/vuln/detail/CVE-2022-24912</a></li>
<li><a href="https://github.com/runatlantis/atlantis/issues/2391">https://github.com/runatlantis/atlantis/issues/2391</a></li>
<li><a href="https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820">https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUNATLANTISATLANTISSERVERCONTROLLERSEVENTS-2950851">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUNATLANTISATLANTISSERVERCONTROLLERSEVENTS-2950851</a></li>
<li><a href="https://github.com/runatlantis/atlantis/pull/2392">https://github.com/runatlantis/atlantis/pull/2392</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0534">https://pkg.go.dev/vuln/GO-2022-0534</a></li>
<li><a href="https://github.com/advisories/GHSA-jxqv-jcvh-7gr4">https://github.com/advisories/GHSA-jxqv-jcvh-7gr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jxqv-jcvh-7gr4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-30T00:00:41.000Z</published>
    </entry>
</feed>