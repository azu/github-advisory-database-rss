<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-12-07T10:01:18.561Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[teler.app] teler dashboard vulnerable to DOM-based cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-xr7p-8q82-878q</id>
        <link href="https://github.com/advisories/GHSA-xr7p-8q82-878q"/>
        <updated>2022-12-06T18:49:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>teler prior to version &lt;= 2.0.0-rc.4 is vulnerable to DOM-based cross-site scripting (XSS) in the teler dashboard. When teler requests messages from the event stream on the <code>/events</code> endpoint, the log data displayed on the dashboard are not sanitized.</p>
<h3 id="impact">Impact</h3>
<p>This only affects authenticated users and can only be exploited based on detected threats if the log contains a DOM scripting payload. This indicates a low severity and there is no significant impact on the users.</p>
<h3 id="affected-version">Affected Version</h3>
<p>This issue was introduced from version <code>v2.0.0-rc</code> to <code>v2.0.0-rc.3</code> &amp; <code>v2.0.0-dev</code>.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been fixed on version <code>v2.0.0-rc.4</code> &amp; <code>v2.0.0-dev.2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Here are some workarounds to handle this case:</p>
<ul>
<li>Deactivate the live event dashboard from the configuration file, or</li>
<li>Upgrade teler version to <code>v2.0.0-rc.4</code> or <code>v2.0.0-dev.2</code> &amp; above.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e">https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q">https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q</a></li>
<li><a href="https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e">https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23466">https://nvd.nist.gov/vuln/detail/CVE-2022-23466</a></li>
<li><a href="https://github.com/advisories/GHSA-xr7p-8q82-878q">https://github.com/advisories/GHSA-xr7p-8q82-878q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr7p-8q82-878q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-12-06T15:36:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[teler.app] teler dashboard vulnerable to DOM-based cross-site scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-xr7p-8q82-878q</id>
        <link href="https://github.com/advisories/GHSA-xr7p-8q82-878q"/>
        <updated>2022-12-06T18:49:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>teler prior to version &lt;= 2.0.0-rc.4 is vulnerable to DOM-based cross-site scripting (XSS) in the teler dashboard. When teler requests messages from the event stream on the <code>/events</code> endpoint, the log data displayed on the dashboard are not sanitized.</p>
<h3 id="impact">Impact</h3>
<p>This only affects authenticated users and can only be exploited based on detected threats if the log contains a DOM scripting payload. This indicates a low severity and there is no significant impact on the users.</p>
<h3 id="affected-version">Affected Version</h3>
<p>This issue was introduced from version <code>v2.0.0-rc</code> to <code>v2.0.0-rc.3</code> &amp; <code>v2.0.0-dev</code>.</p>
<h3 id="patches">Patches</h3>
<p>This vulnerability has been fixed on version <code>v2.0.0-rc.4</code> &amp; <code>v2.0.0-dev.2</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Here are some workarounds to handle this case:</p>
<ul>
<li>Deactivate the live event dashboard from the configuration file, or</li>
<li>Upgrade teler version to <code>v2.0.0-rc.4</code> or <code>v2.0.0-dev.2</code> &amp; above.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e">https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q">https://github.com/kitabisa/teler/security/advisories/GHSA-xr7p-8q82-878q</a></li>
<li><a href="https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e">https://github.com/kitabisa/teler/commit/20f59eda2420ac64e29f199a61230a0abc875e8e</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23466">https://nvd.nist.gov/vuln/detail/CVE-2022-23466</a></li>
<li><a href="https://github.com/advisories/GHSA-xr7p-8q82-878q">https://github.com/advisories/GHSA-xr7p-8q82-878q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xr7p-8q82-878q</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-12-06T15:36:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/clastix/capsule] Capsule vulnerable to privilege escalation by ServiceAccount deployed in a Tenant Namespace]]></title>
        <id>https://github.com/advisories/GHSA-x45c-cvp8-q4fm</id>
        <link href="https://github.com/advisories/GHSA-x45c-cvp8-q4fm"/>
        <updated>2022-12-06T16:20:41.000Z</updated>
        <content type="html"><![CDATA[<p>Capsule implements a multi-tenant and policy-based environment in a Kubernetes cluster. A ServiceAccount deployed in a Tenant Namespace, when granted with <code>PATCH</code> capabilities on its own Namespace, is able to edit it and remove the Owner Reference, breaking the reconciliation of the Capsule Operator and removing all the enforcement like Pod Security annotations, Network Policies, Limit Range and Resource Quota items.</p>
<p>With that said, an attacker could detach the Namespace from a Tenant that is forbidding starting privileged Pods using the Pod Security labels by removing the OwnerReference, removing the enforcement labels, and being able to start privileged containers that would be able to start a generic Kubernetes privilege escalation.</p>
<h3 id="patches">Patches</h3>
<p>Patches have been released for version 0.1.3 and all users must upgrade to this release.</p>
<h3 id="workarounds">Workarounds</h3>
<p>N.A.</p>
<h3 id="references">References</h3>
<p>N.A.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/clastix/capsule">github.com/clastix/capsule</a></li>
<li>Reach out on <a href="https://kubernetes.slack.com/archives/C03GETTJQRL">#capsule</a> channel available on Kubernetes Slack workspace</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/clastix/capsule/security/advisories/GHSA-x45c-cvp8-q4fm">https://github.com/clastix/capsule/security/advisories/GHSA-x45c-cvp8-q4fm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46167">https://nvd.nist.gov/vuln/detail/CVE-2022-46167</a></li>
<li><a href="https://github.com/clastix/capsule/commit/1df430e71be8c4778c82eca3459978ad7d0b4b7b">https://github.com/clastix/capsule/commit/1df430e71be8c4778c82eca3459978ad7d0b4b7b</a></li>
<li><a href="https://github.com/clastix/capsule/commit/75525ac19254b0c5111e34d7985e2be7bc8b1ac1">https://github.com/clastix/capsule/commit/75525ac19254b0c5111e34d7985e2be7bc8b1ac1</a></li>
<li><a href="https://github.com/clastix/capsule/releases/tag/v0.1.3">https://github.com/clastix/capsule/releases/tag/v0.1.3</a></li>
<li><a href="https://github.com/advisories/GHSA-x45c-cvp8-q4fm">https://github.com/advisories/GHSA-x45c-cvp8-q4fm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x45c-cvp8-q4fm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T23:08:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/prometheus/v2] Prometheus vulnerable to basic authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</id>
        <link href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4"/>
        <updated>2022-12-05T22:02:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the <a href="https://github.com/prometheus/exporter-toolkit">exporter toolkit</a> makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>Prometheus 2.37.4 (<a href="https://prometheus.io/docs/introduction/release-cycle/">LTS</a>) and 2.40.4 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4</a></li>
<li><a href="https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93">https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.37.4">https://github.com/prometheus/prometheus/releases/tag/v2.37.4</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.40.4">https://github.com/prometheus/prometheus/releases/tag/v2.40.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/advisories/GHSA-4v48-4q5m-8vx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T22:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/prometheus/v2] Prometheus vulnerable to basic authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</id>
        <link href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4"/>
        <updated>2022-12-05T22:02:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the <a href="https://github.com/prometheus/exporter-toolkit">exporter toolkit</a> makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>Prometheus 2.37.4 (<a href="https://prometheus.io/docs/introduction/release-cycle/">LTS</a>) and 2.40.4 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4</a></li>
<li><a href="https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93">https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.37.4">https://github.com/prometheus/prometheus/releases/tag/v2.37.4</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.40.4">https://github.com/prometheus/prometheus/releases/tag/v2.40.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/advisories/GHSA-4v48-4q5m-8vx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T22:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/prometheus] Prometheus vulnerable to basic authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</id>
        <link href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4"/>
        <updated>2022-12-05T22:02:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the <a href="https://github.com/prometheus/exporter-toolkit">exporter toolkit</a> makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>Prometheus 2.37.4 (<a href="https://prometheus.io/docs/introduction/release-cycle/">LTS</a>) and 2.40.4 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4</a></li>
<li><a href="https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93">https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.37.4">https://github.com/prometheus/prometheus/releases/tag/v2.37.4</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.40.4">https://github.com/prometheus/prometheus/releases/tag/v2.40.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/advisories/GHSA-4v48-4q5m-8vx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T22:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/prometheus] Prometheus vulnerable to basic authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</id>
        <link href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4"/>
        <updated>2022-12-05T22:02:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the <a href="https://github.com/prometheus/exporter-toolkit">exporter toolkit</a> makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>Prometheus 2.37.4 (<a href="https://prometheus.io/docs/introduction/release-cycle/">LTS</a>) and 2.40.4 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/prometheus/prometheus/security/advisories/GHSA-4v48-4q5m-8vx4</a></li>
<li><a href="https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93">https://github.com/prometheus/prometheus/commit/31a2db3ae9c0f4b486b6895973beabc1d1beac93</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.37.4">https://github.com/prometheus/prometheus/releases/tag/v2.37.4</a></li>
<li><a href="https://github.com/prometheus/prometheus/releases/tag/v2.40.4">https://github.com/prometheus/prometheus/releases/tag/v2.40.4</a></li>
<li><a href="https://github.com/advisories/GHSA-4v48-4q5m-8vx4">https://github.com/advisories/GHSA-4v48-4q5m-8vx4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4v48-4q5m-8vx4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-05T22:01:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/benc-uk/kubeview] KubeView vulnerable to full cluster takeover due to improper authentication]]></title>
        <id>https://github.com/advisories/GHSA-22vc-5pgw-644q</id>
        <link href="https://github.com/advisories/GHSA-22vc-5pgw-644q"/>
        <updated>2022-12-02T22:27:40.000Z</updated>
        <content type="html"><![CDATA[<p>KubeView through 0.1.31 allows attackers to obtain control of a Kubernetes cluster because api/scrape/kube-system does not require authentication, and retrieves certificate files that can be used for authentication as kube-admin. NOTE: the vendor's position is that KubeView was a "fun side project and a learning exercise," and not "very secure."</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-45933">https://nvd.nist.gov/vuln/detail/CVE-2022-45933</a></li>
<li><a href="https://github.com/benc-uk/kubeview/issues/95">https://github.com/benc-uk/kubeview/issues/95</a></li>
<li><a href="https://github.com/advisories/GHSA-22vc-5pgw-644q">https://github.com/advisories/GHSA-22vc-5pgw-644q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-22vc-5pgw-644q</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-27T03:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/exporter-toolkit] Prometheus Exporter-Toolkit is vulnerable to authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</id>
        <link href="https://github.com/advisories/GHSA-7rg2-cxvp-9p7p"/>
        <updated>2022-12-02T22:25:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus and its exporters can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the exporter toolkit makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>The exporter-toolkit v0.7.3 and v0.8.2 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="credit">Credit</h3>
<p>We want to thank Lei Wan reporting this security issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p">https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46146">https://nvd.nist.gov/vuln/detail/CVE-2022-46146</a></li>
<li><a href="https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5">https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/1">http://www.openwall.com/lists/oss-security/2022/11/29/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/2">http://www.openwall.com/lists/oss-security/2022/11/29/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/4">http://www.openwall.com/lists/oss-security/2022/11/29/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7rg2-cxvp-9p7p">https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-02T22:25:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/exporter-toolkit] Prometheus Exporter-Toolkit is vulnerable to authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</id>
        <link href="https://github.com/advisories/GHSA-7rg2-cxvp-9p7p"/>
        <updated>2022-12-02T22:25:46.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Prometheus and its exporters can be secured by a web.yml file that specifies usernames and hashed passwords for basic authentication.</p>
<p>Passwords are hashed with bcrypt, which means that even if you have access to the hash, it is very hard to find the original password back.</p>
<p>However, a flaw in the way this mechanism was implemented in the exporter toolkit makes it possible with people who know the hashed password to authenticate against Prometheus.</p>
<p>A request can be forged by an attacker to poison the internal cache used to cache the computation of hashes and make subsequent requests successful. This cache is used in both happy and unhappy scenarios in order to limit side channel attacks that could tell an attacker if a user is present in the file or not.</p>
<h3 id="patches">Patches</h3>
<p>The exporter-toolkit v0.7.3 and v0.8.2 have been released to address this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround but attacker must have access to the hashed password, stored in disk, to bypass the authentication.</p>
<h3 id="credit">Credit</h3>
<p>We want to thank Lei Wan reporting this security issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p">https://github.com/prometheus/exporter-toolkit/security/advisories/GHSA-7rg2-cxvp-9p7p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-46146">https://nvd.nist.gov/vuln/detail/CVE-2022-46146</a></li>
<li><a href="https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5">https://github.com/prometheus/exporter-toolkit/commit/5b1eab34484ddd353986bce736cd119d863e4ff5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/1">http://www.openwall.com/lists/oss-security/2022/11/29/1</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/2">http://www.openwall.com/lists/oss-security/2022/11/29/2</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/11/29/4">http://www.openwall.com/lists/oss-security/2022/11/29/4</a></li>
<li><a href="https://github.com/advisories/GHSA-7rg2-cxvp-9p7p">https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7rg2-cxvp-9p7p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-02T22:25:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mittwald/kube-httpcache] kube-httpcache is vulnerable to Cross-Site Request Forgery (CSRF)]]></title>
        <id>https://github.com/advisories/GHSA-47xh-qxqv-mgvg</id>
        <link href="https://github.com/advisories/GHSA-47xh-qxqv-mgvg"/>
        <updated>2022-12-02T22:24:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<blockquote>
<p>A request forgery attack can be performed on Varnish Cache servers that have the HTTP/2 protocol turned on. An attacker may introduce characters through the HTTP/2 pseudo-headers that are invalid in the context of an HTTP/1 request line, causing the Varnish server to produce invalid HTTP/1 requests to the backend. This may in turn be used to successfully exploit vulnerabilities in a server behind the Varnish server.
-- <a href="https://varnish-cache.org/security/VSV00011.html#vsv00011">https://varnish-cache.org/security/VSV00011.html#vsv00011</a></p>
</blockquote>
<h3 id="patches">Patches</h3>
<p>This is fixed in Varnish 6.0.11; Varnish 6.0.11 is available in <code>kube-httpcache</code> versions v0.7.1 and later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>See <a href="https://varnish-cache.org/security/VSV00011.html#mitigation">upstream mitigation hints</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://varnish-cache.org/security/VSV00011.html#vsv00011">https://varnish-cache.org/security/VSV00011.html#vsv00011</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mittwald/kube-httpcache/security/advisories/GHSA-47xh-qxqv-mgvg">https://github.com/mittwald/kube-httpcache/security/advisories/GHSA-47xh-qxqv-mgvg</a></li>
<li><a href="https://varnish-cache.org/security/VSV00011.html#vsv00011">https://varnish-cache.org/security/VSV00011.html#vsv00011</a></li>
<li><a href="https://github.com/advisories/GHSA-47xh-qxqv-mgvg">https://github.com/advisories/GHSA-47xh-qxqv-mgvg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-47xh-qxqv-mgvg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-02T22:24:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/owncast/owncast] owncast is vulnerable to SQL Injection]]></title>
        <id>https://github.com/advisories/GHSA-cvh4-cjc9-84qm</id>
        <link href="https://github.com/advisories/GHSA-cvh4-cjc9-84qm"/>
        <updated>2022-12-02T22:20:49.000Z</updated>
        <content type="html"><![CDATA[<p>SQL Injection in GitHub repository owncast/owncast prior to 0.0.13.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3751">https://nvd.nist.gov/vuln/detail/CVE-2022-3751</a></li>
<li><a href="https://github.com/owncast/owncast/commit/23b6e5868d5501726c27a3fabbecf49000968591">https://github.com/owncast/owncast/commit/23b6e5868d5501726c27a3fabbecf49000968591</a></li>
<li><a href="https://huntr.dev/bounties/a04cff99-5d53-45e5-a882-771b0fad62c9">https://huntr.dev/bounties/a04cff99-5d53-45e5-a882-771b0fad62c9</a></li>
<li><a href="https://github.com/owncast/owncast/pull/2257">https://github.com/owncast/owncast/pull/2257</a></li>
<li><a href="https://github.com/advisories/GHSA-cvh4-cjc9-84qm">https://github.com/advisories/GHSA-cvh4-cjc9-84qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cvh4-cjc9-84qm</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-29T21:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/free5gc/free5gc] Free5gc vulnerable to uncontrolled resource consumption]]></title>
        <id>https://github.com/advisories/GHSA-m74x-fxjh-3qh9</id>
        <link href="https://github.com/advisories/GHSA-m74x-fxjh-3qh9"/>
        <updated>2022-11-30T21:22:46.000Z</updated>
        <content type="html"><![CDATA[<p>In Free5gc v3.0.5, the AMF breaks due to malformed NAS messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38871">https://nvd.nist.gov/vuln/detail/CVE-2022-38871</a></li>
<li><a href="https://github.com/free5gc/free5gc/issues/198">https://github.com/free5gc/free5gc/issues/198</a></li>
<li><a href="https://github.com/advisories/GHSA-m74x-fxjh-3qh9">https://github.com/advisories/GHSA-m74x-fxjh-3qh9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m74x-fxjh-3qh9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-19T00:30:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/crewjam/saml] crewjam/saml vulnerable to signature bypass via multiple Assertion elements due to improper authentication]]></title>
        <id>https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</id>
        <link href="https://github.com/advisories/GHSA-j2jp-wvqg-wc2g"/>
        <updated>2022-12-01T22:13:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The crewjam/saml go library is vulnerable to an authentication bypass when processing SAML responses containing multiple Assertion elements.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been corrected in version 0.4.9.</p>
<h3 id="credit">Credit</h3>
<p>This issue was reported by Felix Wilhelm from Google Project Zero.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/crewjam/saml/security/advisories/GHSA-j2jp-wvqg-wc2g">https://github.com/crewjam/saml/security/advisories/GHSA-j2jp-wvqg-wc2g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41912">https://nvd.nist.gov/vuln/detail/CVE-2022-41912</a></li>
<li><a href="https://github.com/crewjam/saml/commit/aee3fb1edeeaf1088fcb458727e0fd863d277f8b">https://github.com/crewjam/saml/commit/aee3fb1edeeaf1088fcb458727e0fd863d277f8b</a></li>
<li><a href="https://github.com/crewjam/saml/releases/tag/v0.4.9">https://github.com/crewjam/saml/releases/tag/v0.4.9</a></li>
<li><a href="https://github.com/advisories/GHSA-j2jp-wvqg-wc2g">https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-29T23:55:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
</feed>