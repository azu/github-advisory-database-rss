<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-03-12T00:16:14.224Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/moby] Path Traversal in Docker]]></title>
        <id>https://github.com/advisories/GHSA-vj3f-3286-r4pf</id>
        <link href="https://github.com/advisories/GHSA-vj3f-3286-r4pf"/>
        <updated>2022-03-11T22:58:23.000Z</updated>
        <content type="html"><![CDATA[<p>Path traversal vulnerability in Docker before 1.3.3 allows remote attackers to write to arbitrary files and bypass a container protection mechanism via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-9356">https://nvd.nist.gov/vuln/detail/CVE-2014-9356</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2014-9356">https://access.redhat.com/security/cve/cve-2014-9356</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1172761">https://bugzilla.redhat.com/show_bug.cgi?id=1172761</a></li>
<li><a href="https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ">https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ</a></li>
<li><a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356">https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356</a></li>
<li><a href="http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded">http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-vj3f-3286-r4pf">https://github.com/advisories/GHSA-vj3f-3286-r4pf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj3f-3286-r4pf</uri>
        </author>
        <published>2021-05-18T21:09:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/docker] Path Traversal in Docker]]></title>
        <id>https://github.com/advisories/GHSA-vj3f-3286-r4pf</id>
        <link href="https://github.com/advisories/GHSA-vj3f-3286-r4pf"/>
        <updated>2022-03-11T22:58:23.000Z</updated>
        <content type="html"><![CDATA[<p>Path traversal vulnerability in Docker before 1.3.3 allows remote attackers to write to arbitrary files and bypass a container protection mechanism via a full pathname in a symlink in an (1) image or (2) build in a Dockerfile.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-9356">https://nvd.nist.gov/vuln/detail/CVE-2014-9356</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2014-9356">https://access.redhat.com/security/cve/cve-2014-9356</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1172761">https://bugzilla.redhat.com/show_bug.cgi?id=1172761</a></li>
<li><a href="https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ">https://groups.google.com/forum/#%21msg/docker-user/nFAz-B-n4Bw/0wr3wvLsnUwJ</a></li>
<li><a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356">https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-9356</a></li>
<li><a href="http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded">http://www.securityfocus.com/archive/1/archive/1/534215/100/0/threaded</a></li>
<li><a href="https://github.com/advisories/GHSA-vj3f-3286-r4pf">https://github.com/advisories/GHSA-vj3f-3286-r4pf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj3f-3286-r4pf</uri>
        </author>
        <published>2021-05-18T21:09:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[code.gitea.io/gitea] Improper Authorization in Gitea]]></title>
        <id>https://github.com/advisories/GHSA-jr9c-h74f-2v28</id>
        <link href="https://github.com/advisories/GHSA-jr9c-h74f-2v28"/>
        <updated>2022-03-11T23:16:31.000Z</updated>
        <content type="html"><![CDATA[<p>Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0905">https://nvd.nist.gov/vuln/detail/CVE-2022-0905</a></li>
<li><a href="https://github.com/go-gitea/gitea/commit/1314f38b59748397b3429fb9bc9f9d6bac85d2f2">https://github.com/go-gitea/gitea/commit/1314f38b59748397b3429fb9bc9f9d6bac85d2f2</a></li>
<li><a href="https://huntr.dev/bounties/8d221f92-b2b1-4878-bc31-66ff272e5ceb">https://huntr.dev/bounties/8d221f92-b2b1-4878-bc31-66ff272e5ceb</a></li>
<li><a href="https://github.com/advisories/GHSA-jr9c-h74f-2v28">https://github.com/advisories/GHSA-jr9c-h74f-2v28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr9c-h74f-2v28</uri>
        </author>
        <published>2022-03-11T00:02:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-streaming-server] Arbitrary file write in nats-server]]></title>
        <id>https://github.com/advisories/GHSA-6h3m-36w8-hv68</id>
        <link href="https://github.com/advisories/GHSA-6h3m-36w8-hv68"/>
        <updated>2022-03-11T23:18:10.000Z</updated>
        <content type="html"><![CDATA[<p>(This document is canonically: <a href="https://advisories.nats.io/CVE/CVE-2022-26652.txt">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a>)</p>
<h2 id="background">Background</h2>
<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>
<p>JetStream is the optional RAFT-based resilient persistent feature of NATS.</p>
<h2 id="problem-description">Problem Description</h2>
<p>The JetStream streams can be backed up and restored via NATS. The backup format is a tar archive file.  Inadequate checks on the filenames within the archive file permit a so-called "Zip Slip" attack in the stream restore.</p>
<p>NATS nats-server through 2022-03-09 (fixed in release 2.7.4) did not correctly sanitize elements of the archive file, thus a user of NATS
could cause the NATS server to write arbitrary content to an attacker-controlled filename.</p>
<h2 id="affected-versions">Affected versions</h2>
<p>NATS Server:</p>
<ul>
<li>2.2.0 up to and including 2.7.3.<ul>
<li>Introduced with JetStream Restore functionality</li>
</ul>
</li>
<li>Fixed with nats-io/nats-server: 2.7.4</li>
<li>Docker image:  nats <a href="https://hub.docker.com/_/nats">https://hub.docker.com/_/nats</a></li>
<li>NB users of OS package files from our releases: a change in goreleaser defaults, discovered late in the release process, moved the install directory from /usr/local/bin to /usr/bin; we are evaluating the correct solution for subsequent releases, but not recutting this release.</li>
</ul>
<p>NATS Streaming Server</p>
<ul>
<li>0.15.0 up to and including 0.24.2</li>
<li>Fixed with nats-io/nats-streaming-server: 0.24.3</li>
<li>Embeds a nats-server, but this server is the old approach which JetStream replaces, so unlikely (but not impossible) to be
configured with JS support</li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<ul>
<li>Disable JetStream for untrusted users.</li>
<li>If only one NATS account uses JetStream, such that cross-user attacks are not an issue, and any user in that account with access to the JetStream API is fully trusted anyway, then appropriate sandboxing techniques will prevent exploit.<ul>
<li>Eg, with systemd, the supplied util/nats-server-hardened.service example configuration demonstrates that NATS runs fine as an unprivileged user under ProtectSystem=strict and PrivateTmp=true restrictions; by only opening a ReadWritePaths hole for the JetStream storage area, the impact of this vulnerability is limited.</li>
</ul>
</li>
</ul>
<h2 id="solution">Solution</h2>
<p>Upgrade the NATS server to at least 2.7.4.</p>
<p>We fully support the util/nats-server-hardened.service configuration for running a NATS server and encourage this approach.</p>
<h2 id="credits">Credits</h2>
<p>This issue was reported (on 2022-03-07) to the NATS Maintainers by
Yiming Xiang, TIANJI LAB of NSFOCUS.<br>Thank you / 谢谢你！</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68">https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68</a></li>
<li><a href="https://github.com/nats-io/nats-server/pull/2917">https://github.com/nats-io/nats-server/pull/2917</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.7.4">https://github.com/nats-io/nats-server/releases/tag/v2.7.4</a></li>
<li><a href="https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3">https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26652">https://nvd.nist.gov/vuln/detail/CVE-2022-26652</a></li>
<li><a href="https://advisories.nats.io/CVE/CVE-2022-26652.txt">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases">https://github.com/nats-io/nats-server/releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/10/1">http://www.openwall.com/lists/oss-security/2022/03/10/1</a></li>
<li><a href="https://github.com/advisories/GHSA-6h3m-36w8-hv68">https://github.com/advisories/GHSA-6h3m-36w8-hv68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h3m-36w8-hv68</uri>
        </author>
        <published>2022-03-10T22:07:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-server/v2] Arbitrary file write in nats-server]]></title>
        <id>https://github.com/advisories/GHSA-6h3m-36w8-hv68</id>
        <link href="https://github.com/advisories/GHSA-6h3m-36w8-hv68"/>
        <updated>2022-03-11T23:18:10.000Z</updated>
        <content type="html"><![CDATA[<p>(This document is canonically: <a href="https://advisories.nats.io/CVE/CVE-2022-26652.txt">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a>)</p>
<h2 id="background">Background</h2>
<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>
<p>JetStream is the optional RAFT-based resilient persistent feature of NATS.</p>
<h2 id="problem-description">Problem Description</h2>
<p>The JetStream streams can be backed up and restored via NATS. The backup format is a tar archive file.  Inadequate checks on the filenames within the archive file permit a so-called "Zip Slip" attack in the stream restore.</p>
<p>NATS nats-server through 2022-03-09 (fixed in release 2.7.4) did not correctly sanitize elements of the archive file, thus a user of NATS
could cause the NATS server to write arbitrary content to an attacker-controlled filename.</p>
<h2 id="affected-versions">Affected versions</h2>
<p>NATS Server:</p>
<ul>
<li>2.2.0 up to and including 2.7.3.<ul>
<li>Introduced with JetStream Restore functionality</li>
</ul>
</li>
<li>Fixed with nats-io/nats-server: 2.7.4</li>
<li>Docker image:  nats <a href="https://hub.docker.com/_/nats">https://hub.docker.com/_/nats</a></li>
<li>NB users of OS package files from our releases: a change in goreleaser defaults, discovered late in the release process, moved the install directory from /usr/local/bin to /usr/bin; we are evaluating the correct solution for subsequent releases, but not recutting this release.</li>
</ul>
<p>NATS Streaming Server</p>
<ul>
<li>0.15.0 up to and including 0.24.2</li>
<li>Fixed with nats-io/nats-streaming-server: 0.24.3</li>
<li>Embeds a nats-server, but this server is the old approach which JetStream replaces, so unlikely (but not impossible) to be
configured with JS support</li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<ul>
<li>Disable JetStream for untrusted users.</li>
<li>If only one NATS account uses JetStream, such that cross-user attacks are not an issue, and any user in that account with access to the JetStream API is fully trusted anyway, then appropriate sandboxing techniques will prevent exploit.<ul>
<li>Eg, with systemd, the supplied util/nats-server-hardened.service example configuration demonstrates that NATS runs fine as an unprivileged user under ProtectSystem=strict and PrivateTmp=true restrictions; by only opening a ReadWritePaths hole for the JetStream storage area, the impact of this vulnerability is limited.</li>
</ul>
</li>
</ul>
<h2 id="solution">Solution</h2>
<p>Upgrade the NATS server to at least 2.7.4.</p>
<p>We fully support the util/nats-server-hardened.service configuration for running a NATS server and encourage this approach.</p>
<h2 id="credits">Credits</h2>
<p>This issue was reported (on 2022-03-07) to the NATS Maintainers by
Yiming Xiang, TIANJI LAB of NSFOCUS.<br>Thank you / 谢谢你！</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68">https://github.com/nats-io/nats-server/security/advisories/GHSA-6h3m-36w8-hv68</a></li>
<li><a href="https://github.com/nats-io/nats-server/pull/2917">https://github.com/nats-io/nats-server/pull/2917</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.7.4">https://github.com/nats-io/nats-server/releases/tag/v2.7.4</a></li>
<li><a href="https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3">https://github.com/nats-io/nats-streaming-server/releases/tag/v0.24.3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-26652">https://nvd.nist.gov/vuln/detail/CVE-2022-26652</a></li>
<li><a href="https://advisories.nats.io/CVE/CVE-2022-26652.txt">https://advisories.nats.io/CVE/CVE-2022-26652.txt</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases">https://github.com/nats-io/nats-server/releases</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2022/03/10/1">http://www.openwall.com/lists/oss-security/2022/03/10/1</a></li>
<li><a href="https://github.com/advisories/GHSA-6h3m-36w8-hv68">https://github.com/advisories/GHSA-6h3m-36w8-hv68</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h3m-36w8-hv68</uri>
        </author>
        <published>2022-03-10T22:07:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/stripe/stripe-cli] Code injection in Stripe CLI on windows]]></title>
        <id>https://github.com/advisories/GHSA-4cx6-fj7j-pjx9</id>
        <link href="https://github.com/advisories/GHSA-4cx6-fj7j-pjx9"/>
        <updated>2022-03-11T23:19:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability in Stripe CLI exists on Windows when certain commands are run in a directory where an attacker has planted files. The commands are <code>stripe login</code>, <code>stripe config -e</code>, <code>stripe community</code>, and <code>stripe open</code>. MacOS and Linux are unaffected.</p>
<p>An attacker who successfully exploits the vulnerability can run arbitrary code in the context of the current user. The update addresses the vulnerability by throwing an error in these situations before the code can run.</p>
<p>There has been no evidence of exploitation of this vulnerability.</p>
<h3 id="recommendation">Recommendation</h3>
<p>Upgrade to Stripe CLI v1.7.13.</p>
<h3 id="acknowledgments">Acknowledgments</h3>
<p>Thanks to <a href="https://hackerone.com/trungpabc">trungpabc</a> for reporting the issue.</p>
<h3 id="for-more-information">For more information</h3>
<p>Email us at <a href="mailto:security@stripe.com">security@stripe.com</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/stripe/stripe-cli/security/advisories/GHSA-4cx6-fj7j-pjx9">https://github.com/stripe/stripe-cli/security/advisories/GHSA-4cx6-fj7j-pjx9</a></li>
<li><a href="https://github.com/stripe/stripe-cli/commit/be38da5c0191adb77f661f769ffff2fbc7ddf6cd">https://github.com/stripe/stripe-cli/commit/be38da5c0191adb77f661f769ffff2fbc7ddf6cd</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24753">https://nvd.nist.gov/vuln/detail/CVE-2022-24753</a></li>
<li><a href="https://github.com/advisories/GHSA-4cx6-fj7j-pjx9">https://github.com/advisories/GHSA-4cx6-fj7j-pjx9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4cx6-fj7j-pjx9</uri>
        </author>
        <published>2022-03-10T18:17:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Denial of Service in Go-Ethereum]]></title>
        <id>https://github.com/advisories/GHSA-pvx3-gm3c-gmpr</id>
        <link href="https://github.com/advisories/GHSA-pvx3-gm3c-gmpr"/>
        <updated>2022-03-11T23:23:29.000Z</updated>
        <content type="html"><![CDATA[<p>A design flaw in Go-Ethereum 1.10.12 and older versions allows an attacker node to send 5120 future transactions with a high gas price in one message, which can purge all of pending transactions in a victim node's memory pool, causing a denial of service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23327">https://nvd.nist.gov/vuln/detail/CVE-2022-23327</a></li>
<li><a href="https://dl.acm.org/doi/pdf/10.1145/3460120.3485369">https://dl.acm.org/doi/pdf/10.1145/3460120.3485369</a></li>
<li><a href="https://tristartom.github.io/docs/ccs21.pdf">https://tristartom.github.io/docs/ccs21.pdf</a></li>
<li><a href="http://ethereum.com">http://ethereum.com</a></li>
<li><a href="http://go-ethereum.com">http://go-ethereum.com</a></li>
<li><a href="https://github.com/advisories/GHSA-pvx3-gm3c-gmpr">https://github.com/advisories/GHSA-pvx3-gm3c-gmpr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pvx3-gm3c-gmpr</uri>
        </author>
        <published>2022-03-05T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Denial of Service in Go-Ethereum]]></title>
        <id>https://github.com/advisories/GHSA-vmf7-hmh6-vv57</id>
        <link href="https://github.com/advisories/GHSA-vmf7-hmh6-vv57"/>
        <updated>2022-03-11T23:23:18.000Z</updated>
        <content type="html"><![CDATA[<p>A design flaw in all versions of Go-Ethereum allows an attacker node to send 5120 pending transactions of a high gas price from one account that all fully spend the full balance of the account to a victim Geth node, which can purge all of pending transactions in a victim node's memory pool and then occupy the memory pool to prevent new transactions from entering the pool, resulting in a denial of service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23328">https://nvd.nist.gov/vuln/detail/CVE-2022-23328</a></li>
<li><a href="https://dl.acm.org/doi/pdf/10.1145/3460120.3485369">https://dl.acm.org/doi/pdf/10.1145/3460120.3485369</a></li>
<li><a href="https://tristartom.github.io/docs/ccs21.pdf">https://tristartom.github.io/docs/ccs21.pdf</a></li>
<li><a href="http://ethereum.com">http://ethereum.com</a></li>
<li><a href="http://go-ethereum.com">http://go-ethereum.com</a></li>
<li><a href="https://github.com/advisories/GHSA-vmf7-hmh6-vv57">https://github.com/advisories/GHSA-vmf7-hmh6-vv57</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vmf7-hmh6-vv57</uri>
        </author>
        <published>2022-03-05T00:00:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/tharsis/evmos] Account compromise in Evmos]]></title>
        <id>https://github.com/advisories/GHSA-5jgq-x857-p8xw</id>
        <link href="https://github.com/advisories/GHSA-5jgq-x857-p8xw"/>
        <updated>2022-03-09T11:30:48.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<h3 id="classification">Classification</h3>
<p>The vulnerability has been classified as <code>critical</code> with a score of <code>9.0</code> (highest). It has the potential to affect and drain unclaimed airdrop funds from Cosmos and Osmosis eligible user addresses.</p>
<h3 id="disclosure">Disclosure</h3>
<p>The attack requires advanced knowledge of the internals of the core and application packages of IBC, IBC relayers, the Cosmos SDK <code>AnteHandler</code>,  and the Evmos <code>x/claims</code> module. The step-by-step attack is described below:</p>
<ol>
<li>An actor creates a malicious chain with a custom <code>AnteHandler</code> that skips signature verification for transactions, specifically IBC <code>MsgTransfer</code>. This allows the attacker to impersonate any account by setting a custom <code>sender</code> address field of the IBC transfer message.</li>
<li>The malicious actor then connects this newly created chain via IBC to Evmos and fills the <code>recipient</code> address from the transfer message with an address they control.</li>
<li>Once the IBC packet containing the Transfer data is relayed to Evmos, it is processed by the claims module IBC middleware. Which migrates the claim records to the recipient address, which is owned by the attacker.</li>
<li>The attacker then performs two airdrop Actions, claiming up to 75% of the total initial claimable amount.</li>
<li>The Actor repeats steps 1., 2., and 3. for every address that has unclaimed funds from the airdrop. This automatically claims 75% of the unclaimable amount.</li>
<li>The malicious actor performs the final Action, claiming 100% of all the user funds.</li>
<li>Then, the attacker transfers the funds to another chain with a DEX (Osmosis, Cosmos Hub) via IBC. </li>
<li>Finally, the attacker withdraws the total amount in fiat through a centralized exchange.</li>
</ol>
<h3 id="users-impacted">Users impacted</h3>
<p>No users have suffered the loss of funds as no malicious chains have been connected to Evmos.</p>
<h2 id="patches">Patches</h2>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>The patch involves defining a list of authorized channels for chains that are connected to Evmos via IBC. This restricts the chains that have the capability of migrating users' claims records as per the specification. By default, the authorized destination channels are <code>"channel-0"</code> (Osmosis) and <code>"channel-3"</code> (Cosmos Hub).</p>
<p>Please upgrade your mainnet node and validator to <a href="https://github.com/tharsis/evmos/releases/tag/v2.0.1"><code>v2.0.1</code></a> <strong>ASAP</strong>.</p>
<h2 id="workarounds">Workarounds</h2>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>No, the fix for the critical vulnerability is state machine breaking. An upgrade procedure must be coordinated with the nodes running the network.</p>
<h2 id="references">References</h2>
<p><em>Are there any links users can visit to find out more?</em></p>
<ul>
<li>Claims module spec: <a href="https://evmos.dev/modules/claims">evmos.dev/modules/claims</a></li>
<li>Cosmos SDK documentation: <a href="https://docs.cosmos.network/">docs.cosmos.network</a></li>
<li>IBC documentation: <a href="https://ibc.cosmos.network/">ibc.cosmos.network</a></li>
</ul>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the Core Team in <a href="https://discord.gg/evmos">Discord</a></li>
<li>Open an issue in <a href="http://github.com/tharsis/evmos/issues">tharsis/evmos</a></li>
<li>Email us at <a href="security@thars.is">security@thars.is</a></li>
</ul>
<p>Thanks to the Core IBC team at Interchain GmbH for the secure disclosure of this vulnerability</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tharsis/evmos/security/advisories/GHSA-5jgq-x857-p8xw">https://github.com/tharsis/evmos/security/advisories/GHSA-5jgq-x857-p8xw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24738">https://nvd.nist.gov/vuln/detail/CVE-2022-24738</a></li>
<li><a href="https://github.com/tharsis/evmos/commit/28870258d4ee9f1b8aeef5eba891681f89348f71">https://github.com/tharsis/evmos/commit/28870258d4ee9f1b8aeef5eba891681f89348f71</a></li>
<li><a href="https://github.com/tharsis/evmos/releases/tag/v2.0.1">https://github.com/tharsis/evmos/releases/tag/v2.0.1</a></li>
<li><a href="https://github.com/advisories/GHSA-5jgq-x857-p8xw">https://github.com/advisories/GHSA-5jgq-x857-p8xw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jgq-x857-p8xw</uri>
        </author>
        <published>2022-03-07T21:45:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/foxcpp/maddy] Use of a Key Past its Expiration Date and Insufficient Session Expiration in Maddy Mail Server]]></title>
        <id>https://github.com/advisories/GHSA-6cp7-g972-w9m9</id>
        <link href="https://github.com/advisories/GHSA-6cp7-g972-w9m9"/>
        <updated>2022-03-10T15:47:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any configuration on any maddy version &lt;0.5.4 using auth.pam is affected.</p>
<p>No password expiry or account expiry checking is done when authenticating using PAM.</p>
<h3 id="patches">Patches</h3>
<p>Patch is available as part of the 0.5.4 release.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If /etc/shadow authentication is used, it is possible to replace auth.pam with auth.shadow which is not affected.</p>
<p>It is possible to blacklist expired accounts via existing filtering mechanisms (e.g. auth_map to invalid accounts in storage.imapsql).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/foxcpp/maddy/blob/3412e59a2c92106e194fa69f2f1017c020037c9c/internal/auth/pam/pam.c">https://github.com/foxcpp/maddy/blob/3412e59a2c92106e194fa69f2f1017c020037c9c/internal/auth/pam/pam.c</a></li>
<li><a href="https://linux.die.net/man/3/pam_acct_mgmt">https://linux.die.net/man/3/pam_acct_mgmt</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/foxcpp/maddy">https://github.com/foxcpp/maddy</a></li>
<li>Email <a href="mailto:fox.cpp@disroot.org">fox.cpp@disroot.org</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/foxcpp/maddy/security/advisories/GHSA-6cp7-g972-w9m9">https://github.com/foxcpp/maddy/security/advisories/GHSA-6cp7-g972-w9m9</a></li>
<li><a href="https://github.com/foxcpp/maddy/commit/7ee6a39c6a1939b376545f030a5efd6f90913583">https://github.com/foxcpp/maddy/commit/7ee6a39c6a1939b376545f030a5efd6f90913583</a></li>
<li><a href="https://github.com/foxcpp/maddy/releases/tag/v0.5.4">https://github.com/foxcpp/maddy/releases/tag/v0.5.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24732">https://nvd.nist.gov/vuln/detail/CVE-2022-24732</a></li>
<li><a href="https://github.com/advisories/GHSA-6cp7-g972-w9m9">https://github.com/advisories/GHSA-6cp7-g972-w9m9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cp7-g972-w9m9</uri>
        </author>
        <published>2022-03-07T16:59:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd CRI plugin: Insecure handling of image volumes]]></title>
        <id>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</id>
        <link href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7"/>
        <updated>2022-03-11T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched through containerd’s CRI implementation with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host.  This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information.  Kubernetes and crictl can both be configured to use containerd’s CRI implementation.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in containerd 1.6.1, 1.5.10 and 1.4.13.  Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank Felix Wilhelm of Google Project Zero for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23648">https://nvd.nist.gov/vuln/detail/CVE-2022-23648</a></li>
<li><a href="https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70">https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.4.13">https://github.com/containerd/containerd/releases/tag/v1.4.13</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.5.10">https://github.com/containerd/containerd/releases/tag/v1.5.10</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.6.1">https://github.com/containerd/containerd/releases/tag/v1.6.1</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5091">https://www.debian.org/security/2022/dsa-5091</a></li>
<li><a href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/advisories/GHSA-crp2-qrr5-8pq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</uri>
        </author>
        <published>2022-03-02T21:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd CRI plugin: Insecure handling of image volumes]]></title>
        <id>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</id>
        <link href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7"/>
        <updated>2022-03-11T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched through containerd’s CRI implementation with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host.  This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information.  Kubernetes and crictl can both be configured to use containerd’s CRI implementation.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in containerd 1.6.1, 1.5.10 and 1.4.13.  Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank Felix Wilhelm of Google Project Zero for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23648">https://nvd.nist.gov/vuln/detail/CVE-2022-23648</a></li>
<li><a href="https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70">https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.4.13">https://github.com/containerd/containerd/releases/tag/v1.4.13</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.5.10">https://github.com/containerd/containerd/releases/tag/v1.5.10</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.6.1">https://github.com/containerd/containerd/releases/tag/v1.6.1</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5091">https://www.debian.org/security/2022/dsa-5091</a></li>
<li><a href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/advisories/GHSA-crp2-qrr5-8pq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</uri>
        </author>
        <published>2022-03-02T21:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd CRI plugin: Insecure handling of image volumes]]></title>
        <id>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</id>
        <link href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7"/>
        <updated>2022-03-11T20:07:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A bug was found in containerd where containers launched through containerd’s CRI implementation with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host.  This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information.  Kubernetes and crictl can both be configured to use containerd’s CRI implementation.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in containerd 1.6.1, 1.5.10 and 1.4.13.  Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure that only trusted images are used.</p>
<h3 id="credits">Credits</h3>
<p>The containerd project would like to thank Felix Wilhelm of Google Project Zero for responsibly disclosing this issue in accordance with the <a href="https://github.com/containerd/project/blob/main/SECURITY.md">containerd security policy</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containerd/containerd/issues/new/choose">containerd</a></li>
<li>Email us at <a href="mailto:security@containerd.io">security@containerd.io</a><h3 id="references">References</h3>
</li>
</ul>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/containerd/containerd/security/advisories/GHSA-crp2-qrr5-8pq7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23648">https://nvd.nist.gov/vuln/detail/CVE-2022-23648</a></li>
<li><a href="https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70">https://github.com/containerd/containerd/commit/10f428dac7cec44c864e1b830a4623af27a9fc70</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.4.13">https://github.com/containerd/containerd/releases/tag/v1.4.13</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.5.10">https://github.com/containerd/containerd/releases/tag/v1.5.10</a></li>
<li><a href="https://github.com/containerd/containerd/releases/tag/v1.6.1">https://github.com/containerd/containerd/releases/tag/v1.6.1</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5091">https://www.debian.org/security/2022/dsa-5091</a></li>
<li><a href="https://github.com/advisories/GHSA-crp2-qrr5-8pq7">https://github.com/advisories/GHSA-crp2-qrr5-8pq7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-crp2-qrr5-8pq7</uri>
        </author>
        <published>2022-03-02T21:33:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/loki] Path traversal in Grafana Loki]]></title>
        <id>https://github.com/advisories/GHSA-grj5-8x6q-hc9q</id>
        <link href="https://github.com/advisories/GHSA-grj5-8x6q-hc9q"/>
        <updated>2022-03-01T22:51:26.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in Grafana Loki through 2.2.1. The header value X-Scope-OrgID is used to construct file paths for rules files, and if crafted to conduct directory traversal such as ae ../../sensitive/path/in/deployment pathname, then Loki will attempt to parse a rules file at that location and include some of the contents in the error message.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-36156">https://nvd.nist.gov/vuln/detail/CVE-2021-36156</a></li>
<li><a href="https://github.com/grafana/loki/pull/4020#issue-694377133">https://github.com/grafana/loki/pull/4020#issue-694377133</a></li>
<li><a href="https://github.com/grafana/loki/releases/tag/v2.3.0">https://github.com/grafana/loki/releases/tag/v2.3.0</a></li>
<li><a href="https://github.com/grafana/loki/pull/4020">https://github.com/grafana/loki/pull/4020</a></li>
<li><a href="https://github.com/advisories/GHSA-grj5-8x6q-hc9q">https://github.com/advisories/GHSA-grj5-8x6q-hc9q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-grj5-8x6q-hc9q</uri>
        </author>
        <published>2021-09-02T22:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Allocation of Resources Without Limits or Throttling in github.com/hashicorp/nomad]]></title>
        <id>https://github.com/advisories/GHSA-3382-r9q8-4hfg</id>
        <link href="https://github.com/advisories/GHSA-3382-r9q8-4hfg"/>
        <updated>2022-03-09T20:24:15.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 is vulnerable to Allocation of Resources Without Limits or Throttling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24685">https://nvd.nist.gov/vuln/detail/CVE-2022-24685</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561">https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-3382-r9q8-4hfg">https://github.com/advisories/GHSA-3382-r9q8-4hfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3382-r9q8-4hfg</uri>
        </author>
        <published>2022-03-01T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Allocation of Resources Without Limits or Throttling in github.com/hashicorp/nomad]]></title>
        <id>https://github.com/advisories/GHSA-3382-r9q8-4hfg</id>
        <link href="https://github.com/advisories/GHSA-3382-r9q8-4hfg"/>
        <updated>2022-03-09T20:24:15.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 is vulnerable to Allocation of Resources Without Limits or Throttling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24685">https://nvd.nist.gov/vuln/detail/CVE-2022-24685</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561">https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-3382-r9q8-4hfg">https://github.com/advisories/GHSA-3382-r9q8-4hfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3382-r9q8-4hfg</uri>
        </author>
        <published>2022-03-01T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Allocation of Resources Without Limits or Throttling in github.com/hashicorp/nomad]]></title>
        <id>https://github.com/advisories/GHSA-3382-r9q8-4hfg</id>
        <link href="https://github.com/advisories/GHSA-3382-r9q8-4hfg"/>
        <updated>2022-03-09T20:24:15.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 1.x before 1.0.17, 1.1.x before 1.1.12, and 1.2.x before 1.2.6 is vulnerable to Allocation of Resources Without Limits or Throttling.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24685">https://nvd.nist.gov/vuln/detail/CVE-2022-24685</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561">https://discuss.hashicorp.com/t/hcsec-2022-03-nomad-malformed-job-parsing-results-in-excessive-cpu-usage/35561</a></li>
<li><a href="https://discuss.hashicorp.com">https://discuss.hashicorp.com</a></li>
<li><a href="https://github.com/advisories/GHSA-3382-r9q8-4hfg">https://github.com/advisories/GHSA-3382-r9q8-4hfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3382-r9q8-4hfg</uri>
        </author>
        <published>2022-03-01T00:00:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] Multiple security issues in Pomerium's embedded envoy]]></title>
        <id>https://github.com/advisories/GHSA-j34v-3552-5r7j</id>
        <link href="https://github.com/advisories/GHSA-j34v-3552-5r7j"/>
        <updated>2022-03-02T14:45:17.000Z</updated>
        <content type="html"><![CDATA[<p>Envoy, which Pomerium is based on, has issued multiple CVEs impacting stability and security.</p>
<p>Though Pomerium may not be vulnerable to all of the issues, it is recommended that all users upgrade to Pomerium v0.16.4 as soon as possible to minimize risk.</p>
<h3 id="impact">Impact</h3>
<ul>
<li>Possible DoS or crash</li>
<li>Resources available to unauthorized users</li>
<li>Pomerium may trust upstream certificates that should not be trusted</li>
</ul>
<h3 id="patches">Patches</h3>
<p>Patched in v0.16.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No</p>
<h3 id="references">References</h3>
<p><a href="https://groups.google.com/g/envoy-security-announce/c/QBGxoqZdTR4">Envoy Security Announcement</a></p>
<ul>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-vj5m-rch8-5r2p">CVE-2021-43824</a> (CVSS Score 6.5, Medium): Envoy 1.21.0 and earlier - Potential null pointer dereference when using JWT filter safe_regex match</li>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-h69p-g6xg-mhhh">CVE-2021-43825</a> (CVSS Score 6.1, Medium): Envoy 1.21.0 and earlier - Use-after-free when response filters increase response data, and increased data exceeds downstream buffer limits.</li>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-cmx3-fvgf-83mf">CVE-2021-43826</a> (CVSS Score 6.1, Medium): Envoy 1.21.0 and earlier - Use-after-free when tunneling TCP over HTTP, if downstream disconnects during upstream connection establishment</li>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-5j4x-g36v-m283">CVE-2022-21654</a> (CVSS Score 7.3, High): Envoy 1.7.0 and later - Incorrect configuration handling allows mTLS session re-use without re-validation after validation settings have changed.</li>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-7r5p-7fmh-jxpg">CVE-2022-21655</a> (CVSS Score 7.5, High): Envoy 1.21 and earlier - Incorrect handling of internal redirects to routes with a direct response entry</li>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-837m-wjrv-vm5g">CVE-2022-21657</a> (CVSS Score 3.1, Low): Envoy 1.20.1 and earlier - X.509 Extended Key Usage and Trust Purposes bypass</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/pomerium/pomerium/issues">pomerium/pomerium</a>
Email us at <a href="mailto:security@pomerium.com">security@pomerium.com</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-j34v-3552-5r7j">https://github.com/pomerium/pomerium/security/advisories/GHSA-j34v-3552-5r7j</a></li>
<li><a href="https://github.com/advisories/GHSA-j34v-3552-5r7j">https://github.com/advisories/GHSA-j34v-3552-5r7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j34v-3552-5r7j</uri>
        </author>
        <published>2022-03-01T22:04:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Arbitrary file reads in HashiCorp Nomad]]></title>
        <id>https://github.com/advisories/GHSA-wmrx-57hm-mw7r</id>
        <link href="https://github.com/advisories/GHSA-wmrx-57hm-mw7r"/>
        <updated>2022-03-01T22:34:10.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24683">https://nvd.nist.gov/vuln/detail/CVE-2022-24683</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-02-nomad-alloc-filesystem-and-container-escape/35560">https://discuss.hashicorp.com/t/hcsec-2022-02-nomad-alloc-filesystem-and-container-escape/35560</a></li>
<li><a href="https://github.com/advisories/GHSA-wmrx-57hm-mw7r">https://github.com/advisories/GHSA-wmrx-57hm-mw7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmrx-57hm-mw7r</uri>
        </author>
        <published>2022-02-18T00:00:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Arbitrary file reads in HashiCorp Nomad]]></title>
        <id>https://github.com/advisories/GHSA-wmrx-57hm-mw7r</id>
        <link href="https://github.com/advisories/GHSA-wmrx-57hm-mw7r"/>
        <updated>2022-03-01T22:34:10.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 0.9.2 through 1.0.17, 1.1.11, and 1.2.5 allow operators with read-fs and alloc-exec (or job-submit) capabilities to read arbitrary files on the host filesystem as root.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24683">https://nvd.nist.gov/vuln/detail/CVE-2022-24683</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-02-nomad-alloc-filesystem-and-container-escape/35560">https://discuss.hashicorp.com/t/hcsec-2022-02-nomad-alloc-filesystem-and-container-escape/35560</a></li>
<li><a href="https://github.com/advisories/GHSA-wmrx-57hm-mw7r">https://github.com/advisories/GHSA-wmrx-57hm-mw7r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wmrx-57hm-mw7r</uri>
        </author>
        <published>2022-02-18T00:00:34.000Z</published>
    </entry>
</feed>