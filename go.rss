<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-02-14T21:01:28.572Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2023-02-14T20:56:32.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0053">https://pkg.go.dev/vuln/GO-2021-0053</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/git-lfs/git-lfs] Git LFS can execute a Git binary from the current directory on Windows]]></title>
        <id>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</id>
        <link href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5"/>
        <updated>2023-02-14T20:55:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>On Windows, if Git LFS operates on a malicious repository with a git.bat or git.exe file in the current directory, that program would be executed, permitting the attacker to execute arbitrary code. This does not affect Unix systems.</p>
<p>This is the result of an incomplete fix for CVE-2020-27955.</p>
<p>This issue occurs because on Windows, <a href="https://github.com/golang/go/issues/38736">Go includes (and prefers) the current directory when the name of a command run does not contain a directory separator</a>.</p>
<h3 id="patches">Patches</h3>
<p>This version should be patched in v2.13.2, which will be released in coordination with this security advisory.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other than avoiding untrusted repositories or using a different operating system, there is no workaround.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a discussion in <a href="https://github.com/git-lfs/git-lfs/discussions">the Git LFS discussion page</a>.</li>
<li>If you cannot open a discussion, please email the core team using their usernames at <code>github.com</code>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/git-lfs/git-lfs/security/advisories/GHSA-cx3w-xqmc-84g5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-21237">https://nvd.nist.gov/vuln/detail/CVE-2021-21237</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a">https://github.com/git-lfs/git-lfs/commit/fc664697ed2c2081ee9633010de0a7f9debea72a</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27955</a></li>
<li><a href="https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2">https://github.com/git-lfs/git-lfs/releases/tag/v2.13.2</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0098">https://pkg.go.dev/vuln/GO-2021-0098</a></li>
<li><a href="https://github.com/advisories/GHSA-cx3w-xqmc-84g5">https://github.com/advisories/GHSA-cx3w-xqmc-84g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx3w-xqmc-84g5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T00:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Consensus flaw during block processing in github.com/ethereum/go-ethereum]]></title>
        <id>https://github.com/advisories/GHSA-xw37-57qp-9mm4</id>
        <link href="https://github.com/advisories/GHSA-xw37-57qp-9mm4"/>
        <updated>2023-02-14T20:54:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A consensus-vulnerability in Geth could cause a chain split, where vulnerable versions refuse to accept the canonical chain. </p>
<h3 id="description">Description</h3>
<p>A flaw was repoted at 2020-08-11 by John Youngseok Yang (Software Platform Lab), where a particular sequence of transactions could cause a consensus failure.</p>
<ul>
<li><p>Tx 1:</p>
<ul>
<li><code>sender</code> invokes <code>caller</code>.</li>
<li><code>caller</code> invokes <code>0xaa</code>. <code>0xaa</code> has 3 wei, does a self-destruct-to-self</li>
<li><code>caller</code> does a  <code>1 wei</code> -call to <code>0xaa</code>, who thereby has 1 wei (the code in <code>0xaa</code> still executed, since the tx is still ongoing, but doesn't redo the selfdestruct, it takes a different path if callvalue is non-zero)</li>
</ul>
</li>
<li><p>Tx 2:</p>
<ul>
<li><code>sender</code> does a 5-wei call to 0xaa. No exec (since no code).</li>
</ul>
</li>
</ul>
<p>In geth, the result would be that <code>0xaa</code> had <code>6 wei</code>, whereas OE reported (correctly) <code>5</code> wei. Furthermore, in geth, if the second tx was not executed, the <code>0xaa</code> would be destructed, resulting in <code>0 wei</code>. Thus obviously wrong. </p>
<p>It was determined that the root cause was this <a href="https://github.com/ethereum/go-ethereum/commit/223b950944f494a5b4e0957fd9f92c48b09037ad">commit</a> from <a href="https://github.com/ethereum/go-ethereum/pull/19953">this PR</a>. The semantics of <code>createObject</code> was subtly changd, into returning a non-nil object (with <code>deleted=true</code>) where it previously did not if the account had been destructed. This return value caused the new object to inherit the old <code>balance</code>:</p>
<pre><code class="language-golang">func (s *StateDB) CreateAccount(addr common.Address) {
    newObj, prev := s.createObject(addr)
    if prev != nil {
        newObj.setBalance(prev.data.Balance)
    }
}
</code></pre>
<p>It was determined that the minimal possible correct fix was</p>
<pre><code class="language-diff">+++ b/core/state/statedb.go
@@ -589,7 +589,10 @@ func (s *StateDB) createObject(addr common.Address) (newobj, prev *stateObject)
                s.journal.append(resetObjectChange{prev: prev, prevdestruct: prevdestruct})
        }
        s.setStateObject(newobj)
-       return newobj, prev
+       if prev != nil &amp;&amp; !prev.deleted {
+               return newobj, prev
+       }
+       return newobj, nil
</code></pre>
<h3 id="patches">Patches</h3>
<p>See above. The fix was included in Geth <code>v1.9.20</code> "Paragade".</p>
<h3 id="credits">Credits</h3>
<p>The bug was found by @johnyangk and reported via <a href="mailto:bounty@ethereum.org">bounty@ethereum.org</a>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/ethereum/go-ethereum">go-ethereum</a></li>
<li>Email us at <a href="mailto:security@ethereum.org">security@ethereum.org</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ethereum/go-ethereum/security/advisories/GHSA-xw37-57qp-9mm4">https://github.com/ethereum/go-ethereum/security/advisories/GHSA-xw37-57qp-9mm4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-26265">https://nvd.nist.gov/vuln/detail/CVE-2020-26265</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/21409">https://github.com/ethereum/go-ethereum/pull/21409</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/releases/tag/v1.9.20">https://github.com/ethereum/go-ethereum/releases/tag/v1.9.20</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/pull/21080">https://github.com/ethereum/go-ethereum/pull/21080</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/87c0ba92136a75db0ab2aba1046d4a9860375d6a">https://github.com/ethereum/go-ethereum/commit/87c0ba92136a75db0ab2aba1046d4a9860375d6a</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0105">https://pkg.go.dev/vuln/GO-2021-0105</a></li>
<li><a href="https://github.com/advisories/GHSA-xw37-57qp-9mm4">https://github.com/advisories/GHSA-xw37-57qp-9mm4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xw37-57qp-9mm4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-06-29T21:14:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/caddyserver/caddy] Caddy vulnerable to Authentication Bypass due to mishandling of TLS client authentication]]></title>
        <id>https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</id>
        <link href="https://github.com/advisories/GHSA-gr7w-x2jp-3xgw"/>
        <updated>2023-02-14T20:47:17.000Z</updated>
        <content type="html"><![CDATA[<p>Caddy before 0.10.13 mishandles TLS client authentication, as demonstrated by an authentication bypass caused by the lack of the StrictHostMatching mode.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-21246">https://nvd.nist.gov/vuln/detail/CVE-2018-21246</a></li>
<li><a href="https://github.com/caddyserver/caddy/commit/4d9ee000c8d2cbcdd8284007c1e0f2da7bc3c7c3">https://github.com/caddyserver/caddy/commit/4d9ee000c8d2cbcdd8284007c1e0f2da7bc3c7c3</a></li>
<li><a href="https://bugs.gentoo.org/715214">https://bugs.gentoo.org/715214</a></li>
<li><a href="https://github.com/caddyserver/caddy/releases/tag/v0.10.13">https://github.com/caddyserver/caddy/releases/tag/v0.10.13</a></li>
<li><a href="https://github.com/caddyserver/caddy/pull/2099">https://github.com/caddyserver/caddy/pull/2099</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0043">https://pkg.go.dev/vuln/GO-2020-0043</a></li>
<li><a href="https://github.com/advisories/GHSA-gr7w-x2jp-3xgw">https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-06T22:58:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/facebook/fbthrift/thrift] Golang Facebook Thrift servers vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-w3r9-r9w7-8h48</id>
        <link href="https://github.com/advisories/GHSA-w3r9-r9w7-8h48"/>
        <updated>2023-02-14T20:46:20.000Z</updated>
        <content type="html"><![CDATA[<p>Golang Facebook Thrift servers would not error upon receiving messages declaring containers of sizes larger than the payload. As a result, malicious clients could send short messages which would result in a large memory allocation, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2020.03.16.00.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11939">https://nvd.nist.gov/vuln/detail/CVE-2019-11939</a></li>
<li><a href="https://github.com/facebook/fbthrift/commit/483ed864d69f307e9e3b9dadec048216100c0757">https://github.com/facebook/fbthrift/commit/483ed864d69f307e9e3b9dadec048216100c0757</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2019-11939">https://www.facebook.com/security/advisories/cve-2019-11939</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0082">https://pkg.go.dev/vuln/GO-2021-0082</a></li>
<li><a href="https://github.com/advisories/GHSA-w3r9-r9w7-8h48">https://github.com/advisories/GHSA-w3r9-r9w7-8h48</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w3r9-r9w7-8h48</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T17:11:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/facebook/fbthrift] Improper Input Validation and Excessive Iteration in Go Facebook Thrift]]></title>
        <id>https://github.com/advisories/GHSA-x4rg-4545-4w7w</id>
        <link href="https://github.com/advisories/GHSA-x4rg-4545-4w7w"/>
        <updated>2023-02-14T20:46:07.000Z</updated>
        <content type="html"><![CDATA[<p>Go Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.03.04.00.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-3564">https://nvd.nist.gov/vuln/detail/CVE-2019-3564</a></li>
<li><a href="https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156">https://github.com/facebook/fbthrift/commit/c461c1bd1a3e130b181aa9c854da3030cd4b5156</a></li>
<li><a href="https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://www.facebook.com/security/advisories/cve-2019-3564">https://www.facebook.com/security/advisories/cve-2019-3564</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0088">https://pkg.go.dev/vuln/GO-2021-0088</a></li>
<li><a href="https://github.com/advisories/GHSA-x4rg-4545-4w7w">https://github.com/advisories/GHSA-x4rg-4545-4w7w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x4rg-4545-4w7w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/btcsuitereleases/go-socks] socks Infinite Loop vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</id>
        <link href="https://github.com/advisories/GHSA-gxgj-xjcw-fv9p"/>
        <updated>2023-02-14T20:45:35.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>RemoteAddr</code> and <code>LocalAddr</code> methods on the returned <code>net.Conn</code> may call themselves, leading to an infinite loop which will crash the program due to a stack overflow.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-10005">https://nvd.nist.gov/vuln/detail/CVE-2013-10005</a></li>
<li><a href="https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc">https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0024">https://pkg.go.dev/vuln/GO-2020-0024</a></li>
<li><a href="https://github.com/advisories/GHSA-gxgj-xjcw-fv9p">https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-28T00:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/btcsuite/go-socks] socks Infinite Loop vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</id>
        <link href="https://github.com/advisories/GHSA-gxgj-xjcw-fv9p"/>
        <updated>2023-02-14T20:45:35.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>RemoteAddr</code> and <code>LocalAddr</code> methods on the returned <code>net.Conn</code> may call themselves, leading to an infinite loop which will crash the program due to a stack overflow.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2013-10005">https://nvd.nist.gov/vuln/detail/CVE-2013-10005</a></li>
<li><a href="https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc">https://github.com/btcsuite/go-socks/commit/233bccbb1abe02f05750f7ace66f5bffdb13defc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0024">https://pkg.go.dev/vuln/GO-2020-0024</a></li>
<li><a href="https://github.com/advisories/GHSA-gxgj-xjcw-fv9p">https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gxgj-xjcw-fv9p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-28T00:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudwego/hertz] Hertz contains path traversal via normalizePath function]]></title>
        <id>https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</id>
        <link href="https://github.com/advisories/GHSA-c9qr-f6c8-rgxf"/>
        <updated>2023-02-14T20:42:56.000Z</updated>
        <content type="html"><![CDATA[<p>Hertz is a a high-performance and strong-extensibility Go HTTP framework that helps developers build microservices. Versions of Hertz prior to 0.3.1 contain a path traversal vulnerability via the normalizePath function. This issue has been patched in 0.3.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40082">https://nvd.nist.gov/vuln/detail/CVE-2022-40082</a></li>
<li><a href="https://github.com/cloudwego/hertz/issues/228">https://github.com/cloudwego/hertz/issues/228</a></li>
<li><a href="https://github.com/cloudwego/hertz/pull/229">https://github.com/cloudwego/hertz/pull/229</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1027">https://pkg.go.dev/vuln/GO-2022-1027</a></li>
<li><a href="https://github.com/advisories/GHSA-c9qr-f6c8-rgxf">https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c9qr-f6c8-rgxf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-29T00:00:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containrrr/shoutrrr] Shoutrrr util package DoS via sending 2000, 4000, or 6000 character messages]]></title>
        <id>https://github.com/advisories/GHSA-477v-w82m-634j</id>
        <link href="https://github.com/advisories/GHSA-477v-w82m-634j"/>
        <updated>2023-02-14T18:56:55.000Z</updated>
        <content type="html"><![CDATA[<p>The package github.com/containrrr/shoutrrr/pkg/util before 0.6.0 are vulnerable to Denial of Service (DoS) via the util.PartitionMessage function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25891">https://nvd.nist.gov/vuln/detail/CVE-2022-25891</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/issues/240">https://github.com/containrrr/shoutrrr/issues/240</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/pull/242">https://github.com/containrrr/shoutrrr/pull/242</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42">https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0">https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0528">https://pkg.go.dev/vuln/GO-2022-0528</a></li>
<li><a href="https://github.com/advisories/GHSA-477v-w82m-634j">https://github.com/advisories/GHSA-477v-w82m-634j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-477v-w82m-634j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-16T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/imgcrypt] Incorrect Authorization in imgcrypt]]></title>
        <id>https://github.com/advisories/GHSA-8v99-48m9-c8pm</id>
        <link href="https://github.com/advisories/GHSA-8v99-48m9-c8pm"/>
        <updated>2023-02-14T17:47:26.000Z</updated>
        <content type="html"><![CDATA[<p>Imgcrypt implements a function <code>CheckAuthorization()</code> that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.</p>
<p>The failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.</p>
<p>Known projects that use the <code>CheckAuthorization()</code> of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to <code>CheckAuthorization()</code> is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.</p>
<p>In relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.</p>
<p>The patch has been applied to imgcrypt v1.1.4. Workarounds may include usage of different namespaces for each remote user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm">https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24778">https://nvd.nist.gov/vuln/detail/CVE-2022-24778</a></li>
<li><a href="https://github.com/containerd/imgcrypt/issues/69">https://github.com/containerd/imgcrypt/issues/69</a></li>
<li><a href="https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9">https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9</a></li>
<li><a href="https://github.com/containerd/imgcrypt/releases/tag/v1.1.4">https://github.com/containerd/imgcrypt/releases/tag/v1.1.4</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TAHAAOOA3KZJC2I5WHCR3XVBJBNWTWUE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TAHAAOOA3KZJC2I5WHCR3XVBJBNWTWUE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFTJR5CR5EOYDVOSBZEMLBHLJRTPJPUA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFTJR5CR5EOYDVOSBZEMLBHLJRTPJPUA/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SJUNSC7YZLA745EMKWK2GKEV57GE52K/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SJUNSC7YZLA745EMKWK2GKEV57GE52K/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0412">https://pkg.go.dev/vuln/GO-2021-0412</a></li>
<li><a href="https://github.com/advisories/GHSA-8v99-48m9-c8pm">https://github.com/advisories/GHSA-8v99-48m9-c8pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v99-48m9-c8pm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T19:33:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] OctoRPKI crashes when processing GZIP bomb returned via malicious repository]]></title>
        <id>https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</id>
        <link href="https://github.com/advisories/GHSA-g9wh-3vrx-r7hg"/>
        <updated>2023-02-14T17:47:01.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash). </p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g9wh-3vrx-r7hg">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g9wh-3vrx-r7hg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3912">https://nvd.nist.gov/vuln/detail/CVE-2021-3912</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/648658b1b176a747b52645989cfddc73a81eacad">https://github.com/cloudflare/cfrpki/commit/648658b1b176a747b52645989cfddc73a81eacad</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0253">https://pkg.go.dev/vuln/GO-2022-0253</a></li>
<li><a href="https://github.com/advisories/GHSA-g9wh-3vrx-r7hg">https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T20:39:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] Misconfigured IP address field in ROA leads to OctoRPKI crash]]></title>
        <id>https://github.com/advisories/GHSA-w6ww-fmfx-2x22</id>
        <link href="https://github.com/advisories/GHSA-w6ww-fmfx-2x22"/>
        <updated>2023-02-14T17:46:32.000Z</updated>
        <content type="html"><![CDATA[<p>If the ROA that a repository returns contains too many bits for the IP address then OctoRPKI will crash.</p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-w6ww-fmfx-2x22">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-w6ww-fmfx-2x22</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3911">https://nvd.nist.gov/vuln/detail/CVE-2021-3911</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/2882307febd66801de97b2a2ce4d93fe58132005">https://github.com/cloudflare/cfrpki/commit/2882307febd66801de97b2a2ce4d93fe58132005</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0252">https://pkg.go.dev/vuln/GO-2022-0252</a></li>
<li><a href="https://github.com/advisories/GHSA-w6ww-fmfx-2x22">https://github.com/advisories/GHSA-w6ww-fmfx-2x22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6ww-fmfx-2x22</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T19:56:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] Arbitrary filepath traversal via URI injection ]]></title>
        <id>https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</id>
        <link href="https://github.com/advisories/GHSA-cqh2-vc2f-q4fh"/>
        <updated>2023-02-14T17:46:08.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI does not escape a URI with a filename containing "..", this allows a repository to create a file, (ex.  <code>rsync://example.org/repo/../../etc/cron.daily/evil.roa</code>), which would then be written to disk outside the base cache folder. This could allow for remote code execution on the host machine OctoRPKI is running on. </p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3907">https://nvd.nist.gov/vuln/detail/CVE-2021-3907</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-5033">https://www.debian.org/security/2021/dsa-5033</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284">https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0248">https://pkg.go.dev/vuln/GO-2022-0248</a></li>
<li><a href="https://github.com/advisories/GHSA-cqh2-vc2f-q4fh">https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-11-10T20:08:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] NUL character in ROA causes OctoRPKI to crash]]></title>
        <id>https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</id>
        <link href="https://github.com/advisories/GHSA-5mxh-2qfv-4g7j"/>
        <updated>2023-02-14T17:45:40.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI crashes when encountering a repository that returns an invalid ROA (just an encoded <code>NUL</code> (<code>\0</code>) character).</p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-5mxh-2qfv-4g7j">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-5mxh-2qfv-4g7j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3910">https://nvd.nist.gov/vuln/detail/CVE-2021-3910</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/76f0f7a98da001fa04e5bc0407c6702f91096bfa">https://github.com/cloudflare/cfrpki/commit/76f0f7a98da001fa04e5bc0407c6702f91096bfa</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0251">https://pkg.go.dev/vuln/GO-2022-0251</a></li>
<li><a href="https://github.com/advisories/GHSA-5mxh-2qfv-4g7j">https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-11-10T20:15:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] OctoRPKI lacks contextual out-of-bounds check when validating RPKI ROA maxLength values]]></title>
        <id>https://github.com/advisories/GHSA-c8xp-8mf3-62h9</id>
        <link href="https://github.com/advisories/GHSA-c8xp-8mf3-62h9"/>
        <updated>2023-02-14T17:45:21.000Z</updated>
        <content type="html"><![CDATA[<p>Any CA issuer in the RPKI can trick OctoRPKI prior to <a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a> into emitting an invalid VRP "MaxLength" value, causing RTR sessions to terminate. </p>
<h3 id="impact">Impact</h3>
<p>An attacker can use this to disable RPKI Origin Validation in a victim network (for example AS 13335 - Cloudflare) prior to launching a BGP hijack which during normal operations would be rejected as "RPKI invalid". Additionally, in certain deployments RTR session flapping in and of itself also could cause BGP routing churn, causing availability issues.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a></p>
<p><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="security@cloudflare.com">security@cloudflare.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-c8xp-8mf3-62h9">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-c8xp-8mf3-62h9</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3761">https://nvd.nist.gov/vuln/detail/CVE-2021-3761</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/pull/90">https://github.com/cloudflare/cfrpki/pull/90</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0246">https://pkg.go.dev/vuln/GO-2022-0246</a></li>
<li><a href="https://github.com/advisories/GHSA-c8xp-8mf3-62h9">https://github.com/advisories/GHSA-c8xp-8mf3-62h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8xp-8mf3-62h9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-09-07T23:02:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
</feed>