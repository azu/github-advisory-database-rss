<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-10-02T23:01:17.774Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Juju Unprotected Alternate Channel vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-85qf-6845-m8p2</id>
        <link href="https://github.com/advisories/GHSA-85qf-6845-m8p2"/>
        <updated>2024-10-02T21:55:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-xwgj-vpm9-q2rq. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Vulnerable juju introspection abstract UNIX domain socket. An abstract UNIX domain socket responsible for introspection is available without authentication locally to network namespace users. This enables denial of service attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq">https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8038">https://nvd.nist.gov/vuln/detail/CVE-2024-8038</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-8038">https://www.cve.org/CVERecord?id=CVE-2024-8038</a></li>
<li><a href="https://github.com/advisories/GHSA-85qf-6845-m8p2">https://github.com/advisories/GHSA-85qf-6845-m8p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85qf-6845-m8p2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Vulnerable juju hook tool abstract UNIX domain socket]]></title>
        <id>https://github.com/advisories/GHSA-fc27-7pf5-96v3</id>
        <link href="https://github.com/advisories/GHSA-fc27-7pf5-96v3"/>
        <updated>2024-10-02T21:55:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-8v4w-f4r9-7h6x. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Vulnerable juju hook tool abstract UNIX domain socket. When combined with an attack of JUJU_CONTEXT_ID, any user on the local system with access to the default network namespace may connect to the @/var/lib/juju/agents/unit-xxxx-yyyy/agent.socket and perform actions that are normally reserved to a juju charm.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x">https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8037">https://nvd.nist.gov/vuln/detail/CVE-2024-8037</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-8037">https://www.cve.org/CVERecord?id=CVE-2024-8037</a></li>
<li><a href="https://github.com/advisories/GHSA-fc27-7pf5-96v3">https://github.com/advisories/GHSA-fc27-7pf5-96v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fc27-7pf5-96v3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Juju makes Use of Weak Credentials]]></title>
        <id>https://github.com/advisories/GHSA-phh4-3hmm-24rx</id>
        <link href="https://github.com/advisories/GHSA-phh4-3hmm-24rx"/>
        <updated>2024-10-02T21:55:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-mh98-763h-m9v4. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>JUJU_CONTEXT_ID is a predictable authentication secret. On a Juju machine (non-Kubernetes) or Juju charm container (on Kubernetes), an unprivileged user in the same network namespace can connect to an abstract domain socket and guess the JUJU_CONTEXT_ID value. This gives the unprivileged user access to the same information and tools as the Juju charm.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7558">https://nvd.nist.gov/vuln/detail/CVE-2024-7558</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-7558">https://www.cve.org/CVERecord?id=CVE-2024-7558</a></li>
<li><a href="https://github.com/advisories/GHSA-phh4-3hmm-24rx">https://github.com/advisories/GHSA-phh4-3hmm-24rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phh4-3hmm-24rx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] Pomerium service account access token may grant unintended access to databroker API]]></title>
        <id>https://github.com/advisories/GHSA-r7rh-jww5-5fjr</id>
        <link href="https://github.com/advisories/GHSA-r7rh-jww5-5fjr"/>
        <updated>2024-10-02T21:33:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>We've identified a vulnerability in the Pomerium databroker service API that may grant unintended access under specific conditions. This affects only certain Pomerium Zero and Pomerium Enterprise deployments.</p>
<h4 id="who-is-affected">Who is affected?</h4>
<p>A Pomerium deployment is susceptible to this issue if <em>all</em> of the following conditions are met:</p>
<ul>
<li>You have issued a <a href="https://www.pomerium.com/docs/capabilities/service-accounts">service account</a> access token using Pomerium Zero or Pomerium Enterprise.</li>
<li>The access token has an explicit expiration date in the future.</li>
<li>The core Pomerium databroker gRPC API is not otherwise secured by network access controls.</li>
</ul>
<p>If your deployment does not meet <em>all</em> of these conditions, you are not affected by this vulnerability.</p>
<h4 id="details">Details</h4>
<p>The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium services in the same deployment. However, incomplete validation of this JWT meant that some service account access tokens would incorrectly be treated as valid for the purpose of databroker API authorization.</p>
<p>Improper access to the databroker API could allow exfiltration of user info, spoofing of user sessions, or tampering with Pomerium routes, policies, and other settings.</p>
<h4 id="discovery">Discovery</h4>
<p>This issue was discovered during internal review. At this time we have no evidence to suggest that this vulnerability has been exploited in the wild.</p>
<h3 id="patches">Patches</h3>
<p>We have released <a href="https://github.com/pomerium/pomerium/releases/tag/v0.27.1">Pomerium v0.27.1</a> which includes a fix for the JWT validation logic. All affected users are strongly encouraged to upgrade to this version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade immediately, consider the following mitigations:</p>
<ul>
<li><p>Network access controls: Restrict access to the Pomerium internal gRPC API by configuring your network firewall or security groups to limit access to trusted sources only. Ensure that the port specified in the <a href="https://www.pomerium.com/docs/reference/grpc#grpc-address"><code>grpc_address</code></a> setting is not exposed to unauthorized networks.</p>
</li>
<li><p><em>For Pomerium Zero deployments only:</em> As of Pomerium v0.26.0, you can disable the gRPC API listener by setting <code>grpc_address: ""</code> in your YAML configuration file. In all-in-one mode, Pomerium does not require the internal gRPC API to be exposed beyond localhost.</p>
</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have questions or need further assistance:</p>
<ul>
<li>Open an issue in the <a href="https://github.com/pomerium/pomerium/issues">pomerium/pomerium</a> repository.</li>
<li>Contact us at <a href="mailto:security@pomerium.com">security@pomerium.com</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr">https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr</a></li>
<li><a href="https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444">https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444</a></li>
<li><a href="https://github.com/pomerium/pomerium/releases/tag/v0.27.1">https://github.com/pomerium/pomerium/releases/tag/v0.27.1</a></li>
<li><a href="https://github.com/advisories/GHSA-r7rh-jww5-5fjr">https://github.com/advisories/GHSA-r7rh-jww5-5fjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7rh-jww5-5fjr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T21:33:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/portainer/portainer] Portainer improperly uses an encryption algorithm in the AesEncrypt function]]></title>
        <id>https://github.com/advisories/GHSA-9mjw-79r6-c9m8</id>
        <link href="https://github.com/advisories/GHSA-9mjw-79r6-c9m8"/>
        <updated>2024-10-02T17:58:15.000Z</updated>
        <content type="html"><![CDATA[<p>Portainer before 2.20.2 improperly uses an encryption algorithm in the <code>AesEncrypt</code> function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-33662">https://nvd.nist.gov/vuln/detail/CVE-2024-33662</a></li>
<li><a href="https://github.com/portainer/portainer/issues/11737">https://github.com/portainer/portainer/issues/11737</a></li>
<li><a href="https://github.com/portainer/portainer/compare/2.20.1...2.20.2">https://github.com/portainer/portainer/compare/2.20.1...2.20.2</a></li>
<li><a href="https://www.portainer.io">https://www.portainer.io</a></li>
<li><a href="https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests">https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests</a></li>
<li><a href="https://github.com/advisories/GHSA-9mjw-79r6-c9m8">https://github.com/advisories/GHSA-9mjw-79r6-c9m8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9mjw-79r6-c9m8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v5] Improper Input Validation in Buildah and Podman]]></title>
        <id>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</id>
        <link href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc"/>
        <updated>2024-10-01T22:32:08.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9407">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9407">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315887">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>
<li><a href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Improper Input Validation in Buildah and Podman]]></title>
        <id>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</id>
        <link href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc"/>
        <updated>2024-10-01T22:32:08.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9407">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9407">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315887">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>
<li><a href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/golang-fips/openssl/v2] Golang FIPS OpenSSL has a Use of Uninitialized Variable vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3h3x-2hwv-hr52</id>
        <link href="https://github.com/advisories/GHSA-3h3x-2hwv-hr52"/>
        <updated>2024-10-02T18:32:34.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.&nbsp; It is also possible to force a derived key to be all zeros instead of an unpredictable value.&nbsp; This may have follow-on implications for the Go TLS stack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9355">https://nvd.nist.gov/vuln/detail/CVE-2024-9355</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9355">https://access.redhat.com/security/cve/CVE-2024-9355</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315719">https://bugzilla.redhat.com/show_bug.cgi?id=2315719</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:7502">https://access.redhat.com/errata/RHSA-2024:7502</a></li>
<li><a href="https://github.com/advisories/GHSA-3h3x-2hwv-hr52">https://github.com/advisories/GHSA-3h3x-2hwv-hr52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3h3x-2hwv-hr52</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-01T21:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/common] Link Following in github.com/containers/common]]></title>
        <id>https://github.com/advisories/GHSA-mc76-5925-c5p6</id>
        <link href="https://github.com/advisories/GHSA-mc76-5925-c5p6"/>
        <updated>2024-10-01T22:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Go. When FIPS mode is enabled on a system, container runtimes may incorrectly handle certain file paths due to improper validation in the containers/common Go library. This flaw allows an attacker to exploit symbolic links and trick the system into mounting sensitive host directories inside a container. This issue also allows attackers to access critical host files, bypassing the intended isolation between containers and the host system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9341">https://nvd.nist.gov/vuln/detail/CVE-2024-9341</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9341">https://access.redhat.com/security/cve/CVE-2024-9341</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315691">https://bugzilla.redhat.com/show_bug.cgi?id=2315691</a></li>
<li><a href="https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169</a></li>
<li><a href="https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349</a></li>
<li><a href="https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f">https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f</a></li>
<li><a href="https://github.com/advisories/GHSA-mc76-5925-c5p6">https://github.com/advisories/GHSA-mc76-5925-c5p6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mc76-5925-c5p6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/agent] Grafana Agent (Flow mode) on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</id>
        <link href="https://github.com/advisories/GHSA-m5gv-m5f9-wgv4"/>
        <updated>2024-10-01T22:29:14.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Agent (Flow mode) on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Agent Flow before 0.43.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8996">https://nvd.nist.gov/vuln/detail/CVE-2024-8996</a></li>
<li><a href="https://github.com/grafana/agent/releases/tag/v0.43.2">https://github.com/grafana/agent/releases/tag/v0.43.2</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8996">https://grafana.com/security/security-advisories/cve-2024-8996</a></li>
<li><a href="https://github.com/grafana/agent/releases/tag/v0.43.3">https://github.com/grafana/agent/releases/tag/v0.43.3</a></li>
<li><a href="https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299">https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299</a></li>
<li><a href="https://github.com/advisories/GHSA-m5gv-m5f9-wgv4">https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-chqx-36rm-rf8h</id>
        <link href="https://github.com/advisories/GHSA-chqx-36rm-rf8h"/>
        <updated>2024-10-01T22:29:03.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8975">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.0">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8975">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.3.4">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.1">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>
<li><a href="https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>
<li><a href="https://github.com/advisories/GHSA-chqx-36rm-rf8h">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chqx-36rm-rf8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-chqx-36rm-rf8h</id>
        <link href="https://github.com/advisories/GHSA-chqx-36rm-rf8h"/>
        <updated>2024-10-01T22:29:03.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8975">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.0">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8975">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.3.4">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.1">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>
<li><a href="https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>
<li><a href="https://github.com/advisories/GHSA-chqx-36rm-rf8h">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chqx-36rm-rf8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/theupdateframework/go-tuf/v2] Incorrect delegation lookups can make go-tuf download the wrong artifact]]></title>
        <id>https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</id>
        <link href="https://github.com/advisories/GHSA-4f8r-qqr9-fq8j"/>
        <updated>2024-10-01T18:37:40.000Z</updated>
        <content type="html"><![CDATA[<p>During the ongoing work on the TUF conformance test suite, we have come across a test that reveals what we believe is a bug in go-tuf with security implications. The bug exists in go-tuf delegation tracing and could result in downloading the wrong artifact. </p>
<p>We have come across this issue in the test in this PR: <a href="https://github.com/theupdateframework/tuf-conformance/pull/115">https://github.com/theupdateframework/tuf-conformance/pull/115</a>.</p>
<p>The test - <code>test_graph_traversal</code> - sets up a repository with a series of delegations, invokes the clients <code>refresh()</code> and then checks the order in which the client traced the delegations. The test shows that the go-tuf client inconsistently traces the delegations in a wrong way. For example, <a href="https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275625542">during one CI run</a>, the <code>two-level-delegations</code> test case triggered a wrong order. The delegations in this look as such:</p>
<pre><code class="language-python">"two-level-delegations": DelegationsTestCase(
        delegations=[
            DelegationTester("targets", "A"),
            DelegationTester("targets", "B"),
            DelegationTester("B", "C"),
        ],
        visited_order=["A", "B", "C"],
    ),
</code></pre>
<p>Here, <code>targets</code> delegate to <code>"A"</code>, and to <code>"B"</code>, and <code>"B"</code> delegates to <code>"C"</code>. The client should trace the delegations in the order <code>"A"</code> then <code>"B"</code> then <code>"C"</code> but in this particular CI run, go-tuf traced the delegations <code>"B"-&gt;"C"-&gt;"A"</code>.</p>
<p>In a subsequent CI run, this test case did not fail, but <a href="https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275640487">another one did</a>.</p>
<p>@jku has done a bit of debugging and believes that the returned map of <code>GetRolesForTarget</code> returns a map that causes this behavior:</p>
<p><a href="https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></p>
<p>We believe that this map should be an ordered list instead of a map.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j">https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j</a></li>
<li><a href="https://github.com/theupdateframework/tuf-conformance/pull/115">https://github.com/theupdateframework/tuf-conformance/pull/115</a></li>
<li><a href="https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819">https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819</a></li>
<li><a href="https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47534">https://nvd.nist.gov/vuln/detail/CVE-2024-47534</a></li>
<li><a href="https://github.com/advisories/GHSA-4f8r-qqr9-fq8j">https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-01T18:13:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to strip `embeds` from `metadata` when broadcasting `posted` events]]></title>
        <id>https://github.com/advisories/GHSA-59hf-mpf8-pqjh</id>
        <link href="https://github.com/advisories/GHSA-59hf-mpf8-pqjh"/>
        <updated>2024-09-27T22:01:17.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost does not strip <code>embeds</code> from <code>metadata</code> when broadcasting <code>posted</code> events.</p>
<p>This allows users to include arbitrary embeds in posts, which are then broadcasted via websockets. This can be exploited in many ways, for example to create permalinks with fully customizable content or to trigger a client Side Denial of Service (DoS) by sending a permalink with a non-string message.</p>
<p>The advisory metadata references the appropriate go pseudo version available from pkg.go.dev</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47003">https://nvd.nist.gov/vuln/detail/CVE-2024-47003</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/pull/27763">https://github.com/mattermost/mattermost/pull/27763</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/69a8b3df0f9fd3a7a5b792ec678b6191618d039b">https://github.com/mattermost/mattermost/commit/69a8b3df0f9fd3a7a5b792ec678b6191618d039b</a></li>
<li><a href="https://github.com/c0rydoras/cves/tree/main/CVE-2024-47003">https://github.com/c0rydoras/cves/tree/main/CVE-2024-47003</a></li>
<li><a href="https://github.com/advisories/GHSA-59hf-mpf8-pqjh">https://github.com/advisories/GHSA-59hf-mpf8-pqjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59hf-mpf8-pqjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-26T09:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Vault SSH Secrets Engine Configuration Did Not Restrict Valid Principals By Default]]></title>
        <id>https://github.com/advisories/GHSA-jg74-mwgw-v6x3</id>
        <link href="https://github.com/advisories/GHSA-jg74-mwgw-v6x3"/>
        <updated>2024-09-26T21:53:45.000Z</updated>
        <content type="html"><![CDATA[<p>Vault’s SSH secrets engine did not require the valid_principals list to contain a value by default. If the valid_principals and default_user fields of the SSH secrets engine configuration are not set, an SSH certificate requested by an authorized user to Vault’s SSH secrets engine could be used to authenticate as any user on the host. Fixed in Vault Community Edition 1.17.6, and in Vault Enterprise 1.17.6, 1.16.10, and 1.15.15.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7594">https://nvd.nist.gov/vuln/detail/CVE-2024-7594</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-20-vault-ssh-secrets-engine-configuration-did-not-restrict-valid-principals-by-default/70251">https://discuss.hashicorp.com/t/hcsec-2024-20-vault-ssh-secrets-engine-configuration-did-not-restrict-valid-principals-by-default/70251</a></li>
<li><a href="https://github.com/advisories/GHSA-jg74-mwgw-v6x3">https://github.com/advisories/GHSA-jg74-mwgw-v6x3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jg74-mwgw-v6x3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-26T21:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher agents can be hijacked by taking over the Rancher Server URL]]></title>
        <id>https://github.com/advisories/GHSA-h4h5-9833-v2p4</id>
        <link href="https://github.com/advisories/GHSA-h4h5-9833-v2p4"/>
        <updated>2024-09-26T21:13:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher that can be exploited in narrow circumstances through a man-in-the-middle (MITM) attack. An attacker would need to have control of an expired domain or execute a DNS spoofing/hijacking attack against the domain to exploit this vulnerability. The targeted domain is the one used as the Rancher URL.</p>
<p>SUSE is unaware of any successful exploitation of this vulnerability, which has a high complexity bar. </p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1557/">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this attack category.</p>
<h3 id="patches">Patches</h3>
<p>A new setting, <a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings"><code>agent-tls-mode</code></a>, was added, which allows users to specify if agents will use <code>strict</code> certificate verification when connecting to Rancher. The field can be set to <code>strict</code> (which requires the agent to verify the certificate using only the Certificate Authority in the <code>cacerts</code> setting) or <code>system-store</code> (which allows the agent to verify the certificate using any Certificate Authority in the operating system's trust store). This setting will default to strict on new installs of Rancher <code>v2.8.6</code>, <code>v2.9.0</code>, and newer versions. When upgrading from a prior version, the current value will be kept. If updating from older versions, the settings must be manually configured.</p>
<p><strong>Important:</strong> For non-Windows nodes, this is fixed since <code>v2.8.6</code> and <code>v2.9.0</code>. For Windows nodes, this is fully fixed starting with <code>v2.8.8</code> and <code>v2.9.2</code></p>
<p>Patched versions include releases <code>v2.8.8</code> and <code>v2.9.2</code>.</p>
<p>For non-Windows nodes, the fix was released with <code>v2.7.15</code>. However, if you are running Rancher <code>v2.7.x</code> and have Windows nodes, you must follow the below workaround to address this issue on those nodes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you can't update, please follow the standard security practices including:</p>
<ol>
<li>Properly control the expiration and ownership of the domain used as the Rancher URL (the <code>server-url</code> of the Rancher cluster).</li>
<li>Enabling DNSSEC as a way to protect against DNS spoofing or hijacking attacks. </li>
<li>Properly clean up and decommission unused clusters and downstream clusters, instead of leaving them behind. For example, downstream clusters which are alive while the main Rancher server is no longer available.</li>
</ol>
<p>In some cases, Windows nodes added to RKE2 clusters may not be automatically updated with the desired <code>agent-tls-mode</code>. Windows clusters running at least the August patches (<code>v1.27.16</code>, <code>v1.28.13</code>, <code>v1.29.8</code>, <code>v1.30.4</code>) will be automatically updated. For Windows nodes running older versions of RKE2, this issue can be manually resolved by following these <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>.</p>
<p>If you are running Rancher <code>v2.7.x</code> Windows nodes will not automatically update, and you must follow the above <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>, with the following notes:</p>
<ol>
<li>This needs to be done for all existing Windows nodes and any new nodes provisioned.</li>
<li>You must omit the <code>DownloadWins</code> flag, and must instead manually download the <code>rancher-wins</code> version <a href="https://github.com/rancher/wins/releases/tag/v0.4.18">0.4.18</a>, or greater, from its GitHub repository and place it in the required directories:
a. <code>c:\Windows</code>
b. <code>c:\user\local\bin</code></li>
<li>You must restart the nodes after running the script, simply restarting <code>rancher-wins</code> or RKE2 will result in <a href="https://github.com/rancher/rke2/issues/5551">pod networking errors</a>. The only scenario where you do not need to completely restart the node is if the cluster is running version <code>v1.27.16</code> or higher.</li>
</ol>
<h3 id="credits">Credits</h3>
<p>This issue was found and reported by Jarkko Vesiluoma from Redtest Security.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4">https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4</a></li>
<li><a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify</a></li>
<li><a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings">https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings</a></li>
<li><a href="https://github.com/advisories/GHSA-h4h5-9833-v2p4">https://github.com/advisories/GHSA-h4h5-9833-v2p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4h5-9833-v2p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-26T21:13:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher agents can be hijacked by taking over the Rancher Server URL]]></title>
        <id>https://github.com/advisories/GHSA-h4h5-9833-v2p4</id>
        <link href="https://github.com/advisories/GHSA-h4h5-9833-v2p4"/>
        <updated>2024-09-26T21:13:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher that can be exploited in narrow circumstances through a man-in-the-middle (MITM) attack. An attacker would need to have control of an expired domain or execute a DNS spoofing/hijacking attack against the domain to exploit this vulnerability. The targeted domain is the one used as the Rancher URL.</p>
<p>SUSE is unaware of any successful exploitation of this vulnerability, which has a high complexity bar. </p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1557/">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this attack category.</p>
<h3 id="patches">Patches</h3>
<p>A new setting, <a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings"><code>agent-tls-mode</code></a>, was added, which allows users to specify if agents will use <code>strict</code> certificate verification when connecting to Rancher. The field can be set to <code>strict</code> (which requires the agent to verify the certificate using only the Certificate Authority in the <code>cacerts</code> setting) or <code>system-store</code> (which allows the agent to verify the certificate using any Certificate Authority in the operating system's trust store). This setting will default to strict on new installs of Rancher <code>v2.8.6</code>, <code>v2.9.0</code>, and newer versions. When upgrading from a prior version, the current value will be kept. If updating from older versions, the settings must be manually configured.</p>
<p><strong>Important:</strong> For non-Windows nodes, this is fixed since <code>v2.8.6</code> and <code>v2.9.0</code>. For Windows nodes, this is fully fixed starting with <code>v2.8.8</code> and <code>v2.9.2</code></p>
<p>Patched versions include releases <code>v2.8.8</code> and <code>v2.9.2</code>.</p>
<p>For non-Windows nodes, the fix was released with <code>v2.7.15</code>. However, if you are running Rancher <code>v2.7.x</code> and have Windows nodes, you must follow the below workaround to address this issue on those nodes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you can't update, please follow the standard security practices including:</p>
<ol>
<li>Properly control the expiration and ownership of the domain used as the Rancher URL (the <code>server-url</code> of the Rancher cluster).</li>
<li>Enabling DNSSEC as a way to protect against DNS spoofing or hijacking attacks. </li>
<li>Properly clean up and decommission unused clusters and downstream clusters, instead of leaving them behind. For example, downstream clusters which are alive while the main Rancher server is no longer available.</li>
</ol>
<p>In some cases, Windows nodes added to RKE2 clusters may not be automatically updated with the desired <code>agent-tls-mode</code>. Windows clusters running at least the August patches (<code>v1.27.16</code>, <code>v1.28.13</code>, <code>v1.29.8</code>, <code>v1.30.4</code>) will be automatically updated. For Windows nodes running older versions of RKE2, this issue can be manually resolved by following these <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>.</p>
<p>If you are running Rancher <code>v2.7.x</code> Windows nodes will not automatically update, and you must follow the above <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>, with the following notes:</p>
<ol>
<li>This needs to be done for all existing Windows nodes and any new nodes provisioned.</li>
<li>You must omit the <code>DownloadWins</code> flag, and must instead manually download the <code>rancher-wins</code> version <a href="https://github.com/rancher/wins/releases/tag/v0.4.18">0.4.18</a>, or greater, from its GitHub repository and place it in the required directories:
a. <code>c:\Windows</code>
b. <code>c:\user\local\bin</code></li>
<li>You must restart the nodes after running the script, simply restarting <code>rancher-wins</code> or RKE2 will result in <a href="https://github.com/rancher/rke2/issues/5551">pod networking errors</a>. The only scenario where you do not need to completely restart the node is if the cluster is running version <code>v1.27.16</code> or higher.</li>
</ol>
<h3 id="credits">Credits</h3>
<p>This issue was found and reported by Jarkko Vesiluoma from Redtest Security.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4">https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4</a></li>
<li><a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify</a></li>
<li><a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings">https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings</a></li>
<li><a href="https://github.com/advisories/GHSA-h4h5-9833-v2p4">https://github.com/advisories/GHSA-h4h5-9833-v2p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4h5-9833-v2p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-26T21:13:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rancher] Rancher agents can be hijacked by taking over the Rancher Server URL]]></title>
        <id>https://github.com/advisories/GHSA-h4h5-9833-v2p4</id>
        <link href="https://github.com/advisories/GHSA-h4h5-9833-v2p4"/>
        <updated>2024-09-26T21:13:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A vulnerability has been identified within Rancher that can be exploited in narrow circumstances through a man-in-the-middle (MITM) attack. An attacker would need to have control of an expired domain or execute a DNS spoofing/hijacking attack against the domain to exploit this vulnerability. The targeted domain is the one used as the Rancher URL.</p>
<p>SUSE is unaware of any successful exploitation of this vulnerability, which has a high complexity bar. </p>
<p>Please consult the associated  <a href="https://attack.mitre.org/techniques/T1557/">MITRE ATT&amp;CK - Technique - Adversary-in-the-Middle</a> for further information about this attack category.</p>
<h3 id="patches">Patches</h3>
<p>A new setting, <a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings"><code>agent-tls-mode</code></a>, was added, which allows users to specify if agents will use <code>strict</code> certificate verification when connecting to Rancher. The field can be set to <code>strict</code> (which requires the agent to verify the certificate using only the Certificate Authority in the <code>cacerts</code> setting) or <code>system-store</code> (which allows the agent to verify the certificate using any Certificate Authority in the operating system's trust store). This setting will default to strict on new installs of Rancher <code>v2.8.6</code>, <code>v2.9.0</code>, and newer versions. When upgrading from a prior version, the current value will be kept. If updating from older versions, the settings must be manually configured.</p>
<p><strong>Important:</strong> For non-Windows nodes, this is fixed since <code>v2.8.6</code> and <code>v2.9.0</code>. For Windows nodes, this is fully fixed starting with <code>v2.8.8</code> and <code>v2.9.2</code></p>
<p>Patched versions include releases <code>v2.8.8</code> and <code>v2.9.2</code>.</p>
<p>For non-Windows nodes, the fix was released with <code>v2.7.15</code>. However, if you are running Rancher <code>v2.7.x</code> and have Windows nodes, you must follow the below workaround to address this issue on those nodes.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you can't update, please follow the standard security practices including:</p>
<ol>
<li>Properly control the expiration and ownership of the domain used as the Rancher URL (the <code>server-url</code> of the Rancher cluster).</li>
<li>Enabling DNSSEC as a way to protect against DNS spoofing or hijacking attacks. </li>
<li>Properly clean up and decommission unused clusters and downstream clusters, instead of leaving them behind. For example, downstream clusters which are alive while the main Rancher server is no longer available.</li>
</ol>
<p>In some cases, Windows nodes added to RKE2 clusters may not be automatically updated with the desired <code>agent-tls-mode</code>. Windows clusters running at least the August patches (<code>v1.27.16</code>, <code>v1.28.13</code>, <code>v1.29.8</code>, <code>v1.30.4</code>) will be automatically updated. For Windows nodes running older versions of RKE2, this issue can be manually resolved by following these <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>.</p>
<p>If you are running Rancher <code>v2.7.x</code> Windows nodes will not automatically update, and you must follow the above <a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">instructions</a>, with the following notes:</p>
<ol>
<li>This needs to be done for all existing Windows nodes and any new nodes provisioned.</li>
<li>You must omit the <code>DownloadWins</code> flag, and must instead manually download the <code>rancher-wins</code> version <a href="https://github.com/rancher/wins/releases/tag/v0.4.18">0.4.18</a>, or greater, from its GitHub repository and place it in the required directories:
a. <code>c:\Windows</code>
b. <code>c:\user\local\bin</code></li>
<li>You must restart the nodes after running the script, simply restarting <code>rancher-wins</code> or RKE2 will result in <a href="https://github.com/rancher/rke2/issues/5551">pod networking errors</a>. The only scenario where you do not need to completely restart the node is if the cluster is running version <code>v1.27.16</code> or higher.</li>
</ol>
<h3 id="credits">Credits</h3>
<p>This issue was found and reported by Jarkko Vesiluoma from Redtest Security.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rancher/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rancher/issues/new/choose">Rancher</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4">https://github.com/rancher/rancher/security/advisories/GHSA-h4h5-9833-v2p4</a></li>
<li><a href="https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify">https://github.com/rancherlabs/support-tools/tree/master/windows-agent-strict-verify</a></li>
<li><a href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings">https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/tls-settings</a></li>
<li><a href="https://github.com/advisories/GHSA-h4h5-9833-v2p4">https://github.com/advisories/GHSA-h4h5-9833-v2p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h4h5-9833-v2p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-26T21:13:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ory/kratos] Ory Kratos's setting required_aal `highest_available` does not properly respect code + mfa credentials]]></title>
        <id>https://github.com/advisories/GHSA-wc43-73w7-x2f5</id>
        <link href="https://github.com/advisories/GHSA-wc43-73w7-x2f5"/>
        <updated>2024-09-26T21:11:02.000Z</updated>
        <content type="html"><![CDATA[<h2 id="preconditions">Preconditions</h2>
<ul>
<li>The <code>code</code> login method is enabled with the <code>passwordless_enabled</code> flag set to <code>true</code> .</li>
<li>A 2FA method such as <code>totp</code> is enabled.</li>
<li><code>required_aal</code> of the whomai check or the settings flow is set to <code>highest_available</code>. AAL stands for Authenticator Assurance Levels and can range from 0 (no factor) to 2 (two factors).</li>
<li>A user uses the <code>code</code> method as the <strong>only</strong> login method available. They do not have a password or any other first factor credential enabled.</li>
<li>The user has 2FA enabled.</li>
<li>The user’s <code>available_aal</code> is incorrectly stored in the database as <code>aal1</code> or <code>aal0</code> or <code>NULL</code>.</li>
<li>A user signs in using the code method, but does not complete the 2FA challenge.</li>
</ul>
<p><strong>Example server configuration</strong></p>
<p>Below you will find an vulnerable example configuration. Keep in mind that, for the account to be vulnerable, the account must have no first factor except the <code>code</code> method enabled plus a second factor.</p>
<pre><code>selfservice:
  methods:
    code:
      # The `code` login method is enabled with the `passwordless_enabled` flag set to `true`
      passwordless_enabled: true
    totp:
      # 2FA method such as `totp` is enabled
      enabled: true
  flows:
    settings:
      # This is set
      required_aal: highest_available
session:
  whoami:
    # Or this
    required_aal: highest_available
</code></pre>
<h2 id="impact">Impact</h2>
<p>Given the preconditions, the <code>highest_available</code> setting will incorrectly assume that the identity’s highest available AAL is <code>aal1</code> even though it really is <code>aal2</code>. This means that the <code>highest_available</code> configuration will act as if the user has only one factor set up, for that particular user. This means that they can call the settings and whoami endpoint without a <code>aal2</code> session, even though that should be disallowed.</p>
<p>An attacker would need to steal or guess a valid login OTP of a user who has only OTP for login enabled and who has an incorrect <code>available_aal</code> value stored, to exploit this vulnerability.</p>
<p>All other aspects of the session (e.g. the session’s aal) are not impacted by this issue.</p>
<p>On Ory Network, only 0,00066% of registered users were affected by this issue, and most of those users appeared to be test users. Their respective AAL values have since been updated and they are no longer vulnerable to this attack.</p>
<h3 id="patches">Patches</h3>
<p>Version 1.3.0 is not affected by this issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you require 2FA please disable the passwordless code login method. If that is not possible, check the sessions <code>aal</code> to identify if the user has <code>aal1</code> or <code>aal2</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ory/kratos/security/advisories/GHSA-wc43-73w7-x2f5">https://github.com/ory/kratos/security/advisories/GHSA-wc43-73w7-x2f5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-45042">https://nvd.nist.gov/vuln/detail/CVE-2024-45042</a></li>
<li><a href="https://github.com/advisories/GHSA-wc43-73w7-x2f5">https://github.com/advisories/GHSA-wc43-73w7-x2f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wc43-73w7-x2f5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-26T17:49:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[mellium.im/xmpp] Mellium allows Authentication Bypass by Spoofing]]></title>
        <id>https://github.com/advisories/GHSA-98hf-m87w-cq6h</id>
        <link href="https://github.com/advisories/GHSA-98hf-m87w-cq6h"/>
        <updated>2024-09-25T18:27:10.000Z</updated>
        <content type="html"><![CDATA[<p>Mellium mellium.im/xmpp 0.0.1 through 0.21.4 allows response spoofing because the stanza type is not checked. This is fixed in 0.22.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-46957">https://nvd.nist.gov/vuln/detail/CVE-2024-46957</a></li>
<li><a href="https://codeberg.org/mellium/xmpp/releases">https://codeberg.org/mellium/xmpp/releases</a></li>
<li><a href="https://mellium.im/cve/cve-2024-46957">https://mellium.im/cve/cve-2024-46957</a></li>
<li><a href="https://codeberg.org/mellium/xmpp/releases/tag/v0.22.0">https://codeberg.org/mellium/xmpp/releases/tag/v0.22.0</a></li>
<li><a href="https://github.com/advisories/GHSA-98hf-m87w-cq6h">https://github.com/advisories/GHSA-98hf-m87w-cq6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-98hf-m87w-cq6h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-09-25T03:30:36.000Z</published>
    </entry>
</feed>