<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-10-31T22:01:16.453Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki/cmd/octorpki] OctoRPKI crashes when max iterations is reached]]></title>
        <id>https://github.com/advisories/GHSA-pmw9-567p-68pc</id>
        <link href="https://github.com/advisories/GHSA-pmw9-567p-68pc"/>
        <updated>2022-10-31T19:23:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Attackers can create long chains of CAs that would lead to OctoRPKI exceeding its max iterations parameter that would cause the program to crash and not finish the validation and thus a denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in v1.4.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-pmw9-567p-68pc">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-pmw9-567p-68pc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3616">https://nvd.nist.gov/vuln/detail/CVE-2022-3616</a></li>
<li><a href="https://github.com/advisories/GHSA-pmw9-567p-68pc">https://github.com/advisories/GHSA-pmw9-567p-68pc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pmw9-567p-68pc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-31T18:45:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-gitea/gitea] Gitea vulnerable to Argument Injection]]></title>
        <id>https://github.com/advisories/GHSA-w8xw-7crf-h23x</id>
        <link href="https://github.com/advisories/GHSA-w8xw-7crf-h23x"/>
        <updated>2022-10-31T15:57:48.000Z</updated>
        <content type="html"><![CDATA[<p>Gitea before 1.17.3 does not sanitize and escape refs in the git backend. Arguments to git commands are mishandled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42968">https://nvd.nist.gov/vuln/detail/CVE-2022-42968</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/21463">https://github.com/go-gitea/gitea/pull/21463</a></li>
<li><a href="https://github.com/go-gitea/gitea/releases/tag/v1.17.3">https://github.com/go-gitea/gitea/releases/tag/v1.17.3</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-14">https://security.gentoo.org/glsa/202210-14</a></li>
<li><a href="https://github.com/advisories/GHSA-w8xw-7crf-h23x">https://github.com/advisories/GHSA-w8xw-7crf-h23x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8xw-7crf-h23x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-16T12:00:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/text/language] Denial of service in golang.org/x/text/language]]></title>
        <id>https://github.com/advisories/GHSA-69ch-w2m2-3vjp</id>
        <link href="https://github.com/advisories/GHSA-69ch-w2m2-3vjp"/>
        <updated>2022-10-28T20:11:27.000Z</updated>
        <content type="html"><![CDATA[<p>The BCP 47 tag parser has quadratic time complexity due to inherent aspects of its design. Since the parser is, by design, exposed to untrusted user input, this can be leveraged to force a program to consume significant time parsing Accept-Language headers. The parser cannot be easily rewritten to fix this behavior for various reasons. Instead the solution implemented in this CL is to limit the total complexity of tags passed into ParseAcceptLanguage by limiting the number of dashes in the string to 1000. This should be more than enough for the majority of real world use cases, where the number of tags being sent is likely to be in the single digits.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32149">https://nvd.nist.gov/vuln/detail/CVE-2022-32149</a></li>
<li><a href="https://go.dev/cl/442235">https://go.dev/cl/442235</a></li>
<li><a href="https://go.dev/issue/56152">https://go.dev/issue/56152</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ">https://groups.google.com/g/golang-announce/c/-hjNw559_tE/m/KlGTfid5CAAJ</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1059">https://pkg.go.dev/vuln/GO-2022-1059</a></li>
<li><a href="https://github.com/golang/go/issues/56152">https://github.com/golang/go/issues/56152</a></li>
<li><a href="https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c">https://github.com/golang/text/commit/434eadcdbc3b0256971992e8c70027278364c72c</a></li>
<li><a href="https://github.com/advisories/GHSA-69ch-w2m2-3vjp">https://github.com/advisories/GHSA-69ch-w2m2-3vjp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-69ch-w2m2-3vjp</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-14T19:00:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/boundary] Hashicorp Boundary vulnerable to clickjacking]]></title>
        <id>https://github.com/advisories/GHSA-xqv2-3vvq-qg6r</id>
        <link href="https://github.com/advisories/GHSA-xqv2-3vvq-qg6r"/>
        <updated>2022-10-31T19:22:56.000Z</updated>
        <content type="html"><![CDATA[<p>Hashicorp Boundary is vulnerable to Clickjacking which allow for the interception of login credentials, re-direction of users to malicious sites, or causing users to perform malicious actions on the site.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36182">https://nvd.nist.gov/vuln/detail/CVE-2022-36182</a></li>
<li><a href="https://owasp.org/www-community/attacks/Clickjacking">https://owasp.org/www-community/attacks/Clickjacking</a></li>
<li><a href="https://packetstormsecurity.com/files/168654/Hashicorp-Boundary-Clickjacking.html">https://packetstormsecurity.com/files/168654/Hashicorp-Boundary-Clickjacking.html</a></li>
<li><a href="https://github.com/advisories/GHSA-xqv2-3vvq-qg6r">https://github.com/advisories/GHSA-xqv2-3vvq-qg6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xqv2-3vvq-qg6r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-27T19:00:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/flipped-aurora/gin-vue-admin/server] Gin-vue-admin subject to Remote Code Execution via file upload vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7gc4-r5jr-9hxv</id>
        <link href="https://github.com/advisories/GHSA-7gc4-r5jr-9hxv"/>
        <updated>2022-10-27T18:38:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Gin-vue-admin &lt; 2.5.4 has File upload vulnerabilities。
File upload vulnerabilities are when a web server allows users to upload files to its filesystem without sufficiently validating things like their name, type, contents, or size. Failing to properly enforce restrictions on these could mean that even a basic image upload function can be used to upload arbitrary and potentially dangerous files instead. This could even include server-side script files that enable remote code execution.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/flipped-aurora/gin-vue-admin/pull/1264">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></p>
<h3 id="workarounds">Workarounds</h3>
<p><a href="https://github.com/flipped-aurora/gin-vue-admin/pull/1264">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></p>
<h3 id="references">References</h3>
<p>#1263 </p>
<h3 id="for-more-information">For more information</h3>
<p>The plugin installation function of Gin-Vue-Admin allows users to download zip packages from the plugin market and upload them for installation. This function has an arbitrary file upload vulnerability. A malicious attacker can upload a constructed zip package to traverse the directory and upload or overwrite arbitrary files on the server side.</p>
<p>The affected code <a href="https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go</a> line 880 called the <code>utils.Unzip</code> method</p>
<pre><code>paths, err := utils.Unzip(GVAPLUGPINATH+file.Filename, GVAPLUGPINATH)
    paths = filterFile(paths)
    var webIndex = -1
    var serverIndex = -1
    for i := range paths {
        paths[i] = filepath.ToSlash(paths[i])
        pathArr := strings.Split(paths[i], "/")
        ln := len(pathArr)
        if ln &lt; 2 {
            continue
        }
        if pathArr[ln-2] == "server" &amp;&amp; pathArr[ln-1] == "plugin" {
            serverIndex = i
        }
        if pathArr[ln-2] == "web" &amp;&amp; pathArr[ln-1] == "plugin" {
            webIndex = i
        }
    }
    if webIndex == -1 &amp;&amp; serverIndex == -1 {
        zap.L().Error("非标准插件，请按照文档自动迁移使用")
        return webIndex, serverIndex, errors.New("非标准插件，请按照文档自动迁移使用")
    }
...
</code></pre>
<p>The <a href="https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/utils/zip.go">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/utils/zip.go</a> code defines the <code>utils.Unzip</code> method</p>
<pre><code>//解压
func Unzip(zipFile string, destDir string) ([]string, error) {
    zipReader, err := zip.OpenReader(zipFile)
    var paths []string
    if err != nil {
        return []string{}, err
    }
    defer zipReader.Close()

    for _, f := range zipReader.File {
        fpath := filepath.Join(destDir, f.Name)
        paths = append(paths, fpath)
        if f.FileInfo().IsDir() {
            os.MkdirAll(fpath, os.ModePerm)
...
</code></pre>
<p>It can be analyzed that after uploading a zip compressed file, the <code>Unzip</code> method will be called to decompress the compressed file, and then judge whether the compressed file contains the fixed directory structure of server, web, and plugin.</p>
<p>Whether the zip file is correct or not, it will be decompressed first. If the directory does not exist, it will be created automatically. Therefore, malicious zip packages can be constructed, and directory traversal can be performed during automatic decompression to upload or overwrite any file.</p>
<p>Use the Zip Slip vulnerability to construct a malicious zip package with <code>../../../../</code> filenames, and upload the malicious zip package to trigger the vulnerability.</p>
<p><img alt="1" src="https://user-images.githubusercontent.com/113822259/197387942-e40c188d-cff0-4da3-84ba-7ca670d9bf72.png">
<img alt="2" src="https://user-images.githubusercontent.com/113822259/197387956-cef8fd0d-978a-47ae-a65e-e28367f6a0b8.png"></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-7gc4-r5jr-9hxv">https://github.com/flipped-aurora/gin-vue-admin/security/advisories/GHSA-7gc4-r5jr-9hxv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39345">https://nvd.nist.gov/vuln/detail/CVE-2022-39345</a></li>
<li><a href="https://github.com/flipped-aurora/gin-vue-admin/issues/1263">https://github.com/flipped-aurora/gin-vue-admin/issues/1263</a></li>
<li><a href="https://github.com/flipped-aurora/gin-vue-admin/pull/1264">https://github.com/flipped-aurora/gin-vue-admin/pull/1264</a></li>
<li><a href="https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go">https://github.com/flipped-aurora/gin-vue-admin/blob/main/server/service/system/sys_auto_code.go</a></li>
<li><a href="https://github.com/advisories/GHSA-7gc4-r5jr-9hxv">https://github.com/advisories/GHSA-7gc4-r5jr-9hxv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7gc4-r5jr-9hxv</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-25T21:02:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/zalando/skipper] Skipper vulnerable to SSRF via X-Skipper-Proxy]]></title>
        <id>https://github.com/advisories/GHSA-f2rj-m42r-6jm2</id>
        <link href="https://github.com/advisories/GHSA-f2rj-m42r-6jm2"/>
        <updated>2022-10-25T20:22:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Skipper prior to version v0.13.236 is vulnerable to server-side request forgery (SSRF). An attacker can exploit a vulnerable version of proxy to access the internal metadata server or other unauthenticated URLs by adding an specific header (X-Skipper-Proxy) to the http request.</p>
<h3 id="patches">Patches</h3>
<p>The problem was patched in version <a href="https://github.com/zalando/skipper/releases/tag/v0.13.237">https://github.com/zalando/skipper/releases/tag/v0.13.237</a>.
Users need to upgrade to skipper <code>&gt;=v0.13.237</code>.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Use <code>dropRequestHeader("X-Skipper-Proxy")</code> filter</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/zalando/skipper/releases/tag/v0.13.237">https://github.com/zalando/skipper/releases/tag/v0.13.237</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/zalando/skipper/issues/new/choose">https://github.com/zalando/skipper/issues/new/choose</a></li>
<li>Chat with us in slack: <a href="https://app.slack.com/client/T029RQSE6/C82Q5JNH5">https://app.slack.com/client/T029RQSE6/C82Q5JNH5</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/zalando/skipper/security/advisories/GHSA-f2rj-m42r-6jm2">https://github.com/zalando/skipper/security/advisories/GHSA-f2rj-m42r-6jm2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38580">https://nvd.nist.gov/vuln/detail/CVE-2022-38580</a></li>
<li><a href="https://gist.github.com/Fadavvi/9fffcfa4aaa9e25b77cfe7b3044b2857#file-cve-2022-38580">https://gist.github.com/Fadavvi/9fffcfa4aaa9e25b77cfe7b3044b2857#file-cve-2022-38580</a></li>
<li><a href="https://pastebin.com/dXxpgPAK">https://pastebin.com/dXxpgPAK</a></li>
<li><a href="http://skipper.com">http://skipper.com</a></li>
<li><a href="http://zalando.com">http://zalando.com</a></li>
<li><a href="https://github.com/advisories/GHSA-f2rj-m42r-6jm2">https://github.com/advisories/GHSA-f2rj-m42r-6jm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f2rj-m42r-6jm2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-25T20:22:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA Authorization Bypass via tupleset wildcard]]></title>
        <id>https://github.com/advisories/GHSA-vj4m-83m8-xpw5</id>
        <link href="https://github.com/advisories/GHSA-vj4m-83m8-xpw5"/>
        <updated>2022-10-27T18:36:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>During our internal security assessment, it was discovered that OpenFGA versions <code>v0.2.3</code> and prior are vulnerable to authorization bypass under certain conditions.</p>
<h3 id="am-i-affected">Am I affected?</h3>
<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> and you added a tuple with a wildcard (*) assigned to a tupleset relation (the right hand side of a ‘from’ statement).</p>
<h3 id="how-to-fix-that">How to fix that?</h3>
<p>Upgrade to version <code>v0.2.4</code>.</p>
<h3 id="backward-compatibility">Backward Compatibility</h3>
<p>This update is not backward compatible with any authorization model that uses wildcard on a tupleset relation.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-vj4m-83m8-xpw5">https://github.com/openfga/openfga/security/advisories/GHSA-vj4m-83m8-xpw5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39341">https://nvd.nist.gov/vuln/detail/CVE-2022-39341</a></li>
<li><a href="https://github.com/openfga/openfga/commit/b466769cc100b2065047786578718d313f52695b">https://github.com/openfga/openfga/commit/b466769cc100b2065047786578718d313f52695b</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v0.2.4">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-vj4m-83m8-xpw5">https://github.com/advisories/GHSA-vj4m-83m8-xpw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vj4m-83m8-xpw5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-25T20:21:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA Authorization Bypass]]></title>
        <id>https://github.com/advisories/GHSA-f4mm-2r69-mg5f</id>
        <link href="https://github.com/advisories/GHSA-f4mm-2r69-mg5f"/>
        <updated>2022-10-27T18:37:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>During our internal security assessment, it was discovered that OpenFGA versions <code>v0.2.3</code> and prior are vulnerable to authorization bypass under certain conditions.</p>
<h3 id="am-i-affected">Am I Affected?</h3>
<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> or prior, and your model has a relation defined as a tupleset (the right hand side of a ‘from’ statement) that involves anything other than a direct relationship (e.g. ‘as self’)</p>
<h3 id="how-to-fix-that">How to fix that?</h3>
<p>Upgrade to version <code>v0.2.4</code>.</p>
<h3 id="backward-compatibility">Backward Compatibility</h3>
<p>This update is not backward compatible.
Any model involving rewritten tupleset relations will no longer be acceptable and has to be modified.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-f4mm-2r69-mg5f">https://github.com/openfga/openfga/security/advisories/GHSA-f4mm-2r69-mg5f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39342">https://nvd.nist.gov/vuln/detail/CVE-2022-39342</a></li>
<li><a href="https://github.com/openfga/openfga/commit/c8db1ee3d2a366f18e585dd33236340e76e784c4">https://github.com/openfga/openfga/commit/c8db1ee3d2a366f18e585dd33236340e76e784c4</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v0.2.4">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-f4mm-2r69-mg5f">https://github.com/advisories/GHSA-f4mm-2r69-mg5f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4mm-2r69-mg5f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-25T20:21:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA subject to Information Disclosure via streamed-list-objects endpoint]]></title>
        <id>https://github.com/advisories/GHSA-95x7-mh78-7w2r</id>
        <link href="https://github.com/advisories/GHSA-95x7-mh78-7w2r"/>
        <updated>2022-10-27T18:35:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>During our internal security assessment, it was discovered that <code>streamed-list-objects</code> endpoint was not validating the authorization header resulting in the disclosure of objects in the store.</p>
<h3 id="am-i-affected">Am I Affected?</h3>
<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version <code>v0.2.3</code> or prior and you are exposing the OpenFGA service to the internet.</p>
<h3 id="how-to-fix-that">How to fix that?</h3>
<p>Upgrade to version <code>v0.2.4</code>.</p>
<h3 id="backward-compatibility">Backward Compatibility</h3>
<p>This update is backward compatible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-95x7-mh78-7w2r">https://github.com/openfga/openfga/security/advisories/GHSA-95x7-mh78-7w2r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39340">https://nvd.nist.gov/vuln/detail/CVE-2022-39340</a></li>
<li><a href="https://github.com/openfga/openfga/commit/779d73d4b6d067ee042ec9b59fec707eed71e42f">https://github.com/openfga/openfga/commit/779d73d4b6d067ee042ec9b59fec707eed71e42f</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v0.2.4">https://github.com/openfga/openfga/releases/tag/v0.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-95x7-mh78-7w2r">https://github.com/advisories/GHSA-95x7-mh78-7w2r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-95x7-mh78-7w2r</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-25T20:13:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/free5gc/free5gc] free5GC vulnerable to malformed NGAP message crashing the AMF and NGAP decoders]]></title>
        <id>https://github.com/advisories/GHSA-59hj-62f5-fgmc</id>
        <link href="https://github.com/advisories/GHSA-59hj-62f5-fgmc"/>
        <updated>2022-10-25T19:59:38.000Z</updated>
        <content type="html"><![CDATA[<p>In free5GC 3.2.1, a malformed NGAP message can crash the AMF and NGAP decoders via an index-out-of-range panic in <code>aper.GetBitString</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-43677">https://nvd.nist.gov/vuln/detail/CVE-2022-43677</a></li>
<li><a href="https://github.com/free5gc/free5gc/issues/402">https://github.com/free5gc/free5gc/issues/402</a></li>
<li><a href="https://github.com/advisories/GHSA-59hj-62f5-fgmc">https://github.com/advisories/GHSA-59hj-62f5-fgmc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59hj-62f5-fgmc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-24T19:00:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/concourse/concourse] Team scope authorization bypass when Post/Put request with :team_name in body, allows HTTP parameter pollution ]]></title>
        <id>https://github.com/advisories/GHSA-5jp2-vwrj-99rf</id>
        <link href="https://github.com/advisories/GHSA-5jp2-vwrj-99rf"/>
        <updated>2022-10-19T20:26:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For some Post/Put Concourse endpoint containing <code>:team_name</code> in the URL, a Concourse user can send a request with body including <code>:team_name=team2</code> to bypass team scope check to gain access to certain resources belong to any other team. The user only needs a valid user session and belongs to team2.</p>
<p>Exploitable endpoints:</p>
<pre><code>{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/builds/:build_name", Method: "POST", Name: RerunJobBuild},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/pause", Method: "PUT", Name: PauseJob},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/unpause", Method: "PUT", Name: UnpauseJob},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/schedule", Method: "PUT", Name: ScheduleJob},

{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/pause", Method: "PUT", Name: PausePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/unpause", Method: "PUT", Name: UnpausePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/expose", Method: "PUT", Name: ExposePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/hide", Method: "PUT", Name: HidePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/rename", Method: "PUT", Name: RenamePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/archive", Method: "PUT", Name: ArchivePipeline},

{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/enable", Method: "PUT", Name: EnableResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/disable", Method: "PUT", Name: DisableResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/pin", Method: "PUT", Name: PinResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/unpin", Method: "PUT", Name: UnpinResource},
    
{Path: "/api/v1/teams/:team_name/artifacts", Method: "POST", Name: CreateArtifact},
</code></pre>
<h3 id="steps-to-reproduce">Steps to reproduce</h3>
<ol>
<li>Set up a Concourse deployment with team 1 (with pipeline 1) and team 2. User is in team 2 but not team 1.</li>
<li>Login as user to team 2.</li>
</ol>
<pre><code>fly -t ci login -n team2 -u user -p password
</code></pre>
<ol start="3">
<li>Try pausing pipeline 1 in team 1 using fly. Verify the command output is <code>pipeline 'pipeline1' not found</code>.</li>
</ol>
<pre><code>fly -t ci pause-pipeline -p pipeline1
</code></pre>
<ol start="4">
<li>Send a customized request through <code>fly curl</code> command intend to pause pipeline 1 again.</li>
</ol>
<pre><code>fly -t ci curl /api/v1/teams/team1/pipelines/pipeline1/pause -- -X PUT -d ":team_name=team2" -H "Content-type: application/x-www-form-urlencoded"
</code></pre>
<ol start="5">
<li>pipeline 1 in team 1 will be paused.</li>
</ol>
<p>In step 4, the parameter pollution would allow an user from any team to pause a pipeline that belongs to other team.</p>
<h3 id="patches">Patches</h3>
<p>Concourse <a href="https://github.com/concourse/concourse/releases/tag/v6.7.9">v6.7.9</a> and <a href="https://github.com/concourse/concourse/releases/tag/v7.8.3">v7.8.3</a> were both released with a fix on October 12, 2022.</p>
<p>Instead of using <a href="https://pkg.go.dev/net/http#Request.FormValue"><code>FormValue</code></a> to parse team_name in the request, where allows body parameters to take precedence over URL query string values, both patch versions are now using <code>URL.Query().Get()</code> over multiple scope handlers to prevent the parameter pollution.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds for existing versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/concourse/concourse/pull/8566">https://github.com/concourse/concourse/pull/8566</a>: PR with the fix</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, you may reach us privately at <a href="mailto:security@concourse-ci.org">security@concourse-ci.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf">https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf</a></li>
<li><a href="https://github.com/concourse/concourse/pull/8566">https://github.com/concourse/concourse/pull/8566</a></li>
<li><a href="https://github.com/concourse/concourse/pull/8580">https://github.com/concourse/concourse/pull/8580</a></li>
<li><a href="https://github.com/concourse/concourse/releases/tag/v6.7.9">https://github.com/concourse/concourse/releases/tag/v6.7.9</a></li>
<li><a href="https://github.com/concourse/concourse/releases/tag/v7.8.3">https://github.com/concourse/concourse/releases/tag/v7.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-5jp2-vwrj-99rf">https://github.com/advisories/GHSA-5jp2-vwrj-99rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jp2-vwrj-99rf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T20:26:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/concourse/concourse] Team scope authorization bypass when Post/Put request with :team_name in body, allows HTTP parameter pollution ]]></title>
        <id>https://github.com/advisories/GHSA-5jp2-vwrj-99rf</id>
        <link href="https://github.com/advisories/GHSA-5jp2-vwrj-99rf"/>
        <updated>2022-10-19T20:26:06.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>For some Post/Put Concourse endpoint containing <code>:team_name</code> in the URL, a Concourse user can send a request with body including <code>:team_name=team2</code> to bypass team scope check to gain access to certain resources belong to any other team. The user only needs a valid user session and belongs to team2.</p>
<p>Exploitable endpoints:</p>
<pre><code>{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/builds/:build_name", Method: "POST", Name: RerunJobBuild},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/pause", Method: "PUT", Name: PauseJob},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/unpause", Method: "PUT", Name: UnpauseJob},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/jobs/:job_name/schedule", Method: "PUT", Name: ScheduleJob},

{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/pause", Method: "PUT", Name: PausePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/unpause", Method: "PUT", Name: UnpausePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/expose", Method: "PUT", Name: ExposePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/hide", Method: "PUT", Name: HidePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/rename", Method: "PUT", Name: RenamePipeline},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/archive", Method: "PUT", Name: ArchivePipeline},

{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/enable", Method: "PUT", Name: EnableResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/disable", Method: "PUT", Name: DisableResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/versions/:resource_config_version_id/pin", Method: "PUT", Name: PinResourceVersion},
{Path: "/api/v1/teams/:team_name/pipelines/:pipeline_name/resources/:resource_name/unpin", Method: "PUT", Name: UnpinResource},
    
{Path: "/api/v1/teams/:team_name/artifacts", Method: "POST", Name: CreateArtifact},
</code></pre>
<h3 id="steps-to-reproduce">Steps to reproduce</h3>
<ol>
<li>Set up a Concourse deployment with team 1 (with pipeline 1) and team 2. User is in team 2 but not team 1.</li>
<li>Login as user to team 2.</li>
</ol>
<pre><code>fly -t ci login -n team2 -u user -p password
</code></pre>
<ol start="3">
<li>Try pausing pipeline 1 in team 1 using fly. Verify the command output is <code>pipeline 'pipeline1' not found</code>.</li>
</ol>
<pre><code>fly -t ci pause-pipeline -p pipeline1
</code></pre>
<ol start="4">
<li>Send a customized request through <code>fly curl</code> command intend to pause pipeline 1 again.</li>
</ol>
<pre><code>fly -t ci curl /api/v1/teams/team1/pipelines/pipeline1/pause -- -X PUT -d ":team_name=team2" -H "Content-type: application/x-www-form-urlencoded"
</code></pre>
<ol start="5">
<li>pipeline 1 in team 1 will be paused.</li>
</ol>
<p>In step 4, the parameter pollution would allow an user from any team to pause a pipeline that belongs to other team.</p>
<h3 id="patches">Patches</h3>
<p>Concourse <a href="https://github.com/concourse/concourse/releases/tag/v6.7.9">v6.7.9</a> and <a href="https://github.com/concourse/concourse/releases/tag/v7.8.3">v7.8.3</a> were both released with a fix on October 12, 2022.</p>
<p>Instead of using <a href="https://pkg.go.dev/net/http#Request.FormValue"><code>FormValue</code></a> to parse team_name in the request, where allows body parameters to take precedence over URL query string values, both patch versions are now using <code>URL.Query().Get()</code> over multiple scope handlers to prevent the parameter pollution.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds for existing versions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/concourse/concourse/pull/8566">https://github.com/concourse/concourse/pull/8566</a>: PR with the fix</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, you may reach us privately at <a href="mailto:security@concourse-ci.org">security@concourse-ci.org</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf">https://github.com/concourse/concourse/security/advisories/GHSA-5jp2-vwrj-99rf</a></li>
<li><a href="https://github.com/concourse/concourse/pull/8566">https://github.com/concourse/concourse/pull/8566</a></li>
<li><a href="https://github.com/concourse/concourse/pull/8580">https://github.com/concourse/concourse/pull/8580</a></li>
<li><a href="https://github.com/concourse/concourse/releases/tag/v6.7.9">https://github.com/concourse/concourse/releases/tag/v6.7.9</a></li>
<li><a href="https://github.com/concourse/concourse/releases/tag/v7.8.3">https://github.com/concourse/concourse/releases/tag/v7.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-5jp2-vwrj-99rf">https://github.com/advisories/GHSA-5jp2-vwrj-99rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jp2-vwrj-99rf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T20:26:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/image-reflector-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/image-automation-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/notification-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/helm-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/kustomize-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/source-controller] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/fluxcd/flux2] Improper use of metav1.Duration allows for Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</id>
        <link href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v"/>
        <updated>2022-10-25T20:37:24.000Z</updated>
        <content type="html"><![CDATA[<p>Flux controllers within the affected versions range are vulnerable to a denial of service attack. Users that have permissions to change Flux’s objects, either through a Flux source or directly within a cluster, can provide invalid data to fields <code>.spec.interval</code> or <code>.spec.timeout</code> (and structured variations of these fields), causing the entire object type to stop being processed.</p>
<p>The issue has two root causes: a) the Kubernetes type <code>metav1.Duration</code> not being fully compatible with the Go type <code>time.Duration</code> as explained on <a href="https://github.com/kubernetes/apimachinery/issues/131">upstream report</a>; b) lack of validation within Flux to restrict allowed values.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Admission controllers can be employed to restrict the values that can be used for fields <code>.spec.interval</code> and <code>.spec.timeout</code>, however upgrading to the latest versions is still the recommended mitigation.</p>
<h3 id="credits">Credits</h3>
<p>This issue was reported by Alexander Block (@codablock) through the Flux security mailing list (as <a href="https://fluxcd.io/security/#report-a-vulnerability">recommended</a>).</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in any of the affected repositories.</li>
<li>Contact us at the CNCF Flux channel.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/fluxcd/flux2/security/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
<li><a href="https://github.com/kubernetes/apimachinery/issues/131">https://github.com/kubernetes/apimachinery/issues/131</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39272">https://nvd.nist.gov/vuln/detail/CVE-2022-39272</a></li>
<li><a href="https://github.com/advisories/GHSA-f4p5-x4vc-mh4v">https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f4p5-x4vc-mh4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-19T18:40:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/brokercap/Bifrost] Bifrost vulnerable to authentication check flaw that leads to authentication bypass]]></title>
        <id>https://github.com/advisories/GHSA-mxrx-fg8p-5p5j</id>
        <link href="https://github.com/advisories/GHSA-mxrx-fg8p-5p5j"/>
        <updated>2022-10-21T13:03:48.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The admin and monitor user groups need to be authenticated by username and password. If we delete the X-Requested-With: XMLHttpRequest field in the request header,the authentication will be bypassed.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/brockercap/Bifrost/pull/201">https://github.com/brockercap/Bifrost/pull/201</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Upgrade to the latest version</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/brokercap/Bifrost/security/advisories/GHSA-mxrx-fg8p-5p5j">https://github.com/brokercap/Bifrost/security/advisories/GHSA-mxrx-fg8p-5p5j</a></li>
<li><a href="https://github.com/brockercap/Bifrost/pull/201">https://github.com/brockercap/Bifrost/pull/201</a></li>
<li><a href="https://github.com/brokercap/Bifrost/commit/63da5c8eb7eb21639ea7ac199fe10b5e07b03a8a">https://github.com/brokercap/Bifrost/commit/63da5c8eb7eb21639ea7ac199fe10b5e07b03a8a</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39267">https://nvd.nist.gov/vuln/detail/CVE-2022-39267</a></li>
<li><a href="https://github.com/advisories/GHSA-mxrx-fg8p-5p5j">https://github.com/advisories/GHSA-mxrx-fg8p-5p5j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mxrx-fg8p-5p5j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-18T19:57:50.000Z</published>
    </entry>
</feed>