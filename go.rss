<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-07-12T00:22:12.689Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge's Websocket Client in package Viaduct]]></title>
        <id>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</id>
        <link href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r"/>
        <updated>2022-07-11T21:06:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A large response received by the viaduct WSClient can cause a DoS from memory exhaustion. The entire body of the response is being read into memory which could allow an attacker to send a request that returns a response with a large body.
The consequence of the exhaustion is that the process which invokes a WSClient will be in a denial of service. It will be affected If users which are authenticated to the edge side and connect from the edge side to <code>cloudhub</code> through WebSocket protocol.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r</a></li>
<li><a href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/advisories/GHSA-6wvc-6pww-qr4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</uri>
        </author>
        <published>2022-07-11T21:06:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge's Websocket Client in package Viaduct]]></title>
        <id>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</id>
        <link href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r"/>
        <updated>2022-07-11T21:06:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A large response received by the viaduct WSClient can cause a DoS from memory exhaustion. The entire body of the response is being read into memory which could allow an attacker to send a request that returns a response with a large body.
The consequence of the exhaustion is that the process which invokes a WSClient will be in a denial of service. It will be affected If users which are authenticated to the edge side and connect from the edge side to <code>cloudhub</code> through WebSocket protocol.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r</a></li>
<li><a href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/advisories/GHSA-6wvc-6pww-qr4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</uri>
        </author>
        <published>2022-07-11T21:06:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge's Websocket Client in package Viaduct]]></title>
        <id>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</id>
        <link href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r"/>
        <updated>2022-07-11T21:06:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A large response received by the viaduct WSClient can cause a DoS from memory exhaustion. The entire body of the response is being read into memory which could allow an attacker to send a request that returns a response with a large body.
The consequence of the exhaustion is that the process which invokes a WSClient will be in a denial of service. It will be affected If users which are authenticated to the edge side and connect from the edge side to <code>cloudhub</code> through WebSocket protocol.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-6wvc-6pww-qr4r</a></li>
<li><a href="https://github.com/advisories/GHSA-6wvc-6pww-qr4r">https://github.com/advisories/GHSA-6wvc-6pww-qr4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6wvc-6pww-qr4r</uri>
        </author>
        <published>2022-07-11T21:06:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud Stream and Edge Stream]]></title>
        <id>https://github.com/advisories/GHSA-wrcr-x4qj-j543</id>
        <link href="https://github.com/advisories/GHSA-wrcr-x4qj-j543"/>
        <updated>2022-07-11T21:05:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service.
Only an authenticated user can cause this issue. It will be affected only when users enable cloudStream module in the config file cloudcore.yaml and enable edgeStream module in the config file edgecore.yaml as below.
cloudcore.yaml:</p>
<pre><code>modules:
  ...
  cloudStream:
    enable: true
</code></pre>
<p>edgecore.yaml:</p>
<pre><code>modules:
  ...
  edgeStream:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable cloudStream module in the config file cloudcore.yaml and disable edgeStream module in the config file edgecore.yaml, restart process cloudcore and edgecore after modification.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543</a></li>
<li><a href="https://github.com/advisories/GHSA-wrcr-x4qj-j543">https://github.com/advisories/GHSA-wrcr-x4qj-j543</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrcr-x4qj-j543</uri>
        </author>
        <published>2022-07-11T21:05:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud Stream and Edge Stream]]></title>
        <id>https://github.com/advisories/GHSA-wrcr-x4qj-j543</id>
        <link href="https://github.com/advisories/GHSA-wrcr-x4qj-j543"/>
        <updated>2022-07-11T21:05:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service.
Only an authenticated user can cause this issue. It will be affected only when users enable cloudStream module in the config file cloudcore.yaml and enable edgeStream module in the config file edgecore.yaml as below.
cloudcore.yaml:</p>
<pre><code>modules:
  ...
  cloudStream:
    enable: true
</code></pre>
<p>edgecore.yaml:</p>
<pre><code>modules:
  ...
  edgeStream:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable cloudStream module in the config file cloudcore.yaml and disable edgeStream module in the config file edgecore.yaml, restart process cloudcore and edgecore after modification.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543</a></li>
<li><a href="https://github.com/advisories/GHSA-wrcr-x4qj-j543">https://github.com/advisories/GHSA-wrcr-x4qj-j543</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrcr-x4qj-j543</uri>
        </author>
        <published>2022-07-11T21:05:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud Stream and Edge Stream]]></title>
        <id>https://github.com/advisories/GHSA-wrcr-x4qj-j543</id>
        <link href="https://github.com/advisories/GHSA-wrcr-x4qj-j543"/>
        <updated>2022-07-11T21:05:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The Cloud Stream server and the Edge Stream server reads the entire message into memory without imposing a limit on the size of this message. An attacker can exploit this by sending a large message to exhaust memory and cause a DoS. The Cloud Stream server and the Edge Stream server are under DoS attack in this case. The consequence of the exhaustion is that the CloudCore and EdgeCore will be in a denial of service.
Only an authenticated user can cause this issue. It will be affected only when users enable cloudStream module in the config file cloudcore.yaml and enable edgeStream module in the config file edgecore.yaml as below.
cloudcore.yaml:</p>
<pre><code>modules:
  ...
  cloudStream:
    enable: true
</code></pre>
<p>edgecore.yaml:</p>
<pre><code>modules:
  ...
  edgeStream:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable cloudStream module in the config file cloudcore.yaml and disable edgeStream module in the config file edgecore.yaml, restart process cloudcore and edgecore after modification.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-wrcr-x4qj-j543</a></li>
<li><a href="https://github.com/advisories/GHSA-wrcr-x4qj-j543">https://github.com/advisories/GHSA-wrcr-x4qj-j543</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wrcr-x4qj-j543</uri>
        </author>
        <published>2022-07-11T21:05:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge CloudCore Router]]></title>
        <id>https://github.com/advisories/GHSA-qpx3-9565-5xwm</id>
        <link href="https://github.com/advisories/GHSA-qpx3-9565-5xwm"/>
        <updated>2022-07-11T21:04:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service.
Only an authenticated user of the cloud can make an attack. It will be affected only when users enable <code>router</code> module in the config file <code>cloudcore.yaml</code> as below.</p>
<pre><code>modules:
  ...
  router:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the router module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm</a></li>
<li><a href="https://github.com/advisories/GHSA-qpx3-9565-5xwm">https://github.com/advisories/GHSA-qpx3-9565-5xwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpx3-9565-5xwm</uri>
        </author>
        <published>2022-07-11T21:04:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge CloudCore Router]]></title>
        <id>https://github.com/advisories/GHSA-qpx3-9565-5xwm</id>
        <link href="https://github.com/advisories/GHSA-qpx3-9565-5xwm"/>
        <updated>2022-07-11T21:04:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service.
Only an authenticated user of the cloud can make an attack. It will be affected only when users enable <code>router</code> module in the config file <code>cloudcore.yaml</code> as below.</p>
<pre><code>modules:
  ...
  router:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the router module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm</a></li>
<li><a href="https://github.com/advisories/GHSA-qpx3-9565-5xwm">https://github.com/advisories/GHSA-qpx3-9565-5xwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpx3-9565-5xwm</uri>
        </author>
        <published>2022-07-11T21:04:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge CloudCore Router]]></title>
        <id>https://github.com/advisories/GHSA-qpx3-9565-5xwm</id>
        <link href="https://github.com/advisories/GHSA-qpx3-9565-5xwm"/>
        <updated>2022-07-11T21:04:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The CloudCore Router does not impose a limit on the size of responses to requests made by the REST handler. An attacker could use this weakness to make a request that will return an HTTP response with a large body and cause DoS of CloudCore. In the HTTP Handler API, the rest handler makes a request to a pre-specified handle. The handle will return an HTTP response that is then read into memory. The consequence of the exhaustion is that CloudCore will be in a denial of service.
Only an authenticated user of the cloud can make an attack. It will be affected only when users enable <code>router</code> module in the config file <code>cloudcore.yaml</code> as below.</p>
<pre><code>modules:
  ...
  router:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the router module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-qpx3-9565-5xwm</a></li>
<li><a href="https://github.com/advisories/GHSA-qpx3-9565-5xwm">https://github.com/advisories/GHSA-qpx3-9565-5xwm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qpx3-9565-5xwm</uri>
        </author>
        <published>2022-07-11T21:04:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge when signing the CSR from EdgeCore]]></title>
        <id>https://github.com/advisories/GHSA-x3px-2p95-f6jr</id>
        <link href="https://github.com/advisories/GHSA-x3px-2p95-f6jr"/>
        <updated>2022-07-11T21:04:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to <code>/edge.crt</code>.
If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request could crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that was larger than the available memory could lead to a successful attack.
Because the request would have to make it through authorization, only authorized users could perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. It will be affected only when users enable the CloudHub module in the file <code>cloudcore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  cloudHub:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the CloudHub module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr</a></li>
<li><a href="https://github.com/advisories/GHSA-x3px-2p95-f6jr">https://github.com/advisories/GHSA-x3px-2p95-f6jr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3px-2p95-f6jr</uri>
        </author>
        <published>2022-07-11T21:04:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge when signing the CSR from EdgeCore]]></title>
        <id>https://github.com/advisories/GHSA-x3px-2p95-f6jr</id>
        <link href="https://github.com/advisories/GHSA-x3px-2p95-f6jr"/>
        <updated>2022-07-11T21:04:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to <code>/edge.crt</code>.
If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request could crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that was larger than the available memory could lead to a successful attack.
Because the request would have to make it through authorization, only authorized users could perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. It will be affected only when users enable the CloudHub module in the file <code>cloudcore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  cloudHub:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the CloudHub module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr</a></li>
<li><a href="https://github.com/advisories/GHSA-x3px-2p95-f6jr">https://github.com/advisories/GHSA-x3px-2p95-f6jr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3px-2p95-f6jr</uri>
        </author>
        <published>2022-07-11T21:04:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] DoS in KubeEdge when signing the CSR from EdgeCore]]></title>
        <id>https://github.com/advisories/GHSA-x3px-2p95-f6jr</id>
        <link href="https://github.com/advisories/GHSA-x3px-2p95-f6jr"/>
        <updated>2022-07-11T21:04:07.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>EdgeCore may be susceptible to a DoS attack on CloudHub if an attacker was to send a well-crafted HTTP request to <code>/edge.crt</code>.
If an attacker can send a well-crafted HTTP request to CloudHub, and that request has a very large body, that request could crash the HTTP service through a memory exhaustion vector. The request body is being read into memory, and a body that was larger than the available memory could lead to a successful attack.
Because the request would have to make it through authorization, only authorized users could perform this attack. The consequence of the exhaustion is that CloudHub will be in denial of service. It will be affected only when users enable the CloudHub module in the file <code>cloudcore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  cloudHub:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the CloudHub module in the config file <code>cloudcore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-x3px-2p95-f6jr</a></li>
<li><a href="https://github.com/advisories/GHSA-x3px-2p95-f6jr">https://github.com/advisories/GHSA-x3px-2p95-f6jr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3px-2p95-f6jr</uri>
        </author>
        <published>2022-07-11T21:04:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud AdmissionController component]]></title>
        <id>https://github.com/advisories/GHSA-w52j-3457-q9wr</id>
        <link href="https://github.com/advisories/GHSA-w52j-3457-q9wr"/>
        <updated>2022-07-11T21:01:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Several endpoints including <code>/devicemodels</code>, <code>/rules</code>, <code>/ruleendpoints</code>, <code>/offlinemigration</code> in the Cloud Admissioncontroller may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
Only an authenticated user can cause this issue. It will be affected when users deploy a Cloud Admissioncontroller. The consequence of the exhaustion is that the Cloud Admissioncontroller will be in denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr</a></li>
<li><a href="https://github.com/advisories/GHSA-w52j-3457-q9wr">https://github.com/advisories/GHSA-w52j-3457-q9wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w52j-3457-q9wr</uri>
        </author>
        <published>2022-07-11T21:01:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud AdmissionController component]]></title>
        <id>https://github.com/advisories/GHSA-w52j-3457-q9wr</id>
        <link href="https://github.com/advisories/GHSA-w52j-3457-q9wr"/>
        <updated>2022-07-11T21:01:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Several endpoints including <code>/devicemodels</code>, <code>/rules</code>, <code>/ruleendpoints</code>, <code>/offlinemigration</code> in the Cloud Admissioncontroller may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
Only an authenticated user can cause this issue. It will be affected when users deploy a Cloud Admissioncontroller. The consequence of the exhaustion is that the Cloud Admissioncontroller will be in denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr</a></li>
<li><a href="https://github.com/advisories/GHSA-w52j-3457-q9wr">https://github.com/advisories/GHSA-w52j-3457-q9wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w52j-3457-q9wr</uri>
        </author>
        <published>2022-07-11T21:01:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Cloud AdmissionController component]]></title>
        <id>https://github.com/advisories/GHSA-w52j-3457-q9wr</id>
        <link href="https://github.com/advisories/GHSA-w52j-3457-q9wr"/>
        <updated>2022-07-11T21:01:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Several endpoints including <code>/devicemodels</code>, <code>/rules</code>, <code>/ruleendpoints</code>, <code>/offlinemigration</code> in the Cloud Admissioncontroller may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
Only an authenticated user can cause this issue. It will be affected when users deploy a Cloud Admissioncontroller. The consequence of the exhaustion is that the Cloud Admissioncontroller will be in denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>At the time of writing, no workaround exists.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-w52j-3457-q9wr</a></li>
<li><a href="https://github.com/advisories/GHSA-w52j-3457-q9wr">https://github.com/advisories/GHSA-w52j-3457-q9wr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w52j-3457-q9wr</uri>
        </author>
        <published>2022-07-11T21:01:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Edge ServiceBus module]]></title>
        <id>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</id>
        <link href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh"/>
        <updated>2022-07-11T21:00:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service.
Malicious Apps which by accident pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the <code>ServiceBus</code> module in the config file <code>edgecore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  serviceBus:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the ServiceBus module in the config file <code>edgecore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4038">https://github.com/kubeedge/kubeedge/pull/4038</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4039">https://github.com/kubeedge/kubeedge/pull/4039</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4042">https://github.com/kubeedge/kubeedge/pull/4042</a></li>
<li><a href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/advisories/GHSA-vwm6-qc77-v2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</uri>
        </author>
        <published>2022-07-11T21:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Edge ServiceBus module]]></title>
        <id>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</id>
        <link href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh"/>
        <updated>2022-07-11T21:00:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service.
Malicious Apps which by accident pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the <code>ServiceBus</code> module in the config file <code>edgecore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  serviceBus:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the ServiceBus module in the config file <code>edgecore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4038">https://github.com/kubeedge/kubeedge/pull/4038</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4039">https://github.com/kubeedge/kubeedge/pull/4039</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4042">https://github.com/kubeedge/kubeedge/pull/4042</a></li>
<li><a href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/advisories/GHSA-vwm6-qc77-v2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</uri>
        </author>
        <published>2022-07-11T21:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kubeedge/kubeedge] Uncontrolled Resource Consumption in KubeEdge Edge ServiceBus module]]></title>
        <id>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</id>
        <link href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh"/>
        <updated>2022-07-11T21:00:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The ServiceBus server on the edge side may be susceptible to a DoS attack if an HTTP request containing a very large Body is sent to it.
It is possible for the node to be exhausted of memory. The consequence of the exhaustion is that other services on the node, e.g. other containers, will be unable to allocate memory and thus causing a denial of service.
Malicious Apps which by accident pulled by users on the host and have the access to send HTTP requests to localhost may make an attack. It will be affected only when users enable the <code>ServiceBus</code> module in the config file <code>edgecore.yaml</code> as below:</p>
<pre><code>modules:
  ...
  serviceBus:
    enable: true
</code></pre>
<h3 id="patches">Patches</h3>
<p>This bug has been fixed in Kubeedge 1.11.1, 1.10.2, 1.9.4. Users should update to these versions to resolve the issue.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Disable the ServiceBus module in the config file <code>edgecore.yaml</code>.</p>
<h3 id="references">References</h3>
<p>NA</p>
<h3 id="credits">Credits</h3>
<p>Thanks David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the <a href="https://github.com/kubeedge/kubeedge/security/policy">kubeedge security policy</a> during a security audit sponsored by CNCF and facilitated by OSTIF.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubeedge/kubeedge/issues/new/choose">KubeEdge repo</a></li>
<li>To make a vulnerability report, email your vulnerability to the private <a href="mailto:cncf-kubeedge-security@lists.cncf.io">cncf-kubeedge-security@lists.cncf.io</a> list with the security details and the details expected for <a href="https://github.com/kubeedge/kubeedge/blob/master/.github/ISSUE_TEMPLATE/bug-report.md">KubeEdge bug reports</a>.</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/kubeedge/kubeedge/security/advisories/GHSA-vwm6-qc77-v2rh</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4038">https://github.com/kubeedge/kubeedge/pull/4038</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4039">https://github.com/kubeedge/kubeedge/pull/4039</a></li>
<li><a href="https://github.com/kubeedge/kubeedge/pull/4042">https://github.com/kubeedge/kubeedge/pull/4042</a></li>
<li><a href="https://github.com/advisories/GHSA-vwm6-qc77-v2rh">https://github.com/advisories/GHSA-vwm6-qc77-v2rh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vwm6-qc77-v2rh</uri>
        </author>
        <published>2022-07-11T21:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/origin] Insecure cookies in Openshift Origin]]></title>
        <id>https://github.com/advisories/GHSA-rqph-25q9-9jhp</id>
        <link href="https://github.com/advisories/GHSA-rqph-25q9-9jhp"/>
        <updated>2022-07-08T19:20:03.000Z</updated>
        <content type="html"><![CDATA[<p>In Openshift Origin the cookies being set in console have no 'secure', 'HttpOnly' attributes.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-3207">https://nvd.nist.gov/vuln/detail/CVE-2015-3207</a></li>
<li><a href="https://github.com/openshift/origin/pull/2261">https://github.com/openshift/origin/pull/2261</a></li>
<li><a href="https://github.com/openshift/origin/pull/2291">https://github.com/openshift/origin/pull/2291</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1221882">https://bugzilla.redhat.com/show_bug.cgi?id=1221882</a></li>
<li><a href="https://github.com/advisories/GHSA-rqph-25q9-9jhp">https://github.com/advisories/GHSA-rqph-25q9-9jhp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rqph-25q9-9jhp</uri>
        </author>
        <published>2022-07-08T00:00:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hyperledger/fabric/orderer/common/cluster] Improper Input Validation in orderer/common/cluster consensus request]]></title>
        <id>https://github.com/advisories/GHSA-72x4-cq6r-jp4p</id>
        <link href="https://github.com/advisories/GHSA-72x4-cq6r-jp4p"/>
        <updated>2022-07-08T17:06:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If a consensus client sends a malformed consensus request to an orderer it may crash the orderer node.
This fix checks for the malformed consensus request and returns an error to the consensus client.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in v2.2.7 and v2.4.5.</p>
<h3 id="workarounds">Workarounds</h3>
<p>None, users must upgrade to v2.2.7 or v2.4.5.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/hyperledger/fabric/releases/tag/v2.2.7">https://github.com/hyperledger/fabric/releases/tag/v2.2.7</a>
<a href="https://github.com/hyperledger/fabric/releases/tag/v2.4.5">https://github.com/hyperledger/fabric/releases/tag/v2.4.5</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/hyperledger/fabric/issues">Hyperledger Fabric repository</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thank you to Haosheng Wang of OPPO ZIWU Security Lab for this disclosure.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/hyperledger/fabric/security/advisories/GHSA-72x4-cq6r-jp4p">https://github.com/hyperledger/fabric/security/advisories/GHSA-72x4-cq6r-jp4p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-31121">https://nvd.nist.gov/vuln/detail/CVE-2022-31121</a></li>
<li><a href="https://github.com/hyperledger/fabric/commit/0f18359493bcbd5f9f9d1a9b05adabfe5da23b06">https://github.com/hyperledger/fabric/commit/0f18359493bcbd5f9f9d1a9b05adabfe5da23b06</a></li>
<li><a href="https://github.com/hyperledger/fabric/releases/tag/v2.2.7">https://github.com/hyperledger/fabric/releases/tag/v2.2.7</a></li>
<li><a href="https://github.com/hyperledger/fabric/releases/tag/v2.4.5">https://github.com/hyperledger/fabric/releases/tag/v2.4.5</a></li>
<li><a href="https://github.com/advisories/GHSA-72x4-cq6r-jp4p">https://github.com/advisories/GHSA-72x4-cq6r-jp4p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-72x4-cq6r-jp4p</uri>
        </author>
        <published>2022-07-08T17:06:39.000Z</published>
    </entry>
</feed>