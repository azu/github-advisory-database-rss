<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-08-07T07:01:13.628Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes]]></title>
        <id>https://github.com/advisories/GHSA-qh36-44jv-c8xj</id>
        <link href="https://github.com/advisories/GHSA-qh36-44jv-c8xj"/>
        <updated>2024-08-06T23:53:55.000Z</updated>
        <content type="html"><![CDATA[<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8562">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493">https://github.com/kubernetes/kubernetes/issues/101493</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220225-0002">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>
<li><a href="https://github.com/advisories/GHSA-qh36-44jv-c8xj">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh36-44jv-c8xj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-02T00:01:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes]]></title>
        <id>https://github.com/advisories/GHSA-qh36-44jv-c8xj</id>
        <link href="https://github.com/advisories/GHSA-qh36-44jv-c8xj"/>
        <updated>2024-08-06T23:53:55.000Z</updated>
        <content type="html"><![CDATA[<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8562">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493">https://github.com/kubernetes/kubernetes/issues/101493</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220225-0002">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>
<li><a href="https://github.com/advisories/GHSA-qh36-44jv-c8xj">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh36-44jv-c8xj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-02T00:01:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes]]></title>
        <id>https://github.com/advisories/GHSA-qh36-44jv-c8xj</id>
        <link href="https://github.com/advisories/GHSA-qh36-44jv-c8xj"/>
        <updated>2024-08-06T23:53:55.000Z</updated>
        <content type="html"><![CDATA[<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8562">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493">https://github.com/kubernetes/kubernetes/issues/101493</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220225-0002">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>
<li><a href="https://github.com/advisories/GHSA-qh36-44jv-c8xj">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh36-44jv-c8xj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-02T00:01:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Potential proxy IP restriction bypass in Kubernetes]]></title>
        <id>https://github.com/advisories/GHSA-qh36-44jv-c8xj</id>
        <link href="https://github.com/advisories/GHSA-qh36-44jv-c8xj"/>
        <updated>2024-08-06T23:53:55.000Z</updated>
        <content type="html"><![CDATA[<p>As mitigations to a report from 2019 and CVE-2020-8555, Kubernetes attempts to prevent proxied connections from accessing link-local or localhost networks when making user-driven connections to Services, Pods, Nodes, or StorageClass service providers. As part of this mitigation Kubernetes does a DNS name resolution check and validates that response IPs are not in the link-local (169.254.0.0/16) or localhost (127.0.0.0/8) range. Kubernetes then performs a second DNS resolution without validation for the actual connection. If a non-standard DNS server returns different non-cached responses, a user may be able to bypass the proxy IP restriction and access private networks on the control plane. All versions of Kubernetes are impacted, and there is no fix in place.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8562">https://nvd.nist.gov/vuln/detail/CVE-2020-8562</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493">https://github.com/kubernetes/kubernetes/issues/101493</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY">https://groups.google.com/g/kubernetes-security-announce/c/-MFX60_wdOY</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629">https://github.com/kubernetes/kubernetes/issues/101493#issuecomment-2272095629</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220225-0002">https://security.netapp.com/advisory/ntap-20220225-0002</a></li>
<li><a href="https://github.com/advisories/GHSA-qh36-44jv-c8xj">https://github.com/advisories/GHSA-qh36-44jv-c8xj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qh36-44jv-c8xj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-02T00:01:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[code.gitea.io/gitea] Gitea Cross-site Scripting Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-4h4p-553m-46qh</id>
        <link href="https://github.com/advisories/GHSA-4h4p-553m-46qh"/>
        <updated>2024-08-06T14:31:03.000Z</updated>
        <content type="html"><![CDATA[<p>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Gitea Gitea Open Source Git Server allows Stored XSS.This issue affects Gitea Open Source Git Server: 1.22.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-6886">https://nvd.nist.gov/vuln/detail/CVE-2024-6886</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/31200">https://github.com/go-gitea/gitea/pull/31200</a></li>
<li><a href="https://blog.gitea.com/release-of-1.22.1">https://blog.gitea.com/release-of-1.22.1</a></li>
<li><a href="https://github.com/go-gitea/gitea/commit/b6280f4d21309cfae7cc07f74173354c664d5e10">https://github.com/go-gitea/gitea/commit/b6280f4d21309cfae7cc07f74173354c664d5e10</a></li>
<li><a href="https://github.com/advisories/GHSA-4h4p-553m-46qh">https://github.com/advisories/GHSA-4h4p-553m-46qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4h4p-553m-46qh</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2024-08-06T06:30:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/IceWhaleTech/CasaOS] CasaOS Command Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-92vc-4fcw-g68q</id>
        <link href="https://github.com/advisories/GHSA-92vc-4fcw-g68q"/>
        <updated>2024-08-05T21:50:07.000Z</updated>
        <content type="html"><![CDATA[<p>CasaOS is an open-source personal cloud system. Prior to version 0.4.4, if an authenticated user using CasaOS is able to successfully connect to a controlled SMB server, they are able to execute arbitrary commands. Version 0.4.4 contains a patch for the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37469">https://nvd.nist.gov/vuln/detail/CVE-2023-37469</a></li>
<li><a href="https://github.com/github/pe-security-lab/issues/1871">https://github.com/github/pe-security-lab/issues/1871</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/commit/af440eac5563644854ff33f72041e52d3fd1f47c">https://github.com/IceWhaleTech/CasaOS/commit/af440eac5563644854ff33f72041e52d3fd1f47c</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/route/v1/samba.go#L121">https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/route/v1/samba.go#L121</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/service/connections.go#L58">https://github.com/IceWhaleTech/CasaOS/blob/96e92842357230098c771bc41fd3baf46189b859/service/connections.go#L58</a></li>
<li><a href="https://github.com/IceWhaleTech/CasaOS/releases/tag/v0.4.4">https://github.com/IceWhaleTech/CasaOS/releases/tag/v0.4.4</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-119_CasaOS">https://securitylab.github.com/advisories/GHSL-2022-119_CasaOS</a></li>
<li><a href="https://github.com/advisories/GHSA-92vc-4fcw-g68q">https://github.com/advisories/GHSA-92vc-4fcw-g68q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-92vc-4fcw-g68q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:50:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rudderlabs/rudder-server] rudder-server is vulnerable to SQL injection]]></title>
        <id>https://github.com/advisories/GHSA-3jmm-f6jj-rcc3</id>
        <link href="https://github.com/advisories/GHSA-3jmm-f6jj-rcc3"/>
        <updated>2024-08-05T21:50:07.000Z</updated>
        <content type="html"><![CDATA[<p>rudder-server is part of RudderStack, an open source Customer Data Platform (CDP). Versions of rudder-server prior to 1.3.0-rc.1 are vulnerable to SQL injection. This issue may lead to Remote Code Execution (RCE) due to the <code>rudder</code> role in PostgresSQL having superuser permissions by default. Version 1.3.0-rc.1 contains patches for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-30625">https://nvd.nist.gov/vuln/detail/CVE-2023-30625</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/pull/2652">https://github.com/rudderlabs/rudder-server/pull/2652</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/pull/2663">https://github.com/rudderlabs/rudder-server/pull/2663</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/pull/2664">https://github.com/rudderlabs/rudder-server/pull/2664</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/commit/0d061ff2d8c16845179d215bf8012afceba12a30">https://github.com/rudderlabs/rudder-server/commit/0d061ff2d8c16845179d215bf8012afceba12a30</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/commit/2f956b7eb3d5eb2de3e79d7df2c87405af25071e">https://github.com/rudderlabs/rudder-server/commit/2f956b7eb3d5eb2de3e79d7df2c87405af25071e</a></li>
<li><a href="https://github.com/rudderlabs/rudder-server/commit/9c009d9775abc99e72fc470f4c4c8e8f1775e82a">https://github.com/rudderlabs/rudder-server/commit/9c009d9775abc99e72fc470f4c4c8e8f1775e82a</a></li>
<li><a href="https://securitylab.github.com/advisories">https://securitylab.github.com/advisories</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-097_rudder-server">https://securitylab.github.com/advisories/GHSL-2022-097_rudder-server</a></li>
<li><a href="http://packetstormsecurity.com/files/173837/Rudder-Server-SQL-Injection-Remote-Code-Execution.html">http://packetstormsecurity.com/files/173837/Rudder-Server-SQL-Injection-Remote-Code-Execution.html</a></li>
<li><a href="https://github.com/advisories/GHSA-3jmm-f6jj-rcc3">https://github.com/advisories/GHSA-3jmm-f6jj-rcc3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3jmm-f6jj-rcc3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:50:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/layer5io/meshery] Meshery SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-h7cm-jvpp-69xf</id>
        <link href="https://github.com/advisories/GHSA-h7cm-jvpp-69xf"/>
        <updated>2024-08-05T21:29:28.000Z</updated>
        <content type="html"><![CDATA[<p>Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function <code>GetAllEvents</code> at the API URL <code>/api/v2/events</code>. The sort query parameter read in <code>events_streamer.go</code> is directly used to build a SQL query in <code>events_persister.go</code>. Version 0.7.22 fixes this issue by using the <code>SanitizeOrderInput</code> function.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35182">https://nvd.nist.gov/vuln/detail/CVE-2024-35182</a></li>
<li><a href="https://github.com/meshery/meshery/pull/10280">https://github.com/meshery/meshery/pull/10280</a></li>
<li><a href="https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c">https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c</a></li>
<li><a href="https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/events_streamer.go#L52</a></li>
<li><a href="https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/models/events_persister.go#L47</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery">https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery</a></li>
<li><a href="https://github.com/advisories/GHSA-h7cm-jvpp-69xf">https://github.com/advisories/GHSA-h7cm-jvpp-69xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h7cm-jvpp-69xf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/layer5io/meshery] Meshery SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9f24-jrv4-f8g5</id>
        <link href="https://github.com/advisories/GHSA-9f24-jrv4-f8g5"/>
        <updated>2024-08-05T21:29:28.000Z</updated>
        <content type="html"><![CDATA[<p>Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.22 may lead to arbitrary file write by using a SQL injection stacked queries payload, and the ATTACH DATABASE command. Additionally, attackers may be able to access and modify any data stored in the database, like performance profiles (which may contain session cookies), Meshery application data, or any Kubernetes configuration added to the system. The Meshery project exposes the function <code>GetMeshSyncResourcesKinds</code> at the API URL <code>/api/system/meshsync/resources/kinds</code>. The order query parameter is directly used to build a SQL query in <code>meshync_handler.go</code>. Version 0.7.22 fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-35181">https://nvd.nist.gov/vuln/detail/CVE-2024-35181</a></li>
<li><a href="https://github.com/meshery/meshery/pull/10207">https://github.com/meshery/meshery/pull/10207</a></li>
<li><a href="https://github.com/meshery/meshery/pull/10280">https://github.com/meshery/meshery/pull/10280</a></li>
<li><a href="https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13">https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13</a></li>
<li><a href="https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c">https://github.com/meshery/meshery/commit/b55f6064d0c6a965aee38f30281f99da7dc4420c</a></li>
<li><a href="https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/meshsync_handler.go#L187">https://github.com/meshery/meshery/blob/b331f45c9083d7abf6b90105072b04cd22473de7/server/handlers/meshsync_handler.go#L187</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery">https://securitylab.github.com/advisories/GHSL-2024-013_GHSL-2024-014_Meshery</a></li>
<li><a href="https://github.com/advisories/GHSA-9f24-jrv4-f8g5">https://github.com/advisories/GHSA-9f24-jrv4-f8g5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9f24-jrv4-f8g5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/AlexxIT/go2rtc] gotortc vulnerable to Cross-Site Request Forgery]]></title>
        <id>https://github.com/advisories/GHSA-qgj8-g9q4-7f2p</id>
        <link href="https://github.com/advisories/GHSA-qgj8-g9q4-7f2p"/>
        <updated>2024-08-05T21:29:27.000Z</updated>
        <content type="html"><![CDATA[<p>gotortc is a camera streaming application. Versions 1.8.5 and prior are vulnerable to Cross-Site Request Forgery. The <code>/api/config</code> endpoint allows one to modify the existing configuration with user-supplied values. While the API is only allowing localhost to interact without authentication, an attacker may be able to achieve that depending on how go2rtc is set up on the upstream application, and given that this endpoint is not protected against CSRF, it allows requests from any origin (e.g. a "drive-by" attack) . The <code>exec</code> handler allows for any stream to execute arbitrary commands. An attacker may add a custom stream through <code>api/config</code>, which may lead to arbitrary command execution. In the event of a victim visiting the server in question, their browser will execute the requests against the go2rtc instance. Commit 8793c3636493c5efdda08f3b5ed5c6e1ea594fd9 adds a warning about secure API access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29192">https://nvd.nist.gov/vuln/detail/CVE-2024-29192</a></li>
<li><a href="https://github.com/AlexxIT/go2rtc/commit/8793c3636493c5efdda08f3b5ed5c6e1ea594fd9">https://github.com/AlexxIT/go2rtc/commit/8793c3636493c5efdda08f3b5ed5c6e1ea594fd9</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc">https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc</a></li>
<li><a href="https://github.com/advisories/GHSA-qgj8-g9q4-7f2p">https://github.com/advisories/GHSA-qgj8-g9q4-7f2p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qgj8-g9q4-7f2p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:29:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/AlexxIT/go2rtc] gotortc Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rh4r-f7f7-r99m</id>
        <link href="https://github.com/advisories/GHSA-rh4r-f7f7-r99m"/>
        <updated>2024-08-05T21:29:27.000Z</updated>
        <content type="html"><![CDATA[<p>gotortc is a camera streaming application. Versions 1.8.5 and prior are vulnerable to DOM-based cross-site scripting. The index page (<code>index.html</code>) shows the available streams by fetching the API in the client side. Then, it uses <code>Object.entries</code> to iterate over the result whose first item (<code>name</code>) gets appended using <code>innerHTML</code>. In the event of a victim visiting the server in question, their browser will execute the request against the go2rtc instance. After the request, the browser will be redirected to go2rtc, in which the XSS would be executed in the context of go2rtc’s origin.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29193">https://nvd.nist.gov/vuln/detail/CVE-2024-29193</a></li>
<li><a href="https://github.com/AlexxIT/go2rtc/commit/3b3d5b033aac3a019af64f83dec84f70ed2c8aba">https://github.com/AlexxIT/go2rtc/commit/3b3d5b033aac3a019af64f83dec84f70ed2c8aba</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc">https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc</a></li>
<li><a href="https://github.com/advisories/GHSA-rh4r-f7f7-r99m">https://github.com/advisories/GHSA-rh4r-f7f7-r99m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh4r-f7f7-r99m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/layer5io/meshery] Meshery SQL Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-652r-q29p-m25h</id>
        <link href="https://github.com/advisories/GHSA-652r-q29p-m25h"/>
        <updated>2024-08-05T21:29:27.000Z</updated>
        <content type="html"><![CDATA[<p>Meshery is an open source, cloud native manager that enables the design and management of Kubernetes-based infrastructure and applications. A SQL injection vulnerability in Meshery prior to version 0.7.17 allows a remote attacker to obtain sensitive information via the <code>order</code> parameter of <code>GetMeshSyncResources</code>. Version 0.7.17 contains a patch for this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29031">https://nvd.nist.gov/vuln/detail/CVE-2024-29031</a></li>
<li><a href="https://github.com/meshery/meshery/pull/10207">https://github.com/meshery/meshery/pull/10207</a></li>
<li><a href="https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13">https://github.com/meshery/meshery/commit/8e995ce21af02d32ef61689c1e1748a745917f13</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-249_Meshery">https://securitylab.github.com/advisories/GHSL-2023-249_Meshery</a></li>
<li><a href="https://github.com/advisories/GHSA-652r-q29p-m25h">https://github.com/advisories/GHSA-652r-q29p-m25h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-652r-q29p-m25h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:29:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/AlexxIT/go2rtc] gotortc Cross-site Scripting vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-wv8x-3w6r-6h7v</id>
        <link href="https://github.com/advisories/GHSA-wv8x-3w6r-6h7v"/>
        <updated>2024-08-05T21:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>gotortc is a camera streaming application. Versions 1.8.5 and prior are vulnerable to DOM-based cross-site scripting. The links page (<code>links.html</code>) appends the <code>src</code> GET parameter (<code>[0]</code>) in all of its links for 1-click previews. The context in which <code>src</code> is being appended is <code>innerHTML</code> (<code>[1]</code>), which will insert the text as HTML. Commit 3b3d5b033aac3a019af64f83dec84f70ed2c8aba contains a patch for the issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29191">https://nvd.nist.gov/vuln/detail/CVE-2024-29191</a></li>
<li><a href="https://github.com/AlexxIT/go2rtc/commit/3b3d5b033aac3a019af64f83dec84f70ed2c8aba">https://github.com/AlexxIT/go2rtc/commit/3b3d5b033aac3a019af64f83dec84f70ed2c8aba</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc">https://securitylab.github.com/advisories/GHSL-2023-205_GHSL-2023-207_go2rtc</a></li>
<li><a href="https://github.com/advisories/GHSA-wv8x-3w6r-6h7v">https://github.com/advisories/GHSA-wv8x-3w6r-6h7v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wv8x-3w6r-6h7v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/owncast/owncast] Owncast Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-9355-27m8-h74v</id>
        <link href="https://github.com/advisories/GHSA-9355-27m8-h74v"/>
        <updated>2024-08-05T21:29:26.000Z</updated>
        <content type="html"><![CDATA[<p>Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server. The Owncast application exposes an administrator API at the URL /api/admin. The emoji/delete endpoint of said API allows administrators to delete custom emojis, which are saved on disk. The parameter name is taken from the JSON request and directly appended to the filepath that points to the emoji to delete. By using path traversal sequences (../), attackers with administrative privileges can exploit this endpoint to delete arbitrary files on the system, outside of the emoji directory. This vulnerability is fixed in 0.1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-31450">https://nvd.nist.gov/vuln/detail/CVE-2024-31450</a></li>
<li><a href="https://github.com/owncast/owncast/commit/1b14800c7d7f54be14ed4d130bfe7f480645076e">https://github.com/owncast/owncast/commit/1b14800c7d7f54be14ed4d130bfe7f480645076e</a></li>
<li><a href="https://github.com/owncast/owncast/blob/v0.1.2/controllers/admin/emoji.go#L63">https://github.com/owncast/owncast/blob/v0.1.2/controllers/admin/emoji.go#L63</a></li>
<li><a href="https://github.com/owncast/owncast/releases/tag/v0.1.3">https://github.com/owncast/owncast/releases/tag/v0.1.3</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-277_Owncast">https://securitylab.github.com/advisories/GHSL-2023-277_Owncast</a></li>
<li><a href="https://github.com/advisories/GHSA-9355-27m8-h74v">https://github.com/advisories/GHSA-9355-27m8-h74v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9355-27m8-h74v</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-08-05T21:29:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] memos vulnerable to Server-Side Request Forgery in /api/resource]]></title>
        <id>https://github.com/advisories/GHSA-65fm-2jgr-j7qq</id>
        <link href="https://github.com/advisories/GHSA-65fm-2jgr-j7qq"/>
        <updated>2024-08-05T21:29:25.000Z</updated>
        <content type="html"><![CDATA[<p>memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the <code>/api/resource</code> that allows authenticated users to enumerate the internal network. Version 0.22.0 of memos removes the vulnerable file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29030">https://nvd.nist.gov/vuln/detail/CVE-2024-29030</a></li>
<li><a href="https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5">https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5</a></li>
<li><a href="https://github.com/usememos/memos/blob/06dbd8731161245444f4b50f4f9ed267f7c3cf63/api/v1/resource.go#L83">https://github.com/usememos/memos/blob/06dbd8731161245444f4b50f4f9ed267f7c3cf63/api/v1/resource.go#L83</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos">https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos</a></li>
<li><a href="https://github.com/advisories/GHSA-65fm-2jgr-j7qq">https://github.com/advisories/GHSA-65fm-2jgr-j7qq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-65fm-2jgr-j7qq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] memos vulnerable to Server-Side Request Forgery and Cross-site Scripting]]></title>
        <id>https://github.com/advisories/GHSA-9cqm-mgv9-vv9j</id>
        <link href="https://github.com/advisories/GHSA-9cqm-mgv9-vv9j"/>
        <updated>2024-08-05T21:29:25.000Z</updated>
        <content type="html"><![CDATA[<p>memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the <code>/o/get/image</code> that allows unauthenticated users to enumerate the internal network and retrieve images. The response from the image request is then copied into the response of the current server request, causing a reflected XSS vulnerability. Version 0.22.0 of memos removes the vulnerable file.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29029">https://nvd.nist.gov/vuln/detail/CVE-2024-29029</a></li>
<li><a href="https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5">https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5</a></li>
<li><a href="https://github.com/usememos/memos/blob/06dbd8731161245444f4b50f4f9ed267f7c3cf63/api/v1/http_getter.go#L29">https://github.com/usememos/memos/blob/06dbd8731161245444f4b50f4f9ed267f7c3cf63/api/v1/http_getter.go#L29</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos">https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos</a></li>
<li><a href="https://github.com/advisories/GHSA-9cqm-mgv9-vv9j">https://github.com/advisories/GHSA-9cqm-mgv9-vv9j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9cqm-mgv9-vv9j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/owncast/owncast] Owncast Cross-Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-v99w-r56h-g23v</id>
        <link href="https://github.com/advisories/GHSA-v99w-r56h-g23v"/>
        <updated>2024-08-05T21:29:25.000Z</updated>
        <content type="html"><![CDATA[<p>Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server. In versions 0.1.2 and prior, a lenient CORS policy allows attackers to make a cross origin request, reading privileged information. This can be used to leak the admin password. Commit 9215d9ba0f29d62201d3feea9e77dcd274581624 fixes this issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29026">https://nvd.nist.gov/vuln/detail/CVE-2024-29026</a></li>
<li><a href="https://github.com/owncast/owncast/commit/9215d9ba0f29d62201d3feea9e77dcd274581624">https://github.com/owncast/owncast/commit/9215d9ba0f29d62201d3feea9e77dcd274581624</a></li>
<li><a href="https://github.com/owncast/owncast/blob/v0.1.2/router/middleware/auth.go#L32">https://github.com/owncast/owncast/blob/v0.1.2/router/middleware/auth.go#L32</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-261_Owncast">https://securitylab.github.com/advisories/GHSL-2023-261_Owncast</a></li>
<li><a href="https://github.com/advisories/GHSA-v99w-r56h-g23v">https://github.com/advisories/GHSA-v99w-r56h-g23v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v99w-r56h-g23v</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:29:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] memos vulnerable to Server-Side Request Forgery in /o/get/httpmeta]]></title>
        <id>https://github.com/advisories/GHSA-6fcf-g3mp-xj2x</id>
        <link href="https://github.com/advisories/GHSA-6fcf-g3mp-xj2x"/>
        <updated>2024-08-05T21:29:24.000Z</updated>
        <content type="html"><![CDATA[<p>memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the /o/get/httpmeta that allows unauthenticated users to enumerate the internal network and receive limited html values in json form. This vulnerability is fixed in 0.16.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-29028">https://nvd.nist.gov/vuln/detail/CVE-2024-29028</a></li>
<li><a href="https://github.com/usememos/memos/commit/6ffc09d86a1302c384ef085aa70c7bddb3ce7ba9">https://github.com/usememos/memos/commit/6ffc09d86a1302c384ef085aa70c7bddb3ce7ba9</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos">https://securitylab.github.com/advisories/GHSL-2023-154_GHSL-2023-156_memos</a></li>
<li><a href="https://github.com/advisories/GHSA-6fcf-g3mp-xj2x">https://github.com/advisories/GHSA-6fcf-g3mp-xj2x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fcf-g3mp-xj2x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:29:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/RobotsAndPencils/go-saml] RobotsAndPencils go-saml authentication bypass vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-6h53-q94j-348w</id>
        <link href="https://github.com/advisories/GHSA-6h53-q94j-348w"/>
        <updated>2024-08-05T21:29:23.000Z</updated>
        <content type="html"><![CDATA[<p>RobotsAndPencils go-saml, a SAML client library written in Go, contains an authentication bypass vulnerability in all known versions. This is due to how the <code>xmlsec1</code> command line tool is called internally to verify the signature of SAML assertions. When <code>xmlsec1</code> is used without defining the enabled key data, the origin of the public key for the signature verification is, unfortunately, not restricted. That means an attacker can sign the SAML assertions themselves and provide the required public key (e.g. an RSA key) directly embedded in the SAML token. Projects still using RobotsAndPencils/go-saml should move to another SAML library or alternatively remove support for SAML from their projects. The vulnerability can likely temporarily be fixed by forking the go-saml project and adding the command line argument <code>--enabled-key-data</code> and specifying a value such as <code>x509</code> or <code>raw-x509-cert</code> when calling the <code>xmlsec1</code> binary in the verify function. Please note that this workaround must be carefully tested before it can be used.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48703">https://nvd.nist.gov/vuln/detail/CVE-2023-48703</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2023-121_go-saml__archived_">https://securitylab.github.com/advisories/GHSL-2023-121_go-saml__archived_</a></li>
<li><a href="https://github.com/advisories/GHSA-6h53-q94j-348w">https://github.com/advisories/GHSA-6h53-q94j-348w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h53-q94j-348w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-08-05T21:29:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.thethings.network/lorawan-stack/v3] lorawan-stack Open Redirect vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5fwq-9x7j-2qpg</id>
        <link href="https://github.com/advisories/GHSA-5fwq-9x7j-2qpg"/>
        <updated>2024-08-05T21:19:01.000Z</updated>
        <content type="html"><![CDATA[<p>lorawan-stack is an open source LoRaWAN network server. Prior to version 3.24.1, an open redirect exists on the login page of the lorawan stack server, allowing an attacker to supply a user controlled redirect upon sign in. This issue may allows malicious actors to phish users, as users assume they were redirected to the homepage on login. Version 3.24.1 contains a fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26494">https://nvd.nist.gov/vuln/detail/CVE-2023-26494</a></li>
<li><a href="https://github.com/TheThingsNetwork/lorawan-stack/commit/f06776028bdb3994847fc6067613dc61a2b3559e">https://github.com/TheThingsNetwork/lorawan-stack/commit/f06776028bdb3994847fc6067613dc61a2b3559e</a></li>
<li><a href="https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/login/index.js#L90-L90">https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/login/index.js#L90-L90</a></li>
<li><a href="https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/token-login/index.js#L74-L74">https://github.com/TheThingsNetwork/lorawan-stack/blob/ecdef730f176c02f7c9afce98b0457ae64de5bfc/pkg/webui/account/views/token-login/index.js#L74-L74</a></li>
<li><a href="https://github.com/TheThingsNetwork/lorawan-stack/releases/tag/v3.24.1">https://github.com/TheThingsNetwork/lorawan-stack/releases/tag/v3.24.1</a></li>
<li><a href="https://securitylab.github.com/advisories">https://securitylab.github.com/advisories</a></li>
<li><a href="https://securitylab.github.com/advisories/GHSL-2022-138_lorawan-stack">https://securitylab.github.com/advisories/GHSL-2022-138_lorawan-stack</a></li>
<li><a href="https://github.com/advisories/GHSA-5fwq-9x7j-2qpg">https://github.com/advisories/GHSA-5fwq-9x7j-2qpg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5fwq-9x7j-2qpg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-08-05T21:18:58.000Z</published>
    </entry>
</feed>