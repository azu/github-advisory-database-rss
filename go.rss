<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-11-30T03:07:59.340Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/crewjam/saml] crewjam/saml vulnerable to signature bypass via multiple Assertion elements due to improper authentication]]></title>
        <id>https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</id>
        <link href="https://github.com/advisories/GHSA-j2jp-wvqg-wc2g"/>
        <updated>2022-11-29T23:55:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The crewjam/saml go library is vulnerable to an authentication bypass when processing SAML responses containing multiple Assertion elements.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been corrected in version 0.4.9</p>
<h3 id="credit">Credit</h3>
<p>This issue was reported by Felix Wilhelm from Google Project Zero.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/crewjam/saml/security/advisories/GHSA-j2jp-wvqg-wc2g">https://github.com/crewjam/saml/security/advisories/GHSA-j2jp-wvqg-wc2g</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41912">https://nvd.nist.gov/vuln/detail/CVE-2022-41912</a></li>
<li><a href="https://github.com/crewjam/saml/commit/aee3fb1edeeaf1088fcb458727e0fd863d277f8b">https://github.com/crewjam/saml/commit/aee3fb1edeeaf1088fcb458727e0fd863d277f8b</a></li>
<li><a href="https://github.com/crewjam/saml/releases/tag/v0.4.9">https://github.com/crewjam/saml/releases/tag/v0.4.9</a></li>
<li><a href="https://github.com/advisories/GHSA-j2jp-wvqg-wc2g">https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-j2jp-wvqg-wc2g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-29T23:55:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-v42f-hq78-8c5m</id>
        <link href="https://github.com/advisories/GHSA-v42f-hq78-8c5m"/>
        <updated>2022-11-26T20:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in the Mattermost allows an authenticated user to crash the server via multiple requests to one of the API endpoints which could fetch a large amount of data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4045">https://nvd.nist.gov/vuln/detail/CVE-2022-4045</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-v42f-hq78-8c5m">https://github.com/advisories/GHSA-v42f-hq78-8c5m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v42f-hq78-8c5m</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server] Denial of service in Mattermost]]></title>
        <id>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</id>
        <link href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf"/>
        <updated>2022-11-26T20:18:05.000Z</updated>
        <content type="html"><![CDATA[<p>A denial-of-service vulnerability in Mattermost allows an authenticated user to crash the server via multiple large autoresponder messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-4044">https://nvd.nist.gov/vuln/detail/CVE-2022-4044</a></li>
<li><a href="https://hackerone.com/reports/1680241">https://hackerone.com/reports/1680241</a></li>
<li><a href="https://mattermost.com/security-updates/">https://mattermost.com/security-updates/</a></li>
<li><a href="https://github.com/advisories/GHSA-5jph-wrq7-v9hf">https://github.com/advisories/GHSA-5jph-wrq7-v9hf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5jph-wrq7-v9hf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-23T06:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/consul] Missing Authorization in HashiCorp Consul]]></title>
        <id>https://github.com/advisories/GHSA-gw2g-hhc9-wgjh</id>
        <link href="https://github.com/advisories/GHSA-gw2g-hhc9-wgjh"/>
        <updated>2022-11-21T23:53:04.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Consul and Consul Enterprise 1.13.0 up to 1.13.3 do not filter cluster filtering's imported nodes and services for HTTP or RPC endpoints used by the UI. Fixed in 1.14.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3920">https://nvd.nist.gov/vuln/detail/CVE-2022-3920</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-28-consul-cluster-peering-leaks-imported-nodes-services-information/46946">https://discuss.hashicorp.com/t/hcsec-2022-28-consul-cluster-peering-leaks-imported-nodes-services-information/46946</a></li>
<li><a href="https://github.com/hashicorp/consul/commit/706866fa0016b0aa302679f9c648859050d19b2e">https://github.com/hashicorp/consul/commit/706866fa0016b0aa302679f9c648859050d19b2e</a></li>
<li><a href="https://github.com/advisories/GHSA-gw2g-hhc9-wgjh">https://github.com/advisories/GHSA-gw2g-hhc9-wgjh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gw2g-hhc9-wgjh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-16T12:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tailscale.com/cmd] Tailscale daemon is vulnerable to information disclosure via CSRF]]></title>
        <id>https://github.com/advisories/GHSA-qccm-wmcq-pwr6</id>
        <link href="https://github.com/advisories/GHSA-qccm-wmcq-pwr6"/>
        <updated>2022-11-21T22:34:23.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability identified in the Tailscale client allows a malicious website to access the peer API, which can then be used to access Tailscale environment variables.</p>
<p><strong>Affected platforms:</strong> All
<strong>Patched Tailscale client versions:</strong> v1.32.3 or later, v1.33.257 or later (unstable)</p>
<h3 id="what-happened">What happened?</h3>
<p>In the Tailscale client, the peer API was vulnerable to DNS rebinding. This allowed an attacker-controlled website visited by the node to rebind DNS for the peer API to an attacker-controlled DNS server, and then making peer API requests in the client, including accessing the node’s Tailscale environment variables.</p>
<h3 id="who-is-affected">Who is affected?</h3>
<p>All Tailscale clients prior to version v.1.32.3 are affected.</p>
<h3 id="what-should-i-do">What should I do?</h3>
<p>Upgrade to v1.32.3 or later to remediate the issue.</p>
<h3 id="what-is-the-impact">What is the impact?</h3>
<p>An attacker with access to the peer API on a node could use that access to read the node’s environment variables, including any credentials or secrets stored in environment variables. This may include Tailscale authentication keys, which could then be used to add new nodes to the user’s tailnet. The peer API access could also be used to learn of other nodes in the tailnet or send files via Taildrop.</p>
<p>An attacker with access to the peer API who sent a malicious file via Taildrop which was accessed while it was loading could use this to gain access to the local API, and remotely execute code.</p>
<p>There is no evidence of this vulnerability being purposefully triggered or exploited.</p>
<h3 id="credits">Credits</h3>
<p>We would like to thank <a href="https://github.com/emilytrau">Emily Trau</a> and <a href="https://twitter.com/JJJollyjim">Jamie McClymont (CyberCX)</a> for reporting this issue. Further detail is available in <a href="https://emily.id.au/tailscale">their blog post</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tailscale.com/security-bulletins/#ts-2022-005">TS-2022-005</a></li>
<li><a href="https://emily.id.au/tailscale">Researcher blog post</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, <a href="https://tailscale.com/contact/support/">contact Tailscale support</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tailscale/tailscale/security/advisories/GHSA-qccm-wmcq-pwr6">https://github.com/tailscale/tailscale/security/advisories/GHSA-qccm-wmcq-pwr6</a></li>
<li><a href="https://github.com/advisories/GHSA-qccm-wmcq-pwr6">https://github.com/advisories/GHSA-qccm-wmcq-pwr6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qccm-wmcq-pwr6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-21T22:34:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[tailscale/tailscale.com/cmd] Tailscale Windows daemon is vulnerable to RCE via CSRF]]></title>
        <id>https://github.com/advisories/GHSA-vqp6-rc3h-83cp</id>
        <link href="https://github.com/advisories/GHSA-vqp6-rc3h-83cp"/>
        <updated>2022-11-21T22:34:00.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability identified in the Tailscale Windows client allows a malicious website to reconfigure the Tailscale daemon <code>tailscaled</code>, which can then be used to remotely execute code.</p>
<p><strong>Affected platforms:</strong> Windows
<strong>Patched Tailscale client versions:</strong> v1.32.3 or later, v1.33.257 or later (unstable)</p>
<h3 id="what-happened">What happened?</h3>
<p>In the Tailscale Windows client, the local API was bound to a local TCP socket, and communicated with the Windows client GUI in cleartext with no Host header verification. This allowed an attacker-controlled website visited by the node to rebind DNS to an attacker-controlled DNS server, and then make local API requests in the client, including changing the coordination server to an attacker-controlled coordination server.</p>
<h3 id="who-is-affected">Who is affected?</h3>
<p>All Windows clients prior to version v.1.32.3 are affected.</p>
<h3 id="what-should-i-do">What should I do?</h3>
<p>If you are running Tailscale on Windows, upgrade to v1.32.3 or later to remediate the issue.</p>
<h3 id="what-is-the-impact">What is the impact?</h3>
<p>An attacker-controlled coordination server can send malicious URL responses to the client, including pushing executables or installing an SMB share. These allow the attacker to remotely execute code on the node.</p>
<p>Reviewing all logs confirms this vulnerability was not triggered or exploited. </p>
<h3 id="credits">Credits</h3>
<p>We would like to thank <a href="https://github.com/emilytrau">Emily Trau</a> and <a href="https://twitter.com/JJJollyjim">Jamie McClymont (CyberCX)</a> for reporting this issue. Further detail is available in <a href="https://emily.id.au/tailscale">their blog post</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://tailscale.com/security-bulletins/#ts-2022-004">TS-2022-004</a></li>
<li><a href="https://emily.id.au/tailscale">Researcher blog post</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, <a href="https://tailscale.com/contact/support/">contact Tailscale support</a>.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp">https://github.com/tailscale/tailscale/security/advisories/GHSA-vqp6-rc3h-83cp</a></li>
<li><a href="https://github.com/advisories/GHSA-vqp6-rc3h-83cp">https://github.com/advisories/GHSA-vqp6-rc3h-83cp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vqp6-rc3h-83cp</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-21T22:34:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet/v2/fileutil] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2022-11-22T21:48:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/duke-git/lancet/v2/fileutil] Lancet vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</id>
        <link href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4"/>
        <updated>2022-11-22T21:48:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>What kind of vulnerability is it? Who is impacted?</p>
<p>ZipSlip issue when use fileutil package to unzip files.</p>
<h3 id="patches">Patches</h3>
<p>Has the problem been patched? What versions should users upgrade to?</p>
<p>It will fixed in v2.1.10, Please upgrade version to v2.1.10 or above.
Users who use v1.x.x should upgrade v1.3.4 or above.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Is there a way for users to fix or remediate the vulnerability without upgrading?</p>
<p>No, users have to upgrade version.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/duke-git/lancet/security/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41920">https://nvd.nist.gov/vuln/detail/CVE-2022-41920</a></li>
<li><a href="https://github.com/duke-git/lancet/issues/62">https://github.com/duke-git/lancet/issues/62</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572">https://github.com/duke-git/lancet/commit/f133b32faa05eb93e66175d01827afa4b7094572</a></li>
<li><a href="https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9">https://github.com/duke-git/lancet/commit/f869a0a67098e92d24ddd913e188b32404fa72c9</a></li>
<li><a href="https://github.com/advisories/GHSA-pp3f-xrw5-q5j4">https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pp3f-xrw5-q5j4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-21T22:31:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/codenotary/immudb/pkg/client] Lack of proper validation of server UUID can be used by the server to trick the client to accept invalid proofs]]></title>
        <id>https://github.com/advisories/GHSA-6cqj-6969-p57x</id>
        <link href="https://github.com/advisories/GHSA-6cqj-6969-p57x"/>
        <updated>2022-11-28T16:16:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>immudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server.</p>
<h3 id="patches">Patches</h3>
<p>The following Go SDK versions are not vulnerable:</p>
<table>
<thead>
<tr>
<th><strong>SDK</strong></th>
<th><strong>Version</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="pkg.go.dev/github.com/codenotary/immudb/pkg/client">go</a></td>
<td>1.4.1</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>When initializing an immudb client object, a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in <a href="https://github.com/codenotary/immudb/discussions/new">immudb Discussions</a></li>
<li>Email us at <a href="mailto:immudb-security@codenotary.com">immudb-security@codenotary.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x">https://github.com/codenotary/immudb/security/advisories/GHSA-6cqj-6969-p57x</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39199">https://nvd.nist.gov/vuln/detail/CVE-2022-39199</a></li>
<li><a href="https://github.com/codenotary/immudb/releases/tag/v1.4.1">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/advisories/GHSA-6cqj-6969-p57x">https://github.com/advisories/GHSA-6cqj-6969-p57x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cqj-6969-p57x</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-21T20:38:51.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/codenotary/immudb/pkg/client] Insufficient Verification of Proofs generated by the immudb server in client SDK.]]></title>
        <id>https://github.com/advisories/GHSA-672p-m5jq-mrh8</id>
        <link href="https://github.com/advisories/GHSA-672p-m5jq-mrh8"/>
        <updated>2022-11-28T16:03:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In certain scenario a malicious immudb server can provide a falsified proof that will be accepted by the client SDK signing a falsified transaction replacing the genuine one. This situation can not be triggered by a genuine immudb server and requires the client to perform a specific list of verified operations resulting in acceptance of an invalid state value.</p>
<p>This vulnerability only affects immudb client SDKs, the immudb server itself is not affected by this vulnerability.</p>
<h3 id="detailed-description">Detailed description</h3>
<p>immudb uses Merkle Tree enhanced with additional linear part to perform consistency proofs between two transactions. The linear part is built from the last leaf node of the Merkle Tree compensating for transactions that were not yet consumed by the Merkle Tree calculation.</p>
<p>The Merkle Tree part is then used to perform proofs for things that are in transaction range covered by the Merkle Tree where the linear part is used to check those that are not yet in the Merkle Tree.</p>
<p>When doing consistency checks between two immudb states, the linear proof part is not fully checked. In fact only the first (last Merkle Tree leaf) and the last (current DB state value) are checked against new Merkle Tree without ensuring that elements in the middle of that chain are correctly added as Merkle Tree leafs.</p>
<p>This lack of check means that the database can present different set of hashes on the linear proof part to what would later be used once those become part of the Merkle Tree. This property can be exploited by the database to expose two different transaction entries depending on the other transaction that the user requested consistency proof for.</p>
<p>In practice this could lead to a following scenario:</p>
<ul>
<li>a client requests a verified write operation</li>
<li>the server responds with a proof for the transaction</li>
<li>client stores the state value retrieved from the server and expects it to be a confirmation of that write and all the history of the database before that transaction</li>
<li>a series of validated read / write operations is performed by the client, each accompanied by a successfully validated consistency proof and update of the client state</li>
<li>the client requests verified get operation on the transaction it has written before (and that was verified with a proof from the server)</li>
<li>the server replies with a completely different transaction that can be properly validated according to the currently stored db state on the client side</li>
</ul>
<h3 id="patches">Patches</h3>
<p>The following Go SDK versions is not vulnerable:</p>
<table>
<thead>
<tr>
<th><strong>SDK</strong></th>
<th><strong>Version</strong></th>
</tr>
</thead>
<tbody><tr>
<td><a href="pkg.go.dev/github.com/codenotary/immudb/pkg/client">go</a></td>
<td>1.4.1</td>
</tr>
</tbody></table>
<h3 id="workarounds">Workarounds</h3>
<p>Invalid proofs can not be generated in a normal immudb server and will be detected by a genuine replica server.
To ensure that the server does not produce invalid proofs and to check that the history presented by the server
does not contain falsified transactions, one should run a genuine immudb replica server in a safe environment
and fully synchronize all databases with the primary.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open a discussion in <a href="https://github.com/codenotary/immudb/discussions/new">immudb Discussions</a></li>
<li>Email us at <a href="mailto:immudb-security@codenotary.com">immudb-security@codenotary.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8">https://github.com/codenotary/immudb/security/advisories/GHSA-672p-m5jq-mrh8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-36111">https://nvd.nist.gov/vuln/detail/CVE-2022-36111</a></li>
<li><a href="https://github.com/codenotary/immudb/releases/tag/v1.4.1">https://github.com/codenotary/immudb/releases/tag/v1.4.1</a></li>
<li><a href="https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake">https://github.com/codenotary/immudb/tree/master/docs/security/vulnerabilities/linear-fake</a></li>
<li><a href="https://pkg.go.dev/github.com/codenotary/immudb/pkg/client">https://pkg.go.dev/github.com/codenotary/immudb/pkg/client</a></li>
<li><a href="https://github.com/advisories/GHSA-672p-m5jq-mrh8">https://github.com/advisories/GHSA-672p-m5jq-mrh8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-672p-m5jq-mrh8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-21T20:38:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lightningnetwork/lnd] Witness Block Parsing DoS Vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-hc82-w9v8-83pr</id>
        <link href="https://github.com/advisories/GHSA-hc82-w9v8-83pr"/>
        <updated>2022-11-18T18:50:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All lnd nodes before version <code>v0.15.4</code> are vulnerable to a block parsing bug that can cause a node to enter a degraded state once encountered. In this degraded state, nodes can continue to make payments and forward HTLCs, and close out channels. Opening channels is prohibited, and also on chain transaction events will be undetected. </p>
<p>This can cause loss of funds if a CSV expiry is researched during a breach attempt or a CLTV delta expires forgetting the funds in the HTLC. </p>
<h3 id="patches">Patches</h3>
<p>A patch is available starting with lnd <code>v0.15.4</code>. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Nodes can use the <code>lncli updatechanpolicy</code> RPC call to increase their CLTV value to a very high amount or increase their fee policies. This will prevent nodes from routing through your node, meaning that no pending HTLCs can be present. </p>
<h3 id="references">References</h3>
<p><a href="https://github.com/lightningnetwork/lnd/issues/7096">https://github.com/lightningnetwork/lnd/issues/7096</a></p>
<p><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr">https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39389">https://nvd.nist.gov/vuln/detail/CVE-2022-39389</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/issues/7096">https://github.com/lightningnetwork/lnd/issues/7096</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/pull/7098">https://github.com/lightningnetwork/lnd/pull/7098</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></li>
<li><a href="https://github.com/advisories/GHSA-hc82-w9v8-83pr">https://github.com/advisories/GHSA-hc82-w9v8-83pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hc82-w9v8-83pr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-18T18:50:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2022-11-19T01:18:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>For users who're using v1.6, please update the v1.6.1.
For users who're using v1.5, please update the v1.5.8.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2022-11-19T01:18:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>For users who're using v1.6, please update the v1.6.1.
For users who're using v1.5, please update the v1.5.8.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/shamaton/msgpack/v2] MessagePack for Golang subject to DoS via Unmarshal panic]]></title>
        <id>https://github.com/advisories/GHSA-jr77-8gx4-h5qh</id>
        <link href="https://github.com/advisories/GHSA-jr77-8gx4-h5qh"/>
        <updated>2022-11-16T00:04:13.000Z</updated>
        <content type="html"><![CDATA[<p>Unmarshal can panic on some inputs, possibly allowing for denial of service attacks. This issue has been patched in version 2.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41719">https://nvd.nist.gov/vuln/detail/CVE-2022-41719</a></li>
<li><a href="https://github.com/shamaton/msgpack/issues/31">https://github.com/shamaton/msgpack/issues/31</a></li>
<li><a href="https://github.com/shamaton/msgpack/pull/32">https://github.com/shamaton/msgpack/pull/32</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0972">https://pkg.go.dev/vuln/GO-2022-0972</a></li>
<li><a href="https://github.com/shamaton/msgpack/releases/tag/v2.1.1">https://github.com/shamaton/msgpack/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-jr77-8gx4-h5qh">https://github.com/advisories/GHSA-jr77-8gx4-h5qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr77-8gx4-h5qh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-11T12:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference]]></title>
        <id>https://github.com/advisories/GHSA-prjq-f4q3-fvfr</id>
        <link href="https://github.com/advisories/GHSA-prjq-f4q3-fvfr"/>
        <updated>2022-11-15T19:05:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In versions prior to v0.7.0 it was possible for an attacker to supply an invalid assertion which would trigger a panic due to a nil-pointer dereference.</p>
<h3 id="patches">Patches</h3>
<p>The issue was patched in v0.7.0, released on March 2, 2022.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Callers to <code>gosaml2</code> can use <code>recover()</code> to handle panics to mitigate a potential DoS.</p>
<h3 id="references">References</h3>
<p>See issue #59 for details.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr">https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/advisories/GHSA-prjq-f4q3-fvfr">https://github.com/advisories/GHSA-prjq-f4q3-fvfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prjq-f4q3-fvfr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-15T19:05:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2022-11-15T19:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
</feed>