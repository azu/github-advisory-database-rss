<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-10-24T22:01:19.969Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/jumpserver/koko] Jumpserver Koko vulnerable to remote code execution on the host system via MongoDB shell ]]></title>
        <id>https://github.com/advisories/GHSA-4r5x-x283-wm96</id>
        <link href="https://github.com/advisories/GHSA-4r5x-x283-wm96"/>
        <updated>2023-10-24T19:47:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated user can exploit a vulnerability in MongoDB sessions to execute arbitrary commands, leading to remote code execution. This vulnerability may further be leveraged to gain root privileges on the host system.</p>
<h3 id="details">Details</h3>
<p>Through the WEB CLI interface provided by koko, a user logs into the authorized mongoDB database and exploits the MongoDB session to execute arbitrary commands.</p>
<pre><code>admin&gt; const { execSync } = require("child_process")
admin&gt; console.log(execSync("id; hostname;").toString())
uid=0(root) gid=0(root) groups=0(root)
jms_koko
admin&gt; 
</code></pre>
<h3 id="patches">Patches</h3>
<p>Safe versions: </p>
<ul>
<li>v2.28.20</li>
<li>v3.7.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade the safe versions.</p>
<p>After upgrade, you can use the same method to check whether the vulnerability is fixed.</p>
<pre><code>admin&gt; console.log(execSync("id; hostname;").toString())
/bin/sh: line 1: /bin/hostname: Permission denied
</code></pre>
<h3 id="references">References</h3>
<p>Thanks for <strong>Oskar Zeino-Mahmalat</strong> of <a href="https://sonarsource.com/">Sonar</a> found and report this vulnerability </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jumpserver/jumpserver/security/advisories/GHSA-4r5x-x283-wm96">https://github.com/jumpserver/jumpserver/security/advisories/GHSA-4r5x-x283-wm96</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43651">https://nvd.nist.gov/vuln/detail/CVE-2023-43651</a></li>
<li><a href="https://github.com/jumpserver/koko/commit/7d80db95d17c8f42bdf50260dfc21dc2bd0452c2">https://github.com/jumpserver/koko/commit/7d80db95d17c8f42bdf50260dfc21dc2bd0452c2</a></li>
<li><a href="https://github.com/jumpserver/koko/commit/857f8b9e41f0930dc6190a35d8601fffa5e884e7">https://github.com/jumpserver/koko/commit/857f8b9e41f0930dc6190a35d8601fffa5e884e7</a></li>
<li><a href="https://github.com/advisories/GHSA-4r5x-x283-wm96">https://github.com/advisories/GHSA-4r5x-x283-wm96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4r5x-x283-wm96</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-24T19:47:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/jumpserver/koko] Jumpserver Koko vulnerable to remote code execution on the host system via MongoDB shell ]]></title>
        <id>https://github.com/advisories/GHSA-4r5x-x283-wm96</id>
        <link href="https://github.com/advisories/GHSA-4r5x-x283-wm96"/>
        <updated>2023-10-24T19:47:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An authenticated user can exploit a vulnerability in MongoDB sessions to execute arbitrary commands, leading to remote code execution. This vulnerability may further be leveraged to gain root privileges on the host system.</p>
<h3 id="details">Details</h3>
<p>Through the WEB CLI interface provided by koko, a user logs into the authorized mongoDB database and exploits the MongoDB session to execute arbitrary commands.</p>
<pre><code>admin&gt; const { execSync } = require("child_process")
admin&gt; console.log(execSync("id; hostname;").toString())
uid=0(root) gid=0(root) groups=0(root)
jms_koko
admin&gt; 
</code></pre>
<h3 id="patches">Patches</h3>
<p>Safe versions: </p>
<ul>
<li>v2.28.20</li>
<li>v3.7.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>It is recommended to upgrade the safe versions.</p>
<p>After upgrade, you can use the same method to check whether the vulnerability is fixed.</p>
<pre><code>admin&gt; console.log(execSync("id; hostname;").toString())
/bin/sh: line 1: /bin/hostname: Permission denied
</code></pre>
<h3 id="references">References</h3>
<p>Thanks for <strong>Oskar Zeino-Mahmalat</strong> of <a href="https://sonarsource.com/">Sonar</a> found and report this vulnerability </p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/jumpserver/jumpserver/security/advisories/GHSA-4r5x-x283-wm96">https://github.com/jumpserver/jumpserver/security/advisories/GHSA-4r5x-x283-wm96</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-43651">https://nvd.nist.gov/vuln/detail/CVE-2023-43651</a></li>
<li><a href="https://github.com/jumpserver/koko/commit/7d80db95d17c8f42bdf50260dfc21dc2bd0452c2">https://github.com/jumpserver/koko/commit/7d80db95d17c8f42bdf50260dfc21dc2bd0452c2</a></li>
<li><a href="https://github.com/jumpserver/koko/commit/857f8b9e41f0930dc6190a35d8601fffa5e884e7">https://github.com/jumpserver/koko/commit/857f8b9e41f0930dc6190a35d8601fffa5e884e7</a></li>
<li><a href="https://github.com/advisories/GHSA-4r5x-x283-wm96">https://github.com/advisories/GHSA-4r5x-x283-wm96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4r5x-x283-wm96</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-24T19:47:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/free5gc/udm] free5GC udm vulnerable to Invalid Curve Attack]]></title>
        <id>https://github.com/advisories/GHSA-cqvv-r3g3-26rf</id>
        <link href="https://github.com/advisories/GHSA-cqvv-r3g3-26rf"/>
        <updated>2023-10-24T02:00:11.000Z</updated>
        <content type="html"><![CDATA[<p>pkg/suci/suci.go in free5GC udm before 1.2.0, when Go before 1.19 is used, allows an Invalid Curve Attack because it may compute a shared secret via an uncompressed public key that has not been validated. An attacker can send arbitrary SUCIs to the UDM, which tries to decrypt them via both its private key and the attacker's public key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46324">https://nvd.nist.gov/vuln/detail/CVE-2023-46324</a></li>
<li><a href="https://github.com/free5gc/udm/pull/20">https://github.com/free5gc/udm/pull/20</a></li>
<li><a href="https://github.com/free5gc/udm/compare/v1.1.1...v1.2.0">https://github.com/free5gc/udm/compare/v1.1.1...v1.2.0</a></li>
<li><a href="https://github.com/free5gc/udm/commit/5e1479cc686f058992557669b13fd3761a1b6024">https://github.com/free5gc/udm/commit/5e1479cc686f058992557669b13fd3761a1b6024</a></li>
<li><a href="https://github.com/advisories/GHSA-cqvv-r3g3-26rf">https://github.com/advisories/GHSA-cqvv-r3g3-26rf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqvv-r3g3-26rf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-23T03:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/leanote/leanote] leanote vulnerable to cross-site scripting]]></title>
        <id>https://github.com/advisories/GHSA-6cmv-2548-82v4</id>
        <link href="https://github.com/advisories/GHSA-6cmv-2548-82v4"/>
        <updated>2023-10-20T23:01:18.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, has been found in leanote. This issue affects the function define of the file <code>public/js/plugins/history.js</code>. The manipulation of the argument content leads to cross site scripting. The attack may be initiated remotely. The name of the patch is https:/github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19. It is recommended to apply a patch to fix this issue. The identifier VDB-216461 was assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4263">https://nvd.nist.gov/vuln/detail/CVE-2021-4263</a></li>
<li><a href="https://github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19">https://github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19</a></li>
<li><a href="https://vuldb.com/?id.216461">https://vuldb.com/?id.216461</a></li>
<li><a href="https://vuldb.com/?ctiid.216461">https://vuldb.com/?ctiid.216461</a></li>
<li><a href="https://github.com/advisories/GHSA-6cmv-2548-82v4">https://github.com/advisories/GHSA-6cmv-2548-82v4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6cmv-2548-82v4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-21T21:30:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gopistolet/gopistolet] GoPistolet vulnerable to Improper Resource Shutdown or Release]]></title>
        <id>https://github.com/advisories/GHSA-wr8h-w969-36m8</id>
        <link href="https://github.com/advisories/GHSA-wr8h-w969-36m8"/>
        <updated>2023-10-20T22:01:16.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in GoPistolet. It has been declared as problematic. This vulnerability affects unknown code of the component MTA. The manipulation leads to denial of service. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The name of the patch is b91aa4674d460993765884e8463c70e6d886bc90. It is recommended to apply a patch to fix this issue. VDB-221506 is the identifier assigned to this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-10085">https://nvd.nist.gov/vuln/detail/CVE-2015-10085</a></li>
<li><a href="https://github.com/gopistolet/gopistolet/pull/27">https://github.com/gopistolet/gopistolet/pull/27</a></li>
<li><a href="https://github.com/gopistolet/gopistolet/commit/b91aa4674d460993765884e8463c70e6d886bc90">https://github.com/gopistolet/gopistolet/commit/b91aa4674d460993765884e8463c70e6d886bc90</a></li>
<li><a href="https://vuldb.com/?ctiid.221506">https://vuldb.com/?ctiid.221506</a></li>
<li><a href="https://vuldb.com/?id.221506">https://vuldb.com/?id.221506</a></li>
<li><a href="https://github.com/advisories/GHSA-wr8h-w969-36m8">https://github.com/advisories/GHSA-wr8h-w969-36m8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wr8h-w969-36m8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-02-21T18:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/agnivade/easy-scrypt] easy-scrypt Observable Timing Discrepancy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-r894-5r7v-7rx3</id>
        <link href="https://github.com/advisories/GHSA-r894-5r7v-7rx3"/>
        <updated>2023-10-20T18:41:43.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability, which was classified as problematic, was found in agnivade easy-scrypt. Affected is the function <code>VerifyPassphrase</code> of the file <code>scrypt.go</code>. The manipulation leads to observable timing discrepancy. Upgrading to version 1.0.0 can address this issue. The name of the patch is 477c10cf3b144ddf96526aa09f5fdea613f21812. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-217596.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2014-125055">https://nvd.nist.gov/vuln/detail/CVE-2014-125055</a></li>
<li><a href="https://github.com/agnivade/easy-scrypt/commit/477c10cf3b144ddf96526aa09f5fdea613f21812">https://github.com/agnivade/easy-scrypt/commit/477c10cf3b144ddf96526aa09f5fdea613f21812</a></li>
<li><a href="https://github.com/agnivade/easy-scrypt/releases/tag/v1.0.0">https://github.com/agnivade/easy-scrypt/releases/tag/v1.0.0</a></li>
<li><a href="https://vuldb.com/?ctiid.217596">https://vuldb.com/?ctiid.217596</a></li>
<li><a href="https://vuldb.com/?id.217596">https://vuldb.com/?id.217596</a></li>
<li><a href="https://github.com/advisories/GHSA-r894-5r7v-7rx3">https://github.com/advisories/GHSA-r894-5r7v-7rx3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r894-5r7v-7rx3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-01-07T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/projectdiscovery/nuclei] Nuclei Path Traversal vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-2xx4-jj5v-6mff</id>
        <link href="https://github.com/advisories/GHSA-2xx4-jj5v-6mff"/>
        <updated>2023-10-20T17:45:21.000Z</updated>
        <content type="html"><![CDATA[<h2 id="overview">Overview</h2>
<p>We have identified and addressed a security issue in the Nuclei project that affected users utilizing Nuclei as <strong>Go code (SDK)</strong> running <strong>custom templates</strong>. This issue did not affect CLI users. The problem was related to sanitization issues with payloads loading in <code>sandbox</code> mode.</p>
<h2 id="details">Details</h2>
<p>In the previous versions, there was a potential risk with payloads loading in sandbox mode. The issue occurred due to relative paths not being converted to absolute paths before doing the check for <code>sandbox</code> flag allowing arbitrary files to be read on the filesystem in certain cases when using Nuclei from <code>Go</code> SDK implementation. </p>
<p>This issue has been fixed in the latest release, v2.9.9. We have also enabled sandbox by default for filesystem loading. This can be optionally disabled if required.</p>
<p>The <code>-sandbox</code> option has been <strong>deprecated</strong> and is now divided into two new options: <code>-lfa</code> (allow local file access) which is disabled by default and <code>-lna</code> (restrict local network access) which can be optionally disabled by user. The <code>-lfa</code> allows file (payload) access anywhere on the system (disabling sandbox effectively), and <code>-lna</code> blocks connections to the local/private network.</p>
<h2 id="affected-versions">Affected Versions</h2>
<p>This issue affected all versions of Nuclei prior to v2.9.9.</p>
<h2 id="patches">Patches</h2>
<p>We recommend all users upgrade to the latest version, <a href="https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9">v2.9.9</a>, which includes the security fix.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/projectdiscovery/nuclei/pull/3927">patch</a></li>
<li><a href="https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9">releases</a></li>
</ul>
<h2 id="acknowledgments">Acknowledgments</h2>
<p>We would like to thank <strong>keomutchoiboi</strong> who reported this issue to us via our security email, <a href="mailto:security@projectdiscovery.io">security@projectdiscovery.io</a>. We appreciate the responsible disclosure of this issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-2xx4-jj5v-6mff">https://github.com/projectdiscovery/nuclei/security/advisories/GHSA-2xx4-jj5v-6mff</a></li>
<li><a href="https://github.com/projectdiscovery/nuclei/pull/3927">https://github.com/projectdiscovery/nuclei/pull/3927</a></li>
<li><a href="https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9">https://github.com/projectdiscovery/nuclei/releases/tag/v2.9.9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-37896">https://nvd.nist.gov/vuln/detail/CVE-2023-37896</a></li>
<li><a href="https://github.com/advisories/GHSA-2xx4-jj5v-6mff">https://github.com/advisories/GHSA-2xx4-jj5v-6mff</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2xx4-jj5v-6mff</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-04T17:27:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/loft-sh/devspace] DevSpace vulnerable to remote code execution]]></title>
        <id>https://github.com/advisories/GHSA-6h8c-gw33-cjm2</id>
        <link href="https://github.com/advisories/GHSA-6h8c-gw33-cjm2"/>
        <updated>2023-10-19T18:23:23.000Z</updated>
        <content type="html"><![CDATA[<p>The UI in DevSpace 4.13.0 allows web sites to execute actions on pods (on behalf of a victim) because of a lack of authentication for the WebSocket protocol. This leads to remote code execution.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15391">https://nvd.nist.gov/vuln/detail/CVE-2020-15391</a></li>
<li><a href="https://github.com/devspace-cloud/devspace/releases/tag/v4.14.0">https://github.com/devspace-cloud/devspace/releases/tag/v4.14.0</a></li>
<li><a href="https://github.com/devspace-sh/devspace/issues/1128">https://github.com/devspace-sh/devspace/issues/1128</a></li>
<li><a href="https://github.com/advisories/GHSA-6h8c-gw33-cjm2">https://github.com/advisories/GHSA-6h8c-gw33-cjm2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6h8c-gw33-cjm2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T17:24:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[istio.io/istio] Istio vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-vc7h-cmp3-4hw5</id>
        <link href="https://github.com/advisories/GHSA-vc7h-cmp3-4hw5"/>
        <updated>2023-10-19T18:09:29.000Z</updated>
        <content type="html"><![CDATA[<p>Istio 1.3.x before 1.3.5 is vulnerable to denial of service because <code>continue_on_listener_filters_timeout</code> is set to True, a related issue to CVE-2019-18836.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-18817">https://nvd.nist.gov/vuln/detail/CVE-2019-18817</a></li>
<li><a href="https://github.com/istio/istio/issues/18229">https://github.com/istio/istio/issues/18229</a></li>
<li><a href="https://istio.io/news/2019/announcing-1.3.5/">https://istio.io/news/2019/announcing-1.3.5/</a></li>
<li><a href="https://github.com/istio/istio/issues/18229#issuecomment-553190142">https://github.com/istio/istio/issues/18229#issuecomment-553190142</a></li>
<li><a href="https://github.com/istio/istio/commit/7570a1f5b56c108aed6ecfa5d2a6048f444bfb37">https://github.com/istio/istio/commit/7570a1f5b56c108aed6ecfa5d2a6048f444bfb37</a></li>
<li><a href="https://github.com/advisories/GHSA-vc7h-cmp3-4hw5">https://github.com/advisories/GHSA-vc7h-cmp3-4hw5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc7h-cmp3-4hw5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:01:14.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ydb-platform/ydb-go-sdk/v3] ydb-go-sdk token in custom credentials object can leak through logs]]></title>
        <id>https://github.com/advisories/GHSA-q24m-6h38-5xj8</id>
        <link href="https://github.com/advisories/GHSA-q24m-6h38-5xj8"/>
        <updated>2023-10-19T21:56:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Since <a href="https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71">ydb-go-sdk/v3.48.6</a> if you use a custom credentials object (implementation of interface <a href="https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10">Credentials</a>) it may leak into logs. This happens because this object could be serialized into an error message using <code>fmt.Errorf("something went wrong (credentials: %q)", credentials)</code> during connection to the YDB server. Printf func use placeholder <code>%q</code> for string representation of argument with quotes. If an argument implements interface <code>fmt.Stringer</code>, it will used through <code>String()</code> func. In other cases used fallback - serialization with reflection.</p>
<p>If such logging occurred, a  malicious user with access to logs could read sensitive information (i.e. credentials) information and use it to get access to the database.</p>
<p>Who is impacted: applications with custom credentials object with an explicit token field.</p>
<p>A leak could have occurred if all of these conditions were met simultaneously:</p>
<ol>
<li>The credentials object does not implement the <code>fmt.Stringer</code> interface (does not have a <code>String()</code> method) - potentially these are custom credentials. Official credentials have a <code>String()</code> method.</li>
<li>There was an error connecting to YDB during driver creation via <code>ydb.Open(...)</code>.</li>
<li>Some logging system was configured (<code>ydb-go-sdk</code> does not log such errors by default).</li>
<li>The connection error was logged into a system that a malicious user had access to.</li>
</ol>
<h3 id="patches">Patches</h3>
<p><code>ydb-go-sdk</code> contains this problem in versions from v3.48.6 to v3.53.2. The fix for this problem has been released in version v3.53.3 (<a href="https://github.com/ydb-platform/ydb-go-sdk/pull/859">PR</a>).</p>
<h3 id="workarounds">Workarounds</h3>
<p>Implement the <code>fmt.Stringer</code> interface in your custom credentials type with explicit stringify of object state.</p>
<h3 id="references">References</h3>
<p>No public references.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ydb-platform/ydb-go-sdk/security/advisories/GHSA-q24m-6h38-5xj8">https://github.com/ydb-platform/ydb-go-sdk/security/advisories/GHSA-q24m-6h38-5xj8</a></li>
<li><a href="https://github.com/ydb-platform/ydb-go-sdk/pull/859">https://github.com/ydb-platform/ydb-go-sdk/pull/859</a></li>
<li><a href="https://github.com/ydb-platform/ydb-go-sdk/commit/a0d92057c4e1bbdc5e85ae8d649edb0232b8fd4c">https://github.com/ydb-platform/ydb-go-sdk/commit/a0d92057c4e1bbdc5e85ae8d649edb0232b8fd4c</a></li>
<li><a href="https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10">https://github.com/ydb-platform/ydb-go-sdk/blob/master/credentials/credentials.go#L10</a></li>
<li><a href="https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71">https://github.com/ydb-platform/ydb-go-sdk/blob/v3.48.6/internal/balancer/balancer.go#L71</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45825">https://nvd.nist.gov/vuln/detail/CVE-2023-45825</a></li>
<li><a href="https://github.com/advisories/GHSA-q24m-6h38-5xj8">https://github.com/advisories/GHSA-q24m-6h38-5xj8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q24m-6h38-5xj8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T17:10:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/artifacthub/hub] Artifact Hub arbitrary file read vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hmq4-c2r4-5q8h</id>
        <link href="https://github.com/advisories/GHSA-hmq4-c2r4-5q8h"/>
        <updated>2023-10-19T21:56:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a security audit of Artifact Hub's code base, a security researcher at <a href="https://www.offsec.com/">OffSec</a> identified a bug in which by using symbolic links in certain kinds of repositories loaded into Artifact Hub, it was possible to read internal files.</p>
<p>Artifact Hub indexes content from a variety of sources, including git repositories. When processing git based repositories, Artifact Hub clones the repository and, depending on the artifact kind, reads some files from it. During this process, in some cases, no validation was done to check if the file was a symbolic link. This made possible to read arbitrary files in the system, potentially leaking sensitive information.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in version <a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">1.16.0</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/artifacthub/hub/security/advisories/GHSA-hmq4-c2r4-5q8h">https://github.com/artifacthub/hub/security/advisories/GHSA-hmq4-c2r4-5q8h</a></li>
<li><a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45823">https://nvd.nist.gov/vuln/detail/CVE-2023-45823</a></li>
<li><a href="https://github.com/advisories/GHSA-hmq4-c2r4-5q8h">https://github.com/advisories/GHSA-hmq4-c2r4-5q8h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hmq4-c2r4-5q8h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-19T17:06:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/artifacthub/hub] Artifact Hub allows unsafe rego built-in]]></title>
        <id>https://github.com/advisories/GHSA-9pc8-m4vp-ggvf</id>
        <link href="https://github.com/advisories/GHSA-9pc8-m4vp-ggvf"/>
        <updated>2023-10-19T21:56:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a security audit of Artifact Hub's code base, a security researcher at <a href="https://www.offsec.com/">OffSec</a> identified a bug in which a default unsafe rego built-in was allowed to be used when defining authorization policies.</p>
<p>Artifact Hub includes a fine-grained authorization mechanism that allows organizations to define what actions can be performed by their members. It is based on customizable authorization policies that are enforced by the <a href="https://www.openpolicyagent.org/">Open Policy Agent</a>. Policies are written using <a href="https://www.openpolicyagent.org/docs/latest/#rego">rego</a> and their data files are expected to be json documents. By default, <code>rego</code> allows policies to make HTTP requests, which can be abused to send requests to internal resources and forward the responses to an external entity. In the context of Artifact Hub, this capability should have been disabled.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in version <a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">1.16.0</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/artifacthub/hub/security/advisories/GHSA-9pc8-m4vp-ggvf">https://github.com/artifacthub/hub/security/advisories/GHSA-9pc8-m4vp-ggvf</a></li>
<li><a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45822">https://nvd.nist.gov/vuln/detail/CVE-2023-45822</a></li>
<li><a href="https://www.openpolicyagent.org/">https://www.openpolicyagent.org/</a></li>
<li><a href="https://www.openpolicyagent.org/docs/latest/#rego">https://www.openpolicyagent.org/docs/latest/#rego</a></li>
<li><a href="https://github.com/advisories/GHSA-9pc8-m4vp-ggvf">https://github.com/advisories/GHSA-9pc8-m4vp-ggvf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9pc8-m4vp-ggvf</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-10-19T17:05:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/artifacthub/hub] Artifact Hub has Incorrect Docker Hub registry check]]></title>
        <id>https://github.com/advisories/GHSA-g6pq-x539-7w4j</id>
        <link href="https://github.com/advisories/GHSA-g6pq-x539-7w4j"/>
        <updated>2023-10-19T21:56:18.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a security audit of Artifact Hub's code base, a security researcher at <a href="https://www.offsec.com/">OffSec</a> identified a bug in which the <code>registryIsDockerHub</code> function was only checking that the registry domain had the <code>docker.io</code> suffix.</p>
<p>Artifact Hub allows providing some Docker credentials that are used to increase the rate limit applied when interacting with the Docker Hub registry API to read publicly available content. Due to the incorrect check described above, it'd be possible to hijack those credentials by purchasing a domain which ends with <code>docker.io</code> and deploying a fake OCI registry on it.</p>
<p><a href="https://artifacthub.io/">https://artifacthub.io/</a> uses some credentials that only have permissions to read public content available in the Docker Hub. However, even though credentials for private repositories (disabled on <code>artifacthub.io</code>) are handled in a different way, other Artifact Hub deployments could have been using them for a different purpose.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been resolved in version <a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">1.16.0</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/artifacthub/hub/security/advisories/GHSA-g6pq-x539-7w4j">https://github.com/artifacthub/hub/security/advisories/GHSA-g6pq-x539-7w4j</a></li>
<li><a href="https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0">https://artifacthub.io/packages/helm/artifact-hub/artifact-hub?modal=changelog&amp;version=1.16.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45821">https://nvd.nist.gov/vuln/detail/CVE-2023-45821</a></li>
<li><a href="https://github.com/advisories/GHSA-g6pq-x539-7w4j">https://github.com/advisories/GHSA-g6pq-x539-7w4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g6pq-x539-7w4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-19T17:04:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-server/v2] NATS.io: Adding accounts for just the system account adds auth bypass]]></title>
        <id>https://github.com/advisories/GHSA-fr2g-9hjm-wr23</id>
        <link href="https://github.com/advisories/GHSA-fr2g-9hjm-wr23"/>
        <updated>2023-10-19T16:13:04.000Z</updated>
        <content type="html"><![CDATA[<p>(This advisory is canonically <a href="https://advisories.nats.io/CVE/secnote-2023-01.txt">https://advisories.nats.io/CVE/secnote-2023-01.txt</a>)</p>
<h2 id="background">Background</h2>
<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>
<p>NATS users exist within accounts, and once using accounts, the old authorization block is not applicable.</p>
<h2 id="problem-description">Problem Description</h2>
<p>Without any authorization rules in the nats-server, users can connect without authentication.</p>
<p>Before nats-server 2.2.0, all authentication and authorization rules for a nats-server lived in an "authorization" block, defining users.  With nats-server 2.2.0 all users live inside accounts.  When using the authorization block, whose syntax predates this, those users will be placed into the implicit global account, "$G".  Users inside accounts go into the newer "accounts" block.</p>
<p>If an "accounts" block is defined, in simple deployment scenarios this is often used only to enable client access to the system account.  When the only account added is the system account "$SYS", the nats-server would create an implicit user in "$G" and set it as the <code>no_auth_user</code> account, enabling the same "without authentication" logic as without any rules.</p>
<p>This preserved the ability to connect simply, and then add one authenticated login for system access.</p>
<p>But with an "authorization" block, this is wrong.  Users exist in the global account, with login rules.  And in simple testing, they might still connect fine without administrators seeing that authentication has been disabled.</p>
<p>The blind-spot on our part came from encouraging and documenting a switch to using only "accounts", instead of "authorization".</p>
<p>In the fixed versions, using an "authorization" block will inhibit the implicit creation of a "$G" user and setting it as the <code>no_auth_user</code> target.  In unfixed versions, just creating a second account, with no users, will also inhibit this behavior.</p>
<h2 id="affected-versions">Affected versions</h2>
<p>NATS Server:</p>
<ul>
<li>2.2.0 up to and including 2.9.22 and 2.10.1</li>
<li>Fixed with nats-io/nats-server: 2.10.2 and backported to 2.9.23</li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>In the "accounts" block, define a second non-system account, leave it empty.</p>
<pre><code>accounts {
    SYS: {
        users: [
            { user: sysuser, password: makemeasandwich }
        ]
    }
    DUMMY: {}  # for security, before 2.10.2
}
system_account: SYS
</code></pre>
<h2 id="solution">Solution</h2>
<p>Any one of these:</p>
<ol>
<li>Upgrade the NATS server to at least 2.10.2 (or 2.9.23)</li>
<li>Or define a dummy account</li>
<li>Or complete the migration of authorization entries to be inside a named account in the "accounts" block</li>
</ol>
<h2 id="credits">Credits</h2>
<p>Problem reported by Alex Herrington.<br>Addressed publicly in a GitHub Discussion prior to this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23">https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23</a></li>
<li><a href="https://github.com/nats-io/nats-server/pull/4605">https://github.com/nats-io/nats-server/pull/4605</a></li>
<li><a href="https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478">https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478</a></li>
<li><a href="https://advisories.nats.io/CVE/secnote-2023-01.txt">https://advisories.nats.io/CVE/secnote-2023-01.txt</a></li>
<li><a href="https://github.com/nats-io/nats-server/discussions/4535">https://github.com/nats-io/nats-server/discussions/4535</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.10.2">https://github.com/nats-io/nats-server/releases/tag/v2.10.2</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.9.23">https://github.com/nats-io/nats-server/releases/tag/v2.9.23</a></li>
<li><a href="https://github.com/advisories/GHSA-fr2g-9hjm-wr23">https://github.com/advisories/GHSA-fr2g-9hjm-wr23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fr2g-9hjm-wr23</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-19T16:13:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nats-io/nats-server/v2] NATS.io: Adding accounts for just the system account adds auth bypass]]></title>
        <id>https://github.com/advisories/GHSA-fr2g-9hjm-wr23</id>
        <link href="https://github.com/advisories/GHSA-fr2g-9hjm-wr23"/>
        <updated>2023-10-19T16:13:04.000Z</updated>
        <content type="html"><![CDATA[<p>(This advisory is canonically <a href="https://advisories.nats.io/CVE/secnote-2023-01.txt">https://advisories.nats.io/CVE/secnote-2023-01.txt</a>)</p>
<h2 id="background">Background</h2>
<p>NATS.io is a high performance open source pub-sub distributed communication technology, built for the cloud, on-premise, IoT, and edge computing.</p>
<p>NATS users exist within accounts, and once using accounts, the old authorization block is not applicable.</p>
<h2 id="problem-description">Problem Description</h2>
<p>Without any authorization rules in the nats-server, users can connect without authentication.</p>
<p>Before nats-server 2.2.0, all authentication and authorization rules for a nats-server lived in an "authorization" block, defining users.  With nats-server 2.2.0 all users live inside accounts.  When using the authorization block, whose syntax predates this, those users will be placed into the implicit global account, "$G".  Users inside accounts go into the newer "accounts" block.</p>
<p>If an "accounts" block is defined, in simple deployment scenarios this is often used only to enable client access to the system account.  When the only account added is the system account "$SYS", the nats-server would create an implicit user in "$G" and set it as the <code>no_auth_user</code> account, enabling the same "without authentication" logic as without any rules.</p>
<p>This preserved the ability to connect simply, and then add one authenticated login for system access.</p>
<p>But with an "authorization" block, this is wrong.  Users exist in the global account, with login rules.  And in simple testing, they might still connect fine without administrators seeing that authentication has been disabled.</p>
<p>The blind-spot on our part came from encouraging and documenting a switch to using only "accounts", instead of "authorization".</p>
<p>In the fixed versions, using an "authorization" block will inhibit the implicit creation of a "$G" user and setting it as the <code>no_auth_user</code> target.  In unfixed versions, just creating a second account, with no users, will also inhibit this behavior.</p>
<h2 id="affected-versions">Affected versions</h2>
<p>NATS Server:</p>
<ul>
<li>2.2.0 up to and including 2.9.22 and 2.10.1</li>
<li>Fixed with nats-io/nats-server: 2.10.2 and backported to 2.9.23</li>
</ul>
<h2 id="workarounds">Workarounds</h2>
<p>In the "accounts" block, define a second non-system account, leave it empty.</p>
<pre><code>accounts {
    SYS: {
        users: [
            { user: sysuser, password: makemeasandwich }
        ]
    }
    DUMMY: {}  # for security, before 2.10.2
}
system_account: SYS
</code></pre>
<h2 id="solution">Solution</h2>
<p>Any one of these:</p>
<ol>
<li>Upgrade the NATS server to at least 2.10.2 (or 2.9.23)</li>
<li>Or define a dummy account</li>
<li>Or complete the migration of authorization entries to be inside a named account in the "accounts" block</li>
</ol>
<h2 id="credits">Credits</h2>
<p>Problem reported by Alex Herrington.<br>Addressed publicly in a GitHub Discussion prior to this advisory.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23">https://github.com/nats-io/nats-server/security/advisories/GHSA-fr2g-9hjm-wr23</a></li>
<li><a href="https://github.com/nats-io/nats-server/pull/4605">https://github.com/nats-io/nats-server/pull/4605</a></li>
<li><a href="https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478">https://github.com/nats-io/nats-server/commit/fa5b7afcb64e7e887e49afdd032358802b5c4478</a></li>
<li><a href="https://advisories.nats.io/CVE/secnote-2023-01.txt">https://advisories.nats.io/CVE/secnote-2023-01.txt</a></li>
<li><a href="https://github.com/nats-io/nats-server/discussions/4535">https://github.com/nats-io/nats-server/discussions/4535</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.10.2">https://github.com/nats-io/nats-server/releases/tag/v2.10.2</a></li>
<li><a href="https://github.com/nats-io/nats-server/releases/tag/v2.9.23">https://github.com/nats-io/nats-server/releases/tag/v2.9.23</a></li>
<li><a href="https://github.com/advisories/GHSA-fr2g-9hjm-wr23">https://github.com/advisories/GHSA-fr2g-9hjm-wr23</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fr2g-9hjm-wr23</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-19T16:13:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/u-root/u-root] github.com/u-root/u-root/pkg/tarutil Arbitrary File Write via Archive Extraction (Zip Slip)]]></title>
        <id>https://github.com/advisories/GHSA-75qf-wgfj-v652</id>
        <link href="https://github.com/advisories/GHSA-75qf-wgfj-v652"/>
        <updated>2023-10-18T22:18:14.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions up to and including version 0.7.0 of package github.com/u-root/u-root/pkg/tarutil. It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7669">https://nvd.nist.gov/vuln/detail/CVE-2020-7669</a></li>
<li><a href="https://github.com/u-root/u-root/pull/1817">https://github.com/u-root/u-root/pull/1817</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428</a></li>
<li><a href="https://github.com/u-root/u-root/issues/2449">https://github.com/u-root/u-root/issues/2449</a></li>
<li><a href="https://github.com/u-root/u-root/pull/2344">https://github.com/u-root/u-root/pull/2344</a></li>
<li><a href="https://github.com/advisories/GHSA-75qf-wgfj-v652">https://github.com/advisories/GHSA-75qf-wgfj-v652</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75qf-wgfj-v652</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T18:28:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kops] kOps privilege escalation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</id>
        <link href="https://github.com/advisories/GHSA-8gwj-m6vh-2g6j"/>
        <updated>2023-10-18T18:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1943">https://nvd.nist.gov/vuln/detail/CVE-2023-1943</a></li>
<li><a href="https://github.com/kubernetes/kops/issues/15539">https://github.com/kubernetes/kops/issues/15539</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU">https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU</a></li>
<li><a href="https://github.com/advisories/GHSA-8gwj-m6vh-2g6j">https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-12T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kops] kOps privilege escalation vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</id>
        <link href="https://github.com/advisories/GHSA-8gwj-m6vh-2g6j"/>
        <updated>2023-10-18T18:29:02.000Z</updated>
        <content type="html"><![CDATA[<p>Privilege Escalation in kOps using GCE/GCP Provider in Gossip Mode.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-1943">https://nvd.nist.gov/vuln/detail/CVE-2023-1943</a></li>
<li><a href="https://github.com/kubernetes/kops/issues/15539">https://github.com/kubernetes/kops/issues/15539</a></li>
<li><a href="https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU">https://groups.google.com/g/kubernetes-security-announce/c/yrCE1x89oaU</a></li>
<li><a href="https://github.com/advisories/GHSA-8gwj-m6vh-2g6j">https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8gwj-m6vh-2g6j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-10-12T00:30:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] go-ethereum vulnerable to denial of service via crafted GraphQL query]]></title>
        <id>https://github.com/advisories/GHSA-v9jh-j8px-98vq</id>
        <link href="https://github.com/advisories/GHSA-v9jh-j8px-98vq"/>
        <updated>2023-10-18T18:28:25.000Z</updated>
        <content type="html"><![CDATA[<p>Geth (aka go-ethereum) through 1.13.4, when <code>--http --graphql</code> is used, allows remote attackers to cause a denial of service (memory consumption and daemon hang) via a crafted GraphQL query.</p>
<p>NOTE: the vendor's position is that the "graphql endpoint [is not] designed to withstand attacks by hostile clients, nor handle huge amounts of clients/traffic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-42319">https://nvd.nist.gov/vuln/detail/CVE-2023-42319</a></li>
<li><a href="https://blog.mevsec.com/posts/geth-dos-with-graphql/">https://blog.mevsec.com/posts/geth-dos-with-graphql/</a></li>
<li><a href="https://geth.ethereum.org/docs/fundamentals/security">https://geth.ethereum.org/docs/fundamentals/security</a></li>
<li><a href="https://github.com/advisories/GHSA-v9jh-j8px-98vq">https://github.com/advisories/GHSA-v9jh-j8px-98vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v9jh-j8px-98vq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-18T06:30:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA DoS vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-hr4f-6jh8-f2vq</id>
        <link href="https://github.com/advisories/GHSA-hr4f-6jh8-f2vq"/>
        <updated>2023-10-18T18:25:59.000Z</updated>
        <content type="html"><![CDATA[<h2 id="overview">Overview</h2>
<p>OpenFGA is vulnerable to a DoS attack. When a number of ListObjects calls are executed, in some scenarios, those calls are not releasing resources even after a response has been sent, and the service as a whole becomes unresponsive.</p>
<h2 id="fix">Fix</h2>
<p>Upgrade to v1.3.4. This upgrade is backwards compatible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-hr4f-6jh8-f2vq">https://github.com/openfga/openfga/security/advisories/GHSA-hr4f-6jh8-f2vq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45810">https://nvd.nist.gov/vuln/detail/CVE-2023-45810</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v1.3.4">https://github.com/openfga/openfga/releases/tag/v1.3.4</a></li>
<li><a href="https://github.com/advisories/GHSA-hr4f-6jh8-f2vq">https://github.com/advisories/GHSA-hr4f-6jh8-f2vq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr4f-6jh8-f2vq</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-10-18T18:25:58.000Z</published>
    </entry>
</feed>