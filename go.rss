<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-08-30T00:03:24.052Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/sassoftware/go-rpmutils] github.com/sassoftware/go-rpmutils Arbitrary File Write via Archive Extraction (Zip Slip)]]></title>
        <id>https://github.com/advisories/GHSA-9423-6c93-gpp8</id>
        <link href="https://github.com/advisories/GHSA-9423-6c93-gpp8"/>
        <updated>2023-08-29T23:36:53.000Z</updated>
        <content type="html"><![CDATA[<p>The CPIO extraction functionality doesn't sanitize the paths of the archived files for leading and non-leading <code>..</code> which leads in file extraction outside of the current directory. Note, the fixing commit was applied to all affected versions which were re-released.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7667">https://nvd.nist.gov/vuln/detail/CVE-2020-7667</a></li>
<li><a href="https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0">https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0042">https://pkg.go.dev/vuln/GO-2020-0042</a></li>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
<li><a href="https://github.com/advisories/GHSA-9423-6c93-gpp8">https://github.com/advisories/GHSA-9423-6c93-gpp8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9423-6c93-gpp8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:13:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/goxmldsig] github.com/russellhaering/goxmldsig vulnerable to Signature Validation Bypass]]></title>
        <id>https://github.com/advisories/GHSA-q547-gmf8-8jr7</id>
        <link href="https://github.com/advisories/GHSA-q547-gmf8-8jr7"/>
        <updated>2023-08-29T23:34:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>With a carefully crafted XML file, an attacker can completely bypass signature validation and pass off an altered file as a signed one. </p>
<h3 id="patches">Patches</h3>
<p>A patch is available, all users of goxmldsig should upgrade to v1.1.0.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory open an issue at <a href="https://github.com/russellhaering/goxmldsig">https://github.com/russellhaering/goxmldsig</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7">https://github.com/russellhaering/goxmldsig/security/advisories/GHSA-q547-gmf8-8jr7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15216">https://nvd.nist.gov/vuln/detail/CVE-2020-15216</a></li>
<li><a href="https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64">https://github.com/russellhaering/goxmldsig/commit/f6188febf0c29d7ffe26a0436212b19cb9615e64</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GUH33FPUXED3FHYL25BJOQPRKFGPOMS2/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/GUH33FPUXED3FHYL25BJOQPRKFGPOMS2/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZECBFD4M4PHBMBOCMSQ537NOU37QOVWP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZECBFD4M4PHBMBOCMSQ537NOU37QOVWP/</a></li>
<li><a href="https://pkg.go.dev/github.com/russellhaering/goxmldsig?tab=overview">https://pkg.go.dev/github.com/russellhaering/goxmldsig?tab=overview</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0050">https://pkg.go.dev/vuln/GO-2020-0050</a></li>
<li><a href="https://github.com/advisories/GHSA-q547-gmf8-8jr7">https://github.com/advisories/GHSA-q547-gmf8-8jr7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q547-gmf8-8jr7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-24T16:57:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Pion DTLS Header reconstruction method can be thrown into an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</id>
        <link href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c"/>
        <updated>2023-08-29T23:32:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can send packets that will send Pion DTLS into an infinite loop when processing.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29190">https://nvd.nist.gov/vuln/detail/CVE-2022-29190</a></li>
<li><a href="https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf">https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0460">https://pkg.go.dev/vuln/GO-2022-0460</a></li>
<li><a href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/advisories/GHSA-cm8f-h6j3-p25c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:05:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls] Pion DTLS Header reconstruction method can be thrown into an infinite loop]]></title>
        <id>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</id>
        <link href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c"/>
        <updated>2023-08-29T23:32:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker can send packets that will send Pion DTLS into an infinite loop when processing.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/pion/dtls/security/advisories/GHSA-cm8f-h6j3-p25c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29190">https://nvd.nist.gov/vuln/detail/CVE-2022-29190</a></li>
<li><a href="https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf">https://github.com/pion/dtls/commit/e0b2ce3592e8e7d73713ac67b363a2e192a4cecf</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0460">https://pkg.go.dev/vuln/GO-2022-0460</a></li>
<li><a href="https://github.com/advisories/GHSA-cm8f-h6j3-p25c">https://github.com/advisories/GHSA-cm8f-h6j3-p25c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cm8f-h6j3-p25c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T22:05:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Pion/DTLS contains buffer for inbound DTLS fragments with no limit]]></title>
        <id>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</id>
        <link href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j"/>
        <updated>2023-08-29T23:31:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A buffer that was used for inbound network traffic had no upper limit. Pion DTLS would buffer all network traffic from the remote user until the handshake completes or times out. An attacker could exploit this to cause excessive memory usage.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29189">https://nvd.nist.gov/vuln/detail/CVE-2022-29189</a></li>
<li><a href="https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de">https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0461">https://pkg.go.dev/vuln/GO-2022-0461</a></li>
<li><a href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/advisories/GHSA-cx94-mrg9-rq4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:04:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls] Pion/DTLS contains buffer for inbound DTLS fragments with no limit]]></title>
        <id>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</id>
        <link href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j"/>
        <updated>2023-08-29T23:31:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A buffer that was used for inbound network traffic had no upper limit. Pion DTLS would buffer all network traffic from the remote user until the handshake completes or times out. An attacker could exploit this to cause excessive memory usage.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.4</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/pion/dtls/security/advisories/GHSA-cx94-mrg9-rq4j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29189">https://nvd.nist.gov/vuln/detail/CVE-2022-29189</a></li>
<li><a href="https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de">https://github.com/pion/dtls/commit/a6397ff7282bc56dc37a68ea9211702edb4de1de</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.4">https://github.com/pion/dtls/releases/tag/v2.1.4</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0461">https://pkg.go.dev/vuln/GO-2022-0461</a></li>
<li><a href="https://github.com/advisories/GHSA-cx94-mrg9-rq4j">https://github.com/advisories/GHSA-cx94-mrg9-rq4j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cx94-mrg9-rq4j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T22:04:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls/v2] Pion/DLTS Accepts Client Certificates Without CertificateVerify]]></title>
        <id>https://github.com/advisories/GHSA-w45j-f832-hxvh</id>
        <link href="https://github.com/advisories/GHSA-w45j-f832-hxvh"/>
        <updated>2023-08-29T23:28:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A DTLS Client could provide a Certificate that it doesn't posses the private key for and Pion DTLS wouldn't reject it. </p>
<p>This issue affects users that are using Client certificates only. The connection itself is still secure. The Certificate provided by clients can't be trusted when using a Pion DTLS server prior to v2.1.5</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.5</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh">https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29222">https://nvd.nist.gov/vuln/detail/CVE-2022-29222</a></li>
<li><a href="https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412">https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.5">https://github.com/pion/dtls/releases/tag/v2.1.5</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0462">https://pkg.go.dev/vuln/GO-2022-0462</a></li>
<li><a href="https://github.com/advisories/GHSA-w45j-f832-hxvh">https://github.com/advisories/GHSA-w45j-f832-hxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w45j-f832-hxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-25T19:26:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/dtls] Pion/DLTS Accepts Client Certificates Without CertificateVerify]]></title>
        <id>https://github.com/advisories/GHSA-w45j-f832-hxvh</id>
        <link href="https://github.com/advisories/GHSA-w45j-f832-hxvh"/>
        <updated>2023-08-29T23:28:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A DTLS Client could provide a Certificate that it doesn't posses the private key for and Pion DTLS wouldn't reject it. </p>
<p>This issue affects users that are using Client certificates only. The connection itself is still secure. The Certificate provided by clients can't be trusted when using a Pion DTLS server prior to v2.1.5</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to Pion DTLS v2.1.5</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds available, upgrade to Pion DTLS v2.1.5</p>
<h3 id="references">References</h3>
<p>Thank you to <a href="https://github.com/jupenur">Juho Nurminen</a> and the Mattermost team for discovering and reporting this. </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="http://github.com/pion/dtls">Pion DTLS</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh">https://github.com/pion/dtls/security/advisories/GHSA-w45j-f832-hxvh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-29222">https://nvd.nist.gov/vuln/detail/CVE-2022-29222</a></li>
<li><a href="https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412">https://github.com/pion/dtls/commit/d2f797183a9f044ce976e6df6f362662ca722412</a></li>
<li><a href="https://github.com/pion/dtls/releases/tag/v2.1.5">https://github.com/pion/dtls/releases/tag/v2.1.5</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0462">https://pkg.go.dev/vuln/GO-2022-0462</a></li>
<li><a href="https://github.com/advisories/GHSA-w45j-f832-hxvh">https://github.com/advisories/GHSA-w45j-f832-hxvh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w45j-f832-hxvh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-25T19:26:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pion/webrtc/v3] In github.com/pion/webrtc, failed DTLS certificate verification doesn't stop data channel communication]]></title>
        <id>https://github.com/advisories/GHSA-74xm-qj29-cq8p</id>
        <link href="https://github.com/advisories/GHSA-74xm-qj29-cq8p"/>
        <updated>2023-08-29T23:21:16.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Data channel communication was incorrectly allowed with users who have failed DTLS certificate verification.</p>
<p>This attack requires </p>
<ul>
<li>Attacker knows the ICE password. </li>
<li>Only take place during PeerConnection handshake.</li>
</ul>
<p>This attack can be detected by monitoring <code>PeerConnectionState</code> in all versions of Pion WebRTC.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade to v3.0.15. </p>
<p>The exact patch is <a href="https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e">https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Users should listen for when <code>PeerConnectionState</code> changes to <code>PeerConnectionStateFailed</code>. When it enters this state users should not continue using the PeerConnection.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/pion/webrtc">https://github.com/pion/webrtc</a></li>
<li>Email us at <a href="mailto:team@pion.ly">team@pion.ly</a></li>
</ul>
<p>Thank you to <a href="https://github.com/Gaukas">https://github.com/Gaukas</a> for discovering this.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pion/webrtc/security/advisories/GHSA-74xm-qj29-cq8p">https://github.com/pion/webrtc/security/advisories/GHSA-74xm-qj29-cq8p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-28681">https://nvd.nist.gov/vuln/detail/CVE-2021-28681</a></li>
<li><a href="https://github.com/pion/webrtc/issues/1708">https://github.com/pion/webrtc/issues/1708</a></li>
<li><a href="https://github.com/pion/webrtc/pull/1709">https://github.com/pion/webrtc/pull/1709</a></li>
<li><a href="https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e">https://github.com/pion/webrtc/commit/545613dcdeb5dedb01cce94175f40bcbe045df2e</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0104">https://pkg.go.dev/vuln/GO-2021-0104</a></li>
<li><a href="https://github.com/advisories/GHSA-74xm-qj29-cq8p">https://github.com/advisories/GHSA-74xm-qj29-cq8p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74xm-qj29-cq8p</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-25T18:42:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/osin] OpenShift OSIN vulnerable to Observable Timing Discrepancy]]></title>
        <id>https://github.com/advisories/GHSA-m7qp-cj9p-gj85</id>
        <link href="https://github.com/advisories/GHSA-m7qp-cj9p-gj85"/>
        <updated>2023-08-29T23:13:20.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability was found in OpenShift OSIN. It has been classified as problematic. This affects the function <code>ClientSecretMatches/CheckClientSecret</code>. The manipulation of the argument secret leads to observable timing discrepancy. The name of the patch is 8612686d6dda34ae9ef6b5a974e4b7accb4fea29. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216987.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-4294">https://nvd.nist.gov/vuln/detail/CVE-2021-4294</a></li>
<li><a href="https://github.com/openshift/osin/pull/200">https://github.com/openshift/osin/pull/200</a></li>
<li><a href="https://github.com/openshift/osin/commit/8612686d6dda34ae9ef6b5a974e4b7accb4fea29">https://github.com/openshift/osin/commit/8612686d6dda34ae9ef6b5a974e4b7accb4fea29</a></li>
<li><a href="https://vuldb.com/?ctiid.216987">https://vuldb.com/?ctiid.216987</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1201">https://pkg.go.dev/vuln/GO-2022-1201</a></li>
<li><a href="https://github.com/advisories/GHSA-m7qp-cj9p-gj85">https://github.com/advisories/GHSA-m7qp-cj9p-gj85</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m7qp-cj9p-gj85</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-12-28T18:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ory/fosite] Token reuse in Ory fosite]]></title>
        <id>https://github.com/advisories/GHSA-v3q9-2p3m-7g43</id>
        <link href="https://github.com/advisories/GHSA-v3q9-2p3m-7g43"/>
        <updated>2023-08-29T23:07:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When using client authentication method "private_key_jwt" <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication">[1]</a>, OpenId specification says the following about assertion <code>jti</code>:</p>
<blockquote>
<p>A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties</p>
</blockquote>
<p>Hydra does not seem to check the uniqueness of this <code>jti</code> value. Here is me sending the same token request twice, hence with the same <code>jti</code> assertion, and getting two access tokens:</p>
<pre><code>$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \
   --header 'Content-Type: application/x-www-form-urlencoded' \
   --data-urlencode 'grant_type=client_credentials' \
   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \
   --data-urlencode 'scope=application openid' \
   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \
   --data-urlencode 'client_assertion=eyJhb [...] jTw'
{"access_token":"zeG0NoqOtlACl8q5J6A-TIsNegQRRUzqLZaYrQtoBZQ.VR6iUcJQYp3u_j7pwvL7YtPqGhtyQe5OhnBE2KCp5pM","expires_in":3599,"scope":"application openid","token_type":"bearer"}⏎
$ curl --insecure --location --request POST 'https://localhost/_/oauth2/token' \
   --header 'Content-Type: application/x-www-form-urlencoded' \
   --data-urlencode 'grant_type=client_credentials' \
   --data-urlencode 'client_id=c001d00d-5ecc-beef-ca4e-b00b1e54a111' \
   --data-urlencode 'scope=application openid' \
   --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \
   --data-urlencode 'client_assertion=eyJhb [...] jTw'
{"access_token":"wOYtgCLxLXlELORrwZlmeiqqMQ4kRzV-STU2_Sollas.mwlQGCZWXN7G2IoegUe1P0Vw5iGoKrkOzOaplhMSjm4","expires_in":3599,"scope":"application openid","token_type":"bearer"}
</code></pre>
<h3 id="patches">Patches</h3>
<p>This issue is patched in 0.31.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Do not allow clients to use <code>private_key_jwt</code>.</p>
<h3 id="references">References</h3>
<p><a href="https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication">https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ory/fosite/security/advisories/GHSA-v3q9-2p3m-7g43">https://github.com/ory/fosite/security/advisories/GHSA-v3q9-2p3m-7g43</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15222">https://nvd.nist.gov/vuln/detail/CVE-2020-15222</a></li>
<li><a href="https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9">https://github.com/ory/fosite/commit/0c9e0f6d654913ad57c507dd9a36631e1858a3e9</a></li>
<li><a href="https://github.com/ory/fosite/releases/tag/v0.31.0">https://github.com/ory/fosite/releases/tag/v0.31.0</a></li>
<li><a href="https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication">https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0110">https://pkg.go.dev/vuln/GO-2021-0110</a></li>
<li><a href="https://github.com/advisories/GHSA-v3q9-2p3m-7g43">https://github.com/advisories/GHSA-v3q9-2p3m-7g43</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v3q9-2p3m-7g43</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-24T16:57:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/opencontainers/runc] Overflow in netlink bytemsg length field allows attacker to override netlink-based container configuration in RunC]]></title>
        <id>https://github.com/advisories/GHSA-v95c-p5hm-xq8f</id>
        <link href="https://github.com/advisories/GHSA-v95c-p5hm-xq8f"/>
        <updated>2023-08-29T22:55:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In runc, <a href="https://www.man7.org/linux/man-pages/man7/netlink.7.html">netlink</a> is used internally as a serialization system for specifying the relevant container configuration to the C portion of our code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration.</p>
<p>This vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces.</p>
<p>Prior to 9c444070ec7bb83995dbc0185da68284da71c554, in practice it was fairly difficult to specify an arbitrary-length netlink message with most container runtimes. The only user-controlled byte array was the namespace paths attributes which can be specified in runc's <code>config.json</code>, but as far as we can tell no container runtime gives raw access to that configuration setting -- and having raw access to that setting <strong>would allow the attacker to disable namespace protections entirely anyway</strong> (setting them to <code>/proc/1/ns/...</code> for instance). In addition, each namespace path is limited to 4096 bytes (with only 7 namespaces supported by runc at the moment) meaning that even with custom namespace paths it appears an attacker still cannot shove enough bytes into the netlink bytemsg in order to overflow the uint16 counter.</p>
<p>However, out of an abundance of caution (given how old this bug is) we decided to treat it as a potentially exploitable vulnerability with a low severity. After 9c444070ec7bb83995dbc0185da68284da71c554 (which was not present in any release of runc prior to the discovery of this bug), all mount paths are included as a giant netlink message which means that this bug becomes significantly more exploitable in more reasonable threat scenarios.</p>
<p>The main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure), though as mentioned above it appears this bug was not practically exploitable on any released version of runc to date.</p>
<h3 id="patches">Patches</h3>
<p>The patch for this is d72d057ba794164c3cce9451a00b72a78b25e1ae and runc 1.0.3 was released with this bug fixed.</p>
<h3 id="workarounds">Workarounds</h3>
<p>To the extent this is exploitable, disallowing untrusted namespace paths in container configuration should eliminate all practical ways of exploiting this bug. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.</p>
<h3 id="references">References</h3>
<ul>
<li>commit d72d057ba794 ("runc init: avoid netlink message length overflows")</li>
<li><a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=2241">https://bugs.chromium.org/p/project-zero/issues/detail?id=2241</a></li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thanks to Felix Wilhelm from Google Project Zero for discovering and reporting this vulnerability. In particular, the fact they found this vulnerability so quickly, before we made a 1.1 release of runc (which would've been vulnerable) was quite impressive.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/opencontainers/runc">our repo</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f">https://github.com/opencontainers/runc/security/advisories/GHSA-v95c-p5hm-xq8f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43784">https://nvd.nist.gov/vuln/detail/CVE-2021-43784</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554">https://github.com/opencontainers/runc/commit/9c444070ec7bb83995dbc0185da68284da71c554</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae">https://github.com/opencontainers/runc/commit/d72d057ba794164c3cce9451a00b72a78b25e1ae</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed">https://github.com/opencontainers/runc/commit/f50369af4b571e358f20b139eea52d612eb55eed</a></li>
<li><a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=2241">https://bugs.chromium.org/p/project-zero/issues/detail?id=2241</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html">https://lists.debian.org/debian-lts-announce/2021/12/msg00005.html</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/dde509df4e28cec33b3c99c6cda3d4fd5beafc77">https://github.com/opencontainers/runc/commit/dde509df4e28cec33b3c99c6cda3d4fd5beafc77</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0274">https://pkg.go.dev/vuln/GO-2022-0274</a></li>
<li><a href="https://github.com/advisories/GHSA-v95c-p5hm-xq8f">https://github.com/advisories/GHSA-v95c-p5hm-xq8f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v95c-p5hm-xq8f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-12-07T21:22:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] KubeVela VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2023-08-29T22:52:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<p>This issue is patched in 1.5.9 and 1.6.2.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1113">https://pkg.go.dev/vuln/GO-2022-1113</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] KubeVela VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2023-08-29T22:52:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<p>This issue is patched in 1.5.9 and 1.6.2.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1113">https://pkg.go.dev/vuln/GO-2022-1113</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/opencontainers/runc] Privilege Elevation in runc]]></title>
        <id>https://github.com/advisories/GHSA-q3j5-32m5-58c2</id>
        <link href="https://github.com/advisories/GHSA-q3j5-32m5-58c2"/>
        <updated>2023-08-29T22:43:33.000Z</updated>
        <content type="html"><![CDATA[<p>libcontainer/user/user.go in runC before 0.1.0, as used in Docker before 1.11.2, improperly treats a numeric UID as a potential username, which allows local users to gain privileges via a numeric username in the password file in a container.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2016-3697">https://nvd.nist.gov/vuln/detail/CVE-2016-3697</a></li>
<li><a href="https://github.com/docker/docker/issues/21436">https://github.com/docker/docker/issues/21436</a></li>
<li><a href="https://github.com/opencontainers/runc/pull/708">https://github.com/opencontainers/runc/pull/708</a></li>
<li><a href="https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091">https://github.com/opencontainers/runc/commit/69af385de62ea68e2e608335cffbb0f4aa3db091</a></li>
<li><a href="https://github.com/opencontainers/runc/releases/tag/v0.1.0">https://github.com/opencontainers/runc/releases/tag/v0.1.0</a></li>
<li><a href="https://lists.opensuse.org/opensuse-updates/2016-05/msg00111.html">https://lists.opensuse.org/opensuse-updates/2016-05/msg00111.html</a></li>
<li><a href="https://rhn.redhat.com/errata/RHSA-2016-1034.html">https://rhn.redhat.com/errata/RHSA-2016-1034.html</a></li>
<li><a href="https://rhn.redhat.com/errata/RHSA-2016-2634.html">https://rhn.redhat.com/errata/RHSA-2016-2634.html</a></li>
<li><a href="https://security.gentoo.org/glsa/201612-28">https://security.gentoo.org/glsa/201612-28</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0070">https://pkg.go.dev/vuln/GO-2021-0070</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-1034.html">http://rhn.redhat.com/errata/RHSA-2016-1034.html</a></li>
<li><a href="http://rhn.redhat.com/errata/RHSA-2016-2634.html">http://rhn.redhat.com/errata/RHSA-2016-2634.html</a></li>
<li><a href="https://github.com/advisories/GHSA-q3j5-32m5-58c2">https://github.com/advisories/GHSA-q3j5-32m5-58c2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-q3j5-32m5-58c2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-12-20T18:21:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kyverno/kyverno] kyverno verifyImages rule bypass possible with malicious proxy/registry]]></title>
        <id>https://github.com/advisories/GHSA-m3cq-xcx9-3gvm</id>
        <link href="https://github.com/advisories/GHSA-m3cq-xcx9-3gvm"/>
        <updated>2023-08-29T22:40:41.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users of Kyverno on versions 1.8.3 or 1.8.4 who use <code>verifyImages</code> rules to verify container image signatures, and do not prevent use of unknown registries.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in version <a href="https://github.com/kyverno/kyverno/releases/tag/v1.8.5">1.8.5</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Configure a Kyverno policy to restrict registries to a set of secure trusted image registries (<a href="https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/">sample</a>).</p>
<h3 id="references">References</h3>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kyverno/kyverno/security/advisories/GHSA-m3cq-xcx9-3gvm">https://github.com/kyverno/kyverno/security/advisories/GHSA-m3cq-xcx9-3gvm</a></li>
<li><a href="https://github.com/kyverno/kyverno/pull/5713">https://github.com/kyverno/kyverno/pull/5713</a></li>
<li><a href="https://github.com/kyverno/kyverno/releases/tag/v1.8.5">https://github.com/kyverno/kyverno/releases/tag/v1.8.5</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-47633">https://nvd.nist.gov/vuln/detail/CVE-2022-47633</a></li>
<li><a href="https://github.com/kyverno/kyverno/compare/v1.8.4...v1.8.5">https://github.com/kyverno/kyverno/compare/v1.8.4...v1.8.5</a></li>
<li><a href="https://kyverno.io/docs/writing-policies/verify-images/">https://kyverno.io/docs/writing-policies/verify-images/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-1180">https://pkg.go.dev/vuln/GO-2022-1180</a></li>
<li><a href="https://web.archive.org/web/20230426095744/https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/">https://web.archive.org/web/20230426095744/https://kyverno.io/policies/best-practices/restrict_image_registries/restrict_image_registries/</a></li>
<li><a href="https://github.com/advisories/GHSA-m3cq-xcx9-3gvm">https://github.com/advisories/GHSA-m3cq-xcx9-3gvm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m3cq-xcx9-3gvm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-12-21T17:24:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-fp52-qw33-mfmw</id>
        <link href="https://github.com/advisories/GHSA-fp52-qw33-mfmw"/>
        <updated>2023-08-29T22:39:29.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16250">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fp52-qw33-mfmw">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp52-qw33-mfmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-02T17:11:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-fp52-qw33-mfmw</id>
        <link href="https://github.com/advisories/GHSA-fp52-qw33-mfmw"/>
        <updated>2023-08-29T22:39:29.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16250">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fp52-qw33-mfmw">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp52-qw33-mfmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-02T17:11:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-fp52-qw33-mfmw</id>
        <link href="https://github.com/advisories/GHSA-fp52-qw33-mfmw"/>
        <updated>2023-08-29T22:39:29.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16250">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fp52-qw33-mfmw">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp52-qw33-mfmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-02T17:11:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Authentication Bypass by Spoofing and Insufficient Verification of Data Authenticity in Hashicorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-fp52-qw33-mfmw</id>
        <link href="https://github.com/advisories/GHSA-fp52-qw33-mfmw"/>
        <updated>2023-08-29T22:39:29.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise versions 0.7.1 and newer, when configured with the AWS IAM auth method, may be vulnerable to authentication bypass. Fixed in 1.2.5, 1.3.8, 1.4.4, and 1.5.1..</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-16250">https://nvd.nist.gov/vuln/detail/CVE-2020-16250</a></li>
<li><a href="https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151">https://github.com/hashicorp/vault/blob/master/CHANGELOG.md#151</a></li>
<li><a href="https://www.hashicorp.com/blog/category/vault/">https://www.hashicorp.com/blog/category/vault/</a></li>
<li><a href="http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html">http://packetstormsecurity.com/files/159478/Hashicorp-Vault-AWS-IAM-Integration-Authentication-Bypass.html</a></li>
<li><a href="https://github.com/advisories/GHSA-fp52-qw33-mfmw">https://github.com/advisories/GHSA-fp52-qw33-mfmw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fp52-qw33-mfmw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-08-02T17:11:41.000Z</published>
    </entry>
</feed>