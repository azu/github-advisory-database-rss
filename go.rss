<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-10-07T02:50:32.903Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd having a negative value for cluster node size results in an index out-of-bound panic during service discovery]]></title>
        <id>https://github.com/advisories/GHSA-9gp7-6833-wv89</id>
        <link href="https://github.com/advisories/GHSA-9gp7-6833-wv89"/>
        <updated>2022-10-06T23:18:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Validation</p>
<h3 id="detail">Detail</h3>
<p>When an etcd instance attempts to perform service discovery, if a cluster size is provided as a negative value, the etcd instance will panic without recovery.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-9gp7-6833-wv89">https://github.com/etcd-io/etcd/security/advisories/GHSA-9gp7-6833-wv89</a></li>
<li><a href="https://github.com/advisories/GHSA-9gp7-6833-wv89">https://github.com/advisories/GHSA-9gp7-6833-wv89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9gp7-6833-wv89</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:18:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd having a negative value for cluster node size results in an index out-of-bound panic during service discovery]]></title>
        <id>https://github.com/advisories/GHSA-9gp7-6833-wv89</id>
        <link href="https://github.com/advisories/GHSA-9gp7-6833-wv89"/>
        <updated>2022-10-06T23:18:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Validation</p>
<h3 id="detail">Detail</h3>
<p>When an etcd instance attempts to perform service discovery, if a cluster size is provided as a negative value, the etcd instance will panic without recovery.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-9gp7-6833-wv89">https://github.com/etcd-io/etcd/security/advisories/GHSA-9gp7-6833-wv89</a></li>
<li><a href="https://github.com/advisories/GHSA-9gp7-6833-wv89">https://github.com/advisories/GHSA-9gp7-6833-wv89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9gp7-6833-wv89</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:18:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd user credentials are stored in WAL logs in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-528j-9r78-wffx</id>
        <link href="https://github.com/advisories/GHSA-528j-9r78-wffx"/>
        <updated>2022-10-06T23:17:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Exposure</p>
<h3 id="workarounds">Workarounds</h3>
<p>The etcd assumes that the on disk files are secure. The possible fixes have been provided, however, it is the responsibility of the etcd users to make sure that the etcd server WAL log files are secure. The <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md#does-etcd-encrypt-data-stored-on-disk-drives">etcd doesn't encrypt key/value data stored on disk drives</a>.</p>
<h3 id="detail">Detail</h3>
<p>User credentials (login and password) are stored in WAL entries on each user authentication. If the WAL log files are not secure, it can potentially expose sensitive information.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-528j-9r78-wffx">https://github.com/etcd-io/etcd/security/advisories/GHSA-528j-9r78-wffx</a></li>
<li><a href="https://github.com/advisories/GHSA-528j-9r78-wffx">https://github.com/advisories/GHSA-528j-9r78-wffx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-528j-9r78-wffx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:17:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd user credentials are stored in WAL logs in plaintext]]></title>
        <id>https://github.com/advisories/GHSA-528j-9r78-wffx</id>
        <link href="https://github.com/advisories/GHSA-528j-9r78-wffx"/>
        <updated>2022-10-06T23:17:25.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Exposure</p>
<h3 id="workarounds">Workarounds</h3>
<p>The etcd assumes that the on disk files are secure. The possible fixes have been provided, however, it is the responsibility of the etcd users to make sure that the etcd server WAL log files are secure. The <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/security.md#does-etcd-encrypt-data-stored-on-disk-drives">etcd doesn't encrypt key/value data stored on disk drives</a>.</p>
<h3 id="detail">Detail</h3>
<p>User credentials (login and password) are stored in WAL entries on each user authentication. If the WAL log files are not secure, it can potentially expose sensitive information.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-528j-9r78-wffx">https://github.com/etcd-io/etcd/security/advisories/GHSA-528j-9r78-wffx</a></li>
<li><a href="https://github.com/advisories/GHSA-528j-9r78-wffx">https://github.com/advisories/GHSA-528j-9r78-wffx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-528j-9r78-wffx</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:17:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd has no minimum password length]]></title>
        <id>https://github.com/advisories/GHSA-4993-m7g5-r9hh</id>
        <link href="https://github.com/advisories/GHSA-4993-m7g5-r9hh"/>
        <updated>2022-10-06T23:14:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Access Control</p>
<h3 id="workarounds">Workarounds</h3>
<p>The etcdctl and etcd API do not enforce a specific password length during user creation or user password update operations. <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/authentication.md#notes-on-password-strength">It is the responsibility of the administrator to enforce these requirements</a>.</p>
<h3 id="detail">Detail</h3>
<p>etcd does not perform any password length validation, which allows for very short passwords, such as those with a length of one. This may allow an attacker to guess or brute-force usersâ€™ passwords with little computational effort.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh">https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15115">https://nvd.nist.gov/vuln/detail/CVE-2020-15115</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-4993-m7g5-r9hh">https://github.com/advisories/GHSA-4993-m7g5-r9hh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4993-m7g5-r9hh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T23:14:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/client/v3] etcd has no minimum password length]]></title>
        <id>https://github.com/advisories/GHSA-4993-m7g5-r9hh</id>
        <link href="https://github.com/advisories/GHSA-4993-m7g5-r9hh"/>
        <updated>2022-10-06T23:14:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Access Control</p>
<h3 id="workarounds">Workarounds</h3>
<p>The etcdctl and etcd API do not enforce a specific password length during user creation or user password update operations. <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/authentication.md#notes-on-password-strength">It is the responsibility of the administrator to enforce these requirements</a>.</p>
<h3 id="detail">Detail</h3>
<p>etcd does not perform any password length validation, which allows for very short passwords, such as those with a length of one. This may allow an attacker to guess or brute-force usersâ€™ passwords with little computational effort.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh">https://github.com/etcd-io/etcd/security/advisories/GHSA-4993-m7g5-r9hh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15115">https://nvd.nist.gov/vuln/detail/CVE-2020-15115</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-4993-m7g5-r9hh">https://github.com/advisories/GHSA-4993-m7g5-r9hh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4993-m7g5-r9hh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T23:14:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/v3] etcd vulnerable to TOCTOU of gateway endpoint authentication]]></title>
        <id>https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</id>
        <link href="https://github.com/advisories/GHSA-h8g9-6gvh-5mrc"/>
        <updated>2022-10-06T23:12:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Authentication</p>
<h3 id="workarounds">Workarounds</h3>
<p>Refer to the <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. </p>
<h3 id="detail">Detail</h3>
<p>The gateway only authenticates endpoints detected from DNS SRV records, and it only authenticates the detected endpoints once. Therefore, if an endpoint changes its authentication settings, the gateway will continue to assume the endpoint is still authenticated. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-h8g9-6gvh-5mrc">https://github.com/etcd-io/etcd/security/advisories/GHSA-h8g9-6gvh-5mrc</a></li>
<li><a href="https://github.com/advisories/GHSA-h8g9-6gvh-5mrc">https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:12:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/v3] etcd vulnerable to TOCTOU of gateway endpoint authentication]]></title>
        <id>https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</id>
        <link href="https://github.com/advisories/GHSA-h8g9-6gvh-5mrc"/>
        <updated>2022-10-06T23:12:39.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Authentication</p>
<h3 id="workarounds">Workarounds</h3>
<p>Refer to the <a href="https://github.com/etcd-io/etcd/blob/master/Documentation/op-guide/gateway.md">gateway documentation</a>. The vulnerability was spotted due to unclear documentation of how the gateway handles endpoints validation. </p>
<h3 id="detail">Detail</h3>
<p>The gateway only authenticates endpoints detected from DNS SRV records, and it only authenticates the detected endpoints once. Therefore, if an endpoint changes its authentication settings, the gateway will continue to assume the endpoint is still authenticated. The auditors has noted that appropriate documentation of this validation functionality plus deprecation of this misleading functionality is an acceptable path forward.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md#product-security-committee-psc">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-h8g9-6gvh-5mrc">https://github.com/etcd-io/etcd/security/advisories/GHSA-h8g9-6gvh-5mrc</a></li>
<li><a href="https://github.com/advisories/GHSA-h8g9-6gvh-5mrc">https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h8g9-6gvh-5mrc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-10-06T23:12:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/v3] etcd's WAL `ReadAll`  method vulnerable to an entry with large index causing panic]]></title>
        <id>https://github.com/advisories/GHSA-m332-53r6-2w93</id>
        <link href="https://github.com/advisories/GHSA-m332-53r6-2w93"/>
        <updated>2022-10-06T23:03:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Validation</p>
<h3 id="detail">Detail</h3>
<p>In the ReadAll method in wal/wal.go, it is possible to have an entry index greater then the number of entries. This could cause issues when WAL entries are being read during consensus as an arbitrary etcd consensus participant could go down from a runtime panic when reading the entry.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-m332-53r6-2w93">https://github.com/etcd-io/etcd/security/advisories/GHSA-m332-53r6-2w93</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15112">https://nvd.nist.gov/vuln/detail/CVE-2020-15112</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/7d1cf640497cbcdfb932e619b13624112c7e3865">https://github.com/etcd-io/etcd/commit/7d1cf640497cbcdfb932e619b13624112c7e3865</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-m332-53r6-2w93">https://github.com/advisories/GHSA-m332-53r6-2w93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m332-53r6-2w93</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T23:03:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.etcd.io/etcd/v3] etcd's WAL `ReadAll`  method vulnerable to an entry with large index causing panic]]></title>
        <id>https://github.com/advisories/GHSA-m332-53r6-2w93</id>
        <link href="https://github.com/advisories/GHSA-m332-53r6-2w93"/>
        <updated>2022-10-06T23:03:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="vulnerability-type">Vulnerability type</h3>
<p>Data Validation</p>
<h3 id="detail">Detail</h3>
<p>In the ReadAll method in wal/wal.go, it is possible to have an entry index greater then the number of entries. This could cause issues when WAL entries are being read during consensus as an arbitrary etcd consensus participant could go down from a runtime panic when reading the entry.</p>
<h3 id="references">References</h3>
<p>Find out more on this vulnerability in the <a href="https://github.com/etcd-io/etcd/blob/master/security/SECURITY_AUDIT.pdf">security audit report</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Contact the <a href="https://github.com/etcd-io/etcd/blob/master/security/security-release-process.md">etcd security committee</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/etcd-io/etcd/security/advisories/GHSA-m332-53r6-2w93">https://github.com/etcd-io/etcd/security/advisories/GHSA-m332-53r6-2w93</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15112">https://nvd.nist.gov/vuln/detail/CVE-2020-15112</a></li>
<li><a href="https://github.com/etcd-io/etcd/commit/7d1cf640497cbcdfb932e619b13624112c7e3865">https://github.com/etcd-io/etcd/commit/7d1cf640497cbcdfb932e619b13624112c7e3865</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L6B6R43Y7M3DCHWK3L3UVGE2K6WWECMP/</a></li>
<li><a href="https://github.com/advisories/GHSA-m332-53r6-2w93">https://github.com/advisories/GHSA-m332-53r6-2w93</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m332-53r6-2w93</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T23:03:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/caddyserver/caddy/caddyhttp/httpserver] Caddy vulnerable to Authentication Bypass due to mishandling of TLS client authentication]]></title>
        <id>https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</id>
        <link href="https://github.com/advisories/GHSA-gr7w-x2jp-3xgw"/>
        <updated>2022-10-06T22:58:57.000Z</updated>
        <content type="html"><![CDATA[<p>Caddy before 0.10.13 mishandles TLS client authentication, as demonstrated by an authentication bypass caused by the lack of the StrictHostMatching mode.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-21246">https://nvd.nist.gov/vuln/detail/CVE-2018-21246</a></li>
<li><a href="https://github.com/caddyserver/caddy/commit/4d9ee000c8d2cbcdd8284007c1e0f2da7bc3c7c3">https://github.com/caddyserver/caddy/commit/4d9ee000c8d2cbcdd8284007c1e0f2da7bc3c7c3</a></li>
<li><a href="https://bugs.gentoo.org/715214">https://bugs.gentoo.org/715214</a></li>
<li><a href="https://github.com/caddyserver/caddy/releases/tag/v0.10.13">https://github.com/caddyserver/caddy/releases/tag/v0.10.13</a></li>
<li><a href="https://github.com/advisories/GHSA-gr7w-x2jp-3xgw">https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gr7w-x2jp-3xgw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-06T22:58:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/sylabs/sif/v2] SIF's Digital Signature Hash Algorithms Not Validated]]></title>
        <id>https://github.com/advisories/GHSA-m5m3-46gj-wch8</id>
        <link href="https://github.com/advisories/GHSA-m5m3-46gj-wch8"/>
        <updated>2022-10-06T19:54:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The <code>github.com/sylabs/sif/v2/pkg/integrity</code> package does not verify that the hash algorithm(s) used are cryptographically secure when verifying digital signatures.</p>
<h3 id="patches">Patches</h3>
<p>A patch is available in version &gt;= v2.8.1 of the module. Users are encouraged to upgrade.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users may independently validate that the hash algorithm(s) used for metadata digest(s) and signature hash are cryptographically secure.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/cve-2004-2761">CVE-2004-2761</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/cve-2005-4900">CVE-2005-4900</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/sylabs/sif/issues/new">github.com/sylabs/sif</a></li>
<li>Email us at <a href="mailto:security@sylabs.io">security@sylabs.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/sylabs/sif/security/advisories/GHSA-m5m3-46gj-wch8">https://github.com/sylabs/sif/security/advisories/GHSA-m5m3-46gj-wch8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39237">https://nvd.nist.gov/vuln/detail/CVE-2022-39237</a></li>
<li><a href="https://github.com/sylabs/sif/commit/07fb86029a12e3210f6131e065570124605daeaa">https://github.com/sylabs/sif/commit/07fb86029a12e3210f6131e065570124605daeaa</a></li>
<li><a href="https://github.com/sylabs/sif/releases/tag/v2.8.1">https://github.com/sylabs/sif/releases/tag/v2.8.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/cve-2004-2761">https://nvd.nist.gov/vuln/detail/cve-2004-2761</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/cve-2005-4900">https://nvd.nist.gov/vuln/detail/cve-2005-4900</a></li>
<li><a href="https://github.com/advisories/GHSA-m5m3-46gj-wch8">https://github.com/advisories/GHSA-m5m3-46gj-wch8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5m3-46gj-wch8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-06T19:54:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/flyteorg/flyteadmin] FlyteAdmin's Default OAuth Authorization Server secret must be rotated]]></title>
        <id>https://github.com/advisories/GHSA-67x4-qr35-qvrm</id>
        <link href="https://github.com/advisories/GHSA-67x4-qr35-qvrm"/>
        <updated>2022-10-06T19:30:13.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users who enable the default <a href="https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server">Flyteâ€™s authorization server</a> without changing the default clientid hashes will be exposed to the public internet.</p>
<p>In an effort to make enabling authentication easier for Flyte administrators, the default configuration for Flyte Admin allows access for Flyte Propeller even after turning on authentication via a hardcoded hashed password.  This password is also set on the default Flyte Propeller configmap in the various Flyte Helm charts.  Users who enable auth but do not override this setting in Flyte Adminâ€™s configuration may unknowingly allow public traffic in by way of this default password with attackers effectively impersonating propeller.  This only applies to users who have not specified the ExternalAuthorizationServer setting.  Using an external auth server automatically turns off this default configuration is not susceptible to this vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>1.1.44</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users should manually set the staticClients in the selfAuthServer section of their configuration if they intend to rely on Adminâ€™s internal auth server.  </p>
<h3 id="references">References</h3>
<p><a href="https://github.com/flyteorg/flyteadmin/pull/478">https://github.com/flyteorg/flyteadmin/pull/478</a>
<a href="https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server">https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server</a> </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/flyteorg/flyte/issues">Flyte</a></li>
<li>Email us <a href="mailto:admin@flyte.org">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/flyteorg/flyteadmin/security/advisories/GHSA-67x4-qr35-qvrm">https://github.com/flyteorg/flyteadmin/security/advisories/GHSA-67x4-qr35-qvrm</a></li>
<li><a href="https://github.com/flyteorg/flyteadmin/pull/478">https://github.com/flyteorg/flyteadmin/pull/478</a></li>
<li><a href="https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server">https://docs.flyte.org/en/latest/deployment/cluster_config/auth_setup.html#oauth2-authorization-server</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39273">https://nvd.nist.gov/vuln/detail/CVE-2022-39273</a></li>
<li><a href="https://github.com/advisories/GHSA-67x4-qr35-qvrm">https://github.com/advisories/GHSA-67x4-qr35-qvrm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-67x4-qr35-qvrm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-10-05T21:26:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] HashiCorp Vault Incorrect Permission Assignment for Critical Resource]]></title>
        <id>https://github.com/advisories/GHSA-pfmw-vj74-ph8g</id>
        <link href="https://github.com/advisories/GHSA-pfmw-vj74-ph8g"/>
        <updated>2022-10-05T18:26:29.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise 0.11.0 up to 1.7.5 and 1.8.4 templated ACL policies would always match the first-created entity alias if multiple entity aliases exist for a specified entity and mount combination, potentially resulting in incorrect policy enforcement. Fixed in Vault and Vault Enterprise 1.7.6, 1.8.5, and 1.9.0.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-43998">https://nvd.nist.gov/vuln/detail/CVE-2021-43998</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-30-vaults-templated-acl-policies-matched-first-created-alias-per-entity-and-auth-backend/32132">https://discuss.hashicorp.com/t/hcsec-2021-30-vaults-templated-acl-policies-matched-first-created-alias-per-entity-and-auth-backend/32132</a></li>
<li><a href="https://security.gentoo.org/glsa/202207-01">https://security.gentoo.org/glsa/202207-01</a></li>
<li><a href="https://github.com/advisories/GHSA-pfmw-vj74-ph8g">https://github.com/advisories/GHSA-pfmw-vj74-ph8g</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pfmw-vj74-ph8g</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2021-12-02T17:48:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/google/go-tpm/tpm] TPM 1.2 key authorization values vulnerable to TPM transport eavesdropper in go-tpm]]></title>
        <id>https://github.com/advisories/GHSA-5x29-3hr9-6wpw</id>
        <link href="https://github.com/advisories/GHSA-5x29-3hr9-6wpw"/>
        <updated>2022-10-05T18:04:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>TPM 2.0 users are unaffected by this issue.</p>
<p>An adversary eavesdropping on the TPM 1.2 transport path can calculate <code>usageAuth</code> for a key created with CreateWrapKey, even though this value is encrypted as part of the TPM 1.2 command protocol.
The TPM 1.2 CreateWrapKey command accepts two secrets: <code>usageAuth</code> and <code>migrationAuth</code>. The ADIP protocol (TPM 1.2 specification, part 1, section 13.4) calls for these values to be encrypted with two different XOR keys.
Due to a bug in go-tpm prior to version 0.3.0, both <code>usageAuth</code> and <code>migrationAuth</code> are encrypted with the same XOR keystream. This allows an adversary to XOR <code>encUsageAuth</code> and <code>encMigrationAuth</code> together to calculate <code>usageAuth ^ encMigrationAuth</code>. Since <code>migrationAuth</code> is moot for all keys created with go-tpm's <code>CreateWrapKey</code> (since all keys created with this function are marked non-migratable), an adversary may guess or know (from code/binary inspection) that <code>migrationAuth</code> is all 0x00 bytes or some other fixed value. Such an adversary can then calculate <code>usageAuth</code> and use this value later to improperly use the created key, unbeknownst to the creator of the key.</p>
<h3 id="patches">Patches</h3>
<p>Fixed in go-tpm version 0.3.0.</p>
<h3 id="workarounds">Workarounds</h3>
<ul>
<li>TPM 2.0 users: No workaround needed. This issue only affects TPM 1.2 users.</li>
<li>TPM 1.2 users: Call CreateWrapKey with a random 20-byte value for <code>migrationAuth</code>, even though that value is not used again (since CreateWrapKey creates keys that are non-migratable). Do not store or log this value.</li>
</ul>
<h3 id="details">Details</h3>
<p>TPM 1.2 uses a protocol called ADIP (Authorization Data Insertion Protocol) to encrypt authorization values over-the-wire for newly created objects. This prevents a bus-snooping attack like those publicized by TPM Genie. TPM 2.0 makes this optional (the way to do it is with parameter-encryption sessions). You can read more about ADIP in section 13.4 of Part 1: Design Principles in the latest <a href="https://trustedcomputinggroup.org/resource/tpm-main-specification/">TPM 1.2 specification</a>. Normally, ADIP consists of the following steps:</p>
<pre><code>Key := SHA1(authSession.SharedSecret || a nonce)
Note: nonces and auth values in TPM 1.2 are always 20 bytes
EncAuth := XOR(Key, Auth)
</code></pre>
<p>When commands require one ADIP-encrypted auth value, the nonce is the last nonceEven (last nonce from the TPM).
When commands require two ADIP-encrypted auth values, the nonce for the first auth value is still nonceEven, and the nonce for the second auth value is the last nonceOdd, which is the one being provided by the caller along with the current command on the session.
The reason for this is that you wouldn't want an adversary to be able to XOR the two encrypted auth values together and come up with (auth 1 XOR key) XOR (auth 2 XOR key) where the "one-time" pad key is used twice and cancels itself out.</p>
<p>Here are the commands that take one authorization value by ADIP:</p>
<ul>
<li>Seal (the sealed data's auth value)</li>
<li>Sealx (the sealed data's auth value)</li>
<li>CreateKey (the key's auth value)</li>
<li>MakeIdentity (the AIK's auth value)</li>
<li>ChangeAuth (the entity's new auth value)</li>
<li>ChangeAuthOwner (the new owner auth value)</li>
<li>Delegate_CreateKeyDelegation (the new delegation auth value)</li>
<li>Delegate_CreateOwnerDelegation (the new delegation auth value)</li>
<li>NV_DefineSpace (the NV's auth value)</li>
<li>CreateCounter (the counter's auth value)</li>
</ul>
<p>Here are the commands that take two authorization values by ADIP:</p>
<ul>
<li>CreateWrapKey (the key's auth value, and the key's migration (to export out of the TPM) auth value)</li>
</ul>
<p>The migrationAuth value is never used if the key does not have the TPM_KEY_FLAGS.migratable flag set on it. go-tpm does not currently allow the caller to set this flag.
Here was the bug in our implementation of CreateWrapKey():</p>
<p><a href="https://github.com/google/go-tpm/blob/16766ac4521425bd02ad23868fbdf24749268669/tpm/tpm.go#L1322-L1329">https://github.com/google/go-tpm/blob/16766ac4521425bd02ad23868fbdf24749268669/tpm/tpm.go#L1322-L1329</a></p>
<p>Here we see that both usageAuth and migrationAuth are encrypted by the same XOR key. This is the correct key (i.e., it is based on nonceEven) for usageAuth, but not migrationAuth.</p>
<p>This means 2 things:</p>
<p><strong>First: migrationAuth is being set to some value that is effectively unrelated to migrationAuth as passed by the caller.</strong> Again, this is not interesting to all current callers (given that there is no way for them to pass TPM_KEY_FLAGS.migratable via the current API; migrationAuth is not a meaningful value).</p>
<p><strong>Second, and much more importantly: a user of go-tpm is vulnerable to the following attack by a passive bus-snooping adversary (CVE-2020-8918)</strong>
Wait for a CreateWrapKey command
Collect encUsageAuth and encMigrationAuth
Calculate (usageAuth XOR migrationAuth) := (encUsageAuth XOR encMigrationAuth)
Assuming migrationAuth is all 0x00 (a reasonable assumption for a caller who knows the key is not migratable), the calculation in (3) is the usage auth of the key.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/go-tpm/security/advisories/GHSA-5x29-3hr9-6wpw">https://github.com/google/go-tpm/security/advisories/GHSA-5x29-3hr9-6wpw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8918">https://nvd.nist.gov/vuln/detail/CVE-2020-8918</a></li>
<li><a href="https://github.com/google/go-tpm/pull/195">https://github.com/google/go-tpm/pull/195</a></li>
<li><a href="https://github.com/advisories/GHSA-5x29-3hr9-6wpw">https://github.com/advisories/GHSA-5x29-3hr9-6wpw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5x29-3hr9-6wpw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-11T23:18:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dapr/dashboard] Dapr Dashboard vulnerable to Incorrect Access Control]]></title>
        <id>https://github.com/advisories/GHSA-2w6m-q946-399r</id>
        <link href="https://github.com/advisories/GHSA-2w6m-q946-399r"/>
        <updated>2022-10-06T18:21:12.000Z</updated>
        <content type="html"><![CDATA[<p>Dapr Dashboard v0.1.0 through v0.10.0 is vulnerable to Incorrect Access Control that allows attackers to obtain sensitive data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-38817">https://nvd.nist.gov/vuln/detail/CVE-2022-38817</a></li>
<li><a href="https://github.com/dapr/dashboard/issues/222">https://github.com/dapr/dashboard/issues/222</a></li>
<li><a href="https://github.com/dapr/dashboard">https://github.com/dapr/dashboard</a></li>
<li><a href="https://github.com/advisories/GHSA-2w6m-q946-399r">https://github.com/advisories/GHSA-2w6m-q946-399r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2w6m-q946-399r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-04T00:00:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bytebase/bytebase] Bytebase does not restrict low privilege user to access admin issues]]></title>
        <id>https://github.com/advisories/GHSA-5rc4-v5mj-g8c4</id>
        <link href="https://github.com/advisories/GHSA-5rc4-v5mj-g8c4"/>
        <updated>2022-10-04T21:42:31.000Z</updated>
        <content type="html"><![CDATA[<p>The <code>Bytebase</code> application does not restrict low privilege user to access <code>admin issues</code> for which an unauthorized user can view the <code>OPEN</code> and <code>CLOSED</code> issues by <code>Admin</code> and the affected endpoint is <code>/issue</code>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-32169">https://nvd.nist.gov/vuln/detail/CVE-2022-32169</a></li>
<li><a href="https://github.com/bytebase/bytebase/blob/1.0.4/frontend/src/store/modules/issue.ts#L108-#L187">https://github.com/bytebase/bytebase/blob/1.0.4/frontend/src/store/modules/issue.ts#L108-#L187</a></li>
<li><a href="https://www.mend.io/vulnerability-database/CVE-2022-32169">https://www.mend.io/vulnerability-database/CVE-2022-32169</a></li>
<li><a href="https://github.com/advisories/GHSA-5rc4-v5mj-g8c4">https://github.com/advisories/GHSA-5rc4-v5mj-g8c4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5rc4-v5mj-g8c4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-29T00:00:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dexidp/dex] Dex vulnerable to Man-in-the-Middle allowing ID token capture via intercepted authorization code]]></title>
        <id>https://github.com/advisories/GHSA-vh7g-p26c-j2cw</id>
        <link href="https://github.com/advisories/GHSA-vh7g-p26c-j2cw"/>
        <updated>2022-10-06T19:29:56.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Dex instances with public clients (and by extension, clients accepting tokens issued by those Dex instances) are affected by this vulnerability.</p>
<p>An attacker can exploit this vulnerability by making a victim navigate to a malicious website and guiding them through the OIDC flow, stealing the OAuth authorization code in the process. The authorization code then can be exchanged by the attacker for a token, gaining access to applications accepting that token.</p>
<h3 id="steps-to-reproduce">Steps to reproduce</h3>
<ol>
<li><p>A victim navigates to a malicious website</p>
</li>
<li><p>The webserver initiates a connection with a Dex instance directly - <a href="https://dexexample.com/auth/https:%252F%252Faccounts.google.com?access_type=online&amp;client_id=example&amp;nonce=2AaJAimQU9CbeOFsNra1d7CJTWB&amp;redirect_uri=http%3A%2F%2Flocalhost%3A40393%2Fauth%2Fcallback&amp;response_type=code&amp;scope=openid+email&amp;state=2AaJAjhpUmsB25csCo5muvorMTl">https://dexexample.com/auth/https:%252F%252Faccounts.google.com?access_type=online&amp;client_id=example&amp;nonce=2AaJAimQU9CbeOFsNra1d7CJTWB&amp;redirect_uri=http%3A%2F%2Flocalhost%3A40393%2Fauth%2Fcallback&amp;response_type=code&amp;scope=openid+email&amp;state=2AaJAjhpUmsB25csCo5muvorMTl</a>. In this example, the Dex instance is hosted on <code>dexexample.com</code>, and the connector is <code>accounts.google.com</code>.</p>
</li>
<li><p>Dex returns a 302 Redirect to the connector IDP, <a href="https://accounts.google.com/o/oauth2/v2/auth?client_id=237800849078-hri2ndt7gdafpf34kq8crd5sik9pe3so.apps.googleusercontent.com&amp;redirect_uri=https%3A%2F%2Fdexexample.com%2Fauth%2Fcallback&amp;response_type=code&amp;scope=openid+email&amp;state=g3dkmpontsr3ugocoddjx72ef">https://accounts.google.com/o/oauth2/v2/auth?client_id=237800849078-hri2ndt7gdafpf34kq8crd5sik9pe3so.apps.googleusercontent.com&amp;redirect_uri=https%3A%2F%2Fdexexample.com%2Fauth%2Fcallback&amp;response_type=code&amp;scope=openid+email&amp;state=g3dkmpontsr3ugocoddjx72ef</a>. The attacker records the state parameter value g3dkmpontsr3ugocoddjx72ef which will be used as the request ID later on.</p>
</li>
<li><p>The malicious website redirects the victimâ€™s browser to the connector IDP.</p>
</li>
<li><p>The user authenticates to the connector IDP. If they have authenticated before, they may not be presented with an authentication challenge. The user will silently be taken through the following steps:</p>
<p> Authentication with the connector IDP, which redirects the browser to the Dex callback with a code - <a href="https://dexexample.com/callback?state=g3dkmpontsr3ugocoddjx72ef&amp;code=4%2F0AX4XfWizg1PQEQNl18hmP0_YQ3iUYII2ed13n9ikKr_ZcV7uCZpZaPcIlxBzX5QwFIcs-w&amp;scope=email+openid+https%3A%2F%%5B2Fwww.googleapis.com%5D(http://2fwww.googleapis.com/)%2Fauth%2Fuserinfo.email&amp;authuser=0&amp;hd=%5Bgoogle.com%5D(http://google.com/)&amp;prompt=none">https://dexexample.com/callback?state=g3dkmpontsr3ugocoddjx72ef&amp;code=4%2F0AX4XfWizg1PQEQNl18hmP0_YQ3iUYII2ed13n9ikKr_ZcV7uCZpZaPcIlxBzX5QwFIcs-w&amp;scope=email+openid+https%3A%2F%[2Fwww.googleapis.com](http://2fwww.googleapis.com/)%2Fauth%2Fuserinfo.email&amp;authuser=0&amp;hd=[google.com](http://google.com/)&amp;prompt=none</a></p>
<p> Dex handles the callback, fetching the user claims from the connector IDP, persisting them and generating an OAuth code. Then Dex redirects the browser to the approval endpoint <a href="https://dexexample.com/approval?req=g3dkmpontsr3ugocoddjx72ef">https://dexexample.com/approval?req=g3dkmpontsr3ugocoddjx72ef</a>. Note that the req parameter is the same as the attacker's recorded state parameter.</p>
<p> Dex uses the request ID to look up the OAuth code, and builds a redirect to the original callback with the code - <a href="http://localhost:40393/auth/callback?code=bz5p3oov2wlh5k3rboa4atxas&amp;state=2AaJAjhpUmsB25csCo5muvorMTl">http://localhost:40393/auth/callback?code=bz5p3oov2wlh5k3rboa4atxas&amp;state=2AaJAjhpUmsB25csCo5muvorMTl</a>.</p>
</li>
</ol>
<p>In step 2., when the webserver initiates the connection to Dex and receives the redirect to the connector IDP, the webserver will persist the connector state parameter (<code>g3dkmpontsr3ugocoddjx72ef</code>), which is used as the request ID to later look up the OAuth code. As the user goes through the authentication flow with the connector IDP, the webserver will repeatedly request <code>/approval?req=&lt;state&gt;</code>. Once the user has successfully authenticated, if the webserver is able to call /approval before the victimâ€™s browser calls <code>/approval</code>, then an attacker can fetch the Dex OAuth code which can be exchanged for an ID token using the <code>/token</code> endpoint.</p>
<p>Note that PKCE does not defend against this attack since the webserver initiates the request to Dex with a known code challenge.</p>
<h3 id="fix">Fix</h3>
<p>The request has been made unpredictable with message authentication. This was accomplished by creating an <a href="https://en.wikipedia.org/wiki/HMAC">HMAC</a> using a randomly generated per-request secret. This secret is persisted between the initial login request and the approval request. Since the HMAC is derived using a secret key, its value cannot be known to an attacker, so they will be unable to poll <code>/approval</code> for the code.</p>
<h3 id="patches">Patches</h3>
<p>Update to 2.35.0.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No known workarounds (without impacting behavior) for existing versions.</p>
<p>Disabling public clients is the only way to defend against attacks exploiting this vulnerability.</p>
<h3 id="references">References</h3>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Start a new <a href="https://github.com/dexidp/dex/discussions/new?category=q-a">discussion</a></li>
<li>Email us at <a href="mailto:cncf-dex-maintainers@lists.cncf.io">cncf-dex-maintainers@lists.cncf.io</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/dexidp/dex/security/advisories/GHSA-vh7g-p26c-j2cw">https://github.com/dexidp/dex/security/advisories/GHSA-vh7g-p26c-j2cw</a></li>
<li><a href="https://github.com/dexidp/dex/releases/tag/v2.35.0">https://github.com/dexidp/dex/releases/tag/v2.35.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39222">https://nvd.nist.gov/vuln/detail/CVE-2022-39222</a></li>
<li><a href="https://github.com/dexidp/dex/commit/49471b14c8080ddb034d4855841123d378b7a634">https://github.com/dexidp/dex/commit/49471b14c8080ddb034d4855841123d378b7a634</a></li>
<li><a href="https://github.com/advisories/GHSA-vh7g-p26c-j2cw">https://github.com/advisories/GHSA-vh7g-p26c-j2cw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vh7g-p26c-j2cw</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-03T19:12:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/goflow/v3/decoders/sflow] Cloudflare GoFlow vulnerable to a Denial of Service in the sflow packet handling package]]></title>
        <id>https://github.com/advisories/GHSA-9rpw-2h95-666c</id>
        <link href="https://github.com/advisories/GHSA-9rpw-2h95-666c"/>
        <updated>2022-10-05T14:03:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The sflow decode package prior to version 3.4.4 is vulnerable to a denial of service attack. Attackers can craft malformed packets causing the process to consume huge amounts of memory resulting in a denial of service.</p>
<h3 id="patches">Patches</h3>
<p>Version 3.4.4 contains patches fixing this.</p>
<h3 id="workarounds">Workarounds</h3>
<p>A possible workaround is to not have your goflow collector publicly reachable.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/cloudflare/goflow">goflow repo</a></li>
<li>Email us <a href="mailto:netdev@cloudflare.com">netdev[@]cloudflare.com </a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/goflow/security/advisories/GHSA-9rpw-2h95-666c">https://github.com/cloudflare/goflow/security/advisories/GHSA-9rpw-2h95-666c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-2529">https://nvd.nist.gov/vuln/detail/CVE-2022-2529</a></li>
<li><a href="https://github.com/cloudflare/goflow/commit/2b94619a6204443e3ca1769f4e459f9f57039c51">https://github.com/cloudflare/goflow/commit/2b94619a6204443e3ca1769f4e459f9f57039c51</a></li>
<li><a href="https://github.com/cloudflare/goflow/commit/c829ccd2c0aafdc9b886b20bf6f28095607f4998">https://github.com/cloudflare/goflow/commit/c829ccd2c0aafdc9b886b20bf6f28095607f4998</a></li>
<li><a href="https://github.com/cloudflare/goflow/releases/tag/v3.4.4">https://github.com/cloudflare/goflow/releases/tag/v3.4.4</a></li>
<li><a href="https://github.com/advisories/GHSA-9rpw-2h95-666c">https://github.com/advisories/GHSA-9rpw-2h95-666c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9rpw-2h95-666c</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-01T15:52:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dutchcoders/transfer.sh] Dutchoders transfer.sh contains an XSS vulnerability via malicious file upload]]></title>
        <id>https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</id>
        <link href="https://github.com/advisories/GHSA-pwq7-f7f9-cm2j"/>
        <updated>2022-10-04T15:28:52.000Z</updated>
        <content type="html"><![CDATA[<p>dutchcoders Transfer.sh versions 1.4.0 and prior are vulnerable to Cross Site Scripting (XSS) via a malicious document uploaded in transfer.sh.  There is a fix commit merged into <a href="https://github.com/dutchcoders/transfer.sh/commit/31ad4e01e158497519f8680c187e1ceb8594c59d">main</a> for this issue, but an updated version has not yet been released.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-40931">https://nvd.nist.gov/vuln/detail/CVE-2022-40931</a></li>
<li><a href="https://github.com/dutchcoders/transfer.sh/issues/500">https://github.com/dutchcoders/transfer.sh/issues/500</a></li>
<li><a href="https://github.com/dutchcoders/transfer.sh/pull/501">https://github.com/dutchcoders/transfer.sh/pull/501</a></li>
<li><a href="https://github.com/advisories/GHSA-pwq7-f7f9-cm2j">https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pwq7-f7f9-cm2j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-09-30T00:00:34.000Z</published>
    </entry>
</feed>