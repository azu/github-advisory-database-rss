<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-07-02T09:01:25.045Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] github.com/cosmos/cosmos-sdk's x/crisis does not charge ConstantFee]]></title>
        <id>https://github.com/advisories/GHSA-w5w5-2882-47pc</id>
        <link href="https://github.com/advisories/GHSA-w5w5-2882-47pc"/>
        <updated>2023-06-30T22:23:26.000Z</updated>
        <content type="html"><![CDATA[<h1 id="xcrisis-does-not-charge-constantfee">x/crisis does not charge ConstantFee</h1>
<h3 id="impact">Impact</h3>
<p>If a transaction is sent to the <code>x/crisis</code> module to check an invariant, the ConstantFee parameter of the chain is NOT charged. All versions of the <code>x/crisis</code> module are affected on all versions of the Cosmos SDK.</p>
<h3 id="details">Details</h3>
<p>The <code>x/crisis</code> module is supposed to allow anyone to halt a chain in the event of a violated invariant by sending a <code>MsgVerifyInvariant</code> with the name of the invariant. Processing this message takes extra processing power hence a <code>ConstantFee</code> was introduced on the chain that is charged as extra from the reporter for the extra computational work. This is supposed to avert spammers on the chain making nodes do extra computations using this transaction. By not charging the <code>ConstantFee</code>, the transactions related to invariant checking are relatively cheaper compared to the computational need and other transactions.</p>
<p>That said, the submitter still has to pay the transaction fee to put the transaction on the network, hence using this weakness for spamming is limited by the usual mechanisms.</p>
<p>Synthetic testing showed up to a 20% increase in CPU usage on a validator node that is spammed by hundreds of <code>MsgVerifyInvariant</code> messages which still makes this an expensive operation to carry out on a live blockchain network.</p>
<h3 id="patches">Patches</h3>
<p>The <code>ConstantFee</code> charge of the <code>x/crisis</code> module will either be fixed or disabled in an upcoming regular release of the Cosmos SDK.</p>
<p>The <code>x/crisis</code> module was originally intended to allow chains to halt rather than continue with some unknown behavior in the case of an invariant violation (safety over liveness). However, as chains mature, and especially as the potential <a href="https://github.com/osmosis-labs/osmosis/issues/570">cost of halting increases</a>, chains should consider carefully what invariants they really want to halt for, and what invariants are just sort of helpful sanity checks.</p>
<p>The SDK team is working on new modules that allow chain developers to fine-tune the chain invariants and the necessary actions.</p>
<p>Hence, the decision was made that the <code>x/crisis</code> module will be deprecated when new modules take over its responsibilities.</p>
<h3 id="workarounds">Workarounds</h3>
<p>There is no workaround posted. Validators are advised to leave some extra computing room on their servers for possible spamming scenarios. (This is a good measure in any case.)</p>
<h3 id="references">References</h3>
<p>SDK developer epic about invariant checking: <a href="https://github.com/cosmos/cosmos-sdk/issues/15706">https://github.com/cosmos/cosmos-sdk/issues/15706</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc">https://github.com/cosmos/cosmos-sdk/security/advisories/GHSA-w5w5-2882-47pc</a></li>
<li><a href="https://github.com/cosmos/cosmos-sdk/issues/15706">https://github.com/cosmos/cosmos-sdk/issues/15706</a></li>
<li><a href="https://github.com/advisories/GHSA-w5w5-2882-47pc">https://github.com/advisories/GHSA-w5w5-2882-47pc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w5w5-2882-47pc</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-30T22:13:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/labring/sealos] Sealos billing system permission control defect]]></title>
        <id>https://github.com/advisories/GHSA-vpxf-q44g-w34w</id>
        <link href="https://github.com/advisories/GHSA-vpxf-q44g-w34w"/>
        <updated>2023-06-30T20:36:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>There is a permission flaw in the Sealos billing system, which allows users to control the recharge resource account. sealos. io/v1/Payment, resulting in the ability to recharge any amount of 1 RMB.</p>
<h3 id="details">Details</h3>
<p>The reason is that sealos is in arrears. Egg pain, we can't create a terminal anymore. Let's charge for it:</p>
<p>Then it was discovered that the charging interface had returned all resource information. Unfortunately, based on previous vulnerability experience, the namespace of this custom resource is still under the current user's control and may have permission to correct it.</p>
<h3 id="poc">PoC</h3>
<p>disable by publish</p>
<h3 id="impact">Impact</h3>
<ul>
<li>sealos public cloud user</li>
<li>CWE-287 Improper Authentication</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/labring/sealos/security/advisories/GHSA-vpxf-q44g-w34w">https://github.com/labring/sealos/security/advisories/GHSA-vpxf-q44g-w34w</a></li>
<li><a href="https://github.com/advisories/GHSA-vpxf-q44g-w34w">https://github.com/advisories/GHSA-vpxf-q44g-w34w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpxf-q44g-w34w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-30T20:36:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/labring/sealos] Improper configuration of RBAC permissions obtaining cluster control permissions]]></title>
        <id>https://github.com/advisories/GHSA-74j8-w7f9-pp62</id>
        <link href="https://github.com/advisories/GHSA-74j8-w7f9-pp62"/>
        <updated>2023-06-30T20:25:53.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Improper configuration of RBAC permissions resulted in obtaining cluster control permissions, which could control the entire cluster deployed with Sealos, as well as hundreds of pods and other resources within the cluster.</p>
<h3 id="details">Details</h3>
<p>detail's is disable by publish.</p>
<h3 id="poc">PoC</h3>
<p>detail's is disable by publish.</p>
<h3 id="impact">Impact</h3>
<ul>
<li>sealos public cloud user</li>
<li>CWE-287 Improper Authentication</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/labring/sealos/security/advisories/GHSA-74j8-w7f9-pp62">https://github.com/labring/sealos/security/advisories/GHSA-74j8-w7f9-pp62</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-33190">https://nvd.nist.gov/vuln/detail/CVE-2023-33190</a></li>
<li><a href="https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b">https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b</a></li>
<li><a href="https://github.com/advisories/GHSA-74j8-w7f9-pp62">https://github.com/advisories/GHSA-74j8-w7f9-pp62</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-74j8-w7f9-pp62</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-30T20:25:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[go.temporal.io/server] Temporal Server vulnerable to Incorrect Authorization and Insecure Default Initialization of Resource]]></title>
        <id>https://github.com/advisories/GHSA-gm2g-2xr9-pxxj</id>
        <link href="https://github.com/advisories/GHSA-gm2g-2xr9-pxxj"/>
        <updated>2023-06-30T20:25:38.000Z</updated>
        <content type="html"><![CDATA[<p>Insecure defaults in open-source Temporal Server before version 1.20 on all platforms allows an attacker to craft a task token with access to a namespace other than the one specified in the request. Creation of this task token must be done outside of the normal Temporal server flow. It requires the namespace UUID and information from the workflow history for the target namespace. Under these conditions, it is possible to interfere with pending tasks in other namespaces, such as marking a task failed or completed.
If a task is targeted for completion by the attacker, the targeted namespace must also be using the same data converter configuration as the initial, valid, namespace for the task completion payload to be decoded by workers in the target namespace.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3485">https://nvd.nist.gov/vuln/detail/CVE-2023-3485</a></li>
<li><a href="https://github.com/temporalio/temporal/releases/tag/v1.20.0">https://github.com/temporalio/temporal/releases/tag/v1.20.0</a></li>
<li><a href="https://github.com/advisories/GHSA-gm2g-2xr9-pxxj">https://github.com/advisories/GHSA-gm2g-2xr9-pxxj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gm2g-2xr9-pxxj</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-30T18:31:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA vulnerable to denial of service due to circular relationship]]></title>
        <id>https://github.com/advisories/GHSA-hr9r-8phq-5x8j</id>
        <link href="https://github.com/advisories/GHSA-hr9r-8phq-5x8j"/>
        <updated>2023-06-30T19:59:23.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>OpenFGA versions v1.1.0 and prior are vulnerable to a DoS attack when certain Check and ListObjects calls are executed against authorization models that contain circular relationship definitions.</p>
<h3 id="am-i-affected">Am I Affected?</h3>
<p>You are affected by this vulnerability if you are using OpenFGA v1.1.0 or earlier, and if you are executing certain <a href="https://openfga.dev/api/service#/Relationship%20Queries/Check">Check</a> or <a href="https://openfga.dev/api/service#/Relationship%20Queries/ListObjects">ListObjects</a> calls against a vulnerable authorization model. To see which of your models could be vulnerable to this attack, download OpenFGA v1.1.1 and run the following command: </p>
<pre><code>./openfga validate-models --datastore-engine &lt;ENGINE&gt; --datastore-uri &lt;URI&gt;
</code></pre>
<p>replacing the variables <code>&lt;ENGINE&gt;</code> and <code>&lt;URI&gt;</code> as needed.</p>
<h3 id="fix">Fix</h3>
<p>Upgrade to v1.1.1.</p>
<h3 id="backward-compatibility">Backward Compatibility</h3>
<p>If you are not passing an invalid authorization model (as identified by running <code>./openfga validate-models</code>) as a parameter of your Check and ListObjects calls, this upgrade is backwards compatible. </p>
<p>Otherwise, OpenFGA v1.1.1 will start returning HTTP 400 status codes on those calls.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-hr9r-8phq-5x8j">https://github.com/openfga/openfga/security/advisories/GHSA-hr9r-8phq-5x8j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35933">https://nvd.nist.gov/vuln/detail/CVE-2023-35933</a></li>
<li><a href="https://github.com/openfga/openfga/commit/087ce392595f3c319ab3028b5089118ea4063452">https://github.com/openfga/openfga/commit/087ce392595f3c319ab3028b5089118ea4063452</a></li>
<li><a href="https://openfga.dev/api/service#/Relationship%20Queries/Check">https://openfga.dev/api/service#/Relationship%20Queries/Check</a></li>
<li><a href="https://openfga.dev/api/service#/Relationship%20Queries/ListObjects">https://openfga.dev/api/service#/Relationship%20Queries/ListObjects</a></li>
<li><a href="https://github.com/advisories/GHSA-hr9r-8phq-5x8j">https://github.com/advisories/GHSA-hr9r-8phq-5x8j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hr9r-8phq-5x8j</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-28T22:49:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/authzed/spicedb] SpiceDB's LookupResources may return partial results]]></title>
        <id>https://github.com/advisories/GHSA-m54h-5x5f-5m6r</id>
        <link href="https://github.com/advisories/GHSA-m54h-5x5f-5m6r"/>
        <updated>2023-06-30T20:25:43.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Any user making a negative authorization decision based on the results of a LookupResources request with 1.22.0 is affected.</p>
<p>For example, using <code>LookupResources</code> to find a list of resources to allow access to be okay: some subjects that should have access to a resource may not. But if using <code>LookupResources</code> to find a list of banned resources instead, then some users that shouldn't have access may.</p>
<p>Generally, <code>LookupResources</code> is not and should not be used to gate access in this way - that's what the <code>Check</code> API is for. Additionally, version 1.22.0 has included a warning about this bug since its initial release.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Avoid using <code>LookupResources</code> for negative authorization decisions if using <code>1.22.0</code>. </p>
<h3 id="patches">Patches</h3>
<p>The only affected release is <a href="https://github.com/authzed/spicedb/releases/tag/v1.22.0">v1.22.0</a>, and it is patched in <a href="https://github.com/authzed/spicedb/releases/tag/v1.22.2">v1.22.2</a> (there is no v1.22.1 release, though there is a git tag).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/authzed/spicedb/pull/1397">https://github.com/authzed/spicedb/pull/1397</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/authzed/spicedb">SpiceDB</a></li>
<li>Ask a question in the <a href="https://authzed.com/discord">SpiceDB Discord</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/authzed/spicedb/security/advisories/GHSA-m54h-5x5f-5m6r">https://github.com/authzed/spicedb/security/advisories/GHSA-m54h-5x5f-5m6r</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35930">https://nvd.nist.gov/vuln/detail/CVE-2023-35930</a></li>
<li><a href="https://github.com/authzed/spicedb/pull/1397">https://github.com/authzed/spicedb/pull/1397</a></li>
<li><a href="https://github.com/authzed/spicedb/releases/tag/v1.22.2">https://github.com/authzed/spicedb/releases/tag/v1.22.2</a></li>
<li><a href="https://github.com/advisories/GHSA-m54h-5x5f-5m6r">https://github.com/advisories/GHSA-m54h-5x5f-5m6r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m54h-5x5f-5m6r</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-06-28T22:48:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/corazawaf/coraza/v2] Coraza has potential denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</id>
        <link href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h"/>
        <updated>2023-06-27T23:07:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Due to the misuse of <code>log.Fatalf</code>, the application using coraza crashed after receiving crafted requests from attackers.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a>
The bodyprocessors of multipart uses <code>log.Fatalf</code> to handle errors from the <code>mime.ParseMediaType</code>, but <code>log.Fatalf</code> calls <code>os.Exit</code> directly after logging the error.
<a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a>
This means that the application will immediately crash after receiving a malicious request that triggers an error in <code>mime.ParseMediaType</code>.</p>
<h3 id="poc">PoC</h3>
<p>The server can be demonstrated by <a href="https://github.com/corazawaf/coraza/tree/main/examples/http-server">https://github.com/corazawaf/coraza/tree/main/examples/http-server</a></p>
<p>After sending this request</p>
<pre><code>POST / HTTP/1.1
Host: 127.0.0.1:8090
User-Agent: curl/8.1.2
Accept: */*
Content-Length: 199
Content-Type: multipart/form-data; boundary=------------------------5fa6351b877326a1; a=1; a=2
Connection: close

--------------------------5fa6351b877326a1
Content-Disposition: form-data; name="file"; filename="123"
Content-Type: application/octet-stream

123

--------------------------5fa6351b877326a1--
</code></pre>
<p>The server will crash immediately. The <code>a=1; a=2</code> in <code>Content-Type</code> makes <code>mime: duplicate parameter name</code> error.</p>
<h3 id="impact">Impact</h3>
<p>I believe the vulnerability was introduced by the following commit: <a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a>.</p>
<h3 id="mitigation">Mitigation</h3>
<p>The error from <code>mime.ParseMediaType</code> should return directly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h</a></li>
<li><a href="https://github.com/corazawaf/coraza-caddy/issues/48">https://github.com/corazawaf/coraza-caddy/issues/48</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8">https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8</a></li>
<li><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a></li>
<li><a href="https://github.com/corazawaf/coraza/releases/tag/v3.0.1">https://github.com/corazawaf/coraza/releases/tag/v3.0.1</a></li>
<li><a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a></li>
<li><a href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/advisories/GHSA-c2pj-v37r-2p6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-26T15:48:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/corazawaf/coraza/v3] Coraza has potential denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</id>
        <link href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h"/>
        <updated>2023-06-27T23:07:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Due to the misuse of <code>log.Fatalf</code>, the application using coraza crashed after receiving crafted requests from attackers.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a>
The bodyprocessors of multipart uses <code>log.Fatalf</code> to handle errors from the <code>mime.ParseMediaType</code>, but <code>log.Fatalf</code> calls <code>os.Exit</code> directly after logging the error.
<a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a>
This means that the application will immediately crash after receiving a malicious request that triggers an error in <code>mime.ParseMediaType</code>.</p>
<h3 id="poc">PoC</h3>
<p>The server can be demonstrated by <a href="https://github.com/corazawaf/coraza/tree/main/examples/http-server">https://github.com/corazawaf/coraza/tree/main/examples/http-server</a></p>
<p>After sending this request</p>
<pre><code>POST / HTTP/1.1
Host: 127.0.0.1:8090
User-Agent: curl/8.1.2
Accept: */*
Content-Length: 199
Content-Type: multipart/form-data; boundary=------------------------5fa6351b877326a1; a=1; a=2
Connection: close

--------------------------5fa6351b877326a1
Content-Disposition: form-data; name="file"; filename="123"
Content-Type: application/octet-stream

123

--------------------------5fa6351b877326a1--
</code></pre>
<p>The server will crash immediately. The <code>a=1; a=2</code> in <code>Content-Type</code> makes <code>mime: duplicate parameter name</code> error.</p>
<h3 id="impact">Impact</h3>
<p>I believe the vulnerability was introduced by the following commit: <a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a>.</p>
<h3 id="mitigation">Mitigation</h3>
<p>The error from <code>mime.ParseMediaType</code> should return directly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h</a></li>
<li><a href="https://github.com/corazawaf/coraza-caddy/issues/48">https://github.com/corazawaf/coraza-caddy/issues/48</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8">https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8</a></li>
<li><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a></li>
<li><a href="https://github.com/corazawaf/coraza/releases/tag/v3.0.1">https://github.com/corazawaf/coraza/releases/tag/v3.0.1</a></li>
<li><a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a></li>
<li><a href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/advisories/GHSA-c2pj-v37r-2p6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-26T15:48:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana vulnerable to Authentication Bypass by Spoofing]]></title>
        <id>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</id>
        <link href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc"/>
        <updated>2023-06-27T23:07:51.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is validating Azure AD accounts based on the email claim. </p>
<p>On Azure AD, the profile email field is not unique and can be easily modified. </p>
<p>This leads to account takeover and authentication bypass when Azure AD OAuth is configured with a multi-tenant app. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3128">https://nvd.nist.gov/vuln/detail/CVE-2023-3128</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2023-3128/">https://grafana.com/security/security-advisories/cve-2023-3128/</a></li>
<li><a href="https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md">https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc">https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-22T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana vulnerable to Authentication Bypass by Spoofing]]></title>
        <id>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</id>
        <link href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc"/>
        <updated>2023-06-27T23:07:51.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is validating Azure AD accounts based on the email claim. </p>
<p>On Azure AD, the profile email field is not unique and can be easily modified. </p>
<p>This leads to account takeover and authentication bypass when Azure AD OAuth is configured with a multi-tenant app. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3128">https://nvd.nist.gov/vuln/detail/CVE-2023-3128</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2023-3128/">https://grafana.com/security/security-advisories/cve-2023-3128/</a></li>
<li><a href="https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md">https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc">https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-22T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana vulnerable to Authentication Bypass by Spoofing]]></title>
        <id>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</id>
        <link href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc"/>
        <updated>2023-06-27T23:07:51.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is validating Azure AD accounts based on the email claim. </p>
<p>On Azure AD, the profile email field is not unique and can be easily modified. </p>
<p>This leads to account takeover and authentication bypass when Azure AD OAuth is configured with a multi-tenant app. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3128">https://nvd.nist.gov/vuln/detail/CVE-2023-3128</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2023-3128/">https://grafana.com/security/security-advisories/cve-2023-3128/</a></li>
<li><a href="https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md">https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc">https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-22T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana vulnerable to Authentication Bypass by Spoofing]]></title>
        <id>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</id>
        <link href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc"/>
        <updated>2023-06-27T23:07:51.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana is validating Azure AD accounts based on the email claim. </p>
<p>On Azure AD, the profile email field is not unique and can be easily modified. </p>
<p>This leads to account takeover and authentication bypass when Azure AD OAuth is configured with a multi-tenant app. </p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-3128">https://nvd.nist.gov/vuln/detail/CVE-2023-3128</a></li>
<li><a href="https://grafana.com/security/security-advisories/cve-2023-3128/">https://grafana.com/security/security-advisories/cve-2023-3128/</a></li>
<li><a href="https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md">https://github.com/grafana/grafana/blob/69fc4e6bc0be2a82085ab3885c2262a4d49e97d8/CHANGELOG.md</a></li>
<li><a href="https://github.com/advisories/GHSA-mpv3-g8m3-3fjc">https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mpv3-g8m3-3fjc</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-06-22T21:30:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Server Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-455c-vqrf-mghr</id>
        <link href="https://github.com/advisories/GHSA-455c-vqrf-mghr"/>
        <updated>2023-06-27T23:07:46.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Apps Framework fails to verify that a secret provided in the incoming webhook request allowing an attacker to&nbsp;modify the contents of the post sent by the Apps.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2783">https://nvd.nist.gov/vuln/detail/CVE-2023-2783</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-455c-vqrf-mghr">https://github.com/advisories/GHSA-455c-vqrf-mghr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-455c-vqrf-mghr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-16T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Server Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-455c-vqrf-mghr</id>
        <link href="https://github.com/advisories/GHSA-455c-vqrf-mghr"/>
        <updated>2023-06-27T23:07:46.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Apps Framework fails to verify that a secret provided in the incoming webhook request allowing an attacker to&nbsp;modify the contents of the post sent by the Apps.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2783">https://nvd.nist.gov/vuln/detail/CVE-2023-2783</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-455c-vqrf-mghr">https://github.com/advisories/GHSA-455c-vqrf-mghr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-455c-vqrf-mghr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-16T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Server Missing Authorization vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-455c-vqrf-mghr</id>
        <link href="https://github.com/advisories/GHSA-455c-vqrf-mghr"/>
        <updated>2023-06-27T23:07:46.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost Apps Framework fails to verify that a secret provided in the incoming webhook request allowing an attacker to&nbsp;modify the contents of the post sent by the Apps.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-2783">https://nvd.nist.gov/vuln/detail/CVE-2023-2783</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-455c-vqrf-mghr">https://github.com/advisories/GHSA-455c-vqrf-mghr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-455c-vqrf-mghr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-16T09:30:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] Cosmos "Barberry" vulnerability in github.com/cosmos/cosmos-sdk]]></title>
        <id>https://github.com/advisories/GHSA-w44m-8mv2-v78h</id>
        <link href="https://github.com/advisories/GHSA-w44m-8mv2-v78h"/>
        <updated>2023-06-22T20:01:55.000Z</updated>
        <content type="html"><![CDATA[<p>The cosmos-sdk module is affected by the vulnerability codenamed "Barberry".</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/pull/16466">https://github.com/cosmos/cosmos-sdk/pull/16466</a></li>
<li><a href="https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825">https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825</a></li>
<li><a href="https://github.com/advisories/GHSA-w44m-8mv2-v78h">https://github.com/advisories/GHSA-w44m-8mv2-v78h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w44m-8mv2-v78h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-22T20:01:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cosmos/cosmos-sdk] Cosmos "Barberry" vulnerability in github.com/cosmos/cosmos-sdk]]></title>
        <id>https://github.com/advisories/GHSA-w44m-8mv2-v78h</id>
        <link href="https://github.com/advisories/GHSA-w44m-8mv2-v78h"/>
        <updated>2023-06-22T20:01:55.000Z</updated>
        <content type="html"><![CDATA[<p>The cosmos-sdk module is affected by the vulnerability codenamed "Barberry".</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cosmos/cosmos-sdk/pull/16466">https://github.com/cosmos/cosmos-sdk/pull/16466</a></li>
<li><a href="https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825">https://forum.cosmos.network/t/cosmos-sdk-security-advisory-barberry/10825</a></li>
<li><a href="https://github.com/advisories/GHSA-w44m-8mv2-v78h">https://github.com/advisories/GHSA-w44m-8mv2-v78h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w44m-8mv2-v78h</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-22T20:01:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/casdoor/casdoor] Casdoor Cross-Site Request Forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-rwcp-qrwg-56cg</id>
        <link href="https://github.com/advisories/GHSA-rwcp-qrwg-56cg"/>
        <updated>2023-06-30T19:58:49.000Z</updated>
        <content type="html"><![CDATA[<p>Casdoor v1.331.0 and below was discovered to contain a Cross-Site Request Forgery (CSRF) in the endpoint <code>/api/set-password</code>. This vulnerability allows attackers to arbitrarily change the victim user's password via supplying a crafted URL.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-34927">https://nvd.nist.gov/vuln/detail/CVE-2023-34927</a></li>
<li><a href="https://github.com/casdoor/casdoor/issues/1531">https://github.com/casdoor/casdoor/issues/1531</a></li>
<li><a href="https://casdoor.org/">https://casdoor.org/</a></li>
<li><a href="https://gist.github.com/omriman067/4e90a3a4ffa40984f011d8777a995469">https://gist.github.com/omriman067/4e90a3a4ffa40984f011d8777a995469</a></li>
<li><a href="https://github.com/advisories/GHSA-rwcp-qrwg-56cg">https://github.com/advisories/GHSA-rwcp-qrwg-56cg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rwcp-qrwg-56cg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-22T15:30:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bishopfox/sliver] Silver vulnerable to MitM attack against implants due to a cryptography vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-8jxm-xp43-qh3q</id>
        <link href="https://github.com/advisories/GHSA-8jxm-xp43-qh3q"/>
        <updated>2023-06-30T20:22:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The current cryptography implementation in Sliver up to version 1.5.39 allows a MitM with access to the corresponding implant binary to execute arbitrary codes on implanted devices via intercepted and crafted responses. (Reserved CVE ID: CVE-2023-34758)</p>
<h3 id="details">Details</h3>
<p>Please see <a href="https://github.com/tangent65536/Slivjacker">the PoC repo</a>.</p>
<h3 id="poc">PoC</h3>
<p>Please also see <a href="https://github.com/tangent65536/Slivjacker">the PoC repo</a>.
To setup a simple PoC environment,  </p>
<ol>
<li>Generate an implant with its C2 set to the PoC server's address and copy the embedded private implant key and public server key into the config json.  </li>
<li>Run the implant on a separate VM and a <code>notepad.exe</code> window should pop up on the implanted VM.</li>
</ol>
<h3 id="impact">Impact</h3>
<p>A successful attack grants the attacker permission to execute arbitrary code on the implanted device.  </p>
<h3 id="references">References</h3>
<p><a href="https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go</a><br><a href="https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go</a><br><a href="https://github.com/tangent65536/Slivjacker">https://github.com/tangent65536/Slivjacker</a>  </p>
<h3 id="credits">Credits</h3>
<p><a href="https://github.com/tangent65536">Ting-Wei Hsieh</a> from <a href="https://www.chtsecurity.com/?lang=en">CHT Security Co. Ltd.</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/BishopFox/sliver/security/advisories/GHSA-8jxm-xp43-qh3q">https://github.com/BishopFox/sliver/security/advisories/GHSA-8jxm-xp43-qh3q</a></li>
<li><a href="https://github.com/BishopFox/sliver/commit/2d1ea6192cac2ff9d6450b2d96043fdbf8561516">https://github.com/BishopFox/sliver/commit/2d1ea6192cac2ff9d6450b2d96043fdbf8561516</a></li>
<li><a href="https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/crypto.go</a></li>
<li><a href="https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go">https://github.com/BishopFox/sliver/blob/master/implant/sliver/cryptography/implant.go</a></li>
<li><a href="https://github.com/BishopFox/sliver/releases/tag/v1.5.40">https://github.com/BishopFox/sliver/releases/tag/v1.5.40</a></li>
<li><a href="https://github.com/tangent65536/Slivjacker">https://github.com/tangent65536/Slivjacker</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35170">https://nvd.nist.gov/vuln/detail/CVE-2023-35170</a></li>
<li><a href="https://github.com/advisories/GHSA-8jxm-xp43-qh3q">https://github.com/advisories/GHSA-8jxm-xp43-qh3q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8jxm-xp43-qh3q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-21T22:08:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[code.vegaprotocol.io/vega] Vega's validators able to submit duplicate transactions ]]></title>
        <id>https://github.com/advisories/GHSA-8rc9-vxjh-qjf2</id>
        <link href="https://github.com/advisories/GHSA-8rc9-vxjh-qjf2"/>
        <updated>2023-06-27T23:07:49.000Z</updated>
        <content type="html"><![CDATA[<p>A vulnerability exists that allows a malicious validator to trick the Vega network into re-processing past Ethereum events from Vega’s Ethereum bridge. For example, a deposit to the collateral bridge for 100USDT that credits a party’s general account on Vega, can be re-processed 50 times resulting in 5000USDT in that party’s general account. This is without depositing any more than the original 100USDT on the bridge.</p>
<p>Despite this exploit requiring access to a validator's Vega key, a validator key can be obtained at the small cost of 3000VEGA, the amount needed to announce a new node onto the network.</p>
<p>The steps to carry out this exploit are as follows:</p>
<ol>
<li>Cause an Ethereum event on one of the bridge contracts e.g a deposit to the collateral bridge, or the staking bridge</li>
<li>This will result in the Ethereum-event-forwarder of each node to submit a ChainEvent transaction to the Vega network corresponding to that event</li>
<li>Scrape the valid chain event transaction from the Tendermint block data using a node’s Tendermint API</li>
<li>Change the value of the <code>txId</code> field of the ChainEvent to any valid, but different, value</li>
<li>Bundle the tweaked ChainEvent into a new transaction, sign it with a validator key and resubmit to the Vega network</li>
<li>The fraudulent ChainEvent will be processed by Vega as if it were a new ChainEvent even though it did not occur on Ethereum</li>
</ol>
<p>The key to this exploit is in step 4. The <code>txId</code> field of the ChainEvent is used when checking for ChainEvent resubmission, but NOT during the subsequent on-chain verification of the event. Therefore changing the <code>txId</code> of an existing ChainEvent is enough to by-pass the duplication check and for it to still be verified as a real event.</p>
<h3 id="impact">Impact</h3>
<p>The impact of this exploit is dependent on the ChainEvent being manipulated. The below table describes each one:</p>
<table>
<thead>
<tr>
<th>Chain Event</th>
<th>Allows</th>
<th>Consequence</th>
</tr>
</thead>
<tbody><tr>
<td>Deposit</td>
<td>Generation of unlimited funds of any asset</td>
<td>Withdrawal of all assets</td>
</tr>
<tr>
<td>Stake Deposit</td>
<td>Delegate unlimited Vega to a single node</td>
<td>A single node has controlling amount of voting power</td>
</tr>
<tr>
<td>Stake Removed</td>
<td>Force a Validator node to drop below self-stake requirements</td>
<td>Prevents reward payouts</td>
</tr>
<tr>
<td>Bridge Stop</td>
<td>The Vega network to think the bridge is stopped</td>
<td>Prevent anyone from withdrawing funds</td>
</tr>
<tr>
<td>Signer Removed</td>
<td>The Vega network to think a validator nodes is not on the multisig contract</td>
<td>Prevent reward payouts</td>
</tr>
</tbody></table>
<h3 id="patches">Patches</h3>
<p>v0.71.6</p>
<h3 id="workarounds">Workarounds</h3>
<p>No work around known, however there are mitigations in place should this vulnerability be exploited:</p>
<ul>
<li>there are monitoring alerts, for <code>mainnet1</code>, in place to identify any issues of this nature including this vulnerability being exploited</li>
<li>the validators have the ability to stop the bridge thus stopping any withdrawals should this vulnerability be exploited</li>
</ul>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/vegaprotocol/vega/security/advisories/GHSA-8rc9-vxjh-qjf2">https://github.com/vegaprotocol/vega/security/advisories/GHSA-8rc9-vxjh-qjf2</a></li>
<li><a href="https://github.com/vegaprotocol/vega/commit/56b09bf57af8cd9eca5996252d86f469a3e34c68">https://github.com/vegaprotocol/vega/commit/56b09bf57af8cd9eca5996252d86f469a3e34c68</a></li>
<li><a href="https://github.com/vegaprotocol/vega/releases/tag/v0.71.6">https://github.com/vegaprotocol/vega/releases/tag/v0.71.6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-35163">https://nvd.nist.gov/vuln/detail/CVE-2023-35163</a></li>
<li><a href="https://github.com/advisories/GHSA-8rc9-vxjh-qjf2">https://github.com/advisories/GHSA-8rc9-vxjh-qjf2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8rc9-vxjh-qjf2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-06-20T16:36:18.000Z</published>
    </entry>
</feed>