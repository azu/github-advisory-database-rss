<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-04-10T00:18:44.717Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <entry>
        <title type="html"><![CDATA[[github.com/ipfs/go-ipfs]  Opened exploitable ports in default docker-compose.yaml in go-ipfs]]></title>
        <id>https://github.com/advisories/GHSA-fx5p-f64h-93xc</id>
        <link href="https://github.com/advisories/GHSA-fx5p-f64h-93xc"/>
        <updated>2022-04-06T14:45:19.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Allows admin API access to the IPFS node.</p>
<h3 id="who-">Who ?</h3>
<p>This affects people running the  <a href="https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml">docker-compose.yaml</a> service in an environment where the docker host is directly attached to a public or untrusted IP.  In the vulnerable version, the private API endpoint is publicly forwarded by exposing it as <code>0.0.0.0:5001</code> on the host machine.  </p>
<p>If the host machine is hidden behind a firewall or NAT (and the LAN is trusted for NAT), this is not an immediate issue because of the protection from the firewall or NAT.  That said, we still recommend users update to follow security best practices of not putting unnecessary dependency on a working firewall.</p>
<h3 id="patches">Patches</h3>
<p>This issue is in <a href="https://github.com/ipfs/go-ipfs/blob/master/docker-compose.yaml">docker-compose.yaml</a>.  Users need to replace their current <code>docker-compose.yaml</code> file with a version <code>0.12.1</code> or later.</p>
<p>There is no need to update any of the binaries. Users running previous versions like <code>0.12.0</code> or earlier can download the <code>0.12.1</code> <code>docker-compose.yaml</code> file.  You can replace a vulnerable <code>docker-compose.yaml</code> file with a the new one with:</p>
<pre><code>curl https://raw.githubusercontent.com/ipfs/go-ipfs/v0.12.1/docker-compose.yaml &gt; docker-compose.yaml
</code></pre>
<h3 id="how-to-test-if-you-are-vulnerable">How to test if you are vulnerable</h3>
<h4 id="binding-check-on-the-host">Binding check on the host</h4>
<p>On the host machine, while IPFS is running, run as root:</p>
<pre><code class="language-bash">netstat -lnp | grep ":5001"
</code></pre>
<p>The output will be a list of listeners bound to <code>:5001</code>.
You then need to check that those listeners are private and preferably even localhost IPs.
⚠️ If this listener is on <code>0.0.0.0</code> or a public IP you are very likely vulnerable.</p>
<h4 id="remote-hailing">Remote hailing</h4>
<p>While IPFS is running, you can try to contact the API from a remote machine. (Replace <code>1.2.3.4</code> with your node public IP.  Or if you want to test in an untrusted NAT, then substitute the LAN IP instead.)</p>
<pre><code class="language-bash">curl -X POST http://1.2.3.4:5001/api/v0/version
</code></pre>
<p>⚠️ If you see any json outputted (e.g.,  <code>{"Commit": "&lt;string&gt;","Golang": "&lt;string&gt;","Repo": "&lt;string&gt;","System": "&lt;string&gt;","Version": "&lt;string&gt;"}</code>), then you are vulnerable.</p>
<p>If it <strong>fails</strong>, then you are safe.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Please first read <a href="https://docs.ipfs.io/reference/http/api/">https://docs.ipfs.io/reference/http/api/</a> about best practices</li>
<li>Ask in <a href="https://discord.gg/ipfs">IPFS Discord #ipfs-chatter</a></li>
<li>Open an issue in <a href="https://github.com/ipfs/go-ipfs">go-ipfs</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc">https://github.com/ipfs/go-ipfs/security/advisories/GHSA-fx5p-f64h-93xc</a></li>
<li><a href="https://github.com/ipfs/go-ipfs/pull/8773">https://github.com/ipfs/go-ipfs/pull/8773</a></li>
<li><a href="https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1">https://github.com/ipfs/go-ipfs/commit/816a128aaf963d72c4930852ce32b9a4e31924a1</a></li>
<li><a href="https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1">https://github.com/ipfs/go-ipfs/releases/tag/v0.12.1</a></li>
<li><a href="https://github.com/advisories/GHSA-fx5p-f64h-93xc">https://github.com/advisories/GHSA-fx5p-f64h-93xc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fx5p-f64h-93xc</uri>
        </author>
        <published>2022-04-04T21:23:55.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Spread Job Stanza May Trigger Panic in Servers]]></title>
        <id>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</id>
        <link href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq"/>
        <updated>2022-04-05T21:09:26.000Z</updated>
        <content type="html"><![CDATA[<p>Nomad and Nomad Enterprise allows operators with job-submit capabilities to use the spread stanza in a way such that it can cause panic in Nomad servers. This vulnerability, CVE-2022-24684, was fixed in Nomad 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24684">https://nvd.nist.gov/vuln/detail/CVE-2022-24684</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562">https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220318-0008/">https://security.netapp.com/advisory/ntap-20220318-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq">https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</uri>
        </author>
        <published>2022-02-16T00:01:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Spread Job Stanza May Trigger Panic in Servers]]></title>
        <id>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</id>
        <link href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq"/>
        <updated>2022-04-05T21:09:26.000Z</updated>
        <content type="html"><![CDATA[<p>Nomad and Nomad Enterprise allows operators with job-submit capabilities to use the spread stanza in a way such that it can cause panic in Nomad servers. This vulnerability, CVE-2022-24684, was fixed in Nomad 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24684">https://nvd.nist.gov/vuln/detail/CVE-2022-24684</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562">https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220318-0008/">https://security.netapp.com/advisory/ntap-20220318-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq">https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</uri>
        </author>
        <published>2022-02-16T00:01:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] Nomad Spread Job Stanza May Trigger Panic in Servers]]></title>
        <id>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</id>
        <link href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq"/>
        <updated>2022-04-05T21:09:26.000Z</updated>
        <content type="html"><![CDATA[<p>Nomad and Nomad Enterprise allows operators with job-submit capabilities to use the spread stanza in a way such that it can cause panic in Nomad servers. This vulnerability, CVE-2022-24684, was fixed in Nomad 1.0.18, 1.1.12, and 1.2.6.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24684">https://nvd.nist.gov/vuln/detail/CVE-2022-24684</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562">https://discuss.hashicorp.com/t/hcsec-2022-04-nomad-spread-job-stanza-may-trigger-panic-in-servers/35562</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20220318-0008/">https://security.netapp.com/advisory/ntap-20220318-0008/</a></li>
<li><a href="https://github.com/advisories/GHSA-6jm6-cmcp-fqjq">https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6jm6-cmcp-fqjq</uri>
        </author>
        <published>2022-02-16T00:01:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/kataras/iris/v12] Link Following in Iris]]></title>
        <id>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</id>
        <link href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49"/>
        <updated>2022-04-01T21:02:48.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions of package github.com/kataras/iris; all versions of package github.com/kataras/iris/v12. The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-23772">https://nvd.nist.gov/vuln/detail/CVE-2021-23772</a></li>
<li><a href="https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08">https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170</a></li>
<li><a href="https://github.com/advisories/GHSA-jcxc-rh6w-wf49">https://github.com/advisories/GHSA-jcxc-rh6w-wf49</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcxc-rh6w-wf49</uri>
        </author>
        <published>2022-01-06T21:36:19.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman/v4] Podman's default inheritable capabilities for linux container not empty]]></title>
        <id>https://github.com/advisories/GHSA-qvf8-p83w-v58j</id>
        <link href="https://github.com/advisories/GHSA-qvf8-p83w-v58j"/>
        <updated>2022-04-05T22:14:43.000Z</updated>
        <content type="html"><![CDATA[<p>A bug was found in Podman where containers were created with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).</p>
<p>This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/podman/security/advisories/GHSA-qvf8-p83w-v58j">https://github.com/containers/podman/security/advisories/GHSA-qvf8-p83w-v58j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27649">https://nvd.nist.gov/vuln/detail/CVE-2022-27649</a></li>
<li><a href="https://github.com/containers/podman/commit/aafa80918a245edcbdaceb1191d749570f1872d0">https://github.com/containers/podman/commit/aafa80918a245edcbdaceb1191d749570f1872d0</a></li>
<li><a href="https://github.com/containers/podman/releases/tag/v4.0.3">https://github.com/containers/podman/releases/tag/v4.0.3</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2066568">https://bugzilla.redhat.com/show_bug.cgi?id=2066568</a></li>
<li><a href="https://github.com/advisories/GHSA-qvf8-p83w-v58j">https://github.com/advisories/GHSA-qvf8-p83w-v58j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qvf8-p83w-v58j</uri>
        </author>
        <published>2022-04-01T20:52:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/Masterminds/vcs] Command Injection Vulnerability with Mercurial in VCS]]></title>
        <id>https://github.com/advisories/GHSA-6635-c626-vj4r</id>
        <link href="https://github.com/advisories/GHSA-6635-c626-vj4r"/>
        <updated>2022-04-05T22:13:15.000Z</updated>
        <content type="html"><![CDATA[<p>URLs and local file paths passed to the Mercurial (hg) APIs that are specially crafted can contain commands which are executed by Mercurial if it is installed on the host operating system.</p>
<h3 id="impact">Impact</h3>
<p>The <code>vcs</code> package uses the underly version control system, in this case <code>hg</code>, to implement the needed functionality. When <code>hg</code> is executed, argument strings are passed to <code>hg</code> in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>
<p>Other version control systems with an implemented interface may also be vulnerable.</p>
<h3 id="patches">Patches</h3>
<p>The issue has been fixed in version 1.13.2.</p>
<h3 id="workarounds">Workarounds</h3>
<p>A work around is to sanitize data passed to the <code>vcs</code> package APIs to ensure it does not contain commands or unexpected data. This is important for user input data that is passed directly to the package APIs.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory please <a href="https://github.com/Masterminds/vcs/issues">file an issue</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/Masterminds/vcs/security/advisories/GHSA-6635-c626-vj4r">https://github.com/Masterminds/vcs/security/advisories/GHSA-6635-c626-vj4r</a></li>
<li><a href="https://github.com/Masterminds/vcs/commit/922a5122330ea8fbe56352a0172ddb6bf019cd22">https://github.com/Masterminds/vcs/commit/922a5122330ea8fbe56352a0172ddb6bf019cd22</a></li>
<li><a href="https://github.com/Masterminds/vcs/releases/tag/v1.13.2">https://github.com/Masterminds/vcs/releases/tag/v1.13.2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-21235">https://nvd.nist.gov/vuln/detail/CVE-2022-21235</a></li>
<li><a href="https://github.com/Masterminds/vcs/pull/105">https://github.com/Masterminds/vcs/pull/105</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMASTERMINDSVCS-2437078">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMASTERMINDSVCS-2437078</a></li>
<li><a href="https://github.com/advisories/GHSA-6635-c626-vj4r">https://github.com/advisories/GHSA-6635-c626-vj4r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6635-c626-vj4r</uri>
        </author>
        <published>2022-04-01T14:05:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] Non-empty default inheritable capabilities for linux container in Buildah]]></title>
        <id>https://github.com/advisories/GHSA-c3g4-w6cv-6v7h</id>
        <link href="https://github.com/advisories/GHSA-c3g4-w6cv-6v7h"/>
        <updated>2022-04-08T21:44:20.000Z</updated>
        <content type="html"><![CDATA[<p>A bug was found in Buildah where containers were created with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).</p>
<p>This bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-c3g4-w6cv-6v7h">https://github.com/containers/buildah/security/advisories/GHSA-c3g4-w6cv-6v7h</a></li>
<li><a href="https://github.com/containers/buildah/pull/3855">https://github.com/containers/buildah/pull/3855</a></li>
<li><a href="https://github.com/containers/buildah/commit/90b3254c7404039c1c786999ac189654228f6e0e">https://github.com/containers/buildah/commit/90b3254c7404039c1c786999ac189654228f6e0e</a></li>
<li><a href="https://github.com/containers/buildah/commit/e7e55c988c05dd74005184ceb64f097a0cfe645b">https://github.com/containers/buildah/commit/e7e55c988c05dd74005184ceb64f097a0cfe645b</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27651">https://nvd.nist.gov/vuln/detail/CVE-2022-27651</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2066840">https://bugzilla.redhat.com/show_bug.cgi?id=2066840</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2VWH6X6HOFPO6HTESF42HIJZEPXSWVIO/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/2VWH6X6HOFPO6HTESF42HIJZEPXSWVIO/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NETC7I6RTMMBRJJQVJOJUPDK4W4PQSJ/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/7NETC7I6RTMMBRJJQVJOJUPDK4W4PQSJ/</a></li>
<li><a href="https://github.com/advisories/GHSA-c3g4-w6cv-6v7h">https://github.com/advisories/GHSA-c3g4-w6cv-6v7h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3g4-w6cv-6v7h</uri>
        </author>
        <published>2022-04-01T13:56:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/crypto/ssh] Use of a Broken or Risky Cryptographic Algorithm in golang.org/x/crypto/ssh]]></title>
        <id>https://github.com/advisories/GHSA-8c26-wmh5-6g9v</id>
        <link href="https://github.com/advisories/GHSA-8c26-wmh5-6g9v"/>
        <updated>2022-03-30T21:25:44.000Z</updated>
        <content type="html"><![CDATA[<p>golang.org/x/crypto/ssh versions 0.0.0-20220214200702-86341886e292 and prior in Go through 1.16.15 and 1.17.x through 1.17.8 allows an attacker to crash a server in certain circumstances involving AddHostKey. Version 0.0.0-20220315160706-3147a52a75dd includes a fix for the vulnerability and support for SHA-2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-27191">https://nvd.nist.gov/vuln/detail/CVE-2022-27191</a></li>
<li><a href="https://groups.google.com/g/golang-announce">https://groups.google.com/g/golang-announce</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/-cp44ypCT5s">https://groups.google.com/g/golang-announce/c/-cp44ypCT5s</a></li>
<li><a href="https://github.com/advisories/GHSA-8c26-wmh5-6g9v">https://github.com/advisories/GHSA-8c26-wmh5-6g9v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8c26-wmh5-6g9v</uri>
        </author>
        <published>2022-03-19T00:01:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gogo/protobuf] Improper Input Validation in GoGo Protobuf]]></title>
        <id>https://github.com/advisories/GHSA-c3h9-896r-86jm</id>
        <link href="https://github.com/advisories/GHSA-c3h9-896r-86jm"/>
        <updated>2022-03-29T21:02:00.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the "skippy peanut butter" issue.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3121">https://nvd.nist.gov/vuln/detail/CVE-2021-3121</a></li>
<li><a href="https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc">https://github.com/gogo/protobuf/commit/b03c65ea87cdc3521ede29f62fe3ce239267c1bc</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025">https://discuss.hashicorp.com/t/hcsec-2021-23-consul-exposed-to-denial-of-service-in-gogo-protobuf-dependency/29025</a></li>
<li><a href="https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2">https://github.com/gogo/protobuf/compare/v1.3.1...v1.3.2</a></li>
<li><a href="https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E">https://lists.apache.org/thread.html/r68032132c0399c29d6cdc7bd44918535da54060a10a12b1591328bff@%3Cnotifications.skywalking.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r88d69555cb74a129a7bf84838073b61259b4a3830190e05a3b87994e@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rc1e9ff22c5641d73701ba56362fb867d40ed287cca000b131dcf4a44@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.netapp.com/advisory/ntap-20210219-0006/">https://security.netapp.com/advisory/ntap-20210219-0006/</a></li>
<li><a href="https://github.com/advisories/GHSA-c3h9-896r-86jm">https://github.com/advisories/GHSA-c3h9-896r-86jm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c3h9-896r-86jm</uri>
        </author>
        <published>2022-03-28T20:28:00.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/imgcrypt] Incorrect Authorization in imgcrypt]]></title>
        <id>https://github.com/advisories/GHSA-8v99-48m9-c8pm</id>
        <link href="https://github.com/advisories/GHSA-8v99-48m9-c8pm"/>
        <updated>2022-03-29T22:01:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Imgcrypt implements a function <code>CheckAuthorization()</code> that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.</p>
<p>The failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.</p>
<p>Known projects that use the <code>CheckAuthorization()</code> of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to <code>CheckAuthorization()</code> is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.</p>
<p>In relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.</p>
<h3 id="patches">Patches</h3>
<p>The patch has been applied to imgcrypt v1.1.4: <a href="https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9">https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Workarounds may include usage of different namespaces for each remote user.</p>
<h3 id="references">References</h3>
<p>The original failure was reported here: <a href="https://github.com/containerd/imgcrypt/issues/69">https://github.com/containerd/imgcrypt/issues/69</a></p>
<p>Thanks to Dimitar Dimitrov for reporting the issue.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm">https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24778">https://nvd.nist.gov/vuln/detail/CVE-2022-24778</a></li>
<li><a href="https://github.com/containerd/imgcrypt/issues/69">https://github.com/containerd/imgcrypt/issues/69</a></li>
<li><a href="https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9">https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9</a></li>
<li><a href="https://github.com/containerd/imgcrypt/releases/tag/v1.1.4">https://github.com/containerd/imgcrypt/releases/tag/v1.1.4</a></li>
<li><a href="https://github.com/advisories/GHSA-8v99-48m9-c8pm">https://github.com/advisories/GHSA-8v99-48m9-c8pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v99-48m9-c8pm</uri>
        </author>
        <published>2022-03-28T19:33:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[gogs.io/gogs] Unrestricted Upload of File with Dangerous Type in Gogs]]></title>
        <id>https://github.com/advisories/GHSA-5gjh-5j4f-cpwv</id>
        <link href="https://github.com/advisories/GHSA-5gjh-5j4f-cpwv"/>
        <updated>2022-03-29T22:02:35.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>The malicious user is able to upload a crafted <code>config</code> file into repository's <code>.git</code> directory with to gain SSH access to the server. All installations with <a href="https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L127-L129">repository upload enabled (default)</a> are affected.</p>
<h3 id="patches">Patches</h3>
<p>Repository file uploads are prohibited to its <code>.git</code> directory. Users should upgrade to 0.12.6 or the latest 0.13.0+dev.</p>
<h3 id="workarounds">Workarounds</h3>
<p><a href="https://github.com/gogs/gogs/blob/f36eeedbf89328ee70cc3a2e239f6314f9021f58/conf/app.ini#L128-L129">Disable repository files upload</a>.</p>
<h3 id="references">References</h3>
<p><a href="https://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902/">https://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please post on #6833.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gogs/gogs/security/advisories/GHSA-5gjh-5j4f-cpwv">https://github.com/gogs/gogs/security/advisories/GHSA-5gjh-5j4f-cpwv</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-0415">https://nvd.nist.gov/vuln/detail/CVE-2022-0415</a></li>
<li><a href="https://github.com/gogs/gogs/issues/6833">https://github.com/gogs/gogs/issues/6833</a></li>
<li><a href="https://github.com/gogs/gogs/pull/6838">https://github.com/gogs/gogs/pull/6838</a></li>
<li><a href="https://github.com/gogs/gogs/commit/0fef3c9082269e9a4e817274942a5d7c50617284">https://github.com/gogs/gogs/commit/0fef3c9082269e9a4e817274942a5d7c50617284</a></li>
<li><a href="https://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902">https://huntr.dev/bounties/b4928cfe-4110-462f-a180-6d5673797902</a></li>
<li><a href="https://github.com/advisories/GHSA-5gjh-5j4f-cpwv">https://github.com/advisories/GHSA-5gjh-5j4f-cpwv</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5gjh-5j4f-cpwv</uri>
        </author>
        <published>2022-03-28T16:46:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Improper access control allows admin privilege escalation in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</id>
        <link href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww"/>
        <updated>2022-04-04T20:40:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="impacts-for-versions-starting-with-v100">Impacts for versions starting with v1.0.0</h4>
<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to an improper access control bug, allowing a malicious user to potentially escalate their privileges to admin-level.</p>
<p>To perform the following exploits, an authorized Argo CD user must have push access to an Application's source git or Helm repository or <code>sync</code> <em>and</em> <code>override</code> access to an Application. Once a user has that access, different exploitation levels are possible depending on their other RBAC privileges:</p>
<ol>
<li>If that user has <code>update</code> access to the Application, they can modify any resource on the Application's destination cluster. If the destination cluster is or can be made to be the same as the cluster hosting Argo CD, the user can escalate their Argo CD permissions to admin-level.</li>
<li>If the user has <code>delete</code> access to the Application, they can delete any resource on the Application's destination cluster. (This exploit is possible starting with v0.8.0.)</li>
<li>If the user has <code>get</code> access to the Application, they can view any resource on the Application's destination cluster (except for the contents of Secrets) and list <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/resource_actions/">actions</a> available for that resource. </li>
<li>If the user has <code>get</code> access to the Application, they can view the logs of any Pods on the Application's destination cluster.</li>
<li>If the user has <code>action/{some action or *}</code> access on the Application, they can run an action for any resource (which supports the allowed action(s)) on the Application's destination cluster. (Some actions are available in Argo CD by default, and others may be configured by an Argo CD admin.)</li>
</ol>
<p>See the <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">Argo CD RBAC documentation</a> for an explanation of the privileges available in Argo CD.</p>
<h5 id="events-exploit">Events exploit</h5>
<p>A related exploit is possible for a user with <code>get</code> access to an Application <strong>even if they do not have access to the Application's source git or Helm repository or <code>sync</code> and <code>override</code> access to the Application</strong>. The user can access any Event in the Application's destination cluster if they know the involved object's name, UID, and namespace.</p>
<h4 id="impacts-for-versions-starting-with-v080">Impacts for versions starting with v0.8.0</h4>
<p>The same bug exists starting with v0.8.0, but only the following exploits were possible before v1.0.0:</p>
<ul>
<li>The <code>delete</code> exploit (#⁠2 above).</li>
<li>The logs exploit (#⁠4 above).</li>
<li>The Events exploit described above.</li>
</ul>
<h4 id="impacts-for-versions-starting-with-v050">Impacts for versions starting with v0.5.0</h4>
<p>The same bug exists starting with v0.5.0 (when RBAC was implemented), but only the Events exploit described above was possible before v0.8.0.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.2</li>
<li>v2.2.8</li>
<li>v2.1.14</li>
</ul>
<p><strong>Versions 2.0.x and earlier users:</strong> See the <a href="https://github.com/argoproj/argo-cd/blob/master/CHANGELOG.md">changelog</a> for links to upgrade instructions for your version. It is imperative to upgrade quickly, but some limited mitigations are described in the next section.</p>
<p><strong>argo-helm chart users:</strong> Argo CD users deploying v2.3.x with <a href="https://github.com/argoproj/argo-helm">argo-helm</a> can upgrade the chart to version 4.2.2. Argo CD 2.2 and 2.1 users can set the <code>global.image.tag</code> value to the latest in your current release series (<code>v2.2.8</code>, or <code>v2.1.14</code>).  Since charts for the 2.2 and 2.1 series are no longer maintained, you will need to either leave the value override in place or upgrade to the 4.x chart series (and therefore to Argo CD 2.3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<ul>
<li>To avoid privilege escalation:<ul>
<li>Limit who has push access to Application source repositories or <code>sync</code> + <code>override</code> access to Applications.</li>
<li>Limit which repositories are available in <a href="https://argo-cd.readthedocs.io/en/stable/user-guide/projects/">projects</a> where users have  <code>update</code> access to Applications.</li>
</ul>
</li>
<li>To avoid unauthorized resource inspection/tampering:<ul>
<li>Limit who has <code>delete</code>, <code>get</code>, or <code>action</code> access to Applications.</li>
</ul>
</li>
</ul>
<p>These mitigations can help limit potential damage, but they are <em>not</em> a substitute for upgrading. It is necessary to upgrade immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24768">https://nvd.nist.gov/vuln/detail/CVE-2022-24768</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf">https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.1.14">https://github.com/argoproj/argo-cd/releases/tag/v2.1.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.2.8">https://github.com/argoproj/argo-cd/releases/tag/v2.2.8</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.3.2">https://github.com/argoproj/argo-cd/releases/tag/v2.3.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/advisories/GHSA-2f5v-8r3f-8pww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</uri>
        </author>
        <published>2022-03-24T00:18:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Improper access control allows admin privilege escalation in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</id>
        <link href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww"/>
        <updated>2022-04-04T20:40:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="impacts-for-versions-starting-with-v100">Impacts for versions starting with v1.0.0</h4>
<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to an improper access control bug, allowing a malicious user to potentially escalate their privileges to admin-level.</p>
<p>To perform the following exploits, an authorized Argo CD user must have push access to an Application's source git or Helm repository or <code>sync</code> <em>and</em> <code>override</code> access to an Application. Once a user has that access, different exploitation levels are possible depending on their other RBAC privileges:</p>
<ol>
<li>If that user has <code>update</code> access to the Application, they can modify any resource on the Application's destination cluster. If the destination cluster is or can be made to be the same as the cluster hosting Argo CD, the user can escalate their Argo CD permissions to admin-level.</li>
<li>If the user has <code>delete</code> access to the Application, they can delete any resource on the Application's destination cluster. (This exploit is possible starting with v0.8.0.)</li>
<li>If the user has <code>get</code> access to the Application, they can view any resource on the Application's destination cluster (except for the contents of Secrets) and list <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/resource_actions/">actions</a> available for that resource. </li>
<li>If the user has <code>get</code> access to the Application, they can view the logs of any Pods on the Application's destination cluster.</li>
<li>If the user has <code>action/{some action or *}</code> access on the Application, they can run an action for any resource (which supports the allowed action(s)) on the Application's destination cluster. (Some actions are available in Argo CD by default, and others may be configured by an Argo CD admin.)</li>
</ol>
<p>See the <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">Argo CD RBAC documentation</a> for an explanation of the privileges available in Argo CD.</p>
<h5 id="events-exploit">Events exploit</h5>
<p>A related exploit is possible for a user with <code>get</code> access to an Application <strong>even if they do not have access to the Application's source git or Helm repository or <code>sync</code> and <code>override</code> access to the Application</strong>. The user can access any Event in the Application's destination cluster if they know the involved object's name, UID, and namespace.</p>
<h4 id="impacts-for-versions-starting-with-v080">Impacts for versions starting with v0.8.0</h4>
<p>The same bug exists starting with v0.8.0, but only the following exploits were possible before v1.0.0:</p>
<ul>
<li>The <code>delete</code> exploit (#⁠2 above).</li>
<li>The logs exploit (#⁠4 above).</li>
<li>The Events exploit described above.</li>
</ul>
<h4 id="impacts-for-versions-starting-with-v050">Impacts for versions starting with v0.5.0</h4>
<p>The same bug exists starting with v0.5.0 (when RBAC was implemented), but only the Events exploit described above was possible before v0.8.0.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.2</li>
<li>v2.2.8</li>
<li>v2.1.14</li>
</ul>
<p><strong>Versions 2.0.x and earlier users:</strong> See the <a href="https://github.com/argoproj/argo-cd/blob/master/CHANGELOG.md">changelog</a> for links to upgrade instructions for your version. It is imperative to upgrade quickly, but some limited mitigations are described in the next section.</p>
<p><strong>argo-helm chart users:</strong> Argo CD users deploying v2.3.x with <a href="https://github.com/argoproj/argo-helm">argo-helm</a> can upgrade the chart to version 4.2.2. Argo CD 2.2 and 2.1 users can set the <code>global.image.tag</code> value to the latest in your current release series (<code>v2.2.8</code>, or <code>v2.1.14</code>).  Since charts for the 2.2 and 2.1 series are no longer maintained, you will need to either leave the value override in place or upgrade to the 4.x chart series (and therefore to Argo CD 2.3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<ul>
<li>To avoid privilege escalation:<ul>
<li>Limit who has push access to Application source repositories or <code>sync</code> + <code>override</code> access to Applications.</li>
<li>Limit which repositories are available in <a href="https://argo-cd.readthedocs.io/en/stable/user-guide/projects/">projects</a> where users have  <code>update</code> access to Applications.</li>
</ul>
</li>
<li>To avoid unauthorized resource inspection/tampering:<ul>
<li>Limit who has <code>delete</code>, <code>get</code>, or <code>action</code> access to Applications.</li>
</ul>
</li>
</ul>
<p>These mitigations can help limit potential damage, but they are <em>not</em> a substitute for upgrading. It is necessary to upgrade immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24768">https://nvd.nist.gov/vuln/detail/CVE-2022-24768</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf">https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.1.14">https://github.com/argoproj/argo-cd/releases/tag/v2.1.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.2.8">https://github.com/argoproj/argo-cd/releases/tag/v2.2.8</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.3.2">https://github.com/argoproj/argo-cd/releases/tag/v2.3.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/advisories/GHSA-2f5v-8r3f-8pww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</uri>
        </author>
        <published>2022-03-24T00:18:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Improper access control allows admin privilege escalation in Argo CD]]></title>
        <id>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</id>
        <link href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww"/>
        <updated>2022-04-04T20:40:45.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<h4 id="impacts-for-versions-starting-with-v100">Impacts for versions starting with v1.0.0</h4>
<p>All unpatched versions of Argo CD starting with v1.0.0 are vulnerable to an improper access control bug, allowing a malicious user to potentially escalate their privileges to admin-level.</p>
<p>To perform the following exploits, an authorized Argo CD user must have push access to an Application's source git or Helm repository or <code>sync</code> <em>and</em> <code>override</code> access to an Application. Once a user has that access, different exploitation levels are possible depending on their other RBAC privileges:</p>
<ol>
<li>If that user has <code>update</code> access to the Application, they can modify any resource on the Application's destination cluster. If the destination cluster is or can be made to be the same as the cluster hosting Argo CD, the user can escalate their Argo CD permissions to admin-level.</li>
<li>If the user has <code>delete</code> access to the Application, they can delete any resource on the Application's destination cluster. (This exploit is possible starting with v0.8.0.)</li>
<li>If the user has <code>get</code> access to the Application, they can view any resource on the Application's destination cluster (except for the contents of Secrets) and list <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/resource_actions/">actions</a> available for that resource. </li>
<li>If the user has <code>get</code> access to the Application, they can view the logs of any Pods on the Application's destination cluster.</li>
<li>If the user has <code>action/{some action or *}</code> access on the Application, they can run an action for any resource (which supports the allowed action(s)) on the Application's destination cluster. (Some actions are available in Argo CD by default, and others may be configured by an Argo CD admin.)</li>
</ol>
<p>See the <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">Argo CD RBAC documentation</a> for an explanation of the privileges available in Argo CD.</p>
<h5 id="events-exploit">Events exploit</h5>
<p>A related exploit is possible for a user with <code>get</code> access to an Application <strong>even if they do not have access to the Application's source git or Helm repository or <code>sync</code> and <code>override</code> access to the Application</strong>. The user can access any Event in the Application's destination cluster if they know the involved object's name, UID, and namespace.</p>
<h4 id="impacts-for-versions-starting-with-v080">Impacts for versions starting with v0.8.0</h4>
<p>The same bug exists starting with v0.8.0, but only the following exploits were possible before v1.0.0:</p>
<ul>
<li>The <code>delete</code> exploit (#⁠2 above).</li>
<li>The logs exploit (#⁠4 above).</li>
<li>The Events exploit described above.</li>
</ul>
<h4 id="impacts-for-versions-starting-with-v050">Impacts for versions starting with v0.5.0</h4>
<p>The same bug exists starting with v0.5.0 (when RBAC was implemented), but only the Events exploit described above was possible before v0.8.0.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.2</li>
<li>v2.2.8</li>
<li>v2.1.14</li>
</ul>
<p><strong>Versions 2.0.x and earlier users:</strong> See the <a href="https://github.com/argoproj/argo-cd/blob/master/CHANGELOG.md">changelog</a> for links to upgrade instructions for your version. It is imperative to upgrade quickly, but some limited mitigations are described in the next section.</p>
<p><strong>argo-helm chart users:</strong> Argo CD users deploying v2.3.x with <a href="https://github.com/argoproj/argo-helm">argo-helm</a> can upgrade the chart to version 4.2.2. Argo CD 2.2 and 2.1 users can set the <code>global.image.tag</code> value to the latest in your current release series (<code>v2.2.8</code>, or <code>v2.1.14</code>).  Since charts for the 2.2 and 2.1 series are no longer maintained, you will need to either leave the value override in place or upgrade to the 4.x chart series (and therefore to Argo CD 2.3).</p>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<ul>
<li>To avoid privilege escalation:<ul>
<li>Limit who has push access to Application source repositories or <code>sync</code> + <code>override</code> access to Applications.</li>
<li>Limit which repositories are available in <a href="https://argo-cd.readthedocs.io/en/stable/user-guide/projects/">projects</a> where users have  <code>update</code> access to Applications.</li>
</ul>
</li>
<li>To avoid unauthorized resource inspection/tampering:<ul>
<li>Limit who has <code>delete</code>, <code>get</code>, or <code>action</code> access to Applications.</li>
</ul>
</li>
</ul>
<p>These mitigations can help limit potential damage, but they are <em>not</em> a substitute for upgrading. It is necessary to upgrade immediately.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/argoproj/argo-cd/security/advisories/GHSA-2f5v-8r3f-8pww</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24768">https://nvd.nist.gov/vuln/detail/CVE-2022-24768</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf">https://github.com/argoproj/argo-cd/commit/af03b291d4b7e9d3ce9a6580ae9c8141af0e05cf</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.1.14">https://github.com/argoproj/argo-cd/releases/tag/v2.1.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.2.8">https://github.com/argoproj/argo-cd/releases/tag/v2.2.8</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.3.2">https://github.com/argoproj/argo-cd/releases/tag/v2.3.2</a></li>
<li><a href="https://github.com/advisories/GHSA-2f5v-8r3f-8pww">https://github.com/advisories/GHSA-2f5v-8r3f-8pww</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2f5v-8r3f-8pww</uri>
        </author>
        <published>2022-03-24T00:18:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Path traversal allows leaking out-of-bound files from Argo CD repo-server]]></title>
        <id>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</id>
        <link href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28"/>
        <updated>2022-03-29T21:52:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All unpatched versions of Argo CD starting with v1.5.0 are vulnerable to a path traversal vulnerability allowing a malicious user with read/write access to leak sensitive files from Argo CD's repo-server.</p>
<p>A malicious Argo CD user who has been granted <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions"><code>create</code> or <code>update</code> access to Applications</a> can leak the contents of any text file on the repo-server. By crafting a malicious Helm chart and using it in an Application, the attacker can retrieve the sensitive file's contents either as part of the generated manifests or in an error message. The attacker would have to know or guess the location of the target file.</p>
<p>Sensitive files which could be leaked include files from other Application's source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.0</li>
<li>v2.2.6</li>
<li>v2.1.11</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade. </p>
<p>To mitigate the problem, you can </p>
<ul>
<li>avoid storing secrets in git</li>
<li>avoid mounting secrets as files on the repo-server</li>
<li>avoid decrypting secrets into files on the repo-server</li>
<li>carefully <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">limit who can <code>create</code> or <code>update</code> Applications</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories">Security documentation for the repo-server component</a></li>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24731">https://nvd.nist.gov/vuln/detail/CVE-2022-24731</a></li>
<li><a href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/advisories/GHSA-h6h5-6fmq-rh28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</uri>
        </author>
        <published>2022-03-24T00:12:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Path traversal allows leaking out-of-bound files from Argo CD repo-server]]></title>
        <id>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</id>
        <link href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28"/>
        <updated>2022-03-29T21:52:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All unpatched versions of Argo CD starting with v1.5.0 are vulnerable to a path traversal vulnerability allowing a malicious user with read/write access to leak sensitive files from Argo CD's repo-server.</p>
<p>A malicious Argo CD user who has been granted <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions"><code>create</code> or <code>update</code> access to Applications</a> can leak the contents of any text file on the repo-server. By crafting a malicious Helm chart and using it in an Application, the attacker can retrieve the sensitive file's contents either as part of the generated manifests or in an error message. The attacker would have to know or guess the location of the target file.</p>
<p>Sensitive files which could be leaked include files from other Application's source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.0</li>
<li>v2.2.6</li>
<li>v2.1.11</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade. </p>
<p>To mitigate the problem, you can </p>
<ul>
<li>avoid storing secrets in git</li>
<li>avoid mounting secrets as files on the repo-server</li>
<li>avoid decrypting secrets into files on the repo-server</li>
<li>carefully <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">limit who can <code>create</code> or <code>update</code> Applications</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories">Security documentation for the repo-server component</a></li>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24731">https://nvd.nist.gov/vuln/detail/CVE-2022-24731</a></li>
<li><a href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/advisories/GHSA-h6h5-6fmq-rh28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</uri>
        </author>
        <published>2022-03-24T00:12:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Path traversal allows leaking out-of-bound files from Argo CD repo-server]]></title>
        <id>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</id>
        <link href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28"/>
        <updated>2022-03-29T21:52:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All unpatched versions of Argo CD starting with v1.5.0 are vulnerable to a path traversal vulnerability allowing a malicious user with read/write access to leak sensitive files from Argo CD's repo-server.</p>
<p>A malicious Argo CD user who has been granted <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions"><code>create</code> or <code>update</code> access to Applications</a> can leak the contents of any text file on the repo-server. By crafting a malicious Helm chart and using it in an Application, the attacker can retrieve the sensitive file's contents either as part of the generated manifests or in an error message. The attacker would have to know or guess the location of the target file.</p>
<p>Sensitive files which could be leaked include files from other Application's source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.0</li>
<li>v2.2.6</li>
<li>v2.1.11</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade. </p>
<p>To mitigate the problem, you can </p>
<ul>
<li>avoid storing secrets in git</li>
<li>avoid mounting secrets as files on the repo-server</li>
<li>avoid decrypting secrets into files on the repo-server</li>
<li>carefully <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">limit who can <code>create</code> or <code>update</code> Applications</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories">Security documentation for the repo-server component</a></li>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/argoproj/argo-cd/security/advisories/GHSA-h6h5-6fmq-rh28</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24731">https://nvd.nist.gov/vuln/detail/CVE-2022-24731</a></li>
<li><a href="https://github.com/advisories/GHSA-h6h5-6fmq-rh28">https://github.com/advisories/GHSA-h6h5-6fmq-rh28</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h6h5-6fmq-rh28</uri>
        </author>
        <published>2022-03-24T00:12:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Path traversal and improper access control allows leaking out-of-bound files from Argo CD repo-server]]></title>
        <id>https://github.com/advisories/GHSA-r9cr-hvjj-496v</id>
        <link href="https://github.com/advisories/GHSA-r9cr-hvjj-496v"/>
        <updated>2022-03-29T21:52:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All unpatched versions of Argo CD starting with v1.3.0 are vulnerable to a path traversal bug, compounded by an improper access control bug, allowing a malicious user with read-only repository access to leak sensitive files from Argo CD's repo-server.</p>
<p>A malicious Argo CD user who has been granted <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions"><code>get</code> access for a repository</a> containing a Helm chart can craft an API request to the <code>/api/v1/repositories/{repo_url}/appdetails</code> endpoint to leak the contents of out-of-bounds files from the repo-server.</p>
<p>The malicious payload would reference an out-of-bounds file, and the contents of that file would be returned as part of the response. Contents from a non-YAML file may be returned as part of an error message. The attacker would have to know or guess the location of the target file.</p>
<p>Sensitive files which could be leaked include files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.0</li>
<li>v2.2.6</li>
<li>v2.1.11</li>
</ul>
<p>The patches do two things:</p>
<ol>
<li>prevent path traversal</li>
<li>limit <code>/api/v1/repositories/{repo_url}/appdetails</code> access to users who either A) have been granted Application <code>create</code> privileges or B) have been granted Application <code>get</code> privileges <em>and</em> are requesting details for a <code>repo_url</code> that has already been used for the given Application</li>
</ol>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade. </p>
<p>To mitigate the problem, you can </p>
<ul>
<li>avoid storing secrets in git</li>
<li>avoid mounting secrets as files on the repo-server</li>
<li>avoid decrypting secrets into files on the repo-server</li>
<li>carefully <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">limit who has <code>get</code> access for repositories</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories">Security documentation for the repo-server component</a></li>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24730">https://nvd.nist.gov/vuln/detail/CVE-2022-24730</a></li>
<li><a href="https://github.com/advisories/GHSA-r9cr-hvjj-496v">https://github.com/advisories/GHSA-r9cr-hvjj-496v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9cr-hvjj-496v</uri>
        </author>
        <published>2022-03-24T00:04:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Path traversal and improper access control allows leaking out-of-bound files from Argo CD repo-server]]></title>
        <id>https://github.com/advisories/GHSA-r9cr-hvjj-496v</id>
        <link href="https://github.com/advisories/GHSA-r9cr-hvjj-496v"/>
        <updated>2022-03-29T21:52:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All unpatched versions of Argo CD starting with v1.3.0 are vulnerable to a path traversal bug, compounded by an improper access control bug, allowing a malicious user with read-only repository access to leak sensitive files from Argo CD's repo-server.</p>
<p>A malicious Argo CD user who has been granted <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions"><code>get</code> access for a repository</a> containing a Helm chart can craft an API request to the <code>/api/v1/repositories/{repo_url}/appdetails</code> endpoint to leak the contents of out-of-bounds files from the repo-server.</p>
<p>The malicious payload would reference an out-of-bounds file, and the contents of that file would be returned as part of the response. Contents from a non-YAML file may be returned as part of an error message. The attacker would have to know or guess the location of the target file.</p>
<p>Sensitive files which could be leaked include files from other Applications' source repositories (potentially decrypted files, if you are using a decryption plugin) or any secrets which have been mounted as files on the repo-server.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.3.0</li>
<li>v2.2.6</li>
<li>v2.1.11</li>
</ul>
<p>The patches do two things:</p>
<ol>
<li>prevent path traversal</li>
<li>limit <code>/api/v1/repositories/{repo_url}/appdetails</code> access to users who either A) have been granted Application <code>create</code> privileges or B) have been granted Application <code>get</code> privileges <em>and</em> are requesting details for a <code>repo_url</code> that has already been used for the given Application</li>
</ol>
<h3 id="workarounds">Workarounds</h3>
<p>The only certain way to avoid the vulnerability is to upgrade. </p>
<p>To mitigate the problem, you can </p>
<ul>
<li>avoid storing secrets in git</li>
<li>avoid mounting secrets as files on the repo-server</li>
<li>avoid decrypting secrets into files on the repo-server</li>
<li>carefully <a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#rbac-resources-and-actions">limit who has <code>get</code> access for repositories</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#git-helm-repositories">Security documentation for the repo-server component</a></li>
<li><a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/rbac/#">Argo CD RBAC configuration documentation</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a>
Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v">https://github.com/argoproj/argo-cd/security/advisories/GHSA-r9cr-hvjj-496v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24730">https://nvd.nist.gov/vuln/detail/CVE-2022-24730</a></li>
<li><a href="https://github.com/advisories/GHSA-r9cr-hvjj-496v">https://github.com/advisories/GHSA-r9cr-hvjj-496v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r9cr-hvjj-496v</uri>
        </author>
        <published>2022-03-24T00:04:03.000Z</published>
    </entry>
</feed>