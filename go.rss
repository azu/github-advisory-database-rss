<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-10-02T13:03:04.610Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/tendermint/tendermint] Denial of service in Tendermint]]></title>
        <id>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</id>
        <link href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6"/>
        <updated>2023-10-02T12:27:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p><strong>Denial of Service 1</strong></p>
<p>Tendermint 0.33.2 and earlier does not limit the number of P2P connection requests. For each p2p connection, Tendermint allocates XXX bytes. Even though this memory is garbage collected once the connection is terminated (due to duplicate IP or reaching a maximum number of inbound peers), temporary memory spikes can lead to OOM (Out-Of-Memory) exceptions. </p>
<p>Tendermint 0.33.3 (and 0.32.10) limits the total number of P2P incoming connection requests to to <code>p2p.max_num_inbound_peers + len(p2p.unconditional_peer_ids)</code>.</p>
<p>Notes:</p>
<ul>
<li>Tendermint does not rate limit P2P connection requests per IP (an attacker can saturate all the inbound slots);</li>
<li>Tendermint does not rate limit HTTP(S) requests. If you expose any RPC endpoints to the public, please make sure to put in place some protection (<a href="https://www.nginx.com/blog/rate-limiting-nginx/">https://www.nginx.com/blog/rate-limiting-nginx/</a>). We may implement this in the future (<a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a>).</li>
</ul>
<p><strong>Denial of Service 2</strong></p>
<p>Tendermint 0.33.2 and earlier does not reclaim <code>activeID</code> of a peer after it's removed in <code>Mempool</code> reactor. This does not happen all the time. It only happens when a connection fails (for any reason) before the <code>Peer</code> is created and added to all reactors. <code>RemovePeer</code> is therefore called before <code>AddPeer</code>, which leads to always growing memory (<code>activeIDs</code> map). The <code>activeIDs</code> map has a maximum size of 65535 and the node will panic if this map reaches the maximum. An attacker can create a lot of connection attempts (exploiting Denial of Service 1), which ultimately will lead to the node panicking.</p>
<p>Tendermint 0.33.3 (and 0.32.10) claims <code>activeID</code> for a peer in <code>InitPeer</code>, which is executed before <code>MConnection</code> is started.</p>
<p>Notes: </p>
<ul>
<li><code>InitPeer</code> function was added to all reactors to combat a similar issue - <a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a>;</li>
<li>Denial of Service 2 is independent of Denial of Service 1 and can be executed without it.</li>
</ul>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/tendermint/tendermint/p2p</p>
<h3 id="impact">Impact</h3>
<ul>
<li>All full nodes (except for validators who are behind closed networks)</li>
<li>Node's memory usage increases, then it panics either in the mempool or due to OOM.</li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li>v0.33.3</li>
<li>v0.32.10</li>
<li>v0.31.12</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a> (not disclosed yet)</li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/tendermint/tendermint">tendermint/tendermint</a></li>
<li>Email us at <a href="mailto:security@tendermint.com">security@tendermint.com</a></li>
</ul>
<p>More information can be found <a href="https://tendermint.com/security/">here</a>.</p>
<h3 id="credits">Credits</h3>
<ul>
<li><a href="https://hackerone.com/fudongbai">fudongbai</a> for discovering and reporting Denial of Service 2</li>
<li>Ethan Buchman (@ebuchman) for writing a test case for Denial of Service 2 and Tess Rinearson (@tessr) for fixing it</li>
<li>Anton Kaliaev (@melekes) for fixing Denial of Service 1</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-5303">https://nvd.nist.gov/vuln/detail/CVE-2020-5303</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd">https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd</a></li>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a></li>
<li><a href="https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1">https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1</a></li>
<li><a href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/advisories/GHSA-v24h-pjjv-mcp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-05-27T18:44:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/tendermint/tendermint] Denial of service in Tendermint]]></title>
        <id>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</id>
        <link href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6"/>
        <updated>2023-10-02T12:27:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p><strong>Denial of Service 1</strong></p>
<p>Tendermint 0.33.2 and earlier does not limit the number of P2P connection requests. For each p2p connection, Tendermint allocates XXX bytes. Even though this memory is garbage collected once the connection is terminated (due to duplicate IP or reaching a maximum number of inbound peers), temporary memory spikes can lead to OOM (Out-Of-Memory) exceptions. </p>
<p>Tendermint 0.33.3 (and 0.32.10) limits the total number of P2P incoming connection requests to to <code>p2p.max_num_inbound_peers + len(p2p.unconditional_peer_ids)</code>.</p>
<p>Notes:</p>
<ul>
<li>Tendermint does not rate limit P2P connection requests per IP (an attacker can saturate all the inbound slots);</li>
<li>Tendermint does not rate limit HTTP(S) requests. If you expose any RPC endpoints to the public, please make sure to put in place some protection (<a href="https://www.nginx.com/blog/rate-limiting-nginx/">https://www.nginx.com/blog/rate-limiting-nginx/</a>). We may implement this in the future (<a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a>).</li>
</ul>
<p><strong>Denial of Service 2</strong></p>
<p>Tendermint 0.33.2 and earlier does not reclaim <code>activeID</code> of a peer after it's removed in <code>Mempool</code> reactor. This does not happen all the time. It only happens when a connection fails (for any reason) before the <code>Peer</code> is created and added to all reactors. <code>RemovePeer</code> is therefore called before <code>AddPeer</code>, which leads to always growing memory (<code>activeIDs</code> map). The <code>activeIDs</code> map has a maximum size of 65535 and the node will panic if this map reaches the maximum. An attacker can create a lot of connection attempts (exploiting Denial of Service 1), which ultimately will lead to the node panicking.</p>
<p>Tendermint 0.33.3 (and 0.32.10) claims <code>activeID</code> for a peer in <code>InitPeer</code>, which is executed before <code>MConnection</code> is started.</p>
<p>Notes: </p>
<ul>
<li><code>InitPeer</code> function was added to all reactors to combat a similar issue - <a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a>;</li>
<li>Denial of Service 2 is independent of Denial of Service 1 and can be executed without it.</li>
</ul>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/tendermint/tendermint/p2p</p>
<h3 id="impact">Impact</h3>
<ul>
<li>All full nodes (except for validators who are behind closed networks)</li>
<li>Node's memory usage increases, then it panics either in the mempool or due to OOM.</li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li>v0.33.3</li>
<li>v0.32.10</li>
<li>v0.31.12</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a> (not disclosed yet)</li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/tendermint/tendermint">tendermint/tendermint</a></li>
<li>Email us at <a href="mailto:security@tendermint.com">security@tendermint.com</a></li>
</ul>
<p>More information can be found <a href="https://tendermint.com/security/">here</a>.</p>
<h3 id="credits">Credits</h3>
<ul>
<li><a href="https://hackerone.com/fudongbai">fudongbai</a> for discovering and reporting Denial of Service 2</li>
<li>Ethan Buchman (@ebuchman) for writing a test case for Denial of Service 2 and Tess Rinearson (@tessr) for fixing it</li>
<li>Anton Kaliaev (@melekes) for fixing Denial of Service 1</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-5303">https://nvd.nist.gov/vuln/detail/CVE-2020-5303</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd">https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd</a></li>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a></li>
<li><a href="https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1">https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1</a></li>
<li><a href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/advisories/GHSA-v24h-pjjv-mcp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-05-27T18:44:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/tendermint/tendermint] Denial of service in Tendermint]]></title>
        <id>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</id>
        <link href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6"/>
        <updated>2023-10-02T12:27:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p><strong>Denial of Service 1</strong></p>
<p>Tendermint 0.33.2 and earlier does not limit the number of P2P connection requests. For each p2p connection, Tendermint allocates XXX bytes. Even though this memory is garbage collected once the connection is terminated (due to duplicate IP or reaching a maximum number of inbound peers), temporary memory spikes can lead to OOM (Out-Of-Memory) exceptions. </p>
<p>Tendermint 0.33.3 (and 0.32.10) limits the total number of P2P incoming connection requests to to <code>p2p.max_num_inbound_peers + len(p2p.unconditional_peer_ids)</code>.</p>
<p>Notes:</p>
<ul>
<li>Tendermint does not rate limit P2P connection requests per IP (an attacker can saturate all the inbound slots);</li>
<li>Tendermint does not rate limit HTTP(S) requests. If you expose any RPC endpoints to the public, please make sure to put in place some protection (<a href="https://www.nginx.com/blog/rate-limiting-nginx/">https://www.nginx.com/blog/rate-limiting-nginx/</a>). We may implement this in the future (<a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a>).</li>
</ul>
<p><strong>Denial of Service 2</strong></p>
<p>Tendermint 0.33.2 and earlier does not reclaim <code>activeID</code> of a peer after it's removed in <code>Mempool</code> reactor. This does not happen all the time. It only happens when a connection fails (for any reason) before the <code>Peer</code> is created and added to all reactors. <code>RemovePeer</code> is therefore called before <code>AddPeer</code>, which leads to always growing memory (<code>activeIDs</code> map). The <code>activeIDs</code> map has a maximum size of 65535 and the node will panic if this map reaches the maximum. An attacker can create a lot of connection attempts (exploiting Denial of Service 1), which ultimately will lead to the node panicking.</p>
<p>Tendermint 0.33.3 (and 0.32.10) claims <code>activeID</code> for a peer in <code>InitPeer</code>, which is executed before <code>MConnection</code> is started.</p>
<p>Notes: </p>
<ul>
<li><code>InitPeer</code> function was added to all reactors to combat a similar issue - <a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a>;</li>
<li>Denial of Service 2 is independent of Denial of Service 1 and can be executed without it.</li>
</ul>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/tendermint/tendermint/p2p</p>
<h3 id="impact">Impact</h3>
<ul>
<li>All full nodes (except for validators who are behind closed networks)</li>
<li>Node's memory usage increases, then it panics either in the mempool or due to OOM.</li>
</ul>
<h3 id="patches">Patches</h3>
<ul>
<li>v0.33.3</li>
<li>v0.32.10</li>
<li>v0.31.12</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a> (not disclosed yet)</li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
</ul>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/tendermint/tendermint">tendermint/tendermint</a></li>
<li>Email us at <a href="mailto:security@tendermint.com">security@tendermint.com</a></li>
</ul>
<p>More information can be found <a href="https://tendermint.com/security/">here</a>.</p>
<h3 id="credits">Credits</h3>
<ul>
<li><a href="https://hackerone.com/fudongbai">fudongbai</a> for discovering and reporting Denial of Service 2</li>
<li>Ethan Buchman (@ebuchman) for writing a test case for Denial of Service 2 and Tess Rinearson (@tessr) for fixing it</li>
<li>Anton Kaliaev (@melekes) for fixing Denial of Service 1</li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/tendermint/tendermint/security/advisories/GHSA-v24h-pjjv-mcp6</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-5303">https://nvd.nist.gov/vuln/detail/CVE-2020-5303</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/1696">https://github.com/tendermint/tendermint/issues/1696</a></li>
<li><a href="https://github.com/tendermint/tendermint/issues/3338">https://github.com/tendermint/tendermint/issues/3338</a></li>
<li><a href="https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd">https://github.com/tendermint/tendermint/commit/e2d6859afd7dba4cf97c7f7d412e7d8fc908d1cd</a></li>
<li><a href="https://hackerone.com/reports/820317">https://hackerone.com/reports/820317</a></li>
<li><a href="https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1">https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#denial-of-service-1</a></li>
<li><a href="https://github.com/advisories/GHSA-v24h-pjjv-mcp6">https://github.com/advisories/GHSA-v24h-pjjv-mcp6</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v24h-pjjv-mcp6</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-05-27T18:44:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Improper Restriction of Excessive Authentication Attempts in Argo API]]></title>
        <id>https://github.com/advisories/GHSA-xcqr-9h24-vrgw</id>
        <link href="https://github.com/advisories/GHSA-xcqr-9h24-vrgw"/>
        <updated>2023-10-02T12:25:40.000Z</updated>
        <content type="html"><![CDATA[<p>As of v1.5.0, the Argo API does not implement anti-automation measures such as rate limiting, account lockouts, or other anti-bruteforce measures. Attackers can submit an unlimited number of authentication attempts without consequence.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/argoproj/argo-cd/util/cache</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8827">https://nvd.nist.gov/vuln/detail/CVE-2020-8827</a></li>
<li><a href="https://github.com/argoproj/argo-cd/pull/3369">https://github.com/argoproj/argo-cd/pull/3369</a></li>
<li><a href="https://github.com/argoproj/argo-cd/pull/3404">https://github.com/argoproj/argo-cd/pull/3404</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1">https://github.com/argoproj/argo-cd/commit/35a7350b7444bcaf53ee0bb11b9d8e3ae4b717a1</a></li>
<li><a href="https://argoproj.github.io/argo-cd/operator-manual/user-management/#disable-admin-user">https://argoproj.github.io/argo-cd/operator-manual/user-management/#disable-admin-user</a></li>
<li><a href="https://argoproj.github.io/argo-cd/security_considerations/">https://argoproj.github.io/argo-cd/security_considerations/</a></li>
<li><a href="https://github.com/argoproj/argo/releases">https://github.com/argoproj/argo/releases</a></li>
<li><a href="https://www.soluble.ai/blog/argo-cves-2020">https://www.soluble.ai/blog/argo-cves-2020</a></li>
<li><a href="https://github.com/advisories/GHSA-xcqr-9h24-vrgw">https://github.com/advisories/GHSA-xcqr-9h24-vrgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-xcqr-9h24-vrgw</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-07-26T21:19:37.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm] Aliases are never checked in helm]]></title>
        <id>https://github.com/advisories/GHSA-9vp5-m38w-j776</id>
        <link href="https://github.com/advisories/GHSA-9vp5-m38w-j776"/>
        <updated>2023-10-02T12:24:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a security audit of Helm's code base, security researchers at Trail of Bits identified a bug in which the <code>alias</code> field on a <code>Chart.yaml</code> is not properly sanitized. This could lead to the injection of unwanted information into a chart.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in Helm 3.3.2 and 2.16.11</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>helm.sh/helm/v3/pkg/chartutil</p>
<h3 id="workarounds">Workarounds</h3>
<p>Manually review the <code>dependencies</code> field of any untrusted chart, verifying that the <code>alias</code> field is either not used, or (if used) does not contain newlines or path characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-9vp5-m38w-j776">https://github.com/helm/helm/security/advisories/GHSA-9vp5-m38w-j776</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15184">https://nvd.nist.gov/vuln/detail/CVE-2020-15184</a></li>
<li><a href="https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946">https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946</a></li>
<li><a href="https://github.com/helm/helm/commit/e7c281564d8306e1dcf8023d97f972449ad74850">https://github.com/helm/helm/commit/e7c281564d8306e1dcf8023d97f972449ad74850</a></li>
<li><a href="https://github.com/advisories/GHSA-9vp5-m38w-j776">https://github.com/advisories/GHSA-9vp5-m38w-j776</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vp5-m38w-j776</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-05-24T16:56:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Aliases are never checked in helm]]></title>
        <id>https://github.com/advisories/GHSA-9vp5-m38w-j776</id>
        <link href="https://github.com/advisories/GHSA-9vp5-m38w-j776"/>
        <updated>2023-10-02T12:24:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>During a security audit of Helm's code base, security researchers at Trail of Bits identified a bug in which the <code>alias</code> field on a <code>Chart.yaml</code> is not properly sanitized. This could lead to the injection of unwanted information into a chart.</p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in Helm 3.3.2 and 2.16.11</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>helm.sh/helm/v3/pkg/chartutil</p>
<h3 id="workarounds">Workarounds</h3>
<p>Manually review the <code>dependencies</code> field of any untrusted chart, verifying that the <code>alias</code> field is either not used, or (if used) does not contain newlines or path characters.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-9vp5-m38w-j776">https://github.com/helm/helm/security/advisories/GHSA-9vp5-m38w-j776</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-15184">https://nvd.nist.gov/vuln/detail/CVE-2020-15184</a></li>
<li><a href="https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946">https://github.com/helm/helm/commit/6aab63765f99050b115f0aec3d6350c85e8da946</a></li>
<li><a href="https://github.com/helm/helm/commit/e7c281564d8306e1dcf8023d97f972449ad74850">https://github.com/helm/helm/commit/e7c281564d8306e1dcf8023d97f972449ad74850</a></li>
<li><a href="https://github.com/advisories/GHSA-9vp5-m38w-j776">https://github.com/advisories/GHSA-9vp5-m38w-j776</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9vp5-m38w-j776</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-05-24T16:56:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/u-root/u-root] github.com/u-root/u-root/pkg/tarutil Arbitrary File Write via Archive Extraction (Zip Slip)]]></title>
        <id>https://github.com/advisories/GHSA-75qf-wgfj-v652</id>
        <link href="https://github.com/advisories/GHSA-75qf-wgfj-v652"/>
        <updated>2023-10-02T12:22:35.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions up to and including version 7.0.0 of package github.com/u-root/u-root/pkg/tarutil. It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7669">https://nvd.nist.gov/vuln/detail/CVE-2020-7669</a></li>
<li><a href="https://github.com/u-root/u-root/pull/1817">https://github.com/u-root/u-root/pull/1817</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428</a></li>
<li><a href="https://github.com/advisories/GHSA-75qf-wgfj-v652">https://github.com/advisories/GHSA-75qf-wgfj-v652</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-75qf-wgfj-v652</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T18:28:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/unknwon/cae] Path Traversal in github.com/unknwon/cae/zip]]></title>
        <id>https://github.com/advisories/GHSA-vpx7-vm66-qx8r</id>
        <link href="https://github.com/advisories/GHSA-vpx7-vm66-qx8r"/>
        <updated>2023-10-02T12:21:11.000Z</updated>
        <content type="html"><![CDATA[<p>The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading "..". This allows an attacker to add or replace files system-wide.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/unknwon/cae/zip</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7664">https://nvd.nist.gov/vuln/detail/CVE-2020-7664</a></li>
<li><a href="https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11">https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0228">https://pkg.go.dev/vuln/GO-2021-0228</a></li>
<li><a href="https://github.com/advisories/GHSA-vpx7-vm66-qx8r">https://github.com/advisories/GHSA-vpx7-vm66-qx8r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vpx7-vm66-qx8r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T20:31:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[helm.sh/helm/v3] Plugin archive directory traversal in Helm]]></title>
        <id>https://github.com/advisories/GHSA-qq3j-xp49-j73f</id>
        <link href="https://github.com/advisories/GHSA-qq3j-xp49-j73f"/>
        <updated>2023-10-02T12:19:50.000Z</updated>
        <content type="html"><![CDATA[<p>The Helm core maintainers have identified an information disclosure
vulnerability in Helm 3.0.0-3.2.3. </p>
<h3 id="impact">Impact</h3>
<p>A traversal attack is possible when installing Helm plugins from a tar
archive over HTTP.  It is possible for a malicious plugin author to inject a relative
path into a plugin archive, and copy a file outside of the intended directory.</p>
<p>Traversal Attacks are a form of a Directory Traversal that can be exploited by
extracting files from an archive. The premise of the Directory Traversal
vulnerability is that an attacker can gain access to parts of the file system
outside of the target folder in which they should reside. The attacker can
then overwrite executable files and either invoke them remotely or wait for
the system or user to call them, thus achieving Remote Command Execution on
the victim's machine. The vulnerability can also cause damage by overwriting
configuration files or other sensitive resources, and can be exploited on both
client (user) machines and servers.</p>
<p><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>helm.sh/helm/v3/pkg/plugin/installer</p>
<h3 id="patches">Patches</h3>
<p>This issue has been fixed in Helm 3.2.4 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/helm/helm/issues">the Helm repository</a></li>
<li>For security-specific issues, email us at <a href="mailto:cncf-helm-security@lists.cncf.io">cncf-helm-security@lists.cncf.io</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/helm/helm/security/advisories/GHSA-qq3j-xp49-j73f">https://github.com/helm/helm/security/advisories/GHSA-qq3j-xp49-j73f</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-4053">https://nvd.nist.gov/vuln/detail/CVE-2020-4053</a></li>
<li><a href="https://github.com/helm/helm/pull/8317">https://github.com/helm/helm/pull/8317</a></li>
<li><a href="https://github.com/helm/helm/commit/0ad800ef43d3b826f31a5ad8dfbb4fe05d143688">https://github.com/helm/helm/commit/0ad800ef43d3b826f31a5ad8dfbb4fe05d143688</a></li>
<li><a href="https://github.com/helm/helm/commit/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3">https://github.com/helm/helm/commit/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3</a></li>
<li><a href="https://github.com/helm/helm/releases/tag/v3.2.4">https://github.com/helm/helm/releases/tag/v3.2.4</a></li>
<li><a href="https://github.com/advisories/GHSA-qq3j-xp49-j73f">https://github.com/advisories/GHSA-qq3j-xp49-j73f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-qq3j-xp49-j73f</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2021-06-23T18:14:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] pomerium_signature is not verified in middleware in github.com/pomerium/pomerium]]></title>
        <id>https://github.com/advisories/GHSA-fv82-r8qv-ch4v</id>
        <link href="https://github.com/advisories/GHSA-fv82-r8qv-ch4v"/>
        <updated>2023-10-02T12:10:38.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Some API endpoints under /.pomerium/ do not verify parameters with pomerium_signature. This could allow modifying parameters intended to be trusted to Pomerium. </p>
<p>The issue mainly affects routes responsible for sign in/out, but does not introduce an authentication bypass.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/pomerium/pomerium/authenticate</p>
<h3 id="patches">Patches</h3>
<p>Patched in v0.13.4</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory</p>
<ul>
<li>Open an issue in <a href="http://github.com/pomerium/pomerium">pomerium</a></li>
<li>Email us at <a href="mailto:security@pomerium.com">security@pomerium.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-fv82-r8qv-ch4v">https://github.com/pomerium/pomerium/security/advisories/GHSA-fv82-r8qv-ch4v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29652">https://nvd.nist.gov/vuln/detail/CVE-2021-29652</a></li>
<li><a href="https://github.com/pomerium/pomerium/pull/2048">https://github.com/pomerium/pomerium/pull/2048</a></li>
<li><a href="https://github.com/advisories/GHSA-fv82-r8qv-ch4v">https://github.com/advisories/GHSA-fv82-r8qv-ch4v</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fv82-r8qv-ch4v</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-21T16:24:22.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pomerium/pomerium] JWT leak via Open Redirect in Programmatic access]]></title>
        <id>https://github.com/advisories/GHSA-35vc-w93w-75c2</id>
        <link href="https://github.com/advisories/GHSA-35vc-w93w-75c2"/>
        <updated>2023-10-02T12:09:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Using programmatic access on protected sites, one can get a signed login URL with pomerium_redirect_uri set to an arbitrary URL. Then, if the user has already logged into Pomerium, they will be redirected to the specified pomerium_redirect_uri with a JWT attached. This allows an outside attacker to get a signed login URL that, upon visiting it, will redirect a victim to the attacker’s site. This creates an issue of Open Redirect and, more seriously, JWT leakage.</p>
<p>With a leaked JWT, the attacker will be able to unveil the victim’s identity (.e.g. email address) by supplying the JWT to the authenticate service or verify.pomerium.com. In addition, if an application integrating Pomerium only verifies the iss claim and others but not the aud claim, the attacker will be able to access it as the victim.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/pomerium/pomerium/proxy</p>
<h3 id="patches">Patches</h3>
<p>Patched in Pomerium v0.13.4</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory</p>
<ul>
<li>Open an issue in <a href="http://github.com/pomerium/pomerium">pomerium</a></li>
<li>Email us at <a href="mailto:security@pomerium.com">security@pomerium.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/pomerium/pomerium/security/advisories/GHSA-35vc-w93w-75c2">https://github.com/pomerium/pomerium/security/advisories/GHSA-35vc-w93w-75c2</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-29651">https://nvd.nist.gov/vuln/detail/CVE-2021-29651</a></li>
<li><a href="https://github.com/pomerium/pomerium/pull/2049">https://github.com/pomerium/pomerium/pull/2049</a></li>
<li><a href="https://github.com/advisories/GHSA-35vc-w93w-75c2">https://github.com/advisories/GHSA-35vc-w93w-75c2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-35vc-w93w-75c2</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-21T16:24:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/spiffe/spire] Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node]]></title>
        <id>https://github.com/advisories/GHSA-h746-rm5q-8mgq</id>
        <link href="https://github.com/advisories/GHSA-h746-rm5q-8mgq"/>
        <updated>2023-10-02T12:04:38.000Z</updated>
        <content type="html"><![CDATA[<h4 id="summary">Summary</h4>
<p>In SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server’s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.</p>
<h4 id="what-are-the-changes-introduced-by-the-patched-versions">What are the changes introduced by the patched versions?</h4>
<p>The changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server’s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.</p>
<p>The patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.</p>
<p>There are no changes in the expected behavior of SPIRE.</p>
<h4 id="should-i-upgrade-spire">Should I upgrade SPIRE?</h4>
<p>All SPIRE users running affected versions are advised to upgrade to the corresponding patched version.</p>
<h4 id="workarounds">Workarounds</h4>
<p>No workarounds have been identified for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq">https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27098">https://nvd.nist.gov/vuln/detail/CVE-2021-27098</a></li>
<li><a href="https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13">https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098</a></li>
<li><a href="https://github.com/advisories/GHSA-h746-rm5q-8mgq">https://github.com/advisories/GHSA-h746-rm5q-8mgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h746-rm5q-8mgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-21T14:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/spiffe/spire] Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node]]></title>
        <id>https://github.com/advisories/GHSA-h746-rm5q-8mgq</id>
        <link href="https://github.com/advisories/GHSA-h746-rm5q-8mgq"/>
        <updated>2023-10-02T12:04:38.000Z</updated>
        <content type="html"><![CDATA[<h4 id="summary">Summary</h4>
<p>In SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server’s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.</p>
<h4 id="what-are-the-changes-introduced-by-the-patched-versions">What are the changes introduced by the patched versions?</h4>
<p>The changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server’s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.</p>
<p>The patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.</p>
<p>There are no changes in the expected behavior of SPIRE.</p>
<h4 id="should-i-upgrade-spire">Should I upgrade SPIRE?</h4>
<p>All SPIRE users running affected versions are advised to upgrade to the corresponding patched version.</p>
<h4 id="workarounds">Workarounds</h4>
<p>No workarounds have been identified for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq">https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27098">https://nvd.nist.gov/vuln/detail/CVE-2021-27098</a></li>
<li><a href="https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13">https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098</a></li>
<li><a href="https://github.com/advisories/GHSA-h746-rm5q-8mgq">https://github.com/advisories/GHSA-h746-rm5q-8mgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h746-rm5q-8mgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-21T14:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/spiffe/spire] Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node]]></title>
        <id>https://github.com/advisories/GHSA-h746-rm5q-8mgq</id>
        <link href="https://github.com/advisories/GHSA-h746-rm5q-8mgq"/>
        <updated>2023-10-02T12:04:38.000Z</updated>
        <content type="html"><![CDATA[<h4 id="summary">Summary</h4>
<p>In SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server’s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.</p>
<h4 id="what-are-the-changes-introduced-by-the-patched-versions">What are the changes introduced by the patched versions?</h4>
<p>The changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server’s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.</p>
<p>The patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.</p>
<p>There are no changes in the expected behavior of SPIRE.</p>
<h4 id="should-i-upgrade-spire">Should I upgrade SPIRE?</h4>
<p>All SPIRE users running affected versions are advised to upgrade to the corresponding patched version.</p>
<h4 id="workarounds">Workarounds</h4>
<p>No workarounds have been identified for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq">https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27098">https://nvd.nist.gov/vuln/detail/CVE-2021-27098</a></li>
<li><a href="https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13">https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098</a></li>
<li><a href="https://github.com/advisories/GHSA-h746-rm5q-8mgq">https://github.com/advisories/GHSA-h746-rm5q-8mgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h746-rm5q-8mgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-21T14:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/spiffe/spire] Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node]]></title>
        <id>https://github.com/advisories/GHSA-h746-rm5q-8mgq</id>
        <link href="https://github.com/advisories/GHSA-h746-rm5q-8mgq"/>
        <updated>2023-10-02T12:04:38.000Z</updated>
        <content type="html"><![CDATA[<h4 id="summary">Summary</h4>
<p>In SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server’s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.</p>
<h4 id="what-are-the-changes-introduced-by-the-patched-versions">What are the changes introduced by the patched versions?</h4>
<p>The changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server’s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.</p>
<p>The patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.</p>
<p>There are no changes in the expected behavior of SPIRE.</p>
<h4 id="should-i-upgrade-spire">Should I upgrade SPIRE?</h4>
<p>All SPIRE users running affected versions are advised to upgrade to the corresponding patched version.</p>
<h4 id="workarounds">Workarounds</h4>
<p>No workarounds have been identified for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq">https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27098">https://nvd.nist.gov/vuln/detail/CVE-2021-27098</a></li>
<li><a href="https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13">https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098</a></li>
<li><a href="https://github.com/advisories/GHSA-h746-rm5q-8mgq">https://github.com/advisories/GHSA-h746-rm5q-8mgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h746-rm5q-8mgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-21T14:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/spiffe/spire] Legacy Node API Allows Impersonation in github.com/spiffe/spire/pkg/server/endpoints/node]]></title>
        <id>https://github.com/advisories/GHSA-h746-rm5q-8mgq</id>
        <link href="https://github.com/advisories/GHSA-h746-rm5q-8mgq"/>
        <updated>2023-10-02T12:04:38.000Z</updated>
        <content type="html"><![CDATA[<h4 id="summary">Summary</h4>
<p>In SPIRE 0.8.1 through 0.8.4 and before versions 0.9.4, 0.10.2, 0.11.3 and 0.12.1, specially crafted requests to the FetchX509SVID RPC of SPIRE Server’s Legacy Node API (github.com/spiffe/spire/pkg/server/endpoints/node) can result in the possible issuance of an X.509 certificate with a URI SAN for a SPIFFE ID that the agent is not authorized to distribute. Proper controls are in place to require that the caller presents a valid agent certificate that is already authorized to issue at least one SPIFFE ID, and the requested SPIFFE ID belongs to the same trust domain, prior to being able to trigger this vulnerability. This issue has been fixed in SPIRE versions 0.8.5, 0.9.4, 0.10.2, 0.11.3 and 0.12.1.</p>
<h4 id="what-are-the-changes-introduced-by-the-patched-versions">What are the changes introduced by the patched versions?</h4>
<p>The changes introduced to address this issue are related to enforcing that the FetchX509SVID RPC of SPIRE Server’s Legacy Node API only issues X.509 certificates with SPIFFE IDs that the agent is authorized to distribute.</p>
<p>The patched version also includes a back-ported change that improves the handling of file descriptors related to workload attestation in SPIRE Agent.</p>
<p>There are no changes in the expected behavior of SPIRE.</p>
<h4 id="should-i-upgrade-spire">Should I upgrade SPIRE?</h4>
<p>All SPIRE users running affected versions are advised to upgrade to the corresponding patched version.</p>
<h4 id="workarounds">Workarounds</h4>
<p>No workarounds have been identified for this vulnerability.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq">https://github.com/spiffe/spire/security/advisories/GHSA-h746-rm5q-8mgq</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-27098">https://nvd.nist.gov/vuln/detail/CVE-2021-27098</a></li>
<li><a href="https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13">https://github.com/spiffe/spire/commit/3c5115b57afc20a0a2c2b1b9dd60dd1fd9082e13</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-27098</a></li>
<li><a href="https://github.com/advisories/GHSA-h746-rm5q-8mgq">https://github.com/advisories/GHSA-h746-rm5q-8mgq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-h746-rm5q-8mgq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-21T14:31:11.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-rgjg-66cx-5x9m</id>
        <link href="https://github.com/advisories/GHSA-rgjg-66cx-5x9m"/>
        <updated>2023-10-02T12:01:52.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana before 4.6.4 and 5.x before 5.2.3 allows authentication bypass because an attacker can generate a valid "remember me" cookie knowing only a username of an LDAP or OAuth user.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/grafana/grafana/pkg/api</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15727">https://nvd.nist.gov/vuln/detail/CVE-2018-15727</a></li>
<li><a href="https://github.com/grafana/grafana/commit/7baecf0d0deae0d865e45cf03e082bc0db3f28c3">https://github.com/grafana/grafana/commit/7baecf0d0deae0d865e45cf03e082bc0db3f28c3</a></li>
<li><a href="https://github.com/grafana/grafana/commit/df83bf10a225811927644bdf6265fa80bdea9137">https://github.com/grafana/grafana/commit/df83bf10a225811927644bdf6265fa80bdea9137</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3829">https://access.redhat.com/errata/RHSA-2018:3829</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0019">https://access.redhat.com/errata/RHSA-2019:0019</a></li>
<li><a href="https://grafana.com/blog/2018/08/29/grafana-5.2.3-and-4.6.4-released-with-important-security-fix/">https://grafana.com/blog/2018/08/29/grafana-5.2.3-and-4.6.4-released-with-important-security-fix/</a></li>
<li><a href="https://www.securityfocus.com/bid/105184">https://www.securityfocus.com/bid/105184</a></li>
<li><a href="https://github.com/advisories/GHSA-rgjg-66cx-5x9m">https://github.com/advisories/GHSA-rgjg-66cx-5x9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgjg-66cx-5x9m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/grafana/grafana] Grafana Authentication Bypass]]></title>
        <id>https://github.com/advisories/GHSA-rgjg-66cx-5x9m</id>
        <link href="https://github.com/advisories/GHSA-rgjg-66cx-5x9m"/>
        <updated>2023-10-02T12:01:52.000Z</updated>
        <content type="html"><![CDATA[<p>Grafana before 4.6.4 and 5.x before 5.2.3 allows authentication bypass because an attacker can generate a valid "remember me" cookie knowing only a username of an LDAP or OAuth user.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/grafana/grafana/pkg/api</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-15727">https://nvd.nist.gov/vuln/detail/CVE-2018-15727</a></li>
<li><a href="https://github.com/grafana/grafana/commit/7baecf0d0deae0d865e45cf03e082bc0db3f28c3">https://github.com/grafana/grafana/commit/7baecf0d0deae0d865e45cf03e082bc0db3f28c3</a></li>
<li><a href="https://github.com/grafana/grafana/commit/df83bf10a225811927644bdf6265fa80bdea9137">https://github.com/grafana/grafana/commit/df83bf10a225811927644bdf6265fa80bdea9137</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2018:3829">https://access.redhat.com/errata/RHSA-2018:3829</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2019:0019">https://access.redhat.com/errata/RHSA-2019:0019</a></li>
<li><a href="https://grafana.com/blog/2018/08/29/grafana-5.2.3-and-4.6.4-released-with-important-security-fix/">https://grafana.com/blog/2018/08/29/grafana-5.2.3-and-4.6.4-released-with-important-security-fix/</a></li>
<li><a href="https://www.securityfocus.com/bid/105184">https://www.securityfocus.com/bid/105184</a></li>
<li><a href="https://github.com/advisories/GHSA-rgjg-66cx-5x9m">https://github.com/advisories/GHSA-rgjg-66cx-5x9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rgjg-66cx-5x9m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openshift/source-to-image] Openshift Enterprise source-to-image vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip)]]></title>
        <id>https://github.com/advisories/GHSA-w55j-f7vx-6q37</id>
        <link href="https://github.com/advisories/GHSA-w55j-f7vx-6q37"/>
        <updated>2023-10-02T11:55:21.000Z</updated>
        <content type="html"><![CDATA[<p>Openshift Enterprise source-to-image before version 1.1.10 is vulnerable to an improper validation of user input. An attacker who could trick a user into using the command to copy files locally, from a pod, could override files outside of the target directory of the command.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/openshift/source-to-image/pkg/tar</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1103">https://nvd.nist.gov/vuln/detail/CVE-2018-1103</a></li>
<li><a href="https://github.com/openshift/source-to-image/pull/870">https://github.com/openshift/source-to-image/pull/870</a></li>
<li><a href="https://github.com/openshift/source-to-image/commit/f5cbcbc5cc6f8cc2f479a7302443bea407a700cb">https://github.com/openshift/source-to-image/commit/f5cbcbc5cc6f8cc2f479a7302443bea407a700cb</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1103">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2018-1103</a></li>
<li><a href="https://github.com/snyk/zip-slip-vulnerability">https://github.com/snyk/zip-slip-vulnerability</a></li>
<li><a href="https://hansmi.ch/articles/2018-04-openshift-s2i-security">https://hansmi.ch/articles/2018-04-openshift-s2i-security</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2020-0026">https://pkg.go.dev/vuln/GO-2020-0026</a></li>
<li><a href="https://snyk.io/research/zip-slip-vulnerability">https://snyk.io/research/zip-slip-vulnerability</a></li>
<li><a href="https://github.com/advisories/GHSA-w55j-f7vx-6q37">https://github.com/advisories/GHSA-w55j-f7vx-6q37</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w55j-f7vx-6q37</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-06T23:49:46.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/ethereum/go-ethereum] Go Ethereum Denial of Service]]></title>
        <id>https://github.com/advisories/GHSA-9h4h-8w5p-f28w</id>
        <link href="https://github.com/advisories/GHSA-9h4h-8w5p-f28w"/>
        <updated>2023-10-02T11:53:11.000Z</updated>
        <content type="html"><![CDATA[<p><code>cmd/evm/runner.go</code> in Go Ethereum (aka geth) allows attackers to cause a denial of service (SEGV) via crafted bytecode.</p>
<h3 id="specific-go-packages-affected">Specific Go Packages Affected</h3>
<p>github.com/ethereum/go-ethereum/cmd/evm</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-19184">https://nvd.nist.gov/vuln/detail/CVE-2018-19184</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/issues/18069">https://github.com/ethereum/go-ethereum/issues/18069</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/83e2761c3a13524bd5d6597ac08994488cf872ef">https://github.com/ethereum/go-ethereum/commit/83e2761c3a13524bd5d6597ac08994488cf872ef</a></li>
<li><a href="https://github.com/ethereum/go-ethereum/commit/fb9f7261ec51e38eedb454594fc19f00de1a6834">https://github.com/ethereum/go-ethereum/commit/fb9f7261ec51e38eedb454594fc19f00de1a6834</a></li>
<li><a href="https://github.com/advisories/GHSA-9h4h-8w5p-f28w">https://github.com/advisories/GHSA-9h4h-8w5p-f28w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9h4h-8w5p-f28w</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-29T21:23:15.000Z</published>
    </entry>
</feed>