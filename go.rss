<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-08-27T02:07:09.685Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/b3log/wide] b3log Wide unauthenticated file access]]></title>
        <id>https://github.com/advisories/GHSA-6452-jr93-r5qm</id>
        <link href="https://github.com/advisories/GHSA-6452-jr93-r5qm"/>
        <updated>2023-08-25T21:47:55.000Z</updated>
        <content type="html"><![CDATA[<p>b3log Wide before 1.6.0 allows three types of attacks to access arbitrary files. First, the attacker can write code in the editor, and compile and run it approximately three times to read an arbitrary file. Second, the attacker can create a symlink, and then place the symlink into a ZIP archive. An unzip operation leads to read access, and write access (depending on file permissions), to the symlink target. Third, the attacker can import a Git repository that contains a symlink, similarly leading to read and write access.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-13915">https://nvd.nist.gov/vuln/detail/CVE-2019-13915</a></li>
<li><a href="https://github.com/b3log/wide/issues/355">https://github.com/b3log/wide/issues/355</a></li>
<li><a href="https://sca.analysiscenter.veracode.com/vulnerability-database/security/arbitrary-file-reads-and-writes/go/sid-20862">https://sca.analysiscenter.veracode.com/vulnerability-database/security/arbitrary-file-reads-and-writes/go/sid-20862</a></li>
<li><a href="https://web.archive.org/web/20190522035724/https://github.com/b3log/wide">https://web.archive.org/web/20190522035724/https://github.com/b3log/wide</a></li>
<li><a href="https://github.com/advisories/GHSA-6452-jr93-r5qm">https://github.com/advisories/GHSA-6452-jr93-r5qm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6452-jr93-r5qm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:50:40.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mastercactapus/proxyprotocol] mastercactapus proxyprotocol vulnerable to denial of service]]></title>
        <id>https://github.com/advisories/GHSA-85c5-ccm8-vr96</id>
        <link href="https://github.com/advisories/GHSA-85c5-ccm8-vr96"/>
        <updated>2023-08-25T21:43:48.000Z</updated>
        <content type="html"><![CDATA[<p>headerv2.go in mastercactapus proxyprotocol before 0.0.2, as used in the mastercactapus caddy-proxyprotocol plugin through 0.0.2 for Caddy, allows remote attackers to cause a denial of service (webserver panic and daemon crash) via a crafted HAProxy PROXY v2 request with truncated source/destination address data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-14243">https://nvd.nist.gov/vuln/detail/CVE-2019-14243</a></li>
<li><a href="https://github.com/mastercactapus/caddy-proxyprotocol/issues/8">https://github.com/mastercactapus/caddy-proxyprotocol/issues/8</a></li>
<li><a href="https://github.com/mastercactapus/proxyprotocol/issues/1">https://github.com/mastercactapus/proxyprotocol/issues/1</a></li>
<li><a href="https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac">https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac</a></li>
<li><a href="https://caddy.community/t/dos-in-http-proxyprotocol-plugin/6014">https://caddy.community/t/dos-in-http-proxyprotocol-plugin/6014</a></li>
<li><a href="https://github.com/mastercactapus/proxyprotocol/compare/ef496d7...5c4a101">https://github.com/mastercactapus/proxyprotocol/compare/ef496d7...5c4a101</a></li>
<li><a href="https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2">https://github.com/mastercactapus/proxyprotocol/releases/tag/v0.0.2</a></li>
<li><a href="https://github.com/advisories/GHSA-85c5-ccm8-vr96">https://github.com/advisories/GHSA-85c5-ccm8-vr96</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85c5-ccm8-vr96</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:51:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/podman] Podman Path Traversal Vulnerability leads to arbitrary file read/write]]></title>
        <id>https://github.com/advisories/GHSA-rh5f-2w6r-q7vj</id>
        <link href="https://github.com/advisories/GHSA-rh5f-2w6r-q7vj"/>
        <updated>2023-08-25T21:29:12.000Z</updated>
        <content type="html"><![CDATA[<p>A path traversal vulnerability has been discovered in podman before version 1.4.0 in the way it handles symlinks inside containers. An attacker who has compromised an existing container can cause arbitrary files on the host filesystem to be read/written when an administrator tries to copy a file from/to the container.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10152">https://nvd.nist.gov/vuln/detail/CVE-2019-10152</a></li>
<li><a href="https://github.com/containers/libpod/issues/3211">https://github.com/containers/libpod/issues/3211</a></li>
<li><a href="https://github.com/containers/libpod/pull/3214">https://github.com/containers/libpod/pull/3214</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10152">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10152</a></li>
<li><a href="https://github.com/containers/libpod/blob/master/RELEASE_NOTES.md#140">https://github.com/containers/libpod/blob/master/RELEASE_NOTES.md#140</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00001.html">http://lists.opensuse.org/opensuse-security-announce/2019-09/msg00001.html</a></li>
<li><a href="https://github.com/advisories/GHSA-rh5f-2w6r-q7vj">https://github.com/advisories/GHSA-rh5f-2w6r-q7vj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rh5f-2w6r-q7vj</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:51:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA Authorization Bypass]]></title>
        <id>https://github.com/advisories/GHSA-jcf2-mxr2-gmqp</id>
        <link href="https://github.com/advisories/GHSA-jcf2-mxr2-gmqp"/>
        <updated>2023-08-25T21:35:53.000Z</updated>
        <content type="html"><![CDATA[<h2 id="overview">Overview</h2>
<p>Some end users of OpenFGA v1.3.0 or earlier are vulnerable to authorization bypass when calling the ListObjects API. UPDATE: This means that the API sometimes returns more objects than it should.</p>
<h2 id="am-i-affected">Am I Affected?</h2>
<p>The vulnerability affects customers using <code>ListObjects</code> with specific models. The affected models contain expressions of type <code>rel1 from type1</code>.</p>
<h2 id="fix">Fix</h2>
<p>Update to v1.3.1.</p>
<h2 id="backward-compatibility">Backward Compatibility</h2>
<p>This update is backward compatible.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-jcf2-mxr2-gmqp">https://github.com/openfga/openfga/security/advisories/GHSA-jcf2-mxr2-gmqp</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v1.3.1">https://github.com/openfga/openfga/releases/tag/v1.3.1</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40579">https://nvd.nist.gov/vuln/detail/CVE-2023-40579</a></li>
<li><a href="https://github.com/advisories/GHSA-jcf2-mxr2-gmqp">https://github.com/advisories/GHSA-jcf2-mxr2-gmqp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jcf2-mxr2-gmqp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-25T19:45:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker Vulnerable to Privilege Escalation From Non Admin To Admin User]]></title>
        <id>https://github.com/advisories/GHSA-826j-8wp2-4x6q</id>
        <link href="https://github.com/advisories/GHSA-826j-8wp2-4x6q"/>
        <updated>2023-08-25T18:42:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A Mass assignment vulnerability was found allowing a non-admin user to escalate privileges to admin user.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+.</p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-826j-8wp2-4x6q">https://github.com/gravitl/netmaker/security/advisories/GHSA-826j-8wp2-4x6q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32079">https://nvd.nist.gov/vuln/detail/CVE-2023-32079</a></li>
<li><a href="https://github.com/advisories/GHSA-826j-8wp2-4x6q">https://github.com/advisories/GHSA-826j-8wp2-4x6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-826j-8wp2-4x6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:42:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker Vulnerable to Privilege Escalation From Non Admin To Admin User]]></title>
        <id>https://github.com/advisories/GHSA-826j-8wp2-4x6q</id>
        <link href="https://github.com/advisories/GHSA-826j-8wp2-4x6q"/>
        <updated>2023-08-25T18:42:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>A Mass assignment vulnerability was found allowing a non-admin user to escalate privileges to admin user.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+.</p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-826j-8wp2-4x6q">https://github.com/gravitl/netmaker/security/advisories/GHSA-826j-8wp2-4x6q</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32079">https://nvd.nist.gov/vuln/detail/CVE-2023-32079</a></li>
<li><a href="https://github.com/advisories/GHSA-826j-8wp2-4x6q">https://github.com/advisories/GHSA-826j-8wp2-4x6q</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-826j-8wp2-4x6q</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:42:53.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker IDOR Allows User to Update Other User's Password]]></title>
        <id>https://github.com/advisories/GHSA-256m-j5qw-38f4</id>
        <link href="https://github.com/advisories/GHSA-256m-j5qw-38f4"/>
        <updated>2023-08-25T18:41:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An IDOR vulnerability was found in the user update function. By specifying another user's username it is possible to update the other user's password.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+.</p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-256m-j5qw-38f4">https://github.com/gravitl/netmaker/security/advisories/GHSA-256m-j5qw-38f4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32078">https://nvd.nist.gov/vuln/detail/CVE-2023-32078</a></li>
<li><a href="https://github.com/gravitl/netmaker/pull/2158">https://github.com/gravitl/netmaker/pull/2158</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/b3be57c65bf0bbfab43b66853c8e3637a43e2839">https://github.com/gravitl/netmaker/commit/b3be57c65bf0bbfab43b66853c8e3637a43e2839</a></li>
<li><a href="https://github.com/advisories/GHSA-256m-j5qw-38f4">https://github.com/advisories/GHSA-256m-j5qw-38f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-256m-j5qw-38f4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:41:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker IDOR Allows User to Update Other User's Password]]></title>
        <id>https://github.com/advisories/GHSA-256m-j5qw-38f4</id>
        <link href="https://github.com/advisories/GHSA-256m-j5qw-38f4"/>
        <updated>2023-08-25T18:41:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An IDOR vulnerability was found in the user update function. By specifying another user's username it is possible to update the other user's password.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+.</p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-256m-j5qw-38f4">https://github.com/gravitl/netmaker/security/advisories/GHSA-256m-j5qw-38f4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32078">https://nvd.nist.gov/vuln/detail/CVE-2023-32078</a></li>
<li><a href="https://github.com/gravitl/netmaker/pull/2158">https://github.com/gravitl/netmaker/pull/2158</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/b3be57c65bf0bbfab43b66853c8e3637a43e2839">https://github.com/gravitl/netmaker/commit/b3be57c65bf0bbfab43b66853c8e3637a43e2839</a></li>
<li><a href="https://github.com/advisories/GHSA-256m-j5qw-38f4">https://github.com/advisories/GHSA-256m-j5qw-38f4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-256m-j5qw-38f4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:41:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker has Hardcoded DNS Secret Key]]></title>
        <id>https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</id>
        <link href="https://github.com/advisories/GHSA-8x8h-hcq8-jwwx"/>
        <updated>2023-08-25T18:38:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+. </p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-8x8h-hcq8-jwwx">https://github.com/gravitl/netmaker/security/advisories/GHSA-8x8h-hcq8-jwwx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32077">https://nvd.nist.gov/vuln/detail/CVE-2023-32077</a></li>
<li><a href="https://github.com/gravitl/netmaker/pull/2170">https://github.com/gravitl/netmaker/pull/2170</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/1621c27c1d176b639e9768b2acad7693e387fd51">https://github.com/gravitl/netmaker/commit/1621c27c1d176b639e9768b2acad7693e387fd51</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/9362c39a9a822f0e07361aa7c77af2610597e657">https://github.com/gravitl/netmaker/commit/9362c39a9a822f0e07361aa7c77af2610597e657</a></li>
<li><a href="https://github.com/advisories/GHSA-8x8h-hcq8-jwwx">https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:38:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gravitl/netmaker] Netmaker has Hardcoded DNS Secret Key]]></title>
        <id>https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</id>
        <link href="https://github.com/advisories/GHSA-8x8h-hcq8-jwwx"/>
        <updated>2023-08-25T18:38:21.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Hardcoded DNS key usage has been found in Netmaker allowing unauth users to interact with DNS API endpoints.</p>
<h3 id="patches">Patches</h3>
<p>Issue is patched in 0.17.1, and fixed in 0.18.6+. </p>
<p>If Users are using 0.17.1, they should run "docker pull gravitl/netmaker:v0.17.1" and "docker-compose up -d". This will switch them to the patched users</p>
<p>If users are using v0.18.0-0.18.5, they should upgrade to v0.18.6 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>If using 0.17.1, can just pull the latest docker image of backend and restart server.</p>
<h3 id="references">References</h3>
<p>Credit to Project Discovery, and in particular <a href="https://github.com/rootxharsh">https://github.com/rootxharsh</a> , <a href="https://github.com/iamnoooob">https://github.com/iamnoooob</a>, and <a href="https://github.com/projectdiscovery">https://github.com/projectdiscovery</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gravitl/netmaker/security/advisories/GHSA-8x8h-hcq8-jwwx">https://github.com/gravitl/netmaker/security/advisories/GHSA-8x8h-hcq8-jwwx</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-32077">https://nvd.nist.gov/vuln/detail/CVE-2023-32077</a></li>
<li><a href="https://github.com/gravitl/netmaker/pull/2170">https://github.com/gravitl/netmaker/pull/2170</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/1621c27c1d176b639e9768b2acad7693e387fd51">https://github.com/gravitl/netmaker/commit/1621c27c1d176b639e9768b2acad7693e387fd51</a></li>
<li><a href="https://github.com/gravitl/netmaker/commit/9362c39a9a822f0e07361aa7c77af2610597e657">https://github.com/gravitl/netmaker/commit/9362c39a9a822f0e07361aa7c77af2610597e657</a></li>
<li><a href="https://github.com/advisories/GHSA-8x8h-hcq8-jwwx">https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8x8h-hcq8-jwwx</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-25T18:38:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/libp2p/go-libp2p] libp2p nodes vulnerable to OOM attack]]></title>
        <id>https://github.com/advisories/GHSA-gcq9-qqwx-rgj3</id>
        <link href="https://github.com/advisories/GHSA-gcq9-qqwx-rgj3"/>
        <updated>2023-08-25T21:43:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>In go-libp2p, by using signed peer records a malicious actor can store an arbitrary amount of data in a remote node’s memory. This memory does not get garbage collected and so the victim can run out of memory and crash.</p>
<p>It is feasible to do this at scale. An attacker would have to transfer ~1/2 as much memory it wants to occupy (2x amplification factor).</p>
<p>The attacker can perform this attack over time as the target node’s memory will not be garbage collected.</p>
<p>This can occur because when a signed peer record is received, only the signature validity check is performed but the sender signature is not checked. Signed peer records from randomly generated peers can be sent by a malicious actor. A target node will accept the peer record as long as the signature is valid, and then stored in the peer store.</p>
<p>There is cleanup logic in the peer store that cleans up data when a peer disconnects, but this cleanup is never triggered for the fake peer (from which signed peer records were accepted) because it was never “connected”.</p>
<h3 id="impact">Impact</h3>
<p>If users of go-libp2p in production are not monitoring memory consumption over time, it could be a silent attack i.e. the attacker could bring down nodes over a period of time (how long depends on the node resources i.e. a go-libp2p node on a virtual server with 4 gb of memory takes about 90 sec to bring down; on a larger server, it might take a bit longer.)</p>
<h3 id="patches">Patches</h3>
<p>Update your go-libp2p dependency to the latest release, v0.30.0 at the time of writing.</p>
<p>If you'd like to stay on the 0.27.x release, we strongly recommend users to update to go-libp2p <a href="https://github.com/libp2p/go-libp2p/releases/tag/v0.27.7">0.27.7</a>. Though this OOM issue was fixed in 0.27.4, there were subsequent patch releases afterwards (important fixes for other issues unrelated to the OOM).</p>
<h3 id="workarounds">Workarounds</h3>
<p>None</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/libp2p/go-libp2p/security/advisories/GHSA-gcq9-qqwx-rgj3">https://github.com/libp2p/go-libp2p/security/advisories/GHSA-gcq9-qqwx-rgj3</a></li>
<li><a href="https://github.com/libp2p/go-libp2p/commit/45d3c6fff662ddd6938982e7e9309ad5fa2ad8dd">https://github.com/libp2p/go-libp2p/commit/45d3c6fff662ddd6938982e7e9309ad5fa2ad8dd</a></li>
<li><a href="https://github.com/libp2p/go-libp2p/releases/tag/v0.27.4">https://github.com/libp2p/go-libp2p/releases/tag/v0.27.4</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40583">https://nvd.nist.gov/vuln/detail/CVE-2023-40583</a></li>
<li><a href="https://github.com/libp2p/go-libp2p/releases/tag/v0.27.7">https://github.com/libp2p/go-libp2p/releases/tag/v0.27.7</a></li>
<li><a href="https://github.com/advisories/GHSA-gcq9-qqwx-rgj3">https://github.com/advisories/GHSA-gcq9-qqwx-rgj3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gcq9-qqwx-rgj3</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-24T22:22:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/envoyproxy/envoy] EnvoyProxy Envoy Missing HTTP URL path normalization]]></title>
        <id>https://github.com/advisories/GHSA-2wmf-p7f8-w42h</id>
        <link href="https://github.com/advisories/GHSA-2wmf-p7f8-w42h"/>
        <updated>2023-08-24T13:07:22.000Z</updated>
        <content type="html"><![CDATA[<p>Envoy 1.9.0 and before does not normalize HTTP URL paths. A remote attacker may craft a relative path, e.g., <code>something/../admin</code>, to bypass access control, e.g., a block on <code>/admin</code>. A backend server could then interpret the non-normalized path and provide an attacker access beyond the scope provided for by the access control policy.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/envoyproxy/envoy/security/advisories/GHSA-xcx5-93pw-jw2w">https://github.com/envoyproxy/envoy/security/advisories/GHSA-xcx5-93pw-jw2w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-9901">https://nvd.nist.gov/vuln/detail/CVE-2019-9901</a></li>
<li><a href="https://github.com/envoyproxy/envoy/issues/6435">https://github.com/envoyproxy/envoy/issues/6435</a></li>
<li><a href="https://groups.google.com/forum/#!topic/envoy-announce/VoHfnDqZiAM">https://groups.google.com/forum/#!topic/envoy-announce/VoHfnDqZiAM</a></li>
<li><a href="https://www.envoyproxy.io/docs/envoy/v1.9.1/intro/version_history">https://www.envoyproxy.io/docs/envoy/v1.9.1/intro/version_history</a></li>
<li><a href="https://github.com/envoyproxy/envoy/blob/main/security/postmortems/cve-2019-9900.md">https://github.com/envoyproxy/envoy/blob/main/security/postmortems/cve-2019-9900.md</a></li>
<li><a href="https://github.com/envoyproxy/envoy/commit/e668e669677e52a00d99652b5a260d1cedafdfa8">https://github.com/envoyproxy/envoy/commit/e668e669677e52a00d99652b5a260d1cedafdfa8</a></li>
<li><a href="https://github.com/advisories/GHSA-2wmf-p7f8-w42h">https://github.com/advisories/GHSA-2wmf-p7f8-w42h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2wmf-p7f8-w42h</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-05-24T16:44:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/traefik/traefik] Containous Traefik Exposes Password Hashes]]></title>
        <id>https://github.com/advisories/GHSA-r3fq-cmmw-cpmm</id>
        <link href="https://github.com/advisories/GHSA-r3fq-cmmw-cpmm"/>
        <updated>2023-08-24T13:02:40.000Z</updated>
        <content type="html"><![CDATA[<p>types/types.go in Containous Traefik 1.7.x through 1.7.11, when the <code>--api</code> flag is used and the API is publicly reachable and exposed without sufficient access control (which is contrary to the API documentation), allows remote authenticated users to discover password hashes by reading the Basic HTTP Authentication or Digest HTTP Authentication section, or discover a key by reading the ClientTLS section. These can be found in the JSON response to a <code>/api</code> request.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-12452">https://nvd.nist.gov/vuln/detail/CVE-2019-12452</a></li>
<li><a href="https://github.com/containous/traefik/issues/4917">https://github.com/containous/traefik/issues/4917</a></li>
<li><a href="https://github.com/containous/traefik/pull/4918">https://github.com/containous/traefik/pull/4918</a></li>
<li><a href="https://github.com/traefik/traefik/commit/a169fec2e08e391d24b509c00fcf011656c1395c">https://github.com/traefik/traefik/commit/a169fec2e08e391d24b509c00fcf011656c1395c</a></li>
<li><a href="https://github.com/advisories/GHSA-r3fq-cmmw-cpmm">https://github.com/advisories/GHSA-r3fq-cmmw-cpmm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-r3fq-cmmw-cpmm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T16:46:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/nmstate/kubernetes-nmstate] Withdrawn Advisory: kubernetes-nmstate Insecure Privilege Management]]></title>
        <id>https://github.com/advisories/GHSA-jw82-xjgr-g6f8</id>
        <link href="https://github.com/advisories/GHSA-jw82-xjgr-g6f8"/>
        <updated>2023-08-23T21:44:49.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn-advisory">Withdrawn Advisory</h2>
<p>This advisory has been withdrawn. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>An insecure modification vulnerability flaw was found in containers using nmstate/kubernetes-nmstate-handler. An attacker with access to the container could use this flaw to modify /etc/passwd and escalate their privileges. Versions before kubernetes-nmstate-handler-container-v2.3.0-30 are affected.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-1742">https://nvd.nist.gov/vuln/detail/CVE-2020-1742</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1803608">https://bugzilla.redhat.com/show_bug.cgi?id=1803608</a></li>
<li><a href="https://github.com/advisories/GHSA-jw82-xjgr-g6f8">https://github.com/advisories/GHSA-jw82-xjgr-g6f8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jw82-xjgr-g6f8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-05-24T19:04:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/alertmanager] Alertmanager UI is vulnerable to stored XSS via the /api/v1/alerts endpoint]]></title>
        <id>https://github.com/advisories/GHSA-v86x-5fm3-5p7j</id>
        <link href="https://github.com/advisories/GHSA-v86x-5fm3-5p7j"/>
        <updated>2023-08-25T16:08:15.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An attacker with the permission to perform POST requests on the /api/v1/alerts endpoint could be able to execute arbitrary JavaScript code on the users of Prometheus Alertmanager.</p>
<h3 id="patches">Patches</h3>
<p>Users can upgrade to Alertmanager v0.2.51.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Users can setup a reverse proxy in front of the Alertmanager web server to forbid access to the /api/v1/alerts endpoint.</p>
<h3 id="references">References</h3>
<p>N/A</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/prometheus/alertmanager/security/advisories/GHSA-v86x-5fm3-5p7j">https://github.com/prometheus/alertmanager/security/advisories/GHSA-v86x-5fm3-5p7j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40577">https://nvd.nist.gov/vuln/detail/CVE-2023-40577</a></li>
<li><a href="https://github.com/advisories/GHSA-v86x-5fm3-5p7j">https://github.com/advisories/GHSA-v86x-5fm3-5p7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-v86x-5fm3-5p7j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-08-23T20:42:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/dablelv/go-huge-util] Go-huge-util vulnerable to path traversal when unzipping files]]></title>
        <id>https://github.com/advisories/GHSA-5g39-ppwg-6xx8</id>
        <link href="https://github.com/advisories/GHSA-5g39-ppwg-6xx8"/>
        <updated>2023-08-23T20:04:26.000Z</updated>
        <content type="html"><![CDATA[<p>Impact
ZipSlip issue when use fsutil package to unzip files.
When users use zip.Unzip to unzip zip files from a malicious attacker, they may be vulnerable to path traversal.</p>
<p>Patches
It has been fixed in v0.0.34, Please upgrade version to v0.0.34 or above.</p>
<p>Workarounds
No, users have to upgrade version.</p>
<p>References</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dablelv/go-huge-util/security/advisories/GHSA-5g39-ppwg-6xx8">https://github.com/dablelv/go-huge-util/security/advisories/GHSA-5g39-ppwg-6xx8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-28105">https://nvd.nist.gov/vuln/detail/CVE-2023-28105</a></li>
<li><a href="https://github.com/dablelv/go-huge-util/commit/0e308b0fac8973e6fa251b0ab095cdc5c1c0956b">https://github.com/dablelv/go-huge-util/commit/0e308b0fac8973e6fa251b0ab095cdc5c1c0956b</a></li>
<li><a href="https://github.com/advisories/GHSA-5g39-ppwg-6xx8">https://github.com/advisories/GHSA-5g39-ppwg-6xx8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5g39-ppwg-6xx8</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-03-16T18:32:38.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/crypto/openpgp/clearsign] Golang/crypto message forgery vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-x3jr-pf6g-c48f</id>
        <link href="https://github.com/advisories/GHSA-x3jr-pf6g-c48f"/>
        <updated>2023-08-23T19:39:03.000Z</updated>
        <content type="html"><![CDATA[<p>A message-forgery issue was discovered in crypto/openpgp/clearsign/clearsign.go in supplementary Go cryptography libraries 2019-03-25. According to the OpenPGP Message Format specification in RFC 4880 chapter 7, a cleartext signed message can contain one or more optional "Hash" Armor Headers. The "Hash" Armor Header specifies the message digest algorithm(s) used for the signature. However, the Go clearsign package ignores the value of this header, which allows an attacker to spoof it. Consequently, an attacker can lead a victim to believe the signature was generated using a different message digest algorithm than what was actually used. Moreover, since the library skips Armor Header parsing in general, an attacker can not only embed arbitrary Armor Headers, but also prepend arbitrary text to cleartext messages without invalidating the signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-11841">https://nvd.nist.gov/vuln/detail/CVE-2019-11841</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2019/09/msg00011.html">https://lists.debian.org/debian-lts-announce/2019/09/msg00011.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html">https://lists.debian.org/debian-lts-announce/2020/10/msg00014.html</a></li>
<li><a href="http://packetstormsecurity.com/files/152840/Go-Cryptography-Libraries-Cleartext-Message-Spoofing.html">http://packetstormsecurity.com/files/152840/Go-Cryptography-Libraries-Cleartext-Message-Spoofing.html</a></li>
<li><a href="https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html">https://lists.debian.org/debian-lts-announce/2023/06/msg00017.html</a></li>
<li><a href="https://github.com/golang/crypto/commit/c05e17bb3b2dca130fc919668a96b4bec9eb9442">https://github.com/golang/crypto/commit/c05e17bb3b2dca130fc919668a96b4bec9eb9442</a></li>
<li><a href="https://groups.google.com/d/msg/golang-openpgp/6vdgZoTgbIY/K6bBY9z3DAAJ">https://groups.google.com/d/msg/golang-openpgp/6vdgZoTgbIY/K6bBY9z3DAAJ</a></li>
<li><a href="https://web.archive.org/web/20201207161832/https://sec-consult.com/en/blog/advisories/cleartext-message-spoofing-in-go-cryptography-libraries-cve-2019-11841/">https://web.archive.org/web/20201207161832/https://sec-consult.com/en/blog/advisories/cleartext-message-spoofing-in-go-cryptography-libraries-cve-2019-11841/</a></li>
<li><a href="https://go-review.git.corp.google.com/c/crypto/+/173778">https://go-review.git.corp.google.com/c/crypto/+/173778</a></li>
<li><a href="https://go.googlesource.com/crypto/+/c05e17bb3b2dca130fc919668a96b4bec9eb9442">https://go.googlesource.com/crypto/+/c05e17bb3b2dca130fc919668a96b4bec9eb9442</a></li>
<li><a href="https://github.com/advisories/GHSA-x3jr-pf6g-c48f">https://github.com/advisories/GHSA-x3jr-pf6g-c48f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-x3jr-pf6g-c48f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-05-24T16:46:15.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Argo CD web terminal session doesn't expire]]></title>
        <id>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</id>
        <link href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr"/>
        <updated>2023-08-23T22:15:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of Argo CD starting from v2.6.0 have a bug where open web terminal sessions do not expire. This bug allows users to send any websocket messages even if the token has already expired. The most straightforward scenario is when a user opens the terminal view and leaves it open for an extended period. This allows the user to view sensitive information even when they should have been logged out already.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD version:</p>
<ul>
<li>v2.6.14</li>
<li>v2.7.12</li>
<li>v2.8.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Disable web-based terminal or define RBAC rules to it
<a href="https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/">https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thank you to bean.zhang (@zhlu32 ) of HIT-IDS ChunkL Team who discovered the issue and reported it confidentially according to our <a href="https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability">guidelines</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478">https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40025">https://nvd.nist.gov/vuln/detail/CVE-2023-40025</a></li>
<li><a href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/advisories/GHSA-c8xw-vjgf-94hr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-23T17:50:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Argo CD web terminal session doesn't expire]]></title>
        <id>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</id>
        <link href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr"/>
        <updated>2023-08-23T22:15:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of Argo CD starting from v2.6.0 have a bug where open web terminal sessions do not expire. This bug allows users to send any websocket messages even if the token has already expired. The most straightforward scenario is when a user opens the terminal view and leaves it open for an extended period. This allows the user to view sensitive information even when they should have been logged out already.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD version:</p>
<ul>
<li>v2.6.14</li>
<li>v2.7.12</li>
<li>v2.8.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Disable web-based terminal or define RBAC rules to it
<a href="https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/">https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thank you to bean.zhang (@zhlu32 ) of HIT-IDS ChunkL Team who discovered the issue and reported it confidentially according to our <a href="https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability">guidelines</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478">https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40025">https://nvd.nist.gov/vuln/detail/CVE-2023-40025</a></li>
<li><a href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/advisories/GHSA-c8xw-vjgf-94hr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-23T17:50:41.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd] Argo CD web terminal session doesn't expire]]></title>
        <id>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</id>
        <link href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr"/>
        <updated>2023-08-23T22:15:02.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of Argo CD starting from v2.6.0 have a bug where open web terminal sessions do not expire. This bug allows users to send any websocket messages even if the token has already expired. The most straightforward scenario is when a user opens the terminal view and leaves it open for an extended period. This allows the user to view sensitive information even when they should have been logged out already.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD version:</p>
<ul>
<li>v2.6.14</li>
<li>v2.7.12</li>
<li>v2.8.1</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Disable web-based terminal or define RBAC rules to it
<a href="https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/">https://argo-cd.readthedocs.io/en/latest/operator-manual/web_based_terminal/</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>Thank you to bean.zhang (@zhlu32 ) of HIT-IDS ChunkL Team who discovered the issue and reported it confidentially according to our <a href="https://github.com/argoproj/argo-cd/blob/master/SECURITY.md#reporting-a-vulnerability">guidelines</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/argoproj/argo-cd/security/advisories/GHSA-c8xw-vjgf-94hr</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478">https://github.com/argoproj/argo-cd/commit/e047efa8f9518c54d00d2e4493b64bc4dba98478</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40025">https://nvd.nist.gov/vuln/detail/CVE-2023-40025</a></li>
<li><a href="https://github.com/advisories/GHSA-c8xw-vjgf-94hr">https://github.com/advisories/GHSA-c8xw-vjgf-94hr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8xw-vjgf-94hr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-08-23T17:50:41.000Z</published>
    </entry>
</feed>