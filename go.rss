<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2022-11-21T12:01:48.813Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/lightningnetwork/lnd] Witness Block Parsing DoS Vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-hc82-w9v8-83pr</id>
        <link href="https://github.com/advisories/GHSA-hc82-w9v8-83pr"/>
        <updated>2022-11-18T18:50:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All lnd nodes before version <code>v0.15.4</code> are vulnerable to a block parsing bug that can cause a node to enter a degraded state once encountered. In this degraded state, nodes can continue to make payments and forward HTLCs, and close out channels. Opening channels is prohibited, and also on chain transaction events will be undetected. </p>
<p>This can cause loss of funds if a CSV expiry is researched during a breach attempt or a CLTV delta expires forgetting the funds in the HTLC. </p>
<h3 id="patches">Patches</h3>
<p>A patch is available starting with lnd <code>v0.15.4</code>. </p>
<h3 id="workarounds">Workarounds</h3>
<p>Nodes can use the <code>lncli updatechanpolicy</code> RPC call to increase their CLTV value to a very high amount or increase their fee policies. This will prevent nodes from routing through your node, meaning that no pending HTLCs can be present. </p>
<h3 id="references">References</h3>
<p><a href="https://github.com/lightningnetwork/lnd/issues/7096">https://github.com/lightningnetwork/lnd/issues/7096</a></p>
<p><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr">https://github.com/lightningnetwork/lnd/security/advisories/GHSA-hc82-w9v8-83pr</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39389">https://nvd.nist.gov/vuln/detail/CVE-2022-39389</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/issues/7096">https://github.com/lightningnetwork/lnd/issues/7096</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/pull/7098">https://github.com/lightningnetwork/lnd/pull/7098</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.4-beta</a></li>
<li><a href="https://github.com/advisories/GHSA-hc82-w9v8-83pr">https://github.com/advisories/GHSA-hc82-w9v8-83pr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hc82-w9v8-83pr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-18T18:50:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2022-11-19T01:18:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>For users who're using v1.6, please update the v1.6.1.
For users who're using v1.5, please update the v1.5.8.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/oam-dev/kubevela] List helm chart endpoint of VelaUX APIserver has SSRF vulnerability ]]></title>
        <id>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</id>
        <link href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7"/>
        <updated>2022-11-19T01:18:52.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Users using the VelaUX APIServer could be affected by this vulnerability.</p>
<p>When using Helm Chart as the component delivery method, the request address of the warehouse is not restricted, and there is a blind SSRF vulnerability.</p>
<h3 id="patches">Patches</h3>
<p>For users who're using v1.6, please update the v1.6.1.
For users who're using v1.5, please update the v1.5.8.</p>
<h3 id="references">References</h3>
<p>Fix by: #5000 </p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/kubevela/kubevela">KubeVela repo</a></li>
<li>Email us at <a href="https://github.com/kubevela/kubevela#contact-us">here</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/kubevela/kubevela/security/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39383">https://nvd.nist.gov/vuln/detail/CVE-2022-39383</a></li>
<li><a href="https://github.com/kubevela/kubevela/pull/5000">https://github.com/kubevela/kubevela/pull/5000</a></li>
<li><a href="https://github.com/advisories/GHSA-m5xf-x7q6-3rm7">https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m5xf-x7q6-3rm7</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-18T17:14:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/shamaton/msgpack/v2] MessagePack for Golang subject to DoS via Unmarshal panic]]></title>
        <id>https://github.com/advisories/GHSA-jr77-8gx4-h5qh</id>
        <link href="https://github.com/advisories/GHSA-jr77-8gx4-h5qh"/>
        <updated>2022-11-16T00:04:13.000Z</updated>
        <content type="html"><![CDATA[<p>Unmarshal can panic on some inputs, possibly allowing for denial of service attacks. This issue has been patched in version 2.1.1.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-41719">https://nvd.nist.gov/vuln/detail/CVE-2022-41719</a></li>
<li><a href="https://github.com/shamaton/msgpack/issues/31">https://github.com/shamaton/msgpack/issues/31</a></li>
<li><a href="https://github.com/shamaton/msgpack/pull/32">https://github.com/shamaton/msgpack/pull/32</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0972">https://pkg.go.dev/vuln/GO-2022-0972</a></li>
<li><a href="https://github.com/shamaton/msgpack/releases/tag/v2.1.1">https://github.com/shamaton/msgpack/releases/tag/v2.1.1</a></li>
<li><a href="https://github.com/advisories/GHSA-jr77-8gx4-h5qh">https://github.com/advisories/GHSA-jr77-8gx4-h5qh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jr77-8gx4-h5qh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-11T12:00:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference]]></title>
        <id>https://github.com/advisories/GHSA-prjq-f4q3-fvfr</id>
        <link href="https://github.com/advisories/GHSA-prjq-f4q3-fvfr"/>
        <updated>2022-11-15T19:05:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>In versions prior to v0.7.0 it was possible for an attacker to supply an invalid assertion which would trigger a panic due to a nil-pointer dereference.</p>
<h3 id="patches">Patches</h3>
<p>The issue was patched in v0.7.0, released on March 2, 2022.</p>
<h3 id="workarounds">Workarounds</h3>
<p>Callers to <code>gosaml2</code> can use <code>recover()</code> to handle panics to mitigate a potential DoS.</p>
<h3 id="references">References</h3>
<p>See issue #59 for details.</p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr">https://github.com/russellhaering/gosaml2/security/advisories/GHSA-prjq-f4q3-fvfr</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/advisories/GHSA-prjq-f4q3-fvfr">https://github.com/advisories/GHSA-prjq-f4q3-fvfr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-prjq-f4q3-fvfr</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-15T19:05:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/russellhaering/gosaml2] gosaml2 is vulnerable to NULL Pointer Dereference]]></title>
        <id>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</id>
        <link href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf"/>
        <updated>2022-11-15T19:04:54.000Z</updated>
        <content type="html"><![CDATA[<p>This affects all versions less than 0.7.0 of package github.com/russellhaering/gosaml2. There is a crash on null pointer dereference caused by sending malformed XML signatures.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-7731">https://nvd.nist.gov/vuln/detail/CVE-2020-7731</a></li>
<li><a href="https://github.com/russellhaering/gosaml2/issues/59">https://github.com/russellhaering/gosaml2/issues/59</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302</a></li>
<li><a href="https://github.com/advisories/GHSA-gq5r-cc4w-g8xf">https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-gq5r-cc4w-g8xf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-06-23T17:25:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/moby/moby] Container build can leak any path on the host into the container]]></title>
        <id>https://github.com/advisories/GHSA-vp35-85q5-9f25</id>
        <link href="https://github.com/advisories/GHSA-vp35-85q5-9f25"/>
        <updated>2022-11-11T00:03:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="description">Description</h3>
<p>Moby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a "Dockerfile"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.</p>
<p>Containers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.</p>
<p>Versions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.</p>
<p>This issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.</p>
<h3 id="impact">Impact</h3>
<p>This vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.</p>
<p>As this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.</p>
<h3 id="patches">Patches</h3>
<p>Moby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of <code>git+&lt;protocol&gt;://...</code> URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.</p>
<p>Specifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:</p>
<ul>
<li><code>docker build</code> with the legacy builder (e.g. <code>DOCKER_BUILDKIT</code> unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.</li>
<li><code>docker build</code> with the BuildKit builder (e.g. <code>DOCKER_BUILDKIT=1</code>) of a Git URL context.</li>
<li><code>docker buildx build</code> with <code>BUILDKIT_CONTEXT_KEEP_GIT_DIR=1</code> of a Git URL context.</li>
</ul>
<p>Patches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.</p>
<p>Patches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose <strong>cannot</strong> fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as <code>git clone --recursive</code>, <code>git submodule update</code>, etc.  may have already triggered the Git vulnerability).</p>
<h3 id="workarounds">Workarounds</h3>
<p>While this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.</p>
<p>When building with BuildKit (e.g. <code>docker buildx build</code> or <code>docker build</code> with <code>DOCKER_BUILDKIT=1</code>), this issue cannot be exploited unless <code>--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1</code> was also passed, as by default BuildKit will discard the <code>.git</code> directory of a Git URL context immediately after cloning and checking out the repository.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li><a href="https://github.com/moby/moby/issues/new">Open an issue</a></li>
<li>Email us at <a href="mailto:security@docker.com">security@docker.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25">https://github.com/moby/moby/security/advisories/GHSA-vp35-85q5-9f25</a></li>
<li><a href="https://github.blog/2022-10-17-git-security-vulnerabilities-announced/">https://github.blog/2022-10-17-git-security-vulnerabilities-announced/</a></li>
<li><a href="https://github.com/moby/moby/releases/tag/v20.10.20">https://github.com/moby/moby/releases/tag/v20.10.20</a></li>
<li><a href="https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u">https://lore.kernel.org/git/xmqq4jw1uku5.fsf@gitster.g/T/#u</a></li>
<li><a href="https://github.com/advisories/GHSA-vp35-85q5-9f25">https://github.com/advisories/GHSA-vp35-85q5-9f25</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vp35-85q5-9f25</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-11T00:03:31.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] HashiCorp Nomad vulnerable to non-sensitive metadata exposure]]></title>
        <id>https://github.com/advisories/GHSA-7wg4-8m5p-hrfg</id>
        <link href="https://github.com/advisories/GHSA-7wg4-8m5p-hrfg"/>
        <updated>2022-11-10T23:51:44.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 1.4.0 up to 1.4.1 workload identity token can list non-sensitive metadata for paths under nomad/ that belong to other jobs in the same namespace. Fixed in 1.4.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3866">https://nvd.nist.gov/vuln/detail/CVE-2022-3866</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-25-nomad-s-workload-identity-token-can-list-non-sensitive-metadata-for-nomad-paths/46167">https://discuss.hashicorp.com/t/hcsec-2022-25-nomad-s-workload-identity-token-can-list-non-sensitive-metadata-for-nomad-paths/46167</a></li>
<li><a href="https://github.com/advisories/GHSA-7wg4-8m5p-hrfg">https://github.com/advisories/GHSA-7wg4-8m5p-hrfg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7wg4-8m5p-hrfg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T12:01:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/nomad] HashiCorp Nomad vulnerable to Insufficient Session Expiration]]></title>
        <id>https://github.com/advisories/GHSA-9fmc-5fq4-5jwh</id>
        <link href="https://github.com/advisories/GHSA-9fmc-5fq4-5jwh"/>
        <updated>2022-11-10T23:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Nomad and Nomad Enterprise 1.4.0 up to 1.4.1 event stream subscribers using a token with TTL receive updates until token garbage is collected. Fixed in 1.4.2.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3867">https://nvd.nist.gov/vuln/detail/CVE-2022-3867</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2022-26-nomad-s-event-stream-subscriber-using-acl-token-with-ttl-receive-updates-until-garbage-collected/46168">https://discuss.hashicorp.com/t/hcsec-2022-26-nomad-s-event-stream-subscriber-using-acl-token-with-ttl-receive-updates-until-garbage-collected/46168</a></li>
<li><a href="https://github.com/advisories/GHSA-9fmc-5fq4-5jwh">https://github.com/advisories/GHSA-9fmc-5fq4-5jwh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9fmc-5fq4-5jwh</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-11-10T12:01:03.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/phachon/mm-wiki] mm-wiki is vulnerable to Cross-Site Scripting (XSS)]]></title>
        <id>https://github.com/advisories/GHSA-99g5-5643-xphp</id>
        <link href="https://github.com/advisories/GHSA-99g5-5643-xphp"/>
        <updated>2022-11-15T19:57:03.000Z</updated>
        <content type="html"><![CDATA[<p>mm-wki v0.2.1 is vulnerable to Cross Site Scripting (XSS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-40289">https://nvd.nist.gov/vuln/detail/CVE-2021-40289</a></li>
<li><a href="https://github.com/phachon/mm-wiki/issues/319">https://github.com/phachon/mm-wiki/issues/319</a></li>
<li><a href="https://github.com/advisories/GHSA-99g5-5643-xphp">https://github.com/advisories/GHSA-99g5-5643-xphp</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-99g5-5643-xphp</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-10T19:01:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/istio/istio] Istio may allow identity impersonation if user has localhost access]]></title>
        <id>https://github.com/advisories/GHSA-6c6p-h79f-g6p4</id>
        <link href="https://github.com/advisories/GHSA-6c6p-h79f-g6p4"/>
        <updated>2022-11-16T19:19:33.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>User can impersonate any workload identity within the service mesh if they have localhost access to the Istiod control plane.</p>
<h3 id="patches">Patches</h3>
<p>1.15.3</p>
<h3 id="workarounds">Workarounds</h3>
<p>No. If using 1.15.2 please upgrade to 1.15.3 or later.</p>
<h3 id="references">References</h3>
<p>None at this time.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory, please email us at <a href="mailto:istio-security-vulnerability-reports@googlegroups.com">istio-security-vulnerability-reports@googlegroups.com</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/istio/istio/security/advisories/GHSA-6c6p-h79f-g6p4">https://github.com/istio/istio/security/advisories/GHSA-6c6p-h79f-g6p4</a></li>
<li><a href="https://github.com/istio/istio/commit/346260e5115e9fbc65ba8a559bc686e6ca046a32">https://github.com/istio/istio/commit/346260e5115e9fbc65ba8a559bc686e6ca046a32</a></li>
<li><a href="https://github.com/istio/istio/commit/9a643e270421560afb2630e00f76d46a55499df9">https://github.com/istio/istio/commit/9a643e270421560afb2630e00f76d46a55499df9</a></li>
<li><a href="https://istio.io/latest/news/releases/1.15.x/announcing-1.15.3/">https://istio.io/latest/news/releases/1.15.x/announcing-1.15.3/</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39388">https://nvd.nist.gov/vuln/detail/CVE-2022-39388</a></li>
<li><a href="https://github.com/advisories/GHSA-6c6p-h79f-g6p4">https://github.com/advisories/GHSA-6c6p-h79f-g6p4</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6c6p-h79f-g6p4</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-11-09T22:07:01.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-vela/worker] Vela Insecure Defaults]]></title>
        <id>https://github.com/advisories/GHSA-5m7g-pj8w-7593</id>
        <link href="https://github.com/advisories/GHSA-5m7g-pj8w-7593"/>
        <updated>2022-11-18T06:13:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Some current default configurations for Vela allow exploitation and container breakouts.</p>
<h4 id="default-privileged-images">Default Privileged Images</h4>
<p>Running Vela plugins as privileged Docker containers allows a malicious user to easily break out of the container and gain access to the worker host operating system. On a fresh install of Vela without any additional configuration, the <code>target/vela-docker</code> plugin will run as a privileged container, even if the Vela administrators did not intend to allow for any privileged plugins, and even if the <code>vela.yml</code> configuration file does not use the <code>privileged = True</code> flag.</p>
<p>Privileged containers permit trivial breakouts, which can pose significant risk to the environment in which Vela is running.</p>
<h4 id="default-allowed-repositories">Default Allowed Repositories</h4>
<p>On a fresh install of Vela, anyone with a GitHub account (or other enabled source control management solution) is allowed to enable a repository within Vela and run builds. This means that, if a Vela instance is accessible to the public, a third party could add their own malicious repos to the Vela instance and run arbitrary code.</p>
<p>An example of a publicly accessible Vela instance would be one not protected behind a VPN. Whether Vela is publicly accessible depends on how Vela is set up, NOT how it is connected to GitHub.</p>
<h4 id="default-enabled-events-allows-pull-requests">Default Enabled Events allows Pull Requests</h4>
<p>By default, Vela currently enables pull request events when a repository is Vela-enabled. Unless this default was changed when enabling each repository, anyone who can issue a pull request against a repository can trigger a Vela job.</p>
<p>This not only permits a third party to run arbitrary code in a Vela environment, but also poses an additional risk when secrets within Vela are configured to be available in pull requests, permitting anyone with access to create pull requests to access these secrets.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to 0.16.0 or later. After upgrading, Vela administrators will need to explicitly change the default settings to configure Vela as desired.</p>
<p>Some of the fixes will interrupt existing workflows and will require Vela administrators to modify default settings (see release notes for more information). However, not applying the patch (or workarounds) will continue existing risk exposure.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="default-privileged-images-1">Default Privileged Images</h4>
<p>Instead of upgrading, the Vela administrators can adjust the worker's <code>VELA_RUNTIME_PRIVILEGED_IMAGES</code> setting to be explicitly empty:</p>
<p><code>VELA_RUNTIME_PRIVILEGED_IMAGES=""</code></p>
<p>By assigning <code>VELA_RUNTIME_PRIVILEGED_IMAGES</code> to an empty value it disallows any images from running as privileged containers in Vela.</p>
<h4 id="default-allowed-repositories-1">Default Allowed Repositories</h4>
<p>Instead of upgrading, the Vela administrators can leverage the <code>VELA_REPO_ALLOWLIST</code> setting on the server component to restrict access to a list of repositories that are allowed to be enabled.</p>
<p>By changing it from the default empty list (currently interpreted by Vela as "all repositories") to a list explicitly allowing specific repositories, Vela administrators can control what repositories are allowed to be enabled in Vela.</p>
<p>Vela's current default list of approved repositories that can be added to a Vela instance is an empty list. However this is currently interpreted as allowing all repositories.</p>
<p>In the updated version, a null value (the empty list) will be interpreted as permitting no repositories to be added to a Vela instance.</p>
<h4 id="default-enabled-events-allows-pull-requests-1">Default Enabled Events allows Pull Requests</h4>
<p>Audit enabled repositories and disable <code>pull_requests</code> if they are not needed.</p>
<p>Instead of upgrading, the pull request trigger can be disabled on a per-repository basis.</p>
<p>Additional protection can be provided by preventing unauthorized users from submitting pull requests in GitHub (or other source control management solution).</p>
<h3 id="residual-risk">Residual Risk</h3>
<h4 id="default-privileged-images-2">Default Privileged Images</h4>
<p>After applying the update, any repos that Vela administrators manually define as "trusted repos" will be able to run the manually-specified images that are allowed to run as privileged. Those repos will continue to be vulnerable to breakout, but applying the update will help protect against the risk of trivial breakout arising from an image running as a privileged container.</p>
<p>The recommendation is to utilize plugins that do not require privileged capabilities.</p>
<p>For example, utilize <code>target/vela-kaniko</code> instead of <code>target/vela-docker</code> as the Kaniko plugin does not require privileged access.</p>
<h4 id="default-allowed-repositories-2">Default Allowed Repositories</h4>
<p>Applying this update (or workaround) will protect against the risk of Vela interpreting the default empty list of approved repositories as "all repositories" rather than "no repositories" (the current default).</p>
<h4 id="default-enabled-events-allows-pull-requests-2">Default Enabled Events allows Pull Requests</h4>
<p>Since this change only impacts newly enabled repositories, the update will not address the risk to existing enabled repositories resulting from Vela enabling pull request events when a repository is Vela-enabled.</p>
<p>Additionally, this change only impacts defaults; users can still configure their repositories to allow pull requests as triggering events.</p>
<p>In order to monitor risk going forward, refer to the <code>Workaround</code> section with the heading <code>Default Enabled Events allows Pull Requests</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:vela@target.com">vela@target.com</a></li>
</ul>
<p>Affected products: <code>go-vela/worker</code>, <code>go-vela/server</code>, <code>go-vela/ui</code>, <code>go-vela/documentation</code></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593">https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593</a></li>
<li><a href="https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w">https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w</a></li>
<li><a href="https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4">https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4</a></li>
<li><a href="https://docs.docker.com/engine/security/#docker-daemon-attack-surface">https://docs.docker.com/engine/security/#docker-daemon-attack-surface</a></li>
<li><a href="https://github.com/go-vela/server/releases/tag/v0.16.0">https://github.com/go-vela/server/releases/tag/v0.16.0</a></li>
<li><a href="https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v">https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39395">https://nvd.nist.gov/vuln/detail/CVE-2022-39395</a></li>
<li><a href="https://github.com/go-vela/ui/releases/tag/v0.17.0">https://github.com/go-vela/ui/releases/tag/v0.17.0</a></li>
<li><a href="https://github.com/go-vela/worker/releases/tag/v0.16.0">https://github.com/go-vela/worker/releases/tag/v0.16.0</a></li>
<li><a href="https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist">https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist</a></li>
<li><a href="https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images">https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images</a></li>
<li><a href="https://github.com/advisories/GHSA-5m7g-pj8w-7593">https://github.com/advisories/GHSA-5m7g-pj8w-7593</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m7g-pj8w-7593</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-09T19:17:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-vela/server] Vela Insecure Defaults]]></title>
        <id>https://github.com/advisories/GHSA-5m7g-pj8w-7593</id>
        <link href="https://github.com/advisories/GHSA-5m7g-pj8w-7593"/>
        <updated>2022-11-18T06:13:44.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Some current default configurations for Vela allow exploitation and container breakouts.</p>
<h4 id="default-privileged-images">Default Privileged Images</h4>
<p>Running Vela plugins as privileged Docker containers allows a malicious user to easily break out of the container and gain access to the worker host operating system. On a fresh install of Vela without any additional configuration, the <code>target/vela-docker</code> plugin will run as a privileged container, even if the Vela administrators did not intend to allow for any privileged plugins, and even if the <code>vela.yml</code> configuration file does not use the <code>privileged = True</code> flag.</p>
<p>Privileged containers permit trivial breakouts, which can pose significant risk to the environment in which Vela is running.</p>
<h4 id="default-allowed-repositories">Default Allowed Repositories</h4>
<p>On a fresh install of Vela, anyone with a GitHub account (or other enabled source control management solution) is allowed to enable a repository within Vela and run builds. This means that, if a Vela instance is accessible to the public, a third party could add their own malicious repos to the Vela instance and run arbitrary code.</p>
<p>An example of a publicly accessible Vela instance would be one not protected behind a VPN. Whether Vela is publicly accessible depends on how Vela is set up, NOT how it is connected to GitHub.</p>
<h4 id="default-enabled-events-allows-pull-requests">Default Enabled Events allows Pull Requests</h4>
<p>By default, Vela currently enables pull request events when a repository is Vela-enabled. Unless this default was changed when enabling each repository, anyone who can issue a pull request against a repository can trigger a Vela job.</p>
<p>This not only permits a third party to run arbitrary code in a Vela environment, but also poses an additional risk when secrets within Vela are configured to be available in pull requests, permitting anyone with access to create pull requests to access these secrets.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to 0.16.0 or later. After upgrading, Vela administrators will need to explicitly change the default settings to configure Vela as desired.</p>
<p>Some of the fixes will interrupt existing workflows and will require Vela administrators to modify default settings (see release notes for more information). However, not applying the patch (or workarounds) will continue existing risk exposure.</p>
<h3 id="workarounds">Workarounds</h3>
<h4 id="default-privileged-images-1">Default Privileged Images</h4>
<p>Instead of upgrading, the Vela administrators can adjust the worker's <code>VELA_RUNTIME_PRIVILEGED_IMAGES</code> setting to be explicitly empty:</p>
<p><code>VELA_RUNTIME_PRIVILEGED_IMAGES=""</code></p>
<p>By assigning <code>VELA_RUNTIME_PRIVILEGED_IMAGES</code> to an empty value it disallows any images from running as privileged containers in Vela.</p>
<h4 id="default-allowed-repositories-1">Default Allowed Repositories</h4>
<p>Instead of upgrading, the Vela administrators can leverage the <code>VELA_REPO_ALLOWLIST</code> setting on the server component to restrict access to a list of repositories that are allowed to be enabled.</p>
<p>By changing it from the default empty list (currently interpreted by Vela as "all repositories") to a list explicitly allowing specific repositories, Vela administrators can control what repositories are allowed to be enabled in Vela.</p>
<p>Vela's current default list of approved repositories that can be added to a Vela instance is an empty list. However this is currently interpreted as allowing all repositories.</p>
<p>In the updated version, a null value (the empty list) will be interpreted as permitting no repositories to be added to a Vela instance.</p>
<h4 id="default-enabled-events-allows-pull-requests-1">Default Enabled Events allows Pull Requests</h4>
<p>Audit enabled repositories and disable <code>pull_requests</code> if they are not needed.</p>
<p>Instead of upgrading, the pull request trigger can be disabled on a per-repository basis.</p>
<p>Additional protection can be provided by preventing unauthorized users from submitting pull requests in GitHub (or other source control management solution).</p>
<h3 id="residual-risk">Residual Risk</h3>
<h4 id="default-privileged-images-2">Default Privileged Images</h4>
<p>After applying the update, any repos that Vela administrators manually define as "trusted repos" will be able to run the manually-specified images that are allowed to run as privileged. Those repos will continue to be vulnerable to breakout, but applying the update will help protect against the risk of trivial breakout arising from an image running as a privileged container.</p>
<p>The recommendation is to utilize plugins that do not require privileged capabilities.</p>
<p>For example, utilize <code>target/vela-kaniko</code> instead of <code>target/vela-docker</code> as the Kaniko plugin does not require privileged access.</p>
<h4 id="default-allowed-repositories-2">Default Allowed Repositories</h4>
<p>Applying this update (or workaround) will protect against the risk of Vela interpreting the default empty list of approved repositories as "all repositories" rather than "no repositories" (the current default).</p>
<h4 id="default-enabled-events-allows-pull-requests-2">Default Enabled Events allows Pull Requests</h4>
<p>Since this change only impacts newly enabled repositories, the update will not address the risk to existing enabled repositories resulting from Vela enabling pull request events when a repository is Vela-enabled.</p>
<p>Additionally, this change only impacts defaults; users can still configure their repositories to allow pull requests as triggering events.</p>
<p>In order to monitor risk going forward, refer to the <code>Workaround</code> section with the heading <code>Default Enabled Events allows Pull Requests</code>.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="mailto:vela@target.com">vela@target.com</a></li>
</ul>
<p>Affected products: <code>go-vela/worker</code>, <code>go-vela/server</code>, <code>go-vela/ui</code>, <code>go-vela/documentation</code></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593">https://github.com/go-vela/server/security/advisories/GHSA-5m7g-pj8w-7593</a></li>
<li><a href="https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w">https://github.com/go-vela/worker/security/advisories/GHSA-2w78-ffv6-p46w</a></li>
<li><a href="https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4">https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4</a></li>
<li><a href="https://docs.docker.com/engine/security/#docker-daemon-attack-surface">https://docs.docker.com/engine/security/#docker-daemon-attack-surface</a></li>
<li><a href="https://github.com/go-vela/server/releases/tag/v0.16.0">https://github.com/go-vela/server/releases/tag/v0.16.0</a></li>
<li><a href="https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v">https://github.com/go-vela/ui/security/advisories/GHSA-xf39-98m2-889v</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39395">https://nvd.nist.gov/vuln/detail/CVE-2022-39395</a></li>
<li><a href="https://github.com/go-vela/ui/releases/tag/v0.17.0">https://github.com/go-vela/ui/releases/tag/v0.17.0</a></li>
<li><a href="https://github.com/go-vela/worker/releases/tag/v0.16.0">https://github.com/go-vela/worker/releases/tag/v0.16.0</a></li>
<li><a href="https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist">https://go-vela.github.io/docs/installation/server/reference/#vela_repo_allowlist</a></li>
<li><a href="https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images">https://go-vela.github.io/docs/installation/worker/reference/#vela_runtime_privileged_images</a></li>
<li><a href="https://github.com/advisories/GHSA-5m7g-pj8w-7593">https://github.com/advisories/GHSA-5m7g-pj8w-7593</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5m7g-pj8w-7593</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-09T19:17:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/openfga/openfga] OpenFGA Authorization Bypass]]></title>
        <id>https://github.com/advisories/GHSA-3gfj-fxx4-f22w</id>
        <link href="https://github.com/advisories/GHSA-3gfj-fxx4-f22w"/>
        <updated>2022-11-10T14:32:11.000Z</updated>
        <content type="html"><![CDATA[<h3 id="overview">Overview</h3>
<p>During our internal security assessment, it was discovered that OpenFGA versions v0.2.4 and prior are vulnerable to authorization bypass under certain conditions.</p>
<h3 id="am-i-affected">Am I Affected?</h3>
<p>You are affected by this vulnerability if you are using <code>openfga/openfga</code> version v0.2.4 or prior, and have tuples where the <code>user</code> field is set to a <code>userset</code> e.g. <code>folder:test#owner</code>, and the tuple's relation is used on the right-hand side of a <code>from</code> statement.</p>
<h3 id="how-to-fix-that">How to fix that?</h3>
<p>Upgrade to version 0.2.5.</p>
<h3 id="backward-compatibility">Backward Compatibility</h3>
<p>This update is not backward compatible.
Any tuples where the <code>user</code> field is set to a <code>userset</code>, and the tuple's relation is used on the right-hand side of a <code>from</code> statement have to be rewritten.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/openfga/openfga/security/advisories/GHSA-3gfj-fxx4-f22w">https://github.com/openfga/openfga/security/advisories/GHSA-3gfj-fxx4-f22w</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-39352">https://nvd.nist.gov/vuln/detail/CVE-2022-39352</a></li>
<li><a href="https://github.com/openfga/openfga/releases/tag/v0.2.5">https://github.com/openfga/openfga/releases/tag/v0.2.5</a></li>
<li><a href="https://github.com/advisories/GHSA-3gfj-fxx4-f22w">https://github.com/advisories/GHSA-3gfj-fxx4-f22w</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3gfj-fxx4-f22w</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-11-08T22:31:25.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/lightningnetwork/lnd] btcd mishandles witness size checking]]></title>
        <id>https://github.com/advisories/GHSA-2chg-86hq-7w38</id>
        <link href="https://github.com/advisories/GHSA-2chg-86hq-7w38"/>
        <updated>2022-11-15T01:41:08.000Z</updated>
        <content type="html"><![CDATA[<p>btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44797">https://nvd.nist.gov/vuln/detail/CVE-2022-44797</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/issues/7002">https://github.com/lightningnetwork/lnd/issues/7002</a></li>
<li><a href="https://github.com/btcsuite/btcd/pull/1896">https://github.com/btcsuite/btcd/pull/1896</a></li>
<li><a href="https://github.com/btcsuite/btcd/releases/tag/v0.23.2">https://github.com/btcsuite/btcd/releases/tag/v0.23.2</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta</a></li>
<li><a href="https://github.com/advisories/GHSA-2chg-86hq-7w38">https://github.com/advisories/GHSA-2chg-86hq-7w38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2chg-86hq-7w38</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-07T12:00:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/btcsuite/btcd] btcd mishandles witness size checking]]></title>
        <id>https://github.com/advisories/GHSA-2chg-86hq-7w38</id>
        <link href="https://github.com/advisories/GHSA-2chg-86hq-7w38"/>
        <updated>2022-11-15T01:41:08.000Z</updated>
        <content type="html"><![CDATA[<p>btcd before 0.23.2, as used in Lightning Labs lnd before 0.15.2-beta and other Bitcoin-related products, mishandles witness size checking.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-44797">https://nvd.nist.gov/vuln/detail/CVE-2022-44797</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/issues/7002">https://github.com/lightningnetwork/lnd/issues/7002</a></li>
<li><a href="https://github.com/btcsuite/btcd/pull/1896">https://github.com/btcsuite/btcd/pull/1896</a></li>
<li><a href="https://github.com/btcsuite/btcd/releases/tag/v0.23.2">https://github.com/btcsuite/btcd/releases/tag/v0.23.2</a></li>
<li><a href="https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta">https://github.com/lightningnetwork/lnd/releases/tag/v0.15.2-beta</a></li>
<li><a href="https://github.com/advisories/GHSA-2chg-86hq-7w38">https://github.com/advisories/GHSA-2chg-86hq-7w38</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-2chg-86hq-7w38</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-07T12:00:34.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pingcap/tidb] TiDB vulnerable to Use of Externally-Controlled Format String]]></title>
        <id>https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</id>
        <link href="https://github.com/advisories/GHSA-7fxj-fr3v-r9gj"/>
        <updated>2022-11-06T02:47:23.000Z</updated>
        <content type="html"><![CDATA[<p>TiDB is vulnerable to Use of Externally-Controlled Format String. A patch is available on the <code>master</code> branch and expected to be part of versions 6.4.0 and 6.1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3023">https://nvd.nist.gov/vuln/detail/CVE-2022-3023</a></li>
<li><a href="https://github.com/pingcap/tidb/commit/d0376379d615cc8f263a0b17c031ce403c8dcbfb">https://github.com/pingcap/tidb/commit/d0376379d615cc8f263a0b17c031ce403c8dcbfb</a></li>
<li><a href="https://huntr.dev/bounties/120f1346-e958-49d0-b66c-0f889a469540">https://huntr.dev/bounties/120f1346-e958-49d0-b66c-0f889a469540</a></li>
<li><a href="https://github.com/advisories/GHSA-7fxj-fr3v-r9gj">https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-04T19:01:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/pingcap/tidb] TiDB vulnerable to Use of Externally-Controlled Format String]]></title>
        <id>https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</id>
        <link href="https://github.com/advisories/GHSA-7fxj-fr3v-r9gj"/>
        <updated>2022-11-06T02:47:23.000Z</updated>
        <content type="html"><![CDATA[<p>TiDB is vulnerable to Use of Externally-Controlled Format String. A patch is available on the <code>master</code> branch and expected to be part of versions 6.4.0 and 6.1.3.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3023">https://nvd.nist.gov/vuln/detail/CVE-2022-3023</a></li>
<li><a href="https://github.com/pingcap/tidb/commit/d0376379d615cc8f263a0b17c031ce403c8dcbfb">https://github.com/pingcap/tidb/commit/d0376379d615cc8f263a0b17c031ce403c8dcbfb</a></li>
<li><a href="https://huntr.dev/bounties/120f1346-e958-49d0-b66c-0f889a469540">https://huntr.dev/bounties/120f1346-e958-49d0-b66c-0f889a469540</a></li>
<li><a href="https://github.com/advisories/GHSA-7fxj-fr3v-r9gj">https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7fxj-fr3v-r9gj</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-11-04T19:01:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki/cmd/octorpki] OctoRPKI crashes when max iterations is reached]]></title>
        <id>https://github.com/advisories/GHSA-pmw9-567p-68pc</id>
        <link href="https://github.com/advisories/GHSA-pmw9-567p-68pc"/>
        <updated>2022-10-31T19:23:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Attackers can create long chains of CAs that would lead to OctoRPKI exceeding its max iterations parameter that would cause the program to crash and not finish the validation and thus a denial of service.</p>
<h3 id="patches">Patches</h3>
<p>This issue is fixed in v1.4.4</p>
<h3 id="workarounds">Workarounds</h3>
<p>None.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-pmw9-567p-68pc">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-pmw9-567p-68pc</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-3616">https://nvd.nist.gov/vuln/detail/CVE-2022-3616</a></li>
<li><a href="https://github.com/advisories/GHSA-pmw9-567p-68pc">https://github.com/advisories/GHSA-pmw9-567p-68pc</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-pmw9-567p-68pc</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-10-31T18:45:43.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/go-gitea/gitea] Gitea vulnerable to Argument Injection]]></title>
        <id>https://github.com/advisories/GHSA-w8xw-7crf-h23x</id>
        <link href="https://github.com/advisories/GHSA-w8xw-7crf-h23x"/>
        <updated>2022-10-31T15:57:48.000Z</updated>
        <content type="html"><![CDATA[<p>Gitea before 1.17.3 does not sanitize and escape refs in the git backend. Arguments to git commands are mishandled.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-42968">https://nvd.nist.gov/vuln/detail/CVE-2022-42968</a></li>
<li><a href="https://github.com/go-gitea/gitea/pull/21463">https://github.com/go-gitea/gitea/pull/21463</a></li>
<li><a href="https://github.com/go-gitea/gitea/releases/tag/v1.17.3">https://github.com/go-gitea/gitea/releases/tag/v1.17.3</a></li>
<li><a href="https://security.gentoo.org/glsa/202210-14">https://security.gentoo.org/glsa/202210-14</a></li>
<li><a href="https://github.com/advisories/GHSA-w8xw-7crf-h23x">https://github.com/advisories/GHSA-w8xw-7crf-h23x</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w8xw-7crf-h23x</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2022-10-16T12:00:23.000Z</published>
    </entry>
</feed>