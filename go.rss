<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-12-22T18:01:16.235Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/dvsekhvalnov/jose2go] Denial of service when decrypting attack controlled input in github.com/dvsekhvalnov/jose2go]]></title>
        <id>https://github.com/advisories/GHSA-mhpq-9638-x6pw</id>
        <link href="https://github.com/advisories/GHSA-mhpq-9638-x6pw"/>
        <updated>2023-12-20T20:31:57.000Z</updated>
        <content type="html"><![CDATA[<p>An attacker controlled input of a PBES2 encrypted JWE blob can have a very large p2c value that, when decrypted, produces a denial-of-service.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/dvsekhvalnov/jose2go/issues/31">https://github.com/dvsekhvalnov/jose2go/issues/31</a></li>
<li><a href="https://github.com/dvsekhvalnov/jose2go/commit/a4584e9dd7128608fedbc67892eba9697f0d5317">https://github.com/dvsekhvalnov/jose2go/commit/a4584e9dd7128608fedbc67892eba9697f0d5317</a></li>
<li><a href="https://www.blackhat.com/us-23/briefings/schedule/#three-new-attacks-against-json-web-tokens-31695">https://www.blackhat.com/us-23/briefings/schedule/#three-new-attacks-against-json-web-tokens-31695</a></li>
<li><a href="https://github.com/advisories/GHSA-mhpq-9638-x6pw">https://github.com/advisories/GHSA-mhpq-9638-x6pw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-mhpq-9638-x6pw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-20T20:31:57.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/navidrome/navidrome] Authentication bypass vulnerability in navidrome's subsonic endpoint]]></title>
        <id>https://github.com/advisories/GHSA-wq59-4q6r-635r</id>
        <link href="https://github.com/advisories/GHSA-wq59-4q6r-635r"/>
        <updated>2023-12-21T15:58:10.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>A security vulnerability has been identified in navidrome's subsonic endpoint, allowing for authentication bypass. This exploit enables unauthorized access to any known account by utilizing a JSON Web Token (JWT) signed with the key "not so secret".</p>
<p>The vulnerability can only be exploited on instances that have never been restarted.</p>
<h3 id="details">Details</h3>
<p>Navidrome supports an extension to the subsonic authentication scheme, where a JWT can be provided using a <code>jwt</code> query parameter instead of the traditional password or token and salt (corresponding to resp. the <code>p</code> or <code>t</code> and <code>s</code> query parameters).</p>
<p>During the first initialization, navidrome generates a random key that is then used by the authentication module to validate JWTs before extracting the username from the <code>sub</code> claim. If for some reason the key cannot be retrieved by the initialization code, a hardcoded value is used instead: "not so secret".</p>
<p>A bug in the order of operations during navidrome startup results in the authentication module initializing before the module responsible for generating and persisting the random key. As a consequence, the authentication module falls back to using the hardcoded value, which remains in use until the instance gets restarted. Additionally, an error that was meant to be logged when the fallback value is used does not get logged due to another bug, preventing the operator from becoming aware of the issue.</p>
<p>The flaw allows the creation of a JWT with the <code>sub</code> claim set to any existing user on the server, signed with the key "not so secret", which can then be used to authenticate against the subsonic endpoint with the chosen user's privileges.</p>
<p>After navidrome is restarted, the random key generated during the previous startup is loaded and the flaw becomes inexploitable.</p>
<h3 id="poc">PoC</h3>
<p>Generate a JWT token with the subject "admin", and key "not so secret" (e.g. online on: <a href="http://jwtbuilder.jamiekurtz.com">http://jwtbuilder.jamiekurtz.com</a>; the other parameters can be left in, it doesn't seem that navidrome validates anything). In a shell, assign the token to the variable <code>JWT</code> (for the curl commands below).</p>
<pre><code>$ podman run -d --name navidrome -p 127.0.0.1:4533:4533 -e ND_DEVAUTOCREATEADMINPASSWORD=password docker.io/deluan/navidrome:0.50.1
$ curl "http://localhost:4533/rest/ping.view?c=dummy&amp;v=1&amp;u=admin&amp;jwt=$JWT"
&lt;subsonic-response xmlns="http://subsonic.org/restapi" status="ok" version="1.16.1" type="navidrome" serverVersion="0.50.1 (f69c27d1)" openSubsonic="true"&gt;&lt;/subsonic-response&gt;
</code></pre>
<p>The <code>ND_DEVAUTOCREATEADMINPASSWORD</code> parameter does not influence the bypass, it also works if the admin or extra users are created manually after starting navidrome.</p>
<p>Restarting navidrome prevents the bypass:</p>
<pre><code>$ podman restart navidrome
$ curl "http://localhost:4533/rest/ping.view?c=dummy&amp;v=1&amp;u=admin&amp;jwt=$JWT"
&lt;subsonic-response xmlns="http://subsonic.org/restapi" status="failed" version="1.16.1" type="navidrome" serverVersion="0.50.1 (f69c27d1)" openSubsonic="true"&gt;&lt;error code="40" message="Wrong username or password"&gt;&lt;/error&gt;&lt;/subsonic-response&gt;
</code></pre>
<h3 id="impact">Impact</h3>
<p>This authentication bypass vulnerability potentially affects all instances that don't protect the subsonic endpoint <code>/rest/</code>, which is expected to be most instances in a standard deployment, and most instances in the reverse proxy setup too (as the documentation mentions to leave that endpoint unprotected).</p>
<p>The impact is limited by the fact that the flaw becomes inexploitable after a first restart, and the attacker needs to know the username of existing users on the instance.</p>
<p>For each known user, the attacker could mess with (create/delete/change) playlists, bookmarks, media annotations, shares (which are currently global) and radios. He is also able to get the user's email address (which is PII) with the <code>getUser</code> operation. And lastly he can use the media retrieval operations which could potentially affect the availability of the system.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/navidrome/navidrome/security/advisories/GHSA-wq59-4q6r-635r">https://github.com/navidrome/navidrome/security/advisories/GHSA-wq59-4q6r-635r</a></li>
<li><a href="https://github.com/navidrome/navidrome/commit/1132abb0135d1ecaebc41ed97a1e908a4ae02f7c">https://github.com/navidrome/navidrome/commit/1132abb0135d1ecaebc41ed97a1e908a4ae02f7c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-51442">https://nvd.nist.gov/vuln/detail/CVE-2023-51442</a></li>
<li><a href="https://github.com/advisories/GHSA-wq59-4q6r-635r">https://github.com/advisories/GHSA-wq59-4q6r-635r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-wq59-4q6r-635r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-19T23:37:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd allows RAPL to be accessible to a container]]></title>
        <id>https://github.com/advisories/GHSA-7ww5-4wqc-m92c</id>
        <link href="https://github.com/advisories/GHSA-7ww5-4wqc-m92c"/>
        <updated>2023-12-20T02:16:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="sysdevicesvirtualpowercap-accessible-by-default-to-containers">/sys/devices/virtual/powercap accessible by default to containers</h1>
<p>Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via <code>sysfs</code>. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.</p>
<p>By 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the <a href="https://platypusattack.com/">PLATYPUS attack</a>, Intel assigned <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694">CVE-2020-8694</a> and <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695">CVE-2020-8695</a>, and AMD assigned <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912">CVE-2020-12912</a>.</p>
<p>Several mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71">prevents access by non-root users</a> since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:</p>
<ul>
<li>Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system</li>
<li><code>sysfs</code> is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU</li>
</ul>
<p>While this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking <code>/sys/devices/virtual/powercap</code> in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.</p>
<p>While <code>sysfs</code> is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as <code>CAP_SYS_RAWIO</code> which is not available to containers by default, or <code>perf</code> paranoia level less than 1, which is a non-default kernel tunable.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912</a></li>
<li><a href="https://platypusattack.com/">https://platypusattack.com/</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71</a></li>
<li><a href="https://web.eece.maine.edu/~vweaver/projects/rapl/">https://web.eece.maine.edu/~vweaver/projects/rapl/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c">https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c</a></li>
<li><a href="https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c">https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c</a></li>
<li><a href="https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5">https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5</a></li>
<li><a href="https://github.com/advisories/GHSA-7ww5-4wqc-m92c">https://github.com/advisories/GHSA-7ww5-4wqc-m92c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7ww5-4wqc-m92c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-19T21:17:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/containerd] containerd allows RAPL to be accessible to a container]]></title>
        <id>https://github.com/advisories/GHSA-7ww5-4wqc-m92c</id>
        <link href="https://github.com/advisories/GHSA-7ww5-4wqc-m92c"/>
        <updated>2023-12-20T02:16:01.000Z</updated>
        <content type="html"><![CDATA[<h1 id="sysdevicesvirtualpowercap-accessible-by-default-to-containers">/sys/devices/virtual/powercap accessible by default to containers</h1>
<p>Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via <code>sysfs</code>. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.</p>
<p>By 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the <a href="https://platypusattack.com/">PLATYPUS attack</a>, Intel assigned <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694">CVE-2020-8694</a> and <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695">CVE-2020-8695</a>, and AMD assigned <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912">CVE-2020-12912</a>.</p>
<p>Several mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71">prevents access by non-root users</a> since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:</p>
<ul>
<li>Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system</li>
<li><code>sysfs</code> is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU</li>
</ul>
<p>While this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking <code>/sys/devices/virtual/powercap</code> in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.</p>
<p>While <code>sysfs</code> is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as <code>CAP_SYS_RAWIO</code> which is not available to containers by default, or <code>perf</code> paranoia level less than 1, which is a non-default kernel tunable.</p>
<h2 id="references">References</h2>
<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695</a></li>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912</a></li>
<li><a href="https://platypusattack.com/">https://platypusattack.com/</a></li>
<li><a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71</a></li>
<li><a href="https://web.eece.maine.edu/~vweaver/projects/rapl/">https://web.eece.maine.edu/~vweaver/projects/rapl/</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c">https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c</a></li>
<li><a href="https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c">https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c</a></li>
<li><a href="https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5">https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5</a></li>
<li><a href="https://github.com/advisories/GHSA-7ww5-4wqc-m92c">https://github.com/advisories/GHSA-7ww5-4wqc-m92c</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7ww5-4wqc-m92c</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-19T21:17:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats] Elastic Beats inserts sensitive information into log file]]></title>
        <id>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</id>
        <link href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3"/>
        <updated>2023-12-19T21:11:32.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49922">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>
<li><a href="https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>
<li><a href="https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>
<li><a href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats/v7] Elastic Beats inserts sensitive information into log file]]></title>
        <id>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</id>
        <link href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3"/>
        <updated>2023-12-19T21:11:32.000Z</updated>
        <content type="html"><![CDATA[<p>An issue was discovered by Elastic whereby Beats and Elastic Agent would log a raw event in its own logs at the WARN or ERROR level if ingesting that event to Elasticsearch failed with any 4xx HTTP status code except 409 or 429. Depending on the nature of the event that Beats or Elastic Agent attempted to ingest, this could lead to the insertion of sensitive or private information in the Beats or Elastic Agent logs. Elastic has released 8.11.3 and 7.17.16 that prevents this issue by limiting these types of logs to DEBUG level logging, which is disabled by default.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-49922">https://nvd.nist.gov/vuln/detail/CVE-2023-49922</a></li>
<li><a href="https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180">https://discuss.elastic.co/t/beats-and-elastic-agent-8-11-3-7-17-16-security-update-esa-2023-30/349180</a></li>
<li><a href="https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996">https://github.com/elastic/beats/commit/9bd7de84ab9c31bb4e1c0a348a7b7c26817a0996</a></li>
<li><a href="https://github.com/advisories/GHSA-hj4r-2c9c-29h3">https://github.com/advisories/GHSA-hj4r-2c9c-29h3</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-hj4r-2c9c-29h3</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T21:31:12.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[golang.org/x/crypto] Prefix Truncation Attack against ChaCha20-Poly1305 and Encrypt-then-MAC aka Terrapin]]></title>
        <id>https://github.com/advisories/GHSA-45x7-px36-x8w8</id>
        <link href="https://github.com/advisories/GHSA-45x7-px36-x8w8"/>
        <updated>2023-12-21T15:54:00.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Terrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.</p>
<h3 id="mitigations">Mitigations</h3>
<p>To mitigate this protocol vulnerability, OpenSSH suggested a so-called "strict kex" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.</p>
<p><strong>Warning: To take effect, both the client and server must support this countermeasure.</strong> </p>
<p>As a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.</p>
<h3 id="details">Details</h3>
<p>The SSH specifications of ChaCha20-Poly1305 (<a href="mailto:chacha20-poly1305@openssh.com">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href="mailto:-etm@openssh.com">-etm@openssh.com</a> MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.</p>
<p>The attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.</p>
<p>In the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.</p>
<p>For more details see <a href="https://terrapin-attack.com">https://terrapin-attack.com</a>. </p>
<h3 id="impact">Impact</h3>
<p>This attack targets the specification of ChaCha20-Poly1305 (<a href="mailto:chacha20-poly1305@openssh.com">chacha20-poly1305@openssh.com</a>) and Encrypt-then-MAC (*<a href="mailto:-etm@openssh.com">-etm@openssh.com</a>), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8">https://github.com/warp-tech/russh/security/advisories/GHSA-45x7-px36-x8w8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-48795">https://nvd.nist.gov/vuln/detail/CVE-2023-48795</a></li>
<li><a href="https://github.com/paramiko/paramiko/issues/2337">https://github.com/paramiko/paramiko/issues/2337</a></li>
<li><a href="https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0">https://github.com/TeraTermProject/teraterm/commit/7279fbd6ef4d0c8bdd6a90af4ada2899d786eec0</a></li>
<li><a href="https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d">https://github.com/golang/crypto/commit/9d2ee975ef9fe627bf0a6f01c1f69e8ef1d4f05d</a></li>
<li><a href="https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951">https://github.com/warp-tech/russh/commit/1aa340a7df1d5be1c0f4a9e247aade76dfdd2951</a></li>
<li><a href="https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42">https://github.com/erlang/otp/blob/d1b43dc0f1361d2ad67601169e90a7fc50bb0369/lib/ssh/doc/src/notes.xml#L39-L42</a></li>
<li><a href="https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25">https://github.com/mkj/dropbear/blob/17657c36cce6df7716d5ff151ec09a665382d5dd/CHANGES#L25</a></li>
<li><a href="https://github.com/openssh/openssh-portable/commits/master">https://github.com/openssh/openssh-portable/commits/master</a></li>
<li><a href="https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst">https://github.com/ronf/asyncssh/blob/develop/docs/changes.rst</a></li>
<li><a href="https://github.com/ronf/asyncssh/tags">https://github.com/ronf/asyncssh/tags</a></li>
<li><a href="https://github.com/warp-tech/russh/releases/tag/v0.40.2">https://github.com/warp-tech/russh/releases/tag/v0.40.2</a></li>
<li><a href="https://gitlab.com/libssh/libssh-mirror/-/tags">https://gitlab.com/libssh/libssh-mirror/-/tags</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ">https://groups.google.com/g/golang-announce/c/-n5WqVC18LQ</a></li>
<li><a href="https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg">https://groups.google.com/g/golang-announce/c/qA3XtxvMUyg</a></li>
<li><a href="https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/">https://jadaptive.com/important-java-ssh-security-update-new-ssh-vulnerability-discovered-cve-2023-48795/</a></li>
<li><a href="https://matt.ucc.asn.au/dropbear/CHANGES">https://matt.ucc.asn.au/dropbear/CHANGES</a></li>
<li><a href="https://news.ycombinator.com/item?id=38684904">https://news.ycombinator.com/item?id=38684904</a></li>
<li><a href="https://news.ycombinator.com/item?id=38685286">https://news.ycombinator.com/item?id=38685286</a></li>
<li><a href="https://thorntech.com/cve-2023-48795-and-sftp-gateway/">https://thorntech.com/cve-2023-48795-and-sftp-gateway/</a></li>
<li><a href="https://twitter.com/TrueSkrillor/status/1736774389725565005">https://twitter.com/TrueSkrillor/status/1736774389725565005</a></li>
<li><a href="https://www.bitvise.com/ssh-server-version-history">https://www.bitvise.com/ssh-server-version-history</a></li>
<li><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/changes.html</a></li>
<li><a href="https://www.openssh.com/openbsd.html">https://www.openssh.com/openbsd.html</a></li>
<li><a href="https://www.openssh.com/txt/release-9.6">https://www.openssh.com/txt/release-9.6</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2023/12/18/2">https://www.openwall.com/lists/oss-security/2023/12/18/2</a></li>
<li><a href="https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/">https://www.reddit.com/r/sysadmin/comments/18idv52/cve202348795_why_is_this_cve_still_undisclosed/</a></li>
<li><a href="https://www.terrapin-attack.com">https://www.terrapin-attack.com</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/18/3">http://www.openwall.com/lists/oss-security/2023/12/18/3</a></li>
<li><a href="https://github.com/mwiede/jsch/issues/457">https://github.com/mwiede/jsch/issues/457</a></li>
<li><a href="https://github.com/mwiede/jsch/pull/461">https://github.com/mwiede/jsch/pull/461</a></li>
<li><a href="https://access.redhat.com/security/cve/cve-2023-48795">https://access.redhat.com/security/cve/cve-2023-48795</a></li>
<li><a href="https://bugs.gentoo.org/920280">https://bugs.gentoo.org/920280</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=2254210">https://bugzilla.redhat.com/show_bug.cgi?id=2254210</a></li>
<li><a href="https://bugzilla.suse.com/show_bug.cgi?id=1217950">https://bugzilla.suse.com/show_bug.cgi?id=1217950</a></li>
<li><a href="https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10&amp;id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6">https://git.libssh.org/projects/libssh.git/commit/?h=stable-0.10&amp;id=10e09e273f69e149389b3e0e5d44b8c221c2e7f6</a></li>
<li><a href="https://github.com/advisories/GHSA-45x7-px36-x8w8">https://github.com/advisories/GHSA-45x7-px36-x8w8</a></li>
<li><a href="https://github.com/drakkan/sftpgo/releases/tag/v2.5.6">https://github.com/drakkan/sftpgo/releases/tag/v2.5.6</a></li>
<li><a href="https://github.com/erlang/otp/releases/tag/OTP-26.2.1">https://github.com/erlang/otp/releases/tag/OTP-26.2.1</a></li>
<li><a href="https://go.dev/cl/550715">https://go.dev/cl/550715</a></li>
<li><a href="https://go.dev/issue/64784">https://go.dev/issue/64784</a></li>
<li><a href="https://security-tracker.debian.org/tracker/CVE-2023-48795">https://security-tracker.debian.org/tracker/CVE-2023-48795</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/libssh2">https://security-tracker.debian.org/tracker/source-package/libssh2</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg">https://security-tracker.debian.org/tracker/source-package/proftpd-dfsg</a></li>
<li><a href="https://ubuntu.com/security/CVE-2023-48795">https://ubuntu.com/security/CVE-2023-48795</a></li>
<li><a href="https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/">https://www.suse.com/c/suse-addresses-the-ssh-v2-protocol-terrapin-attack-aka-cve-2023-48795/</a></li>
<li><a href="https://github.com/libssh2/libssh2/pull/1291">https://github.com/libssh2/libssh2/pull/1291</a></li>
<li><a href="https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5">https://github.com/jtesta/ssh-audit/commit/8e972c5e94b460379fe0c7d20209c16df81538a5</a></li>
<li><a href="https://forum.netgate.com/topic/184941/terrapin-ssh-attack">https://forum.netgate.com/topic/184941/terrapin-ssh-attack</a></li>
<li><a href="https://github.com/rapier1/hpn-ssh/releases">https://github.com/rapier1/hpn-ssh/releases</a></li>
<li><a href="https://github.com/proftpd/proftpd/issues/456">https://github.com/proftpd/proftpd/issues/456</a></li>
<li><a href="https://github.com/NixOS/nixpkgs/pull/275249">https://github.com/NixOS/nixpkgs/pull/275249</a></li>
<li><a href="https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab">https://github.com/connectbot/sshlib/commit/5c8b534f6e97db7ac0e0e579331213aa25c173ab</a></li>
<li><a href="https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3">https://github.com/mscdex/ssh2/commit/97b223f8891b96d6fc054df5ab1d5a1a545da2a3</a></li>
<li><a href="https://crates.io/crates/thrussh/versions">https://crates.io/crates/thrussh/versions</a></li>
<li><a href="https://github.com/TeraTermProject/teraterm/releases/tag/v5.1">https://github.com/TeraTermProject/teraterm/releases/tag/v5.1</a></li>
<li><a href="https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22">https://github.com/connectbot/sshlib/compare/2.2.21...2.2.22</a></li>
<li><a href="https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15">https://github.com/mwiede/jsch/compare/jsch-0.2.14...jsch-0.2.15</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/master/RELEASE_NOTES</a></li>
<li><a href="https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC">https://nest.pijul.com/pijul/thrussh/changes/D6H7OWTTMHHX6BTB3B6MNBOBX2L66CBL4LGSEUSAI2MCRCJDQFRQC</a></li>
<li><a href="https://oryx-embedded.com/download/#changelog">https://oryx-embedded.com/download/#changelog</a></li>
<li><a href="https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update">https://www.crushftp.com/crush10wiki/Wiki.jsp?page=Update</a></li>
<li><a href="https://www.netsarang.com/en/xshell-update-history/">https://www.netsarang.com/en/xshell-update-history/</a></li>
<li><a href="https://www.paramiko.org/changelog.html">https://www.paramiko.org/changelog.html</a></li>
<li><a href="https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/">https://arstechnica.com/security/2023/12/hackers-can-break-ssh-channel-integrity-using-novel-data-corruption-attack/</a></li>
<li><a href="https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc">https://www.freebsd.org/security/advisories/FreeBSD-SA-23:19.openssh.asc</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/19/5">http://www.openwall.com/lists/oss-security/2023/12/19/5</a></li>
<li><a href="http://www.openwall.com/lists/oss-security/2023/12/20/3">http://www.openwall.com/lists/oss-security/2023/12/20/3</a></li>
<li><a href="https://github.com/apache/mina-sshd/issues/445">https://github.com/apache/mina-sshd/issues/445</a></li>
<li><a href="https://github.com/hierynomus/sshj/issues/916">https://github.com/hierynomus/sshj/issues/916</a></li>
<li><a href="https://github.com/janmojzis/tinyssh/issues/81">https://github.com/janmojzis/tinyssh/issues/81</a></li>
<li><a href="https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16">https://github.com/net-ssh/net-ssh/blob/2e65064a52d73396bfc3806c9196fc8108f33cd8/CHANGES.txt#L14-L16</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/0a7ea9b0ba9fcdf368374a226370d08f10397d99/RELEASE_NOTES</a></li>
<li><a href="https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES">https://github.com/proftpd/proftpd/blob/d21e7a2e47e9b38f709bec58e3fa711f759ad0e1/RELEASE_NOTES</a></li>
<li><a href="https://security-tracker.debian.org/tracker/source-package/trilead-ssh2">https://security-tracker.debian.org/tracker/source-package/trilead-ssh2</a></li>
<li><a href="https://www.openwall.com/lists/oss-security/2023/12/20/3">https://www.openwall.com/lists/oss-security/2023/12/20/3</a></li>
<li><a href="http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html">http://packetstormsecurity.com/files/176280/Terrapin-SSH-Connection-Weakening.html</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-45x7-px36-x8w8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-18T19:22:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/sap/cloud-security-client-go] Privilege escalation in sap/cloud-security-client-go]]></title>
        <id>https://github.com/advisories/GHSA-92cg-ghq6-9587</id>
        <link href="https://github.com/advisories/GHSA-92cg-ghq6-9587"/>
        <updated>2023-12-15T03:39:46.000Z</updated>
        <content type="html"><![CDATA[<p>SAP&nbsp;BTP&nbsp;Security Services Integration Library ([Golang] github.com/sap/cloud-security-client-go) - versions &lt; 0.17.0, allow under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50424">https://nvd.nist.gov/vuln/detail/CVE-2023-50424</a></li>
<li><a href="https://github.com/SAP/cloud-security-client-go">https://github.com/SAP/cloud-security-client-go</a></li>
<li><a href="https://me.sap.com/notes/3411067">https://me.sap.com/notes/3411067</a></li>
<li><a href="https://pkg.go.dev/github.com/sap/cloud-security-client-go@v0.17.0">https://pkg.go.dev/github.com/sap/cloud-security-client-go@v0.17.0</a></li>
<li><a href="https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html">https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html</a></li>
<li><a href="https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73">https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73</a></li>
<li><a href="https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/">https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/</a></li>
<li><a href="https://github.com/advisories/GHSA-92cg-ghq6-9587">https://github.com/advisories/GHSA-92cg-ghq6-9587</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-92cg-ghq6-9587</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-12T03:31:45.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/usememos/memos] Cross Site Scripting in usememos/memos]]></title>
        <id>https://github.com/advisories/GHSA-9w8x-5hv5-r6gw</id>
        <link href="https://github.com/advisories/GHSA-9w8x-5hv5-r6gw"/>
        <updated>2023-12-14T21:22:45.000Z</updated>
        <content type="html"><![CDATA[<p>All versions of the package github.com/usememos/memos/server prior to 0.11.0 are vulnerable to Cross-site Scripting (XSS) due to insufficient checks on external resources, which allows malicious actors to introduce links starting with a javascript: scheme.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25978">https://nvd.nist.gov/vuln/detail/CVE-2022-25978</a></li>
<li><a href="https://github.com/usememos/memos/issues/1026">https://github.com/usememos/memos/issues/1026</a></li>
<li><a href="https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8">https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8</a></li>
<li><a href="https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070">https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-1566">https://pkg.go.dev/vuln/GO-2023-1566</a></li>
<li><a href="https://github.com/advisories/GHSA-9w8x-5hv5-r6gw">https://github.com/advisories/GHSA-9w8x-5hv5-r6gw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9w8x-5hv5-r6gw</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-02-15T06:30:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/prometheus/prometheus] Withdrawn Advisory: Prometheus XSS Vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-3m87-5598-2v4f</id>
        <link href="https://github.com/advisories/GHSA-3m87-5598-2v4f"/>
        <updated>2023-12-18T20:53:31.000Z</updated>
        <content type="html"><![CDATA[<h2 id="withdrawn-advisory">Withdrawn Advisory</h2>
<p>This advisory has been withdrawn because the vulnerability does not apply to the Prometheus golang package. This link is maintained to preserve external references.</p>
<h2 id="original-description">Original Description</h2>
<p>A stored, DOM based, cross-site scripting (XSS) flaw was found in Prometheus before version 2.7.1. An attacker could exploit this by convincing an authenticated user to visit a crafted URL on a Prometheus server, allowing for the execution and persistent storage of arbitrary scripts.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-3826">https://nvd.nist.gov/vuln/detail/CVE-2019-3826</a></li>
<li><a href="https://github.com/prometheus/prometheus/pull/5163">https://github.com/prometheus/prometheus/pull/5163</a></li>
<li><a href="https://github.com/prometheus/prometheus/pull/5163/commits/ea254eea5e3c9a12d6f37a25921b7259ff1c4280">https://github.com/prometheus/prometheus/pull/5163/commits/ea254eea5e3c9a12d6f37a25921b7259ff1c4280</a></li>
<li><a href="https://github.com/prometheus/prometheus/commit/62e591f9">https://github.com/prometheus/prometheus/commit/62e591f9</a></li>
<li><a href="https://access.redhat.com/errata/RHBA-2019:0327">https://access.redhat.com/errata/RHBA-2019:0327</a></li>
<li><a href="https://advisory.checkmarx.net/advisory/CX-2019-4297">https://advisory.checkmarx.net/advisory/CX-2019-4297</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3826">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-3826</a></li>
<li><a href="https://lists.apache.org/thread.html/r48d5019bd42e0770f7e5351e420a63a41ff1f16924942442c6aff6a8@%3Ccommits.zookeeper.apache.org%3E">https://lists.apache.org/thread.html/r48d5019bd42e0770f7e5351e420a63a41ff1f16924942442c6aff6a8@%3Ccommits.zookeeper.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r8e3f7da12bf5750b0a02e69a78a61073a2ac950eed7451ce70a65177@%3Ccommits.zookeeper.apache.org%3E">https://lists.apache.org/thread.html/r8e3f7da12bf5750b0a02e69a78a61073a2ac950eed7451ce70a65177@%3Ccommits.zookeeper.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rdf2a0d94c3b5b523aeff7741ae71347415276062811b687f30ea6573@%3Ccommits.zookeeper.apache.org%3E">https://lists.apache.org/thread.html/rdf2a0d94c3b5b523aeff7741ae71347415276062811b687f30ea6573@%3Ccommits.zookeeper.apache.org%3E</a></li>
<li><a href="https://github.com/aquasecurity/trivy/issues/2992">https://github.com/aquasecurity/trivy/issues/2992</a></li>
<li><a href="https://gitlab.com/gitlab-org/security-products/gemnasium-db/-/merge_requests/26608">https://gitlab.com/gitlab-org/security-products/gemnasium-db/-/merge_requests/26608</a></li>
<li><a href="https://github.com/advisories/GHSA-3m87-5598-2v4f">https://github.com/advisories/GHSA-3m87-5598-2v4f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3m87-5598-2v4f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-13T21:26:54.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/sap/cloud-security-client-go] Improper Privilege Management in github.com/sap/cloud-security-client-go]]></title>
        <id>https://github.com/advisories/GHSA-m8rw-rcpq-2vp2</id>
        <link href="https://github.com/advisories/GHSA-m8rw-rcpq-2vp2"/>
        <updated>2023-12-18T17:38:57.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>SAP BTP Security Services Integration Library ([Golang] github.com/sap/cloud-security-client-go) allows under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.</p>
<h3 id="patches">Patches</h3>
<p>Upgrade to patched version &gt;= 0.17.0
We always recommend to upgrade to the latest released version.</p>
<h3 id="workarounds">Workarounds</h3>
<p>No workarounds</p>
<h3 id="references">References</h3>
<p><a href="https://www.cve.org/CVERecord?id=CVE-2023-50424">https://www.cve.org/CVERecord?id=CVE-2023-50424</a></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/SAP/cloud-security-client-go/security/advisories/GHSA-m8rw-rcpq-2vp2">https://github.com/SAP/cloud-security-client-go/security/advisories/GHSA-m8rw-rcpq-2vp2</a></li>
<li><a href="https://github.com/SAP/cloud-security-client-go/commit/2e3bd63e152e09f267316a1071034eb5d4b7f498">https://github.com/SAP/cloud-security-client-go/commit/2e3bd63e152e09f267316a1071034eb5d4b7f498</a></li>
<li><a href="https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73">https://github.com/SAP/cloud-security-services-integration-library/security/advisories/GHSA-59c9-pxq8-9c73</a></li>
<li><a href="https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/">https://blogs.sap.com/2023/12/12/unveiling-critical-security-updates-sap-btp-security-note-3411067/</a></li>
<li><a href="https://me.sap.com/notes/3411067">https://me.sap.com/notes/3411067</a></li>
<li><a href="https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html">https://www.sap.com/documents/2022/02/fa865ea4-167e-0010-bca6-c68f7e60039b.html</a></li>
<li><a href="https://github.com/advisories/GHSA-m8rw-rcpq-2vp2">https://github.com/advisories/GHSA-m8rw-rcpq-2vp2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m8rw-rcpq-2vp2</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-12-13T13:34:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mattermost/mattermost/server] Mattermost Injection vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-7664-hcp7-f497</id>
        <link href="https://github.com/advisories/GHSA-7664-hcp7-f497"/>
        <updated>2023-12-12T21:39:51.000Z</updated>
        <content type="html"><![CDATA[<p>Mattermost webapp fails to validate&nbsp;route parameters in//channels/&nbsp;allowing an attacker to perform a client-side path traversal.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6458">https://nvd.nist.gov/vuln/detail/CVE-2023-6458</a></li>
<li><a href="https://mattermost.com/security-updates">https://mattermost.com/security-updates</a></li>
<li><a href="https://github.com/advisories/GHSA-7664-hcp7-f497">https://github.com/advisories/GHSA-7664-hcp7-f497</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7664-hcp7-f497</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-06T09:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/mojocn/base64Captcha] Always incorrect control flow in github.com/mojocn/base64Captcha]]></title>
        <id>https://github.com/advisories/GHSA-5mmw-p5qv-w3x5</id>
        <link href="https://github.com/advisories/GHSA-5mmw-p5qv-w3x5"/>
        <updated>2023-12-14T22:03:12.000Z</updated>
        <content type="html"><![CDATA[<p>When using the default implementation of Verify to check a Captcha, verification can be bypassed. For example, if the first parameter is a non-existent id, the second parameter is an empty string, and the third parameter is true, the function will always consider the Captcha to be correct.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-45292">https://nvd.nist.gov/vuln/detail/CVE-2023-45292</a></li>
<li><a href="https://github.com/mojocn/base64Captcha/issues/120">https://github.com/mojocn/base64Captcha/issues/120</a></li>
<li><a href="https://github.com/mojocn/base64Captcha/commit/5ab86bd6f333aad3936f912fc52b411168dcd4a7">https://github.com/mojocn/base64Captcha/commit/5ab86bd6f333aad3936f912fc52b411168dcd4a7</a></li>
<li><a href="https://github.com/mojocn/base64Captcha/commit/9b11012caca58925f1e47c770f79f2fa47e3ad13">https://github.com/mojocn/base64Captcha/commit/9b11012caca58925f1e47c770f79f2fa47e3ad13</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2023-2386">https://pkg.go.dev/vuln/GO-2023-2386</a></li>
<li><a href="https://github.com/advisories/GHSA-5mmw-p5qv-w3x5">https://github.com/advisories/GHSA-5mmw-p5qv-w3x5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mmw-p5qv-w3x5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T00:30:17.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/treeverse/lakefs] lakeFS logs S3 credentials in plain text]]></title>
        <id>https://github.com/advisories/GHSA-4rgc-5g6r-2rjf</id>
        <link href="https://github.com/advisories/GHSA-4rgc-5g6r-2rjf"/>
        <updated>2023-12-12T00:58:29.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>S3 credentials are logged in plain text</p>
<pre><code>S3Creds:{Key:AKIAIOSFODNN7EXAMPLE Secret:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
</code></pre>
<p>appears as part of the log message: </p>
<pre><code>time="2023-05-12T13:51:52Z" level=error msg="failed to perform diff" func="pkg/plugins/diff.(*Service).RunDiff" file="build/pkg/plugins/diff/service.go:124" error="rpc error: code = Canceled desc = stream terminated by RST_STREAM with error code: CANCEL" host="localhost:8000" method=GET operation_id=OtfDiff params="{TablePaths:{Left:{Ref:data_load@ Path:aggs/agg_variety/} Right:{Ref:data_load Path:aggs/agg_variety/} Base:{Ref: Path:}} S3Creds:{Key:AKIAIOSFODNN7EXAMPLE Secret:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Endpoint:http://0.0.0.0:8000} Repo:example}" path="/api/v1/repositories/example/otf/refs/data_load%40/diff/data_load?table_path=aggs%2Fagg_variety%2F&amp;type=delta" request_id=d3b6fdc7-2544-4c12-8e05-376f16e35a80 service_name=rest_api type=delta user=docker
</code></pre>
<p>Discovered when investigating <a href="https://github.com/treeverse/lakeFS/issues/5862">#5862</a></p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<p>No</p>
<h3 id="workarounds">Workarounds</h3>
<p><em>Is there a way for users to fix or remediate the vulnerability without upgrading?</em></p>
<p>disable all logging? </p>
<h3 id="references">References</h3>
<p><em>Are there any links users can visit to find out more?</em></p>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/treeverse/lakeFS/security/advisories/GHSA-4rgc-5g6r-2rjf">https://github.com/treeverse/lakeFS/security/advisories/GHSA-4rgc-5g6r-2rjf</a></li>
<li><a href="https://github.com/advisories/GHSA-4rgc-5g6r-2rjf">https://github.com/advisories/GHSA-4rgc-5g6r-2rjf</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-4rgc-5g6r-2rjf</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-12T00:58:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/treeverse/lakefs] User with permission to write actions can impersonate another user when auth token is configured in environment variable]]></title>
        <id>https://github.com/advisories/GHSA-26hr-q2wp-rvc5</id>
        <link href="https://github.com/advisories/GHSA-26hr-q2wp-rvc5"/>
        <updated>2023-12-12T00:58:05.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When lakeFS is configured with <strong>ALL</strong> of the following:</p>
<ul>
<li>Configuration option <code>auth.encrypt.secret_key</code> passed through environment variable</li>
<li>Actions enabled via configuration option <code>actions.enabled</code> (default enabled)</li>
</ul>
<p>then a user who can configure an action can impersonate any other user.</p>
<h3 id="patches">Patches</h3>
<p><em>Has the problem been patched? What versions should users upgrade to?</em></p>
<h3 id="workarounds">Workarounds</h3>
<p><strong>ANY ONE</strong> of these is sufficient to prevent the issue:</p>
<ul>
<li><p>Do not pass <code>auth.encrypt.secret_key</code> through an environment variable.</p>
<p> For instance, Kubernetes users can generate the entire configuration as a secret and mount that.  This is described <a href="https://kubernetes.io/docs/concepts/configuration/secret/#using-a-secret">here</a>.</p>
</li>
<li><p>Disable actions.</p>
</li>
<li><p>Limit users allowed to configure actions.</p>
</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/treeverse/lakeFS/security/advisories/GHSA-26hr-q2wp-rvc5">https://github.com/treeverse/lakeFS/security/advisories/GHSA-26hr-q2wp-rvc5</a></li>
<li><a href="https://github.com/advisories/GHSA-26hr-q2wp-rvc5">https://github.com/advisories/GHSA-26hr-q2wp-rvc5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-26hr-q2wp-rvc5</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-12T00:58:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Memory exhaustion in HashiCorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</id>
        <link href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5"/>
        <updated>2023-12-12T00:50:14.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise 1.12.0 and newer are vulnerable to a denial of service through memory exhaustion of the host when handling large unauthenticated and authenticated HTTP requests from a client. Vault will attempt to map the request to memory, resulting in the exhaustion of available memory on the host, which may cause Vault to crash.</p>
<p>Fixed in&nbsp;Vault 1.15.4, 1.14.8, 1.13.12.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6337">https://nvd.nist.gov/vuln/detail/CVE-2023-6337</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741">https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741</a></li>
<li><a href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5">https://github.com/advisories/GHSA-6p62-6cg9-f5f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-09T00:35:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Memory exhaustion in HashiCorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</id>
        <link href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5"/>
        <updated>2023-12-12T00:50:14.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise 1.12.0 and newer are vulnerable to a denial of service through memory exhaustion of the host when handling large unauthenticated and authenticated HTTP requests from a client. Vault will attempt to map the request to memory, resulting in the exhaustion of available memory on the host, which may cause Vault to crash.</p>
<p>Fixed in&nbsp;Vault 1.15.4, 1.14.8, 1.13.12.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6337">https://nvd.nist.gov/vuln/detail/CVE-2023-6337</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741">https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741</a></li>
<li><a href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5">https://github.com/advisories/GHSA-6p62-6cg9-f5f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-09T00:35:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/hashicorp/vault] Memory exhaustion in HashiCorp Vault]]></title>
        <id>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</id>
        <link href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5"/>
        <updated>2023-12-12T00:50:14.000Z</updated>
        <content type="html"><![CDATA[<p>HashiCorp Vault and Vault Enterprise 1.12.0 and newer are vulnerable to a denial of service through memory exhaustion of the host when handling large unauthenticated and authenticated HTTP requests from a client. Vault will attempt to map the request to memory, resulting in the exhaustion of available memory on the host, which may cause Vault to crash.</p>
<p>Fixed in&nbsp;Vault 1.15.4, 1.14.8, 1.13.12.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-6337">https://nvd.nist.gov/vuln/detail/CVE-2023-6337</a></li>
<li><a href="https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741">https://discuss.hashicorp.com/t/hcsec-2023-34-vault-vulnerable-to-denial-of-service-through-memory-exhaustion-when-handling-large-http-requests/60741</a></li>
<li><a href="https://github.com/advisories/GHSA-6p62-6cg9-f5f5">https://github.com/advisories/GHSA-6p62-6cg9-f5f5</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-6p62-6cg9-f5f5</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-12-09T00:35:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/shift72/caddy-geo-ip] Header spoofing in caddy-geo-ip]]></title>
        <id>https://github.com/advisories/GHSA-rxg9-hgq7-8pwx</id>
        <link href="https://github.com/advisories/GHSA-rxg9-hgq7-8pwx"/>
        <updated>2023-12-13T21:34:16.000Z</updated>
        <content type="html"><![CDATA[<p>The caddy-geo-ip (aka GeoIP) middleware through 0.6.0 for Caddy 2, when trust_header X-Forwarded-For is used, allows attackers to spoof their source IP address via an X-Forwarded-For header, which may bypass a protection mechanism (trusted_proxy directive in reverse_proxy or IP address range restrictions).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-50463">https://nvd.nist.gov/vuln/detail/CVE-2023-50463</a></li>
<li><a href="https://github.com/shift72/caddy-geo-ip/issues/4">https://github.com/shift72/caddy-geo-ip/issues/4</a></li>
<li><a href="https://caddyserver.com/v2">https://caddyserver.com/v2</a></li>
<li><a href="https://github.com/shift72/caddy-geo-ip/tags">https://github.com/shift72/caddy-geo-ip/tags</a></li>
<li><a href="https://github.com/advisories/GHSA-rxg9-hgq7-8pwx">https://github.com/advisories/GHSA-rxg9-hgq7-8pwx</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-rxg9-hgq7-8pwx</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-12-11T00:30:32.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/sigstore/cosign] Cosign vulnerable to possible endless data attack from attacker-controlled registry]]></title>
        <id>https://github.com/advisories/GHSA-vfp6-jrw2-99g9</id>
        <link href="https://github.com/advisories/GHSA-vfp6-jrw2-99g9"/>
        <updated>2023-12-11T20:55:34.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Cosign is susceptible to a denial of service by an attacker controlled registry. An attacker who controls a remote registry can return a high number of attestations and/or signatures to Cosign and cause Cosign to enter a long loop resulting in an endless data attack. The root cause is that Cosign loops through all attestations fetched from the remote registry in <code>pkg/cosign.FetchAttestations</code>.</p>
<p>The attacker needs to compromise the registry or make a request to a registry they control. When doing so, the attacker must return a high number of attestations in the response to Cosign. The result will be that the attacker can cause Cosign to go into a long or infinite loop that will prevent other users from verifying their data. In Kyvernos case, an attacker whose privileges are limited to making requests to the cluster can make a request with an image reference to their own registry, trigger the infinite loop and deny other users from completing their admission requests. Alternatively, the attacker can obtain control of the registry used by an organization and return a high number of attestations instead the expected number of attestations.</p>
<p>The vulnerable loop in Cosign starts on line 154 below:
<a href="https://github.com/sigstore/cosign/blob/004443228442850fb28f248fd59765afad99b6df/pkg/cosign/fetch.go#L135-L196">https://github.com/sigstore/cosign/blob/004443228442850fb28f248fd59765afad99b6df/pkg/cosign/fetch.go#L135-L196</a></p>
<p>The <code>l</code> slice is controllable by an attacker who controls the remote registry.</p>
<p>Many cloud-native projects consider the remote registry to be untrusted, including Crossplane, Notary and Kyverno. We consider the same to be the case for Cosign, since users are not in control of whether the registry returns the expected data.</p>
<p>TUF's security model labels this type of vulnerability an <a href="https://theupdateframework.io/security/">"Endless data attack"</a>, but an attacker could use this as a type of rollback attack, in case the user attempts to deploy a patched version of a vulnerable image; The attacker could prevent this upgrade by causing Cosign to get stuck in an infinite loop and never complete.</p>
<h3 id="mitigation">Mitigation</h3>
<p>The issue can be mitigated rather simply by setting a limit to the limit of attestations that Cosign will loop through. The limit does not need to be high to be within the vast majority of use cases and still prevent the endless data attack.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/sigstore/cosign/security/advisories/GHSA-vfp6-jrw2-99g9">https://github.com/sigstore/cosign/security/advisories/GHSA-vfp6-jrw2-99g9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46737">https://nvd.nist.gov/vuln/detail/CVE-2023-46737</a></li>
<li><a href="https://github.com/sigstore/cosign/commit/8ac891ff0e29ddc67965423bee8f826219c6eb0f">https://github.com/sigstore/cosign/commit/8ac891ff0e29ddc67965423bee8f826219c6eb0f</a></li>
<li><a href="https://github.com/sigstore/cosign/releases/tag/v2.2.1">https://github.com/sigstore/cosign/releases/tag/v2.2.1</a></li>
<li><a href="https://github.com/sigstore/cosign/pull/3364">https://github.com/sigstore/cosign/pull/3364</a></li>
<li><a href="https://github.com/sigstore/cosign/releases/tag/v1.13.2">https://github.com/sigstore/cosign/releases/tag/v1.13.2</a></li>
<li><a href="https://github.com/advisories/GHSA-vfp6-jrw2-99g9">https://github.com/advisories/GHSA-vfp6-jrw2-99g9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vfp6-jrw2-99g9</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2023-11-08T15:02:51.000Z</published>
    </entry>
</feed>