<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-09-14T06:01:31.705Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/gofiber/fiber/v2] Fiber unauthorized access vulnerability in `ctx.IsFromLocal()`]]></title>
        <id>https://github.com/advisories/GHSA-3q5p-3558-364f</id>
        <link href="https://github.com/advisories/GHSA-3q5p-3558-364f"/>
        <updated>2023-09-12T20:16:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability can be categorized as a security misconfiguration. It impacts users of our project who rely on the <a href="https://docs.gofiber.io/api/ctx#isfromlocal">ctx.IsFromLocal()</a> method to restrict access to localhost requests. If exploited, it could allow unauthorized access to resources intended only for localhost.</p>
<p>In it's implementation it uses c.IPs():</p>
<pre><code class="language-go">// IPs returns a string slice of IP addresses specified in the X-Forwarded-For request header.
// When IP validation is enabled, only valid IPs are returned.
func (c *Ctx) IPs() []string {
    return c.extractIPsFromHeader(HeaderXForwardedFor)
}
</code></pre>
<p>Thereby, setting <code>X-Forwarded-For: 127.0.0.1</code> in a request from a foreign host, will result in true for <a href="https://docs.gofiber.io/api/ctx#isfromlocal">ctx.IsFromLocal()</a> </p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in <code>v2.49.2</code> with commit <a href="https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc">b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Currently, there are no known workarounds to remediate this vulnerability without upgrading to the patched version. We strongly advise users to apply the patch as soon as it is released.</p>
<h3 id="references">References</h3>
<p>For further information and context regarding this security issue, please refer to the following resources:</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">Mozilla Developer Network - X-Forwarded-For</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gofiber/fiber/security/advisories/GHSA-3q5p-3558-364f">https://github.com/gofiber/fiber/security/advisories/GHSA-3q5p-3558-364f</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc">https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41338">https://nvd.nist.gov/vuln/detail/CVE-2023-41338</a></li>
<li><a href="https://docs.gofiber.io/api/ctx#isfromlocal">https://docs.gofiber.io/api/ctx#isfromlocal</a></li>
<li><a href="https://github.com/advisories/GHSA-3q5p-3558-364f">https://github.com/advisories/GHSA-3q5p-3558-364f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q5p-3558-364f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-08T13:27:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/gofiber/fiber] Fiber unauthorized access vulnerability in `ctx.IsFromLocal()`]]></title>
        <id>https://github.com/advisories/GHSA-3q5p-3558-364f</id>
        <link href="https://github.com/advisories/GHSA-3q5p-3558-364f"/>
        <updated>2023-09-12T20:16:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>This vulnerability can be categorized as a security misconfiguration. It impacts users of our project who rely on the <a href="https://docs.gofiber.io/api/ctx#isfromlocal">ctx.IsFromLocal()</a> method to restrict access to localhost requests. If exploited, it could allow unauthorized access to resources intended only for localhost.</p>
<p>In it's implementation it uses c.IPs():</p>
<pre><code class="language-go">// IPs returns a string slice of IP addresses specified in the X-Forwarded-For request header.
// When IP validation is enabled, only valid IPs are returned.
func (c *Ctx) IPs() []string {
    return c.extractIPsFromHeader(HeaderXForwardedFor)
}
</code></pre>
<p>Thereby, setting <code>X-Forwarded-For: 127.0.0.1</code> in a request from a foreign host, will result in true for <a href="https://docs.gofiber.io/api/ctx#isfromlocal">ctx.IsFromLocal()</a> </p>
<h3 id="patches">Patches</h3>
<p>This issue has been patched in <code>v2.49.2</code> with commit <a href="https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc">b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc</a></p>
<h3 id="workarounds">Workarounds</h3>
<p>Currently, there are no known workarounds to remediate this vulnerability without upgrading to the patched version. We strongly advise users to apply the patch as soon as it is released.</p>
<h3 id="references">References</h3>
<p>For further information and context regarding this security issue, please refer to the following resources:</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">Mozilla Developer Network - X-Forwarded-For</a></li>
</ul>
<h3 id="references-1">References</h3>
<ul>
<li><a href="https://github.com/gofiber/fiber/security/advisories/GHSA-3q5p-3558-364f">https://github.com/gofiber/fiber/security/advisories/GHSA-3q5p-3558-364f</a></li>
<li><a href="https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc">https://github.com/gofiber/fiber/commit/b8c9ede6efa231116c4bd8bb9d5e03eac1cb76dc</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41338">https://nvd.nist.gov/vuln/detail/CVE-2023-41338</a></li>
<li><a href="https://docs.gofiber.io/api/ctx#isfromlocal">https://docs.gofiber.io/api/ctx#isfromlocal</a></li>
<li><a href="https://github.com/advisories/GHSA-3q5p-3558-364f">https://github.com/advisories/GHSA-3q5p-3558-364f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-3q5p-3558-364f</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-08T13:27:21.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/corazawaf/coraza/v2] Coraza has potential denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</id>
        <link href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h"/>
        <updated>2023-09-11T18:32:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Due to the misuse of <code>log.Fatalf</code>, the application using coraza crashed after receiving crafted requests from attackers.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a>
The bodyprocessors of multipart uses <code>log.Fatalf</code> to handle errors from the <code>mime.ParseMediaType</code>, but <code>log.Fatalf</code> calls <code>os.Exit</code> directly after logging the error.
<a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a>
This means that the application will immediately crash after receiving a malicious request that triggers an error in <code>mime.ParseMediaType</code>.</p>
<h3 id="poc">PoC</h3>
<p>The server can be demonstrated by <a href="https://github.com/corazawaf/coraza/tree/main/examples/http-server">https://github.com/corazawaf/coraza/tree/main/examples/http-server</a></p>
<p>After sending this request</p>
<pre><code>POST / HTTP/1.1
Host: 127.0.0.1:8090
User-Agent: curl/8.1.2
Accept: */*
Content-Length: 199
Content-Type: multipart/form-data; boundary=------------------------5fa6351b877326a1; a=1; a=2
Connection: close

--------------------------5fa6351b877326a1
Content-Disposition: form-data; name="file"; filename="123"
Content-Type: application/octet-stream

123

--------------------------5fa6351b877326a1--
</code></pre>
<p>The server will crash immediately. The <code>a=1; a=2</code> in <code>Content-Type</code> makes <code>mime: duplicate parameter name</code> error.</p>
<h3 id="impact">Impact</h3>
<p>I believe the vulnerability was introduced by the following commit: <a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a>.</p>
<h3 id="mitigation">Mitigation</h3>
<p>The error from <code>mime.ParseMediaType</code> should return directly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h</a></li>
<li><a href="https://github.com/corazawaf/coraza-caddy/issues/48">https://github.com/corazawaf/coraza-caddy/issues/48</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8">https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8</a></li>
<li><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a></li>
<li><a href="https://github.com/corazawaf/coraza/releases/tag/v3.0.1">https://github.com/corazawaf/coraza/releases/tag/v3.0.1</a></li>
<li><a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/a5239ba3ce839e14d9b4f9486e1b4a403dcade8c">https://github.com/corazawaf/coraza/commit/a5239ba3ce839e14d9b4f9486e1b4a403dcade8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40586">https://nvd.nist.gov/vuln/detail/CVE-2023-40586</a></li>
<li><a href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/advisories/GHSA-c2pj-v37r-2p6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-26T15:48:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/corazawaf/coraza/v3] Coraza has potential denial of service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</id>
        <link href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h"/>
        <updated>2023-09-11T18:32:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>Due to the misuse of <code>log.Fatalf</code>, the application using coraza crashed after receiving crafted requests from attackers.</p>
<h3 id="details">Details</h3>
<p><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a>
The bodyprocessors of multipart uses <code>log.Fatalf</code> to handle errors from the <code>mime.ParseMediaType</code>, but <code>log.Fatalf</code> calls <code>os.Exit</code> directly after logging the error.
<a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a>
This means that the application will immediately crash after receiving a malicious request that triggers an error in <code>mime.ParseMediaType</code>.</p>
<h3 id="poc">PoC</h3>
<p>The server can be demonstrated by <a href="https://github.com/corazawaf/coraza/tree/main/examples/http-server">https://github.com/corazawaf/coraza/tree/main/examples/http-server</a></p>
<p>After sending this request</p>
<pre><code>POST / HTTP/1.1
Host: 127.0.0.1:8090
User-Agent: curl/8.1.2
Accept: */*
Content-Length: 199
Content-Type: multipart/form-data; boundary=------------------------5fa6351b877326a1; a=1; a=2
Connection: close

--------------------------5fa6351b877326a1
Content-Disposition: form-data; name="file"; filename="123"
Content-Type: application/octet-stream

123

--------------------------5fa6351b877326a1--
</code></pre>
<p>The server will crash immediately. The <code>a=1; a=2</code> in <code>Content-Type</code> makes <code>mime: duplicate parameter name</code> error.</p>
<h3 id="impact">Impact</h3>
<p>I believe the vulnerability was introduced by the following commit: <a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a>.</p>
<h3 id="mitigation">Mitigation</h3>
<p>The error from <code>mime.ParseMediaType</code> should return directly.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/corazawaf/coraza/security/advisories/GHSA-c2pj-v37r-2p6h</a></li>
<li><a href="https://github.com/corazawaf/coraza-caddy/issues/48">https://github.com/corazawaf/coraza-caddy/issues/48</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec">https://github.com/corazawaf/coraza/commit/24af0c8cf4f10bab558740b595712be3b85493ec</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8">https://github.com/corazawaf/coraza/commit/e1b119b83e12c64f0957e00e8cad45a1b5f012f8</a></li>
<li><a href="https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29">https://github.com/corazawaf/coraza/blob/82157f85f24c6107667bf0f686b71a72aafdf8a5/internal/bodyprocessors/multipart.go#L26-L29</a></li>
<li><a href="https://github.com/corazawaf/coraza/releases/tag/v3.0.1">https://github.com/corazawaf/coraza/releases/tag/v3.0.1</a></li>
<li><a href="https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291">https://github.com/golang/go/blob/a031f4ef83edc132d5f49382bfef491161de2476/src/log/log.go#L288-L291</a></li>
<li><a href="https://github.com/corazawaf/coraza/commit/a5239ba3ce839e14d9b4f9486e1b4a403dcade8c">https://github.com/corazawaf/coraza/commit/a5239ba3ce839e14d9b4f9486e1b4a403dcade8c</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40586">https://nvd.nist.gov/vuln/detail/CVE-2023-40586</a></li>
<li><a href="https://github.com/advisories/GHSA-c2pj-v37r-2p6h">https://github.com/advisories/GHSA-c2pj-v37r-2p6h</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c2pj-v37r-2p6h</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-06-26T15:48:33.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rke2] RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-p45j-vfv5-wprq</id>
        <link href="https://github.com/advisories/GHSA-p45j-vfv5-wprq"/>
        <updated>2023-09-11T13:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).</p>
<p>Affected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+rke2r1</li>
<li>v1.27.5+rke2r1</li>
<li>v1.26.8+rke2r1</li>
<li>v1.25.13+rke2r1</li>
<li>1.24.17+rke2r1</li>
</ul>
<p>If you are using RKE2 1.27 or earlier, you must also add the parameter <code>tls-san-security: true</code> to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with RKE2 1.28.</p>
<p>Note that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ul>
<li>Run <code>kubectl delete secret -n kube-system rke2-serving</code></li>
<li>Delete <code>/var/lib/rancher/rke2/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>rke2-server</code> service.</li>
</ul>
<h3 id="background">Background</h3>
<p>The RKE2 supervisor listens on port TCP 9345 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rke2/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rke2/issues/new/choose">RKE2</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq">https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq</a></li>
<li><a href="https://github.com/advisories/GHSA-p45j-vfv5-wprq">https://github.com/advisories/GHSA-p45j-vfv5-wprq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p45j-vfv5-wprq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rke2] RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-p45j-vfv5-wprq</id>
        <link href="https://github.com/advisories/GHSA-p45j-vfv5-wprq"/>
        <updated>2023-09-11T13:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).</p>
<p>Affected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+rke2r1</li>
<li>v1.27.5+rke2r1</li>
<li>v1.26.8+rke2r1</li>
<li>v1.25.13+rke2r1</li>
<li>1.24.17+rke2r1</li>
</ul>
<p>If you are using RKE2 1.27 or earlier, you must also add the parameter <code>tls-san-security: true</code> to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with RKE2 1.28.</p>
<p>Note that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ul>
<li>Run <code>kubectl delete secret -n kube-system rke2-serving</code></li>
<li>Delete <code>/var/lib/rancher/rke2/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>rke2-server</code> service.</li>
</ul>
<h3 id="background">Background</h3>
<p>The RKE2 supervisor listens on port TCP 9345 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rke2/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rke2/issues/new/choose">RKE2</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq">https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq</a></li>
<li><a href="https://github.com/advisories/GHSA-p45j-vfv5-wprq">https://github.com/advisories/GHSA-p45j-vfv5-wprq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p45j-vfv5-wprq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rke2] RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-p45j-vfv5-wprq</id>
        <link href="https://github.com/advisories/GHSA-p45j-vfv5-wprq"/>
        <updated>2023-09-11T13:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).</p>
<p>Affected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+rke2r1</li>
<li>v1.27.5+rke2r1</li>
<li>v1.26.8+rke2r1</li>
<li>v1.25.13+rke2r1</li>
<li>1.24.17+rke2r1</li>
</ul>
<p>If you are using RKE2 1.27 or earlier, you must also add the parameter <code>tls-san-security: true</code> to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with RKE2 1.28.</p>
<p>Note that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ul>
<li>Run <code>kubectl delete secret -n kube-system rke2-serving</code></li>
<li>Delete <code>/var/lib/rancher/rke2/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>rke2-server</code> service.</li>
</ul>
<h3 id="background">Background</h3>
<p>The RKE2 supervisor listens on port TCP 9345 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rke2/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rke2/issues/new/choose">RKE2</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq">https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq</a></li>
<li><a href="https://github.com/advisories/GHSA-p45j-vfv5-wprq">https://github.com/advisories/GHSA-p45j-vfv5-wprq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p45j-vfv5-wprq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rke2] RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-p45j-vfv5-wprq</id>
        <link href="https://github.com/advisories/GHSA-p45j-vfv5-wprq"/>
        <updated>2023-09-11T13:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).</p>
<p>Affected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+rke2r1</li>
<li>v1.27.5+rke2r1</li>
<li>v1.26.8+rke2r1</li>
<li>v1.25.13+rke2r1</li>
<li>1.24.17+rke2r1</li>
</ul>
<p>If you are using RKE2 1.27 or earlier, you must also add the parameter <code>tls-san-security: true</code> to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with RKE2 1.28.</p>
<p>Note that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ul>
<li>Run <code>kubectl delete secret -n kube-system rke2-serving</code></li>
<li>Delete <code>/var/lib/rancher/rke2/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>rke2-server</code> service.</li>
</ul>
<h3 id="background">Background</h3>
<p>The RKE2 supervisor listens on port TCP 9345 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rke2/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rke2/issues/new/choose">RKE2</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq">https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq</a></li>
<li><a href="https://github.com/advisories/GHSA-p45j-vfv5-wprq">https://github.com/advisories/GHSA-p45j-vfv5-wprq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p45j-vfv5-wprq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/rancher/rke2] RKE2 supervisor port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-p45j-vfv5-wprq</id>
        <link href="https://github.com/advisories/GHSA-p45j-vfv5-wprq"/>
        <updated>2023-09-11T13:47:17.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in RKE2 where an attacker with network access to RKE2 servers' supervisor port (TCP 9345) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the supervisor port (TCP 9345).</p>
<p>Affected servers will continue to operate, but clients (server or agent nodes) will fail to establish new connections when joining or rejoining the cluster, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+rke2r1</li>
<li>v1.27.5+rke2r1</li>
<li>v1.26.8+rke2r1</li>
<li>v1.25.13+rke2r1</li>
<li>1.24.17+rke2r1</li>
</ul>
<p>If you are using RKE2 1.27 or earlier, you must also add the parameter <code>tls-san-security: true</code> to the RKE2 configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with RKE2 1.28.</p>
<p>Note that this flag changes the behavior of RKE2's supervisor listener. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system rke2-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ul>
<li>Run <code>kubectl delete secret -n kube-system rke2-serving</code></li>
<li>Delete <code>/var/lib/rancher/rke2/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>rke2-server</code> service.</li>
</ul>
<h3 id="background">Background</h3>
<p>The RKE2 supervisor listens on port TCP 9345 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in RKE2.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/rancher/rke2/security/policy">SUSE Rancher Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/rancher/rke2/issues/new/choose">RKE2</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/">support matrix</a> and <a href="https://www.suse.com/lifecycle/">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq">https://github.com/rancher/rke2/security/advisories/GHSA-p45j-vfv5-wprq</a></li>
<li><a href="https://github.com/advisories/GHSA-p45j-vfv5-wprq">https://github.com/advisories/GHSA-p45j-vfv5-wprq</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-p45j-vfv5-wprq</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:16.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/k3s-io/k3s] K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</id>
        <link href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2"/>
        <updated>2023-09-11T13:47:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).</p>
<p>Affected servers will continue to operate, but clients (including both external administrative access with <code>kubectl</code> and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+k3s1</li>
<li>v1.27.5+k3s1</li>
<li>v1.26.8+k3s1</li>
<li>v1.25.13+k3s1</li>
<li>v1.24.17+k3s1</li>
</ul>
<p>If you are using K3s 1.27 or earlier, you must also add  the parameter <code>tls-san-security: true</code> to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with K3s 1.28.</p>
<p>Note that this flag changes the behavior of K3s servers. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ol>
<li>Run <code>kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving</code></li>
<li>Delete <code>/var/lib/rancher/k3s/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>k3s</code> service.</li>
</ol>
<h3 id="background">Background</h3>
<p>The K3s apiserver/supervisor listener on port TCP 6443 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/k3s-io/k3s/security/policy">K3s Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/k3s-io/k3s/issues/new/choose">K3s</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-k3s/support-matrix/all-supported-versions">support matrix</a> and <a href="https://www.suse.com/lifecycle/#k3s">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2</a></li>
<li><a href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/advisories/GHSA-m4hf-6vgr-75r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/k3s-io/k3s] K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</id>
        <link href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2"/>
        <updated>2023-09-11T13:47:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).</p>
<p>Affected servers will continue to operate, but clients (including both external administrative access with <code>kubectl</code> and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+k3s1</li>
<li>v1.27.5+k3s1</li>
<li>v1.26.8+k3s1</li>
<li>v1.25.13+k3s1</li>
<li>v1.24.17+k3s1</li>
</ul>
<p>If you are using K3s 1.27 or earlier, you must also add  the parameter <code>tls-san-security: true</code> to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with K3s 1.28.</p>
<p>Note that this flag changes the behavior of K3s servers. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ol>
<li>Run <code>kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving</code></li>
<li>Delete <code>/var/lib/rancher/k3s/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>k3s</code> service.</li>
</ol>
<h3 id="background">Background</h3>
<p>The K3s apiserver/supervisor listener on port TCP 6443 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/k3s-io/k3s/security/policy">K3s Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/k3s-io/k3s/issues/new/choose">K3s</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-k3s/support-matrix/all-supported-versions">support matrix</a> and <a href="https://www.suse.com/lifecycle/#k3s">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2</a></li>
<li><a href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/advisories/GHSA-m4hf-6vgr-75r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/k3s-io/k3s] K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</id>
        <link href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2"/>
        <updated>2023-09-11T13:47:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).</p>
<p>Affected servers will continue to operate, but clients (including both external administrative access with <code>kubectl</code> and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+k3s1</li>
<li>v1.27.5+k3s1</li>
<li>v1.26.8+k3s1</li>
<li>v1.25.13+k3s1</li>
<li>v1.24.17+k3s1</li>
</ul>
<p>If you are using K3s 1.27 or earlier, you must also add  the parameter <code>tls-san-security: true</code> to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with K3s 1.28.</p>
<p>Note that this flag changes the behavior of K3s servers. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ol>
<li>Run <code>kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving</code></li>
<li>Delete <code>/var/lib/rancher/k3s/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>k3s</code> service.</li>
</ol>
<h3 id="background">Background</h3>
<p>The K3s apiserver/supervisor listener on port TCP 6443 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/k3s-io/k3s/security/policy">K3s Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/k3s-io/k3s/issues/new/choose">K3s</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-k3s/support-matrix/all-supported-versions">support matrix</a> and <a href="https://www.suse.com/lifecycle/#k3s">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2</a></li>
<li><a href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/advisories/GHSA-m4hf-6vgr-75r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/k3s-io/k3s] K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</id>
        <link href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2"/>
        <updated>2023-09-11T13:47:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).</p>
<p>Affected servers will continue to operate, but clients (including both external administrative access with <code>kubectl</code> and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+k3s1</li>
<li>v1.27.5+k3s1</li>
<li>v1.26.8+k3s1</li>
<li>v1.25.13+k3s1</li>
<li>v1.24.17+k3s1</li>
</ul>
<p>If you are using K3s 1.27 or earlier, you must also add  the parameter <code>tls-san-security: true</code> to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with K3s 1.28.</p>
<p>Note that this flag changes the behavior of K3s servers. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ol>
<li>Run <code>kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving</code></li>
<li>Delete <code>/var/lib/rancher/k3s/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>k3s</code> service.</li>
</ol>
<h3 id="background">Background</h3>
<p>The K3s apiserver/supervisor listener on port TCP 6443 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/k3s-io/k3s/security/policy">K3s Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/k3s-io/k3s/issues/new/choose">K3s</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-k3s/support-matrix/all-supported-versions">support matrix</a> and <a href="https://www.suse.com/lifecycle/#k3s">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2</a></li>
<li><a href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/advisories/GHSA-m4hf-6vgr-75r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/k3s-io/k3s] K3s apiserver port is vulnerable to unauthenticated remote denial-of-service (DoS) attack via TLS SAN stuffing attack]]></title>
        <id>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</id>
        <link href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2"/>
        <updated>2023-09-11T13:47:09.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>An issue was found in K3s where an attacker with network access to K3s servers' apiserver/supervisor port (TCP 6443) can force the TLS server to add entries to the certificate's Subject Alternative Name (SAN) list, through a stuffing attack, until the certificate grows so large that it exceeds the maximum size allowed by TLS client implementations. OpenSSL for example will raise an <code>excessive message size</code> error when this occurs. No authentication is necessary to perform this attack, only the ability to perform a TLS handshake against the apiserver/supervisor port (TCP 6443).</p>
<p>Affected servers will continue to operate, but clients (including both external administrative access with <code>kubectl</code> and server or agent nodes) will fail to establish new connections, thus leading to a denial of service (DoS) attack.</p>
<h3 id="remediation">Remediation</h3>
<p>Upgrade to a fixed release:</p>
<ul>
<li>v1.28.1+k3s1</li>
<li>v1.27.5+k3s1</li>
<li>v1.26.8+k3s1</li>
<li>v1.25.13+k3s1</li>
<li>v1.24.17+k3s1</li>
</ul>
<p>If you are using K3s 1.27 or earlier, you must also add  the parameter <code>tls-san-security: true</code> to the K3s configuration to enable enhanced security for the supervisor's TLS SAN list. This option defaults to <code>true</code> starting with K3s 1.28.</p>
<p>Note that this flag changes the behavior of K3s servers. You should ensure that you configure <code>node-external-ip</code> on servers that will be connected to via an external IP, and add <code>tls-san</code> entries for any load-balancers or VIP addresses that will be associated with the supervisor port. External IPs and load-balancer/VIP addresses will no longer be added to the supervisor certificate's SAN list unless explicitly configured.</p>
<h3 id="mitigation">Mitigation</h3>
<p>If you cannot upgrade to a fixed release, the certificate can be "frozen" by running the following command against the cluster:</p>
<pre><code class="language-shell">kubectl annotate secret -n kube-system k3s-serving listener.cattle.io/static=true
</code></pre>
<p><strong>⚠️ IMPORTANT CAUTION:</strong> Note that this mitigation will prevent the certificate from adding new SAN entries when servers join the cluster, and automatically renewing itself when it is about to expire. If you do this, you should delete the annotation when adding new servers to the cluster, or when the certificate is within 90 days of expiring, so that it can be updated. Once that is done, you can freeze it again.</p>
<p>Affected certificates can be reset by performing the following steps:</p>
<ol>
<li>Run <code>kubectl --server https://localhost:6444 delete secret -n kube-system k3s-serving</code></li>
<li>Delete <code>/var/lib/rancher/k3s/server/tls/dynamic-cert.json</code> from all servers, and restart the <code>k3s</code> service.</li>
</ol>
<h3 id="background">Background</h3>
<p>The K3s apiserver/supervisor listener on port TCP 6443 and uses the <code>rancher/dynamiclistener</code> library to dynamically generate TLS certificates that contain TLS Subject Alternative Names (SAN) for any host name or IP address requested by a client. This is done to allow servers and external load-balancers to be added to the cluster without the administrator having to explicitly know and configure in advance a fixed list of endpoints that the supervisor may be hosted at.</p>
<p>The library allows the embedding application to configure a callback that is used to filter addresses requested by clients; but this was not previously implemented in K3s.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Reach out to the <a href="https://github.com/k3s-io/k3s/security/policy">K3s Security team</a> for security related inquiries.</li>
<li>Open an issue in the <a href="https://github.com/k3s-io/k3s/issues/new/choose">K3s</a> repository.</li>
<li>Verify with our <a href="https://www.suse.com/suse-k3s/support-matrix/all-supported-versions">support matrix</a> and <a href="https://www.suse.com/lifecycle/#k3s">product support lifecycle</a>.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/k3s-io/k3s/security/advisories/GHSA-m4hf-6vgr-75r2</a></li>
<li><a href="https://github.com/advisories/GHSA-m4hf-6vgr-75r2">https://github.com/advisories/GHSA-m4hf-6vgr-75r2</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-m4hf-6vgr-75r2</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2023-09-11T13:47:08.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD repo-server  Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g687-f2gx-6wm8</id>
        <link href="https://github.com/advisories/GHSA-g687-f2gx-6wm8"/>
        <updated>2023-09-11T12:59:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically, the said component extracts a user-controlled tar.gz file without validating the size of its inner files. As a result, a malicious, low-privileged user can send a malicious tar.gz file that exploits this vulnerability to the repo-server, thereby harming the system's functionality and availability. Additionally, the repo-server is susceptible to another vulnerability due to the fact that it does not check the extracted file permissions before attempting to delete them. Consequently, an attacker can craft a malicious tar.gz archive in a way that prevents the deletion of its inner files when the manifest generation process is completed.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.6.15</li>
<li>v2.7.14</li>
<li>v2.8.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Configure RBAC (Role-Based Access Control) and provide access for configuring applications only to a limited number of administrators. These administrators should utilize trusted and verified Helm charts.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by GE Vernova – Amit Laish.</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40584">https://nvd.nist.gov/vuln/detail/CVE-2023-40584</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc">https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674">https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-g687-f2gx-6wm8">https://github.com/advisories/GHSA-g687-f2gx-6wm8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g687-f2gx-6wm8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T12:59:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD repo-server  Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g687-f2gx-6wm8</id>
        <link href="https://github.com/advisories/GHSA-g687-f2gx-6wm8"/>
        <updated>2023-09-11T12:59:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically, the said component extracts a user-controlled tar.gz file without validating the size of its inner files. As a result, a malicious, low-privileged user can send a malicious tar.gz file that exploits this vulnerability to the repo-server, thereby harming the system's functionality and availability. Additionally, the repo-server is susceptible to another vulnerability due to the fact that it does not check the extracted file permissions before attempting to delete them. Consequently, an attacker can craft a malicious tar.gz archive in a way that prevents the deletion of its inner files when the manifest generation process is completed.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.6.15</li>
<li>v2.7.14</li>
<li>v2.8.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Configure RBAC (Role-Based Access Control) and provide access for configuring applications only to a limited number of administrators. These administrators should utilize trusted and verified Helm charts.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by GE Vernova – Amit Laish.</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40584">https://nvd.nist.gov/vuln/detail/CVE-2023-40584</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc">https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674">https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-g687-f2gx-6wm8">https://github.com/advisories/GHSA-g687-f2gx-6wm8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g687-f2gx-6wm8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T12:59:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD repo-server  Denial of Service vulnerability]]></title>
        <id>https://github.com/advisories/GHSA-g687-f2gx-6wm8</id>
        <link href="https://github.com/advisories/GHSA-g687-f2gx-6wm8"/>
        <updated>2023-09-11T12:59:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>All versions of ArgoCD starting from v2.4 have a bug where the ArgoCD repo-server component is vulnerable to a Denial-of-Service attack vector. Specifically, the said component extracts a user-controlled tar.gz file without validating the size of its inner files. As a result, a malicious, low-privileged user can send a malicious tar.gz file that exploits this vulnerability to the repo-server, thereby harming the system's functionality and availability. Additionally, the repo-server is susceptible to another vulnerability due to the fact that it does not check the extracted file permissions before attempting to delete them. Consequently, an attacker can craft a malicious tar.gz archive in a way that prevents the deletion of its inner files when the manifest generation process is completed.</p>
<h3 id="patches">Patches</h3>
<p>A patch for this vulnerability has been released in the following Argo CD versions:</p>
<ul>
<li>v2.6.15</li>
<li>v2.7.14</li>
<li>v2.8.3</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>The only way to completely resolve the issue is to upgrade.</p>
<h4 id="mitigations">Mitigations</h4>
<p>Configure RBAC (Role-Based Access Control) and provide access for configuring applications only to a limited number of administrators. These administrators should utilize trusted and verified Helm charts.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="credits">Credits</h3>
<p>This vulnerability was found &amp; reported by GE Vernova – Amit Laish.</p>
<p>The Argo team would like to thank these contributors for their responsible disclosure and constructive communications during the resolve of this issue</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8">https://github.com/argoproj/argo-cd/security/advisories/GHSA-g687-f2gx-6wm8</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40584">https://nvd.nist.gov/vuln/detail/CVE-2023-40584</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc">https://github.com/argoproj/argo-cd/commit/1391ba72149655e4884d357586d3201f15bc92dc</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674">https://github.com/argoproj/argo-cd/commit/b8f92c4ff226346624f43de3f25d81dac6386674</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-g687-f2gx-6wm8">https://github.com/advisories/GHSA-g687-f2gx-6wm8</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g687-f2gx-6wm8</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2023-09-11T12:59:48.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD cluster secret might leak in cluster details page]]></title>
        <id>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</id>
        <link href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m"/>
        <updated>2023-09-11T12:59:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in<code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. </p>
<p><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a> introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have <code>clusters, get</code> RBAC access.</p>
<p><strong>Note:</strong> In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been patched in the following versions:</p>
<ul>
<li>2.8.3</li>
<li>2.7.14</li>
<li>2.6.15</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Update/Deploy cluster secret with <code>server-side-apply</code> flag which does not use or rely on <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. Note: annotation for existing secrets will require manual removal.</p>
<h3 id="for-more-information">For more information</h3>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40029">https://nvd.nist.gov/vuln/detail/CVE-2023-40029</a></li>
<li><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28">https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4">https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80">https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/advisories/GHSA-fwr2-64vr-xv9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-11T12:59:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD cluster secret might leak in cluster details page]]></title>
        <id>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</id>
        <link href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m"/>
        <updated>2023-09-11T12:59:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in<code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. </p>
<p><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a> introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have <code>clusters, get</code> RBAC access.</p>
<p><strong>Note:</strong> In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been patched in the following versions:</p>
<ul>
<li>2.8.3</li>
<li>2.7.14</li>
<li>2.6.15</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Update/Deploy cluster secret with <code>server-side-apply</code> flag which does not use or rely on <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. Note: annotation for existing secrets will require manual removal.</p>
<h3 id="for-more-information">For more information</h3>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40029">https://nvd.nist.gov/vuln/detail/CVE-2023-40029</a></li>
<li><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28">https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4">https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80">https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/advisories/GHSA-fwr2-64vr-xv9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-11T12:59:30.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/argoproj/argo-cd/v2] Argo CD cluster secret might leak in cluster details page]]></title>
        <id>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</id>
        <link href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m"/>
        <updated>2023-09-11T12:59:31.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>Argo CD Cluster secrets might be managed declaratively using Argo CD / kubectl apply. As a result, the full secret body is stored in<code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. </p>
<p><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a> introduced the ability to manage cluster labels and annotations. Since clusters are stored as secrets it also exposes the <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation which includes full secret body. In order to view the cluster annotations via the Argo CD API, the user must have <code>clusters, get</code> RBAC access.</p>
<p><strong>Note:</strong> In many cases, cluster secrets do not contain any actually-secret information. But sometimes, as in bearer-token auth, the contents might be very sensitive.</p>
<h3 id="patches">Patches</h3>
<p>The bug has been patched in the following versions:</p>
<ul>
<li>2.8.3</li>
<li>2.7.14</li>
<li>2.6.15</li>
</ul>
<h3 id="workarounds">Workarounds</h3>
<p>Update/Deploy cluster secret with <code>server-side-apply</code> flag which does not use or rely on <code>kubectl.kubernetes.io/last-applied-configuration</code> annotation. Note: annotation for existing secrets will require manual removal.</p>
<h3 id="for-more-information">For more information</h3>
<ul>
<li>Open an issue in <a href="https://github.com/argoproj/argo-cd/issues">the Argo CD issue tracker</a> or <a href="https://github.com/argoproj/argo-cd/discussions">discussions</a></li>
<li>Join us on <a href="https://argoproj.github.io/community/join-slack">Slack</a> in channel #argo-cd</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/argoproj/argo-cd/security/advisories/GHSA-fwr2-64vr-xv9m</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-40029">https://nvd.nist.gov/vuln/detail/CVE-2023-40029</a></li>
<li><a href="https://github.com/argoproj/argo-cd/pull/7139">https://github.com/argoproj/argo-cd/pull/7139</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28">https://github.com/argoproj/argo-cd/commit/44e52c4ae76e6da1343bdd54e57a822d93549f28</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4">https://github.com/argoproj/argo-cd/commit/4b2e5b06bff2ffd8ed1970654ddd8e55fc4a41c4</a></li>
<li><a href="https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80">https://github.com/argoproj/argo-cd/commit/7122b83fc346ec2729227405a2f9c2aa84b0bf80</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.6.15">https://github.com/argoproj/argo-cd/releases/tag/v2.6.15</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.7.14">https://github.com/argoproj/argo-cd/releases/tag/v2.7.14</a></li>
<li><a href="https://github.com/argoproj/argo-cd/releases/tag/v2.8.3">https://github.com/argoproj/argo-cd/releases/tag/v2.8.3</a></li>
<li><a href="https://github.com/advisories/GHSA-fwr2-64vr-xv9m">https://github.com/advisories/GHSA-fwr2-64vr-xv9m</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-fwr2-64vr-xv9m</uri>
        </author>
        <category label="severity" term="CRITICAL"/>
        <published>2023-09-11T12:59:30.000Z</published>
    </entry>
</feed>