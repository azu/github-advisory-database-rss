{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Applications using <a href=\"https://github.com/asciidoctor/asciidoctor\">Asciidoctor (Ruby)</a> with <a href=\"https://github.com/jirutka/asciidoctor-include-ext\">asciidoctor-include-ext</a> (prior to version 0.4.0), which render user-supplied input in AsciiDoc markup, may allow an attacker to execute arbitrary system commands on the host operating system. This attack is possible even when <code>allow-uri-read</code> is disabled!</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in commit c7ea001 (and further improved in cbaccf3), which is included in version <a href=\"https://rubygems.org/gems/asciidoctor-include-ext/versions/0.4.0\">0.4.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<pre><code class=\"language-rb\">require 'asciidoctor/include_ext'\n\nclass Asciidoctor::IncludeExt::IncludeProcessor\n  # Overrides superclass private method to mitigate Command Injection\n  # vulnerability in asciidoctor-include-ext &lt;0.4.0.\n  def target_uri?(target)\n    target.downcase.start_with?('http://', 'https://') \\\n      &amp;&amp; URI.parse(target).is_a?(URI::HTTP)\n  rescue URI::InvalidURIError\n    false\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://sakurity.com/blog/2015/02/28/openuri.html\">https://sakurity.com/blog/2015/02/28/openuri.html</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered by Joern Schneeweisz from the GitLab Security Research Team.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>See commit message c7ea001.</p>\n<p>If you have any questions or comments about this advisory open an issue in <a href=\"https://github.com/jirutka/asciidoctor-include-ext/issues/\">jirutka/asciidoctor-include-ext</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/security/advisories/GHSA-v222-6mr4-qj29\">https://github.com/jirutka/asciidoctor-include-ext/security/advisories/GHSA-v222-6mr4-qj29</a></li>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/commit/c7ea001a597c7033575342c51483dab7b87ae155\">https://github.com/jirutka/asciidoctor-include-ext/commit/c7ea001a597c7033575342c51483dab7b87ae155</a></li>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/commit/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee\">https://github.com/jirutka/asciidoctor-include-ext/commit/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v222-6mr4-qj29\">https://github.com/advisories/GHSA-v222-6mr4-qj29</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v222-6mr4-qj29",
            "title": "[asciidoctor-include-ext] Command Injection vulnerability in asciidoctor-include-ext",
            "date_modified": "2022-03-31T23:27:37.000Z",
            "date_published": "2022-03-31T23:27:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v222-6mr4-qj29"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using Puma behind a proxy that does not properly validate that the incoming HTTP request matches the RFC7230 standard, Puma and the frontend proxy may disagree on where a request starts and ends. This would allow requests to be smuggled via the front-end proxy to Puma.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Lenient parsing of <code>Transfer-Encoding</code> headers, when unsupported encodings should be rejected and the final encoding must be <code>chunked</code>.</li>\n<li>Lenient parsing of malformed <code>Content-Length</code> headers and chunk sizes, when only digits and hex digits should be allowed.</li>\n<li>Lenient parsing of duplicate <code>Content-Length</code> headers, when they should be rejected.</li>\n<li>Lenient parsing of the ending of chunked segments, when they should end with <code>\\r\\n</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 5.6.4 and 4.3.12.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>When deploying a proxy in front of Puma, turning on any and all functionality to make sure that the request matches the RFC7230 standard. </p>\n<p>These proxy servers are known to have \"good\" behavior re: this standard and upgrading Puma may not be necessary. Users are encouraged to validate for themselves.</p>\n<ul>\n<li>Nginx (latest)</li>\n<li>Apache (latest)</li>\n<li>Haproxy 2.5+</li>\n<li>Caddy (latest)</li>\n<li>Traefik (latest)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5\">https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24790\">https://nvd.nist.gov/vuln/detail/CVE-2022-24790</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9",
            "title": "[puma] HTTP Request Smuggling in puma",
            "date_modified": "2022-04-01T20:00:07.000Z",
            "date_published": "2022-03-30T21:48:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using Puma behind a proxy that does not properly validate that the incoming HTTP request matches the RFC7230 standard, Puma and the frontend proxy may disagree on where a request starts and ends. This would allow requests to be smuggled via the front-end proxy to Puma.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Lenient parsing of <code>Transfer-Encoding</code> headers, when unsupported encodings should be rejected and the final encoding must be <code>chunked</code>.</li>\n<li>Lenient parsing of malformed <code>Content-Length</code> headers and chunk sizes, when only digits and hex digits should be allowed.</li>\n<li>Lenient parsing of duplicate <code>Content-Length</code> headers, when they should be rejected.</li>\n<li>Lenient parsing of the ending of chunked segments, when they should end with <code>\\r\\n</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 5.6.4 and 4.3.12.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>When deploying a proxy in front of Puma, turning on any and all functionality to make sure that the request matches the RFC7230 standard. </p>\n<p>These proxy servers are known to have \"good\" behavior re: this standard and upgrading Puma may not be necessary. Users are encouraged to validate for themselves.</p>\n<ul>\n<li>Nginx (latest)</li>\n<li>Apache (latest)</li>\n<li>Haproxy 2.5+</li>\n<li>Caddy (latest)</li>\n<li>Traefik (latest)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5\">https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24790\">https://nvd.nist.gov/vuln/detail/CVE-2022-24790</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9",
            "title": "[puma] HTTP Request Smuggling in puma",
            "date_modified": "2022-04-01T20:00:07.000Z",
            "date_published": "2022-03-30T21:48:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9"
            }
        },
        {
            "content_html": "<p>An authorization flaw was found in Foreman Ansible. An authenticated attacker with certain permissions to create and run Ansible jobs can access hosts through job templates. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3589\">https://nvd.nist.gov/vuln/detail/CVE-2021-3589</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2021-3589\">https://access.redhat.com/security/cve/CVE-2021-3589</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969265\">https://bugzilla.redhat.com/show_bug.cgi?id=1969265</a></li>\n<li><a href=\"https://github.com/theforeman/foreman_ansible/commit/a5e0827bc3ec6c8ab82f968907857a15646305d5\">https://github.com/theforeman/foreman_ansible/commit/a5e0827bc3ec6c8ab82f968907857a15646305d5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvff-6wrr-4g7q\">https://github.com/advisories/GHSA-vvff-6wrr-4g7q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvff-6wrr-4g7q",
            "title": "[foreman_ansible] Missing Authentication for Critical Function in Foreman Ansible",
            "date_modified": "2022-03-29T21:50:29.000Z",
            "date_published": "2022-03-24T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvff-6wrr-4g7q"
            }
        },
        {
            "content_html": "<p>WEBrick 1.3.1 in Ruby 1.8.6 through patchlevel 383, 1.8.7 through patchlevel 248, 1.8.8dev, 1.9.1 through patchlevel 376, and 1.9.2dev writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2009-4492\">https://nvd.nist.gov/vuln/detail/CVE-2009-4492</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mq2-37j5-w6r6\">https://github.com/advisories/GHSA-6mq2-37j5-w6r6</a></li>\n<li><a href=\"http://secunia.com/advisories/37949\">http://secunia.com/advisories/37949</a></li>\n<li><a href=\"http://securitytracker.com/id?1023429\">http://securitytracker.com/id?1023429</a></li>\n<li><a href=\"http://www.redhat.com/support/errata/RHSA-2011-0908.html\">http://www.redhat.com/support/errata/RHSA-2011-0908.html</a></li>\n<li><a href=\"http://www.redhat.com/support/errata/RHSA-2011-0909.html\">http://www.redhat.com/support/errata/RHSA-2011-0909.html</a></li>\n<li><a href=\"http://www.ruby-lang.org/en/news/2010/01/10/webrick-escape-sequence-injection\">http://www.ruby-lang.org/en/news/2010/01/10/webrick-escape-sequence-injection</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/508830/100/0/threaded\">http://www.securityfocus.com/archive/1/508830/100/0/threaded</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/37710\">http://www.securityfocus.com/bid/37710</a></li>\n<li><a href=\"http://www.ush.it/team/ush/hack_httpd_escape/adv.txt\">http://www.ush.it/team/ush/hack_httpd_escape/adv.txt</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2010/0089\">http://www.vupen.com/english/advisories/2010/0089</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mq2-37j5-w6r6",
            "title": "[webrick] Moderate severity vulnerability that affects webrick",
            "date_modified": "2022-03-12T00:17:56.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mq2-37j5-w6r6"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CommonMarker uses <code>cmark-gfm</code> for rendering <a href=\"https://github.github.com/gfm/\">Github Flavored Markdown</a>. An <a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">integer overflow in <code>cmark-gfm</code>'s table row parsing</a> may lead to heap memory corruption when parsing tables who's marker rows contain more than UINT16_MAX columns. The impact of this heap corruption ranges from Information Leak to Arbitrary Code Execution.</p>\n<p>If affected versions of CommonMarker are used for rendering remote user controlled markdown, this vulnerability may lead to Remote Code Execution (RCE).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in the following CommonMarker release:</p>\n<ul>\n<li>v0.23.4</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The vulnerability exists in the table markdown extensions of <code>cmark-gfm</code>. Disabling any use of the table extension will prevent this vulnerability from being triggered.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n</ul>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We would like to thank Felix Wilhelm of Google's Project Zero for reporting this vulnerability</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/gjtorikian/commonmarker\">CommonMarker</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3\">https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf",
            "title": "[commonmarker] Integer overflow in cmark-gfm table parsing extension leads to heap memory corruption",
            "date_modified": "2022-03-03T20:29:09.000Z",
            "date_published": "2022-03-03T20:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<p>In Publify, 9.0.0.pre1 to 9.2.4 are vulnerable to Improper Access Control. “guest” role users can self-register even when the admin does not allow. This happens due to front-end restriction only.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25973\">https://nvd.nist.gov/vuln/detail/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e\">https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x24j-87x9-jvv5\">https://github.com/advisories/GHSA-x24j-87x9-jvv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5",
            "title": "[publify_core] Improper Authorization in Publify",
            "date_modified": "2022-03-02T23:50:10.000Z",
            "date_published": "2021-11-03T17:34:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5"
            }
        },
        {
            "content_html": "<p>This is an XSS vulnerability that has the potential to impact anyone using translations with the view_component gem. Data received via user input and passed as an interpolation argument to the <code>translate</code> method is not properly sanitized before display.</p>\n<p>Versions 2.29.1 and 2.49.1 have been released and fully mitigate the vulnerability.</p>\n<p>Avoid passing user input to the <code>translate</code> function, or sanitize the inputs before passing them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"http://github.com/github/view_component\">github/view_component</a> project</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n<li><a href=\"https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9\">https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24722\">https://nvd.nist.gov/vuln/detail/CVE-2022-24722</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.31.2\">https://github.com/github/view_component/releases/tag/v2.31.2</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.49.1\">https://github.com/github/view_component/releases/tag/v2.49.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf",
            "title": "[view_component] Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in view_component",
            "date_modified": "2022-03-11T20:08:42.000Z",
            "date_published": "2022-03-02T22:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf"
            }
        },
        {
            "content_html": "<p>This is an XSS vulnerability that has the potential to impact anyone using translations with the view_component gem. Data received via user input and passed as an interpolation argument to the <code>translate</code> method is not properly sanitized before display.</p>\n<p>Versions 2.29.1 and 2.49.1 have been released and fully mitigate the vulnerability.</p>\n<p>Avoid passing user input to the <code>translate</code> function, or sanitize the inputs before passing them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"http://github.com/github/view_component\">github/view_component</a> project</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n<li><a href=\"https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9\">https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24722\">https://nvd.nist.gov/vuln/detail/CVE-2022-24722</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.31.2\">https://github.com/github/view_component/releases/tag/v2.31.2</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.49.1\">https://github.com/github/view_component/releases/tag/v2.49.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf",
            "title": "[view_component] Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in view_component",
            "date_modified": "2022-03-11T20:08:42.000Z",
            "date_published": "2022-03-02T22:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf"
            }
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-7565\">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m3q7-rj8g-m457\">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY\">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>\n<li><a href=\"http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html\">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m3q7-rj8g-m457",
            "title": "[ember-source] Moderate severity vulnerability that affects ember-source",
            "date_modified": "2022-03-02T21:53:01.000Z",
            "date_published": "2018-08-28T22:33:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m3q7-rj8g-m457"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using the <code>#apply</code> method from image_processing to apply a series of operations that are coming from unsanitized user input, this allows the attacker to execute shell commands:</p>\n<pre><code class=\"language-rb\">ImageProcessing::Vips.apply({ system: \"echo EXECUTED\" })\n#&gt;&gt; EXECUTED\n</code></pre>\n<p>This method is called internally by Active Storage variants, so Active Storage is vulnerable as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in version 1.12.2 of image_processing.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you're processing based on user input, it's highly recommended that you always sanitize the user input, by allowing only a constrained set of operations. For example:</p>\n<pre><code class=\"language-rb\">operations = params[:operations]\n  .map { |operation| [operation[:name], *operation[:value]] }\n  .select { |name, *| name.to_s.include? %w[resize_to_limit strip ...] } # sanitization\n\nImageProcessing::Vips.apply(operations)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/janko/image_processing/security/advisories/GHSA-cxf7-qrc5-9446\">https://github.com/janko/image_processing/security/advisories/GHSA-cxf7-qrc5-9446</a></li>\n<li><a href=\"https://github.com/janko/image_processing/commit/038e4574e8f4f4b636a62394e09983c71980dada\">https://github.com/janko/image_processing/commit/038e4574e8f4f4b636a62394e09983c71980dada</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24720\">https://nvd.nist.gov/vuln/detail/CVE-2022-24720</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxf7-qrc5-9446\">https://github.com/advisories/GHSA-cxf7-qrc5-9446</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxf7-qrc5-9446",
            "title": "[image_processing] Remote shell execution vulnerability in image_processing",
            "date_modified": "2022-03-10T15:56:29.000Z",
            "date_published": "2022-03-01T22:22:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxf7-qrc5-9446"
            }
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.13.2\">v1.13.2</a> upgrades two of its packaged dependencies:</p>\n<ul>\n<li>vendored libxml2 from v2.9.12 to <a href=\"https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.13.news\">v2.9.13</a></li>\n<li>vendored libxslt from v1.1.34 to <a href=\"https://download.gnome.org/sources/libxslt/1.1/libxslt-1.1.35.news\">v1.1.35</a></li>\n</ul>\n<p>Those library versions address the following upstream CVEs:</p>\n<ul>\n<li>libxslt: <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30560\">CVE-2021-30560</a> (CVSS 8.8, High severity)</li>\n<li>libxml2: <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23308\">CVE-2022-23308</a> (Unspecified severity, see more information below)</li>\n</ul>\n<p>Those library versions also address numerous other issues including performance improvements, regression fixes, and bug fixes, as well as memory leaks and other use-after-free issues that were not assigned CVEs.</p>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri <code>&lt; 1.13.2</code>, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> and <code>libxslt</code> release announcements.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Upgrade to Nokogiri <code>&gt;= 1.13.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile and link an older version Nokogiri against external libraries libxml2 <code>&gt;= 2.9.13</code> and libxslt <code>&gt;= 1.1.35</code>, which will also address these same CVEs.</p>\n<h3 id=\"impact\">Impact</h3>\n<h4 id=\"libxslt-cve-2021-30560\">libxslt <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30560\">CVE-2021-30560</a></h4>\n<ul>\n<li>CVSS3 score: 8.8 (High)</li>\n<li>Fixed by <a href=\"https://gitlab.gnome.org/GNOME/libxslt/-/commit/50f9c9c\">https://gitlab.gnome.org/GNOME/libxslt/-/commit/50f9c9c</a></li>\n</ul>\n<p>All versions of libxslt prior to v1.1.35 are affected.</p>\n<p>Applications using <strong>untrusted</strong> XSL stylesheets to transform XML are vulnerable to a denial-of-service attack and should be upgraded immediately.</p>\n<h4 id=\"libxml2-cve-2022-23308\">libxml2 <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23308\">CVE-2022-23308</a></h4>\n<ul>\n<li>As of the time this security advisory was published, there is no officially published information available about this CVE's severity. The above NIST link does not yet have a published record, and the libxml2 maintainer has declined to provide a severity score.</li>\n<li>Fixed by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/652dd12\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/652dd12</a></li>\n<li>Further explanation is at <a href=\"https://mail.gnome.org/archives/xml/2022-February/msg00015.html\">https://mail.gnome.org/archives/xml/2022-February/msg00015.html</a></li>\n</ul>\n<p>The upstream commit and the explanation linked above indicate that an application may be vulnerable to a denial of service, memory disclosure, or code execution if it parses an <strong>untrusted</strong> document with parse options <code>DTDVALID</code> set to true, and <code>NOENT</code> set to false.</p>\n<p>An analysis of these parse options:</p>\n<ul>\n<li>While <code>NOENT</code> is off by default for Document, DocumentFragment, Reader, and Schema parsing, it is on by default for XSLT (stylesheet) parsing in Nokogiri v1.12.0 and later.</li>\n<li><code>DTDVALID</code> is an option that Nokogiri does not set for any operations, and so this CVE applies only to applications setting this option explicitly.</li>\n</ul>\n<p>It seems reasonable to assume that any application explicitly setting the parse option <code>DTDVALID</code> when parsing <strong>untrusted</strong> documents is vulnerable and should be upgraded immediately.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-fq42-c5rg-92c2\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-fq42-c5rg-92c2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq42-c5rg-92c2\">https://github.com/advisories/GHSA-fq42-c5rg-92c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq42-c5rg-92c2",
            "title": "[nokogiri] Vulnerable dependencies in Nokogiri",
            "date_modified": "2022-02-26T01:06:54.000Z",
            "date_published": "2022-02-25T20:32:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq42-c5rg-92c2"
            }
        },
        {
            "content_html": "<p>The Field Test dashboard is vulnerable to cross-site request forgery (CSRF) with non-session based authentication methods in versions v0.2.0 through v0.3.2.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The Field Test dashboard is vulnerable to CSRF with non-session based authentication methods, like basic authentication. Session-based authentication methods (like Devise's default authentication) are not affected.</p>\n<p>A CSRF attack works by getting an authorized user to visit a malicious website and then performing requests on behalf of the user. In this instance, a single endpoint is affected, which allows for changing the variant assigned to a user.</p>\n<p>All users running an affected release should upgrade immediately.</p>\n<h2 id=\"technical-details\">Technical Details</h2>\n<p>Field Test uses the <code>protect_from_forgery</code> method from Rails to prevent CSRF. However, this defaults to <code>:null_session</code>, which has no effect on non-session based authentication methods. This has been changed to <code>protect_from_forgery with: :exception</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16252\">https://nvd.nist.gov/vuln/detail/CVE-2020-16252</a></li>\n<li><a href=\"https://github.com/ankane/field_test/issues/28\">https://github.com/ankane/field_test/issues/28</a></li>\n<li><a href=\"https://github.com/ankane/field_test/commit/defd3fdf457c22d7dc5b3be7048481947bd5f0d0\">https://github.com/ankane/field_test/commit/defd3fdf457c22d7dc5b3be7048481947bd5f0d0</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/field_test/CVE-2020-16252.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/field_test/CVE-2020-16252.yml</a></li>\n<li><a href=\"https://rubygems.org/gems/field_test\">https://rubygems.org/gems/field_test</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w542-cpp9-r3g7\">https://github.com/advisories/GHSA-w542-cpp9-r3g7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w542-cpp9-r3g7",
            "title": "[field_test] CSRF in Field Test",
            "date_modified": "2022-02-24T18:31:29.000Z",
            "date_published": "2020-08-05T14:53:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w542-cpp9-r3g7"
            }
        }
    ]
}