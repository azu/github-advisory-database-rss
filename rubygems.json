{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>Leaking password protected articles content due to improper access control in GitHub repository publify/publify prior to 9.2.8. Attackers can leverage this vulnerability to view the contents of any password-protected article present on the publify website, compromising confidentiality and integrity of users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-1553\">https://nvd.nist.gov/vuln/detail/CVE-2022-1553</a></li>\n<li><a href=\"https://github.com/publify/publify/commit/1a78f16f460847274265a12a9555b3524892d7db\">https://github.com/publify/publify/commit/1a78f16f460847274265a12a9555b3524892d7db</a></li>\n<li><a href=\"https://huntr.dev/bounties/b398e4c9-6cdf-4973-ad86-da796cde221f\">https://huntr.dev/bounties/b398e4c9-6cdf-4973-ad86-da796cde221f</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5jm7-g527-m694\">https://github.com/advisories/GHSA-5jm7-g527-m694</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5jm7-g527-m694",
            "title": "[publify_core] Article metadata exposure in publify",
            "date_modified": "2022-06-01T21:44:52.000Z",
            "date_published": "2022-05-17T00:01:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5jm7-g527-m694"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CSRF vulnerability allowing attackers to change the state of an order's adjustments if they hold its number, and the execution happens on a store administrator's computer.</p>\n<p>Reproduction steps:</p>\n<ul>\n<li>Take an order's number.</li>\n<li>Log in as an administrator.</li>\n<li>Visit that order's adjustments section (<em>Orders -&gt; {Click on number} -&gt; Adjustments</em>) and check that its adjustments are finalized (closed padlock under the <strong>State</strong> column).</li>\n<li>On another tab, visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/unfinalize</code>.</li>\n<li>Notice how the adjustments are unfinalized (open padlock), even if the previous was a <code>GET</code> request which could have been linked from any other site.</li>\n<li>Visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/finalize</code>.</li>\n<li>Notice how the adjustments are again finalized.</li>\n</ul>\n<p>That happened because both routes were handled as <code>GET</code> requests, which are skipped by Rails anti-forgery protection.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to solidus_backend v3.1.6, v3.0.6, or v2.11.16, depending on the major and minor versions in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection.html\">Rails CSRF protection</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an <a href=\"https://github.com/solidusio/solidus/issues\">issue</a> or a <a href=\"https://github.com/solidusio/solidus/discussions\">discussion</a> in Solidus.</li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428\">https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31000\">https://nvd.nist.gov/vuln/detail/CVE-2022-31000</a></li>\n<li><a href=\"https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c\">https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8639-qx56-r428\">https://github.com/advisories/GHSA-8639-qx56-r428</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8639-qx56-r428",
            "title": "[solidus_backend] CSRF allows attacker to finalize/unfinalize order adjustments in solidus_backend",
            "date_modified": "2022-06-01T20:26:43.000Z",
            "date_published": "2022-06-01T20:26:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8639-qx56-r428"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CSRF vulnerability allowing attackers to change the state of an order's adjustments if they hold its number, and the execution happens on a store administrator's computer.</p>\n<p>Reproduction steps:</p>\n<ul>\n<li>Take an order's number.</li>\n<li>Log in as an administrator.</li>\n<li>Visit that order's adjustments section (<em>Orders -&gt; {Click on number} -&gt; Adjustments</em>) and check that its adjustments are finalized (closed padlock under the <strong>State</strong> column).</li>\n<li>On another tab, visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/unfinalize</code>.</li>\n<li>Notice how the adjustments are unfinalized (open padlock), even if the previous was a <code>GET</code> request which could have been linked from any other site.</li>\n<li>Visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/finalize</code>.</li>\n<li>Notice how the adjustments are again finalized.</li>\n</ul>\n<p>That happened because both routes were handled as <code>GET</code> requests, which are skipped by Rails anti-forgery protection.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to solidus_backend v3.1.6, v3.0.6, or v2.11.16, depending on the major and minor versions in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection.html\">Rails CSRF protection</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an <a href=\"https://github.com/solidusio/solidus/issues\">issue</a> or a <a href=\"https://github.com/solidusio/solidus/discussions\">discussion</a> in Solidus.</li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428\">https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31000\">https://nvd.nist.gov/vuln/detail/CVE-2022-31000</a></li>\n<li><a href=\"https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c\">https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8639-qx56-r428\">https://github.com/advisories/GHSA-8639-qx56-r428</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8639-qx56-r428",
            "title": "[solidus_backend] CSRF allows attacker to finalize/unfinalize order adjustments in solidus_backend",
            "date_modified": "2022-06-01T20:26:43.000Z",
            "date_published": "2022-06-01T20:26:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8639-qx56-r428"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CSRF vulnerability allowing attackers to change the state of an order's adjustments if they hold its number, and the execution happens on a store administrator's computer.</p>\n<p>Reproduction steps:</p>\n<ul>\n<li>Take an order's number.</li>\n<li>Log in as an administrator.</li>\n<li>Visit that order's adjustments section (<em>Orders -&gt; {Click on number} -&gt; Adjustments</em>) and check that its adjustments are finalized (closed padlock under the <strong>State</strong> column).</li>\n<li>On another tab, visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/unfinalize</code>.</li>\n<li>Notice how the adjustments are unfinalized (open padlock), even if the previous was a <code>GET</code> request which could have been linked from any other site.</li>\n<li>Visit <code>{your_site_url}/admin/orders/{order_number}/adjustments/finalize</code>.</li>\n<li>Notice how the adjustments are again finalized.</li>\n</ul>\n<p>That happened because both routes were handled as <code>GET</code> requests, which are skipped by Rails anti-forgery protection.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Users should upgrade to solidus_backend v3.1.6, v3.0.6, or v2.11.16, depending on the major and minor versions in use.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://api.rubyonrails.org/classes/ActionController/RequestForgeryProtection.html\">Rails CSRF protection</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an <a href=\"https://github.com/solidusio/solidus/issues\">issue</a> or a <a href=\"https://github.com/solidusio/solidus/discussions\">discussion</a> in Solidus.</li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428\">https://github.com/solidusio/solidus/security/advisories/GHSA-8639-qx56-r428</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-31000\">https://nvd.nist.gov/vuln/detail/CVE-2022-31000</a></li>\n<li><a href=\"https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c\">https://github.com/solidusio/solidus/commit/de796a2e0be7f154cae48b46e267501559d9716c</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8639-qx56-r428\">https://github.com/advisories/GHSA-8639-qx56-r428</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8639-qx56-r428",
            "title": "[solidus_backend] CSRF allows attacker to finalize/unfinalize order adjustments in solidus_backend",
            "date_modified": "2022-06-01T20:26:43.000Z",
            "date_published": "2022-06-01T20:26:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8639-qx56-r428"
            }
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the multipart parsing\ncomponent of Rack.  This vulnerability has been assigned the CVE identifier\nCVE-2022-30122.</p>\n<p>Versions Affected:  &gt;= 1.2\nNot affected:       &lt; 1.2\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted multipart POST requests can cause Rack's multipart parser to\ntake much longer than expected, leading to a possible denial of service\nvulnerability.</p>\n<p>Impacted code will use Rack's multipart parser to parse multipart posts.  This\nincludes directly using the multipart parser like this:</p>\n<pre><code>params = Rack::Multipart.parse_multipart(env)\n</code></pre>\n<p>But it also includes reading POST data from a Rack request object like this:</p>\n<pre><code>p request.POST # read POST data\np request.params # reads both query params and POST data\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There are no feasible workarounds for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk\">https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxqx-xwvh-44m2\">https://github.com/advisories/GHSA-hxqx-xwvh-44m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2",
            "title": "[rack] Denial of Service Vulnerability in Rack Multipart Parsing",
            "date_modified": "2022-05-27T16:36:55.000Z",
            "date_published": "2022-05-27T16:36:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2"
            }
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the multipart parsing\ncomponent of Rack.  This vulnerability has been assigned the CVE identifier\nCVE-2022-30122.</p>\n<p>Versions Affected:  &gt;= 1.2\nNot affected:       &lt; 1.2\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted multipart POST requests can cause Rack's multipart parser to\ntake much longer than expected, leading to a possible denial of service\nvulnerability.</p>\n<p>Impacted code will use Rack's multipart parser to parse multipart posts.  This\nincludes directly using the multipart parser like this:</p>\n<pre><code>params = Rack::Multipart.parse_multipart(env)\n</code></pre>\n<p>But it also includes reading POST data from a Rack request object like this:</p>\n<pre><code>p request.POST # read POST data\np request.params # reads both query params and POST data\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There are no feasible workarounds for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk\">https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxqx-xwvh-44m2\">https://github.com/advisories/GHSA-hxqx-xwvh-44m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2",
            "title": "[rack] Denial of Service Vulnerability in Rack Multipart Parsing",
            "date_modified": "2022-05-27T16:36:55.000Z",
            "date_published": "2022-05-27T16:36:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2"
            }
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the multipart parsing\ncomponent of Rack.  This vulnerability has been assigned the CVE identifier\nCVE-2022-30122.</p>\n<p>Versions Affected:  &gt;= 1.2\nNot affected:       &lt; 1.2\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted multipart POST requests can cause Rack's multipart parser to\ntake much longer than expected, leading to a possible denial of service\nvulnerability.</p>\n<p>Impacted code will use Rack's multipart parser to parse multipart posts.  This\nincludes directly using the multipart parser like this:</p>\n<pre><code>params = Rack::Multipart.parse_multipart(env)\n</code></pre>\n<p>But it also includes reading POST data from a Rack request object like this:</p>\n<pre><code>p request.POST # read POST data\np request.params # reads both query params and POST data\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There are no feasible workarounds for this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30122.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk\">https://groups.google.com/g/ruby-security-ann/c/L2Axto442qk</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hxqx-xwvh-44m2\">https://github.com/advisories/GHSA-hxqx-xwvh-44m2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2",
            "title": "[rack] Denial of Service Vulnerability in Rack Multipart Parsing",
            "date_modified": "2022-05-27T16:36:55.000Z",
            "date_published": "2022-05-27T16:36:52.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hxqx-xwvh-44m2"
            }
        },
        {
            "content_html": "<p>There is a possible shell escape sequence injection vulnerability in the Lint\nand CommonLogger components of Rack.  This vulnerability has been assigned the\nCVE identifier CVE-2022-30123.</p>\n<p>Versions Affected:  All.\nNot affected:       None\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted requests can cause shell escape sequences to be written to\nthe terminal via Rack's Lint middleware and CommonLogger middleware.  These\nescape sequences can be leveraged to possibly execute commands in the victim's\nterminal.</p>\n<p>Impacted applications will have either of these middleware installed, and\nvulnerable apps may have something like this:</p>\n<pre><code>use Rack::Lint\n</code></pre>\n<p>Or</p>\n<pre><code>use Rack::CommonLogger\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Remove these middleware from your application</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8\">https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88\">https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wq4h-7r42-5hrr\">https://github.com/advisories/GHSA-wq4h-7r42-5hrr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr",
            "title": "[rack] Possible shell escape sequence injection vulnerability in Rack",
            "date_modified": "2022-06-01T19:28:39.000Z",
            "date_published": "2022-05-27T16:36:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr"
            }
        },
        {
            "content_html": "<p>There is a possible shell escape sequence injection vulnerability in the Lint\nand CommonLogger components of Rack.  This vulnerability has been assigned the\nCVE identifier CVE-2022-30123.</p>\n<p>Versions Affected:  All.\nNot affected:       None\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted requests can cause shell escape sequences to be written to\nthe terminal via Rack's Lint middleware and CommonLogger middleware.  These\nescape sequences can be leveraged to possibly execute commands in the victim's\nterminal.</p>\n<p>Impacted applications will have either of these middleware installed, and\nvulnerable apps may have something like this:</p>\n<pre><code>use Rack::Lint\n</code></pre>\n<p>Or</p>\n<pre><code>use Rack::CommonLogger\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Remove these middleware from your application</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8\">https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88\">https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wq4h-7r42-5hrr\">https://github.com/advisories/GHSA-wq4h-7r42-5hrr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr",
            "title": "[rack] Possible shell escape sequence injection vulnerability in Rack",
            "date_modified": "2022-06-01T19:28:39.000Z",
            "date_published": "2022-05-27T16:36:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr"
            }
        },
        {
            "content_html": "<p>There is a possible shell escape sequence injection vulnerability in the Lint\nand CommonLogger components of Rack.  This vulnerability has been assigned the\nCVE identifier CVE-2022-30123.</p>\n<p>Versions Affected:  All.\nNot affected:       None\nFixed Versions:     2.0.9.1, 2.1.4.1, 2.2.3.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Carefully crafted requests can cause shell escape sequences to be written to\nthe terminal via Rack's Lint middleware and CommonLogger middleware.  These\nescape sequences can be leveraged to possibly execute commands in the victim's\nterminal.</p>\n<p>Impacted applications will have either of these middleware installed, and\nvulnerable apps may have something like this:</p>\n<pre><code>use Rack::Lint\n</code></pre>\n<p>Or</p>\n<pre><code>use Rack::CommonLogger\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Remove these middleware from your application</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2022-30123.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8\">https://groups.google.com/g/ruby-security-ann/c/LWB10kWzag8</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88\">https://github.com/rack/rack/commit/b426cc224908ec6ed6eb8729325392b048215d88</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wq4h-7r42-5hrr\">https://github.com/advisories/GHSA-wq4h-7r42-5hrr</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr",
            "title": "[rack] Possible shell escape sequence injection vulnerability in Rack",
            "date_modified": "2022-06-01T19:28:39.000Z",
            "date_published": "2022-05-27T16:36:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wq4h-7r42-5hrr"
            }
        },
        {
            "content_html": "<p><em>NOTE: A previous patch, 1.4.2, fixed the heap memory issue, but could still lead to a DoS infinite loop. Please update to version 1.4.3</em></p>\n<p>The 1.x branch and the 2.x branch of <a href=\"https://github.com/lloyd/yajl\">yajl</a> contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <a href=\"https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64\">reallocation logic at yajl_buf.c#L64</a> may result in the <code>need</code> 32bit integer wrapping to 0 when <code>need</code> approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf-&gt;alloc into a small heap chunk.</p>\n<p>These integers are declared as <code>size_t</code> in the 2.x branch of <code>yajl</code>, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which <code>size_t</code> is a 32bit integer.</p>\n<p>Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>We rate this as a moderate severity vulnerability which mostly impacts process availability as we believe exploitation for arbitrary code execution to be unlikely.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in yajl-ruby 1.4.3</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Avoid passing large inputs to YAJL</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64\">https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/brianmario/yajl-ruby/issues\">yajl-ruby</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm\">https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24795\">https://nvd.nist.gov/vuln/detail/CVE-2022-24795</a></li>\n<li><a href=\"https://github.com/brianmario/yajl-ruby/commit/7168bd79b888900aa94523301126f968a93eb3a6\">https://github.com/brianmario/yajl-ruby/commit/7168bd79b888900aa94523301126f968a93eb3a6</a></li>\n<li><a href=\"https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64\">https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj47-x69x-mxrm\">https://github.com/advisories/GHSA-jj47-x69x-mxrm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj47-x69x-mxrm",
            "title": "[yajl-ruby] Buffer Overflow in yajl-ruby",
            "date_modified": "2022-05-26T18:54:25.000Z",
            "date_published": "2022-04-05T15:55:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj47-x69x-mxrm"
            }
        },
        {
            "content_html": "<p>The random_password_generator (aka RandomPasswordGenerator) gem through 1.0.0 for Ruby uses Kernel#rand to generate passwords, which, due to its cyclic nature, can facilitate password prediction.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-25061\">https://nvd.nist.gov/vuln/detail/CVE-2019-25061</a></li>\n<li><a href=\"https://github.com/bvsatyaram/random_password_generator/pull/1\">https://github.com/bvsatyaram/random_password_generator/pull/1</a></li>\n<li><a href=\"https://github.com/bvsatyaram/random_password_generator/blob/2855e8d7d8803dbb580ddd6cf13846394eb4530e/lib/random_password_generator.rb#L23\">https://github.com/bvsatyaram/random_password_generator/blob/2855e8d7d8803dbb580ddd6cf13846394eb4530e/lib/random_password_generator.rb#L23</a></li>\n<li><a href=\"https://ruby-doc.org/core-3.1.2/Random.html\">https://ruby-doc.org/core-3.1.2/Random.html</a></li>\n<li><a href=\"https://stackoverflow.com/questions/42170239/security-of-rand-in-ruby-compared-to-other-methods/42170560\">https://stackoverflow.com/questions/42170239/security-of-rand-in-ruby-compared-to-other-methods/42170560</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ggfx-h9xj-5v9c\">https://github.com/advisories/GHSA-ggfx-h9xj-5v9c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ggfx-h9xj-5v9c",
            "title": "[random_password_generator] Insecure PRNG use in random_password_generator",
            "date_modified": "2022-05-31T23:27:44.000Z",
            "date_published": "2022-05-19T00:00:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ggfx-h9xj-5v9c"
            }
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri <code>&lt; v1.13.6</code> does not type-check all inputs into the XML and HTML4 SAX parsers. For CRuby users, this may allow specially crafted untrusted inputs to cause illegal memory access errors (segfault) or reads from unrelated memory.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>The Nokogiri maintainers have evaluated this as <strong>High 8.2</strong> (CVSS3.1).</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>CRuby users should upgrade to Nokogiri <code>&gt;= 1.13.6</code>.</p>\n<p>JRuby users are not affected.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>To avoid this vulnerability in affected applications, ensure the untrusted input is a <code>String</code> by calling <code>#to_s</code> or equivalent.</p>\n<h3 id=\"credit\">Credit</h3>\n<p>This vulnerability was responsibly reported by @agustingianni and the Github Security Lab.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xh29-r2w5-wx8m\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xh29-r2w5-wx8m</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29181\">https://nvd.nist.gov/vuln/detail/CVE-2022-29181</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/commit/db05ba9a1bd4b90aa6c76742cf6102a7c7297267\">https://github.com/sparklemotion/nokogiri/commit/db05ba9a1bd4b90aa6c76742cf6102a7c7297267</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.13.6\">https://github.com/sparklemotion/nokogiri/releases/tag/v1.13.6</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-031_GHSL-2022-032_Nokogiri/\">https://securitylab.github.com/advisories/GHSL-2022-031_GHSL-2022-032_Nokogiri/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xh29-r2w5-wx8m\">https://github.com/advisories/GHSA-xh29-r2w5-wx8m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xh29-r2w5-wx8m",
            "title": "[nokogiri] Improper Handling of Unexpected Data Type in Nokogiri",
            "date_modified": "2022-05-23T23:15:16.000Z",
            "date_published": "2022-05-23T23:15:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xh29-r2w5-wx8m"
            }
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri v1.13.5 upgrades the packaged version of its dependency libxml2 from v2.9.13 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.9.14\">v2.9.14</a>.</p>\n<p>libxml2 v2.9.14 addresses <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29824\">CVE-2022-29824</a>. This version also includes several security-related bug fixes for which CVEs were not created, including a potential double-free, potential memory leaks, and integer-overflow.</p>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri <code>&lt; 1.13.5</code>, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> and <code>libxslt</code> release announcements.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Upgrade to Nokogiri <code>&gt;= 1.13.5</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile and link Nokogiri against external libraries libxml2 <code>&gt;= 2.9.14</code> which will also address these same issues.</p>\n<h3 id=\"impact\">Impact</h3>\n<h4 id=\"libxml2-cve-2022-29824\">libxml2 <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29824\">CVE-2022-29824</a></h4>\n<ul>\n<li><strong>CVSS3 score</strong>:<ul>\n<li>Unspecified upstream</li>\n<li>Nokogiri maintainers evaluate at 8.6 (High) (<a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H\">CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H</a>). Note that this is different from the CVSS assessed by NVD.</li>\n</ul>\n</li>\n<li><strong>Type</strong>: Denial of service, information disclosure</li>\n<li><strong>Description</strong>: In libxml2 before 2.9.14, several buffer handling functions in buf.c (xmlBuf*) and tree.c (xmlBuffer*) don't check for integer overflows. This can result in out-of-bounds memory writes. Exploitation requires a victim to open a crafted, multi-gigabyte XML file. Other software using libxml2's buffer functions, for example libxslt through 1.1.35, is affected as well.</li>\n<li><strong>Fixed</strong>: <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2554a24\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2554a24</a></li>\n</ul>\n<p>All versions of libml2 prior to v2.9.14 are affected.</p>\n<p>Applications parsing or serializing multi-gigabyte documents (in excess of INT_MAX bytes) may be vulnerable to an integer overflow bug in buffer handling that could lead to exposure of confidential data, modification of unrelated data, or a segmentation fault resulting in a denial-of-service.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.9.14\">libxml2 v2.9.14 release notes</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29824\">CVE-2022-29824</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/119.html\">CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-cgx6-hpwq-fhv5\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-cgx6-hpwq-fhv5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29824\">https://nvd.nist.gov/vuln/detail/CVE-2022-29824</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.9.14\">https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.9.14</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cgx6-hpwq-fhv5\">https://github.com/advisories/GHSA-cgx6-hpwq-fhv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cgx6-hpwq-fhv5",
            "title": "[nokogiri] Integer Overflow or Wraparound in libxml2 affects Nokogiri",
            "date_modified": "2022-05-18T20:06:49.000Z",
            "date_published": "2022-05-18T20:06:48.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cgx6-hpwq-fhv5"
            }
        },
        {
            "content_html": "<p>CSV-Safe gem &lt; 3.0.0 doesn't filter out special characters which could trigger CSV Injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-28481\">https://nvd.nist.gov/vuln/detail/CVE-2022-28481</a></li>\n<li><a href=\"https://github.com/zvory/csv-safe/issues/7\">https://github.com/zvory/csv-safe/issues/7</a></li>\n<li><a href=\"https://github.com/zvory/csv-safe/pull/8\">https://github.com/zvory/csv-safe/pull/8</a></li>\n<li><a href=\"https://github.com/WeblateOrg/weblate/commit/d9e136ff228e3760fd6dd7572869ac38e9a81809\">https://github.com/WeblateOrg/weblate/commit/d9e136ff228e3760fd6dd7572869ac38e9a81809</a></li>\n<li><a href=\"https://hackerone.com/reports/223999\">https://hackerone.com/reports/223999</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f55g-x8qq-2569\">https://github.com/advisories/GHSA-f55g-x8qq-2569</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f55g-x8qq-2569",
            "title": "[csv-safe] CSV-Safe improperly filters special characters potentially leading to CSV injection",
            "date_modified": "2022-05-18T19:20:00.000Z",
            "date_published": "2022-05-03T00:00:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f55g-x8qq-2569"
            }
        },
        {
            "content_html": "<p>Sinatra before 2.2.0 does not validate that the expanded path matches public_dir when serving static files.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29970\">https://nvd.nist.gov/vuln/detail/CVE-2022-29970</a></li>\n<li><a href=\"https://github.com/sinatra/sinatra/pull/1683/commits/462c3ca1db53ed3cfc394cf5948e9c948ad1c10e\">https://github.com/sinatra/sinatra/pull/1683/commits/462c3ca1db53ed3cfc394cf5948e9c948ad1c10e</a></li>\n<li><a href=\"https://github.com/skylightio/skylight-ruby/pull/294\">https://github.com/skylightio/skylight-ruby/pull/294</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qp49-3pvw-x4m5\">https://github.com/advisories/GHSA-qp49-3pvw-x4m5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qp49-3pvw-x4m5",
            "title": "[sinatra] sinatra does not validate expanded path matches",
            "date_modified": "2022-05-10T14:09:42.000Z",
            "date_published": "2022-05-03T00:00:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qp49-3pvw-x4m5"
            }
        },
        {
            "content_html": "<p>Gibbon v3.4.3 and below allows attackers to execute a Server-Side Request Forgery (SSRF) via a crafted URL. This issue has been resolved in version 3.4.4</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27311\">https://nvd.nist.gov/vuln/detail/CVE-2022-27311</a></li>\n<li><a href=\"https://github.com/amro/gibbon/pull/321\">https://github.com/amro/gibbon/pull/321</a></li>\n<li><a href=\"https://github.com/amro/gibbon/pull/321#issuecomment-1113147155\">https://github.com/amro/gibbon/pull/321#issuecomment-1113147155</a></li>\n<li><a href=\"https://github.com/amro/gibbon/commit/b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b\">https://github.com/amro/gibbon/commit/b2eb99ed304d7491a6d348a5bbdc83a008fc6e0b</a></li>\n<li><a href=\"https://github.com/amro/gibbon/commit/cade20ca2438cd1b182dad70cbb77fb895779d10\">https://github.com/amro/gibbon/commit/cade20ca2438cd1b182dad70cbb77fb895779d10</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vx9g-377x-xwxq\">https://github.com/advisories/GHSA-vx9g-377x-xwxq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vx9g-377x-xwxq",
            "title": "[gibbon] Server side request forgery in gibbon",
            "date_modified": "2022-06-01T22:20:05.000Z",
            "date_published": "2022-04-26T00:00:41.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vx9g-377x-xwxq"
            }
        },
        {
            "content_html": "<p>Blazer before 2.6.0 allows SQL Injection. In certain circumstances, an attacker could get a user to run a query they would not have normally run.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-29498\">https://nvd.nist.gov/vuln/detail/CVE-2022-29498</a></li>\n<li><a href=\"https://github.com/ankane/blazer/issues/392\">https://github.com/ankane/blazer/issues/392</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qf9q-q4hh-qph3\">https://github.com/advisories/GHSA-qf9q-q4hh-qph3</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qf9q-q4hh-qph3",
            "title": "[blazer] SQL injection in blazer",
            "date_modified": "2022-04-29T21:07:18.000Z",
            "date_published": "2022-04-22T00:00:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qf9q-q4hh-qph3"
            }
        },
        {
            "content_html": "<p>The package git before 1.11.0 are vulnerable to Command Injection via git argument injection. When calling the fetch(remote = 'origin', opts = {}) function, the remote parameter is passed to the git fetch subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-25648\">https://nvd.nist.gov/vuln/detail/CVE-2022-25648</a></li>\n<li><a href=\"https://github.com/ruby-git/ruby-git/pull/569\">https://github.com/ruby-git/ruby-git/pull/569</a></li>\n<li><a href=\"https://github.com/ruby-git/ruby-git/releases/tag/v1.11.0\">https://github.com/ruby-git/ruby-git/releases/tag/v1.11.0</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-RUBY-GIT-2421270\">https://snyk.io/vuln/SNYK-RUBY-GIT-2421270</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-69p6-wvmq-27gg\">https://github.com/advisories/GHSA-69p6-wvmq-27gg</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-69p6-wvmq-27gg",
            "title": "[git] Command injection in ruby-git",
            "date_modified": "2022-04-28T21:13:23.000Z",
            "date_published": "2022-04-20T00:00:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-69p6-wvmq-27gg"
            }
        },
        {
            "content_html": "<p>There is a possible XSS vulnerability in Action View tag helpers.  Passing\nuntrusted input as hash keys can lead to a possible XSS vulnerability. This\nvulnerability has been assigned the CVE identifier CVE-2022-27777.</p>\n<p>Versions Affected:  ALL\nNot affected:       NONE\nFixed Versions:     7.0.2.4, 6.1.5.1, 6.0.4.8, 5.2.7.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>If untrusted data is passed as the hash key for tag attributes, there is a\npossibility that the untrusted data may not be properly escaped which can\nlead to an XSS vulnerability.</p>\n<p>Impacted code will look something like this:</p>\n<pre><code>check_box_tag('thename', 'thevalue', false, aria: { malicious_input =&gt; 'thevalueofaria' })\n</code></pre>\n<p>Where the \"malicious_input\" variable contains untrusted data.</p>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The FIXED releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Escape the untrusted data before using it as a key for tag helper methods.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-27777\">https://nvd.nist.gov/vuln/detail/CVE-2022-27777</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/649516ce0feb699ae06a8c5e81df75d460cc9a85\">https://github.com/rails/rails/commit/649516ce0feb699ae06a8c5e81df75d460cc9a85</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionview/CVE-2022-27777.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionview/CVE-2022-27777.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/9wJPEDv-iRw\">https://groups.google.com/g/ruby-security-ann/c/9wJPEDv-iRw</a></li>\n<li><a href=\"https://rubyonrails.org/2022/4/26/Rails-7-0-2-4-6-1-5-1-6-0-4-8-and-5-2-7-1-have-been-released\">https://rubyonrails.org/2022/4/26/Rails-7-0-2-4-6-1-5-1-6-0-4-8-and-5-2-7-1-have-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-ch3h-j2vf-95pv\">https://github.com/advisories/GHSA-ch3h-j2vf-95pv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-ch3h-j2vf-95pv",
            "title": "[actionview] XSS Vulnerability in Action View tag helpers",
            "date_modified": "2022-04-27T23:00:15.000Z",
            "date_published": "2022-04-27T22:32:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-ch3h-j2vf-95pv"
            }
        }
    ]
}