{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>\n<p><strong>Vulnerable Versions</strong>: </p>\n<ul>\n<li>1.x series up to and including 1.3.1</li>\n<li>2.x series up to and including 2.1.0</li>\n</ul>\n<p><strong>Fixed Versions</strong>: </p>\n<ul>\n<li>v1.3.2</li>\n<li>v2.1.1</li>\n</ul>\n<p><strong>Vector</strong>:</p>\n<ul>\n<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>\n</ul>\n<pre><code class=\"language-js\">document.addEventListener('copy', function(e){\n  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class=\"123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//\"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');\n  e.preventDefault();\n});\n</code></pre>\n<p>and pasting into the Trix editor, the script within the content is executed.</p>\n<ul>\n<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>\n</ul>\n<pre><code class=\"language-js\">document.write(`copy&lt;div data-trix-attachment=\"{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}\"&gt;&lt;/div&gt;me`);\n</code></pre>\n<h3 id=\"impact\">Impact:</h3>\n<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>\n<h3 id=\"remediation\">Remediation:</h3>\n<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>\n<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>\n<h3 id=\"references\">References:</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.1\">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1147\">https://github.com/basecamp/trix/pull/1147</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1153\">https://github.com/basecamp/trix/pull/1153</a></li>\n</ul>\n<p><strong>Credit</strong>: These issues were reported by security researchers <a href=\"https://hackerone.com/loknop\">loknop</a> and <a href=\"https://hackerone.com/pinpie\">pinpie</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1147\">https://github.com/basecamp/trix/pull/1147</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad\">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>\n<li><a href=\"https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554\">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.1\">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34341\">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c\">https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3\">https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5\">https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803\">https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released\">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released</a></li>\n<li><a href=\"https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released\">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjqp-xr96-cj99",
            "title": "[actiontext] Trix Editor Arbitrary Code Execution Vulnerability",
            "date_modified": "2024-06-03T17:24:57.000Z",
            "date_published": "2024-05-07T16:49:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjqp-xr96-cj99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application.</p>\n<p><strong>Vulnerable Versions</strong>: </p>\n<ul>\n<li>1.x series up to and including 1.3.1</li>\n<li>2.x series up to and including 2.1.0</li>\n</ul>\n<p><strong>Fixed Versions</strong>: </p>\n<ul>\n<li>v1.3.2</li>\n<li>v2.1.1</li>\n</ul>\n<p><strong>Vector</strong>:</p>\n<ul>\n<li><strong>Bug 1</strong>: When copying content manipulated by a script, such as:</li>\n</ul>\n<pre><code class=\"language-js\">document.addEventListener('copy', function(e){\n  e.clipboardData.setData('text/html', '&lt;div&gt;&lt;noscript&gt;&lt;div class=\"123&lt;/noscript&gt;456&lt;img src=1 onerror=alert(1)//\"&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;');\n  e.preventDefault();\n});\n</code></pre>\n<p>and pasting into the Trix editor, the script within the content is executed.</p>\n<ul>\n<li><strong>Bug 2</strong>: Similar execution occurs with content structured as:</li>\n</ul>\n<pre><code class=\"language-js\">document.write(`copy&lt;div data-trix-attachment=\"{&amp;quot;contentType&amp;quot;:&amp;quot;text/html&amp;quot;,&amp;quot;content&amp;quot;:&amp;quot;&amp;lt;img src=1 onerror=alert(101)&amp;gt;HELLO123&amp;quot;}\"&gt;&lt;/div&gt;me`);\n</code></pre>\n<h3 id=\"impact\">Impact:</h3>\n<p>An attacker could exploit these vulnerabilities to execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed.</p>\n<h3 id=\"remediation\">Remediation:</h3>\n<p><strong>Update Recommendation</strong>: Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.</p>\n<p><strong>CSP Enhancement</strong>: Additionally, enhancing the Content Security Policy (CSP) to disallow inline scripts can significantly mitigate the risk of such vulnerabilities. Set CSP policies such as script-src 'self' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.</p>\n<h3 id=\"references\">References:</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.1\">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1147\">https://github.com/basecamp/trix/pull/1147</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1153\">https://github.com/basecamp/trix/pull/1153</a></li>\n</ul>\n<p><strong>Credit</strong>: These issues were reported by security researchers <a href=\"https://hackerone.com/loknop\">loknop</a> and <a href=\"https://hackerone.com/pinpie\">pinpie</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1147\">https://github.com/basecamp/trix/pull/1147</a></li>\n<li><a href=\"https://github.com/basecamp/trix/pull/1149\">https://github.com/basecamp/trix/pull/1149</a></li>\n<li><a href=\"https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad\">https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad</a></li>\n<li><a href=\"https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554\">https://github.com/basecamp/trix/commit/841ff19b53f349915100bca8fcb488214ff93554</a></li>\n<li><a href=\"https://github.com/basecamp/trix/releases/tag/v2.1.1\">https://github.com/basecamp/trix/releases/tag/v2.1.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-34341\">https://nvd.nist.gov/vuln/detail/CVE-2024-34341</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c\">https://github.com/rails/rails/commit/07e6c88cc4defe6f6b8d28e79eb13a518e15b14c</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3\">https://github.com/rails/rails/commit/260cb392fc1ee91d0b749cff08d1c8d54b230bd3</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5\">https://github.com/rails/rails/commit/73fac32511eefdd45d8f00fecc2b8cc5408ea6d5</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803\">https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actiontext/CVE-2024-34341.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released\">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-2-and-7-1-3-3-have-been-released</a></li>\n<li><a href=\"https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released\">https://rubyonrails.org/2024/5/17/Rails-Versions-7-0-8-3-has-been-released</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qjqp-xr96-cj99\">https://github.com/advisories/GHSA-qjqp-xr96-cj99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qjqp-xr96-cj99",
            "title": "[actiontext] Trix Editor Arbitrary Code Execution Vulnerability",
            "date_modified": "2024-06-03T17:24:57.000Z",
            "date_published": "2024-05-07T16:49:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qjqp-xr96-cj99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users settings their active admin form legends dynamically may be vulnerable to stored XSS, as long as its value can be injected directly by a malicious user.</p>\n<p>For example:</p>\n<ul>\n<li>A public web application allows users to create entities with arbitrary names.</li>\n<li>Active Admin is used to administrate these entities through a private backend.</li>\n<li>The form to edit these entities in the private backend has the following shape (note the dynamic <code>name</code> value dependent on an attribute of the <code>resource</code>):</li>\n</ul>\n<pre><code class=\"language-ruby\">  form do |f|\n    f.inputs name: resource.name do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n</code></pre>\n<p>Then a malicious user could create an entity with a payload that would get executed in the active admin administrator's browser.</p>\n<p>Both <code>form</code> blocks with an implicit or explicit name (i.e., both <code>form resource.name</code> or <code>form name: resource.name</code> would suffer from the problem), where the value of the name can be arbitrarily set by non admin users.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed in ActiveAdmin 3.2.2 and ActiveAdmin 4.0.0.beta7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can workaround this problem without upgrading by explicitly escaping the form name using an HTML escaping utility. For example:</p>\n<pre><code class=\"language-ruby\">  form do |f|\n    f.inputs name: ERB::Util.html_escape(resource.name) do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n</code></pre>\n<p>Upgrading is of course recommended though.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://owasp.org/www-community/attacks/xss/#stored-xss-attacks\">https://owasp.org/www-community/attacks/xss/#stored-xss-attacks</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/activeadmin/activeadmin/security/advisories/GHSA-9mg6-x45v-hcfm\">https://github.com/activeadmin/activeadmin/security/advisories/GHSA-9mg6-x45v-hcfm</a></li>\n<li><a href=\"https://github.com/activeadmin/activeadmin/pull/8349\">https://github.com/activeadmin/activeadmin/pull/8349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37031\">https://nvd.nist.gov/vuln/detail/CVE-2024-37031</a></li>\n<li><a href=\"https://github.com/activeadmin/activeadmin/releases/tag/v3.2.2\">https://github.com/activeadmin/activeadmin/releases/tag/v3.2.2</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activeadmin/CVE-2024-37031.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activeadmin/CVE-2024-37031.yml</a></li>\n<li><a href=\"https://rubygems.org/gems/activeadmin/versions/3.2.2\">https://rubygems.org/gems/activeadmin/versions/3.2.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mg6-x45v-hcfm\">https://github.com/advisories/GHSA-9mg6-x45v-hcfm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mg6-x45v-hcfm",
            "title": "[activeadmin] activeadmin vulnerable to stored persistent cross-site scripting (XSS) in dynamic form legends",
            "date_modified": "2024-06-04T02:44:58.000Z",
            "date_published": "2024-06-02T22:32:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mg6-x45v-hcfm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Users settings their active admin form legends dynamically may be vulnerable to stored XSS, as long as its value can be injected directly by a malicious user.</p>\n<p>For example:</p>\n<ul>\n<li>A public web application allows users to create entities with arbitrary names.</li>\n<li>Active Admin is used to administrate these entities through a private backend.</li>\n<li>The form to edit these entities in the private backend has the following shape (note the dynamic <code>name</code> value dependent on an attribute of the <code>resource</code>):</li>\n</ul>\n<pre><code class=\"language-ruby\">  form do |f|\n    f.inputs name: resource.name do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n</code></pre>\n<p>Then a malicious user could create an entity with a payload that would get executed in the active admin administrator's browser.</p>\n<p>Both <code>form</code> blocks with an implicit or explicit name (i.e., both <code>form resource.name</code> or <code>form name: resource.name</code> would suffer from the problem), where the value of the name can be arbitrarily set by non admin users.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The problem has been fixed in ActiveAdmin 3.2.2 and ActiveAdmin 4.0.0.beta7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Users can workaround this problem without upgrading by explicitly escaping the form name using an HTML escaping utility. For example:</p>\n<pre><code class=\"language-ruby\">  form do |f|\n    f.inputs name: ERB::Util.html_escape(resource.name) do\n      f.input :name\n      f.input :description\n    end\n\n    f.actions\n  end\n</code></pre>\n<p>Upgrading is of course recommended though.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://owasp.org/www-community/attacks/xss/#stored-xss-attacks\">https://owasp.org/www-community/attacks/xss/#stored-xss-attacks</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/activeadmin/activeadmin/security/advisories/GHSA-9mg6-x45v-hcfm\">https://github.com/activeadmin/activeadmin/security/advisories/GHSA-9mg6-x45v-hcfm</a></li>\n<li><a href=\"https://github.com/activeadmin/activeadmin/pull/8349\">https://github.com/activeadmin/activeadmin/pull/8349</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-37031\">https://nvd.nist.gov/vuln/detail/CVE-2024-37031</a></li>\n<li><a href=\"https://github.com/activeadmin/activeadmin/releases/tag/v3.2.2\">https://github.com/activeadmin/activeadmin/releases/tag/v3.2.2</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activeadmin/CVE-2024-37031.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activeadmin/CVE-2024-37031.yml</a></li>\n<li><a href=\"https://rubygems.org/gems/activeadmin/versions/3.2.2\">https://rubygems.org/gems/activeadmin/versions/3.2.2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9mg6-x45v-hcfm\">https://github.com/advisories/GHSA-9mg6-x45v-hcfm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9mg6-x45v-hcfm",
            "title": "[activeadmin] activeadmin vulnerable to stored persistent cross-site scripting (XSS) in dynamic form legends",
            "date_modified": "2024-06-04T02:44:58.000Z",
            "date_published": "2024-06-02T22:32:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9mg6-x45v-hcfm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>The next ruby code is vulnerable to denial of service due to the fact that the user controlled data <code>profiler_runs</code> was not contrained to any limitation. Which would lead to allocating resources on the server side with no limitation (CWE-770).</p>\n<pre><code class=\"language-ruby\">        runs = (request.params['profiler_runs'] || @times).to_i\n        result = @profile.profile do\n          runs.times { @app.call(env) }\n        end\n</code></pre>\n<p>An exploit as such <code>curl --fail \"http://127.0.0.1:9292/?profiler_runs=9999999999&amp;profile=process_time\"</code> may cause resource exhaution by a remotely controlled value.</p>\n<h3 id=\"poc\">PoC</h3>\n<p>Herein the <code>config.ru</code> file: </p>\n<pre><code class=\"language-ruby\">require 'rack'\nrequire 'rack/contrib'\n\nuse Rack::Profiler # if ENV['RACK_ENV'] == 'development'\n\n# Define a Rack application\napp = lambda do |env|\n  # Your application logic goes here\n  [200, {}, [\"Hello World\"]]\nend\n\n# Run the Rack application\nrun app\n</code></pre>\n<p>A Dockerfile:</p>\n<pre><code class=\"language-Dockerfile\"># Use the official Ruby image as a base\nFROM ruby:latest\n\n# Set the working directory inside the container\nWORKDIR /app\n\n# Copy the custom config.ru file into the container\nCOPY config.ru .\nCOPY Gemfile .\n\n# Install rack and the gems needed to run the app\nRUN bundle install\n\n# Expose the port that rackup will listen on\nEXPOSE 9292\n\n# Run rackup when the container starts\nENTRYPOINT [\"rackup\",\"--host\",\"0.0.0.0\",\"--port\",\"9292\"]\n\n# Health check\nHEALTHCHECK --interval=3s --timeout=10s --start-period=2s --retries=3 CMD curl --fail http://localhost:9292/ || exit 1\n</code></pre>\n<p>A Gemfile </p>\n<pre><code>source 'https://rubygems.org'\n\ngem 'rack', '~&gt; 2.0'\ngem 'rack-contrib', '~&gt; 2.4'\ngem 'rackup'\ngem 'ruby-prof'\n</code></pre>\n<p>A Docker compose</p>\n<pre><code class=\"language-Dockerfile\">services:\n  app:\n    build:\n      context: .\n    ports:\n      - \"9292:9292\"\n</code></pre>\n<p>To run the PoC </p>\n<pre><code class=\"language-bash\">docker compose up --build\n</code></pre>\n<p>To exploit DoS: </p>\n<pre><code class=\"language-bash\">curl  \"http://127.0.0.1:9292/?profiler_runs=9999999999&amp;profile=process_time\"\n</code></pre>\n<h3 id=\"impact\">Impact</h3>\n<ul>\n<li>Potential denial of service by remotely user-controlled data.</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack-contrib/security/advisories/GHSA-8c8q-2xw3-j869\">https://github.com/rack/rack-contrib/security/advisories/GHSA-8c8q-2xw3-j869</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35231\">https://nvd.nist.gov/vuln/detail/CVE-2024-35231</a></li>\n<li><a href=\"https://github.com/rack/rack-contrib/commit/0eec2a9836329051c6742549e65a94a4c24fe6f7\">https://github.com/rack/rack-contrib/commit/0eec2a9836329051c6742549e65a94a4c24fe6f7</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-contrib/CVE-2024-35231.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack-contrib/CVE-2024-35231.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8c8q-2xw3-j869\">https://github.com/advisories/GHSA-8c8q-2xw3-j869</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8c8q-2xw3-j869",
            "title": "[rack-contrib] rack-contrib vulnerable to Denial of Service due to the unconstrained value of the incoming \"profiler_runs\" parameter",
            "date_modified": "2024-05-31T20:42:29.000Z",
            "date_published": "2024-05-28T15:48:43.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8c8q-2xw3-j869"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A moderate severity security vulnerability has been identified in the Kaminari pagination library for Ruby on Rails, concerning insecure file permissions. This advisory outlines the vulnerability, affected versions, and provides guidance for mitigation.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>This vulnerability is of moderate severity due to the potential for unauthorized write access to particular Ruby files managed by the library. Such access could lead to the alteration of application behavior or data integrity issues.</p>\n<h3 id=\"resolution\">Resolution</h3>\n<p>Those who use the <code>gem install</code> command, such as <code>gem install kaminari -v 0.16.1</code>, <code>gem unpack kaminari -v 0.16.1</code>, or <code>bundle install</code> to download the package would <strong><em>not</em></strong> be affected and no action is required. </p>\n<p>Those who manually download and decompressing the affected versions are advised to update to 0.16.2 or later version of Kaminari where file permissions have been adjusted to enhance security.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If upgrading is not feasible immediately, manually adjusting the file permissions on the server to <code>644</code> to restrict access is a viable interim measure.</p>\n<h4 id=\"all-affected-versions\">All Affected Versions:</h4>\n<pre><code>lib/kaminari/models/page_scope_methods.rb\n</code></pre>\n<p>In addition to the previously mentioned files, security tools like AWS Inspector might also identify other files as unsafe. These files, although not loaded or used at runtime, may still be flagged. To avoid any potential confusion in your logs and ensure system integrity, we recommend updating the permissions for these files as well. This proactive measure helps maintain a clean security posture and minimizes unnecessary alerts.</p>\n<h4 id=\"version-0150-and-0151\">Version 0.15.0 and 0.15.1:</h4>\n<pre><code>spec/models/mongo_mapper/mongo_mapper_spec.rb\n</code></pre>\n<h4 id=\"version-0160\">Version 0.16.0:</h4>\n<pre><code>spec/models/mongo_mapper/mongo_mapper_spec.rb\nspec/models/mongoid/mongoid_spec.rb\n</code></pre>\n<h4 id=\"version-0161\">Version 0.16.1:</h4>\n<pre><code>spec/models/active_record/scopes_spec.rb\nspec/models/mongo_mapper/mongo_mapper_spec.rb\nspec/models/mongoid/mongoid_spec.rb\ngemfiles/data_mapper_12.gemfile\ngemfiles/active_record_32.gemfile\n</code></pre>\n<h3 id=\"references\">References</h3>\n<p>Official Kaminari repository link (this page)</p>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We thank <a href=\"https://github.com/G-Rath\">Gareth Jones</a> for discovering and reporting this issue. Their diligent work is instrumental in our ongoing efforts to maintain and improve software security.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/kaminari/kaminari/security/advisories/GHSA-7r3j-qmr4-jfpj\">https://github.com/kaminari/kaminari/security/advisories/GHSA-7r3j-qmr4-jfpj</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32978\">https://nvd.nist.gov/vuln/detail/CVE-2024-32978</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/kaminari/CVE-2024-32978.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/kaminari/CVE-2024-32978.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7r3j-qmr4-jfpj\">https://github.com/advisories/GHSA-7r3j-qmr4-jfpj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7r3j-qmr4-jfpj",
            "title": "[kaminari] Kaminari Insecure File Permissions Vulnerability",
            "date_modified": "2024-05-31T20:33:46.000Z",
            "date_published": "2024-05-28T15:47:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7r3j-qmr4-jfpj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The REXML gem before 3.2.6 has a DoS vulnerability when it parses an XML that has many <code>&lt;</code>s in an attribute value.</p>\n<p>If you need to parse untrusted XMLs, you many be impacted to this vulnerability.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The REXML gem 3.2.7 or later include the patch to fix this vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Don't parse untrusted XMLs.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176/\">https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176/</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh\">https://github.com/ruby/rexml/security/advisories/GHSA-vg3r-rm7w-2xgh</a></li>\n<li><a href=\"https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb\">https://github.com/ruby/rexml/commit/4325835f92f3f142ebd91a3fdba4e1f1ab7f1cfb</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176\">https://www.ruby-lang.org/en/news/2024/05/16/dos-rexml-cve-2024-35176</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-35176\">https://nvd.nist.gov/vuln/detail/CVE-2024-35176</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vg3r-rm7w-2xgh\">https://github.com/advisories/GHSA-vg3r-rm7w-2xgh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vg3r-rm7w-2xgh",
            "title": "[rexml] REXML contains a denial of service vulnerability",
            "date_modified": "2024-05-16T19:05:52.000Z",
            "date_published": "2024-05-16T17:44:04.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vg3r-rm7w-2xgh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"duplicate-advisory\">Duplicate Advisory</h2>\n<p>This advisory has been withdrawn because it is a duplicate of GHSA-r95h-9x8f-r3f7. This link is maintained to preserve external references.</p>\n<h2 id=\"original-description\">Original Description</h2>\n<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to\n<a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7\">2.12.7</a> from 2.12.6.</p>\n<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>There is no impact to Nokogiri users because the issue is present only\nin libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>\n<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>\n<li>2024-05-13 10:05 EDT, nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">v1.16.5 is released</a>\nand this GHSA made public</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r3w4-36x6-7r99\">https://github.com/advisories/GHSA-r3w4-36x6-7r99</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r3w4-36x6-7r99",
            "title": "[nokogiri] Duplicate Advisory: Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459",
            "date_modified": "2024-05-16T17:53:38.000Z",
            "date_published": "2024-05-14T22:30:45.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r3w4-36x6-7r99"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri v1.16.5 upgrades its dependency libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.7\">2.12.7</a> from 2.12.6.</p>\n<p>libxml2 v2.12.7 addresses CVE-2024-34459:</p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>There is no impact to Nokogiri users because the issue is present only in libxml2's <code>xmllint</code> tool which Nokogiri does not provide or expose.</p>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-05-13 05:57 EDT, libxml2 2.12.7 release is announced</li>\n<li>2024-05-13 08:30 EDT, nokogiri maintainers begin triage</li>\n<li>2024-05-13 10:05 EDT, nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">v1.16.5 is released</a> and this GHSA made public</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5\">https://github.com/sparklemotion/nokogiri/releases/tag/v1.16.5</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/2876ac53</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/720\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/720</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-r95h-9x8f-r3f7.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-r95h-9x8f-r3f7\">https://github.com/advisories/GHSA-r95h-9x8f-r3f7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-r95h-9x8f-r3f7",
            "title": "[nokogiri] Nokogiri updates packaged libxml2 to v2.12.7 to resolve CVE-2024-34459",
            "date_modified": "2024-05-16T17:45:01.000Z",
            "date_published": "2024-05-13T16:05:42.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-r95h-9x8f-r3f7"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all minor versions released in the last year.</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">1.9.3</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\"><code>da8f943</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32970\">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/payloadbox/xss-payload-list\">https://github.com/payloadbox/xss-payload-list</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex\">https://rubygems.org/gems/phlex</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p57-h987-4vgx\">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx",
            "title": "[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values",
            "date_modified": "2024-05-03T20:17:03.000Z",
            "date_published": "2024-05-01T16:37:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>The reason these issues were not detected before is the escapes were working as designed. However, their design didn't take into account just how recklessly permissive browser are when it comes to executing unsafe JavaScript via HTML attributes.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all minor versions released in the last year.</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">1.9.3</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\"><code>da8f943</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-9p57-h987-4vgx</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32970\">https://nvd.nist.gov/vuln/detail/CVE-2024-32970</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2\">https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/payloadbox/xss-payload-list\">https://github.com/payloadbox/xss-payload-list</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex\">https://rubygems.org/gems/phlex</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.2\">https://rubygems.org/gems/phlex/versions/1.10.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.3\">https://rubygems.org/gems/phlex/versions/1.9.3</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32970.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9p57-h987-4vgx\">https://github.com/advisories/GHSA-9p57-h987-4vgx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx",
            "title": "[phlex] Phlex vulnerable to Cross-site Scripting (XSS) via maliciously formed HTML attribute names and values",
            "date_modified": "2024-05-03T20:17:03.000Z",
            "date_published": "2024-05-01T16:37:21.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9p57-h987-4vgx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>sidekiq from 7.0.4 to 7.0.7 is vulnerable to reflected cross-site scripting. A fix was released in version 7.0.8.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-1892\">https://nvd.nist.gov/vuln/detail/CVE-2023-1892</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214\">https://github.com/sidekiq/sidekiq/commit/458fdf74176a9881478c48dc5cf0269107b22214</a></li>\n<li><a href=\"https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777\">https://huntr.dev/bounties/e35e5653-c429-4fb8-94a3-cbc123ae4777</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708\">https://github.com/sidekiq/sidekiq/blob/main/Changes.md#708</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2023-1892.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h3r8-h5qw-4r35\">https://github.com/advisories/GHSA-h3r8-h5qw-4r35</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h3r8-h5qw-4r35",
            "title": "[sidekiq] sidekiq vulnerable to cross-site scripting ",
            "date_modified": "2024-05-01T13:15:10.000Z",
            "date_published": "2023-04-21T06:30:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h3r8-h5qw-4r35"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description:</h3>\n<p>During the source Code Review of the metrics.erb view of the Sidekiq Web UI, A reflected XSS vulnerability is discovered. The value of substr parameter is reflected in the response without any encoding, allowing an attacker to inject Javascript code into the response of the application. </p>\n<p>This vulnerability can be exploited to target the users of the application, and users of other applications deployed on the same domain or website as that of the Sidekiq website. Successful exploit results may result in compromise of user accounts and user data.</p>\n<h3 id=\"impact\">Impact:</h3>\n<p>The impact of this vulnerability can be severe. An attacker could exploit it to target users of the Sidekiq Web UI. Moreover, if other applications are deployed on the same domain or website as Sidekiq, users of those applications could also be affected, leading to a broader scope of compromise. Potentially compromising their accounts, forcing the users to perform sensitive actions, stealing sensitive data, performing CORS attacks, defacement of the web application, etc.</p>\n<h3 id=\"mitigation\">Mitigation:</h3>\n<p>Encode all output data before rendering it in the response to prevent XSS attacks.</p>\n<h3 id=\"steps-to-reproduce\">Steps to Reproduce:</h3>\n<ol>\n<li>Go to the following URL of the sidekiq Web UI: \nhttps://{host}/sidekiq/metrics?substr=beret%22%3E%3Cscript%20src=%22<a href=\"https://cheemahq.vercel.app/a.js%22%20/%3E\">https://cheemahq.vercel.app/a.js%22%20/%3E</a></li>\n<li>XSS payload will be executed, causing a popup.</li>\n</ol>\n<h3 id=\"evidence\">Evidence:</h3>\n<p><img alt=\"image\" src=\"https://github.com/sidekiq/sidekiq/assets/59286712/9b7efa06-60bc-4d72-bb37-c5949154827e\">\nFigure 1: Source Code Vulnerable to XSS</p>\n<p><img alt=\"image\" src=\"https://github.com/sidekiq/sidekiq/assets/59286712/7a801feb-d495-416e-8e0e-36dee0eadf85\">\nFigure 2: XSS payload triggered</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq\">https://github.com/sidekiq/sidekiq/security/advisories/GHSA-q655-3pj8-9fxq</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32887\">https://nvd.nist.gov/vuln/detail/CVE-2024-32887</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d\">https://github.com/sidekiq/sidekiq/commit/30786e082c70349ab27ffa9eccc42fb0c696164d</a></li>\n<li><a href=\"https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4\">https://github.com/sidekiq/sidekiq/releases/tag/v7.2.4</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sidekiq/CVE-2024-32887.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-q655-3pj8-9fxq\">https://github.com/advisories/GHSA-q655-3pj8-9fxq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-q655-3pj8-9fxq",
            "title": "[sidekiq] Sidekiq vulnerable to a Reflected XSS in Queues Web Page",
            "date_modified": "2024-05-01T13:02:19.000Z",
            "date_published": "2024-04-26T22:19:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-q655-3pj8-9fxq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data.</p>\n<p>Our filter to detect and prevent the use of the <code>javascript:</code> URL scheme in the <code>href</code> attribute of an <code>&lt;a&gt;</code> tag could be bypassed with tab <code>\\t</code> or newline <code>\\n</code> characters between the characters of the protocol, e.g. <code>java\\tscript:</code>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>The best way to mitigate this vulnerability is to update to one of the following versions:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.10.1\">1.10.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.2\">1.9.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.3\">1.8.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.2\">1.7.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.3\">1.6.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.3\">1.5.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.2\">1.4.2</a></li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb\">https://github.com/phlex-ruby/phlex/commit/9e3f5b980655817993682e409cbda72956d865cb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-32463\">https://nvd.nist.gov/vuln/detail/CVE-2024-32463</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-32463.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g7xq-xv8c-h98c\">https://github.com/advisories/GHSA-g7xq-xv8c-h98c</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c",
            "title": "[phlex] Cross-site Scripting (XSS) possible due to improper sanitisation of `href` attributes on `<a>` tags",
            "date_modified": "2024-04-19T21:44:04.000Z",
            "date_published": "2024-04-17T00:20:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g7xq-xv8c-h98c"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}