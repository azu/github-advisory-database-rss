{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.2, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-08T21:28:12.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.2, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-08T21:28:12.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.2, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-08T21:28:12.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.2, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-08T21:28:12.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CommonMarker uses <code>cmark-gfm</code> for rendering <a href=\"https://github.github.com/gfm/\">Github Flavored Markdown</a>. An <a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">integer overflow in <code>cmark-gfm</code>'s table row parsing</a> may lead to heap memory corruption when parsing tables who's marker rows contain more than UINT16_MAX columns. The impact of this heap corruption ranges from Information Leak to Arbitrary Code Execution.</p>\n<p>If affected versions of CommonMarker are used for rendering remote user controlled markdown, this vulnerability may lead to Remote Code Execution (RCE).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in the following CommonMarker release:</p>\n<ul>\n<li>v0.23.4</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The vulnerability exists in the table markdown extensions of <code>cmark-gfm</code>. Disabling any use of the table extension will prevent this vulnerability from being triggered.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n</ul>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We would like to thank Felix Wilhelm of Google's Project Zero for reporting this vulnerability</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/gjtorikian/commonmarker\">CommonMarker</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3\">https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf",
            "title": "[commonmarker] Integer overflow in cmark-gfm table parsing extension leads to heap memory corruption",
            "date_modified": "2022-03-03T20:29:09.000Z",
            "date_published": "2022-03-03T20:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<p>In Publify, 9.0.0.pre1 to 9.2.4 are vulnerable to Improper Access Control. “guest” role users can self-register even when the admin does not allow. This happens due to front-end restriction only.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25973\">https://nvd.nist.gov/vuln/detail/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e\">https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x24j-87x9-jvv5\">https://github.com/advisories/GHSA-x24j-87x9-jvv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5",
            "title": "[publify_core] Improper Authorization in Publify",
            "date_modified": "2022-03-02T23:50:10.000Z",
            "date_published": "2021-11-03T17:34:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5"
            }
        },
        {
            "content_html": "<p>This is an XSS vulnerability that has the potential to impact anyone using translations with the view_component gem. Data received via user input and passed as an interpolation argument to the <code>translate</code> method is not properly sanitized before display.</p>\n<p>Versions 2.29.1 and 2.49.1 have been released and fully mitigate the vulnerability.</p>\n<p>Avoid passing user input to the <code>translate</code> function, or sanitize the inputs before passing them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"http://github.com/github/view_component\">github/view_component</a> project</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n<li><a href=\"https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9\">https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24722\">https://nvd.nist.gov/vuln/detail/CVE-2022-24722</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.31.2\">https://github.com/github/view_component/releases/tag/v2.31.2</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.49.1\">https://github.com/github/view_component/releases/tag/v2.49.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf",
            "title": "[view_component] Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in view_component",
            "date_modified": "2022-03-04T21:39:42.000Z",
            "date_published": "2022-03-02T22:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf"
            }
        },
        {
            "content_html": "<p>This is an XSS vulnerability that has the potential to impact anyone using translations with the view_component gem. Data received via user input and passed as an interpolation argument to the <code>translate</code> method is not properly sanitized before display.</p>\n<p>Versions 2.29.1 and 2.49.1 have been released and fully mitigate the vulnerability.</p>\n<p>Avoid passing user input to the <code>translate</code> function, or sanitize the inputs before passing them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"http://github.com/github/view_component\">github/view_component</a> project</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n<li><a href=\"https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9\">https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24722\">https://nvd.nist.gov/vuln/detail/CVE-2022-24722</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.31.2\">https://github.com/github/view_component/releases/tag/v2.31.2</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.49.1\">https://github.com/github/view_component/releases/tag/v2.49.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf",
            "title": "[view_component] Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in view_component",
            "date_modified": "2022-03-04T21:39:42.000Z",
            "date_published": "2022-03-02T22:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf"
            }
        },
        {
            "content_html": "<p>Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-7565\">https://nvd.nist.gov/vuln/detail/CVE-2015-7565</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-m3q7-rj8g-m457\">https://github.com/advisories/GHSA-m3q7-rj8g-m457</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY\">https://groups.google.com/forum/#!topic/ember-security/OfyQkoSuppY</a></li>\n<li><a href=\"http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html\">http://emberjs.com/blog/2016/01/14/security-releases-ember-1-11-4-1-12-2-1-13-12-2-0-3-2-1-2-2-2-1.html</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-m3q7-rj8g-m457",
            "title": "[ember-source] Moderate severity vulnerability that affects ember-source",
            "date_modified": "2022-03-02T21:53:01.000Z",
            "date_published": "2018-08-28T22:33:24.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-m3q7-rj8g-m457"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using the <code>#apply</code> method from image_processing to apply a series of operations that are coming from unsanitized user input, this allows the attacker to execute shell commands:</p>\n<pre><code class=\"language-rb\">ImageProcessing::Vips.apply({ system: \"echo EXECUTED\" })\n#&gt;&gt; EXECUTED\n</code></pre>\n<p>This method is called internally by Active Storage variants, so Active Storage is vulnerable as well.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in version 1.12.2 of image_processing.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>If you're processing based on user input, it's highly recommended that you always sanitize the user input, by allowing only a constrained set of operations. For example:</p>\n<pre><code class=\"language-rb\">operations = params[:operations]\n  .map { |operation| [operation[:name], *operation[:value]] }\n  .select { |name, *| name.to_s.include? %w[resize_to_limit strip ...] } # sanitization\n\nImageProcessing::Vips.apply(operations)\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/janko/image_processing/security/advisories/GHSA-cxf7-qrc5-9446\">https://github.com/janko/image_processing/security/advisories/GHSA-cxf7-qrc5-9446</a></li>\n<li><a href=\"https://github.com/janko/image_processing/commit/038e4574e8f4f4b636a62394e09983c71980dada\">https://github.com/janko/image_processing/commit/038e4574e8f4f4b636a62394e09983c71980dada</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24720\">https://nvd.nist.gov/vuln/detail/CVE-2022-24720</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cxf7-qrc5-9446\">https://github.com/advisories/GHSA-cxf7-qrc5-9446</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cxf7-qrc5-9446",
            "title": "[image_processing] Remote shell execution vulnerability in image_processing",
            "date_modified": "2022-03-10T15:56:29.000Z",
            "date_published": "2022-03-01T22:22:26.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cxf7-qrc5-9446"
            }
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri <a href=\"https://github.com/sparklemotion/nokogiri/releases/tag/v1.13.2\">v1.13.2</a> upgrades two of its packaged dependencies:</p>\n<ul>\n<li>vendored libxml2 from v2.9.12 to <a href=\"https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.13.news\">v2.9.13</a></li>\n<li>vendored libxslt from v1.1.34 to <a href=\"https://download.gnome.org/sources/libxslt/1.1/libxslt-1.1.35.news\">v1.1.35</a></li>\n</ul>\n<p>Those library versions address the following upstream CVEs:</p>\n<ul>\n<li>libxslt: <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30560\">CVE-2021-30560</a> (CVSS 8.8, High severity)</li>\n<li>libxml2: <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23308\">CVE-2022-23308</a> (Unspecified severity, see more information below)</li>\n</ul>\n<p>Those library versions also address numerous other issues including performance improvements, regression fixes, and bug fixes, as well as memory leaks and other use-after-free issues that were not assigned CVEs.</p>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri <code>&lt; 1.13.2</code>, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> and <code>libxslt</code> release announcements.</p>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Upgrade to Nokogiri <code>&gt;= 1.13.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile and link an older version Nokogiri against external libraries libxml2 <code>&gt;= 2.9.13</code> and libxslt <code>&gt;= 1.1.35</code>, which will also address these same CVEs.</p>\n<h3 id=\"impact\">Impact</h3>\n<h4 id=\"libxslt-cve-2021-30560\">libxslt <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-30560\">CVE-2021-30560</a></h4>\n<ul>\n<li>CVSS3 score: 8.8 (High)</li>\n<li>Fixed by <a href=\"https://gitlab.gnome.org/GNOME/libxslt/-/commit/50f9c9c\">https://gitlab.gnome.org/GNOME/libxslt/-/commit/50f9c9c</a></li>\n</ul>\n<p>All versions of libxslt prior to v1.1.35 are affected.</p>\n<p>Applications using <strong>untrusted</strong> XSL stylesheets to transform XML are vulnerable to a denial-of-service attack and should be upgraded immediately.</p>\n<h4 id=\"libxml2-cve-2022-23308\">libxml2 <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23308\">CVE-2022-23308</a></h4>\n<ul>\n<li>As of the time this security advisory was published, there is no officially published information available about this CVE's severity. The above NIST link does not yet have a published record, and the libxml2 maintainer has declined to provide a severity score.</li>\n<li>Fixed by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/652dd12\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/652dd12</a></li>\n<li>Further explanation is at <a href=\"https://mail.gnome.org/archives/xml/2022-February/msg00015.html\">https://mail.gnome.org/archives/xml/2022-February/msg00015.html</a></li>\n</ul>\n<p>The upstream commit and the explanation linked above indicate that an application may be vulnerable to a denial of service, memory disclosure, or code execution if it parses an <strong>untrusted</strong> document with parse options <code>DTDVALID</code> set to true, and <code>NOENT</code> set to false.</p>\n<p>An analysis of these parse options:</p>\n<ul>\n<li>While <code>NOENT</code> is off by default for Document, DocumentFragment, Reader, and Schema parsing, it is on by default for XSLT (stylesheet) parsing in Nokogiri v1.12.0 and later.</li>\n<li><code>DTDVALID</code> is an option that Nokogiri does not set for any operations, and so this CVE applies only to applications setting this option explicitly.</li>\n</ul>\n<p>It seems reasonable to assume that any application explicitly setting the parse option <code>DTDVALID</code> when parsing <strong>untrusted</strong> documents is vulnerable and should be upgraded immediately.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-fq42-c5rg-92c2\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-fq42-c5rg-92c2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fq42-c5rg-92c2\">https://github.com/advisories/GHSA-fq42-c5rg-92c2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fq42-c5rg-92c2",
            "title": "[nokogiri] Vulnerable dependencies in Nokogiri",
            "date_modified": "2022-02-26T01:06:54.000Z",
            "date_published": "2022-02-25T20:32:09.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fq42-c5rg-92c2"
            }
        },
        {
            "content_html": "<p>The Field Test dashboard is vulnerable to cross-site request forgery (CSRF) with non-session based authentication methods in versions v0.2.0 through v0.3.2.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>The Field Test dashboard is vulnerable to CSRF with non-session based authentication methods, like basic authentication. Session-based authentication methods (like Devise's default authentication) are not affected.</p>\n<p>A CSRF attack works by getting an authorized user to visit a malicious website and then performing requests on behalf of the user. In this instance, a single endpoint is affected, which allows for changing the variant assigned to a user.</p>\n<p>All users running an affected release should upgrade immediately.</p>\n<h2 id=\"technical-details\">Technical Details</h2>\n<p>Field Test uses the <code>protect_from_forgery</code> method from Rails to prevent CSRF. However, this defaults to <code>:null_session</code>, which has no effect on non-session based authentication methods. This has been changed to <code>protect_from_forgery with: :exception</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-16252\">https://nvd.nist.gov/vuln/detail/CVE-2020-16252</a></li>\n<li><a href=\"https://github.com/ankane/field_test/issues/28\">https://github.com/ankane/field_test/issues/28</a></li>\n<li><a href=\"https://github.com/ankane/field_test/commit/defd3fdf457c22d7dc5b3be7048481947bd5f0d0\">https://github.com/ankane/field_test/commit/defd3fdf457c22d7dc5b3be7048481947bd5f0d0</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/field_test/CVE-2020-16252.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/field_test/CVE-2020-16252.yml</a></li>\n<li><a href=\"https://rubygems.org/gems/field_test\">https://rubygems.org/gems/field_test</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w542-cpp9-r3g7\">https://github.com/advisories/GHSA-w542-cpp9-r3g7</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w542-cpp9-r3g7",
            "title": "[field_test] CSRF in Field Test",
            "date_modified": "2022-02-24T18:31:29.000Z",
            "date_published": "2020-08-05T14:53:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w542-cpp9-r3g7"
            }
        },
        {
            "content_html": "<p>In api.rb in Sidekiq before 6.4.0 and 5.2.10, there is no limit on the number of days when requesting stats for the graph. This overloads the system, affecting the Web UI, and makes it unavailable to users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23837\">https://nvd.nist.gov/vuln/detail/CVE-2022-23837</a></li>\n<li><a href=\"https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956\">https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956</a></li>\n<li><a href=\"https://github.com/TUTUMSPACE/exploits/blob/main/sidekiq.md\">https://github.com/TUTUMSPACE/exploits/blob/main/sidekiq.md</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/pull/495\">https://github.com/rubysec/ruby-advisory-db/pull/495</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrfj-98qg-qjgv\">https://github.com/advisories/GHSA-jrfj-98qg-qjgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrfj-98qg-qjgv",
            "title": "[sidekiq] Denial of service in sidekiq",
            "date_modified": "2022-02-23T21:25:02.000Z",
            "date_published": "2022-01-27T14:42:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrfj-98qg-qjgv"
            }
        },
        {
            "content_html": "<p>In api.rb in Sidekiq before 6.4.0 and 5.2.10, there is no limit on the number of days when requesting stats for the graph. This overloads the system, affecting the Web UI, and makes it unavailable to users.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23837\">https://nvd.nist.gov/vuln/detail/CVE-2022-23837</a></li>\n<li><a href=\"https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956\">https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956</a></li>\n<li><a href=\"https://github.com/TUTUMSPACE/exploits/blob/main/sidekiq.md\">https://github.com/TUTUMSPACE/exploits/blob/main/sidekiq.md</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/pull/495\">https://github.com/rubysec/ruby-advisory-db/pull/495</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jrfj-98qg-qjgv\">https://github.com/advisories/GHSA-jrfj-98qg-qjgv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jrfj-98qg-qjgv",
            "title": "[sidekiq] Denial of service in sidekiq",
            "date_modified": "2022-02-23T21:25:02.000Z",
            "date_published": "2022-01-27T14:42:37.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jrfj-98qg-qjgv"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to <code>puma</code> version <code>5.6.2</code>, <code>puma</code> may not always call <code>close</code> on the response body. Rails, prior to version <code>7.0.2.2</code>, depended on the response body being closed in order for its <code>CurrentAttributes</code> implementation to work correctly.</p>\n<p>From Rails:</p>\n<blockquote>\n<p>Under certain circumstances response bodies will not be closed, for example a bug in a webserver[1] or a bug in a Rack middleware. In the event a response is not notified of a close, ActionDispatch::Executor will not know to reset thread local state for the next request. This can lead to data being leaked to subsequent requests, especially when interacting with ActiveSupport::CurrentAttributes.</p>\n</blockquote>\n<p>The combination of these two behaviors (Puma not closing the body + Rails' Executor implementation) causes information leakage.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This problem is fixed in Puma versions 5.6.2 and 4.3.11.</p>\n<p>This problem is fixed in Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.</p>\n<p>See: \n<a href=\"https://github.com/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/advisories/GHSA-wh98-p28r-vrc9</a> \nfor details about the rails vulnerability</p>\n<p>Upgrading to a patched Rails <em>or</em> Puma version fixes the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade to Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.</p>\n<p>The <a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">Rails CVE</a> includes a middleware that can be used instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Rails CVE: <a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">CVE-2022-23633</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-rmj8-8hhh-gv5h\">https://github.com/puma/puma/security/advisories/GHSA-rmj8-8hhh-gv5h</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/b70f451fe8abc0cff192c065d549778452e155bb\">https://github.com/puma/puma/commit/b70f451fe8abc0cff192c065d549778452e155bb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23634\">https://nvd.nist.gov/vuln/detail/CVE-2022-23634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rmj8-8hhh-gv5h\">https://github.com/advisories/GHSA-rmj8-8hhh-gv5h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/advisories/GHSA-wh98-p28r-vrc9</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rmj8-8hhh-gv5h",
            "title": "[puma] Information Exposure when using Puma with Rails",
            "date_modified": "2022-02-24T13:15:06.000Z",
            "date_published": "2022-02-11T21:33:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rmj8-8hhh-gv5h"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to <code>puma</code> version <code>5.6.2</code>, <code>puma</code> may not always call <code>close</code> on the response body. Rails, prior to version <code>7.0.2.2</code>, depended on the response body being closed in order for its <code>CurrentAttributes</code> implementation to work correctly.</p>\n<p>From Rails:</p>\n<blockquote>\n<p>Under certain circumstances response bodies will not be closed, for example a bug in a webserver[1] or a bug in a Rack middleware. In the event a response is not notified of a close, ActionDispatch::Executor will not know to reset thread local state for the next request. This can lead to data being leaked to subsequent requests, especially when interacting with ActiveSupport::CurrentAttributes.</p>\n</blockquote>\n<p>The combination of these two behaviors (Puma not closing the body + Rails' Executor implementation) causes information leakage.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This problem is fixed in Puma versions 5.6.2 and 4.3.11.</p>\n<p>This problem is fixed in Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.</p>\n<p>See: \n<a href=\"https://github.com/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/advisories/GHSA-wh98-p28r-vrc9</a> \nfor details about the rails vulnerability</p>\n<p>Upgrading to a patched Rails <em>or</em> Puma version fixes the vulnerability.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrade to Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.</p>\n<p>The <a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">Rails CVE</a> includes a middleware that can be used instead.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li>Rails CVE: <a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">CVE-2022-23633</a></li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-rmj8-8hhh-gv5h\">https://github.com/puma/puma/security/advisories/GHSA-rmj8-8hhh-gv5h</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/b70f451fe8abc0cff192c065d549778452e155bb\">https://github.com/puma/puma/commit/b70f451fe8abc0cff192c065d549778452e155bb</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23634\">https://nvd.nist.gov/vuln/detail/CVE-2022-23634</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rmj8-8hhh-gv5h\">https://github.com/advisories/GHSA-rmj8-8hhh-gv5h</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/advisories/GHSA-wh98-p28r-vrc9</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1\">https://groups.google.com/g/ruby-security-ann/c/FkTM-_7zSNA/m/K2RiMJBlBAAJ?utm_medium=email&amp;utm_source=footer&amp;pli=1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rmj8-8hhh-gv5h",
            "title": "[puma] Information Exposure when using Puma with Rails",
            "date_modified": "2022-02-24T13:15:06.000Z",
            "date_published": "2022-02-11T21:33:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rmj8-8hhh-gv5h"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Under certain circumstances response bodies will not be closed, for example a <a href=\"https://github.com/puma/puma/pull/2812\">bug in a webserver</a> or a bug in a Rack middleware.  In the event a response is <em>not</em> notified of a <code>close</code>, <code>ActionDispatch::Executor</code> will not know to reset thread local state for the next request.  This can lead to data being leaked to subsequent requests, especially when interacting with <code>ActiveSupport::CurrentAttributes</code>.</p>\n<p>Upgrading to the FIXED versions of Rails will ensure mitigation of this issue even in the context of a buggy webserver or middleware implementation.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This has been fixed in Rails 7.0.2.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Upgrading is highly recommended, but to work around this problem the following middleware can be used:</p>\n<pre><code class=\"language-ruby\">class GuardedExecutor &lt; ActionDispatch::Executor\n  def call(env)\n    ensure_completed!\n    super\n  end\n\n  private\n\n    def ensure_completed!\n      @executor.new.complete! if @executor.active?\n    end\nend\n\n# Ensure the guard is inserted before ActionDispatch::Executor\nRails.application.configure do\n  config.middleware.swap ActionDispatch::Executor, GuardedExecutor, executor\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/security/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/rails/rails/security/advisories/GHSA-wh98-p28r-vrc9</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/f9a2ad03943d5c2ba54e1d45f155442b519c75da\">https://github.com/rails/rails/commit/f9a2ad03943d5c2ba54e1d45f155442b519c75da</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2022-23633-possible-exposure-of-information-vulnerability-in-action-pack/80016\">https://discuss.rubyonrails.org/t/cve-2022-23633-possible-exposure-of-information-vulnerability-in-action-pack/80016</a></li>\n<li><a href=\"https://rubyonrails.org/2022/2/11/Rails-7-0-2-2-6-1-4-6-6-0-4-6-and-5-2-6-2-have-been-released\">https://rubyonrails.org/2022/2/11/Rails-7-0-2-2-6-1-4-6-6-0-4-6-and-5-2-6-2-have-been-released</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23633\">https://nvd.nist.gov/vuln/detail/CVE-2022-23633</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2022/02/11/5\">http://www.openwall.com/lists/oss-security/2022/02/11/5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-wh98-p28r-vrc9\">https://github.com/advisories/GHSA-wh98-p28r-vrc9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-wh98-p28r-vrc9",
            "title": "[actionpack] Exposure of information in Action Pack",
            "date_modified": "2022-02-24T13:15:43.000Z",
            "date_published": "2022-02-11T20:49:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-wh98-p28r-vrc9"
            }
        }
    ]
}