{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>A vulnerability classified as critical has been found in prodigasistemas curupira up to 0.1.3. Affected is an unknown function of the file app/controllers/curupira/passwords_controller.rb. The manipulation leads to sql injection. Upgrading to version 0.1.4 is able to address this issue. The name of the patch is 93a9a77896bb66c949acb8e64bceafc74bc8c271. It is recommended to upgrade the affected component. VDB-218394 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2015-10053\">https://nvd.nist.gov/vuln/detail/CVE-2015-10053</a></li>\n<li><a href=\"https://github.com/prodigasistemas/curupira/commit/93a9a77896bb66c949acb8e64bceafc74bc8c271\">https://github.com/prodigasistemas/curupira/commit/93a9a77896bb66c949acb8e64bceafc74bc8c271</a></li>\n<li><a href=\"https://github.com/prodigasistemas/curupira/releases/tag/v0.1.4\">https://github.com/prodigasistemas/curupira/releases/tag/v0.1.4</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.218394\">https://vuldb.com/?ctiid.218394</a></li>\n<li><a href=\"https://vuldb.com/?id.218394\">https://vuldb.com/?id.218394</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-85gf-wr67-f83w\">https://github.com/advisories/GHSA-85gf-wr67-f83w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-85gf-wr67-f83w",
            "title": "[curupira] curupira is vulnerable to SQL injection",
            "date_modified": "2023-01-18T19:03:32.000Z",
            "date_published": "2023-01-16T12:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-85gf-wr67-f83w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the Content-Disposition parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44571.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.1, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause Content-Disposition header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. This header is used typically used in multipart parsing. Any applications that parse multipart posts using Rack (virtually all Rails applications) are impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.0 series\n2-1-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.1 series\n2-2-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.2 series\n3-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93pm-5p5f-3ghx\">https://github.com/advisories/GHSA-93pm-5p5f-3ghx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx",
            "title": "[rack] Denial of Service Vulnerability in Rack Content-Disposition parsing",
            "date_modified": "2023-01-18T18:24:41.000Z",
            "date_published": "2023-01-18T18:24:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the Content-Disposition parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44571.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.1, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause Content-Disposition header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. This header is used typically used in multipart parsing. Any applications that parse multipart posts using Rack (virtually all Rails applications) are impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.0 series\n2-1-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.1 series\n2-2-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.2 series\n3-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93pm-5p5f-3ghx\">https://github.com/advisories/GHSA-93pm-5p5f-3ghx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx",
            "title": "[rack] Denial of Service Vulnerability in Rack Content-Disposition parsing",
            "date_modified": "2023-01-18T18:24:41.000Z",
            "date_published": "2023-01-18T18:24:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the Content-Disposition parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44571.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.1, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause Content-Disposition header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. This header is used typically used in multipart parsing. Any applications that parse multipart posts using Rack (virtually all Rails applications) are impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.0 series\n2-1-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.1 series\n2-2-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.2 series\n3-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93pm-5p5f-3ghx\">https://github.com/advisories/GHSA-93pm-5p5f-3ghx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx",
            "title": "[rack] Denial of Service Vulnerability in Rack Content-Disposition parsing",
            "date_modified": "2023-01-18T18:24:41.000Z",
            "date_published": "2023-01-18T18:24:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the Content-Disposition parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44571.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.1, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause Content-Disposition header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. This header is used typically used in multipart parsing. Any applications that parse multipart posts using Rack (virtually all Rails applications) are impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.0 series\n2-1-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.1 series\n2-2-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 2.2 series\n3-0-Fix-ReDoS-vulnerability-in-multipart-parser - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-93pm-5p5f-3ghx\">https://github.com/advisories/GHSA-93pm-5p5f-3ghx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx",
            "title": "[rack] Denial of Service Vulnerability in Rack Content-Disposition parsing",
            "date_modified": "2023-01-18T18:24:41.000Z",
            "date_published": "2023-01-18T18:24:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-93pm-5p5f-3ghx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Action Dispatch. This vulnerability has been assigned the CVE identifier CVE-2023-22792.</p>\n<p>Versions Affected: &gt;= 3.0.0 Not affected: &lt; 3.0.0 Fixed Versions: 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>Specially crafted cookies, in combination with a specially crafted X_FORWARDED_HOST header can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious X_FORWARDED_HOST headers before they reach the application.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 6.1 series\n7-0-Use-string-split-instead-of-regex-for-domain-parts.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p84v-45xj-wwqj\">https://github.com/advisories/GHSA-p84v-45xj-wwqj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p84v-45xj-wwqj",
            "title": "[actionpack] ReDoS based DoS vulnerability in Action Dispatch",
            "date_modified": "2023-01-18T18:23:35.000Z",
            "date_published": "2023-01-18T18:23:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p84v-45xj-wwqj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>\n<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.</p>\n<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6gc-792m-qgm2\">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2",
            "title": "[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore",
            "date_modified": "2023-01-18T18:23:22.000Z",
            "date_published": "2023-01-18T18:23:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>\n<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.</p>\n<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6gc-792m-qgm2\">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2",
            "title": "[activesupport] ReDoS based DoS vulnerability in Active Support’s underscore",
            "date_modified": "2023-01-18T18:23:22.000Z",
            "date_published": "2023-01-18T18:23:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a vulnerability in Action Controller’s redirect_to. This vulnerability has been assigned the CVE identifier CVE-2023-22797.</p>\n<p>Versions Affected: &gt;= 7.0.0 Not affected: &lt; 7.0.0 Fixed Versions: 7.0.4.1\nImpact</p>\n<p>There is a possible open redirect when using the redirect_to helper with untrusted user input.</p>\n<p>Vulnerable code will look like this:</p>\n<pre><code>redirect_to(params[:some_param])\n</code></pre>\n<p>Rails 7.0 introduced protection against open redirects from calling redirect_to with untrusted user input. In prior versions the developer was fully responsible for only providing trusted input. However the check introduced could be bypassed by a carefully crafted URL.</p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>7-0-Fix-sec-issue-with-_url_host_allowed.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9445-4cr6-336r\">https://github.com/advisories/GHSA-9445-4cr6-336r</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9445-4cr6-336r",
            "title": "[actionpack] Open Redirect Vulnerability in Action Pack",
            "date_modified": "2023-01-18T18:21:24.000Z",
            "date_published": "2023-01-18T18:21:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9445-4cr6-336r"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>\n<p>This has been assigned the CVE identifier CVE-2022-44566.</p>\n<p>Versions Affected: All. Not affected: None. Fixed Versions: 7.0.4.1, 6.1.7.1\nImpact</p>\n<p>In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series\n7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-579w-22j4-4749\">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-579w-22j4-4749",
            "title": "[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter",
            "date_modified": "2023-01-18T18:21:14.000Z",
            "date_published": "2023-01-18T18:21:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-579w-22j4-4749"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>\n<p>This has been assigned the CVE identifier CVE-2022-44566.</p>\n<p>Versions Affected: All. Not affected: None. Fixed Versions: 7.0.4.1, 6.1.7.1\nImpact</p>\n<p>In ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series\n7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-579w-22j4-4749\">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-579w-22j4-4749",
            "title": "[activerecord] Denial of Service Vulnerability in ActiveRecord’s PostgreSQL adapter",
            "date_modified": "2023-01-18T18:21:14.000Z",
            "date_published": "2023-01-18T18:21:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-579w-22j4-4749"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Action Dispatch related to the If-None-Match header. This vulnerability has been assigned the CVE identifier CVE-2023-22795.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted HTTP If-None-Match header can cause the regular expression engine to enter a state of catastrophic backtracking, when on a version of Ruby below 3.2.0. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious If-None-Match headers before they reach the application.</p>\n<p>Users on Ruby 3.2.0 or greater are not affected by this vulnerability.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xww-x3g3-6jcv\">https://github.com/advisories/GHSA-8xww-x3g3-6jcv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xww-x3g3-6jcv",
            "title": "[actionpack] ReDoS based DoS vulnerability in Action Dispatch",
            "date_modified": "2023-01-18T18:20:52.000Z",
            "date_published": "2023-01-18T18:20:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xww-x3g3-6jcv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Action Dispatch related to the If-None-Match header. This vulnerability has been assigned the CVE identifier CVE-2023-22795.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted HTTP If-None-Match header can cause the regular expression engine to enter a state of catastrophic backtracking, when on a version of Ruby below 3.2.0. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>We recommend that all users upgrade to one of the FIXED versions. In the meantime, users can mitigate this vulnerability by using a load balancer or other device to filter out malicious If-None-Match headers before they reach the application.</p>\n<p>Users on Ruby 3.2.0 or greater are not affected by this vulnerability.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-on-If-None-Match-header.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8xww-x3g3-6jcv\">https://github.com/advisories/GHSA-8xww-x3g3-6jcv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8xww-x3g3-6jcv",
            "title": "[actionpack] ReDoS based DoS vulnerability in Action Dispatch",
            "date_modified": "2023-01-18T18:20:52.000Z",
            "date_published": "2023-01-18T18:20:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8xww-x3g3-6jcv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible vulnerability in ActiveRecord related to the sanitization of comments. This vulnerability has been assigned the CVE identifier CVE-2023-22794.</p>\n<p>Versions Affected: &gt;= 6.0.0 Not affected: &lt; 6.0.0 Fixed Versions: 6.0.6.1, 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>Previously the implementation of escaping for comments was insufficient for</p>\n<p>If malicious user input is passed to either the annotate query method, the optimizer_hints query method, or through the QueryLogs interface which automatically adds annotations, it may be sent to the database with insufficient sanitization and be able to inject SQL outside of the comment.</p>\n<p>In most cases these interfaces won’t be used with user input and users should avoid doing so.</p>\n<p>Example vulnerable code:</p>\n<pre><code>Post.where(id: 1).annotate(\"#{params[:user_input]}\")\n\nPost.where(id: 1).optimizer_hints(\"#{params[:user_input]}\")\n</code></pre>\n<p>Example vulnerable QueryLogs configuration (the default configuration is not vulnerable):</p>\n<pre><code>config.active_record.query_log_tags = [\n  {\n    something: -&gt; { &lt;some value including user input&gt; }\n  }\n]\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>Avoid passing user input to annotate and avoid using QueryLogs configuration which can include user input.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.0 series\n6-1-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.1 series\n7-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de\">https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hq7p-j377-6v63\">https://github.com/advisories/GHSA-hq7p-j377-6v63</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63",
            "title": "[activerecord] SQL Injection Vulnerability via ActiveRecord comments",
            "date_modified": "2023-01-18T20:29:57.000Z",
            "date_published": "2023-01-18T18:20:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible vulnerability in ActiveRecord related to the sanitization of comments. This vulnerability has been assigned the CVE identifier CVE-2023-22794.</p>\n<p>Versions Affected: &gt;= 6.0.0 Not affected: &lt; 6.0.0 Fixed Versions: 6.0.6.1, 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>Previously the implementation of escaping for comments was insufficient for</p>\n<p>If malicious user input is passed to either the annotate query method, the optimizer_hints query method, or through the QueryLogs interface which automatically adds annotations, it may be sent to the database with insufficient sanitization and be able to inject SQL outside of the comment.</p>\n<p>In most cases these interfaces won’t be used with user input and users should avoid doing so.</p>\n<p>Example vulnerable code:</p>\n<pre><code>Post.where(id: 1).annotate(\"#{params[:user_input]}\")\n\nPost.where(id: 1).optimizer_hints(\"#{params[:user_input]}\")\n</code></pre>\n<p>Example vulnerable QueryLogs configuration (the default configuration is not vulnerable):</p>\n<pre><code>config.active_record.query_log_tags = [\n  {\n    something: -&gt; { &lt;some value including user input&gt; }\n  }\n]\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>Avoid passing user input to annotate and avoid using QueryLogs configuration which can include user input.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.0 series\n6-1-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.1 series\n7-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de\">https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hq7p-j377-6v63\">https://github.com/advisories/GHSA-hq7p-j377-6v63</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63",
            "title": "[activerecord] SQL Injection Vulnerability via ActiveRecord comments",
            "date_modified": "2023-01-18T20:29:57.000Z",
            "date_published": "2023-01-18T18:20:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible vulnerability in ActiveRecord related to the sanitization of comments. This vulnerability has been assigned the CVE identifier CVE-2023-22794.</p>\n<p>Versions Affected: &gt;= 6.0.0 Not affected: &lt; 6.0.0 Fixed Versions: 6.0.6.1, 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>Previously the implementation of escaping for comments was insufficient for</p>\n<p>If malicious user input is passed to either the annotate query method, the optimizer_hints query method, or through the QueryLogs interface which automatically adds annotations, it may be sent to the database with insufficient sanitization and be able to inject SQL outside of the comment.</p>\n<p>In most cases these interfaces won’t be used with user input and users should avoid doing so.</p>\n<p>Example vulnerable code:</p>\n<pre><code>Post.where(id: 1).annotate(\"#{params[:user_input]}\")\n\nPost.where(id: 1).optimizer_hints(\"#{params[:user_input]}\")\n</code></pre>\n<p>Example vulnerable QueryLogs configuration (the default configuration is not vulnerable):</p>\n<pre><code>config.active_record.query_log_tags = [\n  {\n    something: -&gt; { &lt;some value including user input&gt; }\n  }\n]\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>Avoid passing user input to annotate and avoid using QueryLogs configuration which can include user input.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.0 series\n6-1-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 6.1 series\n7-0-Make-sanitize_as_sql_comment-more-strict.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de\">https://github.com/rails/rails/commit/d7aba06953f9fa789c411676b941d20df8ef73de</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hq7p-j377-6v63\">https://github.com/advisories/GHSA-hq7p-j377-6v63</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63",
            "title": "[activerecord] SQL Injection Vulnerability via ActiveRecord comments",
            "date_modified": "2023-01-18T20:29:57.000Z",
            "date_published": "2023-01-18T18:20:19.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hq7p-j377-6v63"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the Range header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44570.</p>\n<p>Versions Affected: &gt;= 1.5.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.2, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause the Range header parsing component in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that deal with Range requests (such as streaming applications, or applications that serve files) may be impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.0 series\n2-1-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.1 series\n2-2-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.2 series\n3-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65f5-mfpf-vfhj\">https://github.com/advisories/GHSA-65f5-mfpf-vfhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj",
            "title": "[rack] Denial of service via header parsing in Rack",
            "date_modified": "2023-01-18T18:19:34.000Z",
            "date_published": "2023-01-18T18:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the Range header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44570.</p>\n<p>Versions Affected: &gt;= 1.5.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.2, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause the Range header parsing component in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that deal with Range requests (such as streaming applications, or applications that serve files) may be impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.0 series\n2-1-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.1 series\n2-2-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.2 series\n3-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65f5-mfpf-vfhj\">https://github.com/advisories/GHSA-65f5-mfpf-vfhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj",
            "title": "[rack] Denial of service via header parsing in Rack",
            "date_modified": "2023-01-18T18:19:34.000Z",
            "date_published": "2023-01-18T18:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the Range header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44570.</p>\n<p>Versions Affected: &gt;= 1.5.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.2, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause the Range header parsing component in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that deal with Range requests (such as streaming applications, or applications that serve files) may be impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.0 series\n2-1-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.1 series\n2-2-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.2 series\n3-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65f5-mfpf-vfhj\">https://github.com/advisories/GHSA-65f5-mfpf-vfhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj",
            "title": "[rack] Denial of service via header parsing in Rack",
            "date_modified": "2023-01-18T18:19:34.000Z",
            "date_published": "2023-01-18T18:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible denial of service vulnerability in the Range header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2022-44570.</p>\n<p>Versions Affected: &gt;= 1.5.0 Not affected: None. Fixed Versions: 2.0.9.2, 2.1.4.2, 2.2.6.2, 3.0.0.1\nImpact</p>\n<p>Carefully crafted input can cause the Range header parsing component in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that deal with Range requests (such as streaming applications, or applications that serve files) may be impacted.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>2-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.0 series\n2-1-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.1 series\n2-2-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 2.2 series\n3-0-Fix-ReDoS-in-Rack-Utils.get_byte_ranges.patch - Patch for 3.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rack/rack/releases/tag/v3.0.4.1\">https://github.com/rack/rack/releases/tag/v3.0.4.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-65f5-mfpf-vfhj\">https://github.com/advisories/GHSA-65f5-mfpf-vfhj</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj",
            "title": "[rack] Denial of service via header parsing in Rack",
            "date_modified": "2023-01-18T18:19:34.000Z",
            "date_published": "2023-01-18T18:19:33.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-65f5-mfpf-vfhj"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}