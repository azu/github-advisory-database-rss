{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>The 1.x branch and the 2.x branch of <a href=\"https://github.com/lloyd/yajl\">yajl</a> contain an integer overflow which leads to subsequent heap memory corruption when dealing with large (~2GB) inputs.</p>\n<h3 id=\"details\">Details</h3>\n<p>The <a href=\"https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64\">reallocation logic at yajl_buf.c#L64</a> may result in the <code>need</code> 32bit integer wrapping to 0 when <code>need</code> approaches a value of 0x80000000 (i.e. ~2GB of data), which results in a reallocation of buf-&gt;alloc into a small heap chunk.</p>\n<p>These integers are declared as <code>size_t</code> in the 2.x branch of <code>yajl</code>, which practically prevents the issue from triggering on 64bit platforms, however this does not preclude this issue triggering on 32bit builds on which <code>size_t</code> is a 32bit integer.</p>\n<p>Subsequent population of this under-allocated heap chunk is based on the original buffer size, leading to heap memory corruption.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>We rate this as a moderate severity vulnerability which mostly impacts process availability as we believe exploitation for arbitrary code execution to be unlikely.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in yajl-ruby 1.4.2</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Avoid passing large inputs to YAJL</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64\">https://github.com/brianmario/yajl-ruby/blob/7168bd79b888900aa94523301126f968a93eb3a6/ext/yajl/yajl_buf.c#L64</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/brianmario/yajl-ruby/issues\">yajl-ruby</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm\">https://github.com/brianmario/yajl-ruby/security/advisories/GHSA-jj47-x69x-mxrm</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-jj47-x69x-mxrm\">https://github.com/advisories/GHSA-jj47-x69x-mxrm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-jj47-x69x-mxrm",
            "title": "[yajl-ruby] Reallocation bug can trigger heap memory corruption",
            "date_modified": "2022-04-05T16:55:19.000Z",
            "date_published": "2022-04-05T15:55:51.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-jj47-x69x-mxrm"
            }
        },
        {
            "content_html": "<p>The package cocoapods-downloader before 1.6.0, from 1.6.2 and before 1.6.3 are vulnerable to Command Injection via git argument injection. When calling the Pod::Downloader.preprocess_options function and using git, both the git and branch parameters are passed to the git ls-remote subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24440\">https://nvd.nist.gov/vuln/detail/CVE-2022-24440</a></li>\n<li><a href=\"https://github.com/CocoaPods/cocoapods-downloader/pull/124\">https://github.com/CocoaPods/cocoapods-downloader/pull/124</a></li>\n<li><a href=\"https://github.com/CocoaPods/cocoapods-downloader/pull/128\">https://github.com/CocoaPods/cocoapods-downloader/pull/128</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414278\">https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414278</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7627-mp87-jf6q\">https://github.com/advisories/GHSA-7627-mp87-jf6q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7627-mp87-jf6q",
            "title": "[cocoapods-downloader] Command injection in cocoapods-downloader",
            "date_modified": "2022-04-05T22:20:23.000Z",
            "date_published": "2022-04-02T00:00:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7627-mp87-jf6q"
            }
        },
        {
            "content_html": "<p>The package cocoapods-downloader before 1.6.0, from 1.6.2 and before 1.6.3 are vulnerable to Command Injection via git argument injection. When calling the Pod::Downloader.preprocess_options function and using git, both the git and branch parameters are passed to the git ls-remote subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24440\">https://nvd.nist.gov/vuln/detail/CVE-2022-24440</a></li>\n<li><a href=\"https://github.com/CocoaPods/cocoapods-downloader/pull/124\">https://github.com/CocoaPods/cocoapods-downloader/pull/124</a></li>\n<li><a href=\"https://github.com/CocoaPods/cocoapods-downloader/pull/128\">https://github.com/CocoaPods/cocoapods-downloader/pull/128</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414278\">https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414278</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7627-mp87-jf6q\">https://github.com/advisories/GHSA-7627-mp87-jf6q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7627-mp87-jf6q",
            "title": "[cocoapods-downloader] Command injection in cocoapods-downloader",
            "date_modified": "2022-04-05T22:20:23.000Z",
            "date_published": "2022-04-02T00:00:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7627-mp87-jf6q"
            }
        },
        {
            "content_html": "<p>The package cocoapods-downloader before 1.6.2 are vulnerable to Command Injection via hg argument injection. When calling the download function (when using hg), the url (and/or revision, tag, branch) is passed to the hg clone command in a way that additional flags can be set. The additional flags can be used to perform a command injection.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21223\">https://nvd.nist.gov/vuln/detail/CVE-2022-21223</a></li>\n<li><a href=\"https://github.com/CocoaPods/cocoapods-downloader/pull/127\">https://github.com/CocoaPods/cocoapods-downloader/pull/127</a></li>\n<li><a href=\"https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414280\">https://snyk.io/vuln/SNYK-RUBY-COCOAPODSDOWNLOADER-2414280</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g397-v4w5-4m79\">https://github.com/advisories/GHSA-g397-v4w5-4m79</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g397-v4w5-4m79",
            "title": "[cocoapods-downloader] Command injection in cocoapods-downloader",
            "date_modified": "2022-04-05T22:22:21.000Z",
            "date_published": "2022-04-02T00:00:13.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g397-v4w5-4m79"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Applications using <a href=\"https://github.com/asciidoctor/asciidoctor\">Asciidoctor (Ruby)</a> with <a href=\"https://github.com/jirutka/asciidoctor-include-ext\">asciidoctor-include-ext</a> (prior to version 0.4.0), which render user-supplied input in AsciiDoc markup, may allow an attacker to execute arbitrary system commands on the host operating system. This attack is possible even when <code>allow-uri-read</code> is disabled!</p>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in commit c7ea001 (and further improved in cbaccf3), which is included in version <a href=\"https://rubygems.org/gems/asciidoctor-include-ext/versions/0.4.0\">0.4.0</a>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<pre><code class=\"language-rb\">require 'asciidoctor/include_ext'\n\nclass Asciidoctor::IncludeExt::IncludeProcessor\n  # Overrides superclass private method to mitigate Command Injection\n  # vulnerability in asciidoctor-include-ext &lt;0.4.0.\n  def target_uri?(target)\n    target.downcase.start_with?('http://', 'https://') \\\n      &amp;&amp; URI.parse(target).is_a?(URI::HTTP)\n  rescue URI::InvalidURIError\n    false\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://sakurity.com/blog/2015/02/28/openuri.html\">https://sakurity.com/blog/2015/02/28/openuri.html</a></li>\n</ul>\n<h3 id=\"credits\">Credits</h3>\n<p>This vulnerability was discovered by Joern Schneeweisz from the GitLab Security Research Team.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>See commit message c7ea001.</p>\n<p>If you have any questions or comments about this advisory open an issue in <a href=\"https://github.com/jirutka/asciidoctor-include-ext/issues/\">jirutka/asciidoctor-include-ext</a>.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/security/advisories/GHSA-v222-6mr4-qj29\">https://github.com/jirutka/asciidoctor-include-ext/security/advisories/GHSA-v222-6mr4-qj29</a></li>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/commit/c7ea001a597c7033575342c51483dab7b87ae155\">https://github.com/jirutka/asciidoctor-include-ext/commit/c7ea001a597c7033575342c51483dab7b87ae155</a></li>\n<li><a href=\"https://github.com/jirutka/asciidoctor-include-ext/commit/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee\">https://github.com/jirutka/asciidoctor-include-ext/commit/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24803\">https://nvd.nist.gov/vuln/detail/CVE-2022-24803</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-v222-6mr4-qj29\">https://github.com/advisories/GHSA-v222-6mr4-qj29</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-v222-6mr4-qj29",
            "title": "[asciidoctor-include-ext] Command Injection vulnerability in asciidoctor-include-ext",
            "date_modified": "2022-04-04T20:39:50.000Z",
            "date_published": "2022-03-31T23:27:15.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-v222-6mr4-qj29"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using Puma behind a proxy that does not properly validate that the incoming HTTP request matches the RFC7230 standard, Puma and the frontend proxy may disagree on where a request starts and ends. This would allow requests to be smuggled via the front-end proxy to Puma.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Lenient parsing of <code>Transfer-Encoding</code> headers, when unsupported encodings should be rejected and the final encoding must be <code>chunked</code>.</li>\n<li>Lenient parsing of malformed <code>Content-Length</code> headers and chunk sizes, when only digits and hex digits should be allowed.</li>\n<li>Lenient parsing of duplicate <code>Content-Length</code> headers, when they should be rejected.</li>\n<li>Lenient parsing of the ending of chunked segments, when they should end with <code>\\r\\n</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 5.6.4 and 4.3.12.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>When deploying a proxy in front of Puma, turning on any and all functionality to make sure that the request matches the RFC7230 standard. </p>\n<p>These proxy servers are known to have \"good\" behavior re: this standard and upgrading Puma may not be necessary. Users are encouraged to validate for themselves.</p>\n<ul>\n<li>Nginx (latest)</li>\n<li>Apache (latest)</li>\n<li>Haproxy 2.5+</li>\n<li>Caddy (latest)</li>\n<li>Traefik (latest)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5\">https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24790\">https://nvd.nist.gov/vuln/detail/CVE-2022-24790</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9",
            "title": "[puma] HTTP Request Smuggling in puma",
            "date_modified": "2022-04-01T20:00:07.000Z",
            "date_published": "2022-03-30T21:48:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>When using Puma behind a proxy that does not properly validate that the incoming HTTP request matches the RFC7230 standard, Puma and the frontend proxy may disagree on where a request starts and ends. This would allow requests to be smuggled via the front-end proxy to Puma.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Lenient parsing of <code>Transfer-Encoding</code> headers, when unsupported encodings should be rejected and the final encoding must be <code>chunked</code>.</li>\n<li>Lenient parsing of malformed <code>Content-Length</code> headers and chunk sizes, when only digits and hex digits should be allowed.</li>\n<li>Lenient parsing of duplicate <code>Content-Length</code> headers, when they should be rejected.</li>\n<li>Lenient parsing of the ending of chunked segments, when they should end with <code>\\r\\n</code>.</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 5.6.4 and 4.3.12.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>When deploying a proxy in front of Puma, turning on any and all functionality to make sure that the request matches the RFC7230 standard. </p>\n<p>These proxy servers are known to have \"good\" behavior re: this standard and upgrading Puma may not be necessary. Users are encouraged to validate for themselves.</p>\n<ul>\n<li>Nginx (latest)</li>\n<li>Apache (latest)</li>\n<li>Haproxy 2.5+</li>\n<li>Caddy (latest)</li>\n<li>Traefik (latest)</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a></li>\n<li>See our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/puma/puma/security/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5\">https://github.com/puma/puma/commit/5bb7d202e24dec00a898dca4aa11db391d7787a5</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24790\">https://nvd.nist.gov/vuln/detail/CVE-2022-24790</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-h99w-9q5r-gjq9\">https://github.com/advisories/GHSA-h99w-9q5r-gjq9</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9",
            "title": "[puma] HTTP Request Smuggling in puma",
            "date_modified": "2022-04-01T20:00:07.000Z",
            "date_published": "2022-03-30T21:48:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-h99w-9q5r-gjq9"
            }
        },
        {
            "content_html": "<p>A flaw was found in all versions of kubeclient up to (but not including) v4.9.3, the Ruby client for Kubernetes REST API, in the way it parsed kubeconfig files. When the kubeconfig file does not configure custom CA to verify certs, kubeclient ends up accepting any certificate (it wrongly returns VERIFY_NONE). Ruby applications that leverage kubeclient to parse kubeconfig files are susceptible to Man-in-the-middle attacks (MITM).</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-0759\">https://nvd.nist.gov/vuln/detail/CVE-2022-0759</a></li>\n<li><a href=\"https://github.com/ManageIQ/kubeclient/issues/554\">https://github.com/ManageIQ/kubeclient/issues/554</a></li>\n<li><a href=\"https://github.com/ManageIQ/kubeclient/issues/555\">https://github.com/ManageIQ/kubeclient/issues/555</a></li>\n<li><a href=\"https://github.com/ManageIQ/kubeclient/pull/556\">https://github.com/ManageIQ/kubeclient/pull/556</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-69p3-xp37-f692\">https://github.com/advisories/GHSA-69p3-xp37-f692</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-69p3-xp37-f692",
            "title": "[kubeclient] Improper Certificate Validation in kubeclient",
            "date_modified": "2022-04-05T21:00:51.000Z",
            "date_published": "2022-03-26T00:00:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-69p3-xp37-f692"
            }
        },
        {
            "content_html": "<p>An authorization flaw was found in Foreman Ansible. An authenticated attacker with certain permissions to create and run Ansible jobs can access hosts through job templates. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-3589\">https://nvd.nist.gov/vuln/detail/CVE-2021-3589</a></li>\n<li><a href=\"https://access.redhat.com/security/cve/CVE-2021-3589\">https://access.redhat.com/security/cve/CVE-2021-3589</a></li>\n<li><a href=\"https://bugzilla.redhat.com/show_bug.cgi?id=1969265\">https://bugzilla.redhat.com/show_bug.cgi?id=1969265</a></li>\n<li><a href=\"https://github.com/theforeman/foreman_ansible/commit/a5e0827bc3ec6c8ab82f968907857a15646305d5\">https://github.com/theforeman/foreman_ansible/commit/a5e0827bc3ec6c8ab82f968907857a15646305d5</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vvff-6wrr-4g7q\">https://github.com/advisories/GHSA-vvff-6wrr-4g7q</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vvff-6wrr-4g7q",
            "title": "[foreman_ansible] Missing Authentication for Critical Function in Foreman Ansible",
            "date_modified": "2022-04-05T19:28:40.000Z",
            "date_published": "2022-03-24T00:00:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vvff-6wrr-4g7q"
            }
        },
        {
            "content_html": "<p>WEBrick 1.3.1 in Ruby 1.8.6 through patchlevel 383, 1.8.7 through patchlevel 248, 1.8.8dev, 1.9.1 through patchlevel 376, and 1.9.2dev writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2009-4492\">https://nvd.nist.gov/vuln/detail/CVE-2009-4492</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-6mq2-37j5-w6r6\">https://github.com/advisories/GHSA-6mq2-37j5-w6r6</a></li>\n<li><a href=\"http://secunia.com/advisories/37949\">http://secunia.com/advisories/37949</a></li>\n<li><a href=\"http://securitytracker.com/id?1023429\">http://securitytracker.com/id?1023429</a></li>\n<li><a href=\"http://www.redhat.com/support/errata/RHSA-2011-0908.html\">http://www.redhat.com/support/errata/RHSA-2011-0908.html</a></li>\n<li><a href=\"http://www.redhat.com/support/errata/RHSA-2011-0909.html\">http://www.redhat.com/support/errata/RHSA-2011-0909.html</a></li>\n<li><a href=\"http://www.ruby-lang.org/en/news/2010/01/10/webrick-escape-sequence-injection\">http://www.ruby-lang.org/en/news/2010/01/10/webrick-escape-sequence-injection</a></li>\n<li><a href=\"http://www.securityfocus.com/archive/1/508830/100/0/threaded\">http://www.securityfocus.com/archive/1/508830/100/0/threaded</a></li>\n<li><a href=\"http://www.securityfocus.com/bid/37710\">http://www.securityfocus.com/bid/37710</a></li>\n<li><a href=\"http://www.ush.it/team/ush/hack_httpd_escape/adv.txt\">http://www.ush.it/team/ush/hack_httpd_escape/adv.txt</a></li>\n<li><a href=\"http://www.vupen.com/english/advisories/2010/0089\">http://www.vupen.com/english/advisories/2010/0089</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-6mq2-37j5-w6r6",
            "title": "[webrick] Moderate severity vulnerability that affects webrick",
            "date_modified": "2022-03-12T00:17:56.000Z",
            "date_published": "2017-10-24T18:33:38.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-6mq2-37j5-w6r6"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<p>The Active Storage module of Rails starting with version 5.2.0 are possibly vulnerable to code injection. This issue was patched in versions 5.2.6.3, 6.0.4.7, 6.1.4.7, and 7.0.2.3. To work around this issue, applications should implement a strict allow-list on accepted transformation methods or arguments.  Additionally, a strict ImageMagick security policy will help mitigate this issue.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-21831\">https://nvd.nist.gov/vuln/detail/CVE-2022-21831</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e\">https://github.com/rails/rails/commit/0a72f7d670e9aa77a0bb8584cb1411ddabb7546e</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI\">https://groups.google.com/g/rubyonrails-security/c/n-p-W1yxatI</a></li>\n<li><a href=\"https://rubysec.com/advisories/CVE-2022-21831/\">https://rubysec.com/advisories/CVE-2022-21831/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-w749-p3v6-hccq\">https://github.com/advisories/GHSA-w749-p3v6-hccq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq",
            "title": "[activestorage] Possible code injection vulnerability in Rails / Active Storage",
            "date_modified": "2022-03-11T20:37:19.000Z",
            "date_published": "2022-03-08T21:25:54.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-w749-p3v6-hccq"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>CommonMarker uses <code>cmark-gfm</code> for rendering <a href=\"https://github.github.com/gfm/\">Github Flavored Markdown</a>. An <a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">integer overflow in <code>cmark-gfm</code>'s table row parsing</a> may lead to heap memory corruption when parsing tables who's marker rows contain more than UINT16_MAX columns. The impact of this heap corruption ranges from Information Leak to Arbitrary Code Execution.</p>\n<p>If affected versions of CommonMarker are used for rendering remote user controlled markdown, this vulnerability may lead to Remote Code Execution (RCE).</p>\n<h3 id=\"patches\">Patches</h3>\n<p>This vulnerability has been patched in the following CommonMarker release:</p>\n<ul>\n<li>v0.23.4</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>The vulnerability exists in the table markdown extensions of <code>cmark-gfm</code>. Disabling any use of the table extension will prevent this vulnerability from being triggered.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n</ul>\n<h3 id=\"acknowledgements\">Acknowledgements</h3>\n<p>We would like to thank Felix Wilhelm of Google's Project Zero for reporting this vulnerability</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"http://github.com/gjtorikian/commonmarker\">CommonMarker</a><h3 id=\"references-1\">References</h3>\n</li>\n</ul>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x\">https://github.com/github/cmark-gfm/security/advisories/GHSA-mc3g-88wq-6f4x</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3\">https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-fmx4-26r3-wxpf\">https://github.com/advisories/GHSA-fmx4-26r3-wxpf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf",
            "title": "[commonmarker] Integer overflow in cmark-gfm table parsing extension leads to heap memory corruption",
            "date_modified": "2022-03-03T20:29:09.000Z",
            "date_published": "2022-03-03T20:28:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-fmx4-26r3-wxpf"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>The actual vulnerability has been discovered on <code>solidus_auth_devise</code>. See <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a> for details.</p>\n<p>The security advisory here exists to provide an extra layer of security in the form of a monkey patch for users who don't update <code>solidus_auth_devise</code>. For this reason, it has been marked as low impact on this end.</p>\n<h3 id=\"patches\">Patches</h3>\n<p>For extra security, update <code>solidus_core</code> to versions <code>3.1.3</code>, <code>3.0.3</code> or <code>2.11.12</code>.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Look at the workarounds described at <a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">GHSA-xm34-v85h-9pg2</a>.</li>\n</ul>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in <a href=\"https://github.com/solidusio/solidus_auth_devise/issues\">solidus_auth_devise</a> or a discussion in <a href=\"https://github.com/solidusio/solidus/discussions\">solidus</a></li>\n<li>Email us at <a href=\"mailto:security@soliidus.io\">security@solidus.io</a></li>\n<li>Contact the core team on <a href=\"http://slack.solidus.io/\">Slack</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g\">https://github.com/solidusio/solidus/security/advisories/GHSA-5629-8855-gf4g</a></li>\n<li><a href=\"https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2\">https://github.com/solidusio/solidus_auth_devise/security/advisories/GHSA-xm34-v85h-9pg2</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5629-8855-gf4g\">https://github.com/advisories/GHSA-5629-8855-gf4g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5629-8855-gf4g",
            "title": "[solidus_core] Authentication Bypass by CSRF Weakness ",
            "date_modified": "2022-03-02T23:51:25.000Z",
            "date_published": "2021-11-18T20:12:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5629-8855-gf4g"
            }
        },
        {
            "content_html": "<p>In Publify, 9.0.0.pre1 to 9.2.4 are vulnerable to Improper Access Control. “guest” role users can self-register even when the admin does not allow. This happens due to front-end restriction only.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-25973\">https://nvd.nist.gov/vuln/detail/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e\">https://github.com/publify/publify/commit/3447e0241e921b65f6eb1090453d8ea73e98387e</a></li>\n<li><a href=\"https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973\">https://www.whitesourcesoftware.com/vulnerability-database/CVE-2021-25973</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x24j-87x9-jvv5\">https://github.com/advisories/GHSA-x24j-87x9-jvv5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5",
            "title": "[publify_core] Improper Authorization in Publify",
            "date_modified": "2022-03-02T23:50:10.000Z",
            "date_published": "2021-11-03T17:34:22.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x24j-87x9-jvv5"
            }
        },
        {
            "content_html": "<p>This is an XSS vulnerability that has the potential to impact anyone using translations with the view_component gem. Data received via user input and passed as an interpolation argument to the <code>translate</code> method is not properly sanitized before display.</p>\n<p>Versions 2.29.1 and 2.49.1 have been released and fully mitigate the vulnerability.</p>\n<p>Avoid passing user input to the <code>translate</code> function, or sanitize the inputs before passing them.</p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Open an issue in the <a href=\"http://github.com/github/view_component\">github/view_component</a> project</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/github/view_component/security/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n<li><a href=\"https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9\">https://github.com/github/view_component/commit/3f82a6e62578ff6f361aba24a1feb2caccf83ff9</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-24722\">https://nvd.nist.gov/vuln/detail/CVE-2022-24722</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.31.2\">https://github.com/github/view_component/releases/tag/v2.31.2</a></li>\n<li><a href=\"https://github.com/github/view_component/releases/tag/v2.49.1\">https://github.com/github/view_component/releases/tag/v2.49.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-cm9w-c4rj-r2cf\">https://github.com/advisories/GHSA-cm9w-c4rj-r2cf</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf",
            "title": "[view_component] Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in view_component",
            "date_modified": "2022-03-11T20:08:42.000Z",
            "date_published": "2022-03-02T22:24:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-cm9w-c4rj-r2cf"
            }
        }
    ]
}