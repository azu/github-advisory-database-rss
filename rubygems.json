{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>The git gem, between versions 1.2.0 and 1.12.0, incorrectly parsed the output of the <code>git ls-files</code> command using <code>eval()</code> to unescape quoted file names. If a file name was added to the git repository contained special characters, such as <code>\\n</code>, then the <code>git ls-files</code> command would print the file name in quotes and escape any special characters. If the <code>Git#ls_files</code> method encountered a quoted file name it would use <code>eval()</code> to unquote and unescape any special characters, leading to potential remote code execution. Version 1.13.0 of the git gem was released which correctly parses any quoted file names.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/ruby-git/ruby-git/pull/602\">https://github.com/ruby-git/ruby-git/pull/602</a></li>\n<li><a href=\"https://github.com/ruby-git/ruby-git/releases/tag/v1.13.0\">https://github.com/ruby-git/ruby-git/releases/tag/v1.13.0</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/git/CVE-2022-46648.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/git/CVE-2022-46648.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-pfpr-3463-c6jh\">https://github.com/advisories/GHSA-pfpr-3463-c6jh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-pfpr-3463-c6jh",
            "title": "[git] ruby-git has potential remote code execution vulnerability",
            "date_modified": "2023-01-09T21:55:14.000Z",
            "date_published": "2023-01-09T21:55:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-pfpr-3463-c6jh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability has been found in jamesmartin Inline SVG up to 1.7.1 and classified as problematic. Affected by this vulnerability is an unknown functionality of the file <code>lib/inline_svg/action_view/helpers.rb</code> of the component <code>URL Parameter Handler</code>. The manipulation of the argument filename leads to cross site scripting. The attack can be launched remotely. Upgrading to version 1.7.2 is able to address this issue. The name of the patch is f5363b351508486021f99e083c92068cf2943621. It is recommended to upgrade the affected component. The identifier VDB-217597 was assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36644\">https://nvd.nist.gov/vuln/detail/CVE-2020-36644</a></li>\n<li><a href=\"https://github.com/jamesmartin/inline_svg/pull/117\">https://github.com/jamesmartin/inline_svg/pull/117</a></li>\n<li><a href=\"https://github.com/jamesmartin/inline_svg/commit/f5363b351508486021f99e083c92068cf2943621\">https://github.com/jamesmartin/inline_svg/commit/f5363b351508486021f99e083c92068cf2943621</a></li>\n<li><a href=\"https://github.com/jamesmartin/inline_svg/releases/tag/v1.7.2\">https://github.com/jamesmartin/inline_svg/releases/tag/v1.7.2</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217597\">https://vuldb.com/?ctiid.217597</a></li>\n<li><a href=\"https://vuldb.com/?id.217597\">https://vuldb.com/?id.217597</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-p33q-4h4m-j994\">https://github.com/advisories/GHSA-p33q-4h4m-j994</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-p33q-4h4m-j994",
            "title": "[inline_svg] Inline SVG vulnerable to Cross-site Scripting",
            "date_modified": "2023-01-12T18:51:23.000Z",
            "date_published": "2023-01-07T12:30:14.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-p33q-4h4m-j994"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in ytti Oxidized Web. It has been classified as problematic. Affected is an unknown function of the file <code>lib/oxidized/web/views/conf_search.haml</code>. The manipulation of the argument <code>to_research</code> leads to cross site scripting. It is possible to launch the attack remotely. The name of the patch is 55ab9bdc68b03ebce9280b8746ef31d7fdedcc45. It is recommended to apply a patch to fix this issue. VDB-216870 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-25088\">https://nvd.nist.gov/vuln/detail/CVE-2019-25088</a></li>\n<li><a href=\"https://github.com/ytti/oxidized-web/pull/195\">https://github.com/ytti/oxidized-web/pull/195</a></li>\n<li><a href=\"https://github.com/ytti/oxidized-web/commit/55ab9bdc68b03ebce9280b8746ef31d7fdedcc45\">https://github.com/ytti/oxidized-web/commit/55ab9bdc68b03ebce9280b8746ef31d7fdedcc45</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.216870\">https://vuldb.com/?ctiid.216870</a></li>\n<li><a href=\"https://vuldb.com/?id.216870\">https://vuldb.com/?id.216870</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8qwh-rm6c-jv96\">https://github.com/advisories/GHSA-8qwh-rm6c-jv96</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8qwh-rm6c-jv96",
            "title": "[oxidized-web] Oxidized Web vulnerable to Cross-site Scripting",
            "date_modified": "2023-01-09T20:08:56.000Z",
            "date_published": "2022-12-27T12:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8qwh-rm6c-jv96"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>PgHero before 3.1.0 allows Information Disclosure via EXPLAIN because query results may be present in an error message. (Depending on database user privileges, this may only be information from the database, or may be information from file contents on the database server.)</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22626\">https://nvd.nist.gov/vuln/detail/CVE-2023-22626</a></li>\n<li><a href=\"https://github.com/ankane/pghero/issues/439\">https://github.com/ankane/pghero/issues/439</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pghero/CVE-2023-22626.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/pghero/CVE-2023-22626.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vf99-xw26-86g5\">https://github.com/advisories/GHSA-vf99-xw26-86g5</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vf99-xw26-86g5",
            "title": "[pghero] PgHero Allows Information Disclosure Through EXPLAIN Feature",
            "date_modified": "2023-01-11T20:54:21.000Z",
            "date_published": "2023-01-05T09:30:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vf99-xw26-86g5"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in rf Keynote up to 0.x. It has been rated as problematic. Affected by this issue is some unknown functionality of the file lib/keynote/rumble.rb. The manipulation of the argument value leads to cross site scripting. The attack may be launched remotely. Upgrading to version 1.0.0 can address this issue. The name of the patch is 05be4356b0a6ca7de48da926a9b997beb5ffeb4a. It is recommended to upgrade the affected component. VDB-217142 is the identifier assigned to this vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2017-20159\">https://nvd.nist.gov/vuln/detail/CVE-2017-20159</a></li>\n<li><a href=\"https://github.com/rf-/keynote/commit/05be4356b0a6ca7de48da926a9b997beb5ffeb4a\">https://github.com/rf-/keynote/commit/05be4356b0a6ca7de48da926a9b997beb5ffeb4a</a></li>\n<li><a href=\"https://github.com/rf-/keynote/releases/tag/v1.0.0\">https://github.com/rf-/keynote/releases/tag/v1.0.0</a></li>\n<li><a href=\"https://vuldb.com/?ctiid.217142\">https://vuldb.com/?ctiid.217142</a></li>\n<li><a href=\"https://vuldb.com/?id.217142\">https://vuldb.com/?id.217142</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/keynote/CVE-2017-20159.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/keynote/CVE-2017-20159.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-399p-vq28-5hg8\">https://github.com/advisories/GHSA-399p-vq28-5hg8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-399p-vq28-5hg8",
            "title": "[keynote] keynote Cross-site Scripting vulnerability",
            "date_modified": "2023-01-10T16:08:03.000Z",
            "date_published": "2022-12-31T12:30:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-399p-vq28-5hg8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>I found \"multipart/form-data request tampering vulnerability\" caused by Content-Disposition \"filename\" lack of escaping in httparty.</p>\n<p><code>httparty/lib/httparty/request</code> &gt; <code>body.rb</code> &gt; <code>def generate_multipart</code></p>\n<p><a href=\"https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43\">https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43</a></p>\n<p>By exploiting this problem, the following attacks are possible</p>\n<ul>\n<li>An attack that rewrites the \"name\" field according to the crafted file name, impersonating (overwriting) another field.</li>\n<li>Attacks that rewrite the filename extension at the time multipart/form-data is generated by tampering with the filename</li>\n</ul>\n<p>For example, this vulnerability can be exploited to generate the following Content-Disposition.</p>\n<blockquote>\n<p>Normal Request example:\nnormal input filename: <code>abc.txt</code></p>\n<p>generated normal header in multipart/form-data\n<code>Content-Disposition: form-data; name=\"avatar\"; filename=\"abc.txt\"</code></p>\n</blockquote>\n<blockquote>\n<p>Malicious Request example\nmalicious input filename: <code>overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt</code></p>\n<p>generated malicious header in multipart/form-data:\n<code>Content-Disposition: form-data; name=\"avatar\"; filename=\"overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt\"</code></p>\n</blockquote>\n<p>The Abused Header has multiple name ( <code>avatar</code> &amp; <code>foo</code> ) fields and the \"filename\" has been rewritten from <code>*.txt</code> to <code>*.sh</code> .</p>\n<p>These problems can result in successful or unsuccessful attacks, depending on the behavior of the parser receiving the request.\nI have confirmed that the attack succeeds, at least in the following frameworks</p>\n<ul>\n<li>Spring (Java)</li>\n<li>Ktor (Kotlin)</li>\n<li>Ruby on Rails (Ruby)</li>\n</ul>\n<p>The cause of this problem is the lack of escaping of the <code>\"</code> (Double-Quote) character in Content-Disposition &gt; filename.</p>\n<p>WhatWG's HTML spec has an escaping requirement.</p>\n<p><a href=\"https://html.spec.whatwg.org/#multipart-form-data\">https://html.spec.whatwg.org/#multipart-form-data</a></p>\n<blockquote>\n<p>For field names and filenames for file fields, the result of the encoding in the previous bullet point must be escaped by replacing any 0x0A (LF) bytes with the byte sequence <code>%0A</code>, 0x0D (CR) with <code>%0D</code> and 0x22 (\") with <code>%22</code>. The user agent must not perform any other escapes.</p>\n</blockquote>\n<h3 id=\"patches\">Patches</h3>\n<p>As noted at the beginning of this section, encoding must be done as described in the HTML Spec.</p>\n<p><a href=\"https://html.spec.whatwg.org/#multipart-form-data\">https://html.spec.whatwg.org/#multipart-form-data</a></p>\n<blockquote>\n<p>For field names and filenames for file fields, the result of the encoding in the previous bullet point must be escaped by replacing any 0x0A (LF) bytes with the byte sequence <code>%0A</code>, 0x0D (CR) with <code>%0D</code> and 0x22 (\") with <code>%22</code>. The user agent must not perform any other escapes.</p>\n</blockquote>\n<p>Therefore, it is recommended that Content-Disposition be modified by either of the following</p>\n<blockquote>\n<p>Before:\n<code>Content-Disposition: attachment;filename=\"malicious.sh\";dummy=.txt</code></p>\n</blockquote>\n<blockquote>\n<p>After:\n<code>Content-Disposition: attachment;filename=\"%22malicious.sh%22;dummy=.txt\"</code></p>\n</blockquote>\n<p><a href=\"https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43\">https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43</a></p>\n<pre><code>file_name.gsub('\"', '%22')\n</code></pre>\n<p>Also, as for <code>\\r</code>, <code>\\n</code>, URL Encode is not done, but it is not newlines, so it seemed to be OK.\nHowever, since there may be omissions, it is safer to URL encode these as well, if possible.\n( <code>\\r</code> to <code>%0A</code> and <code>\\d</code> to <code>%0D</code> ) </p>\n<h3 id=\"poc\">PoC</h3>\n<h4 id=\"poc-environment\">PoC Environment</h4>\n<p>OS: macOS Monterey(12.3)\nRuby ver: ruby 3.1.2p20 \nhttparty ver: 0.20.0\n(Python3 - HTTP Request Logging Server)</p>\n<h3 id=\"poc-procedure\">PoC procedure</h3>\n<p>(Linux or MacOS is required. \nThis is because Windows does not allow file names containing <code>\"</code> (double-quote) .)</p>\n<ol>\n<li>Create Project</li>\n</ol>\n<pre><code>$ mkdir my-app\n$ cd my-app\n$ gem install httparty\n</code></pre>\n<ol start=\"2\">\n<li>Create malicious file</li>\n</ol>\n<pre><code>$ touch 'overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt'\n</code></pre>\n<ol start=\"3\">\n<li>Generate Vuln code</li>\n</ol>\n<pre><code>$ vi example.rb\n</code></pre>\n<pre><code>require 'httparty'\n\nfilename = 'overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt'\n\nHTTParty.post('http://localhost:12345/',\n  body: {\n    name: 'Foo Bar',\n    email: 'example@email.com',\n    avatar: File.open(filename)\n  }\n)\n</code></pre>\n<ol start=\"4\">\n<li>Run Logging Server</li>\n</ol>\n<p>I write Python code, but any method will work as long as you can see the HTTP Request Body.\n(e.g. Debugger, HTTP Logging Server, Packet Capture) </p>\n<p>$ vi logging.py</p>\n<pre><code>from http.server import HTTPServer\nfrom http.server import BaseHTTPRequestHandler\n\nclass LoggingServer(BaseHTTPRequestHandler):\n\n    def do_POST(self):\n        self.send_response(200)\n        self.end_headers()\n        self.wfile.write(\"ok\".encode(\"utf-8\"))\n\n        content_length = int(self.headers['Content-Length'])\n        post_data = self.rfile.read(content_length)\n        print(\"POST request,\\nPath: %s\\nHeaders:\\n%s\\n\\nBody:\\n%s\\n\",\n                     str(self.path), str(self.headers), post_data.decode('utf-8'))\n        self.wfile.write(\"POST request for {}\".format(self.path).encode('utf-8'))\n\nip = '127.0.0.1'\nport = 12345\n\nserver = HTTPServer((ip, port), LoggingServer)\nserver.serve_forever()\n</code></pre>\n<p>$ python logging.py</p>\n<ol start=\"5\">\n<li>Run &amp; Logging server</li>\n</ol>\n<pre><code>$ run example.rb\n</code></pre>\n<p>Return Request Header &amp; Body:</p>\n<blockquote>\n<p>User-Agent: Ruby\nContent-Type: multipart/form-data; boundary=------------------------F857UcxRc2J1zFOz\nConnection: close\nHost: localhost:12345\nContent-Length: 457</p>\n<p> --------------------------F857UcxRc2J1zFOz\nContent-Disposition: form-data; name=\"name\"</p>\n<p>Foo Bar\n--------------------------F857UcxRc2J1zFOz\nContent-Disposition: form-data; name=\"email\"</p>\n<p><a href=\"mailto:example@email.com\">example@email.com</a>\n--------------------------F857UcxRc2J1zFOz\nContent-Disposition: form-data; name=\"avatar\"; filename=\"overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt\"\nContent-Type: text/plain</p>\n<p>abc\n--------------------------F857UcxRc2J1zFOz--</p>\n</blockquote>\n<p>Content-Disposition:</p>\n<blockquote>\n<p>Content-Disposition: form-data; name=\"avatar\"; filename=\"overwrite_name_field_and_extension.sh\"; name=\"foo\"; dummy=\".txt\"</p>\n</blockquote>\n<ul>\n<li>name fields is duplicate (avator &amp; foo)</li>\n<li>filename &amp; extension tampering ( .txt --&gt; .sh )</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ol>\n<li><p>I also include a similar report that I previously reported to Firefox.\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1556711\">https://bugzilla.mozilla.org/show_bug.cgi?id=1556711</a></p>\n</li>\n<li><p>I will post some examples of frameworks that did not have problems as reference.</p>\n</li>\n</ol>\n<p>Golang\n<a href=\"https://github.com/golang/go/blob/e0e0c8fe9881bbbfe689ad94ca5dddbb252e4233/src/mime/multipart/writer.go#L144\">https://github.com/golang/go/blob/e0e0c8fe9881bbbfe689ad94ca5dddbb252e4233/src/mime/multipart/writer.go#L144</a></p>\n<p>Spring\n<a href=\"https://github.com/spring-projects/spring-framework/blob/4cc91e46b210b4e4e7ed182f93994511391b54ed/spring-web/src/main/java/org/springframework/http/ContentDisposition.java#L259-L267\">https://github.com/spring-projects/spring-framework/blob/4cc91e46b210b4e4e7ed182f93994511391b54ed/spring-web/src/main/java/org/springframework/http/ContentDisposition.java#L259-L267</a></p>\n<p>Symphony\n<a href=\"https://github.com/symfony/symfony/blob/123b1651c4a7e219ba59074441badfac65525efe/src/Symfony/Component/Mime/Header/ParameterizedHeader.php#L128-L133\">https://github.com/symfony/symfony/blob/123b1651c4a7e219ba59074441badfac65525efe/src/Symfony/Component/Mime/Header/ParameterizedHeader.php#L128-L133</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<ul>\n<li>Email us at <a href=\"mailto:kumagoro_alice@yahoo.co.jp\">kumagoro_alice@yahoo.co.jp</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/jnunemaker/httparty/security/advisories/GHSA-5pq7-52mg-hr42\">https://github.com/jnunemaker/httparty/security/advisories/GHSA-5pq7-52mg-hr42</a></li>\n<li><a href=\"https://github.com/jnunemaker/httparty/commit/cdb45a678c43e44570b4e73f84b1abeb5ec22b8e\">https://github.com/jnunemaker/httparty/commit/cdb45a678c43e44570b4e73f84b1abeb5ec22b8e</a></li>\n<li><a href=\"https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43\">https://github.com/jnunemaker/httparty/blob/4416141d37fd71bdba4f37589ec265f55aa446ce/lib/httparty/request/body.rb#L43</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5pq7-52mg-hr42\">https://github.com/advisories/GHSA-5pq7-52mg-hr42</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5pq7-52mg-hr42",
            "title": "[httparty] httparty has multipart/form-data request tampering vulnerability",
            "date_modified": "2023-01-11T05:06:20.000Z",
            "date_published": "2023-01-03T13:36:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5pq7-52mg-hr42"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CGI::Cookie.parse in Ruby through 2.6.8 mishandles security prefixes in cookie names. This also affects the CGI gem prior to versions 0.3.1, 0.2.1, 0.1.1, and 0.1.0.1 for Ruby.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41819\">https://nvd.nist.gov/vuln/detail/CVE-2021-41819</a></li>\n<li><a href=\"https://hackerone.com/reports/910552\">https://hackerone.com/reports/910552</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/\">https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220121-0003/\">https://security.netapp.com/advisory/ntap-20220121-0003/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vf4-qmvg-mh7h\">https://github.com/advisories/GHSA-4vf4-qmvg-mh7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h",
            "title": "[cgi] Cookie prefix spoofing in CGI",
            "date_modified": "2023-01-06T05:05:33.000Z",
            "date_published": "2022-01-21T23:22:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CGI::Cookie.parse in Ruby through 2.6.8 mishandles security prefixes in cookie names. This also affects the CGI gem prior to versions 0.3.1, 0.2.1, 0.1.1, and 0.1.0.1 for Ruby.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41819\">https://nvd.nist.gov/vuln/detail/CVE-2021-41819</a></li>\n<li><a href=\"https://hackerone.com/reports/910552\">https://hackerone.com/reports/910552</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/\">https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220121-0003/\">https://security.netapp.com/advisory/ntap-20220121-0003/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vf4-qmvg-mh7h\">https://github.com/advisories/GHSA-4vf4-qmvg-mh7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h",
            "title": "[cgi] Cookie prefix spoofing in CGI",
            "date_modified": "2023-01-06T05:05:33.000Z",
            "date_published": "2022-01-21T23:22:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>CGI::Cookie.parse in Ruby through 2.6.8 mishandles security prefixes in cookie names. This also affects the CGI gem prior to versions 0.3.1, 0.2.1, 0.1.1, and 0.1.0.1 for Ruby.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41819\">https://nvd.nist.gov/vuln/detail/CVE-2021-41819</a></li>\n<li><a href=\"https://hackerone.com/reports/910552\">https://hackerone.com/reports/910552</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/\">https://www.ruby-lang.org/en/news/2021/11/24/cookie-prefix-spoofing-in-cgi-cookie-parse-cve-2021-41819/</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220121-0003/\">https://security.netapp.com/advisory/ntap-20220121-0003/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41819.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4vf4-qmvg-mh7h\">https://github.com/advisories/GHSA-4vf4-qmvg-mh7h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h",
            "title": "[cgi] Cookie prefix spoofing in CGI",
            "date_modified": "2023-01-06T05:05:33.000Z",
            "date_published": "2022-01-21T23:22:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4vf4-qmvg-mh7h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A buffer overrun vulnerability was discovered in CGI.escape_html. This can lead to a buffer overflow when a user passes a very large string (&gt; 700 MB) to CGI.escape_html on a platform where long type takes 4 bytes, typically, Windows.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-41816\">https://nvd.nist.gov/vuln/detail/CVE-2021-41816</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/4MQ568ZG47c\">https://groups.google.com/g/ruby-security-ann/c/4MQ568ZG47c</a></li>\n<li><a href=\"https://hackerone.com/reports/1328463\">https://hackerone.com/reports/1328463</a></li>\n<li><a href=\"https://security-tracker.debian.org/tracker/CVE-2021-41816\">https://security-tracker.debian.org/tracker/CVE-2021-41816</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2021/11/24/buffer-overrun-in-cgi-escape_html-cve-2021-41816/\">https://www.ruby-lang.org/en/news/2021/11/24/buffer-overrun-in-cgi-escape_html-cve-2021-41816/</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20220303-0006/\">https://security.netapp.com/advisory/ntap-20220303-0006/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/IUXQCH6FRKANCVZO2Q7D2SQX33FP3KWN/</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UTOJGS5IEFDK3UOO7IY4OTTFGHGLSWZF/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41816.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/cgi/CVE-2021-41816.yml</a></li>\n<li><a href=\"https://github.com/ruby/cgi/commit/959ccf0b6a672bcc64aeaa60c6e1f9e728f1e87f\">https://github.com/ruby/cgi/commit/959ccf0b6a672bcc64aeaa60c6e1f9e728f1e87f</a></li>\n<li><a href=\"https://github.com/ruby/cgi/commit/ad079c1cb5f58eba1ffac46da79995fcf94a3a6e\">https://github.com/ruby/cgi/commit/ad079c1cb5f58eba1ffac46da79995fcf94a3a6e</a></li>\n<li><a href=\"https://github.com/ruby/cgi/commit/c6a37a671b556eb06140ea89cc465136b24207a6\">https://github.com/ruby/cgi/commit/c6a37a671b556eb06140ea89cc465136b24207a6</a></li>\n<li><a href=\"https://github.com/ruby/cgi/commit/c728632c1c09d46cfd4ecbff9caaa3651dd1002a\">https://github.com/ruby/cgi/commit/c728632c1c09d46cfd4ecbff9caaa3651dd1002a</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5cqm-crxm-6qpv\">https://github.com/advisories/GHSA-5cqm-crxm-6qpv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5cqm-crxm-6qpv",
            "title": "[cgi] Buffer overrun in CGI.escape_html",
            "date_modified": "2022-12-28T18:39:50.000Z",
            "date_published": "2021-12-14T21:36:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5cqm-crxm-6qpv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability classified as problematic has been found in cgriego active_attr up to 0.15.3. This affects the function call of the file lib/active_attr/typecasting/boolean_typecaster.rb of the component Regex Handler. The manipulation of the argument value leads to denial of service. The exploit has been disclosed to the public and may be used. Upgrading to version 0.15.4 can address this issue. The name of the patch is dab95e5843b01525444b82bd7b336ef1d79377df. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216207.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-4250\">https://nvd.nist.gov/vuln/detail/CVE-2021-4250</a></li>\n<li><a href=\"https://github.com/cgriego/active_attr/issues/184\">https://github.com/cgriego/active_attr/issues/184</a></li>\n<li><a href=\"https://github.com/cgriego/active_attr/pull/185\">https://github.com/cgriego/active_attr/pull/185</a></li>\n<li><a href=\"https://github.com/cgriego/active_attr/commit/dab95e5843b01525444b82bd7b336ef1d79377df\">https://github.com/cgriego/active_attr/commit/dab95e5843b01525444b82bd7b336ef1d79377df</a></li>\n<li><a href=\"https://github.com/cgriego/active_attr/releases/tag/v0.15.4\">https://github.com/cgriego/active_attr/releases/tag/v0.15.4</a></li>\n<li><a href=\"https://vuldb.com/?id.216207\">https://vuldb.com/?id.216207</a></li>\n<li><a href=\"https://github.com/cgriego/active_attr/releases/tag/v0.15.3\">https://github.com/cgriego/active_attr/releases/tag/v0.15.3</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/active_attr/CVE-2021-4250.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/active_attr/CVE-2021-4250.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-4whf-rmx5-8frv\">https://github.com/advisories/GHSA-4whf-rmx5-8frv</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-4whf-rmx5-8frv",
            "title": "[active_attr] active_attr Improper Resource Shutdown or Release vulnerability",
            "date_modified": "2023-01-11T05:06:04.000Z",
            "date_published": "2022-12-19T00:30:23.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-4whf-rmx5-8frv"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A vulnerability was found in ahorner text-helpers 1.1.0/1.1.1. This vulnerability affects unknown code of the file lib/text_helpers/translation.rb. The manipulation of the argument link leads to use of web link to untrusted target with window.opener access. The attack can be initiated remotely. Upgrading to version 1.2.0 can address this issue. The name of the patch is 184b60ded0e43c985788582aca2d1e746f9405a3. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216520.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-36624\">https://nvd.nist.gov/vuln/detail/CVE-2020-36624</a></li>\n<li><a href=\"https://github.com/ahorner/text-helpers/pull/19\">https://github.com/ahorner/text-helpers/pull/19</a></li>\n<li><a href=\"https://github.com/ahorner/text-helpers/commit/184b60ded0e43c985788582aca2d1e746f9405a3\">https://github.com/ahorner/text-helpers/commit/184b60ded0e43c985788582aca2d1e746f9405a3</a></li>\n<li><a href=\"https://github.com/ahorner/text-helpers/releases/tag/v1.2.0\">https://github.com/ahorner/text-helpers/releases/tag/v1.2.0</a></li>\n<li><a href=\"https://vuldb.com/?id.216520\">https://vuldb.com/?id.216520</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/text_helpers/CVE-2020-36624.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/text_helpers/CVE-2020-36624.yml</a></li>\n<li><a href=\"https://github.com/ahorner/text-helpers/releases/tag/v1.1.0\">https://github.com/ahorner/text-helpers/releases/tag/v1.1.0</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-74hc-57m5-83ch\">https://github.com/advisories/GHSA-74hc-57m5-83ch</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-74hc-57m5-83ch",
            "title": "[text_helpers] text_helpers uses web link to untrusted target with window.opener access",
            "date_modified": "2023-01-10T05:06:30.000Z",
            "date_published": "2022-12-22T12:30:17.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-74hc-57m5-83ch"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer. This is due to an incomplete fix of CVE-2022-32209.</p>\n<ul>\n<li>Versions affected: ALL</li>\n<li>Not affected: NONE</li>\n<li>Fixed versions: 1.4.4</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both \"select\" and \"style\" elements.</p>\n<p>Code is only impacted if allowed tags are being overridden using either of the following two mechanisms:</p>\n<ol>\n<li>Using the Rails configuration <code>config.action_view.sanitized_allow_tags=</code>:</li>\n</ol>\n<pre><code class=\"language-ruby\"># In config/application.rb\nconfig.action_view.sanitized_allowed_tags = [\"select\", \"style\"]\n</code></pre>\n<p>  (see <a href=\"https://guides.rubyonrails.org/configuring.html#configuring-action-view\">https://guides.rubyonrails.org/configuring.html#configuring-action-view</a>)</p>\n<ol start=\"2\">\n<li>Using the class method <code>Rails::Html::SafeListSanitizer.allowed_tags=</code>:</li>\n</ol>\n<pre><code class=\"language-ruby\"># class-level option\nRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]\n</code></pre>\n<p>All users overriding the allowed tags by either of the above mechanisms to include both \"select\" and \"style\" should either upgrade or use one of the workarounds immediately.</p>\n<p>NOTE: Code is <em>not</em> impacted if allowed tags are overridden using either of the following mechanisms:</p>\n<ul>\n<li>the <code>:tags</code> option to the Action View helper method <code>sanitize</code>.</li>\n<li>the <code>:tags</code> option to the instance method <code>SafeListSanitizer#sanitize</code>.</li>\n</ul>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Remove either \"select\" or \"style\" from the overridden allowed tags.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>\n<li><a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-32209</a></li>\n<li><a href=\"https://hackerone.com/reports/1654310\">https://hackerone.com/reports/1654310</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was responsibly reported by Dominic Breuker.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8\">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-rrfc-7g8p-99q8</a></li>\n<li><a href=\"https://hackerone.com/reports/1654310\">https://hackerone.com/reports/1654310</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23520.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23520\">https://nvd.nist.gov/vuln/detail/CVE-2022-23520</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-rrfc-7g8p-99q8\">https://github.com/advisories/GHSA-rrfc-7g8p-99q8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-rrfc-7g8p-99q8",
            "title": "[rails-html-sanitizer] Possible XSS vulnerability with certain configurations of rails-html-sanitizer",
            "date_modified": "2023-01-09T05:05:47.000Z",
            "date_published": "2022-12-13T17:51:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-rrfc-7g8p-99q8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>There is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.</p>\n<ul>\n<li>Versions affected: ALL</li>\n<li>Not affected: NONE</li>\n<li>Fixed versions: 1.4.4</li>\n</ul>\n<h2 id=\"impact\">Impact</h2>\n<p>A possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways:</p>\n<ul>\n<li>allow both \"math\" and \"style\" elements,</li>\n<li>or allow both \"svg\" and \"style\" elements</li>\n</ul>\n<p>Code is only impacted if allowed tags are being overridden. Applications may be doing this in four different ways:</p>\n<ol>\n<li>using application configuration:</li>\n</ol>\n<pre><code class=\"language-ruby\"># In config/application.rb\nconfig.action_view.sanitized_allowed_tags = [\"math\", \"style\"]\n# or\nconfig.action_view.sanitized_allowed_tags = [\"svg\", \"style\"]\n</code></pre>\n<p>  see <a href=\"https://guides.rubyonrails.org/configuring.html#configuring-action-view\">https://guides.rubyonrails.org/configuring.html#configuring-action-view</a></p>\n<ol start=\"2\">\n<li>using a <code>:tags</code> option to the Action View helper <code>sanitize</code>:</li>\n</ol>\n<pre><code>&lt;%= sanitize @comment.body, tags: [\"math\", \"style\"] %&gt;\n&lt;%# or %&gt;\n&lt;%= sanitize @comment.body, tags: [\"svg\", \"style\"] %&gt;\n</code></pre>\n<p>  see <a href=\"https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize\">https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize</a></p>\n<ol start=\"3\">\n<li>using Rails::Html::SafeListSanitizer class method <code>allowed_tags=</code>:</li>\n</ol>\n<pre><code class=\"language-ruby\"># class-level option\nRails::Html::SafeListSanitizer.allowed_tags = [\"math\", \"style\"]\n# or\nRails::Html::SafeListSanitizer.allowed_tags = [\"svg\", \"style\"]\n</code></pre>\n<ol start=\"4\">\n<li>using a <code>:tags</code> options to the Rails::Html::SafeListSanitizer instance method <code>sanitize</code>:</li>\n</ol>\n<pre><code class=\"language-ruby\"># instance-level option\nRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"math\", \"style\"])\n# or\nRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"svg\", \"style\"])\n</code></pre>\n<p>All users overriding the allowed tags by any of the above mechanisms to include ((\"math\" or \"svg\") and \"style\") should either upgrade or use one of the workarounds immediately.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Remove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>\n<li><a href=\"https://hackerone.com/reports/1656627\">https://hackerone.com/reports/1656627</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was responsibly reported by Dominic Breuker.</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h\">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h</a></li>\n<li><a href=\"https://hackerone.com/reports/1656627\">https://hackerone.com/reports/1656627</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23519.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23519.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23519\">https://nvd.nist.gov/vuln/detail/CVE-2022-23519</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9h9g-93gc-623h\">https://github.com/advisories/GHSA-9h9g-93gc-623h</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9h9g-93gc-623h",
            "title": "[rails-html-sanitizer] Possible XSS vulnerability with certain configurations of rails-html-sanitizer",
            "date_modified": "2023-01-09T05:05:17.000Z",
            "date_published": "2022-12-13T17:50:25.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9h9g-93gc-623h"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>rails-html-sanitizer <code>&gt;= 1.0.3, &lt; 1.4.4</code> is vulnerable to cross-site scripting via data URIs when used in combination with Loofah <code>&gt;= 2.1.0</code>.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to rails-html-sanitizer <code>&gt;= 1.4.4</code>.</p>\n<h2 id=\"severity\">Severity</h2>\n<p>The maintainers have evaluated this as <a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N\">Medium Severity 6.1</a>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>\n<li><a href=\"https://github.com/w3c/svgwg/issues/266\">SVG MIME Type (image/svg+xml) is misleading to developers · Issue #266 · w3c/svgwg</a></li>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/issues/135\">https://github.com/rails/rails-html-sanitizer/issues/135</a></li>\n<li><a href=\"https://hackerone.com/reports/1694173\">https://hackerone.com/reports/1694173</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was independently reported by Maciej Piechota (@haqpl) and Mrinmoy Das (@goromlagche).</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-mcvf-2q2m-x72m\">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-mcvf-2q2m-x72m</a></li>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/issues/135\">https://github.com/rails/rails-html-sanitizer/issues/135</a></li>\n<li><a href=\"https://github.com/w3c/svgwg/issues/266\">https://github.com/w3c/svgwg/issues/266</a></li>\n<li><a href=\"https://hackerone.com/reports/1694173\">https://hackerone.com/reports/1694173</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23518.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23518.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23518\">https://nvd.nist.gov/vuln/detail/CVE-2022-23518</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mcvf-2q2m-x72m\">https://github.com/advisories/GHSA-mcvf-2q2m-x72m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mcvf-2q2m-x72m",
            "title": "[rails-html-sanitizer] Improper neutralization of data URIs may allow XSS in rails-html-sanitizer",
            "date_modified": "2023-01-09T05:05:17.000Z",
            "date_published": "2022-12-13T17:45:39.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mcvf-2q2m-x72m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Certain configurations of rails-html-sanitizer <code>&lt; 1.4.4</code> use an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to rails-html-sanitizer <code>&gt;= 1.4.4</code>.</p>\n<h2 id=\"severity\">Severity</h2>\n<p>The maintainers have evaluated this as <a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\">High Severity 7.5 (CVSS3.1)</a>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1333.html\">CWE - CWE-1333: Inefficient Regular Expression Complexity (4.9)</a></li>\n<li><a href=\"https://hackerone.com/reports/1684163\">https://hackerone.com/reports/1684163</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was responsibly reported by @ooooooo-q (<a href=\"https://github.com/ooooooo-q\">https://github.com/ooooooo-q</a>).</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-5x79-w82f-gw8w\">https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-5x79-w82f-gw8w</a></li>\n<li><a href=\"https://github.com/rails/rails-html-sanitizer/commit/56c61c0cebd1e493e8ad7bca2a0191609a4a6979\">https://github.com/rails/rails-html-sanitizer/commit/56c61c0cebd1e493e8ad7bca2a0191609a4a6979</a></li>\n<li><a href=\"https://hackerone.com/reports/1684163\">https://hackerone.com/reports/1684163</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23517.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rails-html-sanitizer/CVE-2022-23517.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23517\">https://nvd.nist.gov/vuln/detail/CVE-2022-23517</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5x79-w82f-gw8w\">https://github.com/advisories/GHSA-5x79-w82f-gw8w</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5x79-w82f-gw8w",
            "title": "[rails-html-sanitizer] Inefficient Regular Expression Complexity in rails-html-sanitizer",
            "date_modified": "2023-01-07T05:04:34.000Z",
            "date_published": "2022-12-13T17:43:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5x79-w82f-gw8w"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Loofah <code>&gt;= 2.2.0, &lt; 2.19.1</code> uses recursion for sanitizing <code>CDATA</code> sections, making it susceptible to stack exhaustion and raising a <code>SystemStackError</code> exception.  This may lead to a denial of service through CPU resource consumption.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>\n<p>Users who are unable to upgrade may be able to mitigate this vulnerability by limiting the length of the strings that are sanitized.</p>\n<h2 id=\"severity\">Severity</h2>\n<p>The Loofah maintainers have evaluated this as <a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\">High Severity 7.5 (CVSS3.1)</a>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/674.html\">CWE - CWE-674: Uncontrolled Recursion (4.9)</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flavorjones/loofah/security/advisories/GHSA-3x8r-x6xp-q4vm\">https://github.com/flavorjones/loofah/security/advisories/GHSA-3x8r-x6xp-q4vm</a></li>\n<li><a href=\"https://github.com/flavorjones/loofah/commit/86f7f6364491b0099d215db858ecdc0c89ded040\">https://github.com/flavorjones/loofah/commit/86f7f6364491b0099d215db858ecdc0c89ded040</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23516.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23516.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23516\">https://nvd.nist.gov/vuln/detail/CVE-2022-23516</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-3x8r-x6xp-q4vm\">https://github.com/advisories/GHSA-3x8r-x6xp-q4vm</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-3x8r-x6xp-q4vm",
            "title": "[loofah] Uncontrolled Recursion in Loofah",
            "date_modified": "2023-01-07T05:04:34.000Z",
            "date_published": "2022-12-13T17:40:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-3x8r-x6xp-q4vm"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Loofah <code>&gt;= 2.1.0, &lt; 2.19.1</code> is vulnerable to cross-site scripting via the <code>image/svg+xml</code> media type in data URIs.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>\n<h2 id=\"severity\">Severity</h2>\n<p>The Loofah maintainers have evaluated this as <a href=\"https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N\">Medium Severity 6.1</a>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/79.html\">CWE - CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (4.9)</a></li>\n<li><a href=\"https://github.com/w3c/svgwg/issues/266\">SVG MIME Type (image/svg+xml) is misleading to developers · Issue #266 · w3c/svgwg</a></li>\n<li><a href=\"https://hackerone.com/reports/1694173\">https://hackerone.com/reports/1694173</a></li>\n<li><a href=\"https://github.com/flavorjones/loofah/issues/101\">https://github.com/flavorjones/loofah/issues/101</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was responsibly reported by Maciej Piechota (@haqpl).</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flavorjones/loofah/security/advisories/GHSA-228g-948r-83gx\">https://github.com/flavorjones/loofah/security/advisories/GHSA-228g-948r-83gx</a></li>\n<li><a href=\"https://github.com/flavorjones/loofah/issues/101\">https://github.com/flavorjones/loofah/issues/101</a></li>\n<li><a href=\"https://github.com/w3c/svgwg/issues/266\">https://github.com/w3c/svgwg/issues/266</a></li>\n<li><a href=\"https://github.com/flavorjones/loofah/commit/415677f3cf7f9254f42f811e784985cd63c7407f\">https://github.com/flavorjones/loofah/commit/415677f3cf7f9254f42f811e784985cd63c7407f</a></li>\n<li><a href=\"https://hackerone.com/reports/1694173\">https://hackerone.com/reports/1694173</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23515.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23515.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23515\">https://nvd.nist.gov/vuln/detail/CVE-2022-23515</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-228g-948r-83gx\">https://github.com/advisories/GHSA-228g-948r-83gx</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-228g-948r-83gx",
            "title": "[loofah] Improper neutralization of data URIs may allow XSS in Loofah",
            "date_modified": "2023-01-07T05:04:42.000Z",
            "date_published": "2022-12-13T17:39:36.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-228g-948r-83gx"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Loofah <code>&lt; 2.19.1</code> contains an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to Loofah <code>&gt;= 2.19.1</code>.</p>\n<h2 id=\"severity\">Severity</h2>\n<p>The Loofah maintainers have evaluated this as <a href=\"https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\">High Severity 7.5 (CVSS3.1)</a>.</p>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/1333.html\">CWE - CWE-1333: Inefficient Regular Expression Complexity (4.9)</a></li>\n<li><a href=\"https://hackerone.com/reports/1684163\">https://hackerone.com/reports/1684163</a></li>\n</ul>\n<h2 id=\"credit\">Credit</h2>\n<p>This vulnerability was responsibly reported by @ooooooo-q (<a href=\"https://github.com/ooooooo-q\">https://github.com/ooooooo-q</a>).</p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/flavorjones/loofah/security/advisories/GHSA-486f-hjj9-9vhh\">https://github.com/flavorjones/loofah/security/advisories/GHSA-486f-hjj9-9vhh</a></li>\n<li><a href=\"https://github.com/flavorjones/loofah/commit/a6e0a1ab90675a17b1b2be189129d94139e4b143\">https://github.com/flavorjones/loofah/commit/a6e0a1ab90675a17b1b2be189129d94139e4b143</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23514.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/loofah/CVE-2022-23514.yml</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-23514\">https://nvd.nist.gov/vuln/detail/CVE-2022-23514</a></li>\n<li><a href=\"https://hackerone.com/reports/1684163\">https://hackerone.com/reports/1684163</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-486f-hjj9-9vhh\">https://github.com/advisories/GHSA-486f-hjj9-9vhh</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-486f-hjj9-9vhh",
            "title": "[loofah] Inefficient Regular Expression Complexity in Loofah",
            "date_modified": "2023-01-07T05:04:34.000Z",
            "date_published": "2022-12-13T17:36:28.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-486f-hjj9-9vhh"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"description\">Description</h3>\n<p>An issue was discovered in Sinatra 2.0 before 2.2.3 and 3.0 before 3.0.4. An application is vulnerable to a reflected file download (RFD) attack that sets the Content-Disposition header of a response when the filename is derived from user-supplied input.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf\">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8x94-hmjh-97hq\">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>\n</ul>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw\">https://github.com/sinatra/sinatra/security/advisories/GHSA-2x8x-jmrp-phxw</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-45442\">https://nvd.nist.gov/vuln/detail/CVE-2022-45442</a></li>\n<li><a href=\"https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b\">https://github.com/sinatra/sinatra/commit/ea8fc9495a350f7551b39e3025bfcd06f49f363b</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8x94-hmjh-97hq\">https://github.com/advisories/GHSA-8x94-hmjh-97hq</a></li>\n<li><a href=\"https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf\">https://www.blackhat.com/docs/eu-14/materials/eu-14-Hafif-Reflected-File-Download-A-New-Web-Attack-Vector.pdf</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/sinatra/CVE-2022-45442.yml</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2023/01/msg00005.html\">https://lists.debian.org/debian-lts-announce/2023/01/msg00005.html</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-2x8x-jmrp-phxw\">https://github.com/advisories/GHSA-2x8x-jmrp-phxw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-2x8x-jmrp-phxw",
            "title": "[sinatra] Sinatra vulnerable to Reflected File Download attack",
            "date_modified": "2023-01-11T00:39:16.000Z",
            "date_published": "2022-11-30T21:18:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-2x8x-jmrp-phxw"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}