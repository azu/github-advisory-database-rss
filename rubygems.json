{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<p>Spree 0.2.0 does not properly restrict the use of a hash to provide values for a model's attributes, which allows remote attackers to set the Order state value and bypass the intended payment step via a modified URL, related to a \"mass assignment\" vulnerability.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2008-7310\">https://nvd.nist.gov/vuln/detail/CVE-2008-7310</a></li>\n<li><a href=\"https://web.archive.org/web/20080925003904/http://railspikes.com/2008/9/22/is-your-rails-application-safe-from-mass-assignment\">https://web.archive.org/web/20080925003904/http://railspikes.com/2008/9/22/is-your-rails-application-safe-from-mass-assignment</a></li>\n<li><a href=\"https://web.archive.org/web/20101128024717/http://spreecommerce.com/blog/2008/09/16/security-vulnerability-mass-assignment-of-order-params/\">https://web.archive.org/web/20101128024717/http://spreecommerce.com/blog/2008/09/16/security-vulnerability-mass-assignment-of-order-params/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2008-7310.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2008-7310.yml</a></li>\n<li><a href=\"https://spreecommerce.com/blog/security-vulnerability-mass-assignment\">https://spreecommerce.com/blog/security-vulnerability-mass-assignment</a></li>\n<li><a href=\"http://railspikes.com/2008/9/22/is-your-rails-application-safe-from-mass-assignment\">http://railspikes.com/2008/9/22/is-your-rails-application-safe-from-mass-assignment</a></li>\n<li><a href=\"http://spreecommerce.com/blog/2008/09/16/security-vulnerability-mass-assignment-of-order-params/\">http://spreecommerce.com/blog/2008/09/16/security-vulnerability-mass-assignment-of-order-params/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7h48-m3rw-vr27\">https://github.com/advisories/GHSA-7h48-m3rw-vr27</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7h48-m3rw-vr27",
            "title": "[spree] Spree does not properly restrict the use of a hash to provide values for a model's attributes",
            "date_modified": "2023-08-23T16:38:49.000Z",
            "date_published": "2022-05-17T05:31:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7h48-m3rw-vr27"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The session cookie store implementation in Spree 0.2.0 uses a hardcoded <code>config.action_controller_session</code> hash value (aka secret key), which makes it easier for remote attackers to bypass cryptographic protection mechanisms by leveraging an application that contains this value within the <code>config/environment.rb</code> file.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2008-7311\">https://nvd.nist.gov/vuln/detail/CVE-2008-7311</a></li>\n<li><a href=\"https://web.archive.org/web/20090306033106/http://support.spreehq.org/issues/show/63\">https://web.archive.org/web/20090306033106/http://support.spreehq.org/issues/show/63</a></li>\n<li><a href=\"https://web.archive.org/web/20100309050152/http://rubygems.org/gems/spree/versions\">https://web.archive.org/web/20100309050152/http://rubygems.org/gems/spree/versions</a></li>\n<li><a href=\"https://web.archive.org/web/20101128024939/http://spreecommerce.com/blog/2008/08/12/security-vulernability-session-cookie-store/\">https://web.archive.org/web/20101128024939/http://spreecommerce.com/blog/2008/08/12/security-vulernability-session-cookie-store/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2008-7311.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/spree/CVE-2008-7311.yml</a></li>\n<li><a href=\"https://spreecommerce.com/blog/security-vulernability-session-cookie-store\">https://spreecommerce.com/blog/security-vulernability-session-cookie-store</a></li>\n<li><a href=\"http://spreecommerce.com/blog/2008/08/12/security-vulernability-session-cookie-store/\">http://spreecommerce.com/blog/2008/08/12/security-vulernability-session-cookie-store/</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-g466-57gh-cqfw\">https://github.com/advisories/GHSA-g466-57gh-cqfw</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-g466-57gh-cqfw",
            "title": "[spree] Spree uses a hardcoded hash value",
            "date_modified": "2023-08-23T16:37:48.000Z",
            "date_published": "2022-05-17T05:30:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-g466-57gh-cqfw"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to version 6.3.1, puma exhibited incorrect behavior when parsing chunked transfer encoding bodies and zero-length Content-Length headers in a way that allowed HTTP request smuggling.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Incorrect parsing of trailing fields in chunked transfer encoding bodies</li>\n<li>Parsing of blank/zero-length Content-Length headers</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 6.3.1 and 5.6.7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a>\nSee our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8\">https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a\">https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1\">https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1</a></li>\n<li><a href=\"https://github.com/puma/puma/releases/tag/v5.6.7\">https://github.com/puma/puma/releases/tag/v5.6.7</a></li>\n<li><a href=\"https://github.com/puma/puma/releases/tag/v6.3.1\">https://github.com/puma/puma/releases/tag/v6.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40175\">https://nvd.nist.gov/vuln/detail/CVE-2023-40175</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/7405a219801dcebc0ad6e0aa108d4319ca23f662\">https://github.com/puma/puma/commit/7405a219801dcebc0ad6e0aa108d4319ca23f662</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puma/CVE-2023-40175.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puma/CVE-2023-40175.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-68xg-gqqm-vgj8\">https://github.com/advisories/GHSA-68xg-gqqm-vgj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-68xg-gqqm-vgj8",
            "title": "[puma] Puma HTTP Request/Response Smuggling vulnerability",
            "date_modified": "2023-08-21T17:18:17.000Z",
            "date_published": "2023-08-18T21:50:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-68xg-gqqm-vgj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>Prior to version 6.3.1, puma exhibited incorrect behavior when parsing chunked transfer encoding bodies and zero-length Content-Length headers in a way that allowed HTTP request smuggling.</p>\n<p>The following vulnerabilities are addressed by this advisory:</p>\n<ul>\n<li>Incorrect parsing of trailing fields in chunked transfer encoding bodies</li>\n<li>Parsing of blank/zero-length Content-Length headers</li>\n</ul>\n<h3 id=\"patches\">Patches</h3>\n<p>The vulnerability has been fixed in 6.3.1 and 5.6.7.</p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>No known workarounds.</p>\n<h3 id=\"references\">References</h3>\n<p><a href=\"https://portswigger.net/web-security/request-smuggling\">HTTP Request Smuggling</a></p>\n<h3 id=\"for-more-information\">For more information</h3>\n<p>If you have any questions or comments about this advisory:</p>\n<p>Open an issue in <a href=\"https://github.com/puma/puma\">Puma</a>\nSee our <a href=\"https://github.com/puma/puma/security/policy\">security policy</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8\">https://github.com/puma/puma/security/advisories/GHSA-68xg-gqqm-vgj8</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a\">https://github.com/puma/puma/commit/690155e7d644b80eeef0a6094f9826ee41f1080a</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1\">https://github.com/puma/puma/commit/ed0f2f94b56982c687452504b95d5f1fbbe3eed1</a></li>\n<li><a href=\"https://github.com/puma/puma/releases/tag/v5.6.7\">https://github.com/puma/puma/releases/tag/v5.6.7</a></li>\n<li><a href=\"https://github.com/puma/puma/releases/tag/v6.3.1\">https://github.com/puma/puma/releases/tag/v6.3.1</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-40175\">https://nvd.nist.gov/vuln/detail/CVE-2023-40175</a></li>\n<li><a href=\"https://github.com/puma/puma/commit/7405a219801dcebc0ad6e0aa108d4319ca23f662\">https://github.com/puma/puma/commit/7405a219801dcebc0ad6e0aa108d4319ca23f662</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puma/CVE-2023-40175.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/puma/CVE-2023-40175.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-68xg-gqqm-vgj8\">https://github.com/advisories/GHSA-68xg-gqqm-vgj8</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-68xg-gqqm-vgj8",
            "title": "[puma] Puma HTTP Request/Response Smuggling vulnerability",
            "date_modified": "2023-08-21T17:18:17.000Z",
            "date_published": "2023-08-18T21:50:05.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-68xg-gqqm-vgj8"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>\n<p>This has been assigned the CVE identifier CVE-2022-44566.</p>\n<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1</p>\n<p>Impact:\nIn ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series\n7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released\">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-44566\">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>\n<li><a href=\"https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html\">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119\">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf\">https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b\">https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.7.1\">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>\n<li><a href=\"https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15\">https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-579w-22j4-4749\">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-579w-22j4-4749",
            "title": "[activerecord] Denial of Service Vulnerability in ActiveRecord's PostgreSQL adapter",
            "date_modified": "2023-08-18T21:11:52.000Z",
            "date_published": "2023-01-18T18:21:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-579w-22j4-4749"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential denial of service vulnerability present in ActiveRecord’s PostgreSQL adapter.</p>\n<p>This has been assigned the CVE identifier CVE-2022-44566.</p>\n<p>Versions Affected: All. Not affected: None. Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1</p>\n<p>Impact:\nIn ActiveRecord &lt;7.0.4.1 and &lt;6.1.7.1, when a value outside the range for a 64bit signed integer is provided to the PostgreSQL connection adapter, it will treat the target column type as numeric. Comparing integer values against numeric values can result in a slow sequential scan resulting in potential Denial of Service.\nReleases</p>\n<p>The fixed releases are available at the normal locations.\nWorkarounds</p>\n<p>Ensure that user supplied input which is provided to ActiveRecord clauses do not contain integers wider than a signed 64bit representation or floats.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the supported release series in accordance with our maintenance policy 1 regarding security issues. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 6.1 series\n7-0-Added-integer-width-check-to-PostgreSQL-Quoting.patch - Patch for 7.0 series\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activerecord/CVE-2022-44566.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released\">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2022-44566\">https://nvd.nist.gov/vuln/detail/CVE-2022-44566</a></li>\n<li><a href=\"https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html\">https://code.jeremyevans.net/2022-11-01-forcing-sequential-scans-on-postgresql.html</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119\">https://discuss.rubyonrails.org/t/cve-2022-44566-possible-denial-of-service-vulnerability-in-activerecords-postgresql-adapter/82119</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf\">https://github.com/rails/rails/commit/4f44aa9d514e701ada92b5cf08beccf566eeaebf</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b\">https://github.com/rails/rails/commit/82bcdc011e2ff674e7dd8fd8cee3a831c908d29b</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.7.1\">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>\n<li><a href=\"https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15\">https://makandracards.com/railslts/508019-rails-5-2-lts-changelog#section-jan-20th-2023-rails-version-5-2-8-15</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-579w-22j4-4749\">https://github.com/advisories/GHSA-579w-22j4-4749</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-579w-22j4-4749",
            "title": "[activerecord] Denial of Service Vulnerability in ActiveRecord's PostgreSQL adapter",
            "date_modified": "2023-08-18T21:11:52.000Z",
            "date_published": "2023-01-18T18:21:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-579w-22j4-4749"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>\n<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.</p>\n<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released\">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22796\">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116\">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8\">https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef\">https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.7.1\">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6gc-792m-qgm2\">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2",
            "title": "[activesupport] ReDoS based DoS vulnerability in Active Support's underscore",
            "date_modified": "2023-08-18T21:10:42.000Z",
            "date_published": "2023-01-18T18:23:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible regular expression based DoS vulnerability in Active Support. This vulnerability has been assigned the CVE identifier CVE-2023-22796.</p>\n<p>Versions Affected: All Not affected: None Fixed Versions: 5.2.8.15 (Rails LTS, which is a paid service and not part of the rubygem), 6.1.7.1, 7.0.4.1\nImpact</p>\n<p>A specially crafted string passed to the underscore method can cause the regular expression engine to enter a state of catastrophic backtracking. This can cause the process to use large amounts of CPU and memory, leading to a possible DoS vulnerability.</p>\n<p>This affects String#underscore, ActiveSupport::Inflector.underscore, String#titleize, and any other methods using these.</p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.\nReleases</p>\n<p>The FIXED releases are available at the normal locations.\nWorkarounds</p>\n<p>There are no feasible workarounds for this issue.</p>\n<p>Users on Ruby 3.2.0 or greater may be able to reduce the impact by configuring Regexp.timeout.\nPatches</p>\n<p>To aid users who aren’t able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<pre><code>6-1-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 6.1 series\n7-0-Avoid-regex-backtracking-in-Inflector.underscore.patch - Patch for 7.0 series\n</code></pre>\n<p>Please note that only the 7.0.Z and 6.1.Z series are supported at present, and 6.0.Z for severe vulnerabilities. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v7.0.4.1\">https://github.com/rails/rails/releases/tag/v7.0.4.1</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/activesupport/CVE-2023-22796.yml</a></li>\n<li><a href=\"https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released\">https://rubyonrails.org/2023/1/17/Rails-Versions-6-0-6-1-6-1-7-1-7-0-4-1-have-been-released</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-22796\">https://nvd.nist.gov/vuln/detail/CVE-2023-22796</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116\">https://discuss.rubyonrails.org/t/cve-2023-22796-possible-redos-based-dos-vulnerability-in-active-supports-underscore/82116</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8\">https://github.com/rails/rails/commit/2164d4f6a1bde74b911fe9ba3c8df1b5bf345bf8</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef\">https://github.com/rails/rails/commit/a7cda7e6aa5334ab41b1f4b0f671be931be946ef</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.7.1\">https://github.com/rails/rails/releases/tag/v6.1.7.1</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-j6gc-792m-qgm2\">https://github.com/advisories/GHSA-j6gc-792m-qgm2</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2",
            "title": "[activesupport] ReDoS based DoS vulnerability in Active Support's underscore",
            "date_modified": "2023-08-18T21:10:42.000Z",
            "date_published": "2023-01-18T18:23:20.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-j6gc-792m-qgm2"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2023-27539.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.2.6.4, 3.0.6.1</p>\n<h1 id=\"impact\">Impact</h1>\n<p>Carefully crafted input can cause header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that parse headers using Rack (virtually all Rails applications) are impacted.</p>\n<h1 id=\"workarounds\">Workarounds</h1>\n<p>Setting Regexp.timeout in Ruby 3.2 is a possible workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27539\">https://nvd.nist.gov/vuln/detail/CVE-2023-27539</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466\">https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c\">https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff\">https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c6qg-cjj8-47qp\">https://github.com/advisories/GHSA-c6qg-cjj8-47qp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c6qg-cjj8-47qp",
            "title": "[rack] Possible Denial of Service Vulnerability in Rack's header parsing",
            "date_modified": "2023-08-18T21:04:08.000Z",
            "date_published": "2023-03-15T21:36:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c6qg-cjj8-47qp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a denial of service vulnerability in the header parsing component of Rack. This vulnerability has been assigned the CVE identifier CVE-2023-27539.</p>\n<p>Versions Affected: &gt;= 2.0.0 Not affected: None. Fixed Versions: 2.2.6.4, 3.0.6.1</p>\n<h1 id=\"impact\">Impact</h1>\n<p>Carefully crafted input can cause header parsing in Rack to take an unexpected amount of time, possibly resulting in a denial of service attack vector. Any applications that parse headers using Rack (virtually all Rails applications) are impacted.</p>\n<h1 id=\"workarounds\">Workarounds</h1>\n<p>Setting Regexp.timeout in Ruby 3.2 is a possible workaround.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-27539\">https://nvd.nist.gov/vuln/detail/CVE-2023-27539</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466\">https://discuss.rubyonrails.org/t/cve-2023-27539-possible-denial-of-service-vulnerability-in-racks-header-parsing/82466</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rack/CVE-2023-27539.yml</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c\">https://github.com/rack/rack/commit/231ef369ad0b542575fb36c74fcfcfabcf6c530c</a></li>\n<li><a href=\"https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff\">https://github.com/rack/rack/commit/ee7919ea04303717858be1c3f16b406adc6d8cff</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-c6qg-cjj8-47qp\">https://github.com/advisories/GHSA-c6qg-cjj8-47qp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-c6qg-cjj8-47qp",
            "title": "[rack] Possible Denial of Service Vulnerability in Rack's header parsing",
            "date_modified": "2023-08-18T21:04:08.000Z",
            "date_published": "2023-03-15T21:36:02.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-c6qg-cjj8-47qp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>In actionpack gem &gt;= 6.0.0, a possible XSS vulnerability exists when an application is running in development mode allowing an attacker to send or embed (in another page) a specially crafted URL which can allow the attacker to execute JavaScript in the context of the local application. This vulnerability is in the Actionable Exceptions middleware.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>Until such time as the patch can be applied, application developers should disable the Actionable Exceptions middleware in their development environment via a line such as this one in their config/environment/development.rb: <code>config.middleware.delete ActionDispatch::ActionableExceptions</code></p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2020-8264\">https://nvd.nist.gov/vuln/detail/CVE-2020-8264</a></li>\n<li><a href=\"https://hackerone.com/reports/904059\">https://hackerone.com/reports/904059</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk/m/oJWw-xhNAQAJ\">https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk/m/oJWw-xhNAQAJ</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2020-8264.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2020-8264.yml</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk\">https://groups.google.com/g/rubyonrails-security/c/yQzUVfv42jk</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-35mm-cc6r-8fjp\">https://github.com/advisories/GHSA-35mm-cc6r-8fjp</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-35mm-cc6r-8fjp",
            "title": "[actionpack] Cross-site scripting in actionpack",
            "date_modified": "2023-08-17T05:02:40.000Z",
            "date_published": "2021-04-07T20:58:47.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-35mm-cc6r-8fjp"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"impact\">Impact</h2>\n<p>Several quadratic complexity bugs in commonmarker's underlying <a href=\"https://github.com/github/cmark-gfm\"><code>cmark-gfm</code></a> library may lead to unbounded resource exhaustion and subsequent denial of service.</p>\n<p>The following vulnerabilities were addressed:</p>\n<ul>\n<li><a href=\"https://github.com/github/cmark-gfm/security/advisories/GHSA-w4qg-3vf7-m9x5\">CVE-2023-37463</a></li>\n</ul>\n<p>For more information, consult the release notes for version <a href=\"https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12\"><code>0.29.0.gfm.12</code></a>.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Users are advised to upgrade to commonmarker version <a href=\"https://rubygems.org/gems/commonmarker/versions/0.23.10\"><code>0.23.10</code></a>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-7vh7-fw88-wj87\">https://github.com/gjtorikian/commonmarker/security/advisories/GHSA-7vh7-fw88-wj87</a></li>\n<li><a href=\"https://github.com/gjtorikian/commonmarker/commit/db8cd377b54541f7fd484d168b7682a282a680f7\">https://github.com/gjtorikian/commonmarker/commit/db8cd377b54541f7fd484d168b7682a282a680f7</a></li>\n<li><a href=\"https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12\">https://github.com/github/cmark-gfm/releases/tag/0.29.0.gfm.12</a></li>\n<li><a href=\"https://rubygems.org/gems/commonmarker/versions/0.23.10\">https://rubygems.org/gems/commonmarker/versions/0.23.10</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7vh7-fw88-wj87\">https://github.com/advisories/GHSA-7vh7-fw88-wj87</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7vh7-fw88-wj87",
            "title": "[commonmarker] Several quadratic complexity bugs may lead to denial of service in Commonmarker",
            "date_modified": "2023-08-17T05:02:35.000Z",
            "date_published": "2023-08-08T17:12:00.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7vh7-fw88-wj87"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"file-content-disclosure-in-action-view\">File Content Disclosure in Action View</h1>\n<h2 id=\"impact\">Impact </h2>\n<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>\n<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\" \n  end \nend \n</code></pre>\n<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>\n<h2 id=\"releases\">Releases </h2>\n<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>\n<h2 id=\"workarounds\">Workarounds </h2>\n<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\", formats: [:html] \n  end \nend \n</code></pre>\n<p>In summary, impacted calls to <code>render</code> look like this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\" \n</code></pre>\n<p>The vulnerability can be mitigated by changing to this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\", formats: [:html] \n</code></pre>\n<p>Other calls to <code>render</code> are not impacted. </p>\n<p>Alternatively, the following monkey patch can be applied in an initializer: </p>\n<pre><code class=\"language-ruby\">$ cat config/initializers/formats_filter.rb \n# frozen_string_literal: true \n\nActionDispatch::Request.prepend(Module.new do \n  def formats \n    super().select do |format| \n      format.symbol || format.ref == \"*/*\" \n    end \n  end \nend) \n</code></pre>\n<h2 id=\"credits\">Credits </h2>\n<p>Thanks to John Hawthorn <a href=\"mailto:john@hawthorn.email\">john@hawthorn.email</a> of GitHub </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-5418\">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0796\">https://access.redhat.com/errata/RHSA-2019:0796</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1147\">https://access.redhat.com/errata/RHSA-2019:1147</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1149\">https://access.redhat.com/errata/RHSA-2019:1149</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1289\">https://access.redhat.com/errata/RHSA-2019:1289</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86g5-2wh3-gc9j\">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q\">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg\">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>\n<li><a href=\"https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/\">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46585/\">https://www.exploit-db.com/exploits/46585/</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html\">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html\">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/03/22/1\">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j",
            "title": "[actionview] Path Traversal in Action View",
            "date_modified": "2023-08-17T05:02:29.000Z",
            "date_published": "2019-03-13T17:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"file-content-disclosure-in-action-view\">File Content Disclosure in Action View</h1>\n<h2 id=\"impact\">Impact </h2>\n<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>\n<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\" \n  end \nend \n</code></pre>\n<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>\n<h2 id=\"releases\">Releases </h2>\n<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>\n<h2 id=\"workarounds\">Workarounds </h2>\n<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\", formats: [:html] \n  end \nend \n</code></pre>\n<p>In summary, impacted calls to <code>render</code> look like this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\" \n</code></pre>\n<p>The vulnerability can be mitigated by changing to this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\", formats: [:html] \n</code></pre>\n<p>Other calls to <code>render</code> are not impacted. </p>\n<p>Alternatively, the following monkey patch can be applied in an initializer: </p>\n<pre><code class=\"language-ruby\">$ cat config/initializers/formats_filter.rb \n# frozen_string_literal: true \n\nActionDispatch::Request.prepend(Module.new do \n  def formats \n    super().select do |format| \n      format.symbol || format.ref == \"*/*\" \n    end \n  end \nend) \n</code></pre>\n<h2 id=\"credits\">Credits </h2>\n<p>Thanks to John Hawthorn <a href=\"mailto:john@hawthorn.email\">john@hawthorn.email</a> of GitHub </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-5418\">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0796\">https://access.redhat.com/errata/RHSA-2019:0796</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1147\">https://access.redhat.com/errata/RHSA-2019:1147</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1149\">https://access.redhat.com/errata/RHSA-2019:1149</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1289\">https://access.redhat.com/errata/RHSA-2019:1289</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86g5-2wh3-gc9j\">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q\">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg\">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>\n<li><a href=\"https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/\">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46585/\">https://www.exploit-db.com/exploits/46585/</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html\">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html\">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/03/22/1\">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j",
            "title": "[actionview] Path Traversal in Action View",
            "date_modified": "2023-08-17T05:02:29.000Z",
            "date_published": "2019-03-13T17:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Zendesk Samlr before 2.6.2 allows an XML nodes comment attack such as a name_id node with <a href=\"mailto:user@example.com\">user@example.com</a> followed by <code>&lt;!----&gt;</code>. and then the attacker's domain name.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2018-20857\">https://nvd.nist.gov/vuln/detail/CVE-2018-20857</a></li>\n<li><a href=\"https://github.com/zendesk/samlr/compare/v2.6.1...v2.6.2\">https://github.com/zendesk/samlr/compare/v2.6.1...v2.6.2</a></li>\n<li><a href=\"https://github.com/zendesk/samlr/pull/29\">https://github.com/zendesk/samlr/pull/29</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/samlr/CVE-2018-20857.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/samlr/CVE-2018-20857.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qpxp-5j56-gg3x\">https://github.com/advisories/GHSA-qpxp-5j56-gg3x</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qpxp-5j56-gg3x",
            "title": "[samlr] samlr XML nodes comment attack",
            "date_modified": "2023-08-17T05:02:29.000Z",
            "date_published": "2019-07-31T04:22:03.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qpxp-5j56-gg3x"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"file-content-disclosure-in-action-view\">File Content Disclosure in Action View</h1>\n<h2 id=\"impact\">Impact </h2>\n<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>\n<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\" \n  end \nend \n</code></pre>\n<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>\n<h2 id=\"releases\">Releases </h2>\n<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>\n<h2 id=\"workarounds\">Workarounds </h2>\n<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\", formats: [:html] \n  end \nend \n</code></pre>\n<p>In summary, impacted calls to <code>render</code> look like this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\" \n</code></pre>\n<p>The vulnerability can be mitigated by changing to this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\", formats: [:html] \n</code></pre>\n<p>Other calls to <code>render</code> are not impacted. </p>\n<p>Alternatively, the following monkey patch can be applied in an initializer: </p>\n<pre><code class=\"language-ruby\">$ cat config/initializers/formats_filter.rb \n# frozen_string_literal: true \n\nActionDispatch::Request.prepend(Module.new do \n  def formats \n    super().select do |format| \n      format.symbol || format.ref == \"*/*\" \n    end \n  end \nend) \n</code></pre>\n<h2 id=\"credits\">Credits </h2>\n<p>Thanks to John Hawthorn <a href=\"mailto:john@hawthorn.email\">john@hawthorn.email</a> of GitHub </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-5418\">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0796\">https://access.redhat.com/errata/RHSA-2019:0796</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1147\">https://access.redhat.com/errata/RHSA-2019:1147</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1149\">https://access.redhat.com/errata/RHSA-2019:1149</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1289\">https://access.redhat.com/errata/RHSA-2019:1289</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86g5-2wh3-gc9j\">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q\">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg\">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>\n<li><a href=\"https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/\">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46585/\">https://www.exploit-db.com/exploits/46585/</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html\">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html\">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/03/22/1\">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j",
            "title": "[actionview] Path Traversal in Action View",
            "date_modified": "2023-08-17T05:02:29.000Z",
            "date_published": "2019-03-13T17:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"file-content-disclosure-in-action-view\">File Content Disclosure in Action View</h1>\n<h2 id=\"impact\">Impact </h2>\n<p>There is a possible file content disclosure vulnerability in Action View.  Specially crafted accept headers in combination with calls to <code>render file:</code>  can cause arbitrary files on the target server to be rendered, disclosing the  file contents. </p>\n<p>The impact is limited to calls to <code>render</code> which render file contents without  a specified accept format.  Impacted code in a controller looks something like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\" \n  end \nend \n</code></pre>\n<p>Rendering templates as opposed to files is not impacted by this vulnerability. </p>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately. </p>\n<h2 id=\"releases\">Releases </h2>\n<p>The 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are available at the normal locations. </p>\n<h2 id=\"workarounds\">Workarounds </h2>\n<p>This vulnerability can be mitigated by specifying a format for file rendering, like this: </p>\n<pre><code class=\"language-ruby\">class UserController &lt; ApplicationController \n  def index \n    render file: \"#{Rails.root}/some/file\", formats: [:html] \n  end \nend \n</code></pre>\n<p>In summary, impacted calls to <code>render</code> look like this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\" \n</code></pre>\n<p>The vulnerability can be mitigated by changing to this: </p>\n<pre><code>render file: \"#{Rails.root}/some/file\", formats: [:html] \n</code></pre>\n<p>Other calls to <code>render</code> are not impacted. </p>\n<p>Alternatively, the following monkey patch can be applied in an initializer: </p>\n<pre><code class=\"language-ruby\">$ cat config/initializers/formats_filter.rb \n# frozen_string_literal: true \n\nActionDispatch::Request.prepend(Module.new do \n  def formats \n    super().select do |format| \n      format.symbol || format.ref == \"*/*\" \n    end \n  end \nend) \n</code></pre>\n<h2 id=\"credits\">Credits </h2>\n<p>Thanks to John Hawthorn <a href=\"mailto:john@hawthorn.email\">john@hawthorn.email</a> of GitHub </p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2019-5418\">https://nvd.nist.gov/vuln/detail/CVE-2019-5418</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:0796\">https://access.redhat.com/errata/RHSA-2019:0796</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1147\">https://access.redhat.com/errata/RHSA-2019:1147</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1149\">https://access.redhat.com/errata/RHSA-2019:1149</a></li>\n<li><a href=\"https://access.redhat.com/errata/RHSA-2019:1289\">https://access.redhat.com/errata/RHSA-2019:1289</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-86g5-2wh3-gc9j\">https://github.com/advisories/GHSA-86g5-2wh3-gc9j</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q\">https://groups.google.com/forum/#!topic/rubyonrails-security/pFRKI96Sm8Q</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg\">https://groups.google.com/forum/#!topic/rubyonrails-security/zRNVOUhKHrg</a></li>\n<li><a href=\"https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html\">https://lists.debian.org/debian-lts-announce/2019/03/msg00042.html</a></li>\n<li><a href=\"https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/\">https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Y43636TH4D6T46IC6N2RQVJTRFJAAYGA/</a></li>\n<li><a href=\"https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/\">https://weblog.rubyonrails.org/2019/3/13/Rails-4-2-5-1-5-1-6-2-have-been-released/</a></li>\n<li><a href=\"https://www.exploit-db.com/exploits/46585/\">https://www.exploit-db.com/exploits/46585/</a></li>\n<li><a href=\"http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html\">http://lists.opensuse.org/opensuse-security-announce/2019-05/msg00011.html</a></li>\n<li><a href=\"http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html\">http://packetstormsecurity.com/files/152178/Rails-5.2.1-Arbitrary-File-Content-Disclosure.html</a></li>\n<li><a href=\"http://www.openwall.com/lists/oss-security/2019/03/22/1\">http://www.openwall.com/lists/oss-security/2019/03/22/1</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j",
            "title": "[actionview] Path Traversal in Action View",
            "date_modified": "2023-08-17T05:02:29.000Z",
            "date_published": "2019-03-13T17:26:59.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-86g5-2wh3-gc9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible DoS vulnerability in the Token Authentication logic in Action Controller.</p>\n<p>Versions Affected:  &gt;= 4.0.0\nNot affected:       &lt; 4.0.0\nFixed Versions:     6.1.3.2, 6.0.3.7, 5.2.4.6, 5.2.6</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Impacted code uses <code>authenticate_or_request_with_http_token</code> or <code>authenticate_with_http_token</code> for request authentication.  Impacted code will look something like this:</p>\n<pre><code>class PostsController &lt; ApplicationController\n  before_action :authenticate\n\n  private\n\n  def authenticate\n    authenticate_or_request_with_http_token do |token, options|\n      # ...\n    end\n  end\nend\n</code></pre>\n<p>All users running an affected release should either upgrade or use one of the workarounds immediately.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>The following monkey patch placed in an initializer can be used to work around the issue:</p>\n<pre><code class=\"language-ruby\">module ActionController::HttpAuthentication::Token\n  AUTHN_PAIR_DELIMITERS = /(?:,|;|\\t)/\nend\n</code></pre>\n<h2 id=\"patches\">Patches</h2>\n<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<ul>\n<li>5-2-http-authentication-dos.patch - Patch for 5.2 series</li>\n<li>6-0-http-authentication-dos.patch - Patch for 6.0 series</li>\n<li>6-1-http-authentication-dos.patch - Patch for 6.1 series</li>\n</ul>\n<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>Thank you to <a href=\"https://hackerone.com/wonda_tea_coffee\">https://hackerone.com/wonda_tea_coffee</a> for reporting this issue!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v5.2.4.6\">https://github.com/rails/rails/releases/tag/v5.2.4.6</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v5.2.6\">https://github.com/rails/rails/releases/tag/v5.2.6</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.0.3.7\">https://github.com/rails/rails/releases/tag/v6.0.3.7</a></li>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.3.2\">https://github.com/rails/rails/releases/tag/v6.1.3.2</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/Pf1TjkOBdyQ\">https://groups.google.com/g/rubyonrails-security/c/Pf1TjkOBdyQ</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22904\">https://nvd.nist.gov/vuln/detail/CVE-2021-22904</a></li>\n<li><a href=\"https://hackerone.com/reports/1101125\">https://hackerone.com/reports/1101125</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2021-22904-possible-dos-vulnerability-in-action-controller-token-authentication/77869\">https://discuss.rubyonrails.org/t/cve-2021-22904-possible-dos-vulnerability-in-action-controller-token-authentication/77869</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20210805-0009/\">https://security.netapp.com/advisory/ntap-20210805-0009/</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22904.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22904.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-7wjx-3g7j-8584\">https://github.com/advisories/GHSA-7wjx-3g7j-8584</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-7wjx-3g7j-8584",
            "title": "[actionpack] Possible DoS Vulnerability in Action Controller Token Authentication",
            "date_modified": "2023-08-17T05:02:22.000Z",
            "date_published": "2021-05-05T19:49:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-7wjx-3g7j-8584"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a possible Open Redirect Vulnerability in Action Pack.</p>\n<p>Versions Affected:  &gt;= v6.1.0.rc2\nNot affected:       &lt; v6.1.0.rc2\nFixed Versions:     6.1.3.2</p>\n<h2 id=\"impact\">Impact</h2>\n<p>This is similar to CVE-2021-22881. Specially crafted Host headers in combination with certain \"allowed host\" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious\nwebsite.</p>\n<p>Since rails/rails@9bc7ea5, strings in config.hosts that do not have a leading dot are converted to regular expressions without proper escaping. This causes, for example, config.hosts &lt;&lt; \"sub.example.com\" to permit a request with a Host header value of sub-example.com.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>The following monkey patch put in an initializer can be used as a workaround.</p>\n<pre><code class=\"language-ruby\">class ActionDispatch::HostAuthorization::Permissions\n  def sanitize_string(host)\n    if host.start_with?(\".\")\n      /\\A(.+\\.)?#{Regexp.escape(host[1..-1])}\\z/i\n    else\n      /\\A#{Regexp.escape host}\\z/i\n    end\n  end\nend\n</code></pre>\n<h2 id=\"patches\">Patches</h2>\n<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<ul>\n<li>6-1-open-redirect.patch - Patch for 6.1 series</li>\n</ul>\n<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks Jonathan Hefner (<a href=\"https://hackerone.com/jonathanhefner\">https://hackerone.com/jonathanhefner</a>) for reporting this bug!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/releases/tag/v6.1.3.2\">https://github.com/rails/rails/releases/tag/v6.1.3.2</a></li>\n<li><a href=\"https://groups.google.com/g/rubyonrails-security/c/8TxqXEtgSF0\">https://groups.google.com/g/rubyonrails-security/c/8TxqXEtgSF0</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-22903\">https://nvd.nist.gov/vuln/detail/CVE-2021-22903</a></li>\n<li><a href=\"https://hackerone.com/reports/1148025\">https://hackerone.com/reports/1148025</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/cve-2021-22903-possible-open-redirect-vulnerability-in-action-pack/77867\">https://discuss.rubyonrails.org/t/cve-2021-22903-possible-open-redirect-vulnerability-in-action-pack/77867</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22903.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-22903.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-5hq2-xf89-9jxq\">https://github.com/advisories/GHSA-5hq2-xf89-9jxq</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-5hq2-xf89-9jxq",
            "title": "[actionpack] Possible Open Redirect Vulnerability in Action Pack",
            "date_modified": "2023-08-17T05:02:22.000Z",
            "date_published": "2021-05-05T19:48:29.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-5hq2-xf89-9jxq"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>Specially crafted \"X-Forwarded-Host\" headers in combination with certain \"allowed host\" formats can cause the Host Authorization middleware in Action Pack to redirect users to a malicious website.</p>\n<p>Impacted applications will have allowed hosts with a leading dot. For example, configuration files that look like this:</p>\n<pre><code>config.hosts &lt;&lt;  '.EXAMPLE.com'\n</code></pre>\n<p>When an allowed host contains a leading dot, a specially crafted Host header can be used to redirect to a malicious website.</p>\n<p>This vulnerability is similar to CVE-2021-22881 and CVE-2021-22942.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset.</p>\n<ul>\n<li>6-0-host-authorzation-open-redirect.patch - Patch for 6.0 series</li>\n<li>6-1-host-authorzation-open-redirect.patch - Patch for 6.1 series</li>\n<li>7-0-host-authorzation-open-redirect.patch - Patch for 7.0 series</li>\n</ul>\n<p>Please note that only the 6.1.Z, 6.0.Z, and 5.2.Z series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2021-44528\">https://nvd.nist.gov/vuln/detail/CVE-2021-44528</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer\">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ?utm_medium=email&amp;utm_source=footer</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107\">https://github.com/rails/rails/commit/aecba3c301b80e9d5a63c30ea1b287bceaf2c107</a></li>\n<li><a href=\"https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021\">https://github.com/rails/rails/blob/v6.1.4.2/actionpack/CHANGELOG.md#rails-6142-december-14-2021</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815\">https://github.com/rails/rails/commit/0fccfb9a3097a9c4260c791f1a40b128517e7815</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2021-44528.yml</a></li>\n<li><a href=\"https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ\">https://groups.google.com/g/ruby-security-ann/c/vG9gz3nk1pM/m/7-NU4MNrDAAJ</a></li>\n<li><a href=\"https://www.debian.org/security/2023/dsa-5372\">https://www.debian.org/security/2023/dsa-5372</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-qphc-hf5q-v8fc\">https://github.com/advisories/GHSA-qphc-hf5q-v8fc</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-qphc-hf5q-v8fc",
            "title": "[actionpack] actionpack Open Redirect in Host Authorization Middleware",
            "date_modified": "2023-08-17T05:02:22.000Z",
            "date_published": "2021-12-14T21:19:08.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-qphc-hf5q-v8fc"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}