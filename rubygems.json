{
    "version": "https://jsonfeed.org/version/1",
    "title": "Security Advisory for Ruby gems hosted at RubyGems.org",
    "home_page_url": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arubygems",
    "feed_url": "https://azu.github.io/github-advisory-database-rss/rubygems.json",
    "description": "Security Advisory for Ruby gems hosted at RubyGems.org on GitHub",
    "items": [
        {
            "content_html": "<h1 id=\"possible-xss-vulnerability-in-action-controller\">Possible XSS Vulnerability in Action Controller</h1>\n<p>There is a possible XSS vulnerability when using the translation helpers\n(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been\nassigned the CVE identifier CVE-2024-26143.</p>\n<p>Versions Affected:  &gt;= 7.0.0.\nNot affected:       &lt; 7.0.0\nFixed Versions:     7.1.3.1, 7.0.8.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a\ncontroller, with a key ending in \"_html\", a <code>:default</code> key which contains\nuntrusted user input, and the resulting string is used in a view, may be\nsusceptible to an XSS vulnerability.</p>\n<p>For example, impacted code will look something like this:</p>\n<pre><code class=\"language-ruby\">class ArticlesController &lt; ApplicationController\n  def show  \n    @message = t(\"message_html\", default: untrusted_input)\n    # The `show` template displays the contents of `@message`\n  end\nend\n</code></pre>\n<p>To reiterate the pre-conditions, applications must:</p>\n<ul>\n<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from\na view)</li>\n<li>Use a key that ends in <code>_html</code></li>\n<li>Use a default value where the default value is untrusted and unescaped input</li>\n<li>Send the text to the victim (whether that's part of a template, or a\n<code>render</code> call)</li>\n</ul>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There are no feasible workarounds for this issue.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>To aid users who aren't able to upgrade immediately we have provided patches for\nthe two supported release series. They are in git-am format and consist of a\nsingle changeset.</p>\n<ul>\n<li>7-0-translate-xss.patch - Patch for 7.0 series</li>\n<li>7-1-translate-xss.patch - Patch for 7.1 series</li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks to <a href=\"https://hackerone.com/ooooooo_q\">ooooooo_q</a> for the patch and fix!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4\">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26143\">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc\">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e\">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947\">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9822-6m93-xqf4\">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9822-6m93-xqf4",
            "title": "[rails] Rails has possible XSS Vulnerability in Action Controller",
            "date_modified": "2024-03-21T21:53:33.000Z",
            "date_published": "2024-02-27T21:41:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9822-6m93-xqf4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h1 id=\"possible-xss-vulnerability-in-action-controller\">Possible XSS Vulnerability in Action Controller</h1>\n<p>There is a possible XSS vulnerability when using the translation helpers\n(<code>translate</code>, <code>t</code>, etc) in Action Controller. This vulnerability has been\nassigned the CVE identifier CVE-2024-26143.</p>\n<p>Versions Affected:  &gt;= 7.0.0.\nNot affected:       &lt; 7.0.0\nFixed Versions:     7.1.3.1, 7.0.8.1</p>\n<h2 id=\"impact\">Impact</h2>\n<p>Applications using translation methods like <code>translate</code>, or <code>t</code> on a\ncontroller, with a key ending in \"_html\", a <code>:default</code> key which contains\nuntrusted user input, and the resulting string is used in a view, may be\nsusceptible to an XSS vulnerability.</p>\n<p>For example, impacted code will look something like this:</p>\n<pre><code class=\"language-ruby\">class ArticlesController &lt; ApplicationController\n  def show  \n    @message = t(\"message_html\", default: untrusted_input)\n    # The `show` template displays the contents of `@message`\n  end\nend\n</code></pre>\n<p>To reiterate the pre-conditions, applications must:</p>\n<ul>\n<li>Use a translation function from a controller (i.e. <em>not</em> I18n.t, or <code>t</code> from\na view)</li>\n<li>Use a key that ends in <code>_html</code></li>\n<li>Use a default value where the default value is untrusted and unescaped input</li>\n<li>Send the text to the victim (whether that's part of a template, or a\n<code>render</code> call)</li>\n</ul>\n<p>All users running an affected release should either upgrade or use one of the\nworkarounds immediately.</p>\n<h2 id=\"releases\">Releases</h2>\n<p>The fixed releases are available at the normal locations.</p>\n<h2 id=\"workarounds\">Workarounds</h2>\n<p>There are no feasible workarounds for this issue.</p>\n<h2 id=\"patches\">Patches</h2>\n<p>To aid users who aren't able to upgrade immediately we have provided patches for\nthe two supported release series. They are in git-am format and consist of a\nsingle changeset.</p>\n<ul>\n<li>7-0-translate-xss.patch - Patch for 7.0 series</li>\n<li>7-1-translate-xss.patch - Patch for 7.1 series</li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks to <a href=\"https://hackerone.com/ooooooo_q\">ooooooo_q</a> for the patch and fix!</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4\">https://github.com/rails/rails/security/advisories/GHSA-9822-6m93-xqf4</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-26143\">https://nvd.nist.gov/vuln/detail/CVE-2024-26143</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc\">https://github.com/rails/rails/commit/4c83b331092a79d58e4adffe4be5f250fa5782cc</a></li>\n<li><a href=\"https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e\">https://github.com/rails/rails/commit/5187a9ef51980ad1b8e81945ebe0462d28f84f9e</a></li>\n<li><a href=\"https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947\">https://discuss.rubyonrails.org/t/possible-xss-vulnerability-in-action-controller/84947</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/actionpack/CVE-2024-26143.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-9822-6m93-xqf4\">https://github.com/advisories/GHSA-9822-6m93-xqf4</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-9822-6m93-xqf4",
            "title": "[rails] Rails has possible XSS Vulnerability in Action Controller",
            "date_modified": "2024-03-21T21:53:33.000Z",
            "date_published": "2024-02-27T21:41:12.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-9822-6m93-xqf4"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri upgrades its dependency libxml2 as follows:</p>\n<ul>\n<li>v1.15.6 upgrades libxml2 to 2.11.7 from 2.11.6</li>\n<li>v1.16.2 upgrades libxml2 to 2.12.5 from 2.12.4</li>\n</ul>\n<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>\n<p>CVE-2024-25062 / <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a></p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n</ul>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if\nthe packaged libraries are being used. If you've overridden defaults at installation time to use\nsystem libraries instead of packaged libraries, you should instead pay attention to your distro's\nlibxml2 release announcements.</p>\n<p>JRuby users are not affected.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>The Nokogiri maintainers have evaluated this as <strong>Moderate</strong>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies\n<code>Nokogiri::XML::Reader</code>):</p>\n<blockquote>\n<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled,\nprocessing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>\n</blockquote>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile\nand link Nokogiri against patched external libxml2 libraries which will also address these same\nissues.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vcc3-rw6f-jv97\">https://github.com/advisories/GHSA-vcc3-rw6f-jv97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vcc3-rw6f-jv97",
            "title": "[nokogiri] Use-after-free in libxml2 via Nokogiri::XML::Reader",
            "date_modified": "2024-03-18T20:38:41.000Z",
            "date_published": "2024-03-18T20:38:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vcc3-rw6f-jv97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>Nokogiri upgrades its dependency libxml2 as follows:</p>\n<ul>\n<li>v1.15.6 upgrades libxml2 to 2.11.7 from 2.11.6</li>\n<li>v1.16.2 upgrades libxml2 to 2.12.5 from 2.12.4</li>\n</ul>\n<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>\n<p>CVE-2024-25062 / <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a></p>\n<ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n</ul>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if\nthe packaged libraries are being used. If you've overridden defaults at installation time to use\nsystem libraries instead of packaged libraries, you should instead pay attention to your distro's\nlibxml2 release announcements.</p>\n<p>JRuby users are not affected.</p>\n<h3 id=\"severity\">Severity</h3>\n<p>The Nokogiri maintainers have evaluated this as <strong>Moderate</strong>.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies\n<code>Nokogiri::XML::Reader</code>):</p>\n<blockquote>\n<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled,\nprocessing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>\n</blockquote>\n<h3 id=\"mitigation\">Mitigation</h3>\n<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile\nand link Nokogiri against patched external libxml2 libraries which will also address these same\nissues.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/nokogiri/GHSA-xc9x-jj77-9p9j.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-vcc3-rw6f-jv97\">https://github.com/advisories/GHSA-vcc3-rw6f-jv97</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-vcc3-rw6f-jv97",
            "title": "[nokogiri] Use-after-free in libxml2 via Nokogiri::XML::Reader",
            "date_modified": "2024-03-18T20:38:41.000Z",
            "date_published": "2024-03-18T20:38:40.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-vcc3-rw6f-jv97"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>The Ruby One Time Password library (ROTP) is an open source library for generating and validating one time passwords. Affected versions had overly permissive default permissions. Users should patch to version 6.3.0. Users unable to patch may correct file permissions after installation.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/mdp/rotp/security/advisories/GHSA-x2h8-qmj4-g62f\">https://github.com/mdp/rotp/security/advisories/GHSA-x2h8-qmj4-g62f</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28862\">https://nvd.nist.gov/vuln/detail/CVE-2024-28862</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rotp/CVE-2024-28862.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/rotp/CVE-2024-28862.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-x2h8-qmj4-g62f\">https://github.com/advisories/GHSA-x2h8-qmj4-g62f</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-x2h8-qmj4-g62f",
            "title": "[rotp] ROTP 6.2.2 and 6.2.1 has 0666 permissions for the .rb files.",
            "date_modified": "2024-03-19T18:29:23.000Z",
            "date_published": "2024-03-18T17:21:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-x2h8-qmj4-g62f"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri upgrades its dependency libxml2 as follows:</p>\n<ul>\n<li>Nokogiri v1.15.6 upgrades libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.11.7\">2.11.7</a> from 2.11.6</li>\n<li>Nokogiri v1.16.2 upgrades libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5\">2.12.5</a> from 2.12.4</li>\n</ul>\n<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>\n<ul>\n<li>CVE-2024-25062 / <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a><ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n</ul>\n</li>\n</ul>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> release announcements.</p>\n<p>JRuby users are not affected.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile\nand link Nokogiri against patched external libxml2 libraries which will also address these same\nissues.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies <code>Nokogiri::XML::Reader</code>):</p>\n<blockquote>\n<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>\n</blockquote>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-02-04 10:35 EST - this GHSA is drafted without complete details about when the upstream issue was introduced; a request is made of libxml2 maintainers for more detailed information</li>\n<li>2024-02-04 10:48 EST - updated GHSA to reflect libxml2 maintainers' confirmation of affected versions</li>\n<li>2024-02-04 11:54 EST - v1.16.2 published, this GHSA made public</li>\n<li>2024-02-05 10:18 EST - updated with MITRE link to the CVE information, and updated \"Impact\" section</li>\n<li>2024-03-16 09:03 EDT - v1.15.6 published (see discussion at <a href=\"https://github.com/sparklemotion/nokogiri/discussions/3146\">https://github.com/sparklemotion/nokogiri/discussions/3146</a>), updated mitigation information</li>\n<li>2024-03-18 22:12 EDT - update \"affected products\" range with v1.15.6 information</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25062\">https://nvd.nist.gov/vuln/detail/CVE-2024-25062</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5\">https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/discussions/3146\">https://github.com/sparklemotion/nokogiri/discussions/3146</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc9x-jj77-9p9j",
            "title": "[nokogiri] Nokogiri update packaged libxml2 to v2.12.5 to resolve CVE-2024-25062",
            "date_modified": "2024-03-19T18:30:32.000Z",
            "date_published": "2024-02-05T20:22:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc9x-jj77-9p9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h2 id=\"summary\">Summary</h2>\n<p>Nokogiri upgrades its dependency libxml2 as follows:</p>\n<ul>\n<li>Nokogiri v1.15.6 upgrades libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.11.7\">2.11.7</a> from 2.11.6</li>\n<li>Nokogiri v1.16.2 upgrades libxml2 to <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5\">2.12.5</a> from 2.12.4</li>\n</ul>\n<p>libxml2 v2.11.7 and v2.12.5 address the following vulnerability:</p>\n<ul>\n<li>CVE-2024-25062 / <a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062\">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25062</a><ul>\n<li>described at <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li>patched by <a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n</ul>\n</li>\n</ul>\n<p>Please note that this advisory only applies to the CRuby implementation of Nokogiri, and only if the <em>packaged</em> libraries are being used. If you've overridden defaults at installation time to use <em>system</em> libraries instead of packaged libraries, you should instead pay attention to your distro's <code>libxml2</code> release announcements.</p>\n<p>JRuby users are not affected.</p>\n<h2 id=\"mitigation\">Mitigation</h2>\n<p>Upgrade to Nokogiri <code>~&gt; 1.15.6</code> or <code>&gt;= 1.16.2</code>.</p>\n<p>Users who are unable to upgrade Nokogiri may also choose a more complicated mitigation: compile\nand link Nokogiri against patched external libxml2 libraries which will also address these same\nissues.</p>\n<h2 id=\"impact\">Impact</h2>\n<p>From the CVE description, this issue applies to the <code>xmlTextReader</code> module (which underlies <code>Nokogiri::XML::Reader</code>):</p>\n<blockquote>\n<p>When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.</p>\n</blockquote>\n<h2 id=\"timeline\">Timeline</h2>\n<ul>\n<li>2024-02-04 10:35 EST - this GHSA is drafted without complete details about when the upstream issue was introduced; a request is made of libxml2 maintainers for more detailed information</li>\n<li>2024-02-04 10:48 EST - updated GHSA to reflect libxml2 maintainers' confirmation of affected versions</li>\n<li>2024-02-04 11:54 EST - v1.16.2 published, this GHSA made public</li>\n<li>2024-02-05 10:18 EST - updated with MITRE link to the CVE information, and updated \"Impact\" section</li>\n<li>2024-03-16 09:03 EDT - v1.15.6 published (see discussion at <a href=\"https://github.com/sparklemotion/nokogiri/discussions/3146\">https://github.com/sparklemotion/nokogiri/discussions/3146</a>), updated mitigation information</li>\n<li>2024-03-18 22:12 EDT - update \"affected products\" range with v1.15.6 information</li>\n</ul>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/sparklemotion/nokogiri/security/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-25062\">https://nvd.nist.gov/vuln/detail/CVE-2024-25062</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970\">https://gitlab.gnome.org/GNOME/libxml2/-/commit/92721970</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/issues/604\">https://gitlab.gnome.org/GNOME/libxml2/-/issues/604</a></li>\n<li><a href=\"https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5\">https://gitlab.gnome.org/GNOME/libxml2/-/releases/v2.12.5</a></li>\n<li><a href=\"https://github.com/sparklemotion/nokogiri/discussions/3146\">https://github.com/sparklemotion/nokogiri/discussions/3146</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-xc9x-jj77-9p9j\">https://github.com/advisories/GHSA-xc9x-jj77-9p9j</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-xc9x-jj77-9p9j",
            "title": "[nokogiri] Nokogiri update packaged libxml2 to v2.12.5 to resolve CVE-2024-25062",
            "date_modified": "2024-03-19T18:30:32.000Z",
            "date_published": "2024-02-05T20:22:56.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-xc9x-jj77-9p9j"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TurboBoost Commands has existing protections in place to guarantee that only public methods on Command classes can be invoked; however, the existing checks aren't as robust as they should be. It's possible for a sophisticated attacker to invoke more methods than should be permitted depending on the the strictness of authorization checks that individual applications enforce. Being able to call some of these methods can have security implications.</p>\n<h4 id=\"details\">Details</h4>\n<p>Commands verify that the class must be a <code>Command</code> and that the method requested is defined as a public method; however, this isn't robust enough to guard against all unwanted code execution. The library should more strictly enforce which methods are considered safe before allowing them to be executed.  </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in the following versions.</p>\n<ul>\n<li>0.1.3<ul>\n<li><a href=\"https://www.npmjs.com/package/@turbo-boost/commands/v/0.1.3\">NPM Package</a></li>\n<li><a href=\"https://rubygems.org/gems/turbo_boost-commands/versions/0.1.3\">Ruby GEM</a></li>\n</ul>\n</li>\n<li>0.2.2<ul>\n<li><a href=\"https://www.npmjs.com/package/@turbo-boost/commands/v/0.2.2\">NPM Package</a></li>\n<li><a href=\"https://rubygems.org/gems/turbo_boost-commands/versions/0.2.2\">Ruby GEM</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You can add this guard to mitigate the issue if running an unpatched version of the library.</p>\n<pre><code class=\"language-ruby\">class ApplicationCommand &lt; TurboBoost::Commands::Command\n  before_command do\n    method_name = params[:name].include?(\"#\") ? params[:name].split(\"#\").last : :perform\n    ancestors = self.class.ancestors[0..self.class.ancestors.index(TurboBoost::Commands::Command) - 1]\n    allowed = ancestors.any? { |a| a.public_instance_methods(false).any? method_name.to_sym }\n    throw :abort unless allowed # ← blocks invocation\n    # raise \"Invalid Command\" unless allowed # ← blocks invocation\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75\">https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28181\">https://nvd.nist.gov/vuln/detail/CVE-2024-28181</a></li>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477\">https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477</a></li>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba\">https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mp76-7w5v-pr75\">https://github.com/advisories/GHSA-mp76-7w5v-pr75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mp76-7w5v-pr75",
            "title": "[turbo_boost-commands] TurboBoost Commands vulnerable to arbitrary method invocation",
            "date_modified": "2024-03-18T16:48:25.000Z",
            "date_published": "2024-03-15T19:53:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mp76-7w5v-pr75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"impact\">Impact</h3>\n<p>TurboBoost Commands has existing protections in place to guarantee that only public methods on Command classes can be invoked; however, the existing checks aren't as robust as they should be. It's possible for a sophisticated attacker to invoke more methods than should be permitted depending on the the strictness of authorization checks that individual applications enforce. Being able to call some of these methods can have security implications.</p>\n<h4 id=\"details\">Details</h4>\n<p>Commands verify that the class must be a <code>Command</code> and that the method requested is defined as a public method; however, this isn't robust enough to guard against all unwanted code execution. The library should more strictly enforce which methods are considered safe before allowing them to be executed.  </p>\n<h3 id=\"patches\">Patches</h3>\n<p>Patched in the following versions.</p>\n<ul>\n<li>0.1.3<ul>\n<li><a href=\"https://www.npmjs.com/package/@turbo-boost/commands/v/0.1.3\">NPM Package</a></li>\n<li><a href=\"https://rubygems.org/gems/turbo_boost-commands/versions/0.1.3\">Ruby GEM</a></li>\n</ul>\n</li>\n<li>0.2.2<ul>\n<li><a href=\"https://www.npmjs.com/package/@turbo-boost/commands/v/0.2.2\">NPM Package</a></li>\n<li><a href=\"https://rubygems.org/gems/turbo_boost-commands/versions/0.2.2\">Ruby GEM</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>You can add this guard to mitigate the issue if running an unpatched version of the library.</p>\n<pre><code class=\"language-ruby\">class ApplicationCommand &lt; TurboBoost::Commands::Command\n  before_command do\n    method_name = params[:name].include?(\"#\") ? params[:name].split(\"#\").last : :perform\n    ancestors = self.class.ancestors[0..self.class.ancestors.index(TurboBoost::Commands::Command) - 1]\n    allowed = ancestors.any? { |a| a.public_instance_methods(false).any? method_name.to_sym }\n    throw :abort unless allowed # ← blocks invocation\n    # raise \"Invalid Command\" unless allowed # ← blocks invocation\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75\">https://github.com/hopsoft/turbo_boost-commands/security/advisories/GHSA-mp76-7w5v-pr75</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28181\">https://nvd.nist.gov/vuln/detail/CVE-2024-28181</a></li>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477\">https://github.com/hopsoft/turbo_boost-commands/commit/337cda7d9222f1f449905454a7374222017a7477</a></li>\n<li><a href=\"https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba\">https://github.com/hopsoft/turbo_boost-commands/commit/88af4fc0ac39cc1799d16c49fab52f6dfbcec9ba</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/turbo_boost-commands/CVE-2024-28181.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-mp76-7w5v-pr75\">https://github.com/advisories/GHSA-mp76-7w5v-pr75</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-mp76-7w5v-pr75",
            "title": "[turbo_boost-commands] TurboBoost Commands vulnerable to arbitrary method invocation",
            "date_modified": "2024-03-18T16:48:25.000Z",
            "date_published": "2024-03-15T19:53:50.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-mp76-7w5v-pr75"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>\n<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>\n<p><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/\">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>\n<ul>\n<li>For Ruby 3.0: Update to uri 0.10.3</li>\n<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>\n</ul>\n<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36617\">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0\">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f\">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3\">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa\">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb\">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6\">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c\">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921\">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230725-0002\">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617\">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hww2-5g85-429m\">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hww2-5g85-429m",
            "title": "[uri] URI gem has ReDoS vulnerability",
            "date_modified": "2024-03-14T22:14:30.000Z",
            "date_published": "2023-06-29T15:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hww2-5g85-429m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>\n<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>\n<p><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/\">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>\n<ul>\n<li>For Ruby 3.0: Update to uri 0.10.3</li>\n<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>\n</ul>\n<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36617\">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0\">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f\">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3\">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa\">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb\">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6\">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c\">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921\">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230725-0002\">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617\">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hww2-5g85-429m\">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hww2-5g85-429m",
            "title": "[uri] URI gem has ReDoS vulnerability",
            "date_modified": "2024-03-14T22:14:30.000Z",
            "date_published": "2023-06-29T15:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hww2-5g85-429m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>\n<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>\n<p><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/\">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>\n<ul>\n<li>For Ruby 3.0: Update to uri 0.10.3</li>\n<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>\n</ul>\n<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36617\">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0\">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f\">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3\">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa\">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb\">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6\">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c\">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921\">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230725-0002\">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617\">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hww2-5g85-429m\">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hww2-5g85-429m",
            "title": "[uri] URI gem has ReDoS vulnerability",
            "date_modified": "2024-03-14T22:14:30.000Z",
            "date_published": "2023-06-29T15:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hww2-5g85-429m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>A ReDoS issue was discovered in the URI component before 0.12.2 for Ruby. The URI parser mishandles invalid URLs that have specific characters. There is an increase in execution time for parsing strings to URI objects with <code>rfc2396_parser.rb</code> and <code>rfc3986_parser.rb</code>.</p>\n<p>NOTE: this issue exists becuse of an incomplete fix for CVE-2023-28755. Version 0.10.3 is also a fixed version.</p>\n<p><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617/\">The Ruby advisory recommends</a> updating the uri gem to 0.12.2. In order to ensure compatibility with the bundled version in older Ruby series, you may update as follows instead:</p>\n<ul>\n<li>For Ruby 3.0: Update to uri 0.10.3</li>\n<li>For Ruby 3.1 and 3.2: Update to uri 0.12.2.</li>\n</ul>\n<p>You can use gem update uri to update it. If you are using bundler, please add gem <code>uri</code>, <code>&gt;= 0.12.2</code> (or other version mentioned above) to your Gemfile.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-36617\">https://nvd.nist.gov/vuln/detail/CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0\">https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f\">https://github.com/ruby/uri/commit/4d02315181d8a485496f1bb107a6ab51d6f3a35f</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3\">https://github.com/ruby/uri/commit/7e33934c91b7f8f3ea7b7a4258b468e19f636bc3</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa\">https://github.com/ruby/uri/commit/ba36c8a3ecad8c16dd3e60a6da9abd768206c8fa</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/uri/CVE-2023-36617.yml</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb\">https://github.com/ruby/uri/commit/05b1e7d026b886e65a60ee35625229da9ec220bb</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6\">https://github.com/ruby/uri/commit/38bf797c488bcb4a37fb322bfa84977981863ec6</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c\">https://github.com/ruby/uri/commit/70794abc162bb15bb934713b5669713d6700d35c</a></li>\n<li><a href=\"https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921\">https://github.com/ruby/uri/commit/9a8e0cc03da964054c2a4ea26b59c53c3bae4921</a></li>\n<li><a href=\"https://security.netapp.com/advisory/ntap-20230725-0002\">https://security.netapp.com/advisory/ntap-20230725-0002</a></li>\n<li><a href=\"https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617\">https://www.ruby-lang.org/en/news/2023/06/29/redos-in-uri-CVE-2023-36617</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-hww2-5g85-429m\">https://github.com/advisories/GHSA-hww2-5g85-429m</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-hww2-5g85-429m",
            "title": "[uri] URI gem has ReDoS vulnerability",
            "date_modified": "2024-03-14T22:14:30.000Z",
            "date_published": "2023-06-29T15:30:34.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-hww2-5g85-429m"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>discordrb is an implementation of the Discord API using Ruby. In discordrb before commit <code>91e13043ffa</code> the <code>encoder.rb</code> file unsafely constructs a shell string using the file parameter, which can potentially leave clients of discordrb vulnerable to command injection. The library is not directly exploitable: the exploit requires that some client of the library calls the vulnerable method with user input. However, if unsafe input reaches the library method, then an attacker can execute arbitrary shell commands on the host machine. Full impact will depend on the permissions of the process running the <code>discordrb</code> library and will likely not be total system access. This issue has been addressed in code, but a new release of the <code>discordrb</code> gem has not been uploaded to rubygems. This issue is also tracked as <code>GHSL-2022-094</code>.</p>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-28102\">https://nvd.nist.gov/vuln/detail/CVE-2023-28102</a></li>\n<li><a href=\"https://github.com/shardlab/discordrb/commit/91e13043ffa89227c3fcdc3408f06da237d28c95\">https://github.com/shardlab/discordrb/commit/91e13043ffa89227c3fcdc3408f06da237d28c95</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/discordrb/CVE-2023-28102.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/discordrb/CVE-2023-28102.yml</a></li>\n<li><a href=\"https://securitylab.github.com/advisories\">https://securitylab.github.com/advisories</a></li>\n<li><a href=\"https://securitylab.github.com/advisories/GHSL-2022-094_discordrb\">https://securitylab.github.com/advisories/GHSL-2022-094_discordrb</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-8832-4mm5-x2r6\">https://github.com/advisories/GHSA-8832-4mm5-x2r6</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-8832-4mm5-x2r6",
            "title": "[discordrb] discordrb OS Command Injection vulnerability",
            "date_modified": "2024-03-14T20:37:58.000Z",
            "date_published": "2024-03-14T20:37:58.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-8832-4mm5-x2r6"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>More methods than expected can be called on reflex instances. Being able to call some of them has security implications.</p>\n<h3 id=\"details\">Details</h3>\n<p>To invoke a reflex a websocket message of the following shape is sent:</p>\n<pre><code class=\"language-json\">{ \n  \"target\": \"[class_name]#[method_name]\", \n  \"args\": [] \n}\n</code></pre>\n<p>The server will proceed to instantiate <code>reflex</code> using the provided <code>class_name</code> as long as it extends <code>StimulusReflex::Reflex</code>.\nIt then attempts to call <code>method_name</code> on the instance with the provided arguments <a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83\">ref</a>:</p>\n<pre><code class=\"language-ruby\">method = reflex.method method_name\nrequired_params = method.parameters.select { |(kind, _)| kind == :req }\noptional_params = method.parameters.select { |(kind, _)| kind == :opt }\n\nif arguments.size &gt;= required_params.size &amp;&amp; arguments.size &lt;= required_params.size + optional_params.size\n  reflex.public_send(method_name, *arguments)\nend\n</code></pre>\n<p>This is problematic as <code>reflex.method(method_name)</code> can be more methods than those explicitly specified by the developer in their reflex class. A good example is the <code>instance_variable_set</code> method.</p>\n<details>\n\n<summary>Read more</summary>\nLet's imagine a reflex that uses `@user` as a trusted variable in an `after_reflex` callback.\n\n<p>This variable can be overwritten using the following message:</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#instance_variable_set\", \n  \"args\": [\"@user\", \"&lt;admin-id&gt;\"]\n}\n</code></pre>\n<p>Here are other interesting methods that were found to be available for the <a href=\"https://github.com/hopsoft/stimulus_reflex_expo/blob/dcce8c36a6782d1e7f57f0e2766a3f6fd770b3b1/app/reflexes/chat_reflex.rb\">ChatReflex sample reflex</a></p>\n<ul>\n<li><code>remote_byebug</code>: bind a debugging server</li>\n<li><code>pry</code>: drop the process in a REPL session</li>\n</ul>\n<p>All in all, only counting  <code>:req</code> and <code>:opt</code> parameters helps.\nFor example around <a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/1f610b636abfed27de2c61104aebd1ac98180d5b/lib/stimulus_reflex/channel.rb#L41\">version 1.0</a> only <code>.arity</code> was checked which allowed access to the <code>system</code> method (<code>.arity == -1</code>)</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#system\", \n  \"args\": [\"[command here]\"]\n}\n</code></pre>\n<p>Using <code>public_send</code> instead of <code>send</code> does not help but the following payloads <strong>do not</strong> work since <code>:rest</code> parameters are not counted in the current version</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#send\", \n  \"args\": [\"system\", \"[command here]\"] \n}\n</code></pre>\n<pre><code class=\"language-json\">{ \n  \"target\": \"ChatReflex#instance_eval\", \n  \"args\": [\"system('[command here]')\"]\n}\n</code></pre>\n</details>\n\n<p>Pre-versions of 3.5.0 added a <code>render_collection</code> method on reflexes with  a <code>:req</code> parameter. Calling this method could lead to arbitrary code execution:</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"StimulusReflex::Reflex#render_collection\", \n  \"args\": [\n    { \"inline\":  \"&lt;% system('[command here]') %&gt;\" }\n  ]\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/stimulus_reflex\">available on RubyGems</a> and on <a href=\"https://npmjs.org/package/stimulus_reflex\">NPM</a>. </p>\n<p>The patched versions are: </p>\n<ul>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2\"><code>3.4.2</code></a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4\"><code>3.5.0.rc4</code></a></li>\n</ul>\n<h3 id=\"workaround\">Workaround</h3>\n<p>You can add this guard to mitigate the issue if running an unpatched version of the library. </p>\n<p>1.) Make sure all your reflexes inherit from the <code>ApplicationReflex</code> class\n2.) Add this <code>before_reflex</code> callback to your <code>app/reflexes/application_reflex.rb</code> file:</p>\n<pre><code class=\"language-ruby\">class ApplicationReflex &lt; StimulusReflex::Reflex\n  before_reflex do\n    ancestors = self.class.ancestors[0..self.class.ancestors.index(StimulusReflex::Reflex) - 1]\n    allowed = ancestors.any? { |a| a.public_instance_methods(false).any?(method_name.to_sym) }\n\n    raise ArgumentError.new(\"Reflex method '#{method_name}' is not defined on class '#{self.class.name}' or on any of its ancestors\") if !allowed\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/security/advisories/GHSA-f78j-4w3g-4q65\">https://github.com/stimulusreflex/stimulus_reflex/security/advisories/GHSA-f78j-4w3g-4q65</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/commit/538582d240439aab76066c72335ea92096cd0c7f\">https://github.com/stimulusreflex/stimulus_reflex/commit/538582d240439aab76066c72335ea92096cd0c7f</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/commit/d823d7348f9ca42eb6df25574f11974e4f5bc88c\">https://github.com/stimulusreflex/stimulus_reflex/commit/d823d7348f9ca42eb6df25574f11974e4f5bc88c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28121\">https://nvd.nist.gov/vuln/detail/CVE-2024-28121</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83\">https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2\">https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4\">https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2024/Mar/16\">http://seclists.org/fulldisclosure/2024/Mar/16</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stimulus_reflex/CVE-2024-28121.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stimulus_reflex/CVE-2024-28121.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f78j-4w3g-4q65\">https://github.com/advisories/GHSA-f78j-4w3g-4q65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f78j-4w3g-4q65",
            "title": "[stimulus_reflex] StimulusReflex arbitrary method call",
            "date_modified": "2024-03-18T18:33:44.000Z",
            "date_published": "2024-03-12T15:44:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f78j-4w3g-4q65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<h3 id=\"summary\">Summary</h3>\n<p>More methods than expected can be called on reflex instances. Being able to call some of them has security implications.</p>\n<h3 id=\"details\">Details</h3>\n<p>To invoke a reflex a websocket message of the following shape is sent:</p>\n<pre><code class=\"language-json\">{ \n  \"target\": \"[class_name]#[method_name]\", \n  \"args\": [] \n}\n</code></pre>\n<p>The server will proceed to instantiate <code>reflex</code> using the provided <code>class_name</code> as long as it extends <code>StimulusReflex::Reflex</code>.\nIt then attempts to call <code>method_name</code> on the instance with the provided arguments <a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83\">ref</a>:</p>\n<pre><code class=\"language-ruby\">method = reflex.method method_name\nrequired_params = method.parameters.select { |(kind, _)| kind == :req }\noptional_params = method.parameters.select { |(kind, _)| kind == :opt }\n\nif arguments.size &gt;= required_params.size &amp;&amp; arguments.size &lt;= required_params.size + optional_params.size\n  reflex.public_send(method_name, *arguments)\nend\n</code></pre>\n<p>This is problematic as <code>reflex.method(method_name)</code> can be more methods than those explicitly specified by the developer in their reflex class. A good example is the <code>instance_variable_set</code> method.</p>\n<details>\n\n<summary>Read more</summary>\nLet's imagine a reflex that uses `@user` as a trusted variable in an `after_reflex` callback.\n\n<p>This variable can be overwritten using the following message:</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#instance_variable_set\", \n  \"args\": [\"@user\", \"&lt;admin-id&gt;\"]\n}\n</code></pre>\n<p>Here are other interesting methods that were found to be available for the <a href=\"https://github.com/hopsoft/stimulus_reflex_expo/blob/dcce8c36a6782d1e7f57f0e2766a3f6fd770b3b1/app/reflexes/chat_reflex.rb\">ChatReflex sample reflex</a></p>\n<ul>\n<li><code>remote_byebug</code>: bind a debugging server</li>\n<li><code>pry</code>: drop the process in a REPL session</li>\n</ul>\n<p>All in all, only counting  <code>:req</code> and <code>:opt</code> parameters helps.\nFor example around <a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/1f610b636abfed27de2c61104aebd1ac98180d5b/lib/stimulus_reflex/channel.rb#L41\">version 1.0</a> only <code>.arity</code> was checked which allowed access to the <code>system</code> method (<code>.arity == -1</code>)</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#system\", \n  \"args\": [\"[command here]\"]\n}\n</code></pre>\n<p>Using <code>public_send</code> instead of <code>send</code> does not help but the following payloads <strong>do not</strong> work since <code>:rest</code> parameters are not counted in the current version</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"ChatReflex#send\", \n  \"args\": [\"system\", \"[command here]\"] \n}\n</code></pre>\n<pre><code class=\"language-json\">{ \n  \"target\": \"ChatReflex#instance_eval\", \n  \"args\": [\"system('[command here]')\"]\n}\n</code></pre>\n</details>\n\n<p>Pre-versions of 3.5.0 added a <code>render_collection</code> method on reflexes with  a <code>:req</code> parameter. Calling this method could lead to arbitrary code execution:</p>\n<pre><code class=\"language-json\">{\n  \"target\": \"StimulusReflex::Reflex#render_collection\", \n  \"args\": [\n    { \"inline\":  \"&lt;% system('[command here]') %&gt;\" }\n  ]\n}\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/stimulus_reflex\">available on RubyGems</a> and on <a href=\"https://npmjs.org/package/stimulus_reflex\">NPM</a>. </p>\n<p>The patched versions are: </p>\n<ul>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2\"><code>3.4.2</code></a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4\"><code>3.5.0.rc4</code></a></li>\n</ul>\n<h3 id=\"workaround\">Workaround</h3>\n<p>You can add this guard to mitigate the issue if running an unpatched version of the library. </p>\n<p>1.) Make sure all your reflexes inherit from the <code>ApplicationReflex</code> class\n2.) Add this <code>before_reflex</code> callback to your <code>app/reflexes/application_reflex.rb</code> file:</p>\n<pre><code class=\"language-ruby\">class ApplicationReflex &lt; StimulusReflex::Reflex\n  before_reflex do\n    ancestors = self.class.ancestors[0..self.class.ancestors.index(StimulusReflex::Reflex) - 1]\n    allowed = ancestors.any? { |a| a.public_instance_methods(false).any?(method_name.to_sym) }\n\n    raise ArgumentError.new(\"Reflex method '#{method_name}' is not defined on class '#{self.class.name}' or on any of its ancestors\") if !allowed\n  end\nend\n</code></pre>\n<h3 id=\"references\">References</h3>\n<ul>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/security/advisories/GHSA-f78j-4w3g-4q65\">https://github.com/stimulusreflex/stimulus_reflex/security/advisories/GHSA-f78j-4w3g-4q65</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/commit/538582d240439aab76066c72335ea92096cd0c7f\">https://github.com/stimulusreflex/stimulus_reflex/commit/538582d240439aab76066c72335ea92096cd0c7f</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/commit/d823d7348f9ca42eb6df25574f11974e4f5bc88c\">https://github.com/stimulusreflex/stimulus_reflex/commit/d823d7348f9ca42eb6df25574f11974e4f5bc88c</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28121\">https://nvd.nist.gov/vuln/detail/CVE-2024-28121</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83\">https://github.com/stimulusreflex/stimulus_reflex/blob/0211cad7d60fe96838587f159d657e44cee51b9b/app/channels/stimulus_reflex/channel.rb#L83</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2\">https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.4.2</a></li>\n<li><a href=\"https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4\">https://github.com/stimulusreflex/stimulus_reflex/releases/tag/v3.5.0.rc4</a></li>\n<li><a href=\"http://seclists.org/fulldisclosure/2024/Mar/16\">http://seclists.org/fulldisclosure/2024/Mar/16</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stimulus_reflex/CVE-2024-28121.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/stimulus_reflex/CVE-2024-28121.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-f78j-4w3g-4q65\">https://github.com/advisories/GHSA-f78j-4w3g-4q65</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-f78j-4w3g-4q65",
            "title": "[stimulus_reflex] StimulusReflex arbitrary method call",
            "date_modified": "2024-03-18T18:33:44.000Z",
            "date_published": "2024-03-12T15:44:49.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-f78j-4w3g-4q65"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all <code>1.x</code> minor versions. The patched versions are:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.1\">1.9.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.2\">1.8.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.1\">1.7.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.2\">1.6.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.2\">1.5.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.1\">1.4.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.3.3\">1.3.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.2.2\">1.2.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.1.1\">1.1.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.0.1\">1.0.1</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\"><code>aa50c60</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28199\">https://nvd.nist.gov/vuln/detail/CVE-2024-28199</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\">https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-242p-4v39-2v8g\">https://github.com/advisories/GHSA-242p-4v39-2v8g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g",
            "title": "[phlex] Cross-site Scripting (XSS) possible with maliciously formed HTML attribute names and values in Phlex",
            "date_modified": "2024-03-14T21:40:43.000Z",
            "date_published": "2024-03-12T15:39:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all <code>1.x</code> minor versions. The patched versions are:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.1\">1.9.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.2\">1.8.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.1\">1.7.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.2\">1.6.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.2\">1.5.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.1\">1.4.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.3.3\">1.3.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.2.2\">1.2.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.1.1\">1.1.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.0.1\">1.0.1</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\"><code>aa50c60</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28199\">https://nvd.nist.gov/vuln/detail/CVE-2024-28199</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\">https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-242p-4v39-2v8g\">https://github.com/advisories/GHSA-242p-4v39-2v8g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g",
            "title": "[phlex] Cross-site Scripting (XSS) possible with maliciously formed HTML attribute names and values in Phlex",
            "date_modified": "2024-03-14T21:40:43.000Z",
            "date_published": "2024-03-12T15:39:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all <code>1.x</code> minor versions. The patched versions are:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.1\">1.9.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.2\">1.8.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.1\">1.7.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.2\">1.6.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.2\">1.5.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.1\">1.4.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.3.3\">1.3.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.2.2\">1.2.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.1.1\">1.1.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.0.1\">1.0.1</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\"><code>aa50c60</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28199\">https://nvd.nist.gov/vuln/detail/CVE-2024-28199</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\">https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-242p-4v39-2v8g\">https://github.com/advisories/GHSA-242p-4v39-2v8g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g",
            "title": "[phlex] Cross-site Scripting (XSS) possible with maliciously formed HTML attribute names and values in Phlex",
            "date_modified": "2024-03-14T21:40:43.000Z",
            "date_published": "2024-03-12T15:39:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g"
            },
            "tags": [
                "severity"
            ]
        },
        {
            "content_html": "<p>There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks.</p>\n<h3 id=\"impact\">Impact</h3>\n<p>If you render an <code>&lt;a&gt;</code> tag with an <code>href</code> attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user.</p>\n<pre><code class=\"language-ruby\">a(href: user_profile) { \"Profile\" }\n</code></pre>\n<p>If you splat user-provided attributes when rendering any HTML or SVG tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user.</p>\n<pre><code class=\"language-ruby\">h1(**JSON.parse(user_attributes))\n</code></pre>\n<h3 id=\"patches\">Patches</h3>\n<p>Patches are <a href=\"https://rubygems.org/gems/phlex\">available on RubyGems</a> for all <code>1.x</code> minor versions. The patched versions are:</p>\n<ul>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.9.1\">1.9.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.8.2\">1.8.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.7.1\">1.7.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.6.2\">1.6.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.5.2\">1.5.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.4.1\">1.4.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.3.3\">1.3.3</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.2.2\">1.2.2</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.1.1\">1.1.1</a></li>\n<li><a href=\"https://rubygems.org/gems/phlex/versions/1.0.1\">1.0.1</a></li>\n</ul>\n<p>If you are on <code>main</code>, it has been patched since <a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\"><code>aa50c60</code></a></p>\n<h3 id=\"workarounds\">Workarounds</h3>\n<p>Configuring a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a> that does not allow <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\"><code>unsafe-inline</code></a> would effectively prevent this vulnerability from being exploited.</p>\n<h3 id=\"references\">References</h3>\n<p>In addition to upgrading to a patched version of Phlex, we strongly recommend configuring a Content Security Policy header that does not allow <code>unsafe-inline</code>. Here’s how you can configure a Content Security Policy header in Rails. <a href=\"https://guides.rubyonrails.org/security.html#content-security-policy-header\">https://guides.rubyonrails.org/security.html#content-security-policy-header</a></p>\n<h3 id=\"references-1\">References</h3>\n<ul>\n<li><a href=\"https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g\">https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g</a></li>\n<li><a href=\"https://nvd.nist.gov/vuln/detail/CVE-2024-28199\">https://nvd.nist.gov/vuln/detail/CVE-2024-28199</a></li>\n<li><a href=\"https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1\">https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy#unsafe-inline</a></li>\n<li><a href=\"https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml\">https://github.com/rubysec/ruby-advisory-db/blob/master/gems/phlex/CVE-2024-28199.yml</a></li>\n<li><a href=\"https://github.com/advisories/GHSA-242p-4v39-2v8g\">https://github.com/advisories/GHSA-242p-4v39-2v8g</a></li>\n</ul>\n",
            "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g",
            "title": "[phlex] Cross-site Scripting (XSS) possible with maliciously formed HTML attribute names and values in Phlex",
            "date_modified": "2024-03-14T21:40:43.000Z",
            "date_published": "2024-03-12T15:39:46.000Z",
            "author": {
                "name": "GitHub",
                "url": "https://github.com/advisories/GHSA-242p-4v39-2v8g"
            },
            "tags": [
                "severity"
            ]
        }
    ]
}